{
    "name": "s_m_CLM_DW_Load_Claim_Representative_Subrogation",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_Load_Claim_Representative_Subrogation",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Claim_Rep_AK_id AS (\n\tSELECT\n\tclaim_rep_ak_id,\n\tclaim_rep_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_rep_ak_id as claim_rep_ak_id\r\n\t\t, ltrim(rtrim(a.claim_rep_key)) as claim_rep_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tand a.source_sys_id\t = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_key ORDER BY claim_rep_ak_id) = 1\n),\nSQ_clm_subrogation_stage AS (\n\tSELECT\n\t\tclm_subrogation_stage_id,\n\t\ttch_claim_nbr,\n\t\ttch_claimant_id,\n\t\tobject_type_cd,\n\t\tobject_seq_nbr,\n\t\tcov_type_cd,\n\t\tcov_seq_nbr,\n\t\tbur_cause_loss,\n\t\tinsd_deduct,\n\t\tref_subro_dt,\n\t\tgeneral_comment,\n\t\tinstall_reached,\n\t\tamt_of_agreement,\n\t\tinstall_amt_month,\n\t\tstart_pmt_dt,\n\t\tupdate_ts,\n\t\tupdate_user_id,\n\t\tcreate_ts,\n\t\tcreate_user_id,\n\t\tclosure_date,\n\t\tsubro_rep_clt_id,\n\t\tsubro_mgr_clt_id,\n\t\treferring_adj_id,\n\t\tfile_status,\n\t\tdeduct_has_been,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id\n\tFROM clm_subrogation_stage\n),\nEXP_source_anchor AS (\n\tSELECT\n\tclm_subrogation_stage_id,\n\ttch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr)))\n\tIFF(LTRIM(RTRIM(tch_claim_nbr)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr))) AS tch_claim_nbr_out,\n\ttch_claimant_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claimant_id))) OR LENGTH(LTRIM(RTRIM(tch_claimant_id))) = 0, 'N/A', LTRIM(RTRIM(tch_claimant_id)))\n\tIFF(LTRIM(RTRIM(tch_claimant_id)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_claimant_id))) = 0, 'N/A', LTRIM(RTRIM(tch_claimant_id))) AS tch_claimant_id_out,\n\tobject_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(object_type_cd))) OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd)))\n\tIFF(LTRIM(RTRIM(object_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd))) AS object_type_cd_out,\n\tobject_seq_nbr,\n\tcov_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(cov_type_cd))) OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd)))\n\tIFF(LTRIM(RTRIM(cov_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd))) AS cov_type_cd_out,\n\tcov_seq_nbr,\n\tbur_cause_loss,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(bur_cause_loss))) OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A',  SUBSTR(bur_cause_loss, 1,2))\n\tIFF(LTRIM(RTRIM(bur_cause_loss)) IS NULL OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A', SUBSTR(bur_cause_loss, 1, 2)) AS bur_cause_loss_out,\n\t-- *INF*: IIF(ISNULL(bur_cause_loss) OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3,1))\n\tIFF(bur_cause_loss IS NULL OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3, 1)) AS reserve_category_out,\n\tsubro_rep_clt_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(subro_rep_clt_id))) OR LENGTH(LTRIM(RTRIM(subro_rep_clt_id))) = 0, 'N/A', LTRIM(RTRIM(subro_rep_clt_id)))\n\tIFF(LTRIM(RTRIM(subro_rep_clt_id)) IS NULL OR LENGTH(LTRIM(RTRIM(subro_rep_clt_id))) = 0, 'N/A', LTRIM(RTRIM(subro_rep_clt_id))) AS subro_rep_clt_id_out,\n\tsubro_mgr_clt_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(subro_mgr_clt_id))) OR LENGTH(LTRIM(RTRIM(subro_mgr_clt_id)))  = 0 , 'N/A', LTRIM(RTRIM(subro_mgr_clt_id)))\n\tIFF(LTRIM(RTRIM(subro_mgr_clt_id)) IS NULL OR LENGTH(LTRIM(RTRIM(subro_mgr_clt_id))) = 0, 'N/A', LTRIM(RTRIM(subro_mgr_clt_id))) AS subro_mgr_clt_id_out,\n\treferring_adj_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(referring_adj_id))) OR LENGTH(LTRIM(RTRIM(referring_adj_id))) = 0, 'N/A', LTRIM(RTRIM(referring_adj_id)))\n\tIFF(LTRIM(RTRIM(referring_adj_id)) IS NULL OR LENGTH(LTRIM(RTRIM(referring_adj_id))) = 0, 'N/A', LTRIM(RTRIM(referring_adj_id))) AS referring_adj_id_out\n\tFROM SQ_clm_subrogation_stage\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\toffset_onset_ind,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nLKP_claimant_coverage_detail AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\ts3p_ins_line_code,\n\ts3p_unit_type_code,\n\ts3p_wc_class_descript,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\treserve_ctgry,\n\tcause_of_loss,\n\tclaimant_cov_eff_date,\n\tclaimant_cov_exp_date,\n\trisk_type_ind,\n\ts3p_unit_descript,\n\tspec_pers_prop_use_code,\n\tpkg_ded_amt,\n\tpkg_lmt_amt,\n\tmanual_entry_ind,\n\tunit_veh_registration_state_code,\n\tunit_veh_stated_amt,\n\tunit_dam_descript,\n\tunit_veh_yr,\n\tunit_veh_make,\n\tunit_vin_num,\n\tCoverageGUID,\n\tpms_type_bureau_code,\n\tIN_claim_party_occurrence_ak_id,\n\tIN_COB_OBJECT_TYPE_CD,\n\tIN_COB_OBJECT_SEQ_NBR,\n\tIN_MAJOR_PERIL_CODE1,\n\tIN_s3p_PKG_SEQ_NUM1,\n\tIN_cause_of_loss_out,\n\tIN_reserve_ctgry_out\n\tFROM (\n\t\tSELECT a.claimant_cov_det_ak_id as claimant_cov_det_ak_id,\r\n\t\tLTRIM(RTRIM(a.s3p_ins_line_code)) as s3p_ins_line_code, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_type_code)) as s3p_unit_type_code, \r\n\t\tLTRIM(RTRIM(a.s3p_wc_class_descript)) as s3p_wc_class_descript, \r\n\t\tLTRIM(RTRIM(a.loc_unit_num)) as loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.sub_loc_unit_num)) as sub_loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.ins_line)) as ins_line, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp)) as risk_unit_grp, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num, \r\n\t\tLTRIM(RTRIM(a.risk_unit)) as risk_unit, \r\n\t\tLTRIM(RTRIM(a.risk_unit_seq_num)) as risk_unit_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_seq)) as major_peril_seq, \r\n\t\ta.claimant_cov_eff_date as claimant_cov_eff_date, \r\n\t\ta.claimant_cov_exp_date as claimant_cov_exp_date, \r\n\t\tLTRIM(RTRIM(a.risk_type_ind)) as risk_type_ind, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_descript)) as s3p_unit_descript, \r\n\t\tLTRIM(RTRIM(a.spec_pers_prop_use_code)) as spec_pers_prop_use_code, \r\n\t\ta.pkg_ded_amt as pkg_ded_amt, \r\n\t\ta.pkg_lmt_amt as pkg_lmt_amt, \r\n\t\tLTRIM(RTRIM(a.manual_entry_ind)) as manual_entry_ind,\r\n\t\tLTRIM(RTRIM(a.unit_veh_registration_state_code)) as unit_veh_registration_state_code, \r\n\t\ta.unit_veh_stated_amt as unit_veh_stated_amt, \r\n\t\tLTRIM(RTRIM(a.unit_dam_descript)) as unit_dam_descript, \r\n\t\ta.unit_veh_yr as unit_veh_yr, \r\n\t\tLTRIM(RTRIM(a.unit_veh_make)) as unit_veh_make, \r\n\t\tLTRIM(RTRIM(a.unit_vin_num)) as unit_vin_num, \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(a.s3p_object_type_code)) as s3p_object_type_code, \r\n\t\ta.s3p_object_seq_num as s3p_object_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_code)) as major_peril_code, \r\n\t\ta.s3p_pkg_seq_num as s3p_pkg_seq_num, \r\n\t\ta.cause_of_loss as cause_of_loss, \r\n\t\ta.reserve_ctgry as reserve_ctgry,\r\n\t\ta.CoverageGUID as CoverageGUID, \r\n\t\tLTRIM(RTRIM(a.pms_type_bureau_code)) as pms_type_bureau_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,s3p_object_type_code,s3p_object_seq_num,major_peril_code,s3p_pkg_seq_num,cause_of_loss,reserve_ctgry ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_claim_subrogation AS (\n\tSELECT\n\tclaim_subrogation_ak_id,\n\tclaimant_cov_det_ak_id\n\tFROM (\n\t\tSELECT a.claim_subrogation_ak_id as claim_subrogation_ak_id, \r\n\t\ta.claimant_cov_det_ak_id as claimant_cov_det_ak_id \r\n\t\tFROM claim_subrogation a\r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id ORDER BY claim_subrogation_ak_id) = 1\n),\nEXP_gather_values AS (\n\tSELECT\n\tLKP_claimant_coverage_detail.claimant_cov_det_ak_id,\n\tEXP_source_anchor.subro_rep_clt_id_out,\n\tEXP_source_anchor.subro_mgr_clt_id_out,\n\tEXP_source_anchor.referring_adj_id_out,\n\tLKP_claim_subrogation.claim_subrogation_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_AK_ID(subro_rep_clt_id_out)\n\tLKP_CLAIM_REP_AK_ID_subro_rep_clt_id_out.claim_rep_ak_id AS v_subro_rep_ak_id,\n\t-- *INF*: IIF(ISNULL(v_subro_rep_ak_id), '-2', v_subro_rep_ak_id)\n\tIFF(v_subro_rep_ak_id IS NULL, '-2', v_subro_rep_ak_id) AS subro_rep_ak_id_out,\n\t'S' AS subro_rep_role_code,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_AK_ID(referring_adj_id_out)\n\tLKP_CLAIM_REP_AK_ID_referring_adj_id_out.claim_rep_ak_id AS v_referring_rep_ak_id,\n\t-- *INF*: IIF(ISNULL(v_referring_rep_ak_id), '-2', v_referring_rep_ak_id)\n\tIFF(v_referring_rep_ak_id IS NULL, '-2', v_referring_rep_ak_id) AS referring_rep_ak_id_out,\n\t'R' AS referring_rep_role_code,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_AK_ID(subro_mgr_clt_id_out)\n\tLKP_CLAIM_REP_AK_ID_subro_mgr_clt_id_out.claim_rep_ak_id AS v_subro_mgr_ak_id,\n\t-- *INF*: IIF(ISNULL(v_subro_mgr_ak_id), '-2', v_subro_mgr_ak_id)\n\tIFF(v_subro_mgr_ak_id IS NULL, '-2', v_subro_mgr_ak_id) AS subro_mgr_ak_id_out,\n\t'M' AS manager_role_code\n\tFROM EXP_source_anchor\n\tLEFT JOIN LKP_claim_subrogation\n\tON LKP_claim_subrogation.claimant_cov_det_ak_id = LKP_claimant_coverage_detail.claimant_cov_det_ak_id\n\tLEFT JOIN LKP_claimant_coverage_detail\n\tON LKP_claimant_coverage_detail.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id AND LKP_claimant_coverage_detail.s3p_object_type_code = EXP_source_anchor.object_type_cd_out AND LKP_claimant_coverage_detail.s3p_object_seq_num = EXP_source_anchor.object_seq_nbr AND LKP_claimant_coverage_detail.major_peril_code = EXP_source_anchor.cov_type_cd_out AND LKP_claimant_coverage_detail.s3p_pkg_seq_num = EXP_source_anchor.cov_seq_nbr AND LKP_claimant_coverage_detail.cause_of_loss = EXP_source_anchor.bur_cause_loss_out AND LKP_claimant_coverage_detail.reserve_ctgry = EXP_source_anchor.reserve_category_out\n\tLEFT JOIN LKP_CLAIM_REP_AK_ID LKP_CLAIM_REP_AK_ID_subro_rep_clt_id_out\n\tON LKP_CLAIM_REP_AK_ID_subro_rep_clt_id_out.claim_rep_key = subro_rep_clt_id_out\n\n\tLEFT JOIN LKP_CLAIM_REP_AK_ID LKP_CLAIM_REP_AK_ID_referring_adj_id_out\n\tON LKP_CLAIM_REP_AK_ID_referring_adj_id_out.claim_rep_key = referring_adj_id_out\n\n\tLEFT JOIN LKP_CLAIM_REP_AK_ID LKP_CLAIM_REP_AK_ID_subro_mgr_clt_id_out\n\tON LKP_CLAIM_REP_AK_ID_subro_mgr_clt_id_out.claim_rep_key = subro_mgr_clt_id_out\n\n),\nUnion_split_rows AS (\n\tSELECT claim_subrogation_ak_id, subro_rep_ak_id_out AS rep_ak_id, subro_rep_role_code AS rep_role_code\n\tFROM \n\tUNION\n\tSELECT claim_subrogation_ak_id, subro_mgr_ak_id_out AS rep_ak_id, manager_role_code AS rep_role_code\n\tFROM \n\tUNION\n\tSELECT claim_subrogation_ak_id, referring_rep_ak_id_out AS rep_ak_id, referring_rep_role_code AS rep_role_code\n\tFROM \n),\nEXPTRANS AS (\n\tSELECT\n\tclaim_subrogation_ak_id,\n\trep_ak_id,\n\trep_role_code\n\tFROM Union_split_rows\n),\nLKP_claim_representative_subrogation AS (\n\tSELECT\n\tclaim_rep_subrogation_ak_id,\n\tclaim_rep_ak_id,\n\tclaim_subrogation_ak_id,\n\tclaim_rep_role_code\n\tFROM (\n\t\tSELECT \r\n\t\tA.claim_rep_subrogation_id AS claim_rep_subrogation_id,\r\n\t\tA.eff_from_date AS eff_from_date,\r\n\t\tA.eff_to_date AS eff_to_date,\r\n\t\tA.claim_subrogation_ak_id AS claim_subrogation_ak_id,\r\n\t\tA.claim_rep_ak_id AS claim_rep_ak_id,\r\n\t\tA.claim_rep_subrogation_ak_id AS claim_rep_subrogation_ak_id,\r\n\t\tA.claim_rep_role_code AS claim_rep_role_code\r\n\t\tFROM   claim_representative_subrogation A\r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_subrogation_ak_id,claim_rep_role_code ORDER BY claim_rep_subrogation_ak_id) = 1\n),\nEXP_detect_changes AS (\n\tSELECT\n\tLKP_claim_representative_subrogation.claim_rep_subrogation_ak_id,\n\tLKP_claim_representative_subrogation.claim_rep_ak_id AS old_claim_rep_ak_id,\n\tEXPTRANS.claim_subrogation_ak_id,\n\tEXPTRANS.rep_ak_id,\n\tEXPTRANS.rep_role_code,\n\t-- *INF*: IIF(ISNULL(claim_rep_subrogation_ak_id), 'NEW',\r\n\t-- IIF(rep_ak_id != old_claim_rep_ak_id, 'UPDATE', 'NOCHANGE'))\n\tIFF(claim_rep_subrogation_ak_id IS NULL, 'NEW', IFF(rep_ak_id != old_claim_rep_ak_id, 'UPDATE', 'NOCHANGE')) AS changed_flag\n\tFROM EXPTRANS\n\tLEFT JOIN LKP_claim_representative_subrogation\n\tON LKP_claim_representative_subrogation.claim_subrogation_ak_id = EXPTRANS.claim_subrogation_ak_id AND LKP_claim_representative_subrogation.claim_rep_role_code = EXPTRANS.rep_role_code\n),\nFIL_inserts AS (\n\tSELECT\n\tclaim_rep_subrogation_ak_id, \n\tclaim_subrogation_ak_id, \n\trep_ak_id, \n\trep_role_code, \n\tchanged_flag\n\tFROM EXP_detect_changes\n\tWHERE changed_flag <> 'NOCHANGE'\n),\nSEQ_claim_rep_subrogation_ak_id AS (\n\tCREATE SEQUENCE SEQ_claim_rep_subrogation_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_set_vlaues AS (\n\tSELECT\n\tSEQ_claim_rep_subrogation_ak_id.NEXTVAL,\n\tclaim_rep_subrogation_ak_id,\n\tclaim_subrogation_ak_id,\n\trep_ak_id,\n\trep_role_code,\n\tchanged_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tsysdate AS created_modified_Date,\n\t-- *INF*: IIF(ISNULL(claim_rep_subrogation_ak_id), NEXTVAL, claim_rep_subrogation_ak_id)\n\tIFF(claim_rep_subrogation_ak_id IS NULL, NEXTVAL, claim_rep_subrogation_ak_id) AS claim_rep_subrogation_ak_id1\n\tFROM FIL_inserts\n),\nclaim_representative_subrogation_insert AS (\n\tINSERT INTO claim_representative_subrogation\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_rep_subrogation_ak_id, claim_subrogation_ak_id, claim_rep_ak_id, claim_rep_role_code)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tcreated_modified_Date AS CREATED_DATE, \n\tcreated_modified_Date AS MODIFIED_DATE, \n\tclaim_rep_subrogation_ak_id1 AS CLAIM_REP_SUBROGATION_AK_ID, \n\tCLAIM_SUBROGATION_AK_ID, \n\trep_ak_id AS CLAIM_REP_AK_ID, \n\trep_role_code AS CLAIM_REP_ROLE_CODE\n\tFROM EXP_set_vlaues\n),\nSQ_claim_representative_subrogation AS (\n\tSELECT   a.claim_rep_subrogation_id,\r\n\ta.eff_from_date,\r\n\ta.eff_to_date,\r\n\ta.claim_rep_subrogation_ak_id,\r\n\ta.claim_subrogation_ak_id,\r\n\ta.claim_rep_ak_id,\r\n\ta.claim_rep_role_code\r\n\tFROM     @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_subrogation A\r\n\tWHERE    a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tAND      EXISTS\r\n\t(SELECT  1\r\n\tFROM     @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_subrogation B\r\n\tWHERE    B.source_sys_id  = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tAND B.crrnt_snpsht_flag  = '1'\r\n\tAND A.claim_rep_subrogation_ak_id = B.claim_rep_subrogation_ak_id\r\n\tAND A.claim_subrogation_ak_id  = B.claim_subrogation_ak_id\r\n\tAND  A.claim_rep_role_code  = B.claim_rep_role_code\r\n\tGROUP BY claim_rep_subrogation_ak_id, claim_subrogation_ak_id, claim_rep_role_code\r\n\tHAVING   COUNT(*) > 1)\r\n\tORDER BY claim_rep_subrogation_ak_id, claim_subrogation_ak_id,   claim_rep_role_code,  eff_from_date DESC\n),\nEXPTRANS1 AS (\n\tSELECT\n\tclaim_rep_subrogation_id,\n\teff_from_date,\n\teff_to_date,\n\tclaim_rep_subrogation_ak_id,\n\tclaim_subrogation_ak_id,\n\tclaim_rep_ak_id,\n\tclaim_rep_role_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_rep_subrogation_ak_id = v_prev_row_claim_rep_subrogation_ak_id AND claim_rep_role_code = v_prev_row_claim_rep_role_code, ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),\r\n\t-- \teff_to_date)\n\tDECODE(TRUE,\n\tclaim_rep_subrogation_ak_id = v_prev_row_claim_rep_subrogation_ak_id AND claim_rep_role_code = v_prev_row_claim_rep_role_code, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\teff_to_date) AS v_new_eff_to_date,\n\tv_new_eff_to_date AS new_eff_to_date,\n\t0 AS new_crrnt_snpsht_flag,\n\tsysdate AS new_modified_date,\n\tclaim_rep_subrogation_ak_id AS v_prev_row_claim_rep_subrogation_ak_id,\n\teff_from_date AS v_prev_row_eff_from_date,\n\tclaim_rep_role_code AS v_prev_row_claim_rep_role_code\n\tFROM SQ_claim_representative_subrogation\n),\nFILTRANS AS (\n\tSELECT\n\tclaim_rep_subrogation_id, \n\teff_to_date, \n\tclaim_rep_subrogation_ak_id, \n\tclaim_subrogation_ak_id, \n\tclaim_rep_ak_id, \n\tclaim_rep_role_code, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_date\n\tFROM EXPTRANS1\n\tWHERE eff_to_date <> new_eff_to_date\n),\nUPDTRANS AS (\n\tSELECT\n\tclaim_rep_subrogation_id, \n\teff_to_date, \n\tclaim_rep_subrogation_ak_id, \n\tclaim_subrogation_ak_id, \n\tclaim_rep_ak_id, \n\tclaim_rep_role_code, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_date\n\tFROM FILTRANS\n),\nclaim_representative_subrogation_update AS (\n\tMERGE INTO claim_representative_subrogation AS T\n\tUSING UPDTRANS AS S\n\tON T.claim_rep_subrogation_id = S.claim_rep_subrogation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.new_crrnt_snpsht_flag, T.eff_to_date = S.new_eff_to_date, T.modified_date = S.new_modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}