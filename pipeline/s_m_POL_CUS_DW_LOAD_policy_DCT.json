{
    "name": "s_m_POL_CUS_DW_LOAD_policy_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_policy_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_AgencyEmployee AS (\n\tSELECT\n\tProducerCode,\n\tAgencyEmployeeAKID,\n\tPolicyNumber,\n\tPolicyVersion,\n\tSessionId\n\tFROM (\n\t\tselect A.ProducerCode as ProducerCode ,\r\n\t\tB.PolicyNumber as PolicyNumber,\r\n\t\tB.PolicyVersion as PolicyVersion,\r\n\t\tB.SessionId as SessionId,\r\n\t\tA.AgencyEmployeeAKID as AgencyEmployeeAKID\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.AgencyEmployee A\r\n\t\tINNER JOIN (select case when SUBSTRING(WBProducer.Name,1,4)='wbmi' then SUBSTRING(WBProducer.Name,6,45)\r\n\t\twhen SUBSTRING(WBProducer.Name,1,4)='wbco' then SUBSTRING(WBProducer.Name,11,40)\r\n\t\telse WBProducer.Name end as Name,\r\n\t\tDCP.PolicyNumber as PolicyNumber,\r\n\t\tcase when len(WBP.PolicyVersion)=1 then '0'+cast(WBP.PolicyVersion as varchar(1)) else cast(WBP.PolicyVersion as varchar(2)) end as PolicyVersion,\r\n\t\tDCP.SessionId as SessionId\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPolicyStaging DCP\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPolicyStaging WBP\r\n\t\ton DCP.PolicyId=WBP.PolicyId\r\n\t\tand DCP.SessionId=WBP.SessionId\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBProducerStage WBProducer\r\n\t\ton DCP.PolicyId=WBProducer.PolicyId\r\n\t\tand DCP.SessionId=WBP.SessionId) B\r\n\t\tON LTRIM(RTRIM(A.UserID))=LTRIM(RTRIM(B.name))\r\n\t\tWHERE A.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyVersion,SessionId ORDER BY ProducerCode) = 1\n),\nLKP_strategic_business_division AS (\n\tSELECT\n\tstrtgc_bus_dvsn_ak_id,\n\tstrtgc_bus_dvsn_code\n\tFROM (\n\t\tSELECT \n\t\t\tstrtgc_bus_dvsn_ak_id,\n\t\t\tstrtgc_bus_dvsn_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.strategic_business_division\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY strtgc_bus_dvsn_code ORDER BY strtgc_bus_dvsn_ak_id) = 1\n),\nLKP_pol_issue_code AS (\n\tSELECT\n\tpol_issue_code,\n\tpol_key\n\tFROM (\n\t\tselect   pol_issue_code as pol_issue_code,\r\n\t\tpol_key  as pol_key\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy\r\n\t\t where source_sys_id='DCT' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_issue_code) = 1\n),\nLKP_policy_Contract_Customer AS (\n\tSELECT\n\tcontract_cust_ak_id,\n\tpol_key\n\tFROM (\n\t\tselect A.contract_cust_ak_id AS contract_cust_ak_id,\r\n\t\tA.Pol_key AS Pol_key \r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy A\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer B\r\n\t\ton A.contract_cust_ak_id=B.contract_cust_ak_id\r\n\t\tand A.source_sys_id='DCT'\r\n\t\tand B.source_sys_id='DCT'\r\n\t\tand A.crrnt_snpsht_flag=1\r\n\t\tand B.crrnt_snpsht_flag=1\r\n\t\twhere exists ( select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT where WCT.PolicyNumber=A.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=A.pol_mod)\r\n\t\torder by A.Pol_key,A.created_date Desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY contract_cust_ak_id) = 1\n),\nSQ_DCPolicyStaging AS (\n\tSELECT WorkDCTPolicy.SessionId, WorkDCTPolicy.PolicyGUId, WorkDCTPolicy.CustomerNum, WorkDCTPolicy.PolicyNumber, \r\n\tISNULL(RIGHT('00'+CONVERT(VARCHAR(3),WorkDCTPolicy.PolicyVersion),2),'00') as PolicyVersionFormatted, WorkDCTPolicy.PolicyEffectiveDate, \r\n\tWorkDCTPolicy.PolicyExpirationDate, WorkDCTPolicy.LineOfBusiness, WorkDCTPolicy.Term, WorkDCTPolicy.PrimaryRatingState, WorkDCTPolicy.Product, \r\n\tWorkDCTPolicy.AuditPeriod, WorkDCTPolicy.CancellationDate, WorkDCTPolicy.TransactionDate, WorkDCTPolicy.PreviousPolicyNumber, WorkDCTPolicy.InceptionDate, \r\n\tWorkDCTPolicy.TransactionType, WorkDCTLocation.County,\r\n\tWorkDCTPolicy.Division as Division,\r\n\tWorkDCTPolicy.Terrorism, WorkDCTPolicy.WBProduct, WorkDCTPolicy.WBProductType,\r\n\t WorkDCTPolicy.RiskGrade, RIGHT('0'+CONVERT(varchar(6),WorkDCTPolicy.BCCCode),6) as BCCCode, WorkDCTPolicy.AutomaticRenewalIndicator, \r\n\t WorkDCTPolicy.Association, WorkDCTPolicy.AssociationDiscountFactor, WorkDCTPolicy.LineType, WorkDCTPolicy.PolicyProgram,\r\n\t ISNULL(WorkDCTPolicy.PriorPolicyKey,'N/A') as PriorPolicyKey, ISNULL(WorkDCTPolicy.RenewalPolicySymbol,'N/A') as RenewalPolicySymbol,\r\n\t ISNULL(LEFT(LTRIM(RTRIM(WorkDCTPolicy.RenewalPolicyNumber)),7),'N/A') as RenewalPolicyNumber,\r\n\t ISNULL(WorkDCTPolicy.RenewalPolicyMod,'N/A') as RenewalPolicyMod, \r\n\t WorkDCTPolicy.PolicyStatus, WorkDCTPolicy.TransactionCreatedDate, WorkDCTPolicy.TransactionEffectiveDate, WorkDCTPolicy.AgencyCode,\r\n\t WorkDCTPolicy.IsApplicant,WorkDCTPolicy.BusinessSegmentCode,WorkDCTPolicy.CustomerCare,\r\n\tWorkDCTPolicy.IsRollover,\r\n\tWorkDCTPolicy.PriorCarrierName, WorkDCTPolicy.PirorCarrierNameOther,WorkDCTPolicy.MailPolicyToInsured,\r\n\tWorkDCTPolicy.ReasonCode,\r\n\tWorkDCTPolicy.PolicyIssueCodeDesc,\r\n\tWorkDCTPolicy.PolicyIssueCodeOverride,\r\n\tWBPolicyStaging.PoolCode,\r\n\tcase when WBPolicyStaging.PoolCode = 'NCRF' and WorkDCTPolicy.Division = 'NSI' then 'NSINCRF' when \r\n\tWBPolicyStaging.PoolCode = 'NCRF' and WorkDCTPolicy.Division = 'CommercialLines' then 'CLNCRF' else WorkDCTPolicy.Division end as NCDivisionOverride,\r\n\tWorkDCTPolicy.IssuedUWID,\r\n\tWorkDCTPolicy.IssuedUnderwriter\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTLocation\r\n\ton  WorkDCTLocation.SessionId=WorkDCTPolicy.SessionId\r\n\tand\r\n\tWorkDCTLocation.LocationAssociationType='Account'\r\n\tinner join WBPolicyStaging on WBPolicyStaging.SessionId = WorkDCTPolicy.SessionId and WorkDCTPolicy.PolicyId = WBPolicyStaging.PolicyId\r\n\tWHERE\r\n\t@{pipeline().parameters.WHERE}\r\n\t WorkDCTPolicy.PolicyStatus<>'Quote' and \r\n\tWorkDCTPolicy.TransactionType NOT IN  ('RescindNonRenew','Reporting','VoidReporting','Information','Dividend','RevisedDividend',\r\n\t'VoidDividend','NonRenew','RescindCancelPending','CancelPending',\r\n\t'FinalAudit','RevisedFinalAudit','VoidFinalAudit') \r\n\tand WorkDCTPolicy.TransactionState='committed' \r\n\torder by PolicyNumber,ISNULL(RIGHT('00'+CONVERT(VARCHAR(3),WorkDCTPolicy.PolicyVersion),2),'00'), \r\n\tWorkDCTPolicy.TransactionCreatedDate,WorkDCTPolicy.SessionId,WorkDCTLocation.LocationId DESC\n),\nEXP_SurchargeExemptCode AS (\n\tSELECT\n\tIsApplicant,\n\t-- *INF*:  DECODE( IsApplicant, \r\n\t-- 'Institution', 'EP',\r\n\t-- 'EducationCharitable','EP',\r\n\t-- 'Federal','EP',\r\n\t-- 'State', 'EA',\r\n\t-- 'Local', 'EA',\r\n\t-- 'NonProfitReligious', 'EA',\r\n\t-- 'N/A' )\n\tDECODE(IsApplicant,\n\t\t'Institution', 'EP',\n\t\t'EducationCharitable', 'EP',\n\t\t'Federal', 'EP',\n\t\t'State', 'EA',\n\t\t'Local', 'EA',\n\t\t'NonProfitReligious', 'EA',\n\t\t'N/A'\n\t) AS o_SurchargeExemptCode\n\tFROM SQ_DCPolicyStaging\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tSQ_DCPolicyStaging.SessionId AS in_SessionId,\n\tSQ_DCPolicyStaging.PolicyGUId AS in_Id,\n\tSQ_DCPolicyStaging.AgencyCode AS in_AgencyCode,\n\tSQ_DCPolicyStaging.CustomerNum AS in_CustomerNumber,\n\tSQ_DCPolicyStaging.PolicyNumber AS in_PolicyNumber,\n\tSQ_DCPolicyStaging.PolicyVersionFormatted AS in_PolicyVersion,\n\tSQ_DCPolicyStaging.TransactionCreatedDate AS in_CreatedDate,\n\tSQ_DCPolicyStaging.TransactionEffectiveDate,\n\tSQ_DCPolicyStaging.PolicyEffectiveDate AS EffectiveDate,\n\tSQ_DCPolicyStaging.PolicyExpirationDate AS ExpirationDate,\n\tSQ_DCPolicyStaging.LineOfBusiness,\n\tSQ_DCPolicyStaging.Term,\n\tSQ_DCPolicyStaging.PrimaryRatingState,\n\tSQ_DCPolicyStaging.Product,\n\tSQ_DCPolicyStaging.AuditPeriod,\n\tSQ_DCPolicyStaging.CancellationDate,\n\tSQ_DCPolicyStaging.TransactionDate,\n\tSQ_DCPolicyStaging.PreviousPolicyNumber,\n\tSQ_DCPolicyStaging.InceptionDate,\n\tSQ_DCPolicyStaging.TransactionType AS Type,\n\tSQ_DCPolicyStaging.County,\n\tSQ_DCPolicyStaging.Division,\n\tSQ_DCPolicyStaging.Terrorism,\n\tSQ_DCPolicyStaging.PolicyProgram AS Program,\n\tSQ_DCPolicyStaging.WBProduct,\n\tSQ_DCPolicyStaging.WBProductType,\n\tSQ_DCPolicyStaging.RiskGrade,\n\tSQ_DCPolicyStaging.BCCCode,\n\tEXP_SurchargeExemptCode.o_SurchargeExemptCode AS SurchargeExemptCode,\n\tSQ_DCPolicyStaging.AutomaticRenewalIndicator,\n\tSQ_DCPolicyStaging.Association,\n\tSQ_DCPolicyStaging.AssociationDiscountFactor,\n\tSQ_DCPolicyStaging.LineType AS DCLineType,\n\tSQ_DCPolicyStaging.PolicyStatus AS Status,\n\t-- *INF*: IIF(ISNULL(in_AgencyCode) OR IS_SPACES(in_AgencyCode) OR LENGTH(in_AgencyCode)=0,'N/A',LTRIM(RTRIM(in_AgencyCode)))\n\tIFF(in_AgencyCode IS NULL \n\t\tOR LENGTH(in_AgencyCode)>0 AND TRIM(in_AgencyCode)='' \n\t\tOR LENGTH(in_AgencyCode\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(in_AgencyCode\n\t\t\t)\n\t\t)\n\t) AS out_Reference,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_CustomerNumber) OR IS_SPACES(in_CustomerNumber) OR LENGTH(in_CustomerNumber)=0,\r\n\t--   'N/A',\r\n\t--   LTRIM(RTRIM(in_CustomerNumber))\r\n\t-- )\n\tIFF(in_CustomerNumber IS NULL \n\t\tOR LENGTH(in_CustomerNumber)>0 AND TRIM(in_CustomerNumber)='' \n\t\tOR LENGTH(in_CustomerNumber\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(in_CustomerNumber\n\t\t\t)\n\t\t)\n\t) AS out_CustomerNumber,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_PolicyNumber) OR IS_SPACES(in_PolicyNumber) OR LENGTH(in_PolicyNumber)=0,\r\n\t--   'N/A',\r\n\t--   LTRIM(RTRIM(in_PolicyNumber))\r\n\t-- )\n\tIFF(in_PolicyNumber IS NULL \n\t\tOR LENGTH(in_PolicyNumber)>0 AND TRIM(in_PolicyNumber)='' \n\t\tOR LENGTH(in_PolicyNumber\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(in_PolicyNumber\n\t\t\t)\n\t\t)\n\t) AS out_PolicyNumber,\n\tin_Id AS out_Id,\n\tin_PolicyVersion AS out_PolicyVersion,\n\t-- *INF*: IIF(RTRIM(WBProduct) = 'Commercial Package', 'N/A', DCLineType)\n\tIFF(RTRIM(WBProduct\n\t\t) = 'Commercial Package',\n\t\t'N/A',\n\t\tDCLineType\n\t) AS out_SourceLineType,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(WBProduct) OR IS_SPACES(WBProduct) OR LENGTH(WBProduct)=0,\r\n\t--   'N/A',\r\n\t--   LTRIM(RTRIM(WBProduct))\r\n\t-- )\n\tIFF(WBProduct IS NULL \n\t\tOR LENGTH(WBProduct)>0 AND TRIM(WBProduct)='' \n\t\tOR LENGTH(WBProduct\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(WBProduct\n\t\t\t)\n\t\t)\n\t) AS out_WBProduct,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(WBProductType) OR IS_SPACES(WBProductType) OR LENGTH(WBProductType)=0,\r\n\t--   'N/A',\r\n\t--   LTRIM(RTRIM(WBProductType))\r\n\t-- )\n\tIFF(WBProductType IS NULL \n\t\tOR LENGTH(WBProductType)>0 AND TRIM(WBProductType)='' \n\t\tOR LENGTH(WBProductType\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(WBProductType\n\t\t\t)\n\t\t)\n\t) AS out_WBProductType,\n\tSQ_DCPolicyStaging.PriorPolicykey AS Prior_Policy_key,\n\tSQ_DCPolicyStaging.RenewalPolicySymbol,\n\tSQ_DCPolicyStaging.RenewalPolicyNumber,\n\tSQ_DCPolicyStaging.RenewalPolicyMod,\n\tin_CreatedDate AS out_CreatedDate,\n\tin_SessionId AS out_SessionId,\n\tSQ_DCPolicyStaging.CustomerCare,\n\tSQ_DCPolicyStaging.BusinessSegmentCode,\n\tSQ_DCPolicyStaging.IsRollover,\n\tSQ_DCPolicyStaging.PriorCarrierName,\n\tSQ_DCPolicyStaging.PirorCarrierNameOther,\n\tSQ_DCPolicyStaging.MailPolicyToInsured,\n\tSQ_DCPolicyStaging.ReasonCode,\n\tSQ_DCPolicyStaging.PolicyIssueCodeDesc,\n\tSQ_DCPolicyStaging.PolicyIssueCodeOverride,\n\tSQ_DCPolicyStaging.PoolCode,\n\tSQ_DCPolicyStaging.NCDivisionOverride,\n\tSQ_DCPolicyStaging.IssuedUWID,\n\tSQ_DCPolicyStaging.IssuedUnderwriter\n\tFROM EXP_SurchargeExemptCode\n\t -- Manually join with SQ_DCPolicyStaging\n\tGROUP BY out_PolicyNumber, out_PolicyVersion, out_CreatedDate\n),\nLKP_Agency AS (\n\tSELECT\n\tAgencyCode,\n\tAgencyAKID\n\tFROM (\n\t\tSELECT \n\t\t\tAgencyCode,\n\t\t\tAgencyAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode ORDER BY AgencyCode) = 1\n),\nLKP_WBProducer_Stage AS (\n\tSELECT\n\tName,\n\tSessionId\n\tFROM (\n\t\tSELECT \r\n\t\tcase \r\n\t\twhen SUBSTRING(WBProducerStage.Name,1,4)='wbmi' then SUBSTRING(WBProducerStage.Name,6,45)\r\n\t\twhen SUBSTRING(WBProducerStage.Name,1,4)='wbco' then SUBSTRING(WBProducerStage.Name,11,40)\r\n\t\telse WBProducerStage.Name \r\n\t\tend as Name,\r\n\t\tWBProducerStage.SessionId as SessionId \r\n\t\tFROM \r\n\t\tWBProducerStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY Name) = 1\n),\nLKP_AgencyEmployee_GetAgencyEmployeeAKID AS (\n\tSELECT\n\tAgencyEmployeeAKID,\n\tProducerCode,\n\tUserID,\n\tin_AgencyAKID,\n\tAgencyAKID\n\tFROM (\n\t\tSELECT \n\t\t\tAgencyEmployeeAKID,\n\t\t\tProducerCode,\n\t\t\tUserID,\n\t\t\tin_AgencyAKID,\n\t\t\tAgencyAKID\n\t\tFROM AgencyEmployee\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UserID,AgencyAKID ORDER BY AgencyEmployeeAKID) = 1\n),\nLKP_ArchDCTransactionStaging AS (\n\tSELECT\n\tTransactionDate,\n\tPolicyNumber,\n\tPolicyVersion\n\tFROM (\n\t\tselect MIN(t.TransactionDate) as TransactionDate, \r\n\t\t\tp.PolicyNumber as PolicyNumber, \r\n\t\t\tp.PolicyVersion as PolicyVersion\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.VWArchWorkDCTPolicy p with (nolock) \r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCTransactionStaging t with (nolock) on p.SessionId = t.SessionId\r\n\t\tgroup by p.PolicyNumber, p.PolicyVersion\r\n\t\t\r\n\t\t--Prod: 11460 Adding UNION ALL query below to get the DCTrasactionStaging data\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tselect MIN(t.TransactionDate) as TransactionDate, \r\n\t\t\tp.PolicyNumber as PolicyNumber, \r\n\t\t\tp.PolicyVersion as PolicyVersion\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.VWWorkDCTPolicy p with (nolock) \r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTransactionStaging t with (nolock) on p.SessionId = t.SessionId\r\n\t\tgroup by p.PolicyNumber, p.PolicyVersion\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyVersion ORDER BY TransactionDate) = 1\n),\nLKP_SupStrategicProfitCenterInsuranceSegment AS (\n\tSELECT\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tDivision\n\tFROM (\n\t\tSELECT \n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tDivision\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupStrategicProfitCenterInsuranceSegment\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Division ORDER BY StrategicProfitCenterCode) = 1\n),\nLKP_InsuranceSegment AS (\n\tSELECT\n\tInsuranceSegmentAKId,\n\tInsuranceSegmentCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceSegmentAKId,\n\t\t\tInsuranceSegmentCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceSegment\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentCode ORDER BY InsuranceSegmentAKId) = 1\n),\nLKP_SupDCTPolicyOfferingLineOfBusinessProductRules AS (\n\tSELECT\n\tPolicyOfferingCode,\n\tDCTPolicyDivision,\n\tDCTProductCode,\n\tDCTProductType,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT SupDCTPolicyOfferingLineOfBusinessProductRules.PolicyOfferingCode as PolicyOfferingCode, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTPolicyDivision as DCTPolicyDivision, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductCode as DCTProductCode, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductType as DCTProductType, SupDCTPolicyOfferingLineOfBusinessProductRules.EffectiveDate as EffectiveDate, SupDCTPolicyOfferingLineOfBusinessProductRules.ExpirationDate as ExpirationDate \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTPolicyOfferingLineOfBusinessProductRules\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DCTPolicyDivision,DCTProductCode,DCTProductType,EffectiveDate,ExpirationDate ORDER BY PolicyOfferingCode) = 1\n),\nEXP_ConvertPolicyOffering AS (\n\tSELECT\n\tPolicyOfferingCode,\n\t-- *INF*: IIF(ISNULL(PolicyOfferingCode), '000', PolicyOfferingCode)\n\tIFF(PolicyOfferingCode IS NULL,\n\t\t'000',\n\t\tPolicyOfferingCode\n\t) AS o_PolicyOfferingCode\n\tFROM LKP_SupDCTPolicyOfferingLineOfBusinessProductRules\n),\nLKP_PolicyOffering AS (\n\tSELECT\n\tPolicyOfferingAKId,\n\tPolicyOfferingCode\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyOfferingAKId,\n\t\t\tPolicyOfferingCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyOffering\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOfferingCode ORDER BY PolicyOfferingAKId) = 1\n),\nLKP_StrategicProfitCenterAKId AS (\n\tSELECT\n\tStrategicProfitCenterAKId,\n\tStrategicProfitCenterCode\n\tFROM (\n\t\tSELECT \n\t\t\tStrategicProfitCenterAKId,\n\t\t\tStrategicProfitCenterCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.StrategicProfitCenter\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterCode ORDER BY StrategicProfitCenterAKId) = 1\n),\nLKP_agency_ak_id AS (\n\tSELECT\n\tagency_ak_id,\n\tagency_key\n\tFROM (\n\t\tSELECT \n\t\t\tagency_ak_id,\n\t\t\tagency_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.agency\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY agency_key ORDER BY agency_ak_id) = 1\n),\nEXP_PolicyKey AS (\n\tSELECT\n\tout_PolicyNumber AS in_PolicyNumber,\n\tout_PolicyVersion AS in_PolicyVersion,\n\tout_CreatedDate AS in_CreatedDate,\n\tin_PolicyNumber AS v_PolicyNumber,\n\tin_PolicyVersion AS v_PolicyVersion,\n\t-- *INF*: rtrim(ltrim(v_PolicyNumber))||rtrim(ltrim(v_PolicyVersion))\r\n\t-- \r\n\t-- --Per Rob M, this needs to be PolicyNumber and PolicyVersion only.  No GUIDs.  No Symbols. 01/24/2014\r\n\t-- --in_Id||v_PolicyVersion\r\n\t-- --v_cust_num||v_PolicyNumber||v_PolicyVersion\n\trtrim(ltrim(v_PolicyNumber\n\t\t)\n\t) || rtrim(ltrim(v_PolicyVersion\n\t\t)\n\t) AS v_policy_key,\n\tv_policy_key AS out_policy_key,\n\tin_CreatedDate AS out_CreatedDate\n\tFROM AGG_Remove_Duplicates\n),\nLKP_policy AS (\n\tSELECT\n\tpol_id,\n\tpol_ak_id,\n\teff_from_date,\n\tcontract_cust_ak_id,\n\tagency_ak_id,\n\tAgencyAKID,\n\tpol_key,\n\tmco,\n\tpol_co_num,\n\tpol_eff_date,\n\tpol_exp_date,\n\torig_incptn_date,\n\tprim_bus_class_code,\n\treins_code,\n\tpms_pol_lob_code,\n\tpol_co_line_code,\n\tpol_cancellation_ind,\n\tpol_cancellation_date,\n\tpol_cancellation_rsn_code,\n\tstate_of_domicile_code,\n\twbconnect_upload_code,\n\tserv_center_support_code,\n\tpol_term,\n\tterrorism_risk_ind,\n\tprior_pol_key,\n\tpol_status_code,\n\tpol_issue_code,\n\tpol_age,\n\tindustry_risk_grade_code,\n\tuw_review_yr,\n\tmvr_request_code,\n\trenl_code,\n\tamend_num,\n\tanniversary_rerate_code,\n\tpol_audit_frqncy,\n\tfinal_audit_code,\n\tzip_ind,\n\tguarantee_ind,\n\tvariation_code,\n\tcounty,\n\tnon_smoker_disc_code,\n\trenl_disc,\n\trenl_safe_driver_disc_count,\n\tnonrenewal_flag_date,\n\taudit_complt_date,\n\torig_acct_date,\n\tpol_enter_date,\n\texcess_claim_code,\n\tpol_status_on_pif,\n\ttarget_mrkt_code,\n\tpkg_code,\n\tpol_kind_code,\n\tbus_seg_code,\n\tpif_upload_audit_ind,\n\terr_flag_bal_txn,\n\terr_flag_bal_reins,\n\tproducer_code_ak_id,\n\tprdcr_code,\n\tClassOfBusiness,\n\tstrtgc_bus_dvsn_ak_id,\n\tErrorFlagBalancePremiumTransaction,\n\tRenewalPolicyNumber,\n\tRenewalPolicySymbol,\n\tRenewalPolicyMod,\n\tBillingType,\n\tsup_bus_class_code_id,\n\tsup_pol_term_id,\n\tsup_pol_status_code_id,\n\tsup_pol_issue_code_id,\n\tsup_pol_audit_frqncy_id,\n\tsup_industry_risk_grade_code_id,\n\tsup_state_id,\n\tPolicyOfferingAKId,\n\tproducer_code_id,\n\tSurchargeExemptCode,\n\tSupSurchargeExemptID,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tProgramAKId,\n\tObligeeName,\n\tAutomatedUnderwritingServicesIndicator,\n\tAutomaticRenewalIndicator,\n\tAssociationCode,\n\tRolloverPolicyIndicator,\n\tRolloverPriorCarrier,\n\tMailToInsuredFlag,\n\tAgencyEmployeeAKId,\n\tPolicyIssueCodeOverride,\n\tPoolCode,\n\tIssuedUWID,\n\tIssuedUnderwriter,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tpol_id,\n\t\t\tpol_ak_id,\n\t\t\teff_from_date,\n\t\t\tcontract_cust_ak_id,\n\t\t\tagency_ak_id,\n\t\t\tAgencyAKID,\n\t\t\tpol_key,\n\t\t\tmco,\n\t\t\tpol_co_num,\n\t\t\tpol_eff_date,\n\t\t\tpol_exp_date,\n\t\t\torig_incptn_date,\n\t\t\tprim_bus_class_code,\n\t\t\treins_code,\n\t\t\tpms_pol_lob_code,\n\t\t\tpol_co_line_code,\n\t\t\tpol_cancellation_ind,\n\t\t\tpol_cancellation_date,\n\t\t\tpol_cancellation_rsn_code,\n\t\t\tstate_of_domicile_code,\n\t\t\twbconnect_upload_code,\n\t\t\tserv_center_support_code,\n\t\t\tpol_term,\n\t\t\tterrorism_risk_ind,\n\t\t\tprior_pol_key,\n\t\t\tpol_status_code,\n\t\t\tpol_issue_code,\n\t\t\tpol_age,\n\t\t\tindustry_risk_grade_code,\n\t\t\tuw_review_yr,\n\t\t\tmvr_request_code,\n\t\t\trenl_code,\n\t\t\tamend_num,\n\t\t\tanniversary_rerate_code,\n\t\t\tpol_audit_frqncy,\n\t\t\tfinal_audit_code,\n\t\t\tzip_ind,\n\t\t\tguarantee_ind,\n\t\t\tvariation_code,\n\t\t\tcounty,\n\t\t\tnon_smoker_disc_code,\n\t\t\trenl_disc,\n\t\t\trenl_safe_driver_disc_count,\n\t\t\tnonrenewal_flag_date,\n\t\t\taudit_complt_date,\n\t\t\torig_acct_date,\n\t\t\tpol_enter_date,\n\t\t\texcess_claim_code,\n\t\t\tpol_status_on_pif,\n\t\t\ttarget_mrkt_code,\n\t\t\tpkg_code,\n\t\t\tpol_kind_code,\n\t\t\tbus_seg_code,\n\t\t\tpif_upload_audit_ind,\n\t\t\terr_flag_bal_txn,\n\t\t\terr_flag_bal_reins,\n\t\t\tproducer_code_ak_id,\n\t\t\tprdcr_code,\n\t\t\tClassOfBusiness,\n\t\t\tstrtgc_bus_dvsn_ak_id,\n\t\t\tErrorFlagBalancePremiumTransaction,\n\t\t\tRenewalPolicyNumber,\n\t\t\tRenewalPolicySymbol,\n\t\t\tRenewalPolicyMod,\n\t\t\tBillingType,\n\t\t\tsup_bus_class_code_id,\n\t\t\tsup_pol_term_id,\n\t\t\tsup_pol_status_code_id,\n\t\t\tsup_pol_issue_code_id,\n\t\t\tsup_pol_audit_frqncy_id,\n\t\t\tsup_industry_risk_grade_code_id,\n\t\t\tsup_state_id,\n\t\t\tPolicyOfferingAKId,\n\t\t\tproducer_code_id,\n\t\t\tSurchargeExemptCode,\n\t\t\tSupSurchargeExemptID,\n\t\t\tStrategicProfitCenterAKId,\n\t\t\tInsuranceSegmentAKId,\n\t\t\tProgramAKId,\n\t\t\tObligeeName,\n\t\t\tAutomatedUnderwritingServicesIndicator,\n\t\t\tAutomaticRenewalIndicator,\n\t\t\tAssociationCode,\n\t\t\tRolloverPolicyIndicator,\n\t\t\tRolloverPriorCarrier,\n\t\t\tMailToInsuredFlag,\n\t\t\tAgencyEmployeeAKId,\n\t\t\tPolicyIssueCodeOverride,\n\t\t\tPoolCode,\n\t\t\tIssuedUWID,\n\t\t\tIssuedUnderwriter,\n\t\t\teff_to_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand exists ( select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT where WCT.PolicyNumber=pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol_mod)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key,eff_from_date,eff_to_date ORDER BY pol_id) = 1\n),\nLKP_sup_reason_amended_code AS (\n\tSELECT\n\tStandardReasonAmendedCode,\n\trsn_amended_code\n\tFROM (\n\t\tSELECT \n\t\t\tStandardReasonAmendedCode,\n\t\t\trsn_amended_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code ORDER BY StandardReasonAmendedCode) = 1\n),\nEXP_values AS (\n\tSELECT\n\tLKP_Agency.AgencyAKID AS in_AgencyAKID,\n\tLKP_agency_ak_id.agency_ak_id,\n\tLKP_PolicyOffering.PolicyOfferingAKId AS in_PolicyOfferingAKId,\n\tLKP_StrategicProfitCenterAKId.StrategicProfitCenterAKId AS in_StrategicProfitCenterAKId,\n\tLKP_InsuranceSegment.InsuranceSegmentAKId AS in_InsuranceSegmentAKId,\n\tAGG_Remove_Duplicates.TransactionEffectiveDate AS in_TransactionEffectiveDate,\n\tAGG_Remove_Duplicates.EffectiveDate AS in_EffectiveDate,\n\tAGG_Remove_Duplicates.ExpirationDate AS in_ExpirationDate,\n\tAGG_Remove_Duplicates.Term AS in_Term,\n\tAGG_Remove_Duplicates.PrimaryRatingState AS in_PrimaryRatingState,\n\tAGG_Remove_Duplicates.Product AS in_Product,\n\tAGG_Remove_Duplicates.AuditPeriod AS in_AuditPeriod,\n\tAGG_Remove_Duplicates.CancellationDate AS in_CancellationDate,\n\tLKP_ArchDCTransactionStaging.TransactionDate AS in_TransactionDate,\n\tAGG_Remove_Duplicates.PreviousPolicyNumber AS in_PreviousPolicyNumber,\n\tAGG_Remove_Duplicates.InceptionDate AS in_InceptionDate,\n\tAGG_Remove_Duplicates.Type,\n\tAGG_Remove_Duplicates.County AS in_County,\n\tAGG_Remove_Duplicates.Division AS in_Division,\n\tAGG_Remove_Duplicates.Terrorism AS in_Terrorism,\n\tAGG_Remove_Duplicates.Program AS in_Program,\n\tAGG_Remove_Duplicates.RiskGrade AS in_RiskGrade,\n\tAGG_Remove_Duplicates.BCCCode AS in_BCCCode,\n\tAGG_Remove_Duplicates.SurchargeExemptCode AS in_SurchargeExemptCode,\n\tAGG_Remove_Duplicates.out_Reference AS in_Reference,\n\tAGG_Remove_Duplicates.out_CustomerNumber AS in_CustomerNumber,\n\tAGG_Remove_Duplicates.out_PolicyNumber AS in_PolicyNumber,\n\tAGG_Remove_Duplicates.out_Id AS in_Id,\n\tAGG_Remove_Duplicates.out_PolicyVersion AS in_PolicyVersion,\n\tAGG_Remove_Duplicates.AutomaticRenewalIndicator AS in_AutomaticRenewalIndicator,\n\tAGG_Remove_Duplicates.Association AS in_Association,\n\tAGG_Remove_Duplicates.Status AS in_Status,\n\tAGG_Remove_Duplicates.out_CreatedDate AS in_CreatedDate,\n\tLKP_sup_reason_amended_code.StandardReasonAmendedCode AS in_cancellation_rsn_code,\n\tAGG_Remove_Duplicates.AssociationDiscountFactor,\n\tAGG_Remove_Duplicates.PolicyIssueCodeDesc AS in_PolicyIssueCodeDesc,\n\tAGG_Remove_Duplicates.PolicyIssueCodeOverride AS in_PolicyIssueCodeOverride,\n\tAGG_Remove_Duplicates.PoolCode AS in_PoolCode,\n\tLKP_policy.pol_ak_id AS lkp_pol_ak_id,\n\tLKP_policy.pol_cancellation_ind AS lkp_pol_cancellation_ind,\n\tLKP_policy.pol_cancellation_date AS lkp_pol_cancellation_date,\n\tLKP_policy.pol_status_code AS lkp_pol_status_code,\n\tLKP_policy.eff_from_date AS lkp_eff_from_date,\n\tin_CreatedDate AS out_CreatedDate,\n\tin_CreatedDate AS v_CurrentDate,\n\tin_CustomerNumber AS v_cust_num,\n\t'000' AS v_pol_sym,\n\tin_PolicyNumber AS v_PolicyNumber,\n\tin_PolicyVersion AS v_PolicyVersion,\n\t-- *INF*: rtrim(ltrim(v_PolicyNumber))||rtrim(ltrim(v_PolicyVersion))\r\n\t-- \r\n\t-- --Per Rob M, this needs to be PolicyNumber and PolicyVersion only.  No GUIDs.  No Symbols. 01/24/2014\r\n\t-- --in_Id||v_PolicyVersion\r\n\t-- --v_cust_num||v_PolicyNumber||v_PolicyVersion\n\trtrim(ltrim(v_PolicyNumber\n\t\t)\n\t) || rtrim(ltrim(v_PolicyVersion\n\t\t)\n\t) AS v_policy_key,\n\t-- *INF*: IIF(ISNULL(Type) OR IS_SPACES(Type) OR LENGTH(Type)=0,'N/A',LTRIM(RTRIM(Type)))\n\tIFF(Type IS NULL \n\t\tOR LENGTH(Type)>0 AND TRIM(Type)='' \n\t\tOR LENGTH(Type\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(Type\n\t\t\t)\n\t\t)\n\t) AS v_Type,\n\t-- *INF*: IIF(v_policy_key=v_prev_policy_key ,v_seq+1,1)\n\tIFF(v_policy_key = v_prev_policy_key,\n\t\tv_seq + 1,\n\t\t1\n\t) AS v_seq,\n\t-- *INF*: rtrim(ltrim(in_Id))||rtrim(ltrim(v_PolicyVersion))\r\n\t-- \r\n\t-- --Per Rob M, this needs to be PolicyNumber and PolicyVersion only.  No GUIDs.  No Symbols. 01/24/2014\r\n\t-- --in_Id||v_PolicyVersion\r\n\t-- --v_cust_num||v_PolicyNumber||v_PolicyVersion\n\trtrim(ltrim(in_Id\n\t\t)\n\t) || rtrim(ltrim(v_PolicyVersion\n\t\t)\n\t) AS v_policy_id_key,\n\t-- *INF*: IIF(ISNULL(in_CancellationDate),\r\n\t-- TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),in_CancellationDate)\n\tIFF(in_CancellationDate IS NULL,\n\t\tTO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'\n\t\t),\n\t\tin_CancellationDate\n\t) AS v_CancellationDate,\n\t-- *INF*: IIF(v_Type<> 'Cancel',TO_DATE('21001231235959','YYYYMMDDHH24MISS'), LEAST(v_CancellationDate,in_TransactionEffectiveDate))\r\n\t-- \r\n\t-- --IIF(in_Status<>'Cancelled',TO_DATE('21001231235959','YYYYMMDDHH24MISS'), LEAST(v_CancellationDate,in_TransactionEffectiveDate))\n\tIFF(v_Type <> 'Cancel',\n\t\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS'\n\t\t),\n\t\tLEAST(v_CancellationDate, in_TransactionEffectiveDate\n\t\t)\n\t) AS v_pol_cancellation_date,\n\t-- *INF*: IIF( v_seq=1,\r\n\t-- \r\n\t-- iif(NOT IN(v_Type,'Reinstate','Cancel') and NOT ISNULL(lkp_pol_ak_id)  \r\n\t-- \tAND to_char\t(lkp_pol_cancellation_date,'YYYYMM')<>'210012',\r\n\t-- lkp_pol_cancellation_date,v_pol_cancellation_date),\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- IIF( v_seq<>1 and IN(v_Type,'Reinstate','Cancel'),v_pol_cancellation_date,\r\n\t-- v_pol_cancellation_date_persist)\r\n\t-- )\r\n\t--  \r\n\t-- \r\n\t-- \r\n\t-- --This expression is stores the cancellation date for the records between Cancel and Reinstate so that it assignes the same date for the records between cancel and reinstate.\r\n\t-- --For the first record is not reinstate and the target has cancel within the same date range then it treats the first record same as target(cancel)\n\tIFF(v_seq = 1,\n\t\tIFF(NOT v_Type IN ('Reinstate','Cancel') \n\t\t\tAND lkp_pol_ak_id IS NULL \n\t\t\tAND to_char(lkp_pol_cancellation_date, 'YYYYMM'\n\t\t\t) <> '210NOT 012',\n\t\t\tlkp_pol_cancellation_date,\n\t\t\tv_pol_cancellation_date\n\t\t),\n\t\tIFF(v_seq <> 1 \n\t\t\tAND v_Type IN ('Reinstate','Cancel'),\n\t\t\tv_pol_cancellation_date,\n\t\t\tv_pol_cancellation_date_persist\n\t\t)\n\t) AS v_pol_cancellation_date_persist,\n\t-- *INF*: IIF(v_pol_cancellation_date_persist<TO_DATE('21001231','YYYYMMDD'),  'Y','N' )\r\n\t-- --prod 11524 \n\tIFF(v_pol_cancellation_date_persist < TO_DATE('21001231', 'YYYYMMDD'\n\t\t),\n\t\t'Y',\n\t\t'N'\n\t) AS v_pol_cancellation_ind,\n\t-- *INF*: in_PrimaryRatingState\r\n\t-- \r\n\t-- --IIF(ISNULL(in_PrimaryRatingState) OR IS_SPACES(in_PrimaryRatingState) OR LENGTH(in_PrimaryRatingState)=0,'N/A',in_PrimaryRatingState)\n\tin_PrimaryRatingState AS v_PrimaryRatingState,\n\t-- *INF*: IIF(ISNULL(in_Term), 0, in_Term)\n\tIFF(in_Term IS NULL,\n\t\t0,\n\t\tin_Term\n\t) AS v_Term,\n\t-- *INF*: IIF(v_Term<100, LPAD(TO_CHAR(v_Term), 3, '0'), TO_CHAR(v_Term))\n\tIFF(v_Term < 100,\n\t\tLPAD(TO_CHAR(v_Term\n\t\t\t), 3, '0'\n\t\t),\n\t\tTO_CHAR(v_Term\n\t\t)\n\t) AS v_pol_term,\n\t-- *INF*: IIF(ISNULL(in_PreviousPolicyNumber) OR IS_SPACES(in_PreviousPolicyNumber) OR LENGTH(in_PreviousPolicyNumber)=0,'N/A',in_PreviousPolicyNumber)\n\tIFF(in_PreviousPolicyNumber IS NULL \n\t\tOR LENGTH(in_PreviousPolicyNumber)>0 AND TRIM(in_PreviousPolicyNumber)='' \n\t\tOR LENGTH(in_PreviousPolicyNumber\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_PreviousPolicyNumber\n\t) AS v_PreviousPolicyNumber,\n\t-- *INF*: IIF(ISNULL(in_EffectiveDate),TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS') , in_EffectiveDate)\n\tIFF(in_EffectiveDate IS NULL,\n\t\tTO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'\n\t\t),\n\t\tin_EffectiveDate\n\t) AS v_EffectiveDate,\n\t-- *INF*: IIF(ISNULL(in_ExpirationDate),TO_DATE('2100-12-31 23:59:59 ','YYYY-MM-DD HH24:MI:SS') , in_ExpirationDate)\n\tIFF(in_ExpirationDate IS NULL,\n\t\tTO_DATE('2100-12-31 23:59:59 ', 'YYYY-MM-DD HH24:MI:SS'\n\t\t),\n\t\tin_ExpirationDate\n\t) AS v_ExpirationDate,\n\t-- *INF*: IIF(ISNULL(in_InceptionDate),TO_DATE('2100-12-31 23:59:59 ','YYYY-MM-DD HH24:MI:SS') , in_InceptionDate)\n\tIFF(in_InceptionDate IS NULL,\n\t\tTO_DATE('2100-12-31 23:59:59 ', 'YYYY-MM-DD HH24:MI:SS'\n\t\t),\n\t\tin_InceptionDate\n\t) AS v_InceptionDate,\n\t-- *INF*: IIF( v_EffectiveDate<=in_CreatedDate AND \r\n\t-- \t      in_CreatedDate< (iif (v_ExpirationDate< v_pol_cancellation_date_persist, v_ExpirationDate,v_pol_cancellation_date_persist)),'I' ,\r\n\t-- iif(v_pol_cancellation_date_persist<=in_CreatedDate OR (v_pol_cancellation_date_persist=v_EffectiveDate AND in_CreatedDate<=v_EffectiveDate),'C',\r\n\t-- iif(in_CreatedDate>=v_ExpirationDate,'N' ,\r\n\t-- iif(in_CreatedDate<v_EffectiveDate AND (v_pol_cancellation_date_persist>in_CreatedDate OR v_pol_cancellation_date_persist>v_EffectiveDate),'F', 'N/A' \r\n\t-- )))\r\n\t-- )\r\n\t-- \r\n\t-- \n\tIFF(v_EffectiveDate <= in_CreatedDate \n\t\tAND in_CreatedDate < ( IFF(v_ExpirationDate < v_pol_cancellation_date_persist,\n\t\t\t\tv_ExpirationDate,\n\t\t\t\tv_pol_cancellation_date_persist\n\t\t\t) \n\t\t),\n\t\t'I',\n\t\tIFF(v_pol_cancellation_date_persist <= in_CreatedDate \n\t\t\tOR ( v_pol_cancellation_date_persist = v_EffectiveDate \n\t\t\t\tAND in_CreatedDate <= v_EffectiveDate \n\t\t\t),\n\t\t\t'C',\n\t\t\tIFF(in_CreatedDate >= v_ExpirationDate,\n\t\t\t\t'N',\n\t\t\t\tIFF(in_CreatedDate < v_EffectiveDate \n\t\t\t\t\tAND ( v_pol_cancellation_date_persist > in_CreatedDate \n\t\t\t\t\t\tOR v_pol_cancellation_date_persist > v_EffectiveDate \n\t\t\t\t\t),\n\t\t\t\t\t'F',\n\t\t\t\t\t'N/A'\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t) AS v_pol_status_code,\n\t-- *INF*: :LKP.LKP_pol_issue_code(v_policy_key)\n\tLKP_POL_ISSUE_CODE_v_policy_key.pol_issue_code AS v_lkp_pol_issue_code,\n\t-- *INF*: DECODE(TRUE, v_seq=1 and NOT ISNULL(v_lkp_pol_issue_code),v_lkp_pol_issue_code,\r\n\t--  -- this check needs to happen first to see if the Policykey is already in v2.Policy then just use the pol_issue_code of it.\r\n\t--    v_seq<>1,v_pol_issue_code,\r\n\t-- -- if the Policykey from the current record and the previous record from the run are same then use the pol_issue_code that has already been generated for the prior record,\r\n\t--   IN(Type,'New') and ISNULL(in_PreviousPolicyNumber),'N',\r\n\t--   IN(Type,'Rewrite','Reissue'),:LKP.LKP_pol_issue_code(Prior_Policy_key),\r\n\t--  --This rule is contingent on if the Prior policykey is deduced correctly. With the new fix for the work tables we are ensuring this. If there exists one in IDO then we populate it else it will be defaulted to R in out put port of issue code\r\n\t--   IN(Type,'Renew'),'R',\r\n\t--   ISNULL(in_PreviousPolicyNumber),'N'\r\n\t--  ) \r\n\t-- --Note: This logic is obsolete after 5/1/2018. Get the Policy Issue code from v_pol_issue_code_new port\n\tDECODE(TRUE,\n\t\tv_seq = 1 \n\t\tAND v_lkp_pol_issue_code IS NOT NULL, v_lkp_pol_issue_code,\n\t\tv_seq <> 1, v_pol_issue_code,\n\t\tType IN ('New') \n\t\tAND in_PreviousPolicyNumber IS NULL, 'N',\n\t\tType IN ('Rewrite','Reissue'), LKP_POL_ISSUE_CODE_Prior_Policy_key.pol_issue_code,\n\t\tType IN ('Renew'), 'R',\n\t\tin_PreviousPolicyNumber IS NULL, 'N'\n\t) AS v_pol_issue_code_old,\n\t-- *INF*: IIF(ISNULL(in_PolicyIssueCodeDesc) OR IS_SPACES(in_PolicyIssueCodeDesc) OR LTRIM(RTRIM(in_PolicyIssueCodeDesc))='',v_lkp_pol_issue_code,\r\n\t-- IIF(LTRIM(RTRIM(in_PolicyIssueCodeDesc))='New', 'N','R'\r\n\t-- )\r\n\t-- )\n\tIFF(in_PolicyIssueCodeDesc IS NULL \n\t\tOR LENGTH(in_PolicyIssueCodeDesc)>0 AND TRIM(in_PolicyIssueCodeDesc)='' \n\t\tOR LTRIM(RTRIM(in_PolicyIssueCodeDesc\n\t\t\t)\n\t\t) = '',\n\t\tv_lkp_pol_issue_code,\n\t\tIFF(LTRIM(RTRIM(in_PolicyIssueCodeDesc\n\t\t\t\t)\n\t\t\t) = 'New',\n\t\t\t'N',\n\t\t\t'R'\n\t\t)\n\t) AS v_pol_issue_code_new,\n\t-- *INF*: IIF(TO_DATE(TO_CHAR(v_EffectiveDate,'YYYY-MM-DD'),'YYYY-MM-DD') < TO_DATE('2018-05-01','YYYY-MM-DD') OR ISNULL(in_PolicyIssueCodeDesc) OR LTRIM(RTRIM(in_PolicyIssueCodeDesc))='',\r\n\t-- v_pol_issue_code_old,\r\n\t-- v_pol_issue_code_new\r\n\t-- )\r\n\t-- \r\n\t-- --Note: This logic is obsolete after 5/1/2018. Get the Policy Issue code from v_pol_issue_code_new port\n\tIFF(TO_DATE(TO_CHAR(v_EffectiveDate, 'YYYY-MM-DD'\n\t\t\t), 'YYYY-MM-DD'\n\t\t) < TO_DATE('2018-05-01', 'YYYY-MM-DD'\n\t\t) \n\t\tOR in_PolicyIssueCodeDesc IS NULL \n\t\tOR LTRIM(RTRIM(in_PolicyIssueCodeDesc\n\t\t\t)\n\t\t) = '',\n\t\tv_pol_issue_code_old,\n\t\tv_pol_issue_code_new\n\t) AS v_pol_issue_code,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_InceptionDate),\r\n\t--   -1,\r\n\t--   ABS(DATE_DIFF(TRUNC(in_InceptionDate,'YYYY'),TRUNC(v_CurrentDate,'YYYY'),'YYYY'))\r\n\t-- )\n\tIFF(in_InceptionDate IS NULL,\n\t\t- 1,\n\t\tABS(DATEDIFF(YEAR,CAST(TRUNC(in_InceptionDate, 'YEAR') AS TIMESTAMP_NTZ(0)),CAST(TRUNC(v_CurrentDate, 'YEAR') AS TIMESTAMP_NTZ(0)))\n\t\t)\n\t) AS v_pol_age,\n\t-- *INF*: DECODE(TRUE, in_Status = 'InForce' and Type = 'Renew', '3',\r\n\t-- IN(in_Status,'InForce', 'Quote', 'Application', 'Bound', 'Cancel-Pending') and v_CurrentDate>=v_EffectiveDate and v_CurrentDate<v_ExpirationDate, '1',\r\n\t-- IN(in_Status,'Cancelled', 'PolicyDeclined'), '9',\r\n\t-- in_Status='NonRenewed', '7',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\tin_Status = 'InForce' \n\t\tAND Type = 'Renew', '3',\n\t\tin_Status IN ('InForce','Quote','Application','Bound','Cancel-Pending') \n\t\tAND v_CurrentDate >= v_EffectiveDate \n\t\tAND v_CurrentDate < v_ExpirationDate, '1',\n\t\tin_Status IN ('Cancelled','PolicyDeclined'), '9',\n\t\tin_Status = 'NonRenewed', '7',\n\t\t'N/A'\n\t) AS v_renl_code,\n\t-- *INF*: IIF(ISNULL(in_AuditPeriod) OR IS_SPACES(in_AuditPeriod) OR LENGTH(in_AuditPeriod)=0,'N/A',in_AuditPeriod)\n\tIFF(in_AuditPeriod IS NULL \n\t\tOR LENGTH(in_AuditPeriod)>0 AND TRIM(in_AuditPeriod)='' \n\t\tOR LENGTH(in_AuditPeriod\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_AuditPeriod\n\t) AS v_AuditPeriod,\n\t-- *INF*: IIF(ISNULL(in_County) OR IS_SPACES(in_County) OR LENGTH(in_County)=0,'N/A',in_County)\n\tIFF(in_County IS NULL \n\t\tOR LENGTH(in_County)>0 AND TRIM(in_County)='' \n\t\tOR LENGTH(in_County\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_County\n\t) AS v_County,\n\t-- *INF*: IIF(\r\n\t--   LTRIM(RTRIM(in_Division))='WCPool',\r\n\t--   'PoolService',\r\n\t--   'CommercialLines' \r\n\t-- )\n\tIFF(LTRIM(RTRIM(in_Division\n\t\t\t)\n\t\t) = 'WCPool',\n\t\t'PoolService',\n\t\t'CommercialLines'\n\t) AS v_InsuranceSegmentCode,\n\tv_pol_sym AS out_pol_sym,\n\tv_PolicyNumber AS out_PolicyNumber,\n\tv_PolicyVersion AS out_PolicyVersion,\n\t-1 AS out_producer_code_id,\n\t-- *INF*: rtrim(ltrim(v_PolicyNumber))||rtrim(ltrim(v_PolicyVersion))\r\n\t-- --LTRIM(RTRIM(v_policy_key))\n\trtrim(ltrim(v_PolicyNumber\n\t\t)\n\t) || rtrim(ltrim(v_PolicyVersion\n\t\t)\n\t) AS out_policy_key,\n\t-- *INF*: LTRIM(RTRIM(v_policy_id_key))\n\tLTRIM(RTRIM(v_policy_id_key\n\t\t)\n\t) AS out_policy_id_key,\n\t'05' AS out_mco,\n\t'N/A' AS out_pol_co_num,\n\tv_EffectiveDate AS out_EffectiveDate,\n\tv_ExpirationDate AS out_ExpirationDate,\n\tv_InceptionDate AS out_InceptionDate,\n\t-- *INF*: IIF(ISNULL(in_BCCCode) OR IS_SPACES(in_BCCCode) OR LENGTH(in_BCCCode)=0,'N/A',in_BCCCode)\n\tIFF(in_BCCCode IS NULL \n\t\tOR LENGTH(in_BCCCode)>0 AND TRIM(in_BCCCode)='' \n\t\tOR LENGTH(in_BCCCode\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_BCCCode\n\t) AS out_prim_bus_class_code,\n\t'N/A' AS out_reins_code,\n\t'N/A' AS out_pms_pol_lob_code,\n\t'N/A' AS out_pol_co_line_code,\n\tv_pol_cancellation_ind AS out_pol_cancellation_ind,\n\tv_pol_cancellation_date_persist AS out_pol_cancellation_date,\n\t-- *INF*: DECODE(TRUE, ISNULL(LTRIM(RTRIM(in_cancellation_rsn_code))),'N/A',\r\n\t-- LTRIM(RTRIM(in_cancellation_rsn_code))\r\n\t-- )\n\tDECODE(TRUE,\n\t\tLTRIM(RTRIM(in_cancellation_rsn_code\n\t\t\t)\n\t\t) IS NULL, 'N/A',\n\t\tLTRIM(RTRIM(in_cancellation_rsn_code\n\t\t\t)\n\t\t)\n\t) AS out_pol_cancellation_rsn_code,\n\tv_PrimaryRatingState AS out_state_code,\n\tAGG_Remove_Duplicates.CustomerCare,\n\t'N/A' AS out_wbconnect_upload_code,\n\t-- *INF*: Decode(True,\r\n\t--       In(ltrim(rtrim(CustomerCare)),'0'),'N',\r\n\t--    In(ltrim(rtrim(CustomerCare)),'1'),'Y',\r\n\t--       'N/A')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(customercare='0','0',IIF(customercare='1','1','N/A'))?\n\tDecode(True,\n\t\tltrim(rtrim(CustomerCare\n\t\t\t)\n\t\t) IN ('0'), 'N',\n\t\tltrim(rtrim(CustomerCare\n\t\t\t)\n\t\t) IN ('1'), 'Y',\n\t\t'N/A'\n\t) AS out_serv_center_support_code,\n\tv_pol_term AS out_pol_term,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(in_Terrorism) OR IS_SPACES(in_Terrorism) OR LENGTH(in_Terrorism)=0,'N/A',\r\n\t-- in_Terrorism='1','Y',\r\n\t-- in_Terrorism='0','N',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\tin_Terrorism IS NULL \n\t\tOR LENGTH(in_Terrorism)>0 AND TRIM(in_Terrorism)='' \n\t\tOR LENGTH(in_Terrorism\n\t\t) = 0, 'N/A',\n\t\tin_Terrorism = '1', 'Y',\n\t\tin_Terrorism = '0', 'N',\n\t\t'N/A'\n\t) AS out_terrorism_risk_ind,\n\tv_pol_status_code AS out_pol_status_code,\n\t-- *INF*: IIF(ISNULL(v_pol_issue_code),'R',v_pol_issue_code)\n\tIFF(v_pol_issue_code IS NULL,\n\t\t'R',\n\t\tv_pol_issue_code\n\t) AS out_pol_issue_code,\n\tv_pol_age AS out_pol_age,\n\t-- *INF*: IIF(ISNULL(in_RiskGrade) OR IS_SPACES(in_RiskGrade) OR LENGTH(in_RiskGrade)=0,'N/A',in_RiskGrade)\n\tIFF(in_RiskGrade IS NULL \n\t\tOR LENGTH(in_RiskGrade)>0 AND TRIM(in_RiskGrade)='' \n\t\tOR LENGTH(in_RiskGrade\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_RiskGrade\n\t) AS out_industry_risk_grade_code,\n\t'N/A' AS out_uw_review_yr,\n\t'N/A' AS out_mvr_request_code,\n\tv_renl_code AS out_renl_code,\n\t'N/A' AS out_amend_num,\n\t'N/A' AS out_anniversary_rerate_code,\n\tv_AuditPeriod AS out_pol_audit_frqncy,\n\t'N/A' AS out_final_audit_code,\n\t'N/A' AS out_zip_ind,\n\t'N/A' AS out_guarantee_ind,\n\t'N/A' AS out_variation_code,\n\tv_County AS out_county,\n\t'N/A' AS out_non_smoker_disc_code,\n\t0 AS out_renl_disc,\n\t-1 AS out_renl_safe_driver_disc_count,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59 ','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59 ', 'YYYY-MM-DD HH24:MI:SS'\n\t) AS out_nonrenewal_flag_date,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59 ','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59 ', 'YYYY-MM-DD HH24:MI:SS'\n\t) AS out_audit_complt_date,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59 ','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59 ', 'YYYY-MM-DD HH24:MI:SS'\n\t) AS out_orig_acct_date,\n\t-- *INF*: IIF(NOT ISNULL(in_TransactionDate),in_TransactionDate,TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'))\n\tIFF(in_TransactionDate IS NOT NULL,\n\t\tin_TransactionDate,\n\t\tTO_DATE('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'\n\t\t)\n\t) AS out_pol_enter_date,\n\t'N/A' AS out_excess_claim_code,\n\t'N/A' AS out_pol_status_on_pif,\n\t'N/A' AS out_target_mrkt_code,\n\t'N/A' AS out_pkg_code,\n\t'N/A' AS out_pol_kind_code,\n\tAGG_Remove_Duplicates.BusinessSegmentCode AS in_bus_seg_code,\n\t-- *INF*: IIF(NOT ISNULL(in_bus_seg_code),in_bus_seg_code,'N/A')\n\tIFF(in_bus_seg_code IS NOT NULL,\n\t\tin_bus_seg_code,\n\t\t'N/A'\n\t) AS out_bus_seg_code,\n\t'N/A' AS out_pif_upload_audit_ind,\n\t0 AS out_err_flag_bal_txn,\n\t0 AS out_err_flag_bal_reins,\n\tin_Reference AS out_Reference,\n\t'N/A' AS out_ClassOfBusiness,\n\t0 AS out_ErrorFlagBalancePremiumTransaction,\n\t-- *INF*: IIF( Type='Renew' and NOT(ISNULL(in_PreviousPolicyNumber) OR IS_SPACES(in_PreviousPolicyNumber) OR LENGTH(in_PreviousPolicyNumber)=0)  , SUBSTR(in_PreviousPolicyNumber, 1, 7),'N/A')\n\tIFF(Type = 'Renew' \n\t\tAND NOT ( in_PreviousPolicyNumber IS NULL \n\t\t\tOR LENGTH(in_PreviousPolicyNumber)>0 AND TRIM(in_PreviousPolicyNumber)='' \n\t\t\tOR LENGTH(in_PreviousPolicyNumber\n\t\t\t) = 0 \n\t\t),\n\t\tSUBSTR(in_PreviousPolicyNumber, 1, 7\n\t\t),\n\t\t'N/A'\n\t) AS out_RenewalPolicyNumber,\n\t'000' AS out_RenewalPolicySymbol,\n\t-- *INF*: IIF( Type='Renew' and NOT(ISNULL(in_PreviousPolicyNumber) OR IS_SPACES(in_PreviousPolicyNumber) OR LENGTH(in_PreviousPolicyNumber)=0)  , SUBSTR(in_PreviousPolicyNumber, 8, 2),'N/A')\n\tIFF(Type = 'Renew' \n\t\tAND NOT ( in_PreviousPolicyNumber IS NULL \n\t\t\tOR LENGTH(in_PreviousPolicyNumber)>0 AND TRIM(in_PreviousPolicyNumber)='' \n\t\t\tOR LENGTH(in_PreviousPolicyNumber\n\t\t\t) = 0 \n\t\t),\n\t\tSUBSTR(in_PreviousPolicyNumber, 8, 2\n\t\t),\n\t\t'N/A'\n\t) AS out_RenewalPolicyMod,\n\t'N/A' AS out_BillingType,\n\tin_Division AS out_strtgc_bus_dvsn_code,\n\tin_AgencyAKID AS out_AgencyAKID,\n\t-- *INF*: IIF(ISNULL(in_PolicyOfferingAKId),26,in_PolicyOfferingAKId)\n\tIFF(in_PolicyOfferingAKId IS NULL,\n\t\t26,\n\t\tin_PolicyOfferingAKId\n\t) AS out_PolicyOfferingAKId,\n\t-- *INF*: IIF(ISNULL(in_Program) OR IS_SPACES(in_Program) OR LENGTH(in_Program)=0,'N/A',LTRIM(RTRIM(in_Program)))\n\tIFF(in_Program IS NULL \n\t\tOR LENGTH(in_Program)>0 AND TRIM(in_Program)='' \n\t\tOR LENGTH(in_Program\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(in_Program\n\t\t\t)\n\t\t)\n\t) AS out_ProgramCode,\n\t-- *INF*: IIF(ISNULL(in_SurchargeExemptCode),'N/A',in_SurchargeExemptCode)\n\tIFF(in_SurchargeExemptCode IS NULL,\n\t\t'N/A',\n\t\tin_SurchargeExemptCode\n\t) AS out_SurchargeExemptCode,\n\t-- *INF*: IIF(ISNULL(in_StrategicProfitCenterAKId),-1,in_StrategicProfitCenterAKId)\n\tIFF(in_StrategicProfitCenterAKId IS NULL,\n\t\t- 1,\n\t\tin_StrategicProfitCenterAKId\n\t) AS out_StrategicProfitCenterAKId,\n\t-- *INF*: IIF(ISNULL(in_InsuranceSegmentAKId),-1,in_InsuranceSegmentAKId)\n\tIFF(in_InsuranceSegmentAKId IS NULL,\n\t\t- 1,\n\t\tin_InsuranceSegmentAKId\n\t) AS out_InsuranceSegmentAKId,\n\t'N/A' AS out_ObligeeName,\n\t'N' AS out_AutomatedUnderwritingServicesIndicator,\n\t-- *INF*: IIF(in_AutomaticRenewalIndicator = 'T', '1', '0')\n\tIFF(in_AutomaticRenewalIndicator = 'T',\n\t\t'1',\n\t\t'0'\n\t) AS out_AutomaticRenewalIndicator,\n\t-- *INF*: --Fix for defect 3860\r\n\t--  iif(isnull(in_Association) \r\n\t-- or IS_SPACES(in_Association) \r\n\t-- or LENGTH(in_Association)=0\r\n\t-- or in_Association='NA','N/A',in_Association)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(in_Association IS NULL \n\t\tOR LENGTH(in_Association)>0 AND TRIM(in_Association)='' \n\t\tOR LENGTH(in_Association\n\t\t) = 0 \n\t\tOR in_Association = 'NA',\n\t\t'N/A',\n\t\tin_Association\n\t) AS out_Association,\n\tAGG_Remove_Duplicates.Prior_Policy_key,\n\tAGG_Remove_Duplicates.RenewalPolicySymbol,\n\tAGG_Remove_Duplicates.RenewalPolicyNumber,\n\tAGG_Remove_Duplicates.RenewalPolicyMod,\n\tAGG_Remove_Duplicates.IsRollover AS in_IsRollover,\n\t-- *INF*: DECODE(in_IsRollover, 'T',1,'F',0,0)\n\tDECODE(in_IsRollover,\n\t\t'T', 1,\n\t\t'F', 0,\n\t\t0\n\t) AS out_IsRollover,\n\tAGG_Remove_Duplicates.PriorCarrierName AS in_PriorCarrierName,\n\t-- *INF*: IIF(ISNULL(in_PriorCarrierName),'N/A', SUBSTR(LTRIM(RTRIM(in_PriorCarrierName)),1,50))\n\tIFF(in_PriorCarrierName IS NULL,\n\t\t'N/A',\n\t\tSUBSTR(LTRIM(RTRIM(in_PriorCarrierName\n\t\t\t\t)\n\t\t\t), 1, 50\n\t\t)\n\t) AS v_PriorCarrierName,\n\tAGG_Remove_Duplicates.PirorCarrierNameOther AS in_PirorCarrierNameOther,\n\t-- *INF*: IIF(ISNULL(in_PirorCarrierNameOther),'N/A',SUBSTR(LTRIM(RTRIM(in_PirorCarrierNameOther)),1,50))\n\tIFF(in_PirorCarrierNameOther IS NULL,\n\t\t'N/A',\n\t\tSUBSTR(LTRIM(RTRIM(in_PirorCarrierNameOther\n\t\t\t\t)\n\t\t\t), 1, 50\n\t\t)\n\t) AS v_PriorCarrierNameOther,\n\t-- *INF*:  --The chage is implemented for SM 784755 \r\n\t-- IIF(in_IsRollover='T',IIF(v_PriorCarrierName='Other', v_PriorCarrierNameOther,v_PriorCarrierName), 'N/A')\r\n\t-- \r\n\t-- --IIF(v_PriorCarrierName='Other', in_PirorCarrierNameOther,v_PriorCarrierName)\n\tIFF(in_IsRollover = 'T',\n\t\tIFF(v_PriorCarrierName = 'Other',\n\t\t\tv_PriorCarrierNameOther,\n\t\t\tv_PriorCarrierName\n\t\t),\n\t\t'N/A'\n\t) AS out_RolloverPriorCarrier,\n\tAGG_Remove_Duplicates.MailPolicyToInsured AS in_MailPolicyToInsured,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- in_MailPolicyToInsured='T','1',\r\n\t-- in_MailPolicyToInsured='1','1',\r\n\t-- '0')\n\tDECODE(TRUE,\n\t\tin_MailPolicyToInsured = 'T', '1',\n\t\tin_MailPolicyToInsured = '1', '1',\n\t\t'0'\n\t) AS out_MailPolicyToInsured,\n\tLKP_AgencyEmployee_GetAgencyEmployeeAKID.AgencyEmployeeAKID AS in_AgencyEmployeeAKID,\n\t-- *INF*: IIF(ISNULL(in_AgencyEmployeeAKID),-1,in_AgencyEmployeeAKID)\n\tIFF(in_AgencyEmployeeAKID IS NULL,\n\t\t- 1,\n\t\tin_AgencyEmployeeAKID\n\t) AS out_AgencyEmployeeAKID,\n\tLKP_AgencyEmployee_GetAgencyEmployeeAKID.ProducerCode AS in_ProducerCode,\n\t-- *INF*: IIF(ISNULL(in_ProducerCode),'N/A',in_ProducerCode)\n\tIFF(in_ProducerCode IS NULL,\n\t\t'N/A',\n\t\tin_ProducerCode\n\t) AS out_ProducerCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- in_PolicyIssueCodeOverride='T','1',\r\n\t-- in_PolicyIssueCodeOverride='1','1',\r\n\t-- '0')\n\tDECODE(TRUE,\n\t\tin_PolicyIssueCodeOverride = 'T', '1',\n\t\tin_PolicyIssueCodeOverride = '1', '1',\n\t\t'0'\n\t) AS o_PolicyIssueCodeOverride,\n\tv_policy_key AS v_prev_policy_key,\n\t-- *INF*: IIF(ISNULL(in_PoolCode),'N/A',in_PoolCode)\n\tIFF(in_PoolCode IS NULL,\n\t\t'N/A',\n\t\tin_PoolCode\n\t) AS o_PoolCode,\n\tAGG_Remove_Duplicates.IssuedUWID AS in_IssuedUWID,\n\t-- *INF*: IIF(ISNULL(in_IssuedUWID) OR IS_SPACES(in_IssuedUWID) OR LENGTH(in_IssuedUWID)=0 OR in_IssuedUWID = '0','N/A',in_IssuedUWID)\n\tIFF(in_IssuedUWID IS NULL \n\t\tOR LENGTH(in_IssuedUWID)>0 AND TRIM(in_IssuedUWID)='' \n\t\tOR LENGTH(in_IssuedUWID\n\t\t) = 0 \n\t\tOR in_IssuedUWID = '0',\n\t\t'N/A',\n\t\tin_IssuedUWID\n\t) AS o_IssuedUWID,\n\tAGG_Remove_Duplicates.IssuedUnderwriter AS in_IssuedUnderwriter,\n\t-- *INF*: IIF(ISNULL(in_IssuedUnderwriter) OR IS_SPACES(in_IssuedUnderwriter) OR LENGTH(in_IssuedUnderwriter)=0,'N/A',in_IssuedUnderwriter)\n\tIFF(in_IssuedUnderwriter IS NULL \n\t\tOR LENGTH(in_IssuedUnderwriter)>0 AND TRIM(in_IssuedUnderwriter)='' \n\t\tOR LENGTH(in_IssuedUnderwriter\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_IssuedUnderwriter\n\t) AS o_IssuedUnderwriter\n\tFROM AGG_Remove_Duplicates\n\tLEFT JOIN LKP_Agency\n\tON LKP_Agency.AgencyCode = AGG_Remove_Duplicates.out_Reference\n\tLEFT JOIN LKP_AgencyEmployee_GetAgencyEmployeeAKID\n\tON LKP_AgencyEmployee_GetAgencyEmployeeAKID.UserID = LKP_WBProducer_Stage.Name AND LKP_AgencyEmployee_GetAgencyEmployeeAKID.AgencyAKID = LKP_Agency.AgencyAKID\n\tLEFT JOIN LKP_ArchDCTransactionStaging\n\tON LKP_ArchDCTransactionStaging.PolicyNumber = AGG_Remove_Duplicates.out_PolicyNumber AND LKP_ArchDCTransactionStaging.PolicyVersion = AGG_Remove_Duplicates.out_PolicyVersion\n\tLEFT JOIN LKP_InsuranceSegment\n\tON LKP_InsuranceSegment.InsuranceSegmentCode = LKP_SupStrategicProfitCenterInsuranceSegment.InsuranceSegmentCode\n\tLEFT JOIN LKP_PolicyOffering\n\tON LKP_PolicyOffering.PolicyOfferingCode = EXP_ConvertPolicyOffering.o_PolicyOfferingCode\n\tLEFT JOIN LKP_StrategicProfitCenterAKId\n\tON LKP_StrategicProfitCenterAKId.StrategicProfitCenterCode = LKP_SupStrategicProfitCenterInsuranceSegment.StrategicProfitCenterCode\n\tLEFT JOIN LKP_agency_ak_id\n\tON LKP_agency_ak_id.agency_key = AGG_Remove_Duplicates.out_Reference\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_PolicyKey.out_policy_key AND LKP_policy.eff_from_date <= EXP_PolicyKey.out_CreatedDate AND LKP_policy.eff_to_date >= EXP_PolicyKey.out_CreatedDate\n\tLEFT JOIN LKP_sup_reason_amended_code\n\tON LKP_sup_reason_amended_code.rsn_amended_code = AGG_Remove_Duplicates.ReasonCode\n\tLEFT JOIN LKP_POL_ISSUE_CODE LKP_POL_ISSUE_CODE_v_policy_key\n\tON LKP_POL_ISSUE_CODE_v_policy_key.pol_key = v_policy_key\n\n\tLEFT JOIN LKP_POL_ISSUE_CODE LKP_POL_ISSUE_CODE_Prior_Policy_key\n\tON LKP_POL_ISSUE_CODE_Prior_Policy_key.pol_key = Prior_Policy_key\n\n),\nLKP_Association AS (\n\tSELECT\n\tAssociationCode\n\tFROM (\n\t\tSELECT \n\t\t\tAssociationCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Association\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AssociationCode ORDER BY AssociationCode) = 1\n),\nLKP_Program AS (\n\tSELECT\n\tProgramAKId,\n\tProgramCode\n\tFROM (\n\t\tSELECT \n\t\t\tProgramAKId,\n\t\t\tProgramCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Program\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramCode ORDER BY ProgramAKId) = 1\n),\nLKP_SupSurchargeExempt AS (\n\tSELECT\n\tSupSurchargeExemptId,\n\tSurchargeExemptCode\n\tFROM (\n\t\tSELECT \n\t\t\tSupSurchargeExemptId,\n\t\t\tSurchargeExemptCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupSurchargeExempt\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SurchargeExemptCode ORDER BY SupSurchargeExemptId) = 1\n),\nLKP_contract_customer_key AS (\n\tSELECT\n\tcontract_cust_ak_id,\n\tcontract_key\n\tFROM (\n\t\tSELECT \r\n\t\tcontract_customer.contract_cust_ak_id as contract_cust_ak_id, \r\n\t\tltrim(rtrim(contract_customer.contract_key)) as contract_key \r\n\t\tFROM \r\n\t\tcontract_customer\r\n\t\tWHERE contract_customer.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY contract_key ORDER BY contract_cust_ak_id DESC) = 1\n),\nLKP_producer_code AS (\n\tSELECT\n\tprdcr_code_ak_id,\n\tagency_key,\n\tproducer_code\n\tFROM (\n\t\tSELECT \n\t\t\tprdcr_code_ak_id,\n\t\t\tagency_key,\n\t\t\tproducer_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.producer_code\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = '@{pipeline().parameters.AGENCY_SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY agency_key,producer_code ORDER BY prdcr_code_ak_id) = 1\n),\nLKP_sup_business_classification_code AS (\n\tSELECT\n\tsup_bus_class_code_id,\n\tbus_class_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_bus_class_code_id,\n\t\t\tbus_class_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_business_classification_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY bus_class_code ORDER BY sup_bus_class_code_id) = 1\n),\nLKP_sup_industry_risk_grade_code AS (\n\tSELECT\n\tsup_industry_risk_grade_code_id,\n\tindustry_risk_grade_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_industry_risk_grade_code_id,\n\t\t\tindustry_risk_grade_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_industry_risk_grade_code\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY industry_risk_grade_code ORDER BY sup_industry_risk_grade_code_id) = 1\n),\nLKP_sup_policy_audit_frequency AS (\n\tSELECT\n\tsup_pol_audit_frqncy_id,\n\tpol_audit_frqncy_descript\n\tFROM (\n\t\tSELECT \n\t\t\tsup_pol_audit_frqncy_id,\n\t\t\tpol_audit_frqncy_descript\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_policy_audit_frequency\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_audit_frqncy_descript ORDER BY sup_pol_audit_frqncy_id) = 1\n),\nLKP_sup_policy_issue_code AS (\n\tSELECT\n\tsup_pol_issue_code_id,\n\tpol_issue_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_pol_issue_code_id,\n\t\t\tpol_issue_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_policy_issue_code\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_issue_code ORDER BY sup_pol_issue_code_id) = 1\n),\nLKP_sup_policy_status_code AS (\n\tSELECT\n\tsup_pol_status_code_id,\n\tpol_status_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_pol_status_code_id,\n\t\t\tpol_status_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_policy_status_code\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_status_code ORDER BY sup_pol_status_code_id) = 1\n),\nLKP_sup_policy_term AS (\n\tSELECT\n\tsup_pol_term_id,\n\tpol_term\n\tFROM (\n\t\tSELECT \n\t\t\tsup_pol_term_id,\n\t\t\tpol_term\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_policy_term\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_term ORDER BY sup_pol_term_id) = 1\n),\nLKP_sup_state AS (\n\tSELECT\n\tstate_abbrev,\n\tsup_state_id,\n\tstate_code\n\tFROM (\n\t\tSELECT \n\t\t\tstate_abbrev,\n\t\t\tsup_state_id,\n\t\t\tstate_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag = 1 AND source_sys_id = 'EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY state_abbrev) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_policy.pol_id AS lkp_pol_id,\n\tLKP_policy.pol_ak_id AS lkp_pol_ak_id,\n\tLKP_policy.eff_from_date AS lkp_eff_from_date,\n\tLKP_policy.contract_cust_ak_id AS lkp_contract_cust_ak_id,\n\tLKP_policy.agency_ak_id AS lkp_agency_ak_id,\n\tLKP_policy.AgencyAKID AS lkp_AgencyAKID,\n\tLKP_policy.pol_key AS lkp_pol_key,\n\tLKP_policy.mco AS lkp_mco,\n\tLKP_policy.pol_co_num AS lkp_pol_co_num,\n\tLKP_policy.pol_eff_date AS lkp_pol_eff_date,\n\tLKP_policy.pol_exp_date AS lkp_pol_exp_date,\n\tLKP_policy.orig_incptn_date AS lkp_orig_incptn_date,\n\tLKP_policy.prim_bus_class_code AS lkp_prim_bus_class_code,\n\tLKP_policy.reins_code AS lkp_reins_code,\n\tLKP_policy.pms_pol_lob_code AS lkp_pms_pol_lob_code,\n\tLKP_policy.pol_co_line_code AS lkp_pol_co_line_code,\n\tLKP_policy.pol_cancellation_ind AS lkp_pol_cancellation_ind,\n\tLKP_policy.pol_cancellation_date AS lkp_pol_cancellation_date,\n\tLKP_policy.pol_cancellation_rsn_code AS lkp_pol_cancellation_rsn_code,\n\tLKP_policy.state_of_domicile_code AS lkp_state_of_domicile_code,\n\tLKP_policy.wbconnect_upload_code AS lkp_wbconnect_upload_code,\n\tLKP_policy.serv_center_support_code AS lkp_serv_center_support_code,\n\tLKP_policy.pol_term AS lkp_pol_term,\n\tLKP_policy.terrorism_risk_ind AS lkp_terrorism_risk_ind,\n\tLKP_policy.prior_pol_key AS lkp_prior_pol_key,\n\tLKP_policy.pol_status_code AS lkp_pol_status_code,\n\tLKP_policy.pol_issue_code AS lkp_pol_issue_code,\n\tLKP_policy.pol_age AS lkp_pol_age,\n\tLKP_policy.industry_risk_grade_code AS lkp_industry_risk_grade_code,\n\tLKP_policy.uw_review_yr AS lkp_uw_review_yr,\n\tLKP_policy.mvr_request_code AS lkp_mvr_request_code,\n\tLKP_policy.renl_code AS lkp_renl_code,\n\tLKP_policy.amend_num AS lkp_amend_num,\n\tLKP_policy.anniversary_rerate_code AS lkp_anniversary_rerate_code,\n\tLKP_policy.pol_audit_frqncy AS lkp_pol_audit_frqncy,\n\tLKP_policy.final_audit_code AS lkp_final_audit_code,\n\tLKP_policy.zip_ind AS lkp_zip_ind,\n\tLKP_policy.guarantee_ind AS lkp_guarantee_ind,\n\tLKP_policy.variation_code AS lkp_variation_code,\n\tLKP_policy.county AS lkp_county,\n\tLKP_policy.non_smoker_disc_code AS lkp_non_smoker_disc_code,\n\tLKP_policy.renl_disc AS lkp_renl_disc,\n\tLKP_policy.renl_safe_driver_disc_count AS lkp_renl_safe_driver_disc_count,\n\tLKP_policy.nonrenewal_flag_date AS lkp_nonrenewal_flag_date,\n\tLKP_policy.audit_complt_date AS lkp_audit_complt_date,\n\tLKP_policy.orig_acct_date AS lkp_orig_acct_date,\n\tLKP_policy.pol_enter_date AS lkp_pol_enter_date,\n\tLKP_policy.excess_claim_code AS lkp_excess_claim_code,\n\tLKP_policy.pol_status_on_pif AS lkp_pol_status_on_pif,\n\tLKP_policy.target_mrkt_code AS lkp_target_mrkt_code,\n\tLKP_policy.pkg_code AS lkp_pkg_code,\n\tLKP_policy.pol_kind_code AS lkp_pol_kind_code,\n\tLKP_policy.bus_seg_code AS lkp_bus_seg_code,\n\tLKP_policy.pif_upload_audit_ind AS lkp_pif_upload_audit_ind,\n\tLKP_policy.err_flag_bal_txn AS lkp_err_flag_bal_txn,\n\tLKP_policy.err_flag_bal_reins AS lkp_err_flag_bal_reins,\n\tLKP_policy.producer_code_ak_id AS lkp_producer_code_ak_id,\n\tLKP_policy.prdcr_code AS lkp_prdcr_code,\n\tLKP_policy.ClassOfBusiness AS lkp_ClassOfBusiness,\n\tLKP_policy.strtgc_bus_dvsn_ak_id AS lkp_strtgc_bus_dvsn_ak_id,\n\tLKP_policy.ErrorFlagBalancePremiumTransaction AS lkp_ErrorFlagBalancePremiumTransaction,\n\tLKP_policy.RenewalPolicyNumber AS lkp_RenewalPolicyNumber,\n\tLKP_policy.RenewalPolicySymbol AS lkp_RenewalPolicySymbol,\n\tLKP_policy.RenewalPolicyMod AS lkp_RenewalPolicyMod,\n\tLKP_policy.BillingType AS lkp_BillingType,\n\tLKP_policy.sup_bus_class_code_id AS lkp_sup_bus_class_code_id,\n\tLKP_policy.sup_pol_term_id AS lkp_sup_pol_term_id,\n\tLKP_policy.sup_pol_status_code_id AS lkp_sup_pol_status_code_id,\n\tLKP_policy.sup_pol_issue_code_id AS lkp_sup_pol_issue_code_id,\n\tLKP_policy.sup_pol_audit_frqncy_id AS lkp_sup_pol_audit_frqncy_id,\n\tLKP_policy.sup_industry_risk_grade_code_id AS lkp_sup_industry_risk_grade_code_id,\n\tLKP_policy.sup_state_id AS lkp_sup_state_id,\n\tLKP_policy.PolicyOfferingAKId AS lkp_PolicyOfferingAKId,\n\tLKP_policy.producer_code_id AS lkp_producer_code_id,\n\tLKP_policy.SurchargeExemptCode AS lkp_SurchargeExemptCode,\n\tLKP_policy.SupSurchargeExemptID AS lkp_SupSurchargeExemptID,\n\tLKP_policy.StrategicProfitCenterAKId AS lkp_StrategicProfitCenterAKId,\n\tLKP_policy.InsuranceSegmentAKId AS lkp_InsuranceSegmentAKId,\n\tLKP_policy.ProgramAKId AS lkp_ProgramAKId,\n\tLKP_policy.ObligeeName AS lkp_ObligeeName,\n\tLKP_policy.AutomatedUnderwritingServicesIndicator AS lkp_AutomatedUnderwritingServicesIndicator,\n\tLKP_policy.AutomaticRenewalIndicator AS lkp_AutomaticRenewalIndicator,\n\tLKP_policy.AssociationCode AS lkp_AssociationCode,\n\tLKP_policy.PoolCode AS lkp_PoolCode,\n\tLKP_policy.IssuedUWID AS lkp_IssuedUWID,\n\tLKP_policy.IssuedUnderwriter AS lkp_IssuedUnderwriter,\n\tLKP_contract_customer_key.contract_cust_ak_id AS in_contract_cust_ak_id,\n\tLKP_producer_code.prdcr_code_ak_id AS in_producer_code_ak_id,\n\tLKP_sup_business_classification_code.sup_bus_class_code_id AS in_sup_bus_class_code_id,\n\tLKP_sup_policy_term.sup_pol_term_id AS in_sup_pol_term_id,\n\tLKP_sup_policy_status_code.sup_pol_status_code_id AS in_sup_pol_status_code_id,\n\tLKP_sup_policy_issue_code.sup_pol_issue_code_id AS in_sup_pol_issue_code_id,\n\tLKP_sup_policy_audit_frequency.sup_pol_audit_frqncy_id AS in_sup_pol_audit_frqncy_id,\n\tLKP_sup_industry_risk_grade_code.sup_industry_risk_grade_code_id AS in_sup_industry_risk_grade_code_id,\n\tLKP_sup_state.sup_state_id AS in_sup_state_id,\n\tEXP_values.Type AS in_TransactionType,\n\tEXP_values.out_AgencyAKID AS in_AgencyAKID,\n\tEXP_values.out_PolicyOfferingAKId AS in_PolicyOfferingAKId,\n\tLKP_Program.ProgramAKId AS in_ProgramAKId,\n\tEXP_values.out_strtgc_bus_dvsn_code AS in_strtgc_bus_dvsn_code,\n\tEXP_values.out_StrategicProfitCenterAKId AS in_StrategicProfitCenterAKId,\n\tEXP_values.out_InsuranceSegmentAKId AS in_InsuranceSegmentAKId,\n\tLKP_Association.AssociationCode AS in_AssociationCode,\n\tEXP_values.AssociationDiscountFactor AS in_AssociationDiscountFactor,\n\tEXP_values.out_CreatedDate AS in_CreatedDate,\n\tEXP_values.out_Association AS in_Association,\n\tEXP_values.o_PoolCode AS in_PoolCode,\n\tEXP_values.o_IssuedUWID AS in_IssuedUWID,\n\tEXP_values.o_IssuedUnderwriter AS in_IssuedUnderwriter,\n\tEXP_values.out_AgencyEmployeeAKID AS AgencyEmployeeAKId,\n\tEXP_values.out_policy_key AS pol_key,\n\tEXP_values.out_mco AS mco,\n\tEXP_values.out_pol_co_num AS pol_co_num,\n\tEXP_values.out_EffectiveDate AS pol_eff_date,\n\tEXP_values.out_ExpirationDate AS pol_exp_date,\n\tEXP_values.out_InceptionDate AS orig_incptn_date,\n\tEXP_values.out_prim_bus_class_code AS prim_bus_class_code,\n\tEXP_values.out_reins_code AS reins_code,\n\tEXP_values.out_pms_pol_lob_code AS pms_pol_lob_code,\n\tEXP_values.out_pol_co_line_code AS pol_co_line_code,\n\tEXP_values.out_pol_cancellation_ind AS pol_cancellation_ind,\n\tEXP_values.out_pol_cancellation_date AS pol_cancellation_date,\n\tEXP_values.out_pol_cancellation_rsn_code AS pol_cancellation_rsn_code,\n\tLKP_sup_state.state_abbrev AS state_of_domicile_code,\n\tEXP_values.out_wbconnect_upload_code AS wbconnect_upload_code,\n\tEXP_values.out_serv_center_support_code AS serv_center_support_code,\n\tEXP_values.out_pol_term AS pol_term,\n\tEXP_values.out_terrorism_risk_ind AS terrorism_risk_ind,\n\tEXP_values.out_pol_status_code AS pol_status_code,\n\tEXP_values.out_pol_issue_code AS pol_issue_code,\n\tEXP_values.out_pol_age AS pol_age,\n\tEXP_values.out_industry_risk_grade_code AS industry_risk_grade_code,\n\tEXP_values.out_uw_review_yr AS uw_review_yr,\n\tEXP_values.out_mvr_request_code AS mvr_request_code,\n\tEXP_values.out_renl_code AS renl_code,\n\tEXP_values.out_amend_num AS amend_num,\n\tEXP_values.out_anniversary_rerate_code AS anniversary_rerate_code,\n\tEXP_values.out_pol_audit_frqncy AS pol_audit_frqncy,\n\tEXP_values.out_final_audit_code AS final_audit_code,\n\tEXP_values.out_zip_ind AS zip_ind,\n\tEXP_values.out_guarantee_ind AS guarantee_ind,\n\tEXP_values.out_variation_code AS variation_code,\n\tEXP_values.out_county AS county,\n\tEXP_values.out_non_smoker_disc_code AS non_smoker_disc_code,\n\tEXP_values.out_renl_disc AS renl_disc,\n\tEXP_values.out_renl_safe_driver_disc_count AS renl_safe_driver_disc_count,\n\tEXP_values.out_nonrenewal_flag_date AS nonrenewal_flag_date,\n\tEXP_values.out_audit_complt_date AS audit_complt_date,\n\tEXP_values.out_orig_acct_date AS orig_acct_date,\n\tEXP_values.out_pol_enter_date AS pol_enter_date,\n\tEXP_values.out_excess_claim_code AS excess_claim_code,\n\tEXP_values.out_pol_status_on_pif AS pol_status_on_pif,\n\tEXP_values.out_target_mrkt_code AS target_mrkt_code,\n\tEXP_values.out_pkg_code AS pkg_code,\n\tEXP_values.out_pol_kind_code AS pol_kind_code,\n\tEXP_values.out_bus_seg_code AS bus_seg_code,\n\tEXP_values.out_pif_upload_audit_ind AS pif_upload_audit_ind,\n\tEXP_values.out_err_flag_bal_txn AS err_flag_bal_txn,\n\tEXP_values.out_err_flag_bal_reins AS err_flag_bal_reins,\n\tEXP_values.out_ProducerCode AS prdcr_code,\n\tEXP_values.out_ClassOfBusiness AS ClassOfBusiness,\n\tEXP_values.out_ErrorFlagBalancePremiumTransaction AS ErrorFlagBalancePremiumTransaction,\n\tEXP_values.out_BillingType AS BillingType,\n\tEXP_values.out_pol_sym AS pol_sym,\n\tEXP_values.out_PolicyNumber AS PolicyNumber,\n\tEXP_values.out_PolicyVersion AS PolicyVersion,\n\tEXP_values.out_producer_code_id AS producer_code_id,\n\tEXP_values.out_SurchargeExemptCode AS SurchargeExemptCode,\n\tLKP_SupSurchargeExempt.SupSurchargeExemptId,\n\tEXP_values.out_ObligeeName AS ObligeeName,\n\tEXP_values.out_AutomatedUnderwritingServicesIndicator AS AutomatedUnderwritingServicesIndicator,\n\tEXP_values.out_AutomaticRenewalIndicator AS AutomaticRenewalIndicator,\n\tEXP_values.Prior_Policy_key,\n\tEXP_values.RenewalPolicySymbol,\n\tEXP_values.RenewalPolicyNumber,\n\tEXP_values.RenewalPolicyMod,\n\tEXP_values.agency_ak_id,\n\t-- *INF*: :LKP.LKP_POLICY_CONTRACT_CUSTOMER(pol_key)\n\tLKP_POLICY_CONTRACT_CUSTOMER_pol_key.contract_cust_ak_id AS v_LKP_Policy_Contract_Cust_Ak_Id,\n\t-- *INF*: Decode(TRUE,\r\n\t-- (ISNULL(lkp_contract_cust_ak_id)=0 and lkp_contract_cust_ak_id<>-1),lkp_contract_cust_ak_id,\r\n\t-- ISNULL(v_LKP_Policy_Contract_Cust_Ak_Id)=0,v_LKP_Policy_Contract_Cust_Ak_Id,\r\n\t-- in_contract_cust_ak_id)\r\n\t-- \r\n\t-- --Decode(TRUE,\r\n\t-- --ISNULL(lkp_contract_cust_ak_id)=0,lkp_contract_cust_ak_id,\r\n\t-- --ISNULL(v_LKP_Policy_Contract_Cust_Ak_Id)=--0,v_LKP_Policy_Contract_Cust_Ak_Id,\r\n\t-- --in_contract_cust_ak_id)\n\tDecode(TRUE,\n\t\t( lkp_contract_cust_ak_id IS NULL = 0 \n\t\t\tAND lkp_contract_cust_ak_id <> - 1 \n\t\t), lkp_contract_cust_ak_id,\n\t\tv_LKP_Policy_Contract_Cust_Ak_Id IS NULL = 0, v_LKP_Policy_Contract_Cust_Ak_Id,\n\t\tin_contract_cust_ak_id\n\t) AS v_contract_cust_ak_id,\n\t-- *INF*: IIF(ISNULL(in_ProgramAKId),-1,in_ProgramAKId)\n\tIFF(in_ProgramAKId IS NULL,\n\t\t- 1,\n\t\tin_ProgramAKId\n\t) AS v_ProgramAKId,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_AgencyAKID),\r\n\t--   -1,\r\n\t--   in_AgencyAKID\r\n\t-- )\n\tIFF(in_AgencyAKID IS NULL,\n\t\t- 1,\n\t\tin_AgencyAKID\n\t) AS v_AgencyAKID,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_producer_code_ak_id),\r\n\t--   -1,\r\n\t--   in_producer_code_ak_id\r\n\t-- )\n\tIFF(in_producer_code_ak_id IS NULL,\n\t\t- 1,\n\t\tin_producer_code_ak_id\n\t) AS v_producer_code_ak_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_bus_class_code_id),\r\n\t--   -1,\r\n\t--   in_sup_bus_class_code_id\r\n\t-- )\n\tIFF(in_sup_bus_class_code_id IS NULL,\n\t\t- 1,\n\t\tin_sup_bus_class_code_id\n\t) AS v_sup_bus_class_code_id,\n\t-- *INF*: :LKP.LKP_STRATEGIC_BUSINESS_DIVISION(in_strtgc_bus_dvsn_code)\n\tLKP_STRATEGIC_BUSINESS_DIVISION_in_strtgc_bus_dvsn_code.strtgc_bus_dvsn_ak_id AS v_strtgc_bus_dvsn_ak_id_1,\n\t-- *INF*: IIF(ISNULL(v_strtgc_bus_dvsn_ak_id_1),:LKP.LKP_STRATEGIC_BUSINESS_DIVISION('6'),v_strtgc_bus_dvsn_ak_id_1)\n\tIFF(v_strtgc_bus_dvsn_ak_id_1 IS NULL,\n\t\tLKP_STRATEGIC_BUSINESS_DIVISION__6.strtgc_bus_dvsn_ak_id,\n\t\tv_strtgc_bus_dvsn_ak_id_1\n\t) AS v_strtgc_bus_dvsn_ak_id_2,\n\t-- *INF*: IIF(ISNULL(v_strtgc_bus_dvsn_ak_id_2),-1,v_strtgc_bus_dvsn_ak_id_2)\n\tIFF(v_strtgc_bus_dvsn_ak_id_2 IS NULL,\n\t\t- 1,\n\t\tv_strtgc_bus_dvsn_ak_id_2\n\t) AS v_strtgc_bus_dvsn_ak_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_pol_term_id),\r\n\t--   -1,\r\n\t--   in_sup_pol_term_id\r\n\t-- )\n\tIFF(in_sup_pol_term_id IS NULL,\n\t\t- 1,\n\t\tin_sup_pol_term_id\n\t) AS v_sup_pol_term_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_pol_status_code_id),\r\n\t--   -1,\r\n\t--   in_sup_pol_status_code_id\r\n\t-- )\n\tIFF(in_sup_pol_status_code_id IS NULL,\n\t\t- 1,\n\t\tin_sup_pol_status_code_id\n\t) AS v_sup_pol_status_code_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_pol_issue_code_id),\r\n\t--   -1,\r\n\t--   in_sup_pol_issue_code_id\r\n\t-- )\n\tIFF(in_sup_pol_issue_code_id IS NULL,\n\t\t- 1,\n\t\tin_sup_pol_issue_code_id\n\t) AS v_sup_pol_issue_code_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_pol_audit_frqncy_id),\r\n\t--   -1,\r\n\t--   in_sup_pol_audit_frqncy_id\r\n\t-- )\n\tIFF(in_sup_pol_audit_frqncy_id IS NULL,\n\t\t- 1,\n\t\tin_sup_pol_audit_frqncy_id\n\t) AS v_sup_pol_audit_frqncy_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_industry_risk_grade_code_id),\r\n\t--   -1,\r\n\t--   in_sup_industry_risk_grade_code_id\r\n\t-- )\n\tIFF(in_sup_industry_risk_grade_code_id IS NULL,\n\t\t- 1,\n\t\tin_sup_industry_risk_grade_code_id\n\t) AS v_sup_industry_risk_grade_code_id,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(in_sup_state_id),\r\n\t--   -1,\r\n\t--   in_sup_state_id\r\n\t-- )\n\tIFF(in_sup_state_id IS NULL,\n\t\t- 1,\n\t\tin_sup_state_id\n\t) AS v_sup_state_id,\n\t-- *INF*: IIF(ISNULL(SupSurchargeExemptId),-1,SupSurchargeExemptId)\n\tIFF(SupSurchargeExemptId IS NULL,\n\t\t- 1,\n\t\tSupSurchargeExemptId\n\t) AS v_SupSurchargeExemptId,\n\t-- *INF*: DECODE(lkp_AutomaticRenewalIndicator, 'T', '1', 'F', '0', NULL)\n\tDECODE(lkp_AutomaticRenewalIndicator,\n\t\t'T', '1',\n\t\t'F', '0',\n\t\tNULL\n\t) AS v_lkp_AutomaticRenewalIndicator,\n\t-- *INF*: iif(isnull(in_AssociationCode ) or IS_SPACES(in_AssociationCode ) or LENGTH(in_AssociationCode )=0,'N/A',in_AssociationCode )\r\n\t-- \r\n\t-- \n\tIFF(in_AssociationCode IS NULL \n\t\tOR LENGTH(in_AssociationCode)>0 AND TRIM(in_AssociationCode)='' \n\t\tOR LENGTH(in_AssociationCode\n\t\t) = 0,\n\t\t'N/A',\n\t\tin_AssociationCode\n\t) AS v_Association,\n\tLKP_policy.RolloverPolicyIndicator AS lkp_RolloverPolicyIndicator,\n\t-- *INF*: DECODE(lkp_RolloverPolicyIndicator, 'T', '1', 'F', '0', '0')\n\tDECODE(lkp_RolloverPolicyIndicator,\n\t\t'T', '1',\n\t\t'F', '0',\n\t\t'0'\n\t) AS v_lkp_RolloverPolicyIndicator,\n\tLKP_policy.RolloverPriorCarrier AS lkp_RolloverPriorCarrier,\n\t-- *INF*: IIF(ISNULL(lkp_RolloverPriorCarrier),'N/A',lkp_RolloverPriorCarrier)\n\tIFF(lkp_RolloverPriorCarrier IS NULL,\n\t\t'N/A',\n\t\tlkp_RolloverPriorCarrier\n\t) AS v_lkp_RolloverPriorCarrier,\n\tLKP_policy.MailToInsuredFlag AS lkp_MailPolicyToInsured,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- lkp_MailPolicyToInsured='T','1',\r\n\t-- lkp_MailPolicyToInsured='1','1',\r\n\t-- '0')\n\tDECODE(TRUE,\n\t\tlkp_MailPolicyToInsured = 'T', '1',\n\t\tlkp_MailPolicyToInsured = '1', '1',\n\t\t'0'\n\t) AS v_lkp_MailPolicyToInsured,\n\tLKP_policy.AgencyEmployeeAKId AS lkp_AgencyEmployeeAKId,\n\tLKP_policy.PolicyIssueCodeOverride AS lkp_PolicyIssueCodeOverride,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- lkp_PolicyIssueCodeOverride='T','1',\r\n\t-- lkp_PolicyIssueCodeOverride='1','1',\r\n\t-- '0')\n\tDECODE(TRUE,\n\t\tlkp_PolicyIssueCodeOverride = 'T', '1',\n\t\tlkp_PolicyIssueCodeOverride = '1', '1',\n\t\t'0'\n\t) AS v_lkp_PolicyIssueCodeOverride,\n\tEXP_values.out_IsRollover AS IsRollover,\n\tEXP_values.out_RolloverPriorCarrier AS RolloverPriorCarrier,\n\tEXP_values.out_MailPolicyToInsured AS MailPolicyToInsured,\n\tEXP_values.o_PolicyIssueCodeOverride AS in_PolicyIssueCodeOverride,\n\t-- *INF*: MD5(TO_CHAR(v_contract_cust_ak_id)||\r\n\t-- TO_CHAR(agency_ak_id) || \r\n\t-- TO_CHAR(v_AgencyAKID)||\r\n\t-- TO_CHAR(mco)||\r\n\t-- TO_CHAR(pol_co_num)||\r\n\t-- TO_CHAR(pol_eff_date)||\r\n\t-- TO_CHAR(pol_exp_date)||\r\n\t-- TO_CHAR(orig_incptn_date)||\r\n\t-- TO_CHAR(prim_bus_class_code)||\r\n\t-- TO_CHAR(reins_code)||\r\n\t-- TO_CHAR(pms_pol_lob_code)||\r\n\t-- TO_CHAR(pol_co_line_code)||\r\n\t-- TO_CHAR(pol_cancellation_ind)||\r\n\t-- TO_CHAR(pol_cancellation_date)||\r\n\t-- TO_CHAR(pol_cancellation_rsn_code)||\r\n\t-- TO_CHAR(state_of_domicile_code)||\r\n\t-- TO_CHAR(wbconnect_upload_code)||\r\n\t-- TO_CHAR(serv_center_support_code)||\r\n\t-- TO_CHAR(pol_term)||\r\n\t-- TO_CHAR(terrorism_risk_ind)||\r\n\t-- TO_CHAR(Prior_Policy_key)||\r\n\t-- TO_CHAR(pol_status_code)||\r\n\t-- TO_CHAR(pol_issue_code)||\r\n\t-- TO_CHAR(pol_age)||\r\n\t-- TO_CHAR(industry_risk_grade_code)||\r\n\t-- TO_CHAR(uw_review_yr)||\r\n\t-- TO_CHAR(mvr_request_code)||\r\n\t-- TO_CHAR(renl_code)||\r\n\t-- TO_CHAR(amend_num)||\r\n\t-- TO_CHAR(anniversary_rerate_code)||\r\n\t-- TO_CHAR(pol_audit_frqncy)||\r\n\t-- TO_CHAR(final_audit_code)||\r\n\t-- TO_CHAR(zip_ind)||\r\n\t-- TO_CHAR(guarantee_ind)||\r\n\t-- TO_CHAR(variation_code)||\r\n\t-- TO_CHAR(county)||\r\n\t-- TO_CHAR(non_smoker_disc_code)||\r\n\t-- TO_CHAR(renl_disc)||\r\n\t-- TO_CHAR(renl_safe_driver_disc_count)||\r\n\t-- TO_CHAR(nonrenewal_flag_date)||\r\n\t-- TO_CHAR(audit_complt_date)||\r\n\t-- TO_CHAR(orig_acct_date)||\r\n\t-- TO_CHAR(pol_enter_date)||\r\n\t-- TO_CHAR(excess_claim_code)||\r\n\t-- TO_CHAR(pol_status_on_pif)||\r\n\t-- TO_CHAR(target_mrkt_code)||\r\n\t-- TO_CHAR(pkg_code)||\r\n\t-- TO_CHAR(pol_kind_code)||\r\n\t-- TO_CHAR(bus_seg_code)||\r\n\t-- TO_CHAR(pif_upload_audit_ind)||\r\n\t-- TO_CHAR(err_flag_bal_txn)||\r\n\t-- TO_CHAR(err_flag_bal_reins)||\r\n\t-- TO_CHAR(v_producer_code_ak_id)||\r\n\t-- TO_CHAR(prdcr_code)||\r\n\t-- TO_CHAR(ClassOfBusiness)||\r\n\t-- TO_CHAR(v_strtgc_bus_dvsn_ak_id)||\r\n\t-- TO_CHAR(ErrorFlagBalancePremiumTransaction)||\r\n\t-- TO_CHAR(RenewalPolicyNumber)||\r\n\t-- TO_CHAR(RenewalPolicySymbol)||\r\n\t-- TO_CHAR(RenewalPolicyMod)||\r\n\t-- TO_CHAR(BillingType)||\r\n\t-- TO_CHAR(v_sup_bus_class_code_id)||\r\n\t-- TO_CHAR(v_sup_pol_term_id)||\r\n\t-- TO_CHAR(v_sup_pol_status_code_id)||\r\n\t-- TO_CHAR(v_sup_pol_issue_code_id)||\r\n\t-- TO_CHAR(v_sup_pol_audit_frqncy_id)||\r\n\t-- TO_CHAR(v_sup_industry_risk_grade_code_id)||\r\n\t-- TO_CHAR(v_sup_state_id)||\r\n\t-- TO_CHAR(in_PolicyOfferingAKId)||\r\n\t-- TO_CHAR(producer_code_id)||\r\n\t-- TO_CHAR(SurchargeExemptCode)||\r\n\t-- TO_CHAR(v_SupSurchargeExemptId )||\r\n\t-- TO_CHAR(v_Association)||\r\n\t-- TO_CHAR(in_StrategicProfitCenterAKId)||\r\n\t-- TO_CHAR(in_InsuranceSegmentAKId)||\r\n\t-- TO_CHAR(v_ProgramAKId)||\r\n\t-- TO_CHAR(ObligeeName)||\r\n\t-- TO_CHAR(AutomatedUnderwritingServicesIndicator)||\r\n\t-- TO_CHAR(AutomaticRenewalIndicator)||\r\n\t-- TO_CHAR(in_PoolCode)\r\n\t-- )\n\tMD5(TO_CHAR(v_contract_cust_ak_id\n\t\t) || TO_CHAR(agency_ak_id\n\t\t) || TO_CHAR(v_AgencyAKID\n\t\t) || TO_CHAR(mco\n\t\t) || TO_CHAR(pol_co_num\n\t\t) || TO_CHAR(pol_eff_date\n\t\t) || TO_CHAR(pol_exp_date\n\t\t) || TO_CHAR(orig_incptn_date\n\t\t) || TO_CHAR(prim_bus_class_code\n\t\t) || TO_CHAR(reins_code\n\t\t) || TO_CHAR(pms_pol_lob_code\n\t\t) || TO_CHAR(pol_co_line_code\n\t\t) || TO_CHAR(pol_cancellation_ind\n\t\t) || TO_CHAR(pol_cancellation_date\n\t\t) || TO_CHAR(pol_cancellation_rsn_code\n\t\t) || TO_CHAR(state_of_domicile_code\n\t\t) || TO_CHAR(wbconnect_upload_code\n\t\t) || TO_CHAR(serv_center_support_code\n\t\t) || TO_CHAR(pol_term\n\t\t) || TO_CHAR(terrorism_risk_ind\n\t\t) || TO_CHAR(Prior_Policy_key\n\t\t) || TO_CHAR(pol_status_code\n\t\t) || TO_CHAR(pol_issue_code\n\t\t) || TO_CHAR(pol_age\n\t\t) || TO_CHAR(industry_risk_grade_code\n\t\t) || TO_CHAR(uw_review_yr\n\t\t) || TO_CHAR(mvr_request_code\n\t\t) || TO_CHAR(renl_code\n\t\t) || TO_CHAR(amend_num\n\t\t) || TO_CHAR(anniversary_rerate_code\n\t\t) || TO_CHAR(pol_audit_frqncy\n\t\t) || TO_CHAR(final_audit_code\n\t\t) || TO_CHAR(zip_ind\n\t\t) || TO_CHAR(guarantee_ind\n\t\t) || TO_CHAR(variation_code\n\t\t) || TO_CHAR(county\n\t\t) || TO_CHAR(non_smoker_disc_code\n\t\t) || TO_CHAR(renl_disc\n\t\t) || TO_CHAR(renl_safe_driver_disc_count\n\t\t) || TO_CHAR(nonrenewal_flag_date\n\t\t) || TO_CHAR(audit_complt_date\n\t\t) || TO_CHAR(orig_acct_date\n\t\t) || TO_CHAR(pol_enter_date\n\t\t) || TO_CHAR(excess_claim_code\n\t\t) || TO_CHAR(pol_status_on_pif\n\t\t) || TO_CHAR(target_mrkt_code\n\t\t) || TO_CHAR(pkg_code\n\t\t) || TO_CHAR(pol_kind_code\n\t\t) || TO_CHAR(bus_seg_code\n\t\t) || TO_CHAR(pif_upload_audit_ind\n\t\t) || TO_CHAR(err_flag_bal_txn\n\t\t) || TO_CHAR(err_flag_bal_reins\n\t\t) || TO_CHAR(v_producer_code_ak_id\n\t\t) || TO_CHAR(prdcr_code\n\t\t) || TO_CHAR(ClassOfBusiness\n\t\t) || TO_CHAR(v_strtgc_bus_dvsn_ak_id\n\t\t) || TO_CHAR(ErrorFlagBalancePremiumTransaction\n\t\t) || TO_CHAR(RenewalPolicyNumber\n\t\t) || TO_CHAR(RenewalPolicySymbol\n\t\t) || TO_CHAR(RenewalPolicyMod\n\t\t) || TO_CHAR(BillingType\n\t\t) || TO_CHAR(v_sup_bus_class_code_id\n\t\t) || TO_CHAR(v_sup_pol_term_id\n\t\t) || TO_CHAR(v_sup_pol_status_code_id\n\t\t) || TO_CHAR(v_sup_pol_issue_code_id\n\t\t) || TO_CHAR(v_sup_pol_audit_frqncy_id\n\t\t) || TO_CHAR(v_sup_industry_risk_grade_code_id\n\t\t) || TO_CHAR(v_sup_state_id\n\t\t) || TO_CHAR(in_PolicyOfferingAKId\n\t\t) || TO_CHAR(producer_code_id\n\t\t) || TO_CHAR(SurchargeExemptCode\n\t\t) || TO_CHAR(v_SupSurchargeExemptId\n\t\t) || TO_CHAR(v_Association\n\t\t) || TO_CHAR(in_StrategicProfitCenterAKId\n\t\t) || TO_CHAR(in_InsuranceSegmentAKId\n\t\t) || TO_CHAR(v_ProgramAKId\n\t\t) || TO_CHAR(ObligeeName\n\t\t) || TO_CHAR(AutomatedUnderwritingServicesIndicator\n\t\t) || TO_CHAR(AutomaticRenewalIndicator\n\t\t) || TO_CHAR(in_PoolCode\n\t\t)\n\t) AS v_HashKey,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- pol_key=v_prev_pol_key AND v_HashKey=v_prev_HashKey, 'NOCHANGE',\r\n\t-- ISNULL(lkp_pol_ak_id), 'NEW',\r\n\t-- in_CreatedDate=lkp_eff_from_date, 'UPDATE', --prod11524 this is to update the records if they are coming to edw again due to data repair...\r\n\t-- ( (pol_key=v_prev_pol_key AND v_HashKey<>v_prev_HashKey) OR ---prod11524 added this line to handle the changes to be inserted. In above conditions, the changes are ignored by NOCHANGE\r\n\t-- (lkp_contract_cust_ak_id\t!=\tv_contract_cust_ak_id\r\n\t-- OR \tlkp_AgencyAKID\t!=\tv_AgencyAKID\r\n\t-- OR      lkp_agency_ak_id != agency_ak_id\r\n\t-- OR\tlkp_mco\t!=\tmco\r\n\t-- OR \tlkp_pol_co_num\t!=\tpol_co_num\r\n\t-- OR \tlkp_pol_eff_date\t!=\tpol_eff_date\r\n\t-- OR \tlkp_pol_exp_date\t!=\tpol_exp_date\r\n\t-- OR \tlkp_orig_incptn_date\t!=\torig_incptn_date\r\n\t-- OR \tlkp_prim_bus_class_code\t!=\tprim_bus_class_code\r\n\t-- OR \tlkp_reins_code\t!=\treins_code\r\n\t-- OR \tlkp_pms_pol_lob_code\t!=\tpms_pol_lob_code\r\n\t-- OR \tlkp_pol_co_line_code\t!=\tpol_co_line_code\r\n\t-- OR \tlkp_pol_cancellation_ind\t!=\tpol_cancellation_ind\r\n\t-- OR \tlkp_pol_cancellation_date\t!=\tpol_cancellation_date\r\n\t-- OR \tlkp_pol_cancellation_rsn_code\t!=\tpol_cancellation_rsn_code\r\n\t-- OR \tlkp_state_of_domicile_code\t!=\tstate_of_domicile_code\r\n\t-- OR \tlkp_wbconnect_upload_code\t!=\twbconnect_upload_code\r\n\t-- OR \tlkp_serv_center_support_code\t!=\tserv_center_support_code\r\n\t-- OR \tlkp_pol_term\t!=\tpol_term\r\n\t-- OR \tlkp_terrorism_risk_ind\t!=\tterrorism_risk_ind\r\n\t-- OR \tlkp_prior_pol_key\t!=\tPrior_Policy_key\r\n\t-- OR \tlkp_pol_status_code\t!=\tpol_status_code\r\n\t-- OR \tlkp_pol_issue_code\t!=\tpol_issue_code\r\n\t-- OR \tlkp_pol_age\t!=\tpol_age\r\n\t-- OR \tlkp_industry_risk_grade_code\t!=\tindustry_risk_grade_code\r\n\t-- OR \tlkp_uw_review_yr\t!=\tuw_review_yr\r\n\t-- OR \tlkp_mvr_request_code\t!=\tmvr_request_code\r\n\t-- OR \tlkp_renl_code\t!=\trenl_code\r\n\t-- OR \tlkp_amend_num\t!=\tamend_num\r\n\t-- OR \tlkp_anniversary_rerate_code\t!=\tanniversary_rerate_code\r\n\t-- OR \tlkp_pol_audit_frqncy\t!=\tpol_audit_frqncy\r\n\t-- OR \tlkp_final_audit_code\t!=\tfinal_audit_code\r\n\t-- OR \tlkp_zip_ind\t!=\tzip_ind\r\n\t-- OR \tlkp_guarantee_ind\t!=\tguarantee_ind\r\n\t-- OR \tlkp_variation_code\t!=\tvariation_code\r\n\t-- OR \tlkp_county\t!=\tcounty\r\n\t-- OR \tlkp_non_smoker_disc_code\t!=\tnon_smoker_disc_code\r\n\t-- OR \tlkp_renl_disc\t!=\trenl_disc\r\n\t-- OR \tlkp_renl_safe_driver_disc_count\t!=\trenl_safe_driver_disc_count\r\n\t-- OR \tlkp_nonrenewal_flag_date\t!=\tnonrenewal_flag_date\r\n\t-- OR \tlkp_audit_complt_date\t!=\taudit_complt_date\r\n\t-- OR \tlkp_orig_acct_date\t!=\torig_acct_date\r\n\t-- OR \tlkp_pol_enter_date\t!=\tpol_enter_date\r\n\t-- OR \tlkp_excess_claim_code\t!=\texcess_claim_code\r\n\t-- OR \tlkp_pol_status_on_pif\t!=\tpol_status_on_pif\r\n\t-- OR \tlkp_target_mrkt_code\t!=\ttarget_mrkt_code\r\n\t-- OR \tlkp_pkg_code\t!=\tpkg_code\r\n\t-- OR \tlkp_pol_kind_code\t!=\tpol_kind_code\r\n\t-- OR \tlkp_bus_seg_code\t!=\tbus_seg_code\r\n\t-- OR \tlkp_pif_upload_audit_ind\t!=\tpif_upload_audit_ind\r\n\t-- OR \tlkp_err_flag_bal_txn\t!=\terr_flag_bal_txn\r\n\t-- OR \tlkp_err_flag_bal_reins\t!=\terr_flag_bal_reins\r\n\t-- OR \tlkp_producer_code_ak_id\t!=\tv_producer_code_ak_id\r\n\t-- OR \tlkp_prdcr_code\t!=\tprdcr_code\r\n\t-- OR \tlkp_ClassOfBusiness\t!=\tClassOfBusiness\r\n\t-- OR \tlkp_strtgc_bus_dvsn_ak_id\t!=\tv_strtgc_bus_dvsn_ak_id\r\n\t-- OR \tlkp_ErrorFlagBalancePremiumTransaction\t!=\tErrorFlagBalancePremiumTransaction\r\n\t-- OR \tLTRIM(RTRIM(lkp_RenewalPolicyNumber))\t!=\tRenewalPolicyNumber\r\n\t-- OR \tLTRIM(RTRIM(lkp_RenewalPolicySymbol))\t!=\tRenewalPolicySymbol\r\n\t-- OR \tlkp_RenewalPolicyMod\t!=\tRenewalPolicyMod\r\n\t-- OR \tlkp_BillingType\t!=\tBillingType\r\n\t-- OR   \tlkp_sup_bus_class_code_id\t!=\tv_sup_bus_class_code_id\r\n\t-- OR \tlkp_sup_pol_term_id\t!=\tv_sup_pol_term_id\r\n\t-- OR \tlkp_sup_pol_status_code_id\t!=\tv_sup_pol_status_code_id\r\n\t-- OR \tlkp_sup_pol_issue_code_id\t!=\tv_sup_pol_issue_code_id\r\n\t-- OR \tlkp_sup_pol_audit_frqncy_id\t!=\tv_sup_pol_audit_frqncy_id\r\n\t-- OR \tlkp_sup_industry_risk_grade_code_id\t!=\tv_sup_industry_risk_grade_code_id\r\n\t-- OR \tlkp_sup_state_id\t!=\tv_sup_state_id\r\n\t-- OR \tlkp_PolicyOfferingAKId\t!=\tin_PolicyOfferingAKId\r\n\t-- OR      lkp_producer_code_id!=producer_code_id\r\n\t-- OR      lkp_SurchargeExemptCode!=SurchargeExemptCode\r\n\t-- OR      lkp_SupSurchargeExemptID!=v_SupSurchargeExemptId \r\n\t-- OR      lkp_AssociationCode!=v_Association\r\n\t-- OR      lkp_StrategicProfitCenterAKId!=in_StrategicProfitCenterAKId\r\n\t-- OR      lkp_PoolCode!=in_PoolCode OR\r\n\t-- lkp_InsuranceSegmentAKId !=in_InsuranceSegmentAKId  OR \r\n\t-- lkp_ProgramAKId != v_ProgramAKId OR lkp_ObligeeName  != ObligeeName OR lkp_AutomatedUnderwritingServicesIndicator  != AutomatedUnderwritingServicesIndicator OR v_lkp_AutomaticRenewalIndicator != AutomaticRenewalIndicator OR v_lkp_RolloverPolicyIndicator!=IsRollover OR\r\n\t-- v_lkp_RolloverPriorCarrier!=RolloverPriorCarrier OR \r\n\t-- v_lkp_MailPolicyToInsured != MailPolicyToInsured OR\r\n\t-- AgencyEmployeeAKId != lkp_AgencyEmployeeAKId OR\r\n\t-- v_lkp_PolicyIssueCodeOverride != in_PolicyIssueCodeOverride OR\r\n\t-- lkp_IssuedUWID != in_IssuedUWID OR\r\n\t-- lkp_IssuedUnderwriter != in_IssuedUnderwriter\r\n\t-- )),'NEW',\r\n\t--  'NOCHANGE'\r\n\t--   )\n\tDECODE(TRUE,\n\t\tpol_key = v_prev_pol_key \n\t\tAND v_HashKey = v_prev_HashKey, 'NOCHANGE',\n\t\tlkp_pol_ak_id IS NULL, 'NEW',\n\t\tin_CreatedDate = lkp_eff_from_date, 'UPDATE',\n\t\t( ( pol_key = v_prev_pol_key \n\t\t\t\tAND v_HashKey <> v_prev_HashKey \n\t\t\t) \n\t\t\tOR ( lkp_contract_cust_ak_id != v_contract_cust_ak_id \n\t\t\t\tOR lkp_AgencyAKID != v_AgencyAKID \n\t\t\t\tOR lkp_agency_ak_id != agency_ak_id \n\t\t\t\tOR lkp_mco != mco \n\t\t\t\tOR lkp_pol_co_num != pol_co_num \n\t\t\t\tOR lkp_pol_eff_date != pol_eff_date \n\t\t\t\tOR lkp_pol_exp_date != pol_exp_date \n\t\t\t\tOR lkp_orig_incptn_date != orig_incptn_date \n\t\t\t\tOR lkp_prim_bus_class_code != prim_bus_class_code \n\t\t\t\tOR lkp_reins_code != reins_code \n\t\t\t\tOR lkp_pms_pol_lob_code != pms_pol_lob_code \n\t\t\t\tOR lkp_pol_co_line_code != pol_co_line_code \n\t\t\t\tOR lkp_pol_cancellation_ind != pol_cancellation_ind \n\t\t\t\tOR lkp_pol_cancellation_date != pol_cancellation_date \n\t\t\t\tOR lkp_pol_cancellation_rsn_code != pol_cancellation_rsn_code \n\t\t\t\tOR lkp_state_of_domicile_code != state_of_domicile_code \n\t\t\t\tOR lkp_wbconnect_upload_code != wbconnect_upload_code \n\t\t\t\tOR lkp_serv_center_support_code != serv_center_support_code \n\t\t\t\tOR lkp_pol_term != pol_term \n\t\t\t\tOR lkp_terrorism_risk_ind != terrorism_risk_ind \n\t\t\t\tOR lkp_prior_pol_key != Prior_Policy_key \n\t\t\t\tOR lkp_pol_status_code != pol_status_code \n\t\t\t\tOR lkp_pol_issue_code != pol_issue_code \n\t\t\t\tOR lkp_pol_age != pol_age \n\t\t\t\tOR lkp_industry_risk_grade_code != industry_risk_grade_code \n\t\t\t\tOR lkp_uw_review_yr != uw_review_yr \n\t\t\t\tOR lkp_mvr_request_code != mvr_request_code \n\t\t\t\tOR lkp_renl_code != renl_code \n\t\t\t\tOR lkp_amend_num != amend_num \n\t\t\t\tOR lkp_anniversary_rerate_code != anniversary_rerate_code \n\t\t\t\tOR lkp_pol_audit_frqncy != pol_audit_frqncy \n\t\t\t\tOR lkp_final_audit_code != final_audit_code \n\t\t\t\tOR lkp_zip_ind != zip_ind \n\t\t\t\tOR lkp_guarantee_ind != guarantee_ind \n\t\t\t\tOR lkp_variation_code != variation_code \n\t\t\t\tOR lkp_county != county \n\t\t\t\tOR lkp_non_smoker_disc_code != non_smoker_disc_code \n\t\t\t\tOR lkp_renl_disc != renl_disc \n\t\t\t\tOR lkp_renl_safe_driver_disc_count != renl_safe_driver_disc_count \n\t\t\t\tOR lkp_nonrenewal_flag_date != nonrenewal_flag_date \n\t\t\t\tOR lkp_audit_complt_date != audit_complt_date \n\t\t\t\tOR lkp_orig_acct_date != orig_acct_date \n\t\t\t\tOR lkp_pol_enter_date != pol_enter_date \n\t\t\t\tOR lkp_excess_claim_code != excess_claim_code \n\t\t\t\tOR lkp_pol_status_on_pif != pol_status_on_pif \n\t\t\t\tOR lkp_target_mrkt_code != target_mrkt_code \n\t\t\t\tOR lkp_pkg_code != pkg_code \n\t\t\t\tOR lkp_pol_kind_code != pol_kind_code \n\t\t\t\tOR lkp_bus_seg_code != bus_seg_code \n\t\t\t\tOR lkp_pif_upload_audit_ind != pif_upload_audit_ind \n\t\t\t\tOR lkp_err_flag_bal_txn != err_flag_bal_txn \n\t\t\t\tOR lkp_err_flag_bal_reins != err_flag_bal_reins \n\t\t\t\tOR lkp_producer_code_ak_id != v_producer_code_ak_id \n\t\t\t\tOR lkp_prdcr_code != prdcr_code \n\t\t\t\tOR lkp_ClassOfBusiness != ClassOfBusiness \n\t\t\t\tOR lkp_strtgc_bus_dvsn_ak_id != v_strtgc_bus_dvsn_ak_id \n\t\t\t\tOR lkp_ErrorFlagBalancePremiumTransaction != ErrorFlagBalancePremiumTransaction \n\t\t\t\tOR LTRIM(RTRIM(lkp_RenewalPolicyNumber\n\t\t\t\t\t)\n\t\t\t\t) != RenewalPolicyNumber \n\t\t\t\tOR LTRIM(RTRIM(lkp_RenewalPolicySymbol\n\t\t\t\t\t)\n\t\t\t\t) != RenewalPolicySymbol \n\t\t\t\tOR lkp_RenewalPolicyMod != RenewalPolicyMod \n\t\t\t\tOR lkp_BillingType != BillingType \n\t\t\t\tOR lkp_sup_bus_class_code_id != v_sup_bus_class_code_id \n\t\t\t\tOR lkp_sup_pol_term_id != v_sup_pol_term_id \n\t\t\t\tOR lkp_sup_pol_status_code_id != v_sup_pol_status_code_id \n\t\t\t\tOR lkp_sup_pol_issue_code_id != v_sup_pol_issue_code_id \n\t\t\t\tOR lkp_sup_pol_audit_frqncy_id != v_sup_pol_audit_frqncy_id \n\t\t\t\tOR lkp_sup_industry_risk_grade_code_id != v_sup_industry_risk_grade_code_id \n\t\t\t\tOR lkp_sup_state_id != v_sup_state_id \n\t\t\t\tOR lkp_PolicyOfferingAKId != in_PolicyOfferingAKId \n\t\t\t\tOR lkp_producer_code_id != producer_code_id \n\t\t\t\tOR lkp_SurchargeExemptCode != SurchargeExemptCode \n\t\t\t\tOR lkp_SupSurchargeExemptID != v_SupSurchargeExemptId \n\t\t\t\tOR lkp_AssociationCode != v_Association \n\t\t\t\tOR lkp_StrategicProfitCenterAKId != in_StrategicProfitCenterAKId \n\t\t\t\tOR lkp_PoolCode != in_PoolCode \n\t\t\t\tOR lkp_InsuranceSegmentAKId != in_InsuranceSegmentAKId \n\t\t\t\tOR lkp_ProgramAKId != v_ProgramAKId \n\t\t\t\tOR lkp_ObligeeName != ObligeeName \n\t\t\t\tOR lkp_AutomatedUnderwritingServicesIndicator != AutomatedUnderwritingServicesIndicator \n\t\t\t\tOR v_lkp_AutomaticRenewalIndicator != AutomaticRenewalIndicator \n\t\t\t\tOR v_lkp_RolloverPolicyIndicator != IsRollover \n\t\t\t\tOR v_lkp_RolloverPriorCarrier != RolloverPriorCarrier \n\t\t\t\tOR v_lkp_MailPolicyToInsured != MailPolicyToInsured \n\t\t\t\tOR AgencyEmployeeAKId != lkp_AgencyEmployeeAKId \n\t\t\t\tOR v_lkp_PolicyIssueCodeOverride != in_PolicyIssueCodeOverride \n\t\t\t\tOR lkp_IssuedUWID != in_IssuedUWID \n\t\t\t\tOR lkp_IssuedUnderwriter != in_IssuedUnderwriter \n\t\t\t) \n\t\t), 'NEW',\n\t\t'NOCHANGE'\n\t) AS v_changed_flag,\n\tpol_key AS v_prev_pol_key,\n\tv_HashKey AS v_prev_HashKey,\n\tv_producer_code_ak_id AS out_producer_code_ak_id,\n\tv_sup_bus_class_code_id AS out_sup_bus_class_code_id,\n\tv_strtgc_bus_dvsn_ak_id AS out_strtgc_bus_dvsn_ak_id,\n\t1 AS out_crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS out_audit_id,\n\t-- *INF*: --Fix for Defect 3111 - Duck Creek not following eff_from_date time format in v2.policy.\r\n\t-- in_CreatedDate\n\tin_CreatedDate AS out_eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS out_eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS out_source_sys_id,\n\tSYSDATE AS out_created_date,\n\tSYSDATE AS out_modified_date,\n\tv_sup_pol_status_code_id AS out_sup_pol_status_code_id,\n\tv_sup_pol_issue_code_id AS out_sup_pol_issue_code_id,\n\tv_sup_pol_audit_frqncy_id AS out_sup_pol_audit_frqncy_id,\n\tv_sup_industry_risk_grade_code_id AS out_sup_industry_risk_grade_code_id,\n\tv_sup_state_id AS out_sup_state_id,\n\tin_PolicyOfferingAKId AS out_PolicyOfferingAKId,\n\tv_changed_flag AS out_changed_flag,\n\tv_contract_cust_ak_id AS out_contract_cust_ak_id,\n\tv_AgencyAKID AS out_AgencyAKID,\n\tv_sup_pol_term_id AS out_sup_pol_term_id,\n\tin_StrategicProfitCenterAKId AS out_StrategicProfitCenterAKId,\n\tin_InsuranceSegmentAKId AS out_InsuranceSegmentAKId,\n\tv_ProgramAKId AS out_ProgramAKId,\n\tv_SupSurchargeExemptId AS out_SupSurchargeExemptId1,\n\t-- *INF*: IIF(ISNULL(in_AssociationDiscountFactor), 0, in_AssociationDiscountFactor)\n\tIFF(in_AssociationDiscountFactor IS NULL,\n\t\t0,\n\t\tin_AssociationDiscountFactor\n\t) AS AssociationDiscountFactor,\n\tv_Association AS Association,\n\tin_PolicyIssueCodeOverride AS out_PolicyIssueCodeOverride,\n\t0 AS DCBillFlag,\n\t-- *INF*: IIF(ISNULL(in_PoolCode),'N/A',in_PoolCode)\n\tIFF(in_PoolCode IS NULL,\n\t\t'N/A',\n\t\tin_PoolCode\n\t) AS o_PoolCode,\n\t-- *INF*: IIF(ISNULL(in_IssuedUWID),'N/A',in_IssuedUWID)\n\tIFF(in_IssuedUWID IS NULL,\n\t\t'N/A',\n\t\tin_IssuedUWID\n\t) AS o_IssuedUWID,\n\t-- *INF*: IIF(ISNULL(in_IssuedUnderwriter),'N/A',in_IssuedUnderwriter)\n\tIFF(in_IssuedUnderwriter IS NULL,\n\t\t'N/A',\n\t\tin_IssuedUnderwriter\n\t) AS o_IssuedUnderwriter\n\tFROM EXP_values\n\tLEFT JOIN LKP_Association\n\tON LKP_Association.AssociationCode = EXP_values.out_Association\n\tLEFT JOIN LKP_Program\n\tON LKP_Program.ProgramCode = EXP_values.out_ProgramCode\n\tLEFT JOIN LKP_SupSurchargeExempt\n\tON LKP_SupSurchargeExempt.SurchargeExemptCode = EXP_values.out_SurchargeExemptCode\n\tLEFT JOIN LKP_contract_customer_key\n\tON LKP_contract_customer_key.contract_key = EXP_values.out_policy_key\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_PolicyKey.out_policy_key AND LKP_policy.eff_from_date <= EXP_PolicyKey.out_CreatedDate AND LKP_policy.eff_to_date >= EXP_PolicyKey.out_CreatedDate\n\tLEFT JOIN LKP_producer_code\n\tON LKP_producer_code.agency_key = EXP_values.out_Reference AND LKP_producer_code.producer_code = in_prdcr_code\n\tLEFT JOIN LKP_sup_business_classification_code\n\tON LKP_sup_business_classification_code.bus_class_code = EXP_values.out_prim_bus_class_code\n\tLEFT JOIN LKP_sup_industry_risk_grade_code\n\tON LKP_sup_industry_risk_grade_code.industry_risk_grade_code = EXP_values.out_industry_risk_grade_code\n\tLEFT JOIN LKP_sup_policy_audit_frequency\n\tON LKP_sup_policy_audit_frequency.pol_audit_frqncy_descript = EXP_values.out_pol_audit_frqncy\n\tLEFT JOIN LKP_sup_policy_issue_code\n\tON LKP_sup_policy_issue_code.pol_issue_code = EXP_values.out_pol_issue_code\n\tLEFT JOIN LKP_sup_policy_status_code\n\tON LKP_sup_policy_status_code.pol_status_code = EXP_values.out_pol_status_code\n\tLEFT JOIN LKP_sup_policy_term\n\tON LKP_sup_policy_term.pol_term = EXP_values.out_pol_term\n\tLEFT JOIN LKP_sup_state\n\tON LKP_sup_state.state_code = EXP_values.out_state_code\n\tLEFT JOIN LKP_POLICY_CONTRACT_CUSTOMER LKP_POLICY_CONTRACT_CUSTOMER_pol_key\n\tON LKP_POLICY_CONTRACT_CUSTOMER_pol_key.pol_key = pol_key\n\n\tLEFT JOIN LKP_STRATEGIC_BUSINESS_DIVISION LKP_STRATEGIC_BUSINESS_DIVISION_in_strtgc_bus_dvsn_code\n\tON LKP_STRATEGIC_BUSINESS_DIVISION_in_strtgc_bus_dvsn_code.strtgc_bus_dvsn_code = in_strtgc_bus_dvsn_code\n\n\tLEFT JOIN LKP_STRATEGIC_BUSINESS_DIVISION LKP_STRATEGIC_BUSINESS_DIVISION__6\n\tON LKP_STRATEGIC_BUSINESS_DIVISION__6.strtgc_bus_dvsn_code = '6'\n\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tlkp_pol_id,\n\tlkp_pol_ak_id,\n\tout_changed_flag AS changed_flag,\n\tout_crrnt_snpsht_flag AS crrnt_snpsht_flag,\n\tout_audit_id AS audit_id,\n\tout_eff_from_date AS eff_from_date,\n\tout_eff_to_date AS eff_to_date,\n\tout_source_sys_id AS source_sys_id,\n\tout_created_date AS created_date,\n\tout_modified_date AS modified_date,\n\tout_contract_cust_ak_id AS contract_cust_ak_id,\n\tagency_ak_id,\n\tout_AgencyAKID AS AgencyAKID,\n\tpol_sym,\n\tPolicyNumber,\n\tPolicyVersion,\n\tpol_key AS policy_key,\n\tmco,\n\tpol_co_num,\n\tpol_eff_date AS EffectiveDate,\n\tpol_exp_date AS ExpirationDate,\n\torig_incptn_date AS InceptionDate,\n\tprim_bus_class_code,\n\treins_code,\n\tpms_pol_lob_code,\n\tpol_co_line_code,\n\tpol_cancellation_ind,\n\tpol_cancellation_date,\n\tpol_cancellation_rsn_code,\n\tstate_of_domicile_code,\n\twbconnect_upload_code,\n\tserv_center_support_code,\n\tpol_term,\n\tterrorism_risk_ind,\n\tpol_status_code,\n\tpol_issue_code,\n\tpol_age,\n\tindustry_risk_grade_code,\n\tuw_review_yr,\n\tmvr_request_code,\n\trenl_code,\n\tamend_num,\n\tanniversary_rerate_code,\n\tpol_audit_frqncy,\n\tfinal_audit_code,\n\tzip_ind,\n\tguarantee_ind,\n\tvariation_code,\n\tcounty,\n\tnon_smoker_disc_code,\n\trenl_disc,\n\trenl_safe_driver_disc_count,\n\tnonrenewal_flag_date,\n\taudit_complt_date,\n\torig_acct_date,\n\tpol_enter_date AS TransactionDateTime,\n\texcess_claim_code,\n\tpol_status_on_pif,\n\ttarget_mrkt_code,\n\tpkg_code,\n\tpol_kind_code,\n\tbus_seg_code,\n\tpif_upload_audit_ind,\n\terr_flag_bal_txn,\n\terr_flag_bal_reins,\n\tout_producer_code_ak_id AS producer_code_ak_id,\n\tprdcr_code,\n\tClassOfBusiness,\n\tout_strtgc_bus_dvsn_ak_id AS strtgc_bus_dvsn_ak_id,\n\tErrorFlagBalancePremiumTransaction,\n\tRenewalPolicyNumber,\n\tRenewalPolicySymbol,\n\tRenewalPolicyMod,\n\tBillingType,\n\tproducer_code_id,\n\tout_sup_bus_class_code_id AS sup_bus_class_code_id,\n\tout_sup_pol_term_id AS sup_pol_term_id,\n\tout_sup_pol_status_code_id AS sup_pol_status_code_id,\n\tout_sup_pol_issue_code_id AS sup_pol_issue_code_id,\n\tout_sup_pol_audit_frqncy_id AS sup_pol_audit_frqncy_id,\n\tout_sup_industry_risk_grade_code_id AS sup_industry_risk_grade_code_id,\n\tout_sup_state_id AS sup_state_id,\n\tSurchargeExemptCode,\n\tSupSurchargeExemptId,\n\tout_StrategicProfitCenterAKId AS StrategicProfitCenterAKId,\n\tout_InsuranceSegmentAKId AS InsuranceSegmentAKId,\n\tout_PolicyOfferingAKId AS PolicyOfferingAKId,\n\tout_ProgramAKId AS ProgramAKId,\n\tObligeeName,\n\tAutomatedUnderwritingServicesIndicator,\n\tAutomaticRenewalIndicator,\n\tAssociationDiscountFactor,\n\tAssociation,\n\tPrior_Policy_key,\n\tIsRollover,\n\tRolloverPriorCarrier,\n\tMailPolicyToInsured,\n\tAgencyEmployeeAKId AS AgencyEmployeeAKID,\n\tout_PolicyIssueCodeOverride AS PolicyIssueCodeOverride,\n\tDCBillFlag,\n\to_PoolCode,\n\to_IssuedUWID AS IssuedUWID,\n\to_IssuedUnderwriter AS IssuedUnderwriter\n\tFROM EXP_Detect_Changes\n),\nRTR_INSERT_UPDATE_Insert AS (SELECT * FROM RTR_INSERT_UPDATE WHERE changed_flag='NEW'),\nRTR_INSERT_UPDATE_Update AS (SELECT * FROM RTR_INSERT_UPDATE WHERE changed_flag='UPDATE'),\nSEQ_policy_cus_ak_id AS (\n\tCREATE SEQUENCE SEQ_policy_cus_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_policy_ak_id AS (\n\tSELECT\n\tSEQ_policy_cus_ak_id.NEXTVAL AS in_NEXTVAL,\n\tlkp_pol_ak_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tpolicy_key,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- policy_key=v_prev_policy_key, v_NEXTVAL,\r\n\t-- ISNULL(lkp_pol_ak_id), in_NEXTVAL,\r\n\t-- lkp_pol_ak_id\r\n\t-- )\n\tDECODE(TRUE,\n\t\tpolicy_key = v_prev_policy_key, v_NEXTVAL,\n\t\tlkp_pol_ak_id IS NULL, in_NEXTVAL,\n\t\tlkp_pol_ak_id\n\t) AS v_NEXTVAL,\n\tpolicy_key AS v_prev_policy_key,\n\tmodified_date,\n\tv_NEXTVAL AS out_pol_ak_id,\n\tcontract_cust_ak_id,\n\tagency_ak_id,\n\tAgencyAKID,\n\tpol_sym,\n\tPolicyNumber,\n\tPolicyVersion,\n\tmco,\n\tpol_co_num,\n\tEffectiveDate,\n\tExpirationDate,\n\tInceptionDate,\n\tprim_bus_class_code,\n\treins_code,\n\tpms_pol_lob_code,\n\tpol_co_line_code,\n\tpol_cancellation_ind,\n\tpol_cancellation_date,\n\tpol_cancellation_rsn_code,\n\tstate_of_domicile_code,\n\twbconnect_upload_code,\n\tserv_center_support_code,\n\tpol_term,\n\tterrorism_risk_ind,\n\tpol_status_code,\n\tpol_issue_code,\n\tpol_age,\n\tindustry_risk_grade_code,\n\tuw_review_yr,\n\tmvr_request_code,\n\trenl_code,\n\tamend_num,\n\tanniversary_rerate_code,\n\tpol_audit_frqncy,\n\tfinal_audit_code,\n\tzip_ind,\n\tguarantee_ind,\n\tvariation_code,\n\tcounty,\n\tnon_smoker_disc_code,\n\trenl_disc,\n\trenl_safe_driver_disc_count,\n\tnonrenewal_flag_date,\n\taudit_complt_date,\n\torig_acct_date,\n\tTransactionDateTime,\n\texcess_claim_code,\n\tpol_status_on_pif,\n\ttarget_mrkt_code,\n\tpkg_code,\n\tpol_kind_code,\n\tbus_seg_code,\n\tpif_upload_audit_ind,\n\terr_flag_bal_txn,\n\terr_flag_bal_reins,\n\tproducer_code_ak_id,\n\tprdcr_code,\n\tClassOfBusiness,\n\tstrtgc_bus_dvsn_ak_id,\n\tErrorFlagBalancePremiumTransaction,\n\tRenewalPolicyNumber,\n\tRenewalPolicySymbol,\n\tRenewalPolicyMod,\n\tBillingType,\n\tproducer_code_id,\n\tsup_bus_class_code_id,\n\tsup_pol_term_id,\n\tsup_pol_status_code_id,\n\tsup_pol_issue_code_id,\n\tsup_pol_audit_frqncy_id,\n\tsup_industry_risk_grade_code_id,\n\tsup_state_id,\n\tSurchargeExemptCode,\n\tSupSurchargeExemptId,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingAKId,\n\tProgramAKId,\n\t-1 AS o_UnderwritingAssociateAKId,\n\tObligeeName,\n\tAutomatedUnderwritingServicesIndicator,\n\tAutomaticRenewalIndicator,\n\tAssociation,\n\tPrior_Policy_key,\n\tIsRollover,\n\tRolloverPriorCarrier,\n\tMailPolicyToInsured,\n\tAgencyEmployeeAKID,\n\tPolicyIssueCodeOverride AS PolicyIssueCodeOverride1,\n\tDCBillFlag AS DCBillFlag1,\n\to_PoolCode AS o_PoolCode1,\n\tIssuedUWID,\n\tIssuedUnderwriter\n\tFROM RTR_INSERT_UPDATE_Insert\n),\nTGT_Policy_INSERT AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'V2', @TableName = 'policy', @IndexWildcard = 'Ak3Policy'\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, pol_ak_id, contract_cust_ak_id, agency_ak_id, pol_sym, pol_num, pol_mod, pol_key, mco, pol_co_num, pol_eff_date, pol_exp_date, orig_incptn_date, prim_bus_class_code, reins_code, pms_pol_lob_code, pol_co_line_code, pol_cancellation_ind, pol_cancellation_date, pol_cancellation_rsn_code, state_of_domicile_code, wbconnect_upload_code, serv_center_support_code, pol_term, terrorism_risk_ind, prior_pol_key, pol_status_code, pol_issue_code, pol_age, industry_risk_grade_code, uw_review_yr, mvr_request_code, renl_code, amend_num, anniversary_rerate_code, pol_audit_frqncy, final_audit_code, zip_ind, guarantee_ind, variation_code, county, non_smoker_disc_code, renl_disc, renl_safe_driver_disc_count, nonrenewal_flag_date, audit_complt_date, orig_acct_date, pol_enter_date, excess_claim_code, pol_status_on_pif, target_mrkt_code, pkg_code, pol_kind_code, bus_seg_code, pif_upload_audit_ind, err_flag_bal_txn, err_flag_bal_reins, producer_code_ak_id, prdcr_code, ClassOfBusiness, strtgc_bus_dvsn_ak_id, ErrorFlagBalancePremiumTransaction, RenewalPolicyNumber, RenewalPolicySymbol, RenewalPolicyMod, BillingType, producer_code_id, sup_bus_class_code_id, sup_pol_term_id, sup_pol_status_code_id, sup_pol_issue_code_id, sup_pol_audit_frqncy_id, sup_industry_risk_grade_code_id, sup_state_id, SurchargeExemptCode, SupSurchargeExemptID, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProgramAKId, AgencyAKId, UnderwritingAssociateAKId, ObligeeName, AutomatedUnderwritingServicesIndicator, AutomaticRenewalIndicator, AssociationCode, RolloverPolicyIndicator, RolloverPriorCarrier, MailToInsuredFlag, AgencyEmployeeAKId, PolicyIssueCodeOverride, DCBillFlag, PoolCode, IssuedUWID, IssuedUnderwriter)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tout_pol_ak_id AS POL_AK_ID, \n\tCONTRACT_CUST_AK_ID, \n\tAGENCY_AK_ID, \n\tPOL_SYM, \n\tPolicyNumber AS POL_NUM, \n\tPolicyVersion AS POL_MOD, \n\tpolicy_key AS POL_KEY, \n\tMCO, \n\tPOL_CO_NUM, \n\tEffectiveDate AS POL_EFF_DATE, \n\tExpirationDate AS POL_EXP_DATE, \n\tInceptionDate AS ORIG_INCPTN_DATE, \n\tPRIM_BUS_CLASS_CODE, \n\tREINS_CODE, \n\tPMS_POL_LOB_CODE, \n\tPOL_CO_LINE_CODE, \n\tPOL_CANCELLATION_IND, \n\tPOL_CANCELLATION_DATE, \n\tPOL_CANCELLATION_RSN_CODE, \n\tSTATE_OF_DOMICILE_CODE, \n\tWBCONNECT_UPLOAD_CODE, \n\tSERV_CENTER_SUPPORT_CODE, \n\tPOL_TERM, \n\tTERRORISM_RISK_IND, \n\tPrior_Policy_key AS PRIOR_POL_KEY, \n\tPOL_STATUS_CODE, \n\tPOL_ISSUE_CODE, \n\tPOL_AGE, \n\tINDUSTRY_RISK_GRADE_CODE, \n\tUW_REVIEW_YR, \n\tMVR_REQUEST_CODE, \n\tRENL_CODE, \n\tAMEND_NUM, \n\tANNIVERSARY_RERATE_CODE, \n\tPOL_AUDIT_FRQNCY, \n\tFINAL_AUDIT_CODE, \n\tZIP_IND, \n\tGUARANTEE_IND, \n\tVARIATION_CODE, \n\tCOUNTY, \n\tNON_SMOKER_DISC_CODE, \n\tRENL_DISC, \n\tRENL_SAFE_DRIVER_DISC_COUNT, \n\tNONRENEWAL_FLAG_DATE, \n\tAUDIT_COMPLT_DATE, \n\tORIG_ACCT_DATE, \n\tTransactionDateTime AS POL_ENTER_DATE, \n\tEXCESS_CLAIM_CODE, \n\tPOL_STATUS_ON_PIF, \n\tTARGET_MRKT_CODE, \n\tPKG_CODE, \n\tPOL_KIND_CODE, \n\tBUS_SEG_CODE, \n\tPIF_UPLOAD_AUDIT_IND, \n\tERR_FLAG_BAL_TXN, \n\tERR_FLAG_BAL_REINS, \n\tPRODUCER_CODE_AK_ID, \n\tPRDCR_CODE, \n\tCLASSOFBUSINESS, \n\tSTRTGC_BUS_DVSN_AK_ID, \n\tERRORFLAGBALANCEPREMIUMTRANSACTION, \n\tRENEWALPOLICYNUMBER, \n\tRENEWALPOLICYSYMBOL, \n\tRENEWALPOLICYMOD, \n\tBILLINGTYPE, \n\tPRODUCER_CODE_ID, \n\tSUP_BUS_CLASS_CODE_ID, \n\tSUP_POL_TERM_ID, \n\tSUP_POL_STATUS_CODE_ID, \n\tSUP_POL_ISSUE_CODE_ID, \n\tSUP_POL_AUDIT_FRQNCY_ID, \n\tSUP_INDUSTRY_RISK_GRADE_CODE_ID, \n\tSUP_STATE_ID, \n\tSURCHARGEEXEMPTCODE, \n\tSupSurchargeExemptId AS SUPSURCHARGEEXEMPTID, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPROGRAMAKID, \n\tAgencyAKID AS AGENCYAKID, \n\to_UnderwritingAssociateAKId AS UNDERWRITINGASSOCIATEAKID, \n\tOBLIGEENAME, \n\tAUTOMATEDUNDERWRITINGSERVICESINDICATOR, \n\tAUTOMATICRENEWALINDICATOR, \n\tAssociation AS ASSOCIATIONCODE, \n\tIsRollover AS ROLLOVERPOLICYINDICATOR, \n\tROLLOVERPRIORCARRIER, \n\tMailPolicyToInsured AS MAILTOINSUREDFLAG, \n\tAgencyEmployeeAKID AS AGENCYEMPLOYEEAKID, \n\tPolicyIssueCodeOverride1 AS POLICYISSUECODEOVERRIDE, \n\tDCBillFlag1 AS DCBILLFLAG, \n\to_PoolCode1 AS POOLCODE, \n\tISSUEDUWID, \n\tISSUEDUNDERWRITER\n\tFROM EXP_policy_ak_id\n),\nUPD_CodeChange AS (\n\tSELECT\n\tlkp_pol_id AS pol_id, \n\tmodified_date, \n\tagency_ak_id, \n\tmco, \n\tpol_co_num, \n\tEffectiveDate AS pol_eff_date, \n\tExpirationDate AS pol_exp_date, \n\tInceptionDate AS orig_incptn_date, \n\tprim_bus_class_code, \n\treins_code, \n\tpms_pol_lob_code, \n\tpol_co_line_code, \n\tpol_cancellation_ind, \n\tpol_cancellation_date, \n\tpol_cancellation_rsn_code, \n\tstate_of_domicile_code, \n\twbconnect_upload_code, \n\tserv_center_support_code, \n\tpol_term, \n\tterrorism_risk_ind, \n\tPrior_Policy_key AS prior_pol_key, \n\tpol_status_code, \n\tpol_issue_code, \n\tpol_age, \n\tindustry_risk_grade_code, \n\tuw_review_yr, \n\tmvr_request_code, \n\trenl_code, \n\tamend_num, \n\tanniversary_rerate_code, \n\tpol_audit_frqncy, \n\tfinal_audit_code, \n\tzip_ind, \n\tguarantee_ind, \n\tvariation_code, \n\tcounty, \n\tnon_smoker_disc_code, \n\trenl_disc, \n\trenl_safe_driver_disc_count, \n\tnonrenewal_flag_date, \n\taudit_complt_date, \n\torig_acct_date, \n\tTransactionDateTime AS pol_enter_date, \n\texcess_claim_code, \n\tpol_status_on_pif, \n\ttarget_mrkt_code, \n\tpkg_code, \n\tpol_kind_code, \n\tbus_seg_code, \n\tpif_upload_audit_ind, \n\terr_flag_bal_txn, \n\terr_flag_bal_reins, \n\tproducer_code_ak_id, \n\tprdcr_code, \n\tClassOfBusiness, \n\tstrtgc_bus_dvsn_ak_id, \n\tErrorFlagBalancePremiumTransaction, \n\tRenewalPolicyNumber, \n\tRenewalPolicySymbol, \n\tRenewalPolicyMod, \n\tBillingType, \n\tproducer_code_id, \n\tsup_bus_class_code_id, \n\tsup_pol_term_id, \n\tsup_pol_status_code_id, \n\tsup_pol_issue_code_id, \n\tsup_pol_audit_frqncy_id, \n\tsup_industry_risk_grade_code_id, \n\tsup_state_id, \n\tSurchargeExemptCode, \n\tSupSurchargeExemptId AS SupSurchargeExemptID, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProgramAKId, \n\tAgencyAKID AS AgencyAKId, \n\tObligeeName, \n\tAutomatedUnderwritingServicesIndicator, \n\tAutomaticRenewalIndicator, \n\tAssociation AS AssociationCode, \n\tIsRollover, \n\tRolloverPriorCarrier, \n\tMailPolicyToInsured, \n\tAgencyEmployeeAKID, \n\tPolicyIssueCodeOverride AS PolicyIssueCodeOverride3, \n\to_PoolCode AS o_PoolCode3, \n\tIssuedUWID, \n\tIssuedUnderwriter\n\tFROM RTR_INSERT_UPDATE_Update\n),\nTGT_Policy_Update_SameTransactionCreatedDate AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'V2', @TableName = 'policy', @IndexWildcard = 'Ak3Policy'\n\t-------------------------------\n\n\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy AS T\n\tUSING UPD_CodeChange AS S\n\tON T.pol_id = S.pol_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.modified_date = S.modified_date, T.agency_ak_id = S.agency_ak_id, T.mco = S.mco, T.pol_co_num = S.pol_co_num, T.pol_eff_date = S.pol_eff_date, T.pol_exp_date = S.pol_exp_date, T.orig_incptn_date = S.orig_incptn_date, T.prim_bus_class_code = S.prim_bus_class_code, T.reins_code = S.reins_code, T.pms_pol_lob_code = S.pms_pol_lob_code, T.pol_co_line_code = S.pol_co_line_code, T.pol_cancellation_ind = S.pol_cancellation_ind, T.pol_cancellation_date = S.pol_cancellation_date, T.pol_cancellation_rsn_code = S.pol_cancellation_rsn_code, T.state_of_domicile_code = S.state_of_domicile_code, T.wbconnect_upload_code = S.wbconnect_upload_code, T.serv_center_support_code = S.serv_center_support_code, T.pol_term = S.pol_term, T.terrorism_risk_ind = S.terrorism_risk_ind, T.prior_pol_key = S.prior_pol_key, T.pol_status_code = S.pol_status_code, T.pol_issue_code = S.pol_issue_code, T.pol_age = S.pol_age, T.industry_risk_grade_code = S.industry_risk_grade_code, T.uw_review_yr = S.uw_review_yr, T.mvr_request_code = S.mvr_request_code, T.renl_code = S.renl_code, T.amend_num = S.amend_num, T.anniversary_rerate_code = S.anniversary_rerate_code, T.pol_audit_frqncy = S.pol_audit_frqncy, T.final_audit_code = S.final_audit_code, T.zip_ind = S.zip_ind, T.guarantee_ind = S.guarantee_ind, T.variation_code = S.variation_code, T.county = S.county, T.non_smoker_disc_code = S.non_smoker_disc_code, T.renl_disc = S.renl_disc, T.renl_safe_driver_disc_count = S.renl_safe_driver_disc_count, T.nonrenewal_flag_date = S.nonrenewal_flag_date, T.audit_complt_date = S.audit_complt_date, T.orig_acct_date = S.orig_acct_date, T.pol_enter_date = S.pol_enter_date, T.excess_claim_code = S.excess_claim_code, T.pol_status_on_pif = S.pol_status_on_pif, T.target_mrkt_code = S.target_mrkt_code, T.pkg_code = S.pkg_code, T.pol_kind_code = S.pol_kind_code, T.bus_seg_code = S.bus_seg_code, T.pif_upload_audit_ind = S.pif_upload_audit_ind, T.err_flag_bal_txn = S.err_flag_bal_txn, T.err_flag_bal_reins = S.err_flag_bal_reins, T.producer_code_ak_id = S.producer_code_ak_id, T.prdcr_code = S.prdcr_code, T.ClassOfBusiness = S.ClassOfBusiness, T.strtgc_bus_dvsn_ak_id = S.strtgc_bus_dvsn_ak_id, T.ErrorFlagBalancePremiumTransaction = S.ErrorFlagBalancePremiumTransaction, T.RenewalPolicyNumber = S.RenewalPolicyNumber, T.RenewalPolicySymbol = S.RenewalPolicySymbol, T.RenewalPolicyMod = S.RenewalPolicyMod, T.BillingType = S.BillingType, T.producer_code_id = S.producer_code_id, T.sup_bus_class_code_id = S.sup_bus_class_code_id, T.sup_pol_term_id = S.sup_pol_term_id, T.sup_pol_status_code_id = S.sup_pol_status_code_id, T.sup_pol_issue_code_id = S.sup_pol_issue_code_id, T.sup_pol_audit_frqncy_id = S.sup_pol_audit_frqncy_id, T.sup_industry_risk_grade_code_id = S.sup_industry_risk_grade_code_id, T.sup_state_id = S.sup_state_id, T.SurchargeExemptCode = S.SurchargeExemptCode, T.SupSurchargeExemptID = S.SupSurchargeExemptID, T.StrategicProfitCenterAKId = S.StrategicProfitCenterAKId, T.InsuranceSegmentAKId = S.InsuranceSegmentAKId, T.PolicyOfferingAKId = S.PolicyOfferingAKId, T.ProgramAKId = S.ProgramAKId, T.AgencyAKId = S.AgencyAKId, T.ObligeeName = S.ObligeeName, T.AutomatedUnderwritingServicesIndicator = S.AutomatedUnderwritingServicesIndicator, T.AutomaticRenewalIndicator = S.AutomaticRenewalIndicator, T.AssociationCode = S.AssociationCode, T.RolloverPolicyIndicator = S.IsRollover, T.RolloverPriorCarrier = S.RolloverPriorCarrier, T.MailToInsuredFlag = S.MailPolicyToInsured, T.AgencyEmployeeAKId = S.AgencyEmployeeAKID, T.PolicyIssueCodeOverride = S.PolicyIssueCodeOverride3, T.IssuedUWID = S.IssuedUWID, T.IssuedUnderwriter = S.IssuedUnderwriter\n),\nSQ_policy AS (\n\tSELECT \r\n\t\ta.pol_id, \r\n\t\ta.eff_from_date,\r\n\t\ta.eff_to_date, \r\n\t\ta.pol_ak_id \r\n\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy a\r\n\tWHERE EXISTS\r\n\t\t( SELECT pol_ak_id  FROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy b\r\n\t\tWHERE CRRNT_SNPSHT_FLAG = 1 AND source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND b.pol_ak_id=a.pol_ak_id GROUP BY pol_ak_id HAVING count(*) > 1) \r\n\tAND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tORDER BY a.pol_ak_id ,a.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tpol_ak_id AS in_pol_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tpol_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- in_pol_ak_id = v_prev_pol_ak_id ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\t\tin_pol_ak_id = v_prev_pol_ak_id, DATEADD(SECOND,- 1,v_prev_eff_from_date),\n\t\torig_eff_to_date\n\t) AS v_eff_to_date,\n\tin_pol_ak_id AS v_prev_pol_ak_id,\n\teff_from_date AS v_prev_eff_from_date,\n\t0 AS out_crrnt_snpsht_flag,\n\tv_eff_to_date AS out_eff_to_date,\n\tSYSDATE AS out_modified_date\n\tFROM SQ_policy\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\torig_eff_to_date AS in_orig_eff_to_date, \n\tpol_id, \n\tout_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\tout_eff_to_date AS eff_to_date, \n\tout_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE in_orig_eff_to_date != eff_to_date\n),\nEXPIRE_policy AS (\n\tSELECT\n\tpol_id, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTGT_Policy_EXPIRE AS (\n\n\t------------ PRE SQL ----------\n\tUPDATE A\r\n\tSET A.eff_from_date='1800-1-1'\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy A\r\n\tWHERE NOT EXISTS (\r\n\tSELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy B\r\n\tWHERE A.pol_ak_id=B.pol_ak_id\r\n\tAND B.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand B.eff_from_date<A.eff_from_date)\r\n\tAND A.eff_from_date>'1800-1-1'\r\n\tAND A.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t-------------------------------\n\n\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy AS T\n\tUSING EXPIRE_policy AS S\n\tON T.pol_id = S.pol_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'V2', @TableName = 'policy', @IndexWildcard = 'Ak3Policy'\n\t-------------------------------\n\n\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603269"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "AGENCY_SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "AGENCY"
            },
            "STAGING_DATABASE": {
                "type": "string",
                "defaultValue": "WC_STAGE"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}