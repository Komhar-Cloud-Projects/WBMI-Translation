{
    "name": "s_m_POL_FEED_Load_WorkWCLocation",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WorkWCLocation",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_Location_Deleted AS (\n\tselect DT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\t(ISNULL(DLOC.Address1,'')) Address1,\r\n\t(ISNULL(DLOC.Address2,'')) Address2,\r\n\t(ISNULL(DLOC.City,'')) City,\r\n\t(ISNULL(DLOC.County,'')) County,\r\n\t(ISNULL(DLOC.StateProv,'')) StateProv,\r\n\tISNULL(DLOC.PostalCode,'') PostalCode,\r\n\t(ISNULL(DLOC.Country,'')) Country, \r\n\tCASE WHEN DLOC.Deleted='1' THEN '1' ELSE '0' END LocationDeletedIndicator,\r\n\t(ISNULL(DLOC.Description,'')) LocationDescription,\r\n\t(ISNULL(DLOCA.LocationAssociationType,'')) LocationType,\r\n\tWP.PolicyNumber+WP.PolicyVersionFormatted PolicyKey\r\n\t\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy DP with  (NOLOCK)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with (NOLOCK)\r\n\ton DP.SessionId=DL.SessionId\r\n\tand DP.PolicyId=DL.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with (NOLOCK)\r\n\ton DP.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with (NOLOCK)\r\n\ton DS.SessionId=DT.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Location DLOC with (NOLOCK)\r\n\ton DP.SessionId=DLOC.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Location WLOC with (NOLOCK)\r\n\ton DLOC.SessionId=WLOC.SessionId\r\n\tand DLOC.LocationId=WLOC.LocationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLOCA with (NOLOCK)\r\n\ton DLOC.SessionId=DLOCA.SessionId\r\n\tand DLOC.LocationId=DLOCA.LocationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP with (NOLOCK)\r\n\ton WP.SessionId=DL.SessionId\r\n\tinner join @{pipeline().parameters.DATABASE_EXAMPLEDATA}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.History H with (NOLOCK)\r\n\ton H.HistoryID=DT.HistoryID\r\n\tand H.DeprecatedBy IS NULL\r\n\tLeft Join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLOCAWC with (NOLOCK)\r\n\ton DLOCA.SessionId=DLOCAWC.SessionId\r\n\tand DLOCA.LocationId=DLOCAWC.LocationId\r\n\tand DLOCAWC.ObjectName='DC_WC_Location'\r\n\tinner JOIN\r\n\t(Select distinct WP.PolicyNumber+WP.PolicyVersionFormatted PolKey,LocationXmlId from WB_Policy WP\r\n\tinner join DC_Transaction T with (NOLOCK)\r\n\ton WP.SessionId=T.SessionId\r\n\tinner join DC_Line DL with (NOLOCK)\r\n\ton T.Sessionid=DL.Sessionid\r\n\tinner join DC_Session S\r\n\ton WP.SessionID=S.SessionID\r\n\tinner join dbo.DC_Location LOC with (NOLOCK)\r\n\ton S.SessionId=LOC.SessionId and LOC.Deleted='1'\r\n\twhere S.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand T.State='Committed'\r\n\tand DL.Type='WorkersCompensation'\r\n\tand S.Purpose='Onset'\r\n\tand T.State='Committed'\r\n\tand LOC.Deleted='1'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DELETED}\r\n\t) D\r\n\ton D.PolKey=(WP.PolicyNumber+WP.PolicyVersionFormatted)\r\n\tand D.LocationXmlId=DLOC.LocationXmlId\r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DS.Purpose='Onset'\r\n\tand H.DeprecatedBy IS NULL\r\n\tand DT.State='Committed'\r\n\tand DLOCA.ObjectName<>'DC_WC_Location'\r\n\tand DLOC.Deleted='1'\n),\nEXP_Source AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\tLocationType,\n\tPolicyKey\n\tFROM SQ_DC_Location_Deleted\n),\nLKP_TrackHistory AS (\n\tSELECT\n\tHistoryID,\n\tPolicyKey,\n\tIN_PolicyKey,\n\tIN_HistoryID\n\tFROM (\n\t\tSelect distinct HistoryID as HistoryID, PolicyKey as PolicyKey  from WorkWCTrackHistory\r\n\t\twhere AuditID<>@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\torder by 2,1--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,HistoryID ORDER BY HistoryID) = 1\n),\nEXP_Remove AS (\n\tSELECT\n\tEXP_Source.HistoryID,\n\tEXP_Source.Purpose,\n\tEXP_Source.SessionId,\n\tEXP_Source.Address1,\n\tEXP_Source.Address2,\n\tEXP_Source.City,\n\tEXP_Source.County,\n\tEXP_Source.StateProv,\n\tEXP_Source.PostalCode,\n\tEXP_Source.Country,\n\tEXP_Source.LocationDeletedIndicator,\n\tEXP_Source.LocationDescription,\n\tEXP_Source.LocationType,\n\tEXP_Source.PolicyKey,\n\tLKP_TrackHistory.HistoryID AS LKP_HistoryID,\n\tLKP_TrackHistory.PolicyKey AS LKP_PolicyKey,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(LKP_HistoryID))),'NEW','EXISTS')\n\tIFF(LTRIM(RTRIM(LKP_HistoryID)) IS NULL, 'NEW', 'EXISTS') AS FilterFlag\n\tFROM EXP_Source\n\tLEFT JOIN LKP_TrackHistory\n\tON LKP_TrackHistory.PolicyKey = EXP_Source.PolicyKey AND LKP_TrackHistory.HistoryID = EXP_Source.HistoryID\n),\nFIL_NewTxns AS (\n\tSELECT\n\tHistoryID, \n\tPurpose, \n\tSessionId, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationDeletedIndicator, \n\tLocationDescription, \n\tLocationType, \n\tPolicyKey, \n\tFilterFlag\n\tFROM EXP_Remove\n\tWHERE LTRIM(RTRIM(FilterFlag))='EXISTS'\n),\nSRT_MaxHistID AS (\n\tSELECT\n\tPolicyKey, \n\tHistoryID, \n\tPurpose, \n\tSessionId, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationDeletedIndicator, \n\tLocationDescription, \n\tLocationType, \n\tFilterFlag\n\tFROM FIL_NewTxns\n\tORDER BY PolicyKey ASC, HistoryID DESC\n),\nEXP_ExistingTxns AS (\n\tSELECT\n\tPolicyKey,\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\tLocationType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PolicyKey<>v_PriorPolicyKey,HistoryID,\r\n\t-- PolicyKey=v_PriorPolicyKey and HistoryID=v_MaxHistID,v_MaxHistID,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    PolicyKey <> v_PriorPolicyKey, HistoryID,\n\t    PolicyKey = v_PriorPolicyKey and HistoryID = v_MaxHistID, v_MaxHistID,\n\t    0\n\t) AS v_MaxHistID,\n\tPolicyKey AS v_PriorPolicyKey,\n\tHistoryID AS v_PriorHistoryID,\n\t-- *INF*: IIF(HistoryID=v_MaxHistID,'1','0')\n\tIFF(HistoryID = v_MaxHistID, '1', '0') AS v_MaxHistIDFilterFlag,\n\tv_MaxHistIDFilterFlag AS MaxHistIDFilterFlag\n\tFROM SRT_MaxHistID\n),\nFIL_MaxHistID AS (\n\tSELECT\n\tPolicyKey, \n\tHistoryID, \n\tPurpose, \n\tSessionId, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationDeletedIndicator, \n\tLocationDescription, \n\tLocationType, \n\tMaxHistIDFilterFlag\n\tFROM EXP_ExistingTxns\n\tWHERE MaxHistIDFilterFlag='1'\n),\nEXP_Comp AS (\n\tSELECT\n\tPolicyKey,\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(PostalCode)),1,5)\n\tSUBSTR(LTRIM(RTRIM(PostalCode)), 1, 5) AS v_PostalCode,\n\tCountry,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\tLocationType,\n\tMaxHistIDFilterFlag,\n\t-- *INF*: LTRIM(RTRIM(Address1))||LTRIM(RTRIM(Address2))||LTRIM(RTRIM(City))||LTRIM(RTRIM(County))||LTRIM(RTRIM(StateProv))||LTRIM(RTRIM(v_PostalCode))||LTRIM(RTRIM(Country))||LTRIM(RTRIM(LocationDescription))||LTRIM(RTRIM(LocationType))\n\tLTRIM(RTRIM(Address1)) || LTRIM(RTRIM(Address2)) || LTRIM(RTRIM(City)) || LTRIM(RTRIM(County)) || LTRIM(RTRIM(StateProv)) || LTRIM(RTRIM(v_PostalCode)) || LTRIM(RTRIM(Country)) || LTRIM(RTRIM(LocationDescription)) || LTRIM(RTRIM(LocationType)) AS v_Location_Compare,\n\t-- *INF*: LTRIM(RTRIM(v_Location_Compare))\n\tLTRIM(RTRIM(v_Location_Compare)) AS Location_Compare\n\tFROM FIL_MaxHistID\n),\nSQ_DC_Location AS (\n\tselect DT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tDLOC.Address1,\r\n\tDLOC.Address2,\r\n\tDLOC.City,\r\n\tDLOC.County,\r\n\tDLOC.StateProv,\r\n\tDLOC.PostalCode,\r\n\tDLOC.Country,\r\n\tDLOC.Deleted LocationDeletedIndicator,\r\n\tDLOC.Description LocationDescription,\r\n\tWloc.LocationNumber,\r\n\tDLOCA.LocationAssociationType LocationType,\r\n\tDLOC.LocationId,\r\n\tDLOCAWC.Objectid DC_WC_LocationId,\r\n\tWP.PolicyNumber+WP.PolicyVersionFormatted PolicyKey,\r\n\tDT.Type as TransactionType\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy DP with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton DP.SessionId=DL.SessionId\r\n\tand DP.PolicyId=DL.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DP.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DS.SessionId=DT.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Location DLOC with(nolock)\r\n\ton DP.SessionId=DLOC.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Location WLOC with(Nolock)\r\n\ton DLOC.SessionId=WLOC.SessionId\r\n\tand DLOC.LocationId=WLOC.LocationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP with(Nolock)\r\n\ton WP.SessionID=DP.SessionID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLOCA with(nolock)\r\n\ton DLOC.SessionId=DLOCA.SessionId\r\n\tand DLOC.LocationId=DLOCA.LocationId\r\n\tLeft Join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLOCAWC with(nolock)\r\n\ton DLOCA.SessionId=DLOCAWC.SessionId\r\n\tand DLOCA.LocationId=DLOCAWC.LocationId\r\n\tand DLOCAWC.ObjectName='DC_WC_Location'\r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DS.Purpose='Onset'\r\n\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand DT.State='Committed'\r\n\tand DLOCA.ObjectName<>'DC_WC_Location'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\tLocationNumber,\n\tLocationType,\n\tLocationId,\n\tWC_LocationId,\n\tPolicyKey,\n\tTransactionType\n\tFROM SQ_DC_Location\n),\nLKP_LatestSession AS (\n\tSELECT\n\tSessionId,\n\tPurpose,\n\tHistoryID\n\tFROM (\n\t\tSelect distinct DT.HistoryID AS HistoryID,\r\n\t\tDS.Purpose AS Purpose,\r\n\t\tMax(DS.Sessionid) AS Sessionid\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\t\ton DT.Sessionid=DS.Sessionid\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\t\ton DT.Sessionid=DL.Sessionid\r\n\t\twhere DL.Type='WorkersCompensation'\r\n\t\tand DS.Purpose='Onset'\r\n\t\tand DT.State='Committed'\r\n\t\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\t\tgroup by DT.HistoryID,DS.Purpose\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,Purpose,HistoryID ORDER BY SessionId) = 1\n),\nLKP_WorkWCTrackHistory AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditid,\n\tHistoryID,\n\tPurpose\n\tFROM (\n\t\tSELECT \r\n\t\tWorkWCTrackHistory.WCTrackHistoryID as WCTrackHistoryID, \r\n\t\tWorkWCTrackHistory.Auditid as Auditid, \r\n\t\tWorkWCTrackHistory.HistoryID as HistoryID, \r\n\t\tWorkWCTrackHistory.Purpose as Purpose \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory\r\n\t\torder by WorkWCTrackHistory.HistoryID,WorkWCTrackHistory.Purpose,WorkWCTrackHistory.Auditid ASC\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY HistoryID,Purpose ORDER BY WCTrackHistoryID) = 1\n),\nEXP_RecordFlagging AS (\n\tSELECT\n\tLKP_WorkWCTrackHistory.WCTrackHistoryID AS lkp_WCTrackHistoryID,\n\tLKP_WorkWCTrackHistory.Auditid AS lkp_Auditid,\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\t-- *INF*: IIF(lkp_Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND (NOT ISNULL(lkp_SessionId)),'1','0')\n\tIFF(lkp_Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND (lkp_SessionId IS NOT NULL), '1', '0') AS FilterFlag,\n\tEXP_SRCDataCollect.Address1,\n\tEXP_SRCDataCollect.Address2,\n\tEXP_SRCDataCollect.City,\n\tEXP_SRCDataCollect.County,\n\tEXP_SRCDataCollect.StateProv,\n\tEXP_SRCDataCollect.PostalCode,\n\tEXP_SRCDataCollect.Country,\n\tEXP_SRCDataCollect.LocationDeletedIndicator,\n\tEXP_SRCDataCollect.LocationDescription,\n\tEXP_SRCDataCollect.LocationNumber,\n\tEXP_SRCDataCollect.LocationType,\n\tEXP_SRCDataCollect.LocationId,\n\tEXP_SRCDataCollect.WC_LocationId,\n\tLKP_LatestSession.SessionId AS lkp_SessionId,\n\tEXP_SRCDataCollect.PolicyKey,\n\tEXP_SRCDataCollect.TransactionType\n\tFROM EXP_SRCDataCollect\n\tLEFT JOIN LKP_LatestSession\n\tON LKP_LatestSession.SessionId = EXP_SRCDataCollect.SessionId AND LKP_LatestSession.Purpose = EXP_SRCDataCollect.Purpose AND LKP_LatestSession.HistoryID = EXP_SRCDataCollect.HistoryID\n\tLEFT JOIN LKP_WorkWCTrackHistory\n\tON LKP_WorkWCTrackHistory.HistoryID = EXP_SRCDataCollect.HistoryID AND LKP_WorkWCTrackHistory.Purpose = EXP_SRCDataCollect.Purpose\n),\nFIL_ExcludeSubmittedRecords AS (\n\tSELECT\n\tlkp_WCTrackHistoryID AS WCTrackHistoryID, \n\tExtractDate, \n\tAuditid, \n\tFilterFlag, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationDeletedIndicator, \n\tLocationDescription, \n\tLocationNumber, \n\tLocationType, \n\tLocationId, \n\tWC_LocationId, \n\tPolicyKey, \n\tTransactionType\n\tFROM EXP_RecordFlagging\n\tWHERE FilterFlag='1'\n),\nEXP_Compare AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tExtractDate,\n\tAuditid,\n\tFilterFlag,\n\tAddress1,\n\t-- *INF*: IIF(ISNULL(Address1),'',Address1)\n\tIFF(Address1 IS NULL, '', Address1) AS v_Address1,\n\tAddress2,\n\t-- *INF*: IIF(ISNULL(Address2),'',Address2)\n\tIFF(Address2 IS NULL, '', Address2) AS v_Address2,\n\tCity,\n\t-- *INF*: IIF(ISNULL(City),'',City)\n\tIFF(City IS NULL, '', City) AS v_City,\n\tCounty,\n\t-- *INF*: IIF(ISNULL(County),'',County)\n\tIFF(County IS NULL, '', County) AS v_County,\n\tStateProv,\n\t-- *INF*: IIF(ISNULL(StateProv),'',StateProv)\n\tIFF(StateProv IS NULL, '', StateProv) AS v_StateProv,\n\tPostalCode,\n\t-- *INF*: IIF(ISNULL(PostalCode),'',SUBSTR(PostalCode,1,5))\n\tIFF(PostalCode IS NULL, '', SUBSTR(PostalCode, 1, 5)) AS v_PostalCode,\n\tCountry,\n\t-- *INF*: IIF(ISNULL(Country),'',Country)\n\tIFF(Country IS NULL, '', Country) AS v_Country,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\t-- *INF*: IIF(ISNULL(LocationDescription),'',LocationDescription)\n\tIFF(LocationDescription IS NULL, '', LocationDescription) AS v_LocationDescription,\n\tLocationNumber,\n\tLocationType,\n\t-- *INF*: IIF(ISNULL(LocationType),'',LocationType)\n\tIFF(LocationType IS NULL, '', LocationType) AS v_LocationType,\n\tLocationId,\n\tWC_LocationId,\n\tPolicyKey,\n\t-- *INF*: LTRIM(RTRIM(v_Address1))||LTRIM(RTRIM(v_Address2))||LTRIM(RTRIM(v_City))||LTRIM(RTRIM(v_County))||LTRIM(RTRIM(v_StateProv))||LTRIM(RTRIM(v_PostalCode))||LTRIM(RTRIM(v_Country))||LTRIM(RTRIM(v_LocationDescription))||LTRIM(RTRIM(v_LocationType))\n\tLTRIM(RTRIM(v_Address1)) || LTRIM(RTRIM(v_Address2)) || LTRIM(RTRIM(v_City)) || LTRIM(RTRIM(v_County)) || LTRIM(RTRIM(v_StateProv)) || LTRIM(RTRIM(v_PostalCode)) || LTRIM(RTRIM(v_Country)) || LTRIM(RTRIM(v_LocationDescription)) || LTRIM(RTRIM(v_LocationType)) AS v_Location_Compare,\n\tTransactionType,\n\t-- *INF*: LTRIM(RTRIM(v_Location_Compare))\n\tLTRIM(RTRIM(v_Location_Compare)) AS Location_Compare\n\tFROM FIL_ExcludeSubmittedRecords\n),\nJNR_Deleted AS (SELECT\n\tEXP_Comp.PolicyKey AS PolicyKey_Deleted, \n\tEXP_Comp.Location_Compare AS Location_Compare_Deleted, \n\tEXP_Comp.LocationDeletedIndicator AS LocationDeletedIndicator_Deleted, \n\tEXP_Compare.WCTrackHistoryID, \n\tEXP_Compare.ExtractDate, \n\tEXP_Compare.Auditid, \n\tEXP_Compare.Address1, \n\tEXP_Compare.Address2, \n\tEXP_Compare.City, \n\tEXP_Compare.County, \n\tEXP_Compare.StateProv, \n\tEXP_Compare.PostalCode, \n\tEXP_Compare.Country, \n\tEXP_Compare.LocationDeletedIndicator, \n\tEXP_Compare.LocationDescription, \n\tEXP_Compare.LocationNumber, \n\tEXP_Compare.LocationType, \n\tEXP_Compare.LocationId, \n\tEXP_Compare.WC_LocationId, \n\tEXP_Compare.PolicyKey, \n\tEXP_Compare.TransactionType, \n\tEXP_Compare.Location_Compare\n\tFROM EXP_Compare\n\tLEFT OUTER JOIN EXP_Comp\n\tON EXP_Comp.Location_Compare = EXP_Compare.Location_Compare AND EXP_Comp.PolicyKey = EXP_Compare.PolicyKey\n),\nEXP_Output AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tExtractDate,\n\tAuditid,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationDeletedIndicator,\n\tLocationDescription,\n\tLocationNumber,\n\tLocationType,\n\tLocationId,\n\tWC_LocationId,\n\tPolicyKey,\n\tTransactionType,\n\tLocation_Compare,\n\tPolicyKey_Deleted,\n\tLocation_Compare_Deleted,\n\tLocationDeletedIndicator_Deleted,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LocationDeletedIndicator_Deleted='1','1',\r\n\t-- IN(TransactionType,'New','Reissue','Renew','Rewrite') AND LocationDeletedIndicator='T','1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    LocationDeletedIndicator_Deleted = '1', '1',\n\t    TransactionType IN ('New','Reissue','Renew','Rewrite') AND LocationDeletedIndicator = 'T', '1',\n\t    '0'\n\t) AS Filter_Flag\n\tFROM JNR_Deleted\n),\nFIL_Target AS (\n\tSELECT\n\tAuditid, \n\tExtractDate, \n\tWCTrackHistoryID, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationDeletedIndicator, \n\tLocationDescription, \n\tLocationNumber, \n\tLocationType, \n\tLocationId, \n\tWC_LocationId, \n\tPolicyKey, \n\tLocation_Compare, \n\tPolicyKey_Deleted, \n\tLocation_Compare_Deleted, \n\tLocationDeletedIndicator_Deleted, \n\tFilter_Flag\n\tFROM EXP_Output\n\tWHERE Filter_Flag='0'\n),\nWorkWCLocation AS (\n\tTRUNCATE TABLE WorkWCLocation;\n\tINSERT INTO WorkWCLocation\n\t(Auditid, ExtractDate, WCTrackHistoryID, Address1, Address2, City, County, StateProv, PostalCode, Country, LocationDeletedIndicator, LocationDescription, LocationNumber, LocationType, LocationId, WC_LocationId)\n\tSELECT \n\tAUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tADDRESS1, \n\tADDRESS2, \n\tCITY, \n\tCOUNTY, \n\tSTATEPROV, \n\tPOSTALCODE, \n\tCOUNTRY, \n\tLOCATIONDELETEDINDICATOR, \n\tLOCATIONDESCRIPTION, \n\tLOCATIONNUMBER, \n\tLOCATIONTYPE, \n\tLOCATIONID, \n\tWC_LOCATIONID\n\tFROM FIL_Target\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DATABASE_EXAMPLEDATA": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DELETED": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}