{
    "name": "s_m_POL_DM_LOAD_PolicyFormFact",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_PolicyFormFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Calender_Dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_PolicyForm AS (\n\tSELECT\n\t\tPolicyFormId,\n\t\tAuditId AS AuditID,\n\t\tSourceSystemID,\n\t\tCreatedDate,\n\t\tModifiedDate,\n\t\tPolicyAKID,\n\t\tFormID,\n\t\tFormTransactionCreatedDate,\n\t\tFormTransactionEffectiveDate,\n\t\tFormTransactionType,\n\t\tFormAddRemoveFlag,\n\t\tFormAddedDate\n\tFROM PolicyForm\n\tWHERE ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_Std_Values AS (\n\tSELECT\n\tPolicyFormId,\n\tPolicyAKID,\n\tFormID,\n\tFormTransactionCreatedDate,\n\tFormTransactionEffectiveDate,\n\t-- *INF*: Trunc(FormTransactionCreatedDate)\n\tTRUNC(FormTransactionCreatedDate) AS v_TransactionCreatedDate,\n\t-- *INF*: TRUNC(FormTransactionEffectiveDate)\n\tTRUNC(FormTransactionEffectiveDate) AS v_TransactionEffectiveDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(v_TransactionCreatedDate)\n\tLKP_CALENDER_DIM_v_TransactionCreatedDate.clndr_id AS o_TransactionCreatedDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(v_TransactionEffectiveDate)\n\tLKP_CALENDER_DIM_v_TransactionEffectiveDate.clndr_id AS o_TransactionEffectiveDate,\n\tFormAddRemoveFlag,\n\tFormAddedDate,\n\t-- *INF*: Trunc(FormAddedDate)\n\tTRUNC(FormAddedDate) AS v_FormAddedDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(v_FormAddedDate)\n\tLKP_CALENDER_DIM_v_FormAddedDate.clndr_id AS o_FormAddedDate\n\tFROM SQ_PolicyForm\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_v_TransactionCreatedDate\n\tON LKP_CALENDER_DIM_v_TransactionCreatedDate.clndr_date = v_TransactionCreatedDate\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_v_TransactionEffectiveDate\n\tON LKP_CALENDER_DIM_v_TransactionEffectiveDate.clndr_date = v_TransactionEffectiveDate\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_v_FormAddedDate\n\tON LKP_CALENDER_DIM_v_FormAddedDate.clndr_date = v_FormAddedDate\n\n),\nLKP_V2_Policy AS (\n\tSELECT\n\tcontract_cust_ak_id,\n\tAgencyAKId,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode,\n\tFormTransactionCreatedDate,\n\tpol_ak_id\n\tFROM (\n\t\tSELECT p.contract_cust_ak_id as contract_cust_ak_id, p.AgencyAKId as AgencyAKId, spc.StrategicProfitCenterCode as StrategicProfitCenterCode, ins.InsuranceSegmentCode as InsuranceSegmentCode, po.PolicyOfferingCode as PolicyOfferingCode, p.pol_ak_id as pol_ak_id \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter spc on spc.StrategicProfitCenterAKId = p.StrategicProfitCenterAKId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ins on ins.InsuranceSegmentAKId = p.InsuranceSegmentAKId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering po on po.PolicyOfferingAKId = p.PolicyOfferingAKId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id ORDER BY contract_cust_ak_id) = 1\n),\nLKP_AgencyDim AS (\n\tSELECT\n\tAgencyDimID,\n\tEDWAgencyAKID,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tAgencyDimID,\n\t\t\tEDWAgencyAKID,\n\t\t\tEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V3}.AgencyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID,EffectiveDate,ExpirationDate ORDER BY AgencyDimID) = 1\n),\nLKP_FormDim AS (\n\tSELECT\n\tFormDimId,\n\tFormId\n\tFROM (\n\t\tselect FormDim.FormDimID as FormDimID,\r\n\t\tForm.FormId as FormId\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Form \r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyForm\r\n\t\ton PolicyForm.FormID=Form.FormID\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.FormDim\r\n\t\ton Form.FormName=FormDim.FormName\r\n\t\tand Form.FormNumber=FormDim.FormNumber\r\n\t\tand Form.FormEditionDate=FormDim.FormEditionDate\r\n\t\tand Form.FormEffectiveDate=FormDim.FormEffectiveDate\r\n\t\tand Form.FormExpirationDate=FormDim.FormExpirationDate\r\n\t\twhere PolicyForm.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FormId ORDER BY FormDimId) = 1\n),\nLKP_InsuranceReferenceDimId AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode\n\tFROM (\n\t\tSELECT InsuranceReferenceDim.InsuranceReferenceDimId as InsuranceReferenceDimId, \r\n\t\tInsuranceReferenceDim.StrategicProfitCenterCode as StrategicProfitCenterCode,\r\n\t\tInsuranceReferenceDim.InsuranceSegmentCode as InsuranceSegmentCode,\r\n\t\tInsuranceReferenceDim.PolicyOfferingCode as PolicyOfferingCode\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\r\n\t\tWHERE InsuranceReferenceDim.ProductCode = '000'\r\n\t\tand InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode = '000'\r\n\t\tand InsuranceReferenceDim.AccountingProductCode = 'N/A'\r\n\t\tand InsuranceReferenceDim.EnterpriseGroupCode = '1'\r\n\t\tand InsuranceReferenceDim.InsuranceReferenceLegalEntityCode = '1'\r\n\t\tand InsuranceReferenceDim.RatingPlanCode = 'N/A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode ORDER BY InsuranceReferenceDimId) = 1\n),\nLKP_contract_customer_dim AS (\n\tSELECT\n\tcontract_cust_dim_id,\n\tedw_contract_cust_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tcontract_cust_dim_id,\n\t\t\tedw_contract_cust_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id) = 1\n),\nLKP_policy_dim AS (\n\tSELECT\n\tpol_dim_id,\n\tedw_pol_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tpol_dim_id,\n\t\t\tedw_pol_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.policy_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id) = 1\n),\nEXP_Get_Values AS (\n\tSELECT\n\tEXP_Std_Values.PolicyFormId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_ID,\n\tLKP_FormDim.FormDimId AS FormDimID,\n\t-- *INF*: DECODE(TRUE, IsNull(FormDimID),-1,FormDimID)\n\tDECODE(TRUE,\n\t\tFormDimID IS NULL, - 1,\n\t\tFormDimID\n\t) AS o_FormDimID,\n\tLKP_policy_dim.pol_dim_id AS PolicyDimID,\n\t-- *INF*: DECODE(TRUE, IsNull(PolicyDimID),-1,PolicyDimID)\n\tDECODE(TRUE,\n\t\tPolicyDimID IS NULL, - 1,\n\t\tPolicyDimID\n\t) AS o_PolicyDimID,\n\tLKP_contract_customer_dim.contract_cust_dim_id AS ContractCustomerDimID,\n\t-- *INF*: DECODE(TRUE, IsNull(ContractCustomerDimID),-1,ContractCustomerDimID)\n\tDECODE(TRUE,\n\t\tContractCustomerDimID IS NULL, - 1,\n\t\tContractCustomerDimID\n\t) AS o_ContractCustomerDimID,\n\tLKP_AgencyDim.AgencyDimID,\n\t-- *INF*: DECODE(TRUE, IsNull(AgencyDimID),-1,AgencyDimID)\n\tDECODE(TRUE,\n\t\tAgencyDimID IS NULL, - 1,\n\t\tAgencyDimID\n\t) AS o_AgencyDimID,\n\tLKP_InsuranceReferenceDimId.InsuranceReferenceDimId,\n\t-- *INF*: DECODE(TRUE, IsNull(InsuranceReferenceDimId),-1,InsuranceReferenceDimId)\n\tDECODE(TRUE,\n\t\tInsuranceReferenceDimId IS NULL, - 1,\n\t\tInsuranceReferenceDimId\n\t) AS o_InsuranceReferenceDimId,\n\tEXP_Std_Values.o_TransactionCreatedDate AS TransactionDateID,\n\tEXP_Std_Values.o_TransactionEffectiveDate AS TransactionEffectiveDateID,\n\tEXP_Std_Values.FormAddRemoveFlag,\n\tEXP_Std_Values.o_FormAddedDate AS FormAddedDate\n\tFROM EXP_Std_Values\n\tLEFT JOIN LKP_AgencyDim\n\tON LKP_AgencyDim.EDWAgencyAKID = LKP_V2_Policy.AgencyAKId AND LKP_AgencyDim.EffectiveDate <= LKP_V2_Policy.FormTransactionCreatedDate AND LKP_AgencyDim.ExpirationDate >= LKP_V2_Policy.FormTransactionCreatedDate\n\tLEFT JOIN LKP_FormDim\n\tON LKP_FormDim.FormId = EXP_Std_Values.FormID\n\tLEFT JOIN LKP_InsuranceReferenceDimId\n\tON LKP_InsuranceReferenceDimId.StrategicProfitCenterCode = LKP_V2_Policy.StrategicProfitCenterCode AND LKP_InsuranceReferenceDimId.InsuranceSegmentCode = LKP_V2_Policy.InsuranceSegmentCode AND LKP_InsuranceReferenceDimId.PolicyOfferingCode = LKP_V2_Policy.PolicyOfferingCode\n\tLEFT JOIN LKP_contract_customer_dim\n\tON LKP_contract_customer_dim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_contract_customer_dim.eff_from_date <= LKP_V2_Policy.FormTransactionCreatedDate AND LKP_contract_customer_dim.eff_to_date >= LKP_V2_Policy.FormTransactionCreatedDate\n\tLEFT JOIN LKP_policy_dim\n\tON LKP_policy_dim.edw_pol_ak_id = EXP_Std_Values.PolicyAKID AND LKP_policy_dim.eff_from_date <= EXP_Std_Values.FormTransactionCreatedDate AND LKP_policy_dim.eff_to_date >= EXP_Std_Values.FormTransactionCreatedDate\n),\nLKP_PolicyFormFact AS (\n\tSELECT\n\tPolicyFormFactId,\n\tEDWPolicyFormPKId\n\tFROM (\n\t\tSELECT @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyFormFact.PolicyFormFactId as PolicyFormFactId, @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyFormFact.EDWPolicyFormPKId as EDWPolicyFormPKId FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyFormFact\r\n\t\tWhere EXISTS(SELECT 1 FROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyForm \r\n\t\tWHERE EDWPolicyFormPKId = PolicyFormId and ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPolicyFormPKId ORDER BY PolicyFormFactId) = 1\n),\nFIL_Insert_PolicyFormFact AS (\n\tSELECT\n\tLKP_PolicyFormFact.PolicyFormFactId, \n\tEXP_Get_Values.Audit_ID, \n\tEXP_Get_Values.PolicyFormId, \n\tEXP_Get_Values.o_FormDimID AS FormDimID, \n\tEXP_Get_Values.o_PolicyDimID AS PolicyDimID, \n\tEXP_Get_Values.o_ContractCustomerDimID AS ContractCustomerDimID, \n\tEXP_Get_Values.o_AgencyDimID AS AgencyDimID, \n\tEXP_Get_Values.o_InsuranceReferenceDimId AS InsuranceReferenceDimId, \n\tEXP_Get_Values.TransactionDateID, \n\tEXP_Get_Values.TransactionEffectiveDateID, \n\tEXP_Get_Values.FormAddRemoveFlag, \n\tEXP_Get_Values.FormAddedDate\n\tFROM EXP_Get_Values\n\tLEFT JOIN LKP_PolicyFormFact\n\tON LKP_PolicyFormFact.EDWPolicyFormPKId = EXP_Get_Values.PolicyFormId\n\tWHERE ISNULL(PolicyFormFactId)\n),\nPolicyFormFact AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyFormFact\n\t(AuditId, EDWPolicyFormPKId, FormDimId, PolicyDimId, ContractCustomerDimId, AgencyDimId, InsuranceReferenceDimId, FormTransactionCreatedDateId, FormTransactionEffectiveDateId, FormAddRemoveFlag, FormAddedDateId)\n\tSELECT \n\tAudit_ID AS AUDITID, \n\tPolicyFormId AS EDWPOLICYFORMPKID, \n\tFormDimID AS FORMDIMID, \n\tPolicyDimID AS POLICYDIMID, \n\tContractCustomerDimID AS CONTRACTCUSTOMERDIMID, \n\tAgencyDimID AS AGENCYDIMID, \n\tINSURANCEREFERENCEDIMID, \n\tTransactionDateID AS FORMTRANSACTIONCREATEDDATEID, \n\tTransactionEffectiveDateID AS FORMTRANSACTIONEFFECTIVEDATEID, \n\tFORMADDREMOVEFLAG, \n\tFormAddedDate AS FORMADDEDDATEID\n\tFROM FIL_Insert_PolicyFormFact\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246511"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905531"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604524"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:57:01"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 03:31:13"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "RUNDATE": {
                "type": "string",
                "defaultValue": "CONVERT(DATE,GETDATE())"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}