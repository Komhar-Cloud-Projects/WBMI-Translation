{
    "name": "m_POL_DW_LOAD_PremiumMasterCalculation_Direct",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PremiumMasterCalculation_Direct",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_PIF_02_FOR_FIELDS AS (\n\tSELECT\n\tpif_number_installments_a,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module\n\tFROM (\n\t\tSELECT DISTINCT A.pif_number_installments_a as pif_number_installments_a, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module \r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_02_stage A\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module ORDER BY pif_number_installments_a) = 1\n),\nLKP_sup_premium_transaction_code AS (\n\tSELECT\n\tStandardPremiumTransactionCode,\n\tsup_prem_trans_code_id\n\tFROM (\n\t\tSELECT \n\t\t\tStandardPremiumTransactionCode,\n\t\t\tsup_prem_trans_code_id\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_premium_transaction_code\n\t\tWHERE crrnt_snpsht_flag='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY sup_prem_trans_code_id ORDER BY StandardPremiumTransactionCode) = 1\n),\nlkp_sup_reason_amended_code AS (\n\tSELECT\n\tStandardReasonAmendedCode,\n\trsn_amended_code,\n\tsource_sys_id\n\tFROM (\n\t\tSELECT StandardReasonAmendedCode as StandardReasonAmendedCode,\r\n\t\tsource_sys_id as source_sys_id,\r\n\t\tCASE WHEN source_sys_id='DCT' THEN LOWER(rsn_amended_code) ELSE rsn_amended_code END as rsn_amended_code\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\r\n\t\tWHERE crrnt_snpsht_flag=1\r\n\t\tORDER BY CASE WHEN source_sys_id='DCT' THEN LOWER(rsn_amended_code) ELSE rsn_amended_code END, source_sys_id\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code,source_sys_id ORDER BY StandardReasonAmendedCode) = 1\n),\nSQ_PremiumCalculationDirectTransactions_DCT AS (\n\tDeclare @YearMonth varchar(6) =  (select substring(convert(varchar(6),(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE())),112),1,6) )\r\n\t\r\n\tSELECT \tpol.source_sys_id,\r\n\tPOL.pol_ak_id, \r\n\tPOL.agency_ak_id, \r\n\tPOL.pol_sym, POL.pol_num, POL.pol_mod, \r\n\tPOL.pol_key, POL.pol_eff_date, POL.pol_exp_date, POL.pms_pol_lob_code, \r\n\tPOL.pol_term, POL.pol_issue_code, POL.pol_audit_frqncy, \r\n\tPOL.contract_cust_ak_id, CUSADDR.addr_line_1, CUSADDR.city_name, CUSADDR.state_prov_code, \r\n\tPOLCOV.RiskLocationAKID, LOC.LocationUnitNumber, LOC.LocationIndicator, POLCOV.PolicyCoverageAKID, \r\n\tPOLCOV.InsuranceLine, POLCOV.TypeBureauCode, POLCOV.PolicyCoverageEffectiveDate, \r\n\tPOLCOV.PolicyCoverageExpirationDate, \r\n\t-1 AS StatisticalCoverageAKID, \r\n\tRATCOV.SubLocationUnitNumber, \r\n\t'N/A' AS RiskUnitGroup, \r\n\t'N/A' AS RiskUnitGroupSequenceNumber, \r\n\t'N/A' AS RiskUnit, \r\n\t'N/A' AS RiskUnitSequenceNumber, \r\n\t'N/A' AS MajorPerilCode, \r\n\t'N/A' AS MajorPerilSequenceNumber, \r\n\tRATCOV.SublineCode, \r\n\t'N/A' AS PMSTypeExposure, \r\n\t'1800-1-1' AS StatisticalCoverageEffectiveDate, \r\n\t'2100-12-31 23:59:59' AS StatisticalCoverageExpirationDate, \r\n\tPT.AgencyActualCommissionRate, \r\n\t\r\n\tPT.PremiumLoadSequence, PT.PremiumTransactionAKID, PT.ReinsuranceCoverageAKID, PT.PMSFunctionCode, \r\n\tPT.SupPremiumTransactionCodeId, PT.PremiumTransactionEnteredDate, PT.PremiumTransactionEffectiveDate, PT.PremiumTransactionExpirationDate, PT.PremiumTransactionBookedDate, PT.PremiumTransactionAmount, PT.FullTermPremium, PT.PremiumType, PT.ReasonAmendedCode, PT.OffsetOnsetCode, \r\n\t\r\n\tRATCOV.RatingCoverageAKID, RATCOV.ClassCode, PT.Exposure, \r\n\tRATCOV.EffectiveDate, RATCOV.ExpirationDate,\r\n\tPOLCOV.CustomerCareCommissionRate , PT.WrittenExposure, PT.DeclaredEventFlag\r\n\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_address CUSADDR with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation LOC  with (nolock), \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage POLCOV  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RATCOV with (nolock),\r\n\t    @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock)\r\n\tWHERE \r\n\t\r\n\tsubstring(convert(varchar(6),PT.PremiumTransactionBookedDate,112),1,6) = @YearMonth\r\n\tAND substring(convert(varchar(6),PT.PremiumTransactionEnteredDate,112),1,6) <= @YearMonth\r\n\t\r\n\t\tAND CUSADDR.contract_cust_ak_id = POL.contract_cust_ak_id\r\n\t\tAND LOC.PolicyAKID = POL.pol_ak_id\r\n\t\tAND LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\tAND POLCOV.PolicyCoverageAKID = RATCOV.PolicyCoverageAKID\r\n\t    AND PT.RatingCoverageAKId = RATCOV.RatingCoverageAKID\r\n\t    AND PT.PremiumType = 'D'\r\n\t\tAND CUSADDR.crrnt_snpsht_flag = 1  \r\n\t\tAND POL.crrnt_snpsht_flag = 1 \r\n\t\tAND LOC.CurrentSnapshotFlag =1\r\n\t\tAND POLCOV.CurrentSnapshotFlag =1 \r\n\t\tAND PT.CurrentSnapshotFlag =1 \r\n\t\tAND RATCOV.EffectiveDate=PT.EffectiveDate\r\n\t\tAND CUSADDR.source_sys_id = 'DCT'\r\n\t\tAND POL.source_sys_id = 'DCT' \r\n\t\tAND LOC.SourceSystemID ='DCT'\r\n\t\tAND POLCOV.SourceSystemID ='DCT' \r\n\t\tAND PT.SourceSystemID ='DCT' \r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\r\n\t\tORDER BY \r\n\t\t PT.PremiumTransactionId\n),\nEXP_PremiumMaster_DCT AS (\n\tSELECT\n\tsource_sys_id AS i_source_sys_id,\n\tpol_ak_id AS i_PolicyAKID,\n\tagency_ak_id AS i_AgencyAKID,\n\tpol_sym AS i_pol_sym,\n\tpol_num AS i_pol_num,\n\tpol_mod AS i_pol_mod,\n\tpol_key AS i_pol_key,\n\tpol_eff_date AS i_pol_eff_date,\n\tpol_exp_date AS i_pol_exp_date,\n\tpms_pol_lob_code AS i_pms_pol_lob_code,\n\tpol_term AS i_pol_term,\n\tpol_issue_code AS i_pol_issue_code,\n\tpol_audit_frqncy AS i_pol_audit_frqncy,\n\tcontract_cust_ak_id AS i_ContractCustomerAKID,\n\taddr_line_1 AS i_PremiumMasterRiskAddress,\n\tcity_name AS i_city_name,\n\tstate_prov_code AS i_state_prov_code,\n\tRiskLocationAKID AS i_RiskLocationAKID,\n\tLocationUnitNumber AS i_LocationUnitNumber,\n\tLocationIndicator AS i_LocationIndicator,\n\tPolicyCoverageAKID AS i_PolicyCoverageAKID,\n\tInsuranceLine AS i_InsuranceLine,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tPolicyCoverageEffectiveDate AS i_PolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate AS i_PolicyCoverageExpirationDate,\n\tStatisticalCoverageAKID AS i_StatisticalCoverageAKID,\n\tSubLocationUnitNumber AS i_SubLocationUnitNumber,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tRiskUnitGroupSequenceNumber AS i_RiskUnitGroupSequenceNumber,\n\tRiskUnit AS i_RiskUnit,\n\tRiskUnitSequenceNumber AS i_RiskUnitSequenceNumber,\n\tMajorPerilCode AS i_MajorPerilCode,\n\tMajorPerilSequenceNumber AS i_MajorPerilSequenceNumber,\n\tSublineCode AS i_SublineCode,\n\tPMSTypeExposure AS i_PMSTypeExposure,\n\tStatisticalCoverageEffectiveDate AS i_StatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate AS i_StatisticalCoverageExpirationDate,\n\tAgencyActualCommissionRate AS i_AgencyActualCommissionRate,\n\tPremiumLoadSequence AS i_PremiumLoadSequence,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tReinsuranceCoverageAKID AS i_ReinsuranceCoverageAKID,\n\tPMSFunctionCode AS i_PMSFunctionCode,\n\tSupPremiumTransactionCodeId AS i_SupPremiumTransactionCodeId,\n\tPremiumTransactionEnteredDate AS i_PremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate AS i_PremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate AS i_PremiumTransactionBookedDate,\n\tPremiumTransactionAmount AS i_PremiumTransactionAmount,\n\tFullTermPremium AS i_FullTermPremium,\n\tPremiumType AS i_PremiumMasterPremiumType,\n\tReasonAmendedCode AS i_ReasonAmendedCode,\n\tOffsetOnsetCode AS i_OffsetOnsetIndicator,\n\tRatingCoverageAKID AS i_RatingCoverageAKID,\n\tClassCode AS i_ClassCode,\n\tExposure AS i_Exposure,\n\tRatingCoverageEffectiveDate AS i_RatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate AS i_RatingCoverageExpirationDate,\n\tWrittenExposure AS i_WrittenExposure,\n\t-- *INF*: :LKP.LKP_sup_premium_transaction_code(i_SupPremiumTransactionCodeId)\n\tLKP_SUP_PREMIUM_TRANSACTION_CODE_i_SupPremiumTransactionCodeId.StandardPremiumTransactionCode AS v_PremiumTransactionCode,\n\t-- *INF*: :LKP.LKP_SUP_REASON_AMENDED_CODE(LOWER(i_ReasonAmendedCode),i_source_sys_id)\n\tLKP_SUP_REASON_AMENDED_CODE_LOWER_i_ReasonAmendedCode_i_source_sys_id.StandardReasonAmendedCode AS v_ReasonAmendedCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_InsuranceLine='WorkersCompensation' and i_PremiumTransactionAmount<0 AND i_WrittenExposure>0,\r\n\t-- -1 * i_WrittenExposure,\r\n\t-- i_WrittenExposure)\n\tDECODE(TRUE,\n\ti_InsuranceLine = 'WorkersCompensation' AND i_PremiumTransactionAmount < 0 AND i_WrittenExposure > 0, - 1 * i_WrittenExposure,\n\ti_WrittenExposure) AS v_WrittenExposure,\n\t'DCT' AS o_SourceSystemID,\n\ti_AgencyAKID AS o_AgencyAKID,\n\ti_PolicyAKID AS o_PolicyAKID,\n\ti_ContractCustomerAKID AS o_ContractCustomerAKID,\n\ti_RiskLocationAKID AS o_RiskLocationAKID,\n\ti_PolicyCoverageAKID AS o_PolicyCoverageAKID,\n\ti_StatisticalCoverageAKID AS o_StatisticalCoverageAKID,\n\ti_ReinsuranceCoverageAKID AS o_ReinsuranceCoverageAKID,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionAKID,\n\t-1 AS o_BureauStatisticalCodeAKID,\n\ti_pol_sym AS o_pol_sym,\n\ti_pol_num AS o_pol_num,\n\ti_pol_mod AS o_pol_mod,\n\ti_pol_key AS o_pol_key,\n\ti_pol_eff_date AS o_pol_eff_date,\n\ti_pol_exp_date AS o_pol_exp_date,\n\ti_pms_pol_lob_code AS o_pms_pol_lob_code,\n\ti_pol_issue_code AS o_pol_issue_code,\n\ti_LocationUnitNumber AS o_LocationUnitNumber,\n\ti_LocationIndicator AS o_LocationIndicator,\n\ti_InsuranceLine AS o_InsuranceLine,\n\ti_TypeBureauCode AS o_TypeBureauCode,\n\ti_PolicyCoverageEffectiveDate AS o_PolicyCoverageEffectiveDate,\n\ti_PolicyCoverageExpirationDate AS o_PolicyCoverageExpirationDate,\n\ti_SubLocationUnitNumber AS o_SubLocationUnitNumber,\n\ti_RiskUnitGroup AS o_RiskUnitGroup,\n\ti_RiskUnitGroupSequenceNumber AS o_RiskUnitGroupSequenceNumber,\n\ti_RiskUnit AS o_RiskUnit,\n\ti_RiskUnitSequenceNumber AS o_RiskUnitSequenceNumber,\n\ti_MajorPerilCode AS o_MajorPerilCode,\n\ti_MajorPerilSequenceNumber AS o_MajorPerilSequenceNumber,\n\ti_SublineCode AS o_SublineCode,\n\ti_PMSTypeExposure AS o_PMSTypeExposure,\n\ti_StatisticalCoverageEffectiveDate AS o_StatisticalCoverageEffectiveDate,\n\ti_StatisticalCoverageExpirationDate AS o_StatisticalCoverageExpirationDate,\n\ti_PremiumLoadSequence AS o_PremiumLoadSequence,\n\ti_PMSFunctionCode AS o_PMSFunctionCode,\n\t-- *INF*: IIF(ISNULL(v_PremiumTransactionCode), 'N/A', v_PremiumTransactionCode)\n\tIFF(v_PremiumTransactionCode IS NULL, 'N/A', v_PremiumTransactionCode) AS o_PremiumTransactionCode,\n\ti_PremiumTransactionEnteredDate AS o_PremiumTransactionEnteredDate,\n\ti_PremiumTransactionEffectiveDate AS o_PremiumTransactionEffectiveDate,\n\ti_ClassCode AS o_ClassCode,\n\ti_PremiumTransactionExpirationDate AS o_PremiumTransactionExpirationDate,\n\ti_PremiumTransactionBookedDate AS o_PremiumTransactionBookedDate,\n\t-- *INF*: IIF(NOT ISNULL(v_ReasonAmendedCode), v_ReasonAmendedCode, 'N/A')\n\tIFF(NOT v_ReasonAmendedCode IS NULL, v_ReasonAmendedCode, 'N/A') AS o_ReasonAmendedCode,\n\t'N/A' AS o_BureauSpecialUseCode,\n\t'N/A' AS o_PMSAnnualStatementLine,\n\ti_AgencyActualCommissionRate AS o_AgencyActualCommissionRate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_InsuranceLine='WorkersCompensation' and i_PremiumTransactionAmount<0 AND i_Exposure>0,\r\n\t-- -1 * i_Exposure,\r\n\t-- i_Exposure)\n\tDECODE(TRUE,\n\ti_InsuranceLine = 'WorkersCompensation' AND i_PremiumTransactionAmount < 0 AND i_Exposure > 0, - 1 * i_Exposure,\n\ti_Exposure) AS o_Exposure,\n\t'N/A' AS o_RatingDateIndicator,\n\t'N/A' AS o_BureauStatisticalUserLine,\n\t'N/A' AS o_StatisticalCodes,\n\ti_PremiumTransactionAmount AS o_PremiumTransactionAmount,\n\ti_FullTermPremium AS o_FullTermPremium,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_PremiumMasterBureauInceptionDate,\n\ti_PremiumMasterRiskAddress AS o_PremiumMasterRiskAddress,\n\ti_city_name || ', ' || i_state_prov_code AS o_PremiumMasterRiskCityState,\n\t'N/A' AS o_PremiumMasterRenewalIndicator,\n\ti_PremiumMasterPremiumType AS o_PremiumMasterPremiumType,\n\t'N/A' AS o_Status,\n\t-- *INF*: DECODE(RTRIM(i_OffsetOnsetIndicator), 'N/A', 'DIRECT', 'Offset', 'OFFSET', 'Onset', 'ONSET', 'N/A')\n\tDECODE(RTRIM(i_OffsetOnsetIndicator),\n\t'N/A', 'DIRECT',\n\t'Offset', 'OFFSET',\n\t'Onset', 'ONSET',\n\t'N/A') AS o_PremiumMasterStatus,\n\ti_pol_audit_frqncy AS o_pol_audit_frqncy,\n\ti_pol_term AS o_pol_term,\n\ti_RatingCoverageAKID AS o_RatingCoverageAKID,\n\ti_RatingCoverageEffectiveDate AS o_RatingCoverageEffectiveDate,\n\ti_RatingCoverageExpirationDate AS o_RatingCoverageExpirationDate,\n\tCustomerCareCommissionRate,\n\tv_WrittenExposure AS o_WrittenExposure,\n\tDeclaredEventsFlag\n\tFROM SQ_PremiumCalculationDirectTransactions_DCT\n\tLEFT JOIN LKP_SUP_PREMIUM_TRANSACTION_CODE LKP_SUP_PREMIUM_TRANSACTION_CODE_i_SupPremiumTransactionCodeId\n\tON LKP_SUP_PREMIUM_TRANSACTION_CODE_i_SupPremiumTransactionCodeId.sup_prem_trans_code_id = i_SupPremiumTransactionCodeId\n\n\tLEFT JOIN LKP_SUP_REASON_AMENDED_CODE LKP_SUP_REASON_AMENDED_CODE_LOWER_i_ReasonAmendedCode_i_source_sys_id\n\tON LKP_SUP_REASON_AMENDED_CODE_LOWER_i_ReasonAmendedCode_i_source_sys_id.rsn_amended_code = LOWER(i_ReasonAmendedCode)\n\tAND LKP_SUP_REASON_AMENDED_CODE_LOWER_i_ReasonAmendedCode_i_source_sys_id.source_sys_id = i_source_sys_id\n\n),\nSQ_PremiumCalculationDirectTransactions_PMS AS (\n\tSELECT \tPOL.source_sys_id,\r\n\t\tPOL.pol_ak_id, \r\n\t      POL.agency_ak_id, \r\n\t\tPOL.pol_sym, \r\n\t\tPOL.pol_num, \r\n\t\tPOL.pol_mod, \r\n\t\tPOL.pol_key, \r\n\t\tPOL.pol_eff_date, \r\n\t\tPOL.pol_exp_date, \r\n\t\tPOL.pms_pol_lob_code, \r\n\t      POL.pol_term,\r\n\t\tPOL.pol_issue_code, \r\n\t      POL.pol_audit_frqncy,\r\n\t\tPOL.contract_cust_ak_id, \r\n\t\tCUSADDR.addr_line_1, \r\n\t\tCUSADDR.city_name, \r\n\t\tCUSADDR.state_prov_code, \r\n\t\tCUSADDR.zip_postal_code, \r\n\t\tLOC.RiskLocationAKID, \r\n\t\tLOC.LocationUnitNumber, \r\n\t\tLOC.LocationIndicator, \r\n\t\tPOLCOV.PolicyCoverageAKID, \r\n\t\tPOLCOV.InsuranceLine, \r\n\t\tPOLCOV.TypeBureauCode, \r\n\t\tPOLCOV.PolicyCoverageEffectiveDate, \r\n\t\tPOLCOV.PolicyCoverageExpirationDate, \r\n\t\tSTATCOV.StatisticalCoverageAKID, \r\n\t\tSTATCOV.SubLocationUnitNumber, \r\n\t\tSTATCOV.RiskUnitGroup, \r\n\t\tSTATCOV.RiskUnitGroupSequenceNumber, \r\n\t\tSTATCOV.RiskUnit, \r\n\t\tSTATCOV.RiskUnitSequenceNumber, \r\n\t\tSTATCOV.MajorPerilCode, \r\n\t\tSTATCOV.MajorPerilSequenceNumber, \r\n\t\tSTATCOV.SublineCode, \r\n\t\tSTATCOV.PMSTypeExposure, \r\n\t\tSTATCOV.ClassCode, \r\n\t\tPT.Exposure, \r\n\t\tSTATCOV.StatisticalCoverageEffectiveDate,\r\n\t\tSTATCOV.StatisticalCoverageExpirationDate, \r\n\t\tPT.AgencyActualCommissionRate, \r\n\t\tSTATCOV.ReinsuranceSectionCode, \r\n\t\tPT.PremiumLoadSequence, \r\n\t\tPT.PremiumTransactionAKID, \r\n\t      PT.ReinsuranceCoverageAKID, \r\n\t\tPT.PMSFunctionCode, \r\n\t\tPT.SupPremiumTransactionCodeId, \r\n\t\tPT.PremiumTransactionEnteredDate, \r\n\t\tPT.PremiumTransactionEffectiveDate, \t\t\r\n\t\tPT.PremiumTransactionExpirationDate, \r\n\t\tPT.PremiumTransactionBookedDate, \r\n\t\tPT.PremiumTransactionAmount, \r\n\t\tPT.FullTermPremium, \r\n\t\tPT.PremiumType, \r\n\t\tPT.ReasonAmendedCode, \r\n\t\tSTATCOD.BureauStatisticalCodeAKID, \r\n\t\tSTATCOD.BureauCode1, \r\n\t\tSTATCOD.BureauCode2, \r\n\t\tSTATCOD.BureauCode3, \r\n\t\tSTATCOD.BureauCode4, \r\n\t\tSTATCOD.BureauCode5, \r\n\t\tSTATCOD.BureauCode6, \r\n\t\tSTATCOD.BureauCode7, \r\n\t\tSTATCOD.BureauCode8, \r\n\t\tSTATCOD.BureauCode9, \r\n\t\tSTATCOD.BureauCode10, \r\n\t\tSTATCOD.BureauCode11, \r\n\t\tSTATCOD.BureauCode12, \r\n\t\tSTATCOD.BureauCode13, \r\n\t\tSTATCOD.BureauCode14, \r\n\t\tSTATCOD.BureauCode15, \r\n\t\tSTATCOD.BureauSpecialUseCode, \r\n\t\tSTATCOD.PMSAnnualStatementLine, \r\n\t\tSTATCOD.RatingDateIndicator, \r\n\t\tSTATCOD.BureauStatisticalUserLine, \r\n\t\tSTATCOD.AuditReinstatementIndicator,\r\n\t\tPT.WrittenExposure, PT.DeclaredEventFlag\r\n\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_address CUSADDR,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation LOC  with (nolock), \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage POLCOV  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage STATCOV  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode STATCOD with (nolock),\r\n\t    \t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock)\r\n\tWHERE exists\r\n\t\t(select distinct POL1.pol_key\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation LOC1  with (nolock), \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL1  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage POLCOV1  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage STATCOV1  with (nolock),\r\n\t    \t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT1 with (nolock)\r\n\t\tWHERE\t\r\n\t\t    LOC1.PolicyAKID = POL1.pol_ak_id\r\n\t\tAND LOC1.RiskLocationAKID = POLCOV1.RiskLocationAKID\r\n\t\tAND POLCOV1.PolicyCoverageAKID = STATCOV1.PolicyCoverageAKID\r\n\t    \tAND STATCOV1.StatisticalCoverageAKID = PT1.StatisticalCoverageAKID\r\n\t\tAND POL1.crrnt_snpsht_flag = 1 \r\n\t\tAND LOC1.CurrentSnapshotFlag =1\r\n\t\tAND STATCOV1.CurrentSnapshotFlag =1 \r\n\t\tAND POLCOV1.CurrentSnapshotFlag =1 \r\n\t\tAND PT1.CurrentSnapshotFlag =1 \r\n\t\tAND POL1.source_sys_id = 'PMS' \r\n\t\tAND LOC1.SourceSystemID='PMS' \r\n\t\tAND STATCOV1.SourceSystemID='PMS'  \r\n\t\tAND POLCOV1.SourceSystemID='PMS'  \r\n\t\tAND PT1.SourceSystemID='PMS' \r\n\t\tAND datepart(MM,PremiumTransactionBookedDate)=datepart(MM,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE()))) \r\n\t\tAND datepart(YYYY,PremiumTransactionBookedDate)=datepart(YYYY,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE())))\r\n\t    \tAND PT1.PremiumType = 'D'\r\n\t    \tAND POL.pol_key = POL1.pol_key)\r\n\t    \tAND CUSADDR.contract_cust_ak_id = POL.contract_cust_ak_id\r\n\t    \tAND LOC.PolicyAKID = POL.pol_ak_id\r\n\t\tAND LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\tAND POLCOV.PolicyCoverageAKID = STATCOV.PolicyCoverageAKID\r\n\t    \tAND STATCOV.StatisticalCoverageAKID = PT.StatisticalCoverageAKID\r\n\t    \tAND PT.PremiumTransactionAKID = STATCOD.PremiumTransactionAKID\r\n\t      AND PT.PremiumType = 'D'\r\n\t\tAND CUSADDR.crrnt_snpsht_flag = 1  \r\n\t\tAND POL.crrnt_snpsht_flag = 1 \r\n\t\tAND LOC.CurrentSnapshotFlag =1\r\n\t\tAND STATCOV.CurrentSnapshotFlag =1 \r\n\t\tAND POLCOV.CurrentSnapshotFlag =1 \r\n\t\tAND PT.CurrentSnapshotFlag =1 \r\n\t\tAND STATCOD.CurrentSnapshotFlag =1\r\n\t\tAND CUSADDR.source_sys_id = 'PMS'  \r\n\t\tAND POL.source_sys_id = 'PMS'  \r\n\t\tAND LOC.SourceSystemID='PMS' \r\n\t\tAND STATCOV.SourceSystemID='PMS'  \r\n\t\tAND POLCOV.SourceSystemID='PMS' \r\n\t\tAND PT.SourceSystemID='PMS' \r\n\t\tAND STATCOD.SourceSystemID='PMS' \r\n\t\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\r\n\t\tORDER BY \r\n\t\t POL.pol_sym\r\n\t    \t,POL.pol_num\r\n\t    \t,POL.pol_mod \r\n\t      ,PT.PMSFunctionCode\r\n\t\t,POLCOV.InsuranceLine\r\n\t\t,LOC.LocationUnitNumber\r\n\t\t,STATCOV.SubLocationUnitNumber\r\n\t\t,STATCOV.RiskUnitGroup\r\n\t\t,STATCOV.RiskUnitGroupSequenceNumber\r\n\t\t,STATCOV.RiskUnit \r\n\t\t,STATCOV.RiskUnitSequenceNumber \r\n\t\t,STATCOV.PMSTypeExposure\r\n\t\t,STATCOV.MajorPerilCode\r\n\t\t,STATCOV.MajorPerilSequenceNumber\r\n\t\t,POLCOV.PolicyCoverageEffectiveDate\r\n\t    \t,PT.PremiumTransactionEffectiveDate\r\n\t\t,PT.PremiumTransactionEnteredDate\r\n\t\t,PT.PremiumLoadSequence  desc\n),\nEXP_DirectTransactions AS (\n\tSELECT\n\tsource_sys_id AS i_source_sys_id,\n\tagency_ak_id,\n\tpol_ak_id,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpms_pol_lob_code,\n\tpol_issue_code,\n\tcontract_cust_ak_id,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tRiskLocationAKID,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tPolicyCoverageAKID,\n\tInsuranceLine,\n\tTypeBureauCode,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tStatisticalCoverageAKID,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tSublineCode,\n\tPMSTypeExposure,\n\tClassCode,\n\tExposure AS i_Exposure,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tAgencyActualCommissionRate,\n\tReinsuranceSectionCode,\n\tPremiumLoadSequence,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tPMSFunctionCode,\n\tSupPremiumTransactionCodeId,\n\t-- *INF*: :LKP.LKP_sup_premium_transaction_code(SupPremiumTransactionCodeId)\n\tLKP_SUP_PREMIUM_TRANSACTION_CODE_SupPremiumTransactionCodeId.StandardPremiumTransactionCode AS v_PremiumTransactionCode,\n\t-- *INF*: IIF(ISNULL(v_PremiumTransactionCode), 'N/A', v_PremiumTransactionCode)\n\tIFF(v_PremiumTransactionCode IS NULL, 'N/A', v_PremiumTransactionCode) AS PremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode AS i_ReasonAmendedCode,\n\t-- *INF*: :LKP.LKP_SUP_REASON_AMENDED_CODE(i_ReasonAmendedCode,i_source_sys_id)\n\tLKP_SUP_REASON_AMENDED_CODE_i_ReasonAmendedCode_i_source_sys_id.StandardReasonAmendedCode AS v_ReasonAmendedCode,\n\t-- *INF*: IIF(NOT ISNULL(v_ReasonAmendedCode), v_ReasonAmendedCode, 'N/A')\n\tIFF(NOT v_ReasonAmendedCode IS NULL, v_ReasonAmendedCode, 'N/A') AS o_ReasonAmendedCode,\n\tBureauStatisticalCodeAKID,\n\tBureauCode1,\n\tBureauCode2,\n\tBureauCode3,\n\tBureauCode4,\n\tBureauCode5,\n\tBureauCode6,\n\tBureauCode7,\n\tBureauCode8,\n\tBureauCode9,\n\tBureauCode10,\n\tBureauCode11,\n\tBureauCode12,\n\tBureauCode13,\n\tBureauCode14,\n\tBureauCode15,\n\tBureauSpecialUseCode,\n\tPMSAnnualStatementLine,\n\tRatingDateIndicator,\n\tBureauStatisticalUserLine,\n\tAuditReinstatementIndicator,\n\tpol_audit_frqncy,\n\tpol_term,\n\tWrittenExposure AS i_WrittenExposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(InsuranceLine))='WC' AND PremiumTransactionAmount<0 AND i_WrittenExposure>0,\r\n\t-- -1 * i_WrittenExposure,\r\n\t-- i_WrittenExposure)\n\tDECODE(TRUE,\n\tLTRIM(RTRIM(InsuranceLine)) = 'WC' AND PremiumTransactionAmount < 0 AND i_WrittenExposure > 0, - 1 * i_WrittenExposure,\n\ti_WrittenExposure) AS v_WrittenExposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(InsuranceLine))='WC' AND PremiumTransactionAmount<0 AND i_Exposure>0,\r\n\t-- -1 * i_Exposure,\r\n\t-- i_Exposure)\n\tDECODE(TRUE,\n\tLTRIM(RTRIM(InsuranceLine)) = 'WC' AND PremiumTransactionAmount < 0 AND i_Exposure > 0, - 1 * i_Exposure,\n\ti_Exposure) AS o_Exposure,\n\tv_WrittenExposure AS o_WrittenExposure,\n\tDeclaredEventsFlag\n\tFROM SQ_PremiumCalculationDirectTransactions_PMS\n\tLEFT JOIN LKP_SUP_PREMIUM_TRANSACTION_CODE LKP_SUP_PREMIUM_TRANSACTION_CODE_SupPremiumTransactionCodeId\n\tON LKP_SUP_PREMIUM_TRANSACTION_CODE_SupPremiumTransactionCodeId.sup_prem_trans_code_id = SupPremiumTransactionCodeId\n\n\tLEFT JOIN LKP_SUP_REASON_AMENDED_CODE LKP_SUP_REASON_AMENDED_CODE_i_ReasonAmendedCode_i_source_sys_id\n\tON LKP_SUP_REASON_AMENDED_CODE_i_ReasonAmendedCode_i_source_sys_id.rsn_amended_code = i_ReasonAmendedCode\n\tAND LKP_SUP_REASON_AMENDED_CODE_i_ReasonAmendedCode_i_source_sys_id.source_sys_id = i_source_sys_id\n\n),\nEXP_Evaluate_fields_for_OnsetOffset AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpms_pol_lob_code,\n\tpol_issue_code,\n\tcontract_cust_ak_id,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tRiskLocationAKID,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tPolicyCoverageAKID,\n\tInsuranceLine,\n\tTypeBureauCode,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tStatisticalCoverageAKID,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tSublineCode,\n\tPMSTypeExposure,\n\tClassCode,\n\to_Exposure AS Exposure,\n\to_WrittenExposure AS WrittenExposure,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tAgencyActualCommissionRate,\n\tReinsuranceSectionCode,\n\tPremiumLoadSequence,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\to_ReasonAmendedCode AS ReasonAmendedCode,\n\tBureauStatisticalCodeAKID,\n\tBureauCode1,\n\tBureauCode2,\n\tBureauCode3,\n\tBureauCode4,\n\tBureauCode5,\n\tBureauCode6,\n\tBureauCode7,\n\tBureauCode8,\n\tBureauCode9,\n\tBureauCode10,\n\tBureauCode11,\n\tBureauCode12,\n\tBureauCode13,\n\tBureauCode14,\n\tBureauCode15,\n\tBureauSpecialUseCode,\n\tPMSAnnualStatementLine,\n\tRatingDateIndicator,\n\tBureauStatisticalUserLine,\n\t-- *INF*: BureauCode1 || BureauCode2 || BureauCode3 || BureauCode4 || BureauCode5 || BureauCode6 || BureauCode7 || BureauCode8 || BureauCode9 || BureauCode10 || BureauCode11 || BureauCode12 || BureauCode13 || BureauCode14 || BureauCode15\r\n\t-- \r\n\t-- --- concatenates all elemental fields to get the full unchanged 38 byte statistical code field for future operations\n\tBureauCode1 || BureauCode2 || BureauCode3 || BureauCode4 || BureauCode5 || BureauCode6 || BureauCode7 || BureauCode8 || BureauCode9 || BureauCode10 || BureauCode11 || BureauCode12 || BureauCode13 || BureauCode14 || BureauCode15 AS v_StatisticalCodes,\n\t-- *INF*: IIF(pol_sym =v_prev_row_pol_sym AND\r\n\t--        pol_num = v_prev_row_pol_num AND\r\n\t--        pol_mod = v_prev_row_pol_mod AND\r\n\t--        PMSFunctionCode = v_prev_row_PMSFunctionCode AND\r\n\t--        InsuranceLine = v_prev_row_InsuranceLine AND\r\n\t--        LocationUnitNumber = v_prev_row_LocationUnitNumber  AND\r\n\t--        SubLocationUnitNumber= v_prev_row_SubLocationUnitNumber  AND\r\n\t--        RiskUnitGroup = v_prev_row_RiskUnitGroup AND\r\n\t--        RiskUnitGroupSequenceNumber  = v_prev_row_RiskUnitGroupSequenceNumber AND\t \r\n\t--        RiskUnit = v_prev_row_RiskUnit  AND\r\n\t--        RiskUnitSequenceNumber = v_prev_row_RiskUnitSequenceNumber  AND\r\n\t--        PMSTypeExposure = v_prev_row_PMSTypeExposure AND\r\n\t--        MajorPerilCode = v_prev_row_MajorPerilCode  AND\r\n\t--        MajorPerilSequenceNumber = v_prev_row_MajorPerilSequenceNumber        \r\n\t--        ,'PRIOR_TRANS_FOUND','NOPRIOR_TRANS')\r\n\t-- \r\n\t-- -- SEE COMMENTS\n\tIFF(pol_sym = v_prev_row_pol_sym AND pol_num = v_prev_row_pol_num AND pol_mod = v_prev_row_pol_mod AND PMSFunctionCode = v_prev_row_PMSFunctionCode AND InsuranceLine = v_prev_row_InsuranceLine AND LocationUnitNumber = v_prev_row_LocationUnitNumber AND SubLocationUnitNumber = v_prev_row_SubLocationUnitNumber AND RiskUnitGroup = v_prev_row_RiskUnitGroup AND RiskUnitGroupSequenceNumber = v_prev_row_RiskUnitGroupSequenceNumber AND RiskUnit = v_prev_row_RiskUnit AND RiskUnitSequenceNumber = v_prev_row_RiskUnitSequenceNumber AND PMSTypeExposure = v_prev_row_PMSTypeExposure AND MajorPerilCode = v_prev_row_MajorPerilCode AND MajorPerilSequenceNumber = v_prev_row_MajorPerilSequenceNumber, 'PRIOR_TRANS_FOUND', 'NOPRIOR_TRANS') AS v_Prior_Transaction_Found,\n\tv_Prior_Transaction_Found AS Prior_Transaction_Found,\n\t-- *INF*: SUBSTR(TO_CHAR((ADD_TO_DATE(SYSTIMESTAMP(),'MM',@{pipeline().parameters.NO_OF_MONTHS})),'YYYYMMDD'),1,6)\r\n\t-- \r\n\t-- -- determines account date per closeout month from parametrized number of months subtracted from system date\n\tSUBSTR(TO_CHAR(( ADD_TO_DATE(SYSTIMESTAMP(), 'MM', @{pipeline().parameters.NO_OF_MONTHS}) ), 'YYYYMMDD'), 1, 6) AS v_Account_Date,\n\t-- *INF*: IIF(substr(TO_CHAR(PremiumTransactionBookedDate, 'YYYYMMDD'),1,6) = v_Account_Date,'VALID','INVALID')\r\n\t-- \r\n\t-- -- flags direct premium transactions as ineligible for being written out if not booked in closeout month\n\tIFF(substr(TO_CHAR(PremiumTransactionBookedDate, 'YYYYMMDD'), 1, 6) = v_Account_Date, 'VALID', 'INVALID') AS v_Valid_Record_Generation,\n\t-- *INF*: ROUND(\r\n\t-- DATE_DIFF(PremiumTransactionEffectiveDate,PremiumTransactionExpirationDate,'D')/DATE_DIFF(pol_eff_date,pol_exp_date,'D'),4)\n\tROUND(DATE_DIFF(PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, 'D') / DATE_DIFF(pol_eff_date, pol_exp_date, 'D'), 4) AS v_Pro_Rata_Factor,\n\t-- *INF*: IIF(v_Prior_Transaction_Found = 'NOPRIOR_TRANS',0.0,\r\n\t--                (v_Accum_Total_Original_Premium + v_prev_row_FullTermPremium))\r\n\t-- -------\r\n\t-- --IIF(v_Prior_Transaction_Found = 'NOPRIOR_TRANS',0.0,\r\n\t--    ---         IIF(sar_exposure <> v_prev_row_sar_exposure or sar_premium < 0.0, v_prev_accum_original_premium,\r\n\t-- ---(v_accum_Total_Original_Premium + v_prev_row_sar_original_prem)))\r\n\t-- ------\r\n\t-- --IIF(v_Prior_Transaction_Found = 'NOPRIOR_TRANS',0.0,\r\n\t--    ---            IIF(sar_premium < 0.0, v_prev_accum_original_premium,(v_accum_Total_Original_Premium + v_prev_row_sar_original_prem)))\n\tIFF(v_Prior_Transaction_Found = 'NOPRIOR_TRANS', 0.0, ( v_Accum_Total_Original_Premium + v_prev_row_FullTermPremium )) AS v_Total_Original_Premium,\n\t-- *INF*: IIF(v_Prior_Transaction_Found = 'PRIOR_TRANS_FOUND',v_Total_Original_Premium,0.0)\r\n\t-- \r\n\t-- \r\n\t-- --'PRIOR_TRANS_FOUND','NOPRIOR_TRANS'\n\tIFF(v_Prior_Transaction_Found = 'PRIOR_TRANS_FOUND', v_Total_Original_Premium, 0.0) AS v_Accum_Total_Original_Premium,\n\t-- *INF*: ROUND(((-1) *  v_Total_Original_Premium * v_Pro_Rata_Factor),4)\n\tROUND(( ( - 1 ) * v_Total_Original_Premium * v_Pro_Rata_Factor ), 4) AS v_Offset_Premium,\n\tv_Offset_Premium AS Offset_Premium,\n\t-- *INF*: ROUND(((-1) * v_Total_Original_Premium),4)\n\tROUND(( ( - 1 ) * v_Total_Original_Premium ), 4) AS v_Offset_Original_Premium,\n\tv_Offset_Original_Premium AS Offset_Original_Premium,\n\t-- *INF*: ROUND((PremiumTransactionAmount - v_Offset_Premium),4)\n\tROUND(( PremiumTransactionAmount - v_Offset_Premium ), 4) AS v_Onset_Premium,\n\tv_Onset_Premium AS Onset_Premium,\n\t-- *INF*: ROUND((FullTermPremium - v_Offset_Original_Premium) ,4) \n\tROUND(( FullTermPremium - v_Offset_Original_Premium ), 4) AS v_Onset_Original_Premium,\n\tv_Onset_Original_Premium AS Onset_Original_Premium,\n\t-- *INF*: (-1) * v_prev_row_Exposure\n\t( - 1 ) * v_prev_row_Exposure AS Offset_Exposure,\n\tExposure AS Onset_Exposure,\n\t-- *INF*: (-1) * v_prev_row_WrittenExposure\n\t( - 1 ) * v_prev_row_WrittenExposure AS Offset_WrittenExposure,\n\tWrittenExposure AS Onset_WrittenExposure,\n\t-- *INF*: IIF(RTRIM(PremiumTransactionCode)='12','12','22')\n\tIFF(RTRIM(PremiumTransactionCode) = '12', '12', '22') AS Onset_Transaction_Code,\n\t-- *INF*: IIF(RTRIM(PremiumTransactionCode)='12','22','12')\n\tIFF(RTRIM(PremiumTransactionCode) = '12', '22', '12') AS Offset_Transaction_Code,\n\tv_offset_RiskLocationAKID AS Offset_RiskLocationAKID,\n\tv_offset_StatisticalCodes AS Offset_StatisticalCodes,\n\tv_offset_BureauStatisticalUserLine AS Offset_BureauStatisticalUserLine,\n\tv_offset_ReasonAmendedCode AS Offset_ReasonAmendedCode,\n\tv_offset_PremiumTransactionExpirationDate AS Offset_PremiumTransactionExpirationDate,\n\tv_offset_AgencyActualCommissionRate AS Offset_AgencyActualCommissionRate,\n\tv_offset_SublineCode AS Offset_SublineCode,\n\tv_offset_ClassCode AS Offset_ClassCode,\n\tv_offset_StatisticalCoverageAKID AS Offset_StatisticalCoverageAKID,\n\tv_offset_PremiumTransactionAKID AS Offset_PremiumTransactionAKID,\n\t-- *INF*: IIF(IN(RTRIM(PremiumTransactionCode),'12','13','22','28'),'VALID_TRANS_CODES','INVALID_TRANS_CODES')\n\tIFF(IN(RTRIM(PremiumTransactionCode), '12', '13', '22', '28'), 'VALID_TRANS_CODES', 'INVALID_TRANS_CODES') AS v_valid_transaction_codes,\n\t-- *INF*: IIF(v_Valid_Record_Generation ='VALID',\r\n\t--             IIF(v_valid_transaction_codes ='VALID_TRANS_CODES' AND v_Prior_Transaction_Found ='PRIOR_TRANS_FOUND' AND NOT IN(pms_pol_lob_code,'WC' ,'WCP'),\r\n\t--                                     IIF(v_Onset_Original_Premium = 0.00,'GENERATE_PREMIUM','ONSET_OFFSET'),'GENERATE_PREMIUM'),'NOGENERATION')\r\n\t-- \n\tIFF(v_Valid_Record_Generation = 'VALID', IFF(v_valid_transaction_codes = 'VALID_TRANS_CODES' AND v_Prior_Transaction_Found = 'PRIOR_TRANS_FOUND' AND NOT IN(pms_pol_lob_code, 'WC', 'WCP'), IFF(v_Onset_Original_Premium = 0.00, 'GENERATE_PREMIUM', 'ONSET_OFFSET'), 'GENERATE_PREMIUM'), 'NOGENERATION') AS v_status,\n\tv_status AS Status,\n\tpol_sym AS v_prev_row_pol_sym,\n\tpol_num AS v_prev_row_pol_num,\n\tpol_mod AS v_prev_row_pol_mod,\n\tPMSFunctionCode AS v_prev_row_PMSFunctionCode,\n\tInsuranceLine AS v_prev_row_InsuranceLine,\n\tLocationUnitNumber AS v_prev_row_LocationUnitNumber,\n\tSubLocationUnitNumber AS v_prev_row_SubLocationUnitNumber,\n\tRiskUnitGroup AS v_prev_row_RiskUnitGroup,\n\tRiskUnitGroupSequenceNumber AS v_prev_row_RiskUnitGroupSequenceNumber,\n\tRiskUnit AS v_prev_row_RiskUnit,\n\tRiskUnitSequenceNumber AS v_prev_row_RiskUnitSequenceNumber,\n\tPMSTypeExposure AS v_prev_row_PMSTypeExposure,\n\tMajorPerilCode AS v_prev_row_MajorPerilCode,\n\tMajorPerilSequenceNumber AS v_prev_row_MajorPerilSequenceNumber,\n\tPremiumTransactionAmount AS v_prev_row_PremiumTransactionAmount,\n\tFullTermPremium AS v_prev_row_FullTermPremium,\n\tv_prev_row_Exposure AS v_offset_Exposure,\n\tExposure AS v_prev_row_Exposure,\n\tWrittenExposure AS v_prev_row_WrittenExposure,\n\tv_prev_row_BureauStatisticalUserLine AS v_offset_BureauStatisticalUserLine,\n\tBureauStatisticalUserLine AS v_prev_row_BureauStatisticalUserLine,\n\tv_prev_row_RiskLocationAKID AS v_offset_RiskLocationAKID,\n\tRiskLocationAKID AS v_prev_row_RiskLocationAKID,\n\tv_prev_row_ReasonAmendedCode AS v_offset_ReasonAmendedCode,\n\tReasonAmendedCode AS v_prev_row_ReasonAmendedCode,\n\tv_prev_row_PremiumTransactionExpirationDate AS v_offset_PremiumTransactionExpirationDate,\n\tPremiumTransactionExpirationDate AS v_prev_row_PremiumTransactionExpirationDate,\n\tv_prev_row_AgencyActualCommissionRate AS v_offset_AgencyActualCommissionRate,\n\tAgencyActualCommissionRate AS v_prev_row_AgencyActualCommissionRate,\n\tv_prev_row_SublineCode AS v_offset_SublineCode,\n\tSublineCode AS v_prev_row_SublineCode,\n\tv_prev_row_ClassCode AS v_offset_ClassCode,\n\tClassCode AS v_prev_row_ClassCode,\n\tv_prev_row_StatisticalCodes AS v_offset_StatisticalCodes,\n\tv_StatisticalCodes AS v_prev_row_StatisticalCodes,\n\tv_prev_row_StatisticalCoverageAKID AS v_offset_StatisticalCoverageAKID,\n\tStatisticalCoverageAKID AS v_prev_row_StatisticalCoverageAKID,\n\tv_StatisticalCodes AS StatisticalCodes,\n\t-- *INF*: IIF(RatingDateIndicator='C',StatisticalCoverageEffectiveDate,pol_eff_date)\n\tIFF(RatingDateIndicator = 'C', StatisticalCoverageEffectiveDate, pol_eff_date) AS v_inc_date,\n\t-- *INF*: DECODE(TRUE,IN( RTRIM(PremiumTransactionCode),'83','84'),PremiumTransactionEffectiveDate,v_inc_date)\n\tDECODE(TRUE,\n\tIN(RTRIM(PremiumTransactionCode), '83', '84'), PremiumTransactionEffectiveDate,\n\tv_inc_date) AS PremiumMasterBureauInceptionDate,\n\t-- *INF*: rtrim(addr_line_1)\n\trtrim(addr_line_1) AS PremiumMasterRiskAddress,\n\t-- *INF*: rtrim(city_name) || ', ' || rtrim(state_prov_code)\n\trtrim(city_name) || ', ' || rtrim(state_prov_code) AS PremiumMasterRiskCityState,\n\tAuditReinstatementIndicator,\n\t-- *INF*: IIF(RTRIM(PremiumTransactionCode) = '15' AND RTRIM(AuditReinstatementIndicator) = 'R','R',' ')\n\tIFF(RTRIM(PremiumTransactionCode) = '15' AND RTRIM(AuditReinstatementIndicator) = 'R', 'R', ' ') AS PremiumMasterRenewalIndicator,\n\tpol_audit_frqncy,\n\tpol_term,\n\tv_prev_row_PremiumTransactionAKID AS v_offset_PremiumTransactionAKID,\n\tPremiumTransactionAKID AS v_prev_row_PremiumTransactionAKID,\n\t1 AS o_PremiumMasterCustomerCareCommissionRate,\n\tDeclaredEventsFlag\n\tFROM EXP_DirectTransactions\n),\nFIL_No_Generate AS (\n\tSELECT\n\tagency_ak_id AS AgencyAKID, \n\tpol_ak_id AS PolicyAKID, \n\tcontract_cust_ak_id AS ContractCustomerAKID, \n\tRiskLocationAKID, \n\tOffset_RiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionAKID, \n\tBureauStatisticalCodeAKID, \n\tReinsuranceCoverageAKID, \n\tpol_sym, \n\tpol_num, \n\tpol_mod, \n\tpol_key, \n\tpol_eff_date, \n\tpol_exp_date, \n\tpms_pol_lob_code, \n\tpol_issue_code, \n\tLocationUnitNumber, \n\tLocationIndicator, \n\tInsuranceLine, \n\tTypeBureauCode, \n\tPolicyCoverageEffectiveDate, \n\tPolicyCoverageExpirationDate, \n\tSubLocationUnitNumber, \n\tRiskUnitGroup, \n\tRiskUnitGroupSequenceNumber, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tMajorPerilSequenceNumber, \n\tSublineCode, \n\tPMSTypeExposure, \n\tClassCode, \n\tExposure, \n\tWrittenExposure, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tAgencyActualCommissionRate, \n\tReinsuranceSectionCode, \n\tPremiumLoadSequence, \n\tPMSFunctionCode, \n\tPremiumTransactionCode, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tReasonAmendedCode, \n\tBureauSpecialUseCode, \n\tPMSAnnualStatementLine, \n\tRatingDateIndicator, \n\tBureauStatisticalUserLine, \n\tPrior_Transaction_Found, \n\tOffset_Premium, \n\tOffset_Original_Premium, \n\tOnset_Premium, \n\tOnset_Original_Premium, \n\tOffset_Exposure, \n\tOnset_Exposure, \n\tOffset_WrittenExposure, \n\tOnset_WrittenExposure, \n\tOnset_Transaction_Code, \n\tOffset_Transaction_Code, \n\tOffset_StatisticalCodes, \n\tOffset_BureauStatisticalUserLine, \n\tOffset_ReasonAmendedCode, \n\tOffset_PremiumTransactionExpirationDate, \n\tOffset_AgencyActualCommissionRate, \n\tOffset_SublineCode, \n\tOffset_ClassCode, \n\tOffset_StatisticalCoverageAKID, \n\tOffset_PremiumTransactionAKID, \n\tStatus, \n\tStatisticalCodes, \n\tPremiumMasterBureauInceptionDate, \n\tPremiumMasterRiskAddress, \n\tPremiumMasterRiskCityState, \n\tPremiumMasterRenewalIndicator, \n\tpol_audit_frqncy, \n\tpol_term, \n\to_PremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate, \n\tDeclaredEventsFlag\n\tFROM EXP_Evaluate_fields_for_OnsetOffset\n\tWHERE Status <> 'NOGENERATION'\n),\nRTR_Onset_Offset_Direct_Part1Ceded AS (\n\tSELECT\n\tAgencyAKID,\n\tPolicyAKID,\n\tContractCustomerAKID,\n\tRiskLocationAKID,\n\tOffset_RiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tReinsuranceCoverageAKID,\n\tPremiumTransactionAKID,\n\tBureauStatisticalCodeAKID,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpms_pol_lob_code,\n\tpol_issue_code,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tInsuranceLine,\n\tTypeBureauCode,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tSublineCode,\n\tPMSTypeExposure,\n\tClassCode,\n\tExposure,\n\tWrittenExposure,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tAgencyActualCommissionRate,\n\tReinsuranceSectionCode,\n\tPremiumLoadSequence,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tBureauSpecialUseCode,\n\tPMSAnnualStatementLine,\n\tRatingDateIndicator,\n\tPrior_Transaction_Found,\n\tBureauStatisticalUserLine,\n\tOffset_Premium,\n\tOffset_Original_Premium,\n\tOnset_Premium,\n\tOnset_Original_Premium,\n\tOffset_Exposure,\n\tOnset_Exposure,\n\tOffset_WrittenExposure,\n\tOnset_WrittenExposure,\n\tOnset_Transaction_Code,\n\tOffset_Transaction_Code,\n\tOffset_StatisticalCodes,\n\tOffset_BureauStatisticalUserLine,\n\tOffset_ReasonAmendedCode,\n\tOffset_PremiumTransactionExpirationDate,\n\tOffset_AgencyActualCommissionRate,\n\tOffset_SublineCode,\n\tOffset_ClassCode,\n\tOffset_StatisticalCoverageAKID,\n\tOffset_PremiumTransactionAKID,\n\tStatus,\n\tStatisticalCodes,\n\tPremiumMasterBureauInceptionDate,\n\tPremiumMasterRiskAddress,\n\tPremiumMasterRiskCityState,\n\tPremiumMasterRenewalIndicator,\n\tpol_audit_frqncy,\n\tpol_term,\n\tPremiumMasterCustomerCareCommissionRate,\n\tDeclaredEventsFlag\n\tFROM FIL_No_Generate\n),\nRTR_Onset_Offset_Direct_Part1Ceded_ONSET AS (SELECT * FROM RTR_Onset_Offset_Direct_Part1Ceded WHERE Status ='ONSET_OFFSET' and Prior_Transaction_Found = 'PRIOR_TRANS_FOUND'),\nRTR_Onset_Offset_Direct_Part1Ceded_REINSURANCE AS (SELECT * FROM RTR_Onset_Offset_Direct_Part1Ceded WHERE IIF(IN(Status,'ONSET_OFFSET','GENERATE_PREMIUM')  ,TRUE,FALSE)),\nRTR_Onset_Offset_Direct_Part1Ceded_OFFSET AS (SELECT * FROM RTR_Onset_Offset_Direct_Part1Ceded WHERE Status ='ONSET_OFFSET' and Prior_Transaction_Found = 'PRIOR_TRANS_FOUND'),\nRTR_Onset_Offset_Direct_Part1Ceded_PREMIUMMASTER AS (SELECT * FROM RTR_Onset_Offset_Direct_Part1Ceded WHERE Status = 'GENERATE_PREMIUM'\r\n--(Status = 'GENERATE_PREMIUM' and Prior_Transaction_Found = 'NOPRIOR_TRANS')\r\n--OR \r\n--(Prior_Transaction_Found = 'NOPRIOR_TRANS')),\nEXP_generate_PremiumMasterRecord AS (\n\tSELECT\n\t'PMS' AS o_SourceSystemID,\n\tAgencyAKID AS AgencyAKID5,\n\tPolicyAKID AS PolicyAKID5,\n\tContractCustomerAKID AS ContractCustomerAKID5,\n\tRiskLocationAKID AS RiskLocationAKID5,\n\tPolicyCoverageAKID AS PolicyCoverageAKID5,\n\tStatisticalCoverageAKID AS StatisticalCoverageAKID5,\n\tReinsuranceCoverageAKID AS ReinsuranceCoverageAKID5,\n\tPremiumTransactionAKID AS PremiumTransactionAKID5,\n\tBureauStatisticalCodeAKID AS BureauStatisticalCodeAKID5,\n\tpol_sym AS pol_sym5,\n\tpol_num AS pol_num5,\n\tpol_mod AS pol_mod5,\n\tpol_key AS pol_key5,\n\tpol_eff_date AS pol_eff_date5,\n\tpol_exp_date AS pol_exp_date5,\n\tpms_pol_lob_code AS pms_pol_lob_code5,\n\tpol_issue_code AS pol_issue_code5,\n\tLocationUnitNumber AS LocationUnitNumber5,\n\tLocationIndicator AS LocationIndicator5,\n\tInsuranceLine AS InsuranceLine5,\n\tTypeBureauCode AS TypeBureauCode5,\n\tPolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate5,\n\tPolicyCoverageExpirationDate AS PolicyCoverageExpirationDate5,\n\tSubLocationUnitNumber AS SubLocationUnitNumber5,\n\tRiskUnitGroup AS RiskUnitGroup5,\n\tRiskUnitGroupSequenceNumber AS RiskUnitGroupSequenceNumber5,\n\tRiskUnit AS RiskUnit5,\n\tRiskUnitSequenceNumber AS RiskUnitSequenceNumber5,\n\tMajorPerilCode AS MajorPerilCode5,\n\tMajorPerilSequenceNumber AS MajorPerilSequenceNumber5,\n\tSublineCode AS SublineCode5,\n\tPMSTypeExposure AS PMSTypeExposure5,\n\tStatisticalCoverageEffectiveDate AS StatisticalCoverageEffectiveDate5,\n\tStatisticalCoverageExpirationDate AS StatisticalCoverageExpirationDate5,\n\tPremiumLoadSequence AS PremiumLoadSequence5,\n\tPMSFunctionCode AS PMSFunctionCode5,\n\tPremiumTransactionCode AS PremiumTransactionCode5,\n\tPremiumTransactionEnteredDate AS PremiumTransactionEnteredDate5,\n\tPremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate5,\n\tClassCode AS ClassCode5,\n\tPremiumTransactionExpirationDate AS PremiumTransactionExpirationDate5,\n\tPremiumTransactionBookedDate AS PremiumTransactionBookedDate5,\n\tReasonAmendedCode AS ReasonAmendedCode5,\n\tBureauSpecialUseCode AS BureauSpecialUseCode5,\n\tPremiumType AS PremiumType5,\n\tPMSAnnualStatementLine AS PMSAnnualStatementLine5,\n\tAgencyActualCommissionRate AS AgencyActualCommissionRate5,\n\tExposure AS Exposure5,\n\tRatingDateIndicator AS RatingDateIndicator5,\n\tBureauStatisticalUserLine AS BureauStatisticalUserLine5,\n\tStatisticalCodes AS StatisticalCodes5,\n\tPremiumTransactionAmount AS PremiumTransactionAmount5,\n\tFullTermPremium AS FullTermPremium5,\n\tPremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate5,\n\tPremiumMasterRiskAddress AS PremiumMasterRiskAddress5,\n\tPremiumMasterRiskCityState AS PremiumMasterRiskCityState5,\n\tPremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator5,\n\tStatus AS Status5,\n\t'DIRECT' AS PremiumMasterStatus5,\n\tpol_audit_frqncy AS pol_audit_frqncy5,\n\tpol_term AS pol_term5,\n\t-1 AS o_RatingCoverageAKId,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageExpirationDate,\n\tPremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate5,\n\tWrittenExposure AS WrittenExposure5,\n\tDeclaredEventsFlag AS DeclaredEventsFlag5\n\tFROM RTR_Onset_Offset_Direct_Part1Ceded_PREMIUMMASTER\n),\nEXP_generate_offset AS (\n\tSELECT\n\t'PMS' AS o_SourceSystemID,\n\tAgencyAKID AS AgencyAKID4,\n\tPolicyAKID AS PolicyAKID4,\n\tContractCustomerAKID AS ContractCustomerAKID4,\n\tOffset_RiskLocationAKID AS RiskLocationAKID4,\n\tPolicyCoverageAKID AS PolicyCoverageAKID4,\n\tOffset_StatisticalCoverageAKID AS StatisticalCoverageAKID4,\n\tReinsuranceCoverageAKID AS ReinsuranceCoverageAKID4,\n\tPremiumTransactionAKID AS PremiumTransactionAKID4,\n\tBureauStatisticalCodeAKID AS BureauStatisticalCodeAKID4,\n\tpol_sym AS pol_sym4,\n\tpol_num AS pol_num4,\n\tpol_mod AS pol_mod4,\n\tpol_key AS pol_key4,\n\tpol_eff_date AS pol_eff_date4,\n\tpol_exp_date AS pol_exp_date4,\n\tpms_pol_lob_code AS pms_pol_lob_code4,\n\tpol_issue_code AS pol_issue_code4,\n\tLocationUnitNumber AS LocationUnitNumber4,\n\tLocationIndicator AS LocationIndicator4,\n\tInsuranceLine AS InsuranceLine4,\n\tTypeBureauCode AS TypeBureauCode4,\n\tPolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate4,\n\tPolicyCoverageExpirationDate AS PolicyCoverageExpirationDate4,\n\tSubLocationUnitNumber AS SubLocationUnitNumber4,\n\tRiskUnitGroup AS RiskUnitGroup4,\n\tRiskUnitGroupSequenceNumber AS RiskUnitGroupSequenceNumber4,\n\tRiskUnit AS RiskUnit4,\n\tRiskUnitSequenceNumber AS RiskUnitSequenceNumber4,\n\tMajorPerilCode AS MajorPerilCode4,\n\tMajorPerilSequenceNumber AS MajorPerilSequenceNumber4,\n\tExposure AS Exposure4,\n\tStatisticalCoverageEffectiveDate AS StatisticalCoverageEffectiveDate4,\n\tStatisticalCoverageExpirationDate AS StatisticalCoverageExpirationDate4,\n\tOffset_Premium AS Offset_Premium4,\n\tOffset_Original_Premium AS Offset_Original_Premium4,\n\tOffset_Exposure AS Offset_Exposure4,\n\tOffset_Transaction_Code AS Offset_Transaction_Code4,\n\tOffset_StatisticalCodes AS Offset_StatisticalCodes4,\n\tOffset_BureauStatisticalUserLine AS Offset_BureauStatisticalUserLine4,\n\tOffset_StateProvinceCode AS Offset_StateProvinceCode4,\n\tOffset_ReasonAmendedCode AS Offset_ReasonAmendedCode4,\n\tOffset_PremiumTransactionExpirationDate AS Offset_PremiumTransactionExpirationDate4,\n\tOffset_AgencyActualCommissionRate AS Offset_AgencyActualCommissionRate4,\n\tOffset_SublineCode AS Offset_SublineCode4,\n\tOffset_ClassCode AS Offset_ClassCode4,\n\tOffset_PremiumTransactionAKID,\n\tStatus AS Status4,\n\t'OFFSET' AS PremiumMasterStatus4,\n\tPremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate4,\n\tPremiumMasterRiskAddress AS PremiumMasterRiskAddress4,\n\tPremiumMasterRiskCityState AS PremiumMasterRiskCityState4,\n\tPremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator4,\n\tSublineCode AS SublineCode4,\n\tReasonAmendedCode AS ReasonAmendedCode4,\n\tBureauSpecialUseCode AS BureauSpecialUseCode4,\n\tPMSAnnualStatementLine AS PMSAnnualStatementLine4,\n\tPremiumType AS PremiumType4,\n\tRatingDateIndicator AS RatingDateIndicator4,\n\tPremiumTransactionBookedDate AS PremiumTransactionBookedDate4,\n\tPremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate4,\n\tPremiumTransactionEnteredDate AS PremiumTransactionEnteredDate4,\n\tPMSFunctionCode AS PMSFunctionCode4,\n\tPremiumLoadSequence AS PremiumLoadSequence4,\n\tPMSTypeExposure AS PMSTypeExposure4,\n\tpol_audit_frqncy AS pol_audit_frqncy4,\n\tpol_term AS pol_term4,\n\t-1 AS o_RatingCoverageAKId,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageExpirationDate,\n\tPremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate4,\n\tOffset_WrittenExposure AS Offset_WrittenExposure4,\n\tDeclaredEventsFlag AS DeclaredEventsFlag4\n\tFROM RTR_Onset_Offset_Direct_Part1Ceded_OFFSET\n),\nEXP_generate_onset AS (\n\tSELECT\n\t'PMS' AS o_SourceSystemID,\n\tAgencyAKID AS AgencyAKID1,\n\tPolicyAKID AS PolicyAKID1,\n\tContractCustomerAKID AS ContractCustomerAKID1,\n\tRiskLocationAKID AS RiskLocationAKID1,\n\tPolicyCoverageAKID AS PolicyCoverageAKID1,\n\tStatisticalCoverageAKID AS StatisticalCoverageAKID1,\n\tReinsuranceCoverageAKID AS ReinsuranceCoverageAKID1,\n\tPremiumTransactionAKID AS PremiumTransactionAKID1,\n\tBureauStatisticalCodeAKID AS BureauStatisticalCodeAKID1,\n\tpol_sym AS pol_sym1,\n\tpol_num AS pol_num1,\n\tpol_mod AS pol_mod1,\n\tpol_key AS pol_key1,\n\tpol_eff_date AS pol_eff_date1,\n\tpol_exp_date AS pol_exp_date1,\n\tpms_pol_lob_code AS pms_pol_lob_code1,\n\tpol_issue_code AS pol_issue_code1,\n\tLocationUnitNumber AS LocationUnitNumber1,\n\tLocationIndicator AS LocationIndicator1,\n\tInsuranceLine AS InsuranceLine1,\n\tTypeBureauCode AS TypeBureauCode1,\n\tPolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate1,\n\tPolicyCoverageExpirationDate AS PolicyCoverageExpirationDate1,\n\tSubLocationUnitNumber AS SubLocationUnitNumber1,\n\tRiskUnitGroup AS RiskUnitGroup1,\n\tRiskUnitGroupSequenceNumber AS RiskUnitGroupSequenceNumber1,\n\tRiskUnit AS RiskUnit1,\n\tRiskUnitSequenceNumber AS RiskUnitSequenceNumber1,\n\tMajorPerilCode AS MajorPerilCode1,\n\tMajorPerilSequenceNumber AS MajorPerilSequenceNumber1,\n\tSublineCode AS SublineCode1,\n\tPMSTypeExposure AS PMSTypeExposure1,\n\tClassCode AS ClassCode1,\n\tStatisticalCoverageEffectiveDate AS StatisticalCoverageEffectiveDate1,\n\tStatisticalCoverageExpirationDate AS StatisticalCoverageExpirationDate1,\n\tAgencyActualCommissionRate AS AgencyActualCommissionRate1,\n\tPremiumLoadSequence AS PremiumLoadSequence1,\n\tPMSFunctionCode AS PMSFunctionCode1,\n\tPremiumTransactionEnteredDate AS PremiumTransactionEnteredDate1,\n\tPremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate1,\n\tPremiumTransactionExpirationDate AS PremiumTransactionExpirationDate1,\n\tPremiumTransactionBookedDate AS PremiumTransactionBookedDate1,\n\tPremiumType AS PremiumType1,\n\tReasonAmendedCode AS ReasonAmendedCode1,\n\tBureauSpecialUseCode AS BureauSpecialUseCode1,\n\tPMSAnnualStatementLine AS PMSAnnualStatementLine1,\n\tRatingDateIndicator AS RatingDateIndicator1,\n\tBureauStatisticalUserLine AS BureauStatisticalUserLine1,\n\tOnset_Premium AS Onset_Premium1,\n\tOnset_Original_Premium AS Onset_Original_Premium1,\n\tOnset_Exposure AS Onset_Exposure1,\n\tOnset_Transaction_Code AS Onset_Transaction_Code1,\n\tStatus AS Status1,\n\t'ONSET' AS PremiumMasterStatus1,\n\tStatisticalCodes AS StatisticalCodes1,\n\tPremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate1,\n\tPremiumMasterRiskAddress AS PremiumMasterRiskAddress1,\n\tPremiumMasterRiskCityState AS PremiumMasterRiskCityState1,\n\tPremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator1,\n\tpol_audit_frqncy AS pol_audit_frqncy1,\n\tpol_term AS pol_term1,\n\t-1 AS o_RatingCoverageAKId,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageExpirationDate,\n\tPremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate1,\n\tOnset_WrittenExposure AS Onset_WrittenExposure1,\n\tDeclaredEventsFlag AS DeclaredEventsFlag1\n\tFROM RTR_Onset_Offset_Direct_Part1Ceded_ONSET\n),\nSQ_reinsurance_coverage AS (\n\tSELECT REINCOV.reins_cov_ak_id, REINCOV.pol_ak_id, REINCOV.reins_ins_line, REINCOV.reins_loc_unit_num, REINCOV.reins_sub_loc_unit_num, REINCOV.reins_risk_unit_grp, REINCOV.reins_risk_unit_grp_seq_num, REINCOV.reins_risk_unit, REINCOV.reins_risk_unit_seq_num, REINCOV.reins_section_code, REINCOV.reins_eff_date, REINCOV.reins_exp_date, REINCOV.reins_prcnt_prem_ceded, REINCOV.reins_prcnt_facultative_commssn \r\n\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}. reinsurance_coverage REINCOV\r\n\tWHERE EXISTS\r\n\t\t(SELECT DISTINCT POL1.pol_key\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation LOC1  with (nolock), \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL1  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage POLCOV1  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage STATCOV1  with (nolock),\r\n\t    \t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT1 with (nolock)\r\n\t\tWHERE\t\r\n\t\tLOC1.PolicyAKID = POL1.pol_ak_id\r\n\t\tAND LOC1.RiskLocationAKID = POLCOV1.RiskLocationAKID\r\n\t\tAND POLCOV1.PolicyCoverageAKID = STATCOV1.PolicyCoverageAKID\r\n\t    \tAND STATCOV1.StatisticalCoverageAKID = PT1.StatisticalCoverageAKID\r\n\t\tAND POL1.crrnt_snpsht_flag = 1 \r\n\t\tAND LOC1.CurrentSnapshotFlag =1\r\n\t\tAND STATCOV1.CurrentSnapshotFlag =1 \r\n\t\tAND POLCOV1.CurrentSnapshotFlag =1 \r\n\t\tAND PT1.CurrentSnapshotFlag =1 \r\n\t\tAND POL1.source_sys_id = 'PMS' \r\n\t\tAND LOC1.SourceSystemID='PMS'\r\n\t\tAND STATCOV1.SourceSystemID='PMS' \r\n\t\tAND POLCOV1.SourceSystemID='PMS' \r\n\t\tAND PT1.SourceSystemID='PMS'\r\n\t\tAND datepart(MM,PremiumTransactionBookedDate)=datepart(MM,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE()))) \r\n\t\tAND datepart(YYYY,PremiumTransactionBookedDate)=datepart(YYYY,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE())))\r\n\t    \tAND PT1.PremiumType = 'D'\r\n\t    \tAND POL.pol_key = POL1.pol_key)\r\n\t    \tAND REINCOV.pol_ak_id = POL.pol_ak_id\r\n\t\tAND POL.crrnt_snpsht_flag = 1 \r\n\t\tAND REINCOV.crrnt_snpsht_flag = 1\r\n\t\tAND POL.source_sys_id = 'PMS' \r\n\t\tAND REINCOV.source_sys_id = 'PMS'\n),\nEXP_ReinsCov_Prejoin_ops AS (\n\tSELECT\n\treins_cov_ak_id,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\t-- *INF*: ltrim(rtrim(reins_section_code))\n\tltrim(rtrim(reins_section_code)) AS reins_section_code_out,\n\treins_eff_date,\n\treins_exp_date,\n\treins_prcnt_prem_ceded,\n\treins_prcnt_facultative_commssn\n\tFROM SQ_reinsurance_coverage\n),\nEXP_Reinsurance_PreJoin_ops AS (\n\tSELECT\n\tAgencyAKID AS AgencyAKID3,\n\tPolicyAKID AS PolicyAKID3,\n\tContractCustomerAKID AS ContractCustomerAKID3,\n\tRiskLocationAKID AS RiskLocationAKID3,\n\tPolicyCoverageAKID AS PolicyCoverageAKID3,\n\tStatisticalCoverageAKID AS StatisticalCoverageAKID3,\n\tReinsuranceCoverageAKID AS ReinsuranceCoverageAKID3,\n\tPremiumTransactionAKID AS PremiumTransactionAKID3,\n\tBureauStatisticalCodeAKID AS BureauStatisticalCodeAKID3,\n\tpol_sym AS pol_sym3,\n\tpol_num AS pol_num3,\n\tpol_mod AS pol_mod3,\n\tpol_key AS pol_key3,\n\tpol_eff_date AS pol_eff_date3,\n\tpol_exp_date AS pol_exp_date3,\n\tpms_pol_lob_code AS pms_pol_lob_code3,\n\tpol_issue_code AS pol_issue_code3,\n\tLocationUnitNumber AS LocationUnitNumber3,\n\tLocationIndicator AS LocationIndicator3,\n\tInsuranceLine AS InsuranceLine3,\n\tTypeBureauCode AS TypeBureauCode3,\n\tPolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate3,\n\tPolicyCoverageExpirationDate AS PolicyCoverageExpirationDate3,\n\tSubLocationUnitNumber AS SubLocationUnitNumber3,\n\tRiskUnitGroup AS RiskUnitGroup3,\n\tRiskUnitGroupSequenceNumber AS RiskUnitGroupSequenceNumber3,\n\tRiskUnit AS RiskUnit3,\n\tRiskUnitSequenceNumber AS RiskUnitSequenceNumber3,\n\tMajorPerilCode AS MajorPerilCode3,\n\tMajorPerilSequenceNumber AS MajorPerilSequenceNumber3,\n\tSublineCode AS SublineCode3,\n\tPMSTypeExposure AS PMSTypeExposure3,\n\tClassCode AS ClassCode3,\n\tExposure AS Exposure3,\n\tStatisticalCoverageEffectiveDate AS StatisticalCoverageEffectiveDate3,\n\tStatisticalCoverageExpirationDate AS StatisticalCoverageExpirationDate3,\n\tAgencyActualCommissionRate AS AgencyActualCommissionRate3,\n\tReinsuranceSectionCode AS ReinsuranceSectionCode3,\n\t-- *INF*: LTRIM(RTRIM(ReinsuranceSectionCode3))\n\tLTRIM(RTRIM(ReinsuranceSectionCode3)) AS ReinsuranceSectionCode_Out,\n\tPremiumLoadSequence AS PremiumLoadSequence3,\n\tPMSFunctionCode AS PMSFunctionCode3,\n\tPremiumTransactionCode AS PremiumTransactionCode3,\n\tPremiumTransactionEnteredDate AS PremiumTransactionEnteredDate3,\n\tPremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate3,\n\tPremiumTransactionExpirationDate AS PremiumTransactionExpirationDate3,\n\tPremiumTransactionBookedDate AS PremiumTransactionBookedDate3,\n\tPremiumTransactionAmount AS PremiumTransactionAmount3,\n\tFullTermPremium AS FullTermPremium3,\n\tPremiumType AS PremiumType3,\n\tReasonAmendedCode AS ReasonAmendedCode3,\n\tBureauSpecialUseCode AS BureauSpecialUseCode3,\n\tPMSAnnualStatementLine AS PMSAnnualStatementLine3,\n\tRatingDateIndicator AS RatingDateIndicator3,\n\tPrior_Transaction_Found AS Prior_Transaction_Found3,\n\tBureauStatisticalUserLine AS BureauStatisticalUserLine3,\n\tOffset_Premium AS Offset_Premium3,\n\tOffset_Original_Premium AS Offset_Original_Premium3,\n\tOnset_Premium AS Onset_Premium3,\n\tOnset_Original_Premium AS Onset_Original_Premium3,\n\tOffset_Exposure AS Offset_Exposure3,\n\tOnset_Exposure AS Onset_Exposure3,\n\tOnset_Transaction_Code AS Onset_Transaction_Code3,\n\tOffset_Transaction_Code AS Offset_Transaction_Code3,\n\tOffset_StatisticalCodes AS Offset_StatisticalCodes3,\n\tOffset_BureauStatisticalUserLine AS Offset_BureauStatisticalUserLine3,\n\tOffset_ReasonAmendedCode AS Offset_ReasonAmendedCode3,\n\tOffset_PremiumTransactionExpirationDate AS Offset_PremiumTransactionExpirationDate3,\n\tOffset_AgencyActualCommissionRate AS Offset_AgencyActualCommissionRate3,\n\tOffset_SublineCode AS Offset_SublineCode3,\n\tOffset_ClassCode AS Offset_ClassCode3,\n\tStatus AS Status3,\n\tStatisticalCodes AS StatisticalCodes3,\n\tPremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate3,\n\tPremiumMasterRiskAddress AS PremiumMasterRiskAddress3,\n\tPremiumMasterRiskCityState AS PremiumMasterRiskCityState3,\n\tPremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator3,\n\tpol_audit_frqncy AS pol_audit_frqncy3,\n\tpol_term AS pol_term3,\n\tPremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate3,\n\tDeclaredEventsFlag AS DeclaredEventsFlag3\n\tFROM RTR_Onset_Offset_Direct_Part1Ceded_REINSURANCE\n),\nJNR_DirectPremiumTransaction_ReinsuranceCoverage AS (SELECT\n\tEXP_Reinsurance_PreJoin_ops.AgencyAKID3, \n\tEXP_Reinsurance_PreJoin_ops.PolicyAKID3, \n\tEXP_Reinsurance_PreJoin_ops.ContractCustomerAKID3, \n\tEXP_Reinsurance_PreJoin_ops.RiskLocationAKID3, \n\tEXP_Reinsurance_PreJoin_ops.PolicyCoverageAKID3, \n\tEXP_Reinsurance_PreJoin_ops.StatisticalCoverageAKID3, \n\tEXP_Reinsurance_PreJoin_ops.ReinsuranceCoverageAKID3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionAKID3, \n\tEXP_Reinsurance_PreJoin_ops.BureauStatisticalCodeAKID3, \n\tEXP_Reinsurance_PreJoin_ops.pol_sym3, \n\tEXP_Reinsurance_PreJoin_ops.pol_num3, \n\tEXP_Reinsurance_PreJoin_ops.pol_mod3, \n\tEXP_Reinsurance_PreJoin_ops.pol_key3, \n\tEXP_Reinsurance_PreJoin_ops.pol_eff_date3, \n\tEXP_Reinsurance_PreJoin_ops.pol_exp_date3, \n\tEXP_Reinsurance_PreJoin_ops.pms_pol_lob_code3, \n\tEXP_Reinsurance_PreJoin_ops.pol_term3, \n\tEXP_Reinsurance_PreJoin_ops.pol_issue_code3, \n\tEXP_Reinsurance_PreJoin_ops.LocationUnitNumber3, \n\tEXP_Reinsurance_PreJoin_ops.LocationIndicator3, \n\tEXP_Reinsurance_PreJoin_ops.InsuranceLine3, \n\tEXP_Reinsurance_PreJoin_ops.TypeBureauCode3, \n\tEXP_Reinsurance_PreJoin_ops.PolicyCoverageEffectiveDate3, \n\tEXP_Reinsurance_PreJoin_ops.PolicyCoverageExpirationDate3, \n\tEXP_Reinsurance_PreJoin_ops.SubLocationUnitNumber3, \n\tEXP_Reinsurance_PreJoin_ops.RiskUnitGroup3, \n\tEXP_Reinsurance_PreJoin_ops.RiskUnitGroupSequenceNumber3, \n\tEXP_Reinsurance_PreJoin_ops.RiskUnit3, \n\tEXP_Reinsurance_PreJoin_ops.RiskUnitSequenceNumber3, \n\tEXP_Reinsurance_PreJoin_ops.MajorPerilCode3, \n\tEXP_Reinsurance_PreJoin_ops.MajorPerilSequenceNumber3, \n\tEXP_Reinsurance_PreJoin_ops.SublineCode3, \n\tEXP_Reinsurance_PreJoin_ops.PMSTypeExposure3, \n\tEXP_Reinsurance_PreJoin_ops.ClassCode3, \n\tEXP_Reinsurance_PreJoin_ops.Exposure3, \n\tEXP_Reinsurance_PreJoin_ops.StatisticalCoverageEffectiveDate3, \n\tEXP_Reinsurance_PreJoin_ops.StatisticalCoverageExpirationDate3, \n\tEXP_Reinsurance_PreJoin_ops.AgencyActualCommissionRate3, \n\tEXP_Reinsurance_PreJoin_ops.ReinsuranceSectionCode_Out, \n\tEXP_Reinsurance_PreJoin_ops.PremiumLoadSequence3, \n\tEXP_Reinsurance_PreJoin_ops.PMSFunctionCode3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionCode3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionEnteredDate3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionEffectiveDate3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionExpirationDate3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionBookedDate3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumTransactionAmount3, \n\tEXP_Reinsurance_PreJoin_ops.FullTermPremium3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumType3, \n\tEXP_Reinsurance_PreJoin_ops.ReasonAmendedCode3, \n\tEXP_Reinsurance_PreJoin_ops.BureauSpecialUseCode3, \n\tEXP_Reinsurance_PreJoin_ops.PMSAnnualStatementLine3, \n\tEXP_Reinsurance_PreJoin_ops.RatingDateIndicator3, \n\tEXP_Reinsurance_PreJoin_ops.Prior_Transaction_Found3, \n\tEXP_Reinsurance_PreJoin_ops.BureauStatisticalUserLine3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_Premium3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_Original_Premium3, \n\tEXP_Reinsurance_PreJoin_ops.Onset_Premium3, \n\tEXP_Reinsurance_PreJoin_ops.Onset_Original_Premium3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_Exposure3, \n\tEXP_Reinsurance_PreJoin_ops.Onset_Exposure3, \n\tEXP_Reinsurance_PreJoin_ops.Onset_Transaction_Code3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_Transaction_Code3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_StatisticalCodes3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_BureauStatisticalUserLine3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_ReasonAmendedCode3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_PremiumTransactionExpirationDate3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_AgencyActualCommissionRate3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_SublineCode3, \n\tEXP_Reinsurance_PreJoin_ops.Offset_ClassCode3, \n\tEXP_Reinsurance_PreJoin_ops.Status3, \n\tEXP_Reinsurance_PreJoin_ops.StatisticalCodes3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumMasterBureauInceptionDate3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumMasterRiskAddress3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumMasterRiskCityState3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumMasterRenewalIndicator3, \n\tEXP_Reinsurance_PreJoin_ops.pol_audit_frqncy3, \n\tEXP_Reinsurance_PreJoin_ops.PremiumMasterCustomerCareCommissionRate3, \n\tEXP_ReinsCov_Prejoin_ops.reins_cov_ak_id, \n\tEXP_ReinsCov_Prejoin_ops.pol_ak_id, \n\tEXP_ReinsCov_Prejoin_ops.reins_ins_line, \n\tEXP_ReinsCov_Prejoin_ops.reins_loc_unit_num, \n\tEXP_ReinsCov_Prejoin_ops.reins_sub_loc_unit_num, \n\tEXP_ReinsCov_Prejoin_ops.reins_risk_unit_grp, \n\tEXP_ReinsCov_Prejoin_ops.reins_risk_unit_grp_seq_num, \n\tEXP_ReinsCov_Prejoin_ops.reins_risk_unit, \n\tEXP_ReinsCov_Prejoin_ops.reins_risk_unit_seq_num, \n\tEXP_ReinsCov_Prejoin_ops.reins_section_code_out, \n\tEXP_ReinsCov_Prejoin_ops.reins_eff_date, \n\tEXP_ReinsCov_Prejoin_ops.reins_exp_date, \n\tEXP_ReinsCov_Prejoin_ops.reins_prcnt_prem_ceded, \n\tEXP_ReinsCov_Prejoin_ops.reins_prcnt_facultative_commssn, \n\tEXP_Reinsurance_PreJoin_ops.DeclaredEventsFlag3\n\tFROM EXP_Reinsurance_PreJoin_ops\n\tINNER JOIN EXP_ReinsCov_Prejoin_ops\n\tON EXP_ReinsCov_Prejoin_ops.pol_ak_id = EXP_Reinsurance_PreJoin_ops.PolicyAKID3 AND EXP_ReinsCov_Prejoin_ops.reins_section_code_out = EXP_Reinsurance_PreJoin_ops.ReinsuranceSectionCode_Out\n),\nEXP_Generate_DirectPremium_Reinsurance AS (\n\tSELECT\n\tpol_sym3 AS pol_sym,\n\tpol_num3 AS pol_num,\n\tpol_mod3 AS pol_mod,\n\tPMSFunctionCode3,\n\treins_section_code_out AS reins_section_code,\n\treins_ins_line AS reins_insurance_line,\n\treins_loc_unit_num AS reins_location_number,\n\treins_sub_loc_unit_num AS reins_sub_location_number,\n\treins_risk_unit_grp AS reins_risk_unit_group,\n\t-- *INF*: TO_CHAR(reins_risk_unit_group)\n\tTO_CHAR(reins_risk_unit_group) AS v_reins_risk_unit_group,\n\treins_risk_unit_grp_seq_num AS reins_seq_rsk_unt_grp,\n\treins_risk_unit_seq_num AS reins_risk_sequence,\n\treins_risk_unit AS reins_location,\n\treins_eff_date AS reins_effective_date,\n\treins_prcnt_prem_ceded AS reins_percent_prem_ceded,\n\treins_prcnt_facultative_commssn AS reins_percent_fac_comm,\n\treins_exp_date AS reins_expiration_date,\n\tRiskUnit3,\n\tPolicyCoverageExpirationDate3,\n\tLocationUnitNumber3,\n\t-- *INF*: IIF(LocationIndicator3 = 'N','N/A',LocationUnitNumber3)\n\tIFF(LocationIndicator3 = 'N', 'N/A', LocationUnitNumber3) AS v_LocationUnitNumber,\n\tLocationIndicator3,\n\tInsuranceLine3,\n\tSubLocationUnitNumber3,\n\tRiskUnitGroup3,\n\tRiskUnitGroupSequenceNumber3,\n\tRiskUnitSequenceNumber3,\n\tPMSTypeExposure3,\n\t-- *INF*: TO_DECIMAL(reins_location_number)\n\tTO_DECIMAL(reins_location_number) AS v_reins_location_number,\n\t-- *INF*: TO_DECIMAL(LocationUnitNumber3)\n\tTO_DECIMAL(LocationUnitNumber3) AS v_location_number,\n\tMajorPerilCode3,\n\tpms_pol_lob_code3,\n\tPremiumTransactionCode3,\n\tPremiumTransactionAmount3,\n\tFullTermPremium3,\n\tPremiumTransactionEffectiveDate3,\n\tPremiumTransactionExpirationDate3,\n\t-- *INF*: TO_INTEGER(:LKP.LKP_PIF_02_FOR_FIELDS(pol_sym,pol_num,pol_mod))\r\n\t-- \r\n\t-- -- Lookup to arch_pif_02 to determine pif_number_installments\n\tTO_INTEGER(LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_number_installments_a) AS v_pif_number_installments,\n\t-- *INF*:  IIF((v_pif_number_installments>1) ,\r\n\t-- IIF((reins_expiration_date>Hold_sar_exp_date)\r\n\t--          ,Hold_sar_exp_date,reins_expiration_date),reins_expiration_date)\r\n\t-- \r\n\t-- -- see comments\n\tIFF(( v_pif_number_installments > 1 ), IFF(( reins_expiration_date > Hold_sar_exp_date ), Hold_sar_exp_date, reins_expiration_date), reins_expiration_date) AS ReinsuranceCoverageExpirationDate,\n\tReasonAmendedCode3,\n\tPMSAnnualStatementLine3 AS PMSAnnualStatementLine,\n\tReinsuranceSectionCode_Out AS ReinsuranceSectionCode3,\n\t-- *INF*:  IIF(NOT IN(LTRIM(RTRIM(pms_pol_lob_code3)),'HP') ,\r\n\t-- IIF((reins_expiration_date>=reins_effective_date)\r\n\t--         AND\r\n\t--        ((PremiumTransactionEffectiveDate3 >= reins_effective_date) AND (PremiumTransactionEffectiveDate3 < reins_expiration_date)\r\n\t--          OR\r\n\t--          (PremiumTransactionExpirationDate3 > reins_effective_date) AND (PremiumTransactionExpirationDate3 <= reins_expiration_date )\r\n\t--          OR\r\n\t--          (PremiumTransactionEffectiveDate3 <= reins_effective_date) AND (PremiumTransactionExpirationDate3 >= reins_expiration_date))\r\n\t--          AND NOT IN (MajorPerilCode3,'042','044','183')\r\n\t--          ,'VALID','INVALID'),'INVALID')\r\n\t-- \r\n\t-- -- see comments\r\n\t-- \n\tIFF(NOT IN(LTRIM(RTRIM(pms_pol_lob_code3)), 'HP'), IFF(( reins_expiration_date >= reins_effective_date ) AND ( ( PremiumTransactionEffectiveDate3 >= reins_effective_date ) AND ( PremiumTransactionEffectiveDate3 < reins_expiration_date ) OR ( PremiumTransactionExpirationDate3 > reins_effective_date ) AND ( PremiumTransactionExpirationDate3 <= reins_expiration_date ) OR ( PremiumTransactionEffectiveDate3 <= reins_effective_date ) AND ( PremiumTransactionExpirationDate3 >= reins_expiration_date ) ) AND NOT IN(MajorPerilCode3, '042', '044', '183'), 'VALID', 'INVALID'), 'INVALID') AS v_reins_validity,\n\t-- *INF*: DECODE(v_reins_validity,'INVALID','NOREINSURANCE',\r\n\t-- 'VALID',IIF(LTRIM(RTRIM(reins_insurance_line)) = 'GL' and v_reins_location_number <> v_location_number,'NOREINSURANCE',\r\n\t-- IIF(RTRIM(reins_location)=RiskUnit3 OR RTRIM(reins_location) = 'N/A','REINSURANCE','NOREINSURANCE')))\r\n\t-- \r\n\t-- \r\n\t-- --DECODE(v_reins_validity,'INVALID','NOREINSURANCE',\r\n\t-- --'VALID',IIF(sar_id5 ='51' AND v_reins_risk_unit_group = '286',IIF(reins_insurance_line = sar_insurance_line AND reins_location_number = --v_sar_location  AND v_reins_risk_unit_group = sar_risk_unit_group, 'REINSURANCE','NOREINSURANCE'),\r\n\t-- --IIF(ISNULL(reins_location_number),\r\n\t-- --IIF(reins_location=sar_unit5 OR IS_SPACES(reins_location) OR reins_location = '0','REINSURANCE','NOREINSURANCE'),\r\n\t-- --IIF(reins_location_number = v_sar_location,\r\n\t-- --'REINSURANCE','NOREINSURANCE')))\r\n\t-- --)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(v_reins_validity,\n\t'INVALID', 'NOREINSURANCE',\n\t'VALID', IFF(LTRIM(RTRIM(reins_insurance_line)) = 'GL' AND v_reins_location_number <> v_location_number, 'NOREINSURANCE', IFF(RTRIM(reins_location) = RiskUnit3 OR RTRIM(reins_location) = 'N/A', 'REINSURANCE', 'NOREINSURANCE'))) AS v_reinsurance_flag,\n\tv_reinsurance_flag AS reinsurance_flag,\n\t-- *INF*: DECODE(v_reinsurance_flag,'NOREINSURANCE','NOGENERATE',\r\n\t--                                                              'REINSURANCE',\r\n\t-- IIF(\r\n\t--        (IN(MajorPerilCode3,'088','089','127','184','128','188') OR  \r\n\t--                ( IN(ReasonAmendedCode3,'COL','CWO'))  OR \r\n\t--                      IN(PremiumTransactionCode3,'59','69') ),\r\n\t--                                                        'NOGENERATE','GENERATE'))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --DECODE(v_reinsurance_flag,'NOREINSURANCE','NOGENERATE',\r\n\t-- --                                                             'REINSURANCE',\r\n\t-- --IIF(\r\n\t-- --       (IN(MajorPerilCode3,'088','089','127','184','128','188') OR  \r\n\t-- --               (ReinsuranceSectionCode3 = '2' AND IN(ReasonAmendedCode3,'COL','CWO'))  OR \r\n\t-- --                     IN(PremiumTransactionCode3,'59','69') ),\r\n\t--    --                                                    'NOGENERATE','GENERATE'))\r\n\t-- \r\n\t-- ---OR (sar_insurance_line = 'GL' and sar_risk_unit_group = '286')\r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(v_reinsurance_flag,\n\t'NOREINSURANCE', 'NOGENERATE',\n\t'REINSURANCE', IFF(( IN(MajorPerilCode3, '088', '089', '127', '184', '128', '188') OR ( IN(ReasonAmendedCode3, 'COL', 'CWO') ) OR IN(PremiumTransactionCode3, '59', '69') ), 'NOGENERATE', 'GENERATE')) AS v_Reins_generate_flag,\n\tv_Reins_generate_flag AS Generate_flag,\n\tStatisticalCoverageEffectiveDate3,\n\t-- *INF*: IIF(IN(PremiumTransactionCode3,'14','24'),StatisticalCoverageEffectiveDate3,PremiumTransactionEffectiveDate3)\n\tIFF(IN(PremiumTransactionCode3, '14', '24'), StatisticalCoverageEffectiveDate3, PremiumTransactionEffectiveDate3) AS Hold_sar_eff_date,\n\t-- *INF*: IIF(IN(PremiumTransactionCode3,'14','24'),PremiumTransactionEffectiveDate3,PremiumTransactionExpirationDate3)\n\tIFF(IN(PremiumTransactionCode3, '14', '24'), PremiumTransactionEffectiveDate3, PremiumTransactionExpirationDate3) AS Hold_sar_exp_date,\n\t-- *INF*: DATE_DIFF(PremiumTransactionEffectiveDate3,PremiumTransactionExpirationDate3,'D')\n\tDATE_DIFF(PremiumTransactionEffectiveDate3, PremiumTransactionExpirationDate3, 'D') AS Length_of_Stat,\n\t-- *INF*: IIF(PremiumTransactionEffectiveDate3 >= reins_effective_date \r\n\t--                            AND PremiumTransactionEffectiveDate3 < reins_expiration_date,\r\n\t--                            DATE_DIFF(PremiumTransactionEffectiveDate3,reins_expiration_date,'D'),\r\n\t--            IIF(PremiumTransactionExpirationDate3 > reins_effective_date  \r\n\t--                          AND PremiumTransactionExpirationDate3 <= reins_expiration_date,\r\n\t--                            DATE_DIFF(reins_effective_date,PremiumTransactionExpirationDate3,'D'),DATE_DIFF(reins_effective_date,reins_expiration_date,'D')))\n\tIFF(PremiumTransactionEffectiveDate3 >= reins_effective_date AND PremiumTransactionEffectiveDate3 < reins_expiration_date, DATE_DIFF(PremiumTransactionEffectiveDate3, reins_expiration_date, 'D'), IFF(PremiumTransactionExpirationDate3 > reins_effective_date AND PremiumTransactionExpirationDate3 <= reins_expiration_date, DATE_DIFF(reins_effective_date, PremiumTransactionExpirationDate3, 'D'), DATE_DIFF(reins_effective_date, reins_expiration_date, 'D'))) AS Length_of_Stat_Overlap,\n\t-- *INF*: IIF(PremiumTransactionExpirationDate3 < reins_effective_date OR PremiumTransactionEffectiveDate3 > reins_expiration_date, 0,\r\n\t-- \tIIF (PremiumTransactionEffectiveDate3 >= reins_effective_date AND PremiumTransactionExpirationDate3 <= reins_expiration_date,\r\n\t-- \t\tIIF((Hold_sar_eff_date >=reins_effective_date AND reins_expiration_date >= Hold_sar_exp_date) OR (reins_effective_date > Hold_sar_exp_date),1,ROUND(Length_of_Stat_Overlap / Length_of_Stat, 2) )))\r\n\t-- \r\n\t-- --IIF(PremiumTransactionEffectiveDate3 >= reins_effective_date AND PremiumTransactionExpirationDate3 <=reins_expiration_date,1,\r\n\t--    --     IIF((Hold_sar_eff_date >= reins_effective_date AND reins_expiration_date >= Hold_sar_exp_date) OR \r\n\t--      --                  ( reins_effective_date > Hold_sar_exp_date),1,ROUND(Length_of_Stat_Overlap/Length_of_Stat,2)))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- ---IIF((Hold_sar_eff_date >= v_reins_effective_date AND v_reins_expiration_date >= Hold_sar_exp_date) OR \r\n\t--     --   (v_reins_effective_date > Hold_sar_exp_date),1,ROUND(Length_of_Stat_Overlap/Length_of_Stat,2))\r\n\t-- \r\n\t-- \r\n\t-- ---IIF(sar_trans_eff_date >=v_reins_effective_date AND sar_expiration_date <= v_reins_expiration_date,1,ROUND(Length_of_Stat_Overlap/Length_of_Stat,2))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(PremiumTransactionExpirationDate3 < reins_effective_date OR PremiumTransactionEffectiveDate3 > reins_expiration_date, 0, IFF(PremiumTransactionEffectiveDate3 >= reins_effective_date AND PremiumTransactionExpirationDate3 <= reins_expiration_date, IFF(( Hold_sar_eff_date >= reins_effective_date AND reins_expiration_date >= Hold_sar_exp_date ) OR ( reins_effective_date > Hold_sar_exp_date ), 1, ROUND(Length_of_Stat_Overlap / Length_of_Stat, 2)))) AS I_Pro_Rata_Factor,\n\t-- *INF*: ROUND(PremiumTransactionAmount3 * reins_percent_prem_ceded * I_Pro_Rata_Factor,3)\n\tROUND(PremiumTransactionAmount3 * reins_percent_prem_ceded * I_Pro_Rata_Factor, 3) AS V_REINS_CEDED_PREMIUM,\n\tV_REINS_CEDED_PREMIUM AS OUT_REINS_CEDED_PREMIUM,\n\t-- *INF*: ROUND(FullTermPremium3 * reins_percent_prem_ceded  * I_Pro_Rata_Factor ,3)\n\tROUND(FullTermPremium3 * reins_percent_prem_ceded * I_Pro_Rata_Factor, 3) AS V_REINS_CEDED_ORIG_PREMIUM,\n\tV_REINS_CEDED_ORIG_PREMIUM AS OUT_REINS_CEDED_ORIG_PREMIUM,\n\tMajorPerilSequenceNumber3,\n\tPremiumTransactionEnteredDate3,\n\tSublineCode3 AS SubLineCode3,\n\tBureauStatisticalUserLine3,\n\tTypeBureauCode3,\n\tClassCode3,\n\t-- *INF*: 0\r\n\t-- \r\n\t-- -- Always zero for derived ceded reinsurance records\n\t0 AS Exposure3,\n\t-- *INF*: 0\r\n\t-- \r\n\t-- -- Always zero for derived ceded reinsurance records\n\t0 AS WrittenExposure,\n\tStatisticalCodes3,\n\treins_percent_fac_comm AS AgencyActualCommissionRate3,\n\tpol_audit_frqncy3,\n\tPremiumTransactionBookedDate3,\n\tRatingDateIndicator3,\n\tpol_eff_date3,\n\tpol_exp_date3,\n\tBureauSpecialUseCode3,\n\t'PMS' AS o_SourceSystemID,\n\tAgencyAKID3,\n\tPolicyAKID3,\n\tContractCustomerAKID3,\n\tRiskLocationAKID3,\n\tPolicyCoverageAKID3,\n\tStatisticalCoverageAKID3,\n\treins_cov_ak_id AS ReinsuranceCoverageAKID3,\n\tPremiumTransactionAKID3,\n\tBureauStatisticalCodeAKID3,\n\tOffset_Premium3,\n\tOffset_Original_Premium3,\n\tOnset_Premium3,\n\tOnset_Original_Premium3,\n\tPrior_Transaction_Found3,\n\tStatus3,\n\tOffset_Exposure3,\n\tOnset_Exposure3,\n\tpol_key3,\n\tStatisticalCoverageExpirationDate3,\n\tPolicyCoverageEffectiveDate3,\n\tPremiumLoadSequence3,\n\tPremiumType3,\n\tOnset_Transaction_Code3,\n\tOffset_Transaction_Code3,\n\tOffset_StatisticalCodes3,\n\tOffset_BureauStatisticalUserLine3,\n\tOffset_StateProvinceCode3,\n\tOffset_ReasonAmendedCode3,\n\tOffset_PremiumTransactionExpirationDate3,\n\tOffset_AgencyActualCommissionRate3,\n\tOffset_SublineCode3,\n\tOffset_ClassCode3,\n\tPremiumMasterBureauInceptionDate3,\n\tPremiumMasterRiskAddress3,\n\tPremiumMasterRiskCityState3,\n\tPremiumMasterRenewalIndicator3,\n\tpol_issue_code3,\n\t'C' AS PremiumMasterPremiumType3,\n\t'REINSURANCE' AS PremiumMasterStatus3,\n\tpol_term3,\n\t-1 AS o_RatingCoverageAKId,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_DATE('21001231235959', 'YYYYMMDDHH24MISS') AS o_RatingCoverageExpirationDate,\n\tPremiumMasterCustomerCareCommissionRate3,\n\tDeclaredEventsFlag3\n\tFROM JNR_DirectPremiumTransaction_ReinsuranceCoverage\n\tLEFT JOIN LKP_PIF_02_FOR_FIELDS LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod\n\tON LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_symbol = pol_sym\n\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_policy_number = pol_num\n\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_module = pol_mod\n\n),\nFIL_Non_Reinsurance AS (\n\tSELECT\n\to_SourceSystemID AS SourceSystemID, \n\tAgencyAKID3, \n\tPolicyAKID3, \n\tContractCustomerAKID3, \n\tRiskLocationAKID3, \n\tPolicyCoverageAKID3, \n\tStatisticalCoverageAKID3, \n\tReinsuranceCoverageAKID3, \n\tPremiumTransactionAKID3, \n\tBureauStatisticalCodeAKID3, \n\tpol_sym AS pol_sym3, \n\tpol_num AS pol_num3, \n\tpol_mod AS pol_mod3, \n\tpol_key3, \n\tpol_eff_date3, \n\tpol_exp_date3, \n\tpms_pol_lob_code3, \n\tpol_issue_code3, \n\tLocationUnitNumber3, \n\tLocationIndicator3, \n\tInsuranceLine3, \n\tTypeBureauCode3, \n\tPolicyCoverageEffectiveDate3, \n\tPolicyCoverageExpirationDate3, \n\tSubLocationUnitNumber3, \n\tRiskUnitGroup3, \n\tRiskUnitGroupSequenceNumber3, \n\tRiskUnit3, \n\tRiskUnitSequenceNumber3, \n\tMajorPerilCode3, \n\tMajorPerilSequenceNumber3, \n\tSubLineCode3 AS SublineCode3, \n\tPMSTypeExposure3, \n\tClassCode3, \n\tExposure3, \n\tStatisticalCoverageEffectiveDate3, \n\tStatisticalCoverageExpirationDate3, \n\tAgencyActualCommissionRate3, \n\tReinsuranceSectionCode3, \n\tPremiumLoadSequence3, \n\tPMSFunctionCode3, \n\tPremiumTransactionCode3, \n\tPremiumTransactionEnteredDate3, \n\tPremiumTransactionEffectiveDate3, \n\tReinsuranceCoverageExpirationDate AS PremiumTransactionExpirationDate3, \n\tPremiumTransactionBookedDate3, \n\tOUT_REINS_CEDED_PREMIUM AS PremiumTransactionAmount3, \n\tOUT_REINS_CEDED_ORIG_PREMIUM AS FullTermPremium3, \n\tReasonAmendedCode3, \n\tBureauSpecialUseCode3, \n\tPMSAnnualStatementLine AS PMSAnnualStatementLine3, \n\tRatingDateIndicator3, \n\tBureauStatisticalUserLine3, \n\tPremiumMasterPremiumType3, \n\tStatus3, \n\tPremiumMasterStatus3, \n\tStatisticalCodes3, \n\tPremiumMasterBureauInceptionDate3, \n\tPremiumMasterRiskAddress3, \n\tPremiumMasterRiskCityState3, \n\tPremiumMasterRenewalIndicator3, \n\tGenerate_flag AS generate_flag, \n\tpol_audit_frqncy3, \n\tpol_term3, \n\to_RatingCoverageAKId AS RatingCoverageAKId, \n\to_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate, \n\to_RatingCoverageExpirationDate AS RatingCoverageExpirationDate, \n\tPremiumMasterCustomerCareCommissionRate3, \n\tWrittenExposure, \n\tDeclaredEventsFlag3\n\tFROM EXP_Generate_DirectPremium_Reinsurance\n\tWHERE generate_flag ='GENERATE'\n),\nUnion_All_Part1_Pipelines AS (\n\tSELECT o_SourceSystemID AS SourceSystemID, AgencyAKID5 AS AgencyAKID, PolicyAKID5 AS PolicyAKID, ContractCustomerAKID5 AS ContractCustomerAKID, RiskLocationAKID5 AS RiskLocationAKID, PolicyCoverageAKID5 AS PolicyCoverageAKID, StatisticalCoverageAKID5 AS StatisticalCoverageAKID, ReinsuranceCoverageAKID5 AS ReinsuranceCoverageAKID, PremiumTransactionAKID5 AS PremiumTransactionAKID, BureauStatisticalCodeAKID5 AS BureauStatisticalCodeAKID, pol_sym5 AS pol_sym, pol_num5 AS pol_num, pol_mod5 AS pol_mod, pol_key5 AS pol_key, pol_eff_date5 AS pol_eff_date, pol_exp_date5 AS pol_exp_date, pms_pol_lob_code5 AS pms_pol_lob_code, pol_issue_code5 AS pol_issue_code, LocationUnitNumber5 AS LocationUnitNumber, LocationIndicator5 AS LocationIndicator, InsuranceLine5 AS InsuranceLine, TypeBureauCode5 AS TypeBureauCode, PolicyCoverageEffectiveDate5 AS PolicyCoverageEffectiveDate, PolicyCoverageExpirationDate5 AS PolicyCoverageExpirationDate, SubLocationUnitNumber5 AS SubLocationUnitNumber, RiskUnitGroup5 AS RiskUnitGroup, RiskUnitGroupSequenceNumber5 AS RiskUnitGroupSequenceNumber, RiskUnit5 AS RiskUnit, RiskUnitSequenceNumber5 AS RiskUnitSequenceNumber, MajorPerilCode5 AS MajorPerilCode, MajorPerilSequenceNumber5 AS MajorPerilSequenceNumber, SublineCode5 AS SublineCode, PMSTypeExposure5 AS PMSTypeExposure, StatisticalCoverageEffectiveDate5 AS StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate5 AS StatisticalCoverageExpirationDate, PremiumLoadSequence5 AS PremiumLoadSequence, PMSFunctionCode5 AS PMSFunctionCode, PremiumTransactionCode5 AS PremiumTransactionCode, PremiumTransactionEnteredDate5 AS PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate5 AS PremiumTransactionEffectiveDate, ClassCode5 AS ClassCode, PremiumTransactionExpirationDate5 AS PremiumTransactionExpirationDate, PremiumTransactionBookedDate5 AS PremiumTransactionBookedDate, ReasonAmendedCode5 AS ReasonAmendedCode, BureauSpecialUseCode5 AS BureauSpecialUseCode, PMSAnnualStatementLine5 AS PMSAnnualStatementLine, AgencyActualCommissionRate5 AS AgencyActualCommissionRate, Exposure5 AS Exposure, RatingDateIndicator5 AS RatingDateIndicator, BureauStatisticalUserLine5 AS BureauStatisticalUserLine, StatisticalCodes5 AS StatisticalCodes, PremiumTransactionAmount5 AS PremiumTransactionAmount, FullTermPremium5 AS FullTermPremium, PremiumMasterBureauInceptionDate5 AS PremiumMasterBureauInceptionDate, PremiumMasterRiskAddress5 AS PremiumMasterRiskAddress, PremiumMasterRiskCityState5 AS PremiumMasterRiskCityState, PremiumMasterRenewalIndicator5 AS PremiumMasterRenewalIndicator, PremiumType5 AS PremiumMasterPremiumType, Status5 AS Status, PremiumMasterStatus5 AS PremiumMasterStatus, pol_audit_frqncy5 AS pol_audit_frqncy, pol_term5 AS pol_term, o_RatingCoverageAKId AS RatingCoverageAKID, o_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate, o_RatingCoverageExpirationDate AS RatingCoverageExpirationDate, PremiumMasterCustomerCareCommissionRate5 AS PremiumMasterCustomerCareCommissionRate, WrittenExposure5 AS PemiumMasterWrittenExposure, DeclaredEventsFlag5 AS DeclaredEventFlag\n\tFROM EXP_generate_PremiumMasterRecord\n\tUNION\n\tSELECT SourceSystemID, AgencyAKID3 AS AgencyAKID, PolicyAKID3 AS PolicyAKID, ContractCustomerAKID3 AS ContractCustomerAKID, RiskLocationAKID3 AS RiskLocationAKID, PolicyCoverageAKID3 AS PolicyCoverageAKID, StatisticalCoverageAKID3 AS StatisticalCoverageAKID, ReinsuranceCoverageAKID3 AS ReinsuranceCoverageAKID, PremiumTransactionAKID3 AS PremiumTransactionAKID, BureauStatisticalCodeAKID3 AS BureauStatisticalCodeAKID, pol_sym3 AS pol_sym, pol_num3 AS pol_num, pol_mod3 AS pol_mod, pol_key3 AS pol_key, pol_eff_date3 AS pol_eff_date, pol_exp_date3 AS pol_exp_date, pms_pol_lob_code3 AS pms_pol_lob_code, pol_issue_code3 AS pol_issue_code, LocationUnitNumber3 AS LocationUnitNumber, LocationIndicator3 AS LocationIndicator, InsuranceLine3 AS InsuranceLine, TypeBureauCode3 AS TypeBureauCode, PolicyCoverageEffectiveDate3 AS PolicyCoverageEffectiveDate, PolicyCoverageExpirationDate3 AS PolicyCoverageExpirationDate, SubLocationUnitNumber3 AS SubLocationUnitNumber, RiskUnitGroup3 AS RiskUnitGroup, RiskUnitGroupSequenceNumber3 AS RiskUnitGroupSequenceNumber, RiskUnit3 AS RiskUnit, RiskUnitSequenceNumber3 AS RiskUnitSequenceNumber, MajorPerilCode3 AS MajorPerilCode, MajorPerilSequenceNumber3 AS MajorPerilSequenceNumber, SublineCode3 AS SublineCode, PMSTypeExposure3 AS PMSTypeExposure, StatisticalCoverageEffectiveDate3 AS StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate3 AS StatisticalCoverageExpirationDate, PremiumLoadSequence3 AS PremiumLoadSequence, PMSFunctionCode3 AS PMSFunctionCode, PremiumTransactionCode3 AS PremiumTransactionCode, PremiumTransactionEnteredDate3 AS PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate3 AS PremiumTransactionEffectiveDate, ClassCode3 AS ClassCode, PremiumTransactionExpirationDate3 AS PremiumTransactionExpirationDate, PremiumTransactionBookedDate3 AS PremiumTransactionBookedDate, ReasonAmendedCode3 AS ReasonAmendedCode, BureauSpecialUseCode3 AS BureauSpecialUseCode, PMSAnnualStatementLine3 AS PMSAnnualStatementLine, AgencyActualCommissionRate3 AS AgencyActualCommissionRate, Exposure3 AS Exposure, RatingDateIndicator3 AS RatingDateIndicator, BureauStatisticalUserLine3 AS BureauStatisticalUserLine, StatisticalCodes3 AS StatisticalCodes, PremiumTransactionAmount3 AS PremiumTransactionAmount, FullTermPremium3 AS FullTermPremium, PremiumMasterBureauInceptionDate3 AS PremiumMasterBureauInceptionDate, PremiumMasterRiskAddress3 AS PremiumMasterRiskAddress, PremiumMasterRiskCityState3 AS PremiumMasterRiskCityState, PremiumMasterRenewalIndicator3 AS PremiumMasterRenewalIndicator, PremiumMasterPremiumType3 AS PremiumMasterPremiumType, Status3 AS Status, PremiumMasterStatus3 AS PremiumMasterStatus, pol_audit_frqncy3 AS pol_audit_frqncy, pol_term3 AS pol_term, RatingCoverageAKId AS RatingCoverageAKID, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, PremiumMasterCustomerCareCommissionRate3 AS PremiumMasterCustomerCareCommissionRate, WrittenExposure AS PemiumMasterWrittenExposure, DeclaredEventsFlag3 AS DeclaredEventFlag\n\tFROM FIL_Non_Reinsurance\n\tUNION\n\tSELECT o_SourceSystemID AS SourceSystemID, AgencyAKID1 AS AgencyAKID, PolicyAKID1 AS PolicyAKID, ContractCustomerAKID1 AS ContractCustomerAKID, RiskLocationAKID1 AS RiskLocationAKID, PolicyCoverageAKID1 AS PolicyCoverageAKID, StatisticalCoverageAKID1 AS StatisticalCoverageAKID, ReinsuranceCoverageAKID1 AS ReinsuranceCoverageAKID, PremiumTransactionAKID1 AS PremiumTransactionAKID, BureauStatisticalCodeAKID1 AS BureauStatisticalCodeAKID, pol_sym1 AS pol_sym, pol_num1 AS pol_num, pol_mod1 AS pol_mod, pol_key1 AS pol_key, pol_eff_date1 AS pol_eff_date, pol_exp_date1 AS pol_exp_date, pms_pol_lob_code1 AS pms_pol_lob_code, pol_issue_code1 AS pol_issue_code, LocationUnitNumber1 AS LocationUnitNumber, LocationIndicator1 AS LocationIndicator, InsuranceLine1 AS InsuranceLine, TypeBureauCode1 AS TypeBureauCode, PolicyCoverageEffectiveDate1 AS PolicyCoverageEffectiveDate, PolicyCoverageExpirationDate1 AS PolicyCoverageExpirationDate, SubLocationUnitNumber1 AS SubLocationUnitNumber, RiskUnitGroup1 AS RiskUnitGroup, RiskUnitGroupSequenceNumber1 AS RiskUnitGroupSequenceNumber, RiskUnit1 AS RiskUnit, RiskUnitSequenceNumber1 AS RiskUnitSequenceNumber, MajorPerilCode1 AS MajorPerilCode, MajorPerilSequenceNumber1 AS MajorPerilSequenceNumber, SublineCode1 AS SublineCode, PMSTypeExposure1 AS PMSTypeExposure, StatisticalCoverageEffectiveDate1 AS StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate1 AS StatisticalCoverageExpirationDate, PremiumLoadSequence1 AS PremiumLoadSequence, PMSFunctionCode1 AS PMSFunctionCode, Onset_Transaction_Code1 AS PremiumTransactionCode, PremiumTransactionEnteredDate1 AS PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate1 AS PremiumTransactionEffectiveDate, ClassCode1 AS ClassCode, PremiumTransactionExpirationDate1 AS PremiumTransactionExpirationDate, PremiumTransactionBookedDate1 AS PremiumTransactionBookedDate, ReasonAmendedCode1 AS ReasonAmendedCode, BureauSpecialUseCode1 AS BureauSpecialUseCode, PMSAnnualStatementLine1 AS PMSAnnualStatementLine, AgencyActualCommissionRate1 AS AgencyActualCommissionRate, Onset_Exposure1 AS Exposure, RatingDateIndicator1 AS RatingDateIndicator, BureauStatisticalUserLine1 AS BureauStatisticalUserLine, StatisticalCodes1 AS StatisticalCodes, Onset_Premium1 AS PremiumTransactionAmount, Onset_Original_Premium1 AS FullTermPremium, PremiumMasterBureauInceptionDate1 AS PremiumMasterBureauInceptionDate, PremiumMasterRiskAddress1 AS PremiumMasterRiskAddress, PremiumMasterRiskCityState1 AS PremiumMasterRiskCityState, PremiumMasterRenewalIndicator1 AS PremiumMasterRenewalIndicator, PremiumType1 AS PremiumMasterPremiumType, Status1 AS Status, PremiumMasterStatus1 AS PremiumMasterStatus, pol_audit_frqncy1 AS pol_audit_frqncy, pol_term1 AS pol_term, o_RatingCoverageAKId AS RatingCoverageAKID, o_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate, o_RatingCoverageExpirationDate AS RatingCoverageExpirationDate, PremiumMasterCustomerCareCommissionRate1 AS PremiumMasterCustomerCareCommissionRate, Onset_WrittenExposure1 AS PemiumMasterWrittenExposure, DeclaredEventsFlag1 AS DeclaredEventFlag\n\tFROM EXP_generate_onset\n\tUNION\n\tSELECT o_SourceSystemID AS SourceSystemID, AgencyAKID4 AS AgencyAKID, PolicyAKID4 AS PolicyAKID, ContractCustomerAKID4 AS ContractCustomerAKID, RiskLocationAKID4 AS RiskLocationAKID, PolicyCoverageAKID4 AS PolicyCoverageAKID, StatisticalCoverageAKID4 AS StatisticalCoverageAKID, ReinsuranceCoverageAKID4 AS ReinsuranceCoverageAKID, Offset_PremiumTransactionAKID AS PremiumTransactionAKID, BureauStatisticalCodeAKID4 AS BureauStatisticalCodeAKID, pol_sym4 AS pol_sym, pol_num4 AS pol_num, pol_mod4 AS pol_mod, pol_key4 AS pol_key, pol_eff_date4 AS pol_eff_date, pol_exp_date4 AS pol_exp_date, pms_pol_lob_code4 AS pms_pol_lob_code, pol_issue_code4 AS pol_issue_code, LocationUnitNumber4 AS LocationUnitNumber, LocationIndicator4 AS LocationIndicator, InsuranceLine4 AS InsuranceLine, TypeBureauCode4 AS TypeBureauCode, PolicyCoverageEffectiveDate4 AS PolicyCoverageEffectiveDate, PolicyCoverageExpirationDate4 AS PolicyCoverageExpirationDate, SubLocationUnitNumber4 AS SubLocationUnitNumber, RiskUnitGroup4 AS RiskUnitGroup, RiskUnitGroupSequenceNumber4 AS RiskUnitGroupSequenceNumber, RiskUnit4 AS RiskUnit, RiskUnitSequenceNumber4 AS RiskUnitSequenceNumber, MajorPerilCode4 AS MajorPerilCode, MajorPerilSequenceNumber4 AS MajorPerilSequenceNumber, Offset_SublineCode4 AS SublineCode, PMSTypeExposure4 AS PMSTypeExposure, StatisticalCoverageEffectiveDate4 AS StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate4 AS StatisticalCoverageExpirationDate, PremiumLoadSequence4 AS PremiumLoadSequence, PMSFunctionCode4 AS PMSFunctionCode, Offset_Transaction_Code4 AS PremiumTransactionCode, PremiumTransactionEnteredDate4 AS PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate4 AS PremiumTransactionEffectiveDate, Offset_ClassCode4 AS ClassCode, Offset_PremiumTransactionExpirationDate4 AS PremiumTransactionExpirationDate, PremiumTransactionBookedDate4 AS PremiumTransactionBookedDate, ReasonAmendedCode4 AS ReasonAmendedCode, BureauSpecialUseCode4 AS BureauSpecialUseCode, PMSAnnualStatementLine4 AS PMSAnnualStatementLine, Offset_AgencyActualCommissionRate4 AS AgencyActualCommissionRate, Offset_Exposure4 AS Exposure, RatingDateIndicator4 AS RatingDateIndicator, Offset_BureauStatisticalUserLine4 AS BureauStatisticalUserLine, Offset_StatisticalCodes4 AS StatisticalCodes, Offset_Premium4 AS PremiumTransactionAmount, Offset_Original_Premium4 AS FullTermPremium, PremiumMasterBureauInceptionDate4 AS PremiumMasterBureauInceptionDate, PremiumMasterRiskAddress4 AS PremiumMasterRiskAddress, PremiumMasterRiskCityState4 AS PremiumMasterRiskCityState, PremiumMasterRenewalIndicator4 AS PremiumMasterRenewalIndicator, PremiumType4 AS PremiumMasterPremiumType, Status4 AS Status, PremiumMasterStatus4 AS PremiumMasterStatus, pol_audit_frqncy4 AS pol_audit_frqncy, pol_term4 AS pol_term, o_RatingCoverageAKId AS RatingCoverageAKID, o_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate, o_RatingCoverageExpirationDate AS RatingCoverageExpirationDate, PremiumMasterCustomerCareCommissionRate4 AS PremiumMasterCustomerCareCommissionRate, Offset_WrittenExposure4 AS PemiumMasterWrittenExposure, DeclaredEventsFlag4 AS DeclaredEventFlag\n\tFROM EXP_generate_offset\n\tUNION\n\tSELECT o_SourceSystemID AS SourceSystemID, o_AgencyAKID AS AgencyAKID, o_PolicyAKID AS PolicyAKID, o_ContractCustomerAKID AS ContractCustomerAKID, o_RiskLocationAKID AS RiskLocationAKID, o_PolicyCoverageAKID AS PolicyCoverageAKID, o_StatisticalCoverageAKID AS StatisticalCoverageAKID, o_ReinsuranceCoverageAKID AS ReinsuranceCoverageAKID, o_PremiumTransactionAKID AS PremiumTransactionAKID, o_BureauStatisticalCodeAKID AS BureauStatisticalCodeAKID, o_pol_sym AS pol_sym, o_pol_num AS pol_num, o_pol_mod AS pol_mod, o_pol_key AS pol_key, o_pol_eff_date AS pol_eff_date, o_pol_exp_date AS pol_exp_date, o_pms_pol_lob_code AS pms_pol_lob_code, o_pol_issue_code AS pol_issue_code, o_LocationUnitNumber AS LocationUnitNumber, o_LocationIndicator AS LocationIndicator, o_InsuranceLine AS InsuranceLine, o_TypeBureauCode AS TypeBureauCode, o_PolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate, o_PolicyCoverageExpirationDate AS PolicyCoverageExpirationDate, o_SubLocationUnitNumber AS SubLocationUnitNumber, o_RiskUnitGroup AS RiskUnitGroup, o_RiskUnitGroupSequenceNumber AS RiskUnitGroupSequenceNumber, o_RiskUnit AS RiskUnit, o_RiskUnitSequenceNumber AS RiskUnitSequenceNumber, o_MajorPerilCode AS MajorPerilCode, o_MajorPerilSequenceNumber AS MajorPerilSequenceNumber, o_SublineCode AS SublineCode, o_PMSTypeExposure AS PMSTypeExposure, o_StatisticalCoverageEffectiveDate AS StatisticalCoverageEffectiveDate, o_StatisticalCoverageExpirationDate AS StatisticalCoverageExpirationDate, o_PremiumLoadSequence AS PremiumLoadSequence, o_PMSFunctionCode AS PMSFunctionCode, o_PremiumTransactionCode AS PremiumTransactionCode, o_PremiumTransactionEnteredDate AS PremiumTransactionEnteredDate, o_PremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate, o_ClassCode AS ClassCode, o_PremiumTransactionExpirationDate AS PremiumTransactionExpirationDate, o_PremiumTransactionBookedDate AS PremiumTransactionBookedDate, o_ReasonAmendedCode AS ReasonAmendedCode, o_BureauSpecialUseCode AS BureauSpecialUseCode, o_PMSAnnualStatementLine AS PMSAnnualStatementLine, o_AgencyActualCommissionRate AS AgencyActualCommissionRate, o_Exposure AS Exposure, o_RatingDateIndicator AS RatingDateIndicator, o_BureauStatisticalUserLine AS BureauStatisticalUserLine, o_StatisticalCodes AS StatisticalCodes, o_PremiumTransactionAmount AS PremiumTransactionAmount, o_FullTermPremium AS FullTermPremium, o_PremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate, o_PremiumMasterRiskAddress AS PremiumMasterRiskAddress, o_PremiumMasterRiskCityState AS PremiumMasterRiskCityState, o_PremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator, o_PremiumMasterPremiumType AS PremiumMasterPremiumType, o_Status AS Status, o_PremiumMasterStatus AS PremiumMasterStatus, o_pol_audit_frqncy AS pol_audit_frqncy, o_pol_term AS pol_term, o_RatingCoverageAKID AS RatingCoverageAKID, o_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate, o_RatingCoverageExpirationDate AS RatingCoverageExpirationDate, CustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate, o_WrittenExposure AS PemiumMasterWrittenExposure, DeclaredEventsFlag AS DeclaredEventFlag\n\tFROM EXP_PremiumMaster_DCT\n),\nFIL_Invalid_records AS (\n\tSELECT\n\tSourceSystemID, \n\tAgencyAKID AS AgencyAKID5, \n\tPolicyAKID AS PolicyAKID5, \n\tContractCustomerAKID AS ContractCustomerAKID5, \n\tRiskLocationAKID AS RiskLocationAKID5, \n\tPolicyCoverageAKID AS PolicyCoverageAKID5, \n\tStatisticalCoverageAKID AS StatisticalCoverageAKID5, \n\tReinsuranceCoverageAKID AS ReinsuranceCoverageAKID5, \n\tPremiumTransactionAKID AS PremiumTransactionAKID5, \n\tBureauStatisticalCodeAKID AS BureauStatisticalCodeAKID5, \n\tpol_sym AS pol_sym5, \n\tpol_num AS pol_num5, \n\tpol_mod AS pol_mod5, \n\tpol_key AS pol_key5, \n\tpol_eff_date AS pol_eff_date5, \n\tpol_exp_date AS pol_exp_date5, \n\tInsuranceLine AS InsuranceLine5, \n\tTypeBureauCode AS TypeBureauCode5, \n\tPolicyCoverageEffectiveDate AS PolicyCoverageEffectiveDate5, \n\tPolicyCoverageExpirationDate AS PolicyCoverageExpirationDate5, \n\tMajorPerilCode AS MajorPerilCode5, \n\tSublineCode AS SublineCode5, \n\tPremiumLoadSequence AS PremiumLoadSequence5, \n\tPremiumTransactionCode AS PremiumTransactionCode5, \n\tPremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate5, \n\tClassCode AS ClassCode5, \n\tPremiumTransactionExpirationDate AS PremiumTransactionExpirationDate5, \n\tPremiumTransactionBookedDate AS PremiumTransactionBookedDate5, \n\tReasonAmendedCode AS ReasonAmendedCode5, \n\tAgencyActualCommissionRate AS AgencyActualCommissionRate5, \n\tExposure AS Exposure5, \n\tBureauStatisticalUserLine AS BureauStatisticalUserLine5, \n\tStatisticalCodes AS StatisticalCodes5, \n\tPremiumTransactionAmount AS PremiumTransactionAmount5, \n\tFullTermPremium AS FullTermPremium5, \n\tPremiumMasterBureauInceptionDate AS PremiumMasterBureauInceptionDate5, \n\tPremiumMasterRiskAddress AS PremiumMasterRiskAddress5, \n\tPremiumMasterRiskCityState AS PremiumMasterRiskCityState5, \n\tPremiumMasterRenewalIndicator AS PremiumMasterRenewalIndicator5, \n\tPremiumMasterPremiumType AS PremiumMasterPremiumType5, \n\tPremiumMasterStatus AS PremiumMasterStatus5, \n\tpol_audit_frqncy AS pol_audit_frqncy5, \n\tRatingCoverageAKID, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tPremiumTransactionEnteredDate, \n\tPremiumMasterCustomerCareCommissionRate, \n\tPemiumMasterWrittenExposure, \n\tDeclaredEventFlag\n\tFROM Union_All_Part1_Pipelines\n\tWHERE TRUE\r\n\r\n--Below filter check has been removed as part of Limits, as we need to load the transactions with 0.0 premium\r\n--IIF(PremiumTransactionAmount5 = 0.0 AND FullTermPremium5 =0.0,FALSE,TRUE)\n),\nmplt_PremiumMasterStatisticalCodeDerivation AS (WITH\n\tLKP_Pif_43LD_for_AuditCode AS (\n\t\tSELECT\n\t\tpmd4d_frequency,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module,\n\t\tpmd4d_insurance_line\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.pmd4d_frequency as pmd4d_frequency, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module, A.pmd4d_insurance_line as pmd4d_insurance_line FROM \r\n\t\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_43ld_stage A\r\n\t\t\tWHERE A.pmd4d_segment_id = '43'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,pmd4d_insurance_line ORDER BY pmd4d_frequency DESC) = 1\n\t),\n\tLKP_PIF_03_for_CounterSign AS (\n\t\tSELECT\n\t\tcomments_area_Return,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.comments_reason_suspended + A.comments_area as comments_area_Return, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_03_stage A\r\n\t\t\twhere A.comments_reason_suspended = 'CS'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module ORDER BY comments_area_Return DESC) = 1\n\t),\n\tLKP_PIF_02_FOR_FIELDS AS (\n\t\tSELECT\n\t\tpif_number_installments_a,\n\t\tpol_sym,\n\t\tpol_num,\n\t\tpol_mod,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.pif_number_installments_a as pif_number_installments_a, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module \r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_02_stage A\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module ORDER BY pif_number_installments_a DESC) = 1\n\t),\n\tIN_PremiumMasterRecord AS (\n\t\t\n\t),\n\tEXP_Pre_StatCode_ops AS (\n\t\tSELECT\n\t\tSourceSystemID,\n\t\tAgencyAKID,\n\t\tPolicyAKID,\n\t\tContractCustomerAKID,\n\t\tRiskLocationAKID,\n\t\tPolicyCoverageAKID,\n\t\tStatisticalCoverageAKID,\n\t\tReinsuranceCoverageAKID,\n\t\tPremiumTransactionAKID,\n\t\tBureauStatisticalCodeAKID,\n\t\tPremiumTransactionCode,\n\t\tPremiumTransactionBookedDate,\n\t\tPolicyCoverageEffectiveDate,\n\t\tPolicyCoverageExpirationDate,\n\t\tPremiumTransactionEffectiveDate,\n\t\tPremiumTransactionExpirationDate,\n\t\tPremiumType AS PremiumMasterPremiumType,\n\t\tAgencyActualCommissionRate,\n\t\tExposure,\n\t\tStatisticalCodes,\n\t\tBureauInceptionDate AS PremiumMasterBureauInceptionDate,\n\t\tPremiumTransactionAmount,\n\t\tFullTermPremium,\n\t\tRiskAddress AS PremiumMasterRiskAddress,\n\t\tRiskCityState AS PremiumMasterRiskCityState,\n\t\tRenewalIndicator AS PremiumMasterRenewalIndicator,\n\t\tClassCode,\n\t\tTypeBureauCode,\n\t\t-- *INF*: LTRIM(RTRIM(TypeBureauCode))\r\n\t\t-- \r\n\t\t-- -- Type Bureau Code is transformed in the statistical code expression however it passes through unchanged to the target field\n\t\tLTRIM(RTRIM(TypeBureauCode)) AS v_type_bureau,\n\t\tMajorPerilCode,\n\t\tPremiumLoadSequence5,\n\t\t-- *INF*: DECODE(TRUE,IN( v_type_bureau,'AL','LP','AI','LI','RL'), '100',\r\n\t\t-- IN( v_type_bureau,'GS','GM','RG'),'400',\r\n\t\t-- IN( v_type_bureau,'WC','WP'),'500',\r\n\t\t-- IN( v_type_bureau,'GL','GI','GN','RQ'),'600',\r\n\t\t-- IN( v_type_bureau,'FF','FM','BF','BP','FT','FP'),'711',\r\n\t\t-- IN( v_type_bureau,'BD'),'722',\r\n\t\t-- IN( v_type_bureau,'BI','BT','RB','CR','C1','C2'),'800','N/A')\n\t\tDECODE(TRUE,\n\t\tIN(v_type_bureau, 'AL', 'LP', 'AI', 'LI', 'RL'), '100',\n\t\tIN(v_type_bureau, 'GS', 'GM', 'RG'), '400',\n\t\tIN(v_type_bureau, 'WC', 'WP'), '500',\n\t\tIN(v_type_bureau, 'GL', 'GI', 'GN', 'RQ'), '600',\n\t\tIN(v_type_bureau, 'FF', 'FM', 'BF', 'BP', 'FT', 'FP'), '711',\n\t\tIN(v_type_bureau, 'BD'), '722',\n\t\tIN(v_type_bureau, 'BI', 'BT', 'RB', 'CR', 'C1', 'C2'), '800',\n\t\t'N/A') AS v_BureauStatisticalLine,\n\t\tv_BureauStatisticalLine AS PremiumMasterBureauStatisticalLine,\n\t\tpol_key5,\n\t\tpol_sym,\n\t\tpol_num,\n\t\tpol_mod,\n\t\tInsuranceLine5,\n\t\t-- *INF*: IIF(InsuranceLine5='N/A','  ',LTRIM(RTRIM(InsuranceLine5)))\n\t\tIFF(InsuranceLine5 = 'N/A', '  ', LTRIM(RTRIM(InsuranceLine5))) AS ins_line,\n\t\tpif02_audit_code,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_43LD_FOR_AUDITCODE(pol_sym, pol_num, pol_mod, ins_line), 'N/A')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pmd4d_frequency, 'N/A') AS v_pif43ld_audit_code,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', IIF(ISNULL(v_pif43ld_audit_code),pif02_audit_code,v_pif43ld_audit_code),'N/A')\n\t\tIFF(SourceSystemID = 'PMS', IFF(v_pif43ld_audit_code IS NULL, pif02_audit_code, v_pif43ld_audit_code), 'N/A') AS AuditCode,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_03_FOR_COUNTERSIGN(pol_sym,pol_num,pol_mod), 'N/A')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.comments_area_Return, 'N/A') AS v_comments_area,\n\t\t-- *INF*: IIF(SUBSTR(v_comments_area,1,2)='CS',SUBSTR(v_comments_area,3,12),'')\n\t\tIFF(SUBSTR(v_comments_area, 1, 2) = 'CS', SUBSTR(v_comments_area, 3, 12), '') AS comments_cs,\n\t\tpol_eff_date5,\n\t\tpol_exp_date5,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_exp_date5, 'YYYY'))\n\t\tto_integer(TO_CHAR(pol_exp_date5, 'YYYY')) AS v_pif_exp_yr,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_exp_date5, 'MM'))\n\t\tto_integer(TO_CHAR(pol_exp_date5, 'MM')) AS v_pif_exp_mm,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_eff_date5, 'YYYY'))\n\t\tto_integer(TO_CHAR(pol_eff_date5, 'YYYY')) AS v_pif_eff_yr,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_eff_date5, 'MM'))\n\t\tto_integer(TO_CHAR(pol_eff_date5, 'MM')) AS v_pif_eff_mm,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_02_FOR_FIELDS(pol_sym,pol_num,pol_mod),'1')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_number_installments_a, '1') AS v_pif_installment_term,\n\t\t-- *INF*: TO_INTEGER(v_pif_installment_term)\n\t\tTO_INTEGER(v_pif_installment_term) AS v_pif_installment_term_n,\n\t\t-- *INF*:  ( v_pif_exp_yr * 12 + v_pif_exp_mm) - (v_pif_eff_yr * 12 + v_pif_eff_mm)\r\n\t\t-- \r\n\t\t-- --to_integer(DATE_DIFF(pol_exp_date5,pol_eff_date5,'MM'))\n\t\t( v_pif_exp_yr * 12 + v_pif_exp_mm ) - ( v_pif_eff_yr * 12 + v_pif_eff_mm ) AS v_calc_pol_term,\n\t\t-- *INF*: IIF(Pol_Term='999' or ISNULL(Pol_Term),IIF(v_calc_pol_term<1,1,v_calc_pol_term),to_integer(Pol_Term))\n\t\tIFF(Pol_Term = '999' OR Pol_Term IS NULL, IFF(v_calc_pol_term < 1, 1, v_calc_pol_term), to_integer(Pol_Term)) AS v_pol_term,\n\t\t-- *INF*: (to_integer(DATE_DIFF(PremiumTransactionEffectiveDate,pol_eff_date5,'MM')) / v_pif_installment_term_n) + 1\n\t\t( to_integer(DATE_DIFF(PremiumTransactionEffectiveDate, pol_eff_date5, 'MM')) / v_pif_installment_term_n ) + 1 AS v_calc_installments,\n\t\t-- *INF*: v_pif_eff_yr+TO_INTEGER((v_pif_installment_term_n * v_calc_installments)/12,TRUE)+1\n\t\tv_pif_eff_yr + TO_INTEGER(( v_pif_installment_term_n * v_calc_installments ) / 12, TRUE) + 1 AS v_calc_yr,\n\t\t-- *INF*: IIF(v_pif_installment_term_n <> 0,IIF(Pol_Term='0' OR Pol_Term='999',v_pif_exp_yr,\r\n\t\t-- \tIIF(v_calc_yr<v_pif_exp_yr,v_calc_yr,v_pif_exp_yr)),9999)\n\t\tIFF(v_pif_installment_term_n <> 0, IFF(Pol_Term = '0' OR Pol_Term = '999', v_pif_exp_yr, IFF(v_calc_yr < v_pif_exp_yr, v_calc_yr, v_pif_exp_yr)), 9999) AS v_PremiumMasterPolicyExpirationYear,\n\t\t-- *INF*: substr(to_char(v_PremiumMasterPolicyExpirationYear),3,2)\n\t\tsubstr(to_char(v_PremiumMasterPolicyExpirationYear), 3, 2) AS PremiumMasterPolicyExpirationYear,\n\t\t-- *INF*: to_char(v_pol_term)\n\t\tto_char(v_pol_term) AS PremiumMasterPolicyTerm,\n\t\t-- *INF*: IIF(IN(v_pif_installment_term,'0','999'),v_pif_installment_term,\r\n\t\t-- to_char(v_calc_installments))\n\t\tIFF(IN(v_pif_installment_term, '0', '999'), v_pif_installment_term, to_char(v_calc_installments)) AS PremiumMasterInstallmentNumber,\n\t\tRecordType AS PremiumMasterRecordType,\n\t\tBureauStatisticalUserLine5,\n\t\t-- *INF*: ltrim(rtrim(BureauStatisticalUserLine5))\r\n\t\t-- \r\n\t\t-- -- Product line is the first two bytes of the stat sarbreakdownline and saruserline fields\n\t\tltrim(rtrim(BureauStatisticalUserLine5)) AS ProductLine,\n\t\tSubLineCode,\n\t\tReasonAmendedCode,\n\t\tPol_Term,\n\t\tRatingCoverageAKId,\n\t\tRatingCoverageEffectiveDate,\n\t\tRatingCoverageExpirationDate,\n\t\tPremiumTransactionEnteredDate,\n\t\tPremiumMasterCustomerCareCommissionRate,\n\t\tWrittenExposure\n\t\tFROM IN_PremiumMasterRecord\n\t\tLEFT JOIN LKP_PIF_43LD_FOR_AUDITCODE LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line\n\t\tON LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_symbol = pol_sym\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_policy_number = pol_num\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_module = pol_mod\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pmd4d_insurance_line = ins_line\n\t\n\t\tLEFT JOIN LKP_PIF_03_FOR_COUNTERSIGN LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod\n\t\tON LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_symbol = pol_sym\n\t\tAND LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_policy_number = pol_num\n\t\tAND LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_module = pol_mod\n\t\n\t\tLEFT JOIN LKP_PIF_02_FOR_FIELDS LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod\n\t\tON LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_symbol = pol_sym\n\t\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_policy_number = pol_num\n\t\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_module = pol_mod\n\t\n\t),\n\tEXP_Transform_Statistical_Codes AS (\n\t\tSELECT\n\t\tStatisticalCodes AS statistical_code,\n\t\tMajorPerilCode AS major_peril,\n\t\tTypeBureauCode AS Type_Bureau,\n\t\tClassCode AS sar_class_code,\n\t\t-- *INF*: statistical_code\r\n\t\t-- \r\n\t\t-- --DECODE(TRUE, Type_Bureau = 'BE', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'BF', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RP' AND major_peril = '145', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RL' AND major_peril = '114', '  '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RL' AND major_peril = '119', '     '  || statistical_code,\r\n\t\t-- --statistical_code)\r\n\t\t-- \r\n\t\t-- ---- Had to introduce space at the begining of the field because of LTRIM(RTRIM)) to statistical codes in Temp_Policy_transaction Table.\n\t\tstatistical_code AS v_statistical_code,\n\t\t'D' AS v_stat_plan_id,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,1,1))=0,' ',SUBSTR(v_statistical_code,1,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 1, 1)) = 0, ' ', SUBSTR(v_statistical_code, 1, 1)) AS v_pos_1,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,2,1))=0,' ',SUBSTR(v_statistical_code,2,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 2, 1)) = 0, ' ', SUBSTR(v_statistical_code, 2, 1)) AS v_pos_2,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,3,1))=0,' ',SUBSTR(v_statistical_code,3,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 3, 1)) = 0, ' ', SUBSTR(v_statistical_code, 3, 1)) AS v_pos_3,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,4,1))=0,' ',SUBSTR(v_statistical_code,4,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 4, 1)) = 0, ' ', SUBSTR(v_statistical_code, 4, 1)) AS v_pos_4,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,5,1))=0,' ',SUBSTR(v_statistical_code,5,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 5, 1)) = 0, ' ', SUBSTR(v_statistical_code, 5, 1)) AS v_pos_5,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,6,1))=0,' ',SUBSTR(v_statistical_code,6,1))\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 6, 1)) = 0, ' ', SUBSTR(v_statistical_code, 6, 1)) AS v_pos_6,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,7,1))=0,' ',SUBSTR(v_statistical_code,7,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 7, 1)) = 0, ' ', SUBSTR(v_statistical_code, 7, 1)) AS v_pos_7,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,8,1))=0,' ',SUBSTR(v_statistical_code,8,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 8, 1)) = 0, ' ', SUBSTR(v_statistical_code, 8, 1)) AS v_pos_8,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,9,1))=0,' ',SUBSTR(v_statistical_code,9,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 9, 1)) = 0, ' ', SUBSTR(v_statistical_code, 9, 1)) AS v_pos_9,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,10,1))=0,' ',SUBSTR(v_statistical_code,10,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 10, 1)) = 0, ' ', SUBSTR(v_statistical_code, 10, 1)) AS v_pos_10,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,11,1))=0,' ',SUBSTR(v_statistical_code,11,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 11, 1)) = 0, ' ', SUBSTR(v_statistical_code, 11, 1)) AS v_pos_11,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,12,1))=0,' ',SUBSTR(v_statistical_code,12,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 12, 1)) = 0, ' ', SUBSTR(v_statistical_code, 12, 1)) AS v_pos_12,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,13,1))=0,' ',SUBSTR(v_statistical_code,13,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 13, 1)) = 0, ' ', SUBSTR(v_statistical_code, 13, 1)) AS v_pos_13,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,14,1))=0,' ',SUBSTR(v_statistical_code,14,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 14, 1)) = 0, ' ', SUBSTR(v_statistical_code, 14, 1)) AS v_pos_14,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,15,1))=0,' ',SUBSTR(v_statistical_code,15,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 15, 1)) = 0, ' ', SUBSTR(v_statistical_code, 15, 1)) AS v_pos_15,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,16,1))=0,' ',SUBSTR(v_statistical_code,16,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 16, 1)) = 0, ' ', SUBSTR(v_statistical_code, 16, 1)) AS v_pos_16,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,17,1))=0,' ',SUBSTR(v_statistical_code,17,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 17, 1)) = 0, ' ', SUBSTR(v_statistical_code, 17, 1)) AS v_pos_17,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,18,1))=0,' ',SUBSTR(v_statistical_code,18,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 18, 1)) = 0, ' ', SUBSTR(v_statistical_code, 18, 1)) AS v_pos_18,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,19,1))=0,' ',SUBSTR(v_statistical_code,19,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 19, 1)) = 0, ' ', SUBSTR(v_statistical_code, 19, 1)) AS v_pos_19,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,20,1))=0,' ',SUBSTR(v_statistical_code,20,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 20, 1)) = 0, ' ', SUBSTR(v_statistical_code, 20, 1)) AS v_pos_20,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,21,1))=0,' ',SUBSTR(v_statistical_code,21,1))\r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,21,1))=0,' ',SUBSTR(v_statistical_code,21,1))\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 21, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 21, 1)) AS v_pos_21,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,22,1))=0,' ',SUBSTR(v_statistical_code,22,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,22,1))=0,' ',SUBSTR(v_statistical_code,22,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 22, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 22, 1)) AS v_pos_22,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,23,1))=0,' ',SUBSTR(v_statistical_code,23,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,23,1))=0,' ',SUBSTR(v_statistical_code,23,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 23, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 23, 1)) AS v_pos_23,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,24,1))=0,' ',SUBSTR(v_statistical_code,24,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,24,1))=0,' ',SUBSTR(v_statistical_code,24,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 24, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 24, 1)) AS v_pos_24,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','{',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,25,1))=0,' ',SUBSTR(v_statistical_code,25,1))\r\n\t\t-- \r\n\t\t-- --- IN COBOL \"{\" represents a  +ve sign and \"}\" is -ve sign, since this is base rate for Type_Bureau RP is a sign field so COBOL creates \"{\". Replicating the COBOL logic.\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '{'\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,25,1))=0,' ',SUBSTR(v_statistical_code,25,1))\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '{',\n\t\tLENGTH(SUBSTR(v_statistical_code, 25, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 25, 1)) AS v_pos_25,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,26,1))=0,' ',SUBSTR(v_statistical_code,26,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 26, 1)) = 0, ' ', SUBSTR(v_statistical_code, 26, 1)) AS v_pos_26,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,27,1))=0,' ',SUBSTR(v_statistical_code,27,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 27, 1)) = 0, ' ', SUBSTR(v_statistical_code, 27, 1)) AS v_pos_27,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,28,1))=0,' ',SUBSTR(v_statistical_code,28,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 28, 1)) = 0, ' ', SUBSTR(v_statistical_code, 28, 1)) AS v_pos_28,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,29,1))=0,' ',SUBSTR(v_statistical_code,29,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 29, 1)) = 0, ' ', SUBSTR(v_statistical_code, 29, 1)) AS v_pos_29,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,30,1))=0,' ',SUBSTR(v_statistical_code,30,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 30, 1)) = 0, ' ', SUBSTR(v_statistical_code, 30, 1)) AS v_pos_30,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,31,1))=0,' ',SUBSTR(v_statistical_code,31,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 31, 1)) = 0, ' ', SUBSTR(v_statistical_code, 31, 1)) AS v_pos_31,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,32,1))=0,' ',SUBSTR(v_statistical_code,32,1))\r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 32, 1)) = 0, ' ', SUBSTR(v_statistical_code, 32, 1)) AS v_pos_32,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,33,1))=0,' ',SUBSTR(v_statistical_code,33,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 33, 1)) = 0, ' ', SUBSTR(v_statistical_code, 33, 1)) AS v_pos_33,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,34,1))=0,' ',SUBSTR(v_statistical_code,34,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 34, 1)) = 0, ' ', SUBSTR(v_statistical_code, 34, 1)) AS v_pos_34,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,35,1))=0,' ',SUBSTR(v_statistical_code,35,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 35, 1)) = 0, ' ', SUBSTR(v_statistical_code, 35, 1)) AS v_pos_35,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,36,1))=0,' ',SUBSTR(v_statistical_code,36,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 36, 1)) = 0, ' ', SUBSTR(v_statistical_code, 36, 1)) AS v_pos_36,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,37,1))=0,' ',SUBSTR(v_statistical_code,37,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 37, 1)) = 0, ' ', SUBSTR(v_statistical_code, 37, 1)) AS v_pos_37,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,38,1))=0,' ',SUBSTR(v_statistical_code,38,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 38, 1)) = 0, ' ', SUBSTR(v_statistical_code, 38, 1)) AS v_pos_38,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS Generic,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Code_AC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_AI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_26 || '       ' || v_pos_25 || v_pos_23  || v_pos_24  || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_26 || '       ' || v_pos_25 || v_pos_23 || v_pos_24 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 ) AS v_Stat_Codes_AL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10  || v_pos_11|| v_pos_20 || v_pos_21  || \r\n\t\t-- '             ' ||  v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19  )\r\n\t\t-- \r\n\t\t--  -----It has a Filler of 13 spaces\r\n\t\t-- --- I have checked this code this is fine\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_20 || v_pos_21 || '             ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 ) AS v_Stat_Codes_AN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 ||\r\n\t\t-- '      ' || v_pos_14 || v_pos_23  || v_pos_24  || '  '  ||  v_pos_26  || v_pos_27  || v_pos_28  || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || '      ' || v_pos_14 || v_pos_23 || v_pos_24 || '  ' || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 ) AS v_Stat_Codes_AP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_11 || v_pos_10 || \r\n\t\t--   v_pos_12 || v_pos_13 )\r\n\t\t-- \r\n\t\t-- --- Verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_11 || v_pos_10 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_A2,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_11 || v_pos_12 )\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_11 || v_pos_12 ) AS v_Stat_Codes_A3,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 ||\r\n\t\t-- '           '  ||  v_pos_22 || v_pos_29 || '  ' || v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28)\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || '           ' || v_pos_22 || v_pos_29 || '  ' || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 ) AS v_Stat_Codes_BB,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17  || v_pos_20  || v_pos_27  || v_pos_28  || v_pos_29 || '    ' ||v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26 )\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- -- Verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_20 || v_pos_27 || v_pos_28 || v_pos_29 || '    ' || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 ) AS v_Stat_Codes_BC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_BD,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 ||  v_pos_6 || v_pos_7 || '                    ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13)\r\n\t\t-- \r\n\t\t-- \r\n\t\t--  ---  Verified Logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || '                    ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_BE,\n\t\t-- *INF*: ('  '  || v_pos_4  || v_pos_5 || ' ' || v_pos_14 || '  ' || v_pos_15 || v_pos_16 || '   ' ||  v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || '     ' || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22 || '   ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --8/22/2011 - Added 2 spaces in the beginning. In COBOL, statitistical code field is initialised to spaces at the start of reformatting. If there is no code to move certain fields then the spaces stay as it is except other fileds are layed out over spaces.\r\n\t\t-- --- Verified the logic\r\n\t\t-- \n\t\t( '  ' || v_pos_4 || v_pos_5 || ' ' || v_pos_14 || '  ' || v_pos_15 || v_pos_16 || '   ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || '     ' || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || '   ' ) AS v_Stat_Codes_BF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_4  || v_pos_5)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_BP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 )\r\n\t\t-- \r\n\t\t-- --- Verified the logic\n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_BI,\n\t\t-- *INF*: v_pos_1\r\n\t\t-- \r\n\t\t-- -- verified the logic\n\t\tv_pos_1 AS v_Stat_Codes_BL,\n\t\t-- *INF*: (SUBSTR(sar_class_code,1,3) || '  ' || v_pos_18  ||  v_pos_19 || v_pos_1 ||  ' ' ||  v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 \r\n\t\t-- || '    ' ||  v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34 || v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28 || '   ' )\r\n\t\t-- \r\n\t\t-- --- Verfied the logic\n\t\t( SUBSTR(sar_class_code, 1, 3) || '  ' || v_pos_18 || v_pos_19 || v_pos_1 || ' ' || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || '    ' || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || '   ' ) AS v_Stat_Codes_BM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || '      '  ||  v_pos_8 || v_pos_9 || '           ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19)\r\n\t\t-- \r\n\t\t--  ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '      ' || v_pos_8 || v_pos_9 || '           ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 ) AS v_Stat_Codes_BT,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || '      '  || v_pos_9 || v_pos_10 || v_pos_17 || v_pos_18 ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || '      ' || v_pos_9 || v_pos_10 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 ) AS v_Stat_Codes_B2,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17)\r\n\t\t-- \r\n\t\t-- ----- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 ) AS v_Stat_Codes_CC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || \r\n\t\t--  v_pos_17 || v_pos_18  || ' ' ||  v_pos_20 || '              ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_17 || v_pos_18 || ' ' || v_pos_20 || '              ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_CF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- ---- Generic \r\n\t\t-- -- No Change from Input copybook to Output\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_CR,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_6 || v_pos_7 || ' '  || v_pos_9 || '  ' || v_pos_12 || ' ' || v_pos_14 || v_pos_15 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_6 || v_pos_7 || ' ' || v_pos_9 || '  ' || v_pos_12 || ' ' || v_pos_14 || v_pos_15 ) AS v_Stat_Codes_CI,\n\t\t-- *INF*: (v_pos_1 || v_pos_4  || v_pos_6 || v_pos_7 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_4 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_CL,\n\t\t-- *INF*: ('  ' || v_pos_1 || v_pos_2 || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( '  ' || v_pos_1 || v_pos_2 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_CP,\n\t\t-- *INF*: (v_pos_3 || v_pos_4  || v_pos_5 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_CN,\n\t\t-- *INF*: v_pos_1\r\n\t\t-- \r\n\t\t-- -----\n\t\tv_pos_1 AS v_Stat_Codes_EI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || '                   ' ||v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 19 spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_EQ,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 ) AS v_Stat_Codes_FC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 \r\n\t\t-- || '                  ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- ---- 18 Spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '                  ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_FF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_FM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 19 spaces\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_FO,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 ) AS v_Stat_Codes_FP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || ' ' || v_pos_3 || '  ' || v_pos_6 || v_pos_7 || '   ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 ||\r\n\t\t-- '       ' || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22 || '   ')\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || ' ' || v_pos_3 || '  ' || v_pos_6 || v_pos_7 || '   ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || '       ' || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || '   ' ) AS v_Stat_Codes_FT,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_12 || v_pos_13 || '                '  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- -- 17 Spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_12 || v_pos_13 || '                ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 ) AS v_Stat_Codes_GI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_4  || v_pos_5  || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || '      ' || v_pos_13 || v_pos_29  || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19 ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_4 || v_pos_5 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || '      ' || v_pos_13 || v_pos_29 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 ) AS v_Stat_Codes_GL,\n\t\t-- *INF*: (v_pos_1 || '           '  ||   v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || '           ' || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_GP,\n\t\t-- *INF*: (v_pos_1 || '                       ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_11 || v_pos_12 || v_pos_13)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 23 spaces\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\t( v_pos_1 || '                       ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_11 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_GS,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_18  ||  v_pos_19  \r\n\t\t-- || ' ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || '                ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 16 Spaces at the end\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_18 || v_pos_19 || ' ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || '                ' ) AS v_Stat_Codes_HO,\n\t\t-- *INF*: ('        ' || v_pos_11 || v_pos_12 || '               '  || v_pos_4  || v_pos_5  || v_pos_6  || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_14 || v_pos_15 || v_pos_17)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( '        ' || v_pos_11 || v_pos_12 || '               ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_14 || v_pos_15 || v_pos_17 ) AS v_Stat_Codes_IM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  || v_pos_24  || v_pos_25  || v_pos_26 || v_pos_28  || v_pos_29  || v_pos_30 || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 ) AS v_Stat_Codes_JR,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_ME,\n\t\t-- *INF*: (v_pos_1 || ' '  || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' ||  v_pos_11 || v_pos_12 || v_pos_13 || '  ' || v_pos_18  || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || '                ' ) \r\n\t\t-- \r\n\t\t-- --- need logic for stat-plan -id\r\n\t\t-- ---- 16 Spaces at the end\n\t\t( v_pos_1 || ' ' || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || '  ' || v_pos_18 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || '                ' ) AS v_Stat_Codes_MH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || '                  '  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || '                  ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_MI,\n\t\t-- *INF*: (v_pos_6 || v_pos_7 || v_pos_3 || v_pos_4  || v_pos_2 || '      ' || v_pos_1 || '        ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || ' ' ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24 )\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_6 || v_pos_7 || v_pos_3 || v_pos_4 || v_pos_2 || '      ' || v_pos_1 || '        ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || ' ' || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_ML,\n\t\t-- *INF*: -- No Stats code in the Output Copybook just the policy_type logic\n\t\t'' AS v_Stat_Codes_MP,\n\t\t-- *INF*: (SUBSTR(sar_class_code,1,3) || v_pos_17 || v_pos_18 ||  v_pos_19  || v_pos_1 || v_pos_2 || v_pos_3 || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || '   ' || '       ' || '      ' )\r\n\t\t-- \r\n\t\t-- --- Need to look at complete logic\r\n\t\t-- \n\t\t( SUBSTR(sar_class_code, 1, 3) || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_1 || v_pos_2 || v_pos_3 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '   ' || '       ' || '      ' ) AS v_Stat_Codes_M2,\n\t\t-- *INF*: ( '                 ' || v_stat_plan_id)\r\n\t\t-- \r\n\t\t-- ----verified the logic\n\t\t( '                 ' || v_stat_plan_id ) AS v_Stat_Codes_NE,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  ||  v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_19)\r\n\t\t-- \r\n\t\t-- --- Verified the Logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_19 ) AS v_Stat_Codes_PC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || v_pos_19  || v_pos_20  ||  v_pos_21)\r\n\t\t-- \r\n\t\t-- --- verified the logic\r\n\t\t--  \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || v_pos_19 || v_pos_20 || v_pos_21 ) AS v_Stat_Codes_PH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 ||  v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 ) AS v_Stat_Codes_PM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2)\r\n\t\t-- \r\n\t\t-- --- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_RB,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 ) AS v_Stat_Codes_RG,\n\t\t-- *INF*: (v_pos_1 || v_pos_2)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_RI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_RL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 ) AS v_Stat_Codes_RM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || ' ' || \r\n\t\t-- v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21 || v_pos_22 ||  v_pos_23  || v_pos_24)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_RN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29 || v_pos_30 || v_pos_31|| v_pos_33 || v_pos_34  ||  v_pos_35  || v_pos_32)\r\n\t\t-- \r\n\t\t-- ----\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_32 ) AS v_Stat_Codes_RP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_RQ,\n\t\t-- *INF*: (v_pos_1 || ' ' || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || ' ' || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 ) AS v_Stat_Codes_SM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_8 || v_pos_11 || v_pos_9)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_8 || v_pos_11 || v_pos_9 ) AS v_Stat_Codes_TH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 \r\n\t\t-- || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19\r\n\t\t-- ||  v_pos_22  ||  v_pos_23  || v_pos_24 || '       ' || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_22 || v_pos_23 || v_pos_24 || '       ' || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 ) AS v_Stat_Codes_VL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19 \r\n\t\t--  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30 || ' ' || v_pos_32  ||  v_pos_33\r\n\t\t-- || v_pos_34  ||  v_pos_35  || v_pos_36 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || ' ' || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 ) AS v_Stat_Codes_VP,\n\t\t-- *INF*: ('   ' || v_pos_4  || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12  || ' ' || v_pos_14 || v_pos_15 || '              ' \r\n\t\t-- || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34 || v_pos_35)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( '   ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || ' ' || v_pos_14 || v_pos_15 || '              ' || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 ) AS v_Stat_Codes_VN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  \r\n\t\t-- || ' ' || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || '    ' || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || ' ' || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || '    ' || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Codes_VC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31)\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 ) AS v_Stat_Codes_WC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_WP,\n\t\t-- *INF*: ('   ' || v_pos_1 || v_pos_2 || '            ' || v_stat_plan_id)\r\n\t\t-- \r\n\t\t-- --8/19/2011 Added v_stat_plan_id\r\n\t\t-- --- need to bring stat plan_id\r\n\t\t--  --- verified the logic but need stat plan id\r\n\t\t-- \n\t\t( '   ' || v_pos_1 || v_pos_2 || '            ' || v_stat_plan_id ) AS v_Stat_Codes_WL,\n\t\t-- *INF*: DECODE(Type_Bureau, 'AC', v_Stat_Code_AC, 'AI', v_Stat_Codes_AI, 'AL', v_Stat_Codes_AL, 'AN', v_Stat_Codes_AN, 'AP', v_Stat_Codes_AP, 'A2', v_Stat_Codes_A2, 'A3', v_Stat_Codes_A3, 'BB', v_Stat_Codes_BB, 'BC', v_Stat_Codes_BC, 'BD', v_Stat_Codes_BD, 'BE', v_Stat_Codes_BE, 'BF', v_Stat_Codes_BF, 'BP', v_Stat_Codes_BP, 'BI', v_Stat_Codes_BI, 'BL', v_Stat_Codes_BL, 'BM', v_Stat_Codes_BM, 'BT', v_Stat_Codes_BT, 'B2', v_Stat_Codes_B2, 'CC', v_Stat_Codes_CC, 'CF', v_Stat_Codes_CF, 'CI', v_Stat_Codes_CI, 'CL', v_Stat_Codes_CL, 'CN', v_Stat_Codes_CN, 'CP', v_Stat_Codes_CP, 'EI', v_Stat_Codes_EI, 'EQ', v_Stat_Codes_EQ, 'FC', v_Stat_Codes_FC, 'FF', v_Stat_Codes_FF, 'FM', v_Stat_Codes_FM, 'FO', v_Stat_Codes_FO, 'FP', v_Stat_Codes_FP, 'FT', v_Stat_Codes_FT, 'GI', v_Stat_Codes_GI, 'GL', v_Stat_Codes_GL, 'GP', v_Stat_Codes_GP, 'GS', v_Stat_Codes_GS, 'HO', v_Stat_Codes_HO, 'IM', v_Stat_Codes_IM, 'JR', v_Stat_Codes_JR, 'ME', v_Stat_Codes_ME, 'MH', v_Stat_Codes_MH, 'MI', v_Stat_Codes_MI, 'ML',\r\n\t\t-- v_Stat_Codes_ML, 'MP', v_Stat_Codes_MP, 'M2', v_Stat_Codes_M2, 'NE', v_Stat_Codes_NE, 'PC', v_Stat_Codes_PC, 'PH', v_Stat_Codes_PH, 'PM', v_Stat_Codes_PM, 'RB', v_Stat_Codes_RB, 'RG', v_Stat_Codes_RG, 'RI', v_Stat_Codes_RI, 'RL', v_Stat_Codes_RL, 'RM', v_Stat_Codes_RM, 'RN', v_Stat_Codes_RN, 'RP', v_Stat_Codes_RP, 'RQ', v_Stat_Codes_RQ, 'SM', v_Stat_Codes_SM, 'TH', v_Stat_Codes_TH, 'VL', v_Stat_Codes_VL, 'VP', v_Stat_Codes_VP, 'VN', v_Stat_Codes_VN, 'VC', v_Stat_Codes_VC, 'WC', v_Stat_Codes_WC, 'WL', v_Stat_Codes_WL,\r\n\t\t-- 'CR', v_Stat_Code_CR, 'PF', v_Stat_Code_PF,'PI', v_Stat_Code_PI, 'PL', v_Stat_Code_PL,\r\n\t\t-- 'WP', v_Stat_Code_WP,v_statistical_code) \n\t\tDECODE(Type_Bureau,\n\t\t'AC', v_Stat_Code_AC,\n\t\t'AI', v_Stat_Codes_AI,\n\t\t'AL', v_Stat_Codes_AL,\n\t\t'AN', v_Stat_Codes_AN,\n\t\t'AP', v_Stat_Codes_AP,\n\t\t'A2', v_Stat_Codes_A2,\n\t\t'A3', v_Stat_Codes_A3,\n\t\t'BB', v_Stat_Codes_BB,\n\t\t'BC', v_Stat_Codes_BC,\n\t\t'BD', v_Stat_Codes_BD,\n\t\t'BE', v_Stat_Codes_BE,\n\t\t'BF', v_Stat_Codes_BF,\n\t\t'BP', v_Stat_Codes_BP,\n\t\t'BI', v_Stat_Codes_BI,\n\t\t'BL', v_Stat_Codes_BL,\n\t\t'BM', v_Stat_Codes_BM,\n\t\t'BT', v_Stat_Codes_BT,\n\t\t'B2', v_Stat_Codes_B2,\n\t\t'CC', v_Stat_Codes_CC,\n\t\t'CF', v_Stat_Codes_CF,\n\t\t'CI', v_Stat_Codes_CI,\n\t\t'CL', v_Stat_Codes_CL,\n\t\t'CN', v_Stat_Codes_CN,\n\t\t'CP', v_Stat_Codes_CP,\n\t\t'EI', v_Stat_Codes_EI,\n\t\t'EQ', v_Stat_Codes_EQ,\n\t\t'FC', v_Stat_Codes_FC,\n\t\t'FF', v_Stat_Codes_FF,\n\t\t'FM', v_Stat_Codes_FM,\n\t\t'FO', v_Stat_Codes_FO,\n\t\t'FP', v_Stat_Codes_FP,\n\t\t'FT', v_Stat_Codes_FT,\n\t\t'GI', v_Stat_Codes_GI,\n\t\t'GL', v_Stat_Codes_GL,\n\t\t'GP', v_Stat_Codes_GP,\n\t\t'GS', v_Stat_Codes_GS,\n\t\t'HO', v_Stat_Codes_HO,\n\t\t'IM', v_Stat_Codes_IM,\n\t\t'JR', v_Stat_Codes_JR,\n\t\t'ME', v_Stat_Codes_ME,\n\t\t'MH', v_Stat_Codes_MH,\n\t\t'MI', v_Stat_Codes_MI,\n\t\t'ML', v_Stat_Codes_ML,\n\t\t'MP', v_Stat_Codes_MP,\n\t\t'M2', v_Stat_Codes_M2,\n\t\t'NE', v_Stat_Codes_NE,\n\t\t'PC', v_Stat_Codes_PC,\n\t\t'PH', v_Stat_Codes_PH,\n\t\t'PM', v_Stat_Codes_PM,\n\t\t'RB', v_Stat_Codes_RB,\n\t\t'RG', v_Stat_Codes_RG,\n\t\t'RI', v_Stat_Codes_RI,\n\t\t'RL', v_Stat_Codes_RL,\n\t\t'RM', v_Stat_Codes_RM,\n\t\t'RN', v_Stat_Codes_RN,\n\t\t'RP', v_Stat_Codes_RP,\n\t\t'RQ', v_Stat_Codes_RQ,\n\t\t'SM', v_Stat_Codes_SM,\n\t\t'TH', v_Stat_Codes_TH,\n\t\t'VL', v_Stat_Codes_VL,\n\t\t'VP', v_Stat_Codes_VP,\n\t\t'VN', v_Stat_Codes_VN,\n\t\t'VC', v_Stat_Codes_VC,\n\t\t'WC', v_Stat_Codes_WC,\n\t\t'WL', v_Stat_Codes_WL,\n\t\t'CR', v_Stat_Code_CR,\n\t\t'PF', v_Stat_Code_PF,\n\t\t'PI', v_Stat_Code_PI,\n\t\t'PL', v_Stat_Code_PL,\n\t\t'WP', v_Stat_Code_WP,\n\t\tv_statistical_code) AS V_Formatted_Stat_Codes,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,1,25)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 1, 25) AS Formatted_Stat_Codes,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,26,9)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 26, 9) AS Formatted_Stat_Codes_26_34,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,35,4)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 35, 4) AS Formatted_Stat_Codes_34_38,\n\t\t-- *INF*: DECODE(Type_Bureau,'AI', (v_pos_11 || v_pos_12),\r\n\t\t-- 'AL', (v_pos_15  ||  v_pos_16),\r\n\t\t-- 'AN',(v_pos_12 || v_pos_13),\r\n\t\t-- 'AP',(v_pos_12 || v_pos_13),\r\n\t\t-- 'A2',(v_pos_8 || v_pos_9),\r\n\t\t-- 'A3',(v_pos_8 || v_pos_9),\r\n\t\t-- 'BB',(v_pos_20 || v_pos_21),\r\n\t\t-- 'BC',(v_pos_18 || v_pos_19),\r\n\t\t-- 'BE', ( v_pos_4  || v_pos_5),\r\n\t\t-- 'BF', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'BP', (' '  ||  v_pos_2),\r\n\t\t-- 'BI', (v_pos_3 ||  v_pos_4),\r\n\t\t-- 'BL', (v_pos_3  ||  v_pos_4),\r\n\t\t-- 'BM',(v_pos_20 || v_pos_21),\r\n\t\t-- 'BT', (v_pos_11  ||  v_pos_12),\r\n\t\t-- 'B2',(v_pos_14  ||  v_pos_15),\r\n\t\t-- 'CF', (v_pos_8  || v_pos_9),\r\n\t\t-- 'CI',(v_pos_3  ||  v_pos_4),\r\n\t\t-- 'CN', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'CP', (v_pos_3  ||  v_pos_4),\r\n\t\t-- 'EI', (v_pos_2  ||  v_pos_3),\r\n\t\t-- 'EQ', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FF', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FI', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'FM', (v_pos_6  ||  v_pos_7),\r\n\t\t-- 'FO', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FP', (v_pos_2  ||  v_pos_3),\r\n\t\t-- 'FT', (v_pos_4  ||  v_pos_5),\r\n\t\t-- 'GI', (v_pos_10  ||  v_pos_11),\r\n\t\t-- 'GL',(v_pos_20 || v_pos_21),\r\n\t\t-- 'GM', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'GP', (v_pos_8  || v_pos_9),\r\n\t\t-- 'GS',(v_pos_3  ||  v_pos_4),\r\n\t\t-- 'II', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'IM', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'MI',(v_pos_10  ||  v_pos_11),\r\n\t\t-- 'ML', (v_pos_16  ||  v_pos_17),\r\n\t\t-- 'MP', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'M2', (v_pos_15  ||  v_pos_16),'  ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tDECODE(Type_Bureau,\n\t\t'AI', ( v_pos_11 || v_pos_12 ),\n\t\t'AL', ( v_pos_15 || v_pos_16 ),\n\t\t'AN', ( v_pos_12 || v_pos_13 ),\n\t\t'AP', ( v_pos_12 || v_pos_13 ),\n\t\t'A2', ( v_pos_8 || v_pos_9 ),\n\t\t'A3', ( v_pos_8 || v_pos_9 ),\n\t\t'BB', ( v_pos_20 || v_pos_21 ),\n\t\t'BC', ( v_pos_18 || v_pos_19 ),\n\t\t'BE', ( v_pos_4 || v_pos_5 ),\n\t\t'BF', ( v_pos_1 || v_pos_2 ),\n\t\t'BP', ( ' ' || v_pos_2 ),\n\t\t'BI', ( v_pos_3 || v_pos_4 ),\n\t\t'BL', ( v_pos_3 || v_pos_4 ),\n\t\t'BM', ( v_pos_20 || v_pos_21 ),\n\t\t'BT', ( v_pos_11 || v_pos_12 ),\n\t\t'B2', ( v_pos_14 || v_pos_15 ),\n\t\t'CF', ( v_pos_8 || v_pos_9 ),\n\t\t'CI', ( v_pos_3 || v_pos_4 ),\n\t\t'CN', ( v_pos_1 || v_pos_2 ),\n\t\t'CP', ( v_pos_3 || v_pos_4 ),\n\t\t'EI', ( v_pos_2 || v_pos_3 ),\n\t\t'EQ', ( v_pos_8 || v_pos_9 ),\n\t\t'FF', ( v_pos_8 || v_pos_9 ),\n\t\t'FI', ( v_pos_1 || v_pos_2 ),\n\t\t'FM', ( v_pos_6 || v_pos_7 ),\n\t\t'FO', ( v_pos_8 || v_pos_9 ),\n\t\t'FP', ( v_pos_2 || v_pos_3 ),\n\t\t'FT', ( v_pos_4 || v_pos_5 ),\n\t\t'GI', ( v_pos_10 || v_pos_11 ),\n\t\t'GL', ( v_pos_20 || v_pos_21 ),\n\t\t'GM', ( v_pos_1 || v_pos_2 ),\n\t\t'GP', ( v_pos_8 || v_pos_9 ),\n\t\t'GS', ( v_pos_3 || v_pos_4 ),\n\t\t'II', ( v_pos_1 || v_pos_2 ),\n\t\t'IM', ( v_pos_1 || v_pos_2 ),\n\t\t'MI', ( v_pos_10 || v_pos_11 ),\n\t\t'ML', ( v_pos_16 || v_pos_17 ),\n\t\t'MP', ( v_pos_1 || v_pos_2 ),\n\t\t'M2', ( v_pos_15 || v_pos_16 ),\n\t\t'  ') AS V_Policy_Type,\n\t\tV_Policy_Type AS Policy_Type,\n\t\t-- *INF*: SUBSTR(sar_class_code,1,3)\n\t\tSUBSTR(sar_class_code, 1, 3) AS v_sar_class_3,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- IN (Type_Bureau,'BP','FP','BF','FT'),V_Policy_Type)\n\t\tDECODE(TRUE,\n\t\tIN(Type_Bureau, 'BP', 'FP', 'BF', 'FT'), V_Policy_Type) AS v_type_policy_45,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- Type_Bureau='BP',v_pos_2,\r\n\t\t-- Type_Bureau='BF',v_pos_2,\r\n\t\t-- Type_Bureau='FP',' ',\r\n\t\t-- Type_Bureau='FT',' '  )\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'BP', v_pos_2,\n\t\tType_Bureau = 'BF', v_pos_2,\n\t\tType_Bureau = 'FP', ' ',\n\t\tType_Bureau = 'FT', ' ') AS v_type_of_bond_6,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t--  IN(Type_Bureau,'BP','BF','FP','FT'),v_sar_class_3  || v_type_policy_45 || v_type_of_bond_6,\r\n\t\t-- sar_class_code)\n\t\tDECODE(TRUE,\n\t\tIN(Type_Bureau, 'BP', 'BF', 'FP', 'FT'), v_sar_class_3 || v_type_policy_45 || v_type_of_bond_6,\n\t\tsar_class_code) AS v_hold_sar_class_code,\n\t\tv_hold_sar_class_code AS sar_class_code_out\n\t\tFROM EXP_Pre_StatCode_ops\n\t),\n\tEXP_Derive_CSP_Fields AS (\n\t\tSELECT\n\t\tFormatted_Stat_Codes_26_34,\n\t\t-- *INF*: SUBSTR(Formatted_Stat_Codes_26_34,1,3)\n\t\tSUBSTR(Formatted_Stat_Codes_26_34, 1, 3) AS csp_rate_mod,\n\t\t-- *INF*: SUBSTR(Formatted_Stat_Codes_26_34,4,3)\n\t\tSUBSTR(Formatted_Stat_Codes_26_34, 4, 3) AS csp_rate_dep\n\t\tFROM EXP_Transform_Statistical_Codes\n\t),\n\tEXP_PassThrough_Preoutput AS (\n\t\tSELECT\n\t\tEXP_Pre_StatCode_ops.SourceSystemID,\n\t\tEXP_Pre_StatCode_ops.AgencyAKID,\n\t\tEXP_Pre_StatCode_ops.PolicyAKID,\n\t\tEXP_Pre_StatCode_ops.ContractCustomerAKID,\n\t\tEXP_Pre_StatCode_ops.RiskLocationAKID,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.StatisticalCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.ReinsuranceCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionAKID,\n\t\tEXP_Pre_StatCode_ops.BureauStatisticalCodeAKID,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionCode,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionBookedDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPolicyExpirationYear,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPolicyTerm,\n\t\tEXP_Transform_Statistical_Codes.Policy_Type AS PremiumMasterBureauPolicyType,\n\t\tEXP_Pre_StatCode_ops.AuditCode AS PremiumMasterAuditCode,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPremiumType,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterBureauStatisticalLine,\n\t\tEXP_Pre_StatCode_ops.AgencyActualCommissionRate AS PremiumMasterAgencyCommissionRate,\n\t\tEXP_Pre_StatCode_ops.Exposure AS PremiumMasterExposure,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes AS PremiumMasterStatisticalCode1,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes_26_34 AS PremiumMasterStatisticalCode2,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes_34_38 AS PremiumMasterStatisticalCode3,\n\t\tEXP_Derive_CSP_Fields.csp_rate_mod AS PremiumMasterRateModifier,\n\t\tEXP_Derive_CSP_Fields.csp_rate_dep AS PremiumMasterRateDeparture,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterBureauInceptionDate,\n\t\tEXP_Pre_StatCode_ops.comments_cs,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionAmount AS PremiumMasterPremium,\n\t\tEXP_Pre_StatCode_ops.FullTermPremium AS PremiumMasterFullTermPremium,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRiskAddress,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRiskCityState,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRenewalIndicator,\n\t\tEXP_Pre_StatCode_ops.ClassCode AS PremiumMasterClassCode,\n\t\tEXP_Pre_StatCode_ops.TypeBureauCode AS TypeBureauCodeIn,\n\t\t-- *INF*: DECODE(TRUE,IN( substr(ProductLine,1,2),'87','88','89','90','91','92','93','94','95','96','97'), 'NB',TypeBureauCodeIn)\r\n\t\t-- \r\n\t\t-- -- Type Bureau Code is overriden to 'NB' for SAR-NON-REPORTING-SB-LINE (see comment)\n\t\tDECODE(TRUE,\n\t\tIN(substr(ProductLine, 1, 2), '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97'), 'NB',\n\t\tTypeBureauCodeIn) AS PremiumMasterTypeBureauCode,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRecordType,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterInstallmentNumber,\n\t\tEXP_Pre_StatCode_ops.ProductLine,\n\t\tEXP_Pre_StatCode_ops.SubLineCode,\n\t\tEXP_Pre_StatCode_ops.pol_key5 AS PolicyKey,\n\t\tEXP_Pre_StatCode_ops.ReasonAmendedCode AS PremiumMasterReasonAmendedCode,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageAKId,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionEnteredDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterCustomerCareCommissionRate,\n\t\tEXP_Pre_StatCode_ops.WrittenExposure AS PremiumMasterWrittenExposure\n\t\tFROM EXP_Derive_CSP_Fields\n\t\t -- Manually join with EXP_Pre_StatCode_ops\n\t\t -- Manually join with EXP_Transform_Statistical_Codes\n\t),\n\tOUT_PremiumMasterRecord AS (\n\t\tSELECT\n\t\tSourceSystemID, \n\t\tAgencyAKID, \n\t\tPolicyAKID, \n\t\tContractCustomerAKID, \n\t\tRiskLocationAKID, \n\t\tPolicyCoverageAKID, \n\t\tStatisticalCoverageAKID, \n\t\tReinsuranceCoverageAKID, \n\t\tPremiumTransactionAKID, \n\t\tBureauStatisticalCodeAKID, \n\t\tPremiumTransactionCode, \n\t\tPremiumTransactionBookedDate, \n\t\tPremiumMasterPolicyExpirationYear, \n\t\tPolicyCoverageEffectiveDate, \n\t\tPolicyCoverageExpirationDate, \n\t\tPremiumTransactionEffectiveDate, \n\t\tPremiumTransactionExpirationDate, \n\t\tPremiumMasterPolicyTerm, \n\t\tPremiumMasterBureauPolicyType, \n\t\tPremiumMasterAuditCode, \n\t\tPremiumMasterPremiumType, \n\t\tPremiumMasterBureauStatisticalLine, \n\t\tPremiumMasterAgencyCommissionRate, \n\t\tPremiumMasterExposure, \n\t\tPremiumMasterStatisticalCode1, \n\t\tPremiumMasterStatisticalCode2, \n\t\tPremiumMasterStatisticalCode3, \n\t\tPremiumMasterRateModifier, \n\t\tPremiumMasterRateDeparture, \n\t\tPremiumMasterBureauInceptionDate, \n\t\tcomments_cs, \n\t\tPremiumMasterPremium, \n\t\tPremiumMasterFullTermPremium, \n\t\tPremiumMasterRiskAddress, \n\t\tPremiumMasterRiskCityState, \n\t\tPremiumMasterRenewalIndicator, \n\t\tPremiumMasterClassCode, \n\t\tPremiumMasterTypeBureauCode, \n\t\tPremiumMasterRecordType, \n\t\tPremiumMasterInstallmentNumber, \n\t\tProductLine AS PremiumMasterProductLine, \n\t\tSubLineCode AS PremiumMasterSubLine, \n\t\tPolicyKey, \n\t\tPremiumMasterReasonAmendedCode, \n\t\tRatingCoverageAKId, \n\t\tRatingCoverageEffectiveDate, \n\t\tRatingCoverageExpirationDate, \n\t\tPremiumTransactionEnteredDate, \n\t\tPremiumMasterCustomerCareCommissionRate, \n\t\tPremiumMasterWrittenExposure\n\t\tFROM EXP_PassThrough_Preoutput\n\t),\n),\nEXP_Insert_DirectTransactions AS (\n\tSELECT\n\tmplt_PremiumMasterStatisticalCodeDerivation.SourceSystemID1 AS i_SourceSystemID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPolicyExpirationYear AS i_PremiumMasterPolicyExpirationYear,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionBookedDate1 AS i_PremiumMasterBookedDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionEffectiveDate1 AS i_PremiumMasterCoverageEffectiveDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionExpirationDate1 AS i_PremiumMasterCoverageExpirationDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPolicyTerm AS i_PremiumMasterPolicyTerm,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauStatisticalLine AS i_PremiumMasterBureauStatisticalLine,\n\tmplt_PremiumMasterStatisticalCodeDerivation.comments_cs AS i_comments_cs,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterCustomerCareCommissionRate1 AS i_PremiumMasterCustomerCareCommissionRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.AgencyAKID1 AS AgencyAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyAKID1 AS PolicyAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.ContractCustomerAKID1 AS ContractCustomerAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.RiskLocationAKID1 AS RiskLocationAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyCoverageAKID1 AS PolicyCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.StatisticalCoverageAKID1 AS StatisticalCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.ReinsuranceCoverageAKID1 AS ReinsuranceCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionAKID1 AS PremiumTransactionAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.BureauStatisticalCodeAKID1 AS BureauStatisticalCodeAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionCode1 AS PremiumMasterTransactionCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauPolicyType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterAuditCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPremiumType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterAgencyCommissionRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterExposure,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode1,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode2,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode3,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRateModifier,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRateDeparture,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauInceptionDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPremium,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterFullTermPremium,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRiskAddress,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRiskCityState,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRenewalIndicator,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRecordType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterClassCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterTypeBureauCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterProductLine,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterSubLine,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyKey,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterReasonAmendedCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.RatingCoverageAKId1 AS RatingCoverageAKId,\n\tmplt_PremiumMasterStatisticalCodeDerivation.RatingCoverageEffectiveDate1 AS RatingCoverageEffectiveDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.RatingCoverageExpirationDate1 AS RatingCoverageExpirationDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionEnteredDate1,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART(last_day(add_to_date(sysdate,'MM',@{pipeline().parameters.NO_OF_MONTHS})), 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\r\n\t-- \r\n\t-- -- Determine last day of month and change timestamp to 23:59:59\n\tSET_DATE_PART(SET_DATE_PART(SET_DATE_PART(last_day(add_to_date(sysdate, 'MM', @{pipeline().parameters.NO_OF_MONTHS})), 'HH', 23), 'MI', 59), 'SS', 59) AS o_PremiumMasterBookedDateOut,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\ti_SourceSystemID AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-1 AS o_DefaultID,\n\t-- *INF*: IIF(ISNULL(i_PremiumMasterPolicyExpirationYear),'N/A', i_PremiumMasterPolicyExpirationYear)\n\tIFF(i_PremiumMasterPolicyExpirationYear IS NULL, 'N/A', i_PremiumMasterPolicyExpirationYear) AS o_PremiumMasterPolicyExpirationYear,\n\t-- *INF*: IIF((IN(ltrim(rtrim(PremiumMasterTransactionCode)),'55','65')),TO_DATE('12/31/2099 00:00:00','MM/DD/YYYY HH24:MI:SS'),i_PremiumMasterCoverageEffectiveDate)\n\tIFF(( IN(ltrim(rtrim(PremiumMasterTransactionCode)), '55', '65') ), TO_DATE('12/31/2099 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), i_PremiumMasterCoverageEffectiveDate) AS o_PremiumMasterCoverageEffectiveDate,\n\t-- *INF*: IIF((IN(ltrim(rtrim(PremiumMasterTransactionCode)),'55','65')),TO_DATE('12/31/2099 00:00:00','MM/DD/YYYY HH24:MI:SS'),i_PremiumMasterCoverageExpirationDate)\n\tIFF(( IN(ltrim(rtrim(PremiumMasterTransactionCode)), '55', '65') ), TO_DATE('12/31/2099 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), i_PremiumMasterCoverageExpirationDate) AS o_PremiumMasterCoverageExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_PremiumMasterPolicyTerm), 'N/A', i_PremiumMasterPolicyTerm)\n\tIFF(i_PremiumMasterPolicyTerm IS NULL, 'N/A', i_PremiumMasterPolicyTerm) AS o_PremiumMasterPolicyTerm,\n\t-- *INF*: IIF(ISNULL(ltrim(rtrim(i_PremiumMasterBureauStatisticalLine))),'N/A',i_PremiumMasterBureauStatisticalLine)\n\tIFF(ltrim(rtrim(i_PremiumMasterBureauStatisticalLine)) IS NULL, 'N/A', i_PremiumMasterBureauStatisticalLine) AS o_PremiumMasterBureauStatisticalLine,\n\t-- *INF*: IIF(ISNULL(SUBSTR(i_comments_cs,1,1)),'   ',SUBSTR(i_comments_cs,1,1))\n\tIFF(SUBSTR(i_comments_cs, 1, 1) IS NULL, '   ', SUBSTR(i_comments_cs, 1, 1)) AS o_PremiumMasterCountersignAgencyType,\n\t-- *INF*: IIF(ISNULL(SUBSTR(i_comments_cs,2,7)),'   ',SUBSTR(i_comments_cs,2,7))\n\tIFF(SUBSTR(i_comments_cs, 2, 7) IS NULL, '   ', SUBSTR(i_comments_cs, 2, 7)) AS o_PremiumMasterCountersignAgencyCode,\n\t-- *INF*: IIF(ISNULL(SUBSTR(i_comments_cs,9,2)),'   ',SUBSTR(i_comments_cs,9,2))\n\tIFF(SUBSTR(i_comments_cs, 9, 2) IS NULL, '   ', SUBSTR(i_comments_cs, 9, 2)) AS o_PremiumMasterCountersignAgencyState,\n\t-- *INF*: IIF(ISNULL(SUBSTR(i_comments_cs,11,2)),'   ',REPLACECHR(0, SUBSTR(i_comments_cs,11,2), ',', '0'))\n\tIFF(SUBSTR(i_comments_cs, 11, 2) IS NULL, '   ', REPLACECHR(0, SUBSTR(i_comments_cs, 11, 2), ',', '0')) AS o_PremiumMasterCountersignAgencyRate,\n\t-- *INF*: IIF(LTRIM(RTRIM(PremiumMasterPremiumType)) = 'D','0','50')\n\tIFF(LTRIM(RTRIM(PremiumMasterPremiumType)) = 'D', '0', '50') AS o_TaxBoardPercentage,\n\t-- *INF*: IIF(ISNULL(i_PremiumMasterCustomerCareCommissionRate),1,i_PremiumMasterCustomerCareCommissionRate)\n\tIFF(i_PremiumMasterCustomerCareCommissionRate IS NULL, 1, i_PremiumMasterCustomerCareCommissionRate) AS o_PremiumMasterCustomerCareCommissionRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterWrittenExposure,\n\tFIL_Invalid_records.DeclaredEventFlag,\n\t-- *INF*: DECODE(DeclaredEventFlag, 'T', 1, 'F', 0,Null)\n\tDECODE(DeclaredEventFlag,\n\t'T', 1,\n\t'F', 0,\n\tNull) AS o_DeclaredEventFlag\n\tFROM FIL_Invalid_records\n\t -- Manually join with mplt_PremiumMasterStatisticalCodeDerivation\n),\nLKP_Sup_Type_Bureau_Code AS (\n\tSELECT\n\tStandardTypeBureauCode,\n\ttype_bureau_code\n\tFROM (\n\t\tSELECT \n\t\t\tStandardTypeBureauCode,\n\t\t\ttype_bureau_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_type_bureau_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_bureau_code ORDER BY StandardTypeBureauCode) = 1\n),\nPremiumMasterCalculation AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumMasterCalculation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, AgencyAKID, PolicyAKID, ContractCustomerAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, ReinsuranceCoverageAKID, PremiumTransactionAKID, BureauStatisticalCodeAKID, PremiumMasterTransactionCode, PremiumMasterPolicyExpirationYear, PremiumMasterCoverageEffectiveDate, PremiumMasterCoverageExpirationDate, PremiumMasterPolicyTerm, PremiumMasterBureauPolicyType, PremiumMasterAuditCode, PremiumMasterPremiumType, PremiumMasterTypeBureauCode, PremiumMasterBureauStatisticalLine, PremiumMasterProductLine, PremiumMasterAgencyCommissionRate, PremiumMasterClassCode, PremiumMasterExposure, PremiumMasterSubLine, PremiumMasterStatisticalCode1, PremiumMasterStatisticalCode2, PremiumMasterStatisticalCode3, PremiumMasterRateModifier, PremiumMasterRateDeparture, PremiumMasterBureauInceptionDate, PremiumMasterCountersignAgencyType, PremiumMasterCountersignAgencyCode, PremiumMasterCountersignAgencyState, PremiumMasterCountersignAgencyRate, PremiumMasterPremium, PremiumMasterFullTermPremium, TaxBoardPercentage, PremiumMasterRiskAddress, PremiumMasterRiskCityState, PremiumMasterRenewalIndicator, PremiumMasterRecordType, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, StagePremiumMasterPKID, PolicyKey, PremiumMasterRunDate, PremiumMasterReasonAmendedCode, PremiumTransactionEnteredDate, PremiumMasterCustomerCareCommissionRate, PremiumMasterWrittenExposure, DeclaredEventFlag)\n\tSELECT \n\tEXP_Insert_DirectTransactions.o_CurrentSnapshotFlag AS CURRENTSNAPSHOTFLAG, \n\tEXP_Insert_DirectTransactions.o_AuditID AS AUDITID, \n\tEXP_Insert_DirectTransactions.o_EffectiveDate AS EFFECTIVEDATE, \n\tEXP_Insert_DirectTransactions.o_ExpirationDate AS EXPIRATIONDATE, \n\tEXP_Insert_DirectTransactions.o_SourceSystemID AS SOURCESYSTEMID, \n\tEXP_Insert_DirectTransactions.o_CreatedDate AS CREATEDDATE, \n\tEXP_Insert_DirectTransactions.o_ModifiedDate AS MODIFIEDDATE, \n\tEXP_Insert_DirectTransactions.AGENCYAKID, \n\tEXP_Insert_DirectTransactions.POLICYAKID, \n\tEXP_Insert_DirectTransactions.CONTRACTCUSTOMERAKID, \n\tEXP_Insert_DirectTransactions.RISKLOCATIONAKID, \n\tEXP_Insert_DirectTransactions.POLICYCOVERAGEAKID, \n\tEXP_Insert_DirectTransactions.STATISTICALCOVERAGEAKID, \n\tEXP_Insert_DirectTransactions.REINSURANCECOVERAGEAKID, \n\tEXP_Insert_DirectTransactions.PREMIUMTRANSACTIONAKID, \n\tEXP_Insert_DirectTransactions.BUREAUSTATISTICALCODEAKID, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERTRANSACTIONCODE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterPolicyExpirationYear AS PREMIUMMASTERPOLICYEXPIRATIONYEAR, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCoverageEffectiveDate AS PREMIUMMASTERCOVERAGEEFFECTIVEDATE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCoverageExpirationDate AS PREMIUMMASTERCOVERAGEEXPIRATIONDATE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterPolicyTerm AS PREMIUMMASTERPOLICYTERM, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERBUREAUPOLICYTYPE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERAUDITCODE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERPREMIUMTYPE, \n\tLKP_Sup_Type_Bureau_Code.StandardTypeBureauCode AS PREMIUMMASTERTYPEBUREAUCODE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterBureauStatisticalLine AS PREMIUMMASTERBUREAUSTATISTICALLINE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERPRODUCTLINE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERAGENCYCOMMISSIONRATE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERCLASSCODE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTEREXPOSURE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERSUBLINE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERSTATISTICALCODE1, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERSTATISTICALCODE2, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERSTATISTICALCODE3, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRATEMODIFIER, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRATEDEPARTURE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERBUREAUINCEPTIONDATE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCountersignAgencyType AS PREMIUMMASTERCOUNTERSIGNAGENCYTYPE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCountersignAgencyCode AS PREMIUMMASTERCOUNTERSIGNAGENCYCODE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCountersignAgencyState AS PREMIUMMASTERCOUNTERSIGNAGENCYSTATE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCountersignAgencyRate AS PREMIUMMASTERCOUNTERSIGNAGENCYRATE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERPREMIUM, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERFULLTERMPREMIUM, \n\tEXP_Insert_DirectTransactions.o_TaxBoardPercentage AS TAXBOARDPERCENTAGE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRISKADDRESS, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRISKCITYSTATE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRENEWALINDICATOR, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERRECORDTYPE, \n\tEXP_Insert_DirectTransactions.RATINGCOVERAGEAKID, \n\tEXP_Insert_DirectTransactions.RATINGCOVERAGEEFFECTIVEDATE, \n\tEXP_Insert_DirectTransactions.RATINGCOVERAGEEXPIRATIONDATE, \n\tEXP_Insert_DirectTransactions.o_DefaultID AS STAGEPREMIUMMASTERPKID, \n\tEXP_Insert_DirectTransactions.POLICYKEY, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterBookedDateOut AS PREMIUMMASTERRUNDATE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERREASONAMENDEDCODE, \n\tEXP_Insert_DirectTransactions.PremiumTransactionEnteredDate1 AS PREMIUMTRANSACTIONENTEREDDATE, \n\tEXP_Insert_DirectTransactions.o_PremiumMasterCustomerCareCommissionRate AS PREMIUMMASTERCUSTOMERCARECOMMISSIONRATE, \n\tEXP_Insert_DirectTransactions.PREMIUMMASTERWRITTENEXPOSURE, \n\tEXP_Insert_DirectTransactions.o_DeclaredEventFlag AS DECLAREDEVENTFLAG\n\tFROM EXP_Insert_DirectTransactions\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244784"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893053"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542185"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 04:35:30"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 09:25:41"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "v2"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "-1"
            },
            "SOURCE_DATABASE_NAME2": {
                "type": "string",
                "defaultValue": "WC_STAGE"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}