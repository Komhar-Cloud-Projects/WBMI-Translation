{
    "name": "s_m_POL_DM_LOAD_PremiumMasterFact_WC_Commission",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_PremiumMasterFact_WC_Commission",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_PremiumMasterFact AS (\n\tSELECT \r\n\tAnnualStatementLineDimID\r\n\t,AnnualStatementLineProductCodeDimID\r\n\t,AgencyDimID\r\n\t,PolicyDimID\r\n\t,ContractCustomerDimID\r\n\t,RiskLocationDimID\r\n\t,ReinsuranceCoverageDimID\r\n\t,pmf.PremiumTransactionTypeDimID\r\n\t,EDWPremiumMasterCalculationPKID\r\n\t,EDWPremiumTransactionPKID\r\n\t,StagePremiumMasterPKID\r\n\t,PremiumMasterPolicyEffectiveDateID\r\n\t,PremiumMasterPolicyExpirationDateID\r\n\t,PremiumMasterCoverageEffectiveDateID\r\n\t,PremiumMasterCoverageExpirationDateID\r\n\t,PremiumMasterRunDateID\r\n\t,PremiumMasterPremium\r\n\t,pmf.InsuranceReferenceDimId\r\n\t,SalesDivisionDimId\r\n\t,pmf.InsuranceReferenceCoverageDimId\r\n\t,CoverageDetailDimId\r\n\t,i.PolicyOfferingAbbreviation\r\n\t,i.InsuranceSegmentAbbreviation\r\n\t,pmf.PolicyAuditDimId\r\n\t,pmf.PremiumTransactionEnteredDateId\r\n\t,p.pol_key, pmf.DeclaredEventFlag\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact pmf\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim cal on pmf.PremiumMasterRunDateID= cal.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.insurancereferencedim i on pmf.insurancereferencedimid = i.insurancereferencedimid\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p on p.pol_dim_id = pmf.policydimid\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionTypeDim ptd on pmf.PremiumTransactionTypeDimID = ptd.PremiumTransactionTypeDimID\r\n\twhere p.pol_sym='000'\r\n\tand i.PolicyOfferingAbbreviation = 'WC' and i.InsuranceSegmentAbbreviation in ( 'CL','POOL') and pmf.AuditID not in (-2,-3) \r\n\tand ptd.ReasonAmendedCode not in ('CWO','CWB')\r\n\tand cal.CalendarDate >= DATEADD(mm, DATEDIFF(mm,0,getdate()) + @{pipeline().parameters.NUM_OF_MONTH} ,0)\r\n\tand cal.CalendarDate < DATEADD(mm, DATEDIFF(mm,0,getdate()) + @{pipeline().parameters.NUM_OF_MONTH} +1 ,0)\r\n\tand i.InsuranceSegmentCode = '3'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\torder by p.pol_key, PremiumMasterFactID\n),\nAGG_Policy AS (\n\tSELECT\n\tAnnualStatementLineDimID,\n\tAnnualStatementLineProductCodeDimID,\n\tAgencyDimID,\n\tPolicyDimID,\n\tContractCustomerDimID,\n\tRiskLocationDimID,\n\tReinsuranceCoverageDimID,\n\tPremiumTransactionTypeDimID,\n\tEDWPremiumMasterCalculationPKID,\n\tEDWPremiumTransactionPKID,\n\tStagePremiumMasterPKID,\n\tPremiumMasterPolicyEffectiveDateID,\n\tPremiumMasterPolicyExpirationDateID,\n\tPremiumMasterCoverageEffectiveDateID,\n\tPremiumMasterCoverageExpirationDateID,\n\tPremiumMasterRunDateID,\n\tPremiumMasterPremium,\n\t-- *INF*: sum(PremiumMasterPremium)\n\tsum(PremiumMasterPremium) AS o_TotalAmountMonthly,\n\tInsuranceReferenceDimId,\n\tSalesDivisionDimId,\n\tInsuranceReferenceCoverageDimId,\n\tCoverageDetailDimId,\n\tPolicyOfferingAbbreviation,\n\tInsuranceSegmentAbbreviation,\n\tPolicyAuditDimId,\n\tPremiumTransactionEnteredDateId,\n\tpol_key,\n\tDeclaredEventFlag\n\tFROM SQ_PremiumMasterFact\n\tGROUP BY pol_key\n),\nLKP_GetHistoryAmount AS (\n\tSELECT\n\tHistoryAmount,\n\tpol_key\n\tFROM (\n\t\tselect \r\n\t\tp.pol_key as pol_key, \r\n\t\tsum(pmf.PremiumMasterPremium) as HistoryAmount\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact pmf\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim cd\r\n\t\ton pmf.PremiumMasterRunDateID = cd.clndr_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.insurancereferencedim i on pmf.insurancereferencedimid = i.insurancereferencedimid\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p on p.pol_dim_id = pmf.policydimid\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionTypeDim ptd on pmf.PremiumTransactionTypeDimID = ptd.PremiumTransactionTypeDimID\r\n\t\twhere p.pol_sym='000'\r\n\t\tand i.PolicyOfferingAbbreviation = 'WC' and i.InsuranceSegmentAbbreviation in ( 'CL','POOL')\r\n\t\tand ptd.ReasonAmendedCode not in ('CWO','CWB') and pmf.AuditID not in ( -2,-3)\r\n\t\tand cd.CalendarDate < DATEADD(mm, DATEDIFF(mm,0,getdate()) + @{pipeline().parameters.NUM_OF_MONTH} ,0)\r\n\t\tand i.InsuranceSegmentCode = '3'\r\n\t\tgroup by p.pol_key\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY HistoryAmount) = 1\n),\nEXP_CalculateCommission AS (\n\tSELECT\n\tLKP_GetHistoryAmount.HistoryAmount AS i_HistoryAmount,\n\tAGG_Policy.AnnualStatementLineDimID,\n\tAGG_Policy.AnnualStatementLineProductCodeDimID,\n\tAGG_Policy.AgencyDimID,\n\tAGG_Policy.PolicyDimID,\n\tAGG_Policy.ContractCustomerDimID,\n\tAGG_Policy.RiskLocationDimID,\n\tAGG_Policy.ReinsuranceCoverageDimID,\n\tAGG_Policy.PremiumTransactionTypeDimID,\n\tAGG_Policy.EDWPremiumMasterCalculationPKID,\n\tAGG_Policy.EDWPremiumTransactionPKID,\n\tAGG_Policy.StagePremiumMasterPKID,\n\tAGG_Policy.PremiumMasterPolicyEffectiveDateID,\n\tAGG_Policy.PremiumMasterPolicyExpirationDateID,\n\tAGG_Policy.PremiumMasterCoverageEffectiveDateID,\n\tAGG_Policy.PremiumMasterCoverageExpirationDateID,\n\tAGG_Policy.PremiumMasterRunDateID,\n\tAGG_Policy.o_TotalAmountMonthly AS i_TotalAmountMonthly,\n\tAGG_Policy.InsuranceReferenceDimId,\n\tAGG_Policy.SalesDivisionDimId,\n\tAGG_Policy.InsuranceReferenceCoverageDimId,\n\tAGG_Policy.CoverageDetailDimId,\n\tAGG_Policy.PolicyOfferingAbbreviation,\n\tAGG_Policy.InsuranceSegmentAbbreviation,\n\t-- *INF*: IIF(ISNULL(i_TotalAmountMonthly),0,i_TotalAmountMonthly)\n\tIFF(i_TotalAmountMonthly IS NULL, 0, i_TotalAmountMonthly) AS v_TotalAmountMonthly,\n\t-- *INF*: IIF(ISNULL(i_HistoryAmount),0,i_HistoryAmount)\n\tIFF(i_HistoryAmount IS NULL, 0, i_HistoryAmount) AS v_HistoryAmount,\n\tv_TotalAmountMonthly + v_HistoryAmount AS v_TotalAmount,\n\t5000 AS v_GraduatedAmount_CL,\n\t10000 AS v_GraduatedAmount_Pool,\n\t0.1 AS v_level1_rate_CL,\n\t0.04 AS v_level1_rate_Pool,\n\t0.05 AS v_level2_rate_CL,\n\t0.01 AS v_level2_rate_Pool,\n\t-- *INF*: DECODE(TRUE ,InsuranceSegmentAbbreviation='CL',\r\n\t-- DECODE(TRUE ,v_TotalAmount - v_HistoryAmount=0,0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount <= v_GraduatedAmount_CL, v_TotalAmount,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount  > v_GraduatedAmount_CL , v_GraduatedAmount_CL,\r\n\t-- v_TotalAmount>v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  > 0 , v_GraduatedAmount_CL - v_HistoryAmount,\r\n\t-- v_TotalAmount<=v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  <> 0 , v_TotalAmount - v_HistoryAmount,\r\n\t-- v_TotalAmount<v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  < 0 , v_TotalAmount - v_GraduatedAmount_CL,\r\n\t-- v_TotalAmount>=v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  <> 0 , 0,\r\n\t-- 0),\r\n\t-- InsuranceSegmentAbbreviation='Pool',\r\n\t-- DECODE(TRUE ,v_TotalAmount - v_HistoryAmount=0,0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount <= v_GraduatedAmount_Pool, v_TotalAmount,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount  > v_GraduatedAmount_Pool , v_GraduatedAmount_Pool,\r\n\t-- v_TotalAmount>v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  > 0 , v_GraduatedAmount_Pool - v_HistoryAmount,\r\n\t-- v_TotalAmount<=v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  <> 0 , v_TotalAmount - v_HistoryAmount,\r\n\t-- v_TotalAmount<v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  < 0 , v_TotalAmount - v_GraduatedAmount_Pool,\r\n\t-- v_TotalAmount>=v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  <> 0 , 0,\r\n\t-- 0),\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    InsuranceSegmentAbbreviation = 'CL', DECODE(\n\t        TRUE,\n\t        v_TotalAmount - v_HistoryAmount = 0, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount <= v_GraduatedAmount_CL, v_TotalAmount,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount > v_GraduatedAmount_CL, v_GraduatedAmount_CL,\n\t        v_TotalAmount > v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount > 0, v_GraduatedAmount_CL - v_HistoryAmount,\n\t        v_TotalAmount <= v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount <> 0, v_TotalAmount - v_HistoryAmount,\n\t        v_TotalAmount < v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount < 0, v_TotalAmount - v_GraduatedAmount_CL,\n\t        v_TotalAmount >= v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount <> 0, 0,\n\t        0\n\t    ),\n\t    InsuranceSegmentAbbreviation = 'Pool', DECODE(\n\t        TRUE,\n\t        v_TotalAmount - v_HistoryAmount = 0, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount <= v_GraduatedAmount_Pool, v_TotalAmount,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount > v_GraduatedAmount_Pool, v_GraduatedAmount_Pool,\n\t        v_TotalAmount > v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount > 0, v_GraduatedAmount_Pool - v_HistoryAmount,\n\t        v_TotalAmount <= v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount <> 0, v_TotalAmount - v_HistoryAmount,\n\t        v_TotalAmount < v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount < 0, v_TotalAmount - v_GraduatedAmount_Pool,\n\t        v_TotalAmount >= v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount <> 0, 0,\n\t        0\n\t    ),\n\t    0\n\t) AS v_PremiumForLevel1,\n\t-- *INF*: DECODE(TRUE ,InsuranceSegmentAbbreviation='CL',\r\n\t-- DECODE(TRUE ,v_TotalAmount - v_HistoryAmount=0,0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount <= v_GraduatedAmount_CL, 0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount  > v_GraduatedAmount_CL , v_TotalAmount -v_GraduatedAmount_CL,\r\n\t-- v_TotalAmount>v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  > 0 , v_TotalAmount-v_GraduatedAmount_CL,\r\n\t-- v_TotalAmount<=v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  <> 0 , 0,\r\n\t-- v_TotalAmount<v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  < 0 , v_GraduatedAmount_CL-v_HistoryAmount,\r\n\t-- v_TotalAmount>=v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount  <> 0 , v_TotalAmount-v_HistoryAmount,\r\n\t-- 0),\r\n\t-- InsuranceSegmentAbbreviation='Pool',\r\n\t-- DECODE(TRUE ,v_TotalAmount - v_HistoryAmount=0,0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount <= v_GraduatedAmount_Pool, 0,\r\n\t-- v_TotalAmount>0 AND v_HistoryAmount=0 AND v_TotalAmount-v_HistoryAmount  > v_GraduatedAmount_Pool , v_TotalAmount-v_GraduatedAmount_Pool,\r\n\t-- v_TotalAmount>v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  > 0 , v_TotalAmount-v_GraduatedAmount_Pool,\r\n\t-- v_TotalAmount<=v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  <> 0 , 0,\r\n\t-- v_TotalAmount<v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  < 0 , v_GraduatedAmount_Pool-v_HistoryAmount,\r\n\t-- v_TotalAmount>=v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount  <> 0 , v_TotalAmount - v_HistoryAmount,\r\n\t-- 0),\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    InsuranceSegmentAbbreviation = 'CL', DECODE(\n\t        TRUE,\n\t        v_TotalAmount - v_HistoryAmount = 0, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount <= v_GraduatedAmount_CL, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount > v_GraduatedAmount_CL, v_TotalAmount - v_GraduatedAmount_CL,\n\t        v_TotalAmount > v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount > 0, v_TotalAmount - v_GraduatedAmount_CL,\n\t        v_TotalAmount <= v_GraduatedAmount_CL AND v_HistoryAmount <= v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount <> 0, 0,\n\t        v_TotalAmount < v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount < 0, v_GraduatedAmount_CL - v_HistoryAmount,\n\t        v_TotalAmount >= v_GraduatedAmount_CL AND v_HistoryAmount > v_GraduatedAmount_CL AND v_TotalAmount - v_HistoryAmount <> 0, v_TotalAmount - v_HistoryAmount,\n\t        0\n\t    ),\n\t    InsuranceSegmentAbbreviation = 'Pool', DECODE(\n\t        TRUE,\n\t        v_TotalAmount - v_HistoryAmount = 0, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount <= v_GraduatedAmount_Pool, 0,\n\t        v_TotalAmount > 0 AND v_HistoryAmount = 0 AND v_TotalAmount - v_HistoryAmount > v_GraduatedAmount_Pool, v_TotalAmount - v_GraduatedAmount_Pool,\n\t        v_TotalAmount > v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount > 0, v_TotalAmount - v_GraduatedAmount_Pool,\n\t        v_TotalAmount <= v_GraduatedAmount_Pool AND v_HistoryAmount <= v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount <> 0, 0,\n\t        v_TotalAmount < v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount < 0, v_GraduatedAmount_Pool - v_HistoryAmount,\n\t        v_TotalAmount >= v_GraduatedAmount_Pool AND v_HistoryAmount > v_GraduatedAmount_Pool AND v_TotalAmount - v_HistoryAmount <> 0, v_TotalAmount - v_HistoryAmount,\n\t        0\n\t    ),\n\t    0\n\t) AS v_PremiumForLevel2,\n\t-- *INF*: DECODE(TRUE , InsuranceSegmentAbbreviation='CL',v_level1_rate_CL,\r\n\t-- InsuranceSegmentAbbreviation='Pool',v_level1_rate_Pool,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    InsuranceSegmentAbbreviation = 'CL', v_level1_rate_CL,\n\t    InsuranceSegmentAbbreviation = 'Pool', v_level1_rate_Pool,\n\t    0\n\t) AS v_CommissionRateLevel1,\n\t-- *INF*: DECODE(TRUE , InsuranceSegmentAbbreviation='CL',v_level2_rate_CL,\r\n\t-- InsuranceSegmentAbbreviation='Pool',v_level2_rate_Pool,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    InsuranceSegmentAbbreviation = 'CL', v_level2_rate_CL,\n\t    InsuranceSegmentAbbreviation = 'Pool', v_level2_rate_Pool,\n\t    0\n\t) AS v_CommissionRateLevel2,\n\tv_PremiumForLevel1 * v_CommissionRateLevel1 AS v_CommissionAmountLevel1,\n\tv_PremiumForLevel2 * v_CommissionRateLevel2 AS v_CommissionAmountLevel2,\n\tv_PremiumForLevel1 AS o_PremiumForLevel1,\n\tv_PremiumForLevel2 AS o_PremiumForLevel2,\n\tv_CommissionRateLevel1 AS o_CommissionRateLevel1,\n\tv_CommissionRateLevel2 AS o_CommissionRateLevel2,\n\tv_CommissionAmountLevel1 AS o_CommissionAmountLevel1,\n\tv_CommissionAmountLevel2 AS o_CommissionAmountLevel2,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART(last_day(add_to_date(sysdate,'MM',@{pipeline().parameters.NUM_OF_MONTH})), 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\n\tDATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))),last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP)))),DATEADD(HOUR,23-DATE_PART(HOUR,last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))),last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))),last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP)))),DATEADD(HOUR,23-DATE_PART(HOUR,last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))),last_day(DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTH},CURRENT_TIMESTAMP))))) AS v_PremiumMasterBookedDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(v_PremiumMasterBookedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_v_PremiumMasterBookedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumMasterBookedDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumMasterBookedDateID),v_PremiumMasterBookedDateID,-1)\r\n\t-- \n\tIFF(v_PremiumMasterBookedDateID IS NOT NULL, v_PremiumMasterBookedDateID, - 1) AS o_PremiumMasterBookedDateID,\n\tAGG_Policy.PolicyAuditDimId,\n\tAGG_Policy.PremiumTransactionEnteredDateId,\n\tAGG_Policy.pol_key,\n\tAGG_Policy.DeclaredEventFlag\n\tFROM AGG_Policy\n\tLEFT JOIN LKP_GetHistoryAmount\n\tON LKP_GetHistoryAmount.pol_key = AGG_Policy.pol_key\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_v_PremiumMasterBookedDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_v_PremiumMasterBookedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(v_PremiumMasterBookedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n),\nRTRTRANS AS (\n\tSELECT\n\tAnnualStatementLineDimID,\n\tAnnualStatementLineProductCodeDimID,\n\tAgencyDimID,\n\tPolicyDimID,\n\tContractCustomerDimID,\n\tRiskLocationDimID,\n\tReinsuranceCoverageDimID,\n\tPremiumTransactionTypeDimID,\n\tEDWPremiumMasterCalculationPKID,\n\tEDWPremiumTransactionPKID,\n\tStagePremiumMasterPKID,\n\tPremiumMasterPolicyEffectiveDateID,\n\tPremiumMasterPolicyExpirationDateID,\n\tPremiumMasterCoverageEffectiveDateID,\n\tPremiumMasterCoverageExpirationDateID,\n\tPremiumMasterRunDateID,\n\tInsuranceReferenceDimId,\n\tSalesDivisionDimId,\n\tInsuranceReferenceCoverageDimId,\n\tCoverageDetailDimId,\n\to_PremiumForLevel1,\n\to_PremiumForLevel2,\n\to_CommissionRateLevel1,\n\to_CommissionRateLevel2,\n\to_CommissionAmountLevel1,\n\to_CommissionAmountLevel2,\n\to_PremiumMasterBookedDateID,\n\tPolicyAuditDimId,\n\tPremiumTransactionEnteredDateId,\n\tpol_key,\n\tDeclaredEventFlag\n\tFROM EXP_CalculateCommission\n),\nRTRTRANS_CommissionLevel1 AS (SELECT * FROM RTRTRANS WHERE TRUE),\nRTRTRANS_CommissionLevel2 AS (SELECT * FROM RTRTRANS WHERE TRUE),\nFIL_Level1 AS (\n\tSELECT\n\tAnnualStatementLineDimID AS AnnualStatementLineDimID1, \n\tAnnualStatementLineProductCodeDimID AS AnnualStatementLineProductCodeDimID1, \n\tAgencyDimID AS AgencyDimID1, \n\tPolicyDimID AS PolicyDimID1, \n\tContractCustomerDimID AS ContractCustomerDimID1, \n\tRiskLocationDimID AS RiskLocationDimID1, \n\tReinsuranceCoverageDimID AS ReinsuranceCoverageDimID1, \n\tPremiumTransactionTypeDimID AS PremiumTransactionTypeDimID1, \n\tEDWPremiumMasterCalculationPKID AS EDWPremiumMasterCalculationPKID1, \n\tEDWPremiumTransactionPKID AS EDWPremiumTransactionPKID1, \n\tStagePremiumMasterPKID AS StagePremiumMasterPKID1, \n\tPremiumMasterPolicyEffectiveDateID AS PremiumMasterPolicyEffectiveDateID1, \n\tPremiumMasterPolicyExpirationDateID AS PremiumMasterPolicyExpirationDateID1, \n\tPremiumMasterCoverageEffectiveDateID AS PremiumMasterCoverageEffectiveDateID1, \n\tPremiumMasterCoverageExpirationDateID AS PremiumMasterCoverageExpirationDateID1, \n\tPremiumMasterRunDateID AS PremiumMasterRunDateID1, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId1, \n\tSalesDivisionDimId AS SalesDivisionDimId1, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId1, \n\tCoverageDetailDimId AS CoverageDetailDimId1, \n\to_PremiumForLevel AS o_PremiumForLevel11, \n\to_CommissionRateLevel AS o_CommissionRateLevel11, \n\to_CommissionAmountLevel AS o_CommissionAmountLevel11, \n\to_PremiumMasterBookedDateID AS o_PremiumMasterBookedDateID2, \n\tPolicyAuditDimId AS PolicyAuditDimId1, \n\tPremiumTransactionEnteredDateId AS PremiumTransactionEnteredDateId1, \n\tpol_key AS pol_key1, \n\tDeclaredEventFlag AS DeclaredEventFlag1\n\tFROM RTRTRANS_CommissionLevel1\n\tWHERE o_PremiumForLevel11<>0\n),\nSEQ_EDWPremiumMasterCalculationPKID AS (\n\tCREATE SEQUENCE SEQ_EDWPremiumMasterCalculationPKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Level1 AS (\n\tSELECT\n\tAnnualStatementLineDimID1,\n\tAnnualStatementLineProductCodeDimID1,\n\tAgencyDimID1,\n\tPolicyDimID1,\n\tContractCustomerDimID1,\n\tRiskLocationDimID1,\n\tReinsuranceCoverageDimID1,\n\tPremiumTransactionTypeDimID1,\n\tSEQ_EDWPremiumMasterCalculationPKID.NEXTVAL AS EDWPremiumMasterCalculationPKID1,\n\t-EDWPremiumMasterCalculationPKID1 AS o_EDWPremiumMasterCalculationPKID1,\n\tEDWPremiumTransactionPKID1,\n\tStagePremiumMasterPKID1,\n\tPremiumMasterPolicyEffectiveDateID1,\n\tPremiumMasterPolicyExpirationDateID1,\n\tPremiumMasterCoverageEffectiveDateID1,\n\tPremiumMasterCoverageExpirationDateID1,\n\tPremiumMasterRunDateID1,\n\tInsuranceReferenceDimId1,\n\tSalesDivisionDimId1,\n\tInsuranceReferenceCoverageDimId1,\n\tCoverageDetailDimId1,\n\to_PremiumForLevel11,\n\to_CommissionRateLevel11,\n\to_CommissionAmountLevel11,\n\to_PremiumMasterBookedDateID2,\n\t-2 AS o_AuditID1,\n\tPolicyAuditDimId1,\n\tPremiumTransactionEnteredDateId1,\n\tpol_key1,\n\tDeclaredEventFlag1\n\tFROM FIL_Level1\n),\nFIL_Level2 AS (\n\tSELECT\n\tAnnualStatementLineDimID AS AnnualStatementLineDimID3, \n\tAnnualStatementLineProductCodeDimID AS AnnualStatementLineProductCodeDimID3, \n\tAgencyDimID AS AgencyDimID3, \n\tPolicyDimID AS PolicyDimID3, \n\tContractCustomerDimID AS ContractCustomerDimID3, \n\tRiskLocationDimID AS RiskLocationDimID3, \n\tReinsuranceCoverageDimID AS ReinsuranceCoverageDimID3, \n\tPremiumTransactionTypeDimID AS PremiumTransactionTypeDimID3, \n\tEDWPremiumMasterCalculationPKID AS EDWPremiumMasterCalculationPKID3, \n\tEDWPremiumTransactionPKID AS EDWPremiumTransactionPKID3, \n\tStagePremiumMasterPKID AS StagePremiumMasterPKID3, \n\tPremiumMasterPolicyEffectiveDateID AS PremiumMasterPolicyEffectiveDateID3, \n\tPremiumMasterPolicyExpirationDateID AS PremiumMasterPolicyExpirationDateID3, \n\tPremiumMasterCoverageEffectiveDateID AS PremiumMasterCoverageEffectiveDateID3, \n\tPremiumMasterCoverageExpirationDateID AS PremiumMasterCoverageExpirationDateID3, \n\tPremiumMasterRunDateID AS PremiumMasterRunDateID3, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId3, \n\tSalesDivisionDimId AS SalesDivisionDimId3, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId3, \n\tCoverageDetailDimId AS CoverageDetailDimId3, \n\to_PremiumForLevel2 AS o_PremiumForLevel23, \n\to_CommissionRateLevel2 AS o_CommissionRateLevel23, \n\to_CommissionAmountLevel2 AS o_CommissionAmountLevel23, \n\to_PremiumMasterBookedDateID AS o_PremiumMasterBookedDateID2, \n\tPolicyAuditDimId AS PolicyAuditDimId3, \n\tPremiumTransactionEnteredDateId AS PremiumTransactionEnteredDateId3, \n\tpol_key AS pol_key3, \n\tDeclaredEventFlag AS DeclaredEventFlag3\n\tFROM RTRTRANS_CommissionLevel2\n\tWHERE o_PremiumForLevel23  <> 0\n),\nEXP_Level2 AS (\n\tSELECT\n\tAnnualStatementLineDimID3,\n\tAnnualStatementLineProductCodeDimID3,\n\tAgencyDimID3,\n\tPolicyDimID3,\n\tContractCustomerDimID3,\n\tRiskLocationDimID3,\n\tReinsuranceCoverageDimID3,\n\tPremiumTransactionTypeDimID3,\n\tSEQ_EDWPremiumMasterCalculationPKID.NEXTVAL AS EDWPremiumMasterCalculationPKID3,\n\t-EDWPremiumMasterCalculationPKID3 AS o_EDWPremiumMasterCalculationPKID3,\n\tEDWPremiumTransactionPKID3,\n\tStagePremiumMasterPKID3,\n\tPremiumMasterPolicyEffectiveDateID3,\n\tPremiumMasterPolicyExpirationDateID3,\n\tPremiumMasterCoverageEffectiveDateID3,\n\tPremiumMasterCoverageExpirationDateID3,\n\tPremiumMasterRunDateID3,\n\tInsuranceReferenceDimId3,\n\tSalesDivisionDimId3,\n\tInsuranceReferenceCoverageDimId3,\n\tCoverageDetailDimId3,\n\to_PremiumForLevel23,\n\to_CommissionRateLevel23,\n\to_CommissionAmountLevel23,\n\to_PremiumMasterBookedDateID2,\n\t-3 AS o_AuditID2,\n\tPolicyAuditDimId3,\n\tPremiumTransactionEnteredDateId3,\n\tpol_key3,\n\tDeclaredEventFlag3\n\tFROM FIL_Level2\n),\nUnion_Level1_Level2 AS (\n\tSELECT AnnualStatementLineDimID1, AnnualStatementLineProductCodeDimID1, AgencyDimID1, PolicyDimID1, ContractCustomerDimID1, RiskLocationDimID1, ReinsuranceCoverageDimID1, PremiumTransactionTypeDimID1, o_EDWPremiumMasterCalculationPKID1 AS EDWPremiumMasterCalculationPKID1, EDWPremiumTransactionPKID1, StagePremiumMasterPKID1, PremiumMasterPolicyEffectiveDateID1, PremiumMasterPolicyExpirationDateID1, PremiumMasterCoverageEffectiveDateID1, PremiumMasterCoverageExpirationDateID1, PremiumMasterRunDateID1, InsuranceReferenceDimId1, SalesDivisionDimId1, InsuranceReferenceCoverageDimId1, CoverageDetailDimId1, o_PremiumForLevel11, o_CommissionRateLevel11, o_CommissionAmountLevel11, o_PremiumMasterBookedDateID2 AS o_PremiumMasterBookedDateID, o_AuditID1 AS o_AuditID, PolicyAuditDimId1, PremiumTransactionEnteredDateId1, pol_key1, DeclaredEventFlag1 AS DeclaredEventFlag\n\tFROM EXP_Level1\n\tUNION\n\tSELECT AnnualStatementLineDimID3 AS AnnualStatementLineDimID1, AnnualStatementLineProductCodeDimID3 AS AnnualStatementLineProductCodeDimID1, AgencyDimID3 AS AgencyDimID1, PolicyDimID3 AS PolicyDimID1, ContractCustomerDimID3 AS ContractCustomerDimID1, RiskLocationDimID3 AS RiskLocationDimID1, ReinsuranceCoverageDimID3 AS ReinsuranceCoverageDimID1, PremiumTransactionTypeDimID3 AS PremiumTransactionTypeDimID1, o_EDWPremiumMasterCalculationPKID3 AS EDWPremiumMasterCalculationPKID1, EDWPremiumTransactionPKID3 AS EDWPremiumTransactionPKID1, StagePremiumMasterPKID3 AS StagePremiumMasterPKID1, PremiumMasterPolicyEffectiveDateID3 AS PremiumMasterPolicyEffectiveDateID1, PremiumMasterPolicyExpirationDateID3 AS PremiumMasterPolicyExpirationDateID1, PremiumMasterCoverageEffectiveDateID3 AS PremiumMasterCoverageEffectiveDateID1, PremiumMasterCoverageExpirationDateID3 AS PremiumMasterCoverageExpirationDateID1, PremiumMasterRunDateID3 AS PremiumMasterRunDateID1, InsuranceReferenceDimId3 AS InsuranceReferenceDimId1, SalesDivisionDimId3 AS SalesDivisionDimId1, InsuranceReferenceCoverageDimId3 AS InsuranceReferenceCoverageDimId1, CoverageDetailDimId3 AS CoverageDetailDimId1, o_PremiumForLevel23 AS o_PremiumForLevel11, o_CommissionRateLevel23 AS o_CommissionRateLevel11, o_CommissionAmountLevel23 AS o_CommissionAmountLevel11, o_PremiumMasterBookedDateID2 AS o_PremiumMasterBookedDateID, o_AuditID2 AS o_AuditID, PolicyAuditDimId3 AS PolicyAuditDimId1, PremiumTransactionEnteredDateId3 AS PremiumTransactionEnteredDateId1, pol_key3 AS pol_key1, DeclaredEventFlag3 AS DeclaredEventFlag\n\tFROM EXP_Level2\n),\nEXP_format AS (\n\tSELECT\n\tAnnualStatementLineDimID1 AS AnnualStatementLineDimID,\n\tAnnualStatementLineProductCodeDimID1 AS AnnualStatementLineProductCodeDimID,\n\tAgencyDimID1 AS AgencyDimID,\n\tPolicyDimID1 AS PolicyDimID,\n\tContractCustomerDimID1 AS ContractCustomerDimID,\n\tRiskLocationDimID1 AS RiskLocationDimID,\n\tReinsuranceCoverageDimID1 AS ReinsuranceCoverageDimID,\n\tPremiumTransactionTypeDimID1 AS PremiumTransactionTypeDimID,\n\tEDWPremiumMasterCalculationPKID1 AS EDWPremiumMasterCalculationPKID,\n\tEDWPremiumTransactionPKID1 AS EDWPremiumTransactionPKID,\n\tStagePremiumMasterPKID1 AS StagePremiumMasterPKID,\n\tPremiumMasterPolicyEffectiveDateID1 AS PremiumMasterPolicyEffectiveDateID,\n\tPremiumMasterPolicyExpirationDateID1 AS PremiumMasterPolicyExpirationDateID,\n\tPremiumMasterCoverageEffectiveDateID1 AS PremiumMasterCoverageEffectiveDateID,\n\tPremiumMasterCoverageExpirationDateID1 AS PremiumMasterCoverageExpirationDateID,\n\tPremiumMasterRunDateID1 AS PremiumMasterRunDateID,\n\tInsuranceReferenceDimId1 AS InsuranceReferenceDimId,\n\tSalesDivisionDimId1 AS SalesDivisionDimId,\n\tInsuranceReferenceCoverageDimId1 AS InsuranceReferenceCoverageDimId,\n\tCoverageDetailDimId1 AS CoverageDetailDimId,\n\t0 AS PremiumMasterPremium,\n\to_CommissionRateLevel11 AS o_CommissionRateLevel1,\n\to_CommissionAmountLevel11 AS o_CommissionAmountLevel1,\n\to_PremiumMasterBookedDateID AS o_PremiumMasterRunDateID,\n\to_AuditID,\n\t0 AS PremiumMasterFullTermPremium,\n\t0 AS PremiumMasterDirectWrittenPremium,\n\t0 AS PremiumMasterCededWrittenPremium,\n\t0 AS PremiumMasterNetWrittenPremium,\n\t0 AS PremiumMasterAgencyCededWrittenCommission,\n\to_CommissionAmountLevel1 AS PremiumMasterAgencyNetWrittenCommission,\n\t0 AS PremiumMasterAuditPremium,\n\t0 AS PremiumMasterReturnedPremium,\n\t0 AS PremiumMasterCollectionWriteOffPremium,\n\t0 AS ExposureAmount,\n\tPolicyAuditDimId1 AS PolicyAuditDimId,\n\tPremiumTransactionEnteredDateId1 AS PremiumTransactionEnteredDateId,\n\t0 AS CreditDirectWrittenPremium,\n\t0 AS DebitDirectWrittenPremium,\n\tpol_key1,\n\tDeclaredEventFlag,\n\t-- *INF*: DECODE(DeclaredEventFlag, 'T', 1, 'F', 0,Null)\n\tDECODE(\n\t    DeclaredEventFlag,\n\t    'T', 1,\n\t    'F', 0,\n\t    Null\n\t) AS o_DeclaredEventFlag\n\tFROM Union_Level1_Level2\n),\nLKP_PremiumMasterFact AS (\n\tSELECT\n\tPremiumMasterFactID,\n\tPremiumMasterAgencyDirectWrittenCommission,\n\tPremiumMasterAgencyCommissionRate,\n\tIN_PolicyKey,\n\tIN_PremiumMasterRunDateID,\n\tIN_AuditID,\n\tPolicyKey,\n\tAuditID,\n\tPremiumMasterRunDateID\n\tFROM (\n\t\tselect \r\n\t\tp.pol_key as PolicyKey,\r\n\t\tf.PremiumMasterRunDateID as PremiumMasterRunDateID,\r\n\t\tf.AuditId as AuditId,\r\n\t\tf.PremiumMasterFactID as PremiumMasterFactID,\r\n\t\tf.PremiumMasterAgencyDirectWrittenCommission as PremiumMasterAgencyDirectWrittenCommission,\r\n\t\tf.PremiumMasterAgencyCommissionRate as PremiumMasterAgencyCommissionRate\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact f\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p\r\n\t\ton f.PolicyDimId=p.pol_dim_id\r\n\t\twhere f.auditId in (-2,-3)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,AuditID,PremiumMasterRunDateID ORDER BY PremiumMasterFactID) = 1\n),\nRTRTRANS1 AS (\n\tSELECT\n\tEXP_format.AnnualStatementLineDimID,\n\tEXP_format.AnnualStatementLineProductCodeDimID,\n\tEXP_format.AgencyDimID,\n\tEXP_format.PolicyDimID,\n\tEXP_format.ContractCustomerDimID,\n\tEXP_format.RiskLocationDimID,\n\tEXP_format.ReinsuranceCoverageDimID,\n\tEXP_format.PremiumTransactionTypeDimID,\n\tEXP_format.EDWPremiumMasterCalculationPKID,\n\tEXP_format.EDWPremiumTransactionPKID,\n\tEXP_format.StagePremiumMasterPKID,\n\tEXP_format.PremiumMasterPolicyEffectiveDateID,\n\tEXP_format.PremiumMasterPolicyExpirationDateID,\n\tEXP_format.PremiumMasterCoverageEffectiveDateID,\n\tEXP_format.PremiumMasterCoverageExpirationDateID,\n\tEXP_format.InsuranceReferenceDimId,\n\tEXP_format.SalesDivisionDimId,\n\tEXP_format.InsuranceReferenceCoverageDimId,\n\tEXP_format.CoverageDetailDimId,\n\tEXP_format.PremiumMasterPremium,\n\tEXP_format.o_CommissionRateLevel1,\n\tEXP_format.o_CommissionAmountLevel1,\n\tEXP_format.o_PremiumMasterRunDateID,\n\tEXP_format.o_AuditID,\n\tEXP_format.PremiumMasterFullTermPremium,\n\tEXP_format.PremiumMasterDirectWrittenPremium,\n\tEXP_format.PremiumMasterCededWrittenPremium,\n\tEXP_format.PremiumMasterNetWrittenPremium,\n\tEXP_format.PremiumMasterAgencyCededWrittenCommission,\n\tEXP_format.PremiumMasterAgencyNetWrittenCommission,\n\tEXP_format.PremiumMasterAuditPremium,\n\tEXP_format.PremiumMasterReturnedPremium,\n\tEXP_format.PremiumMasterCollectionWriteOffPremium,\n\tEXP_format.ExposureAmount,\n\tEXP_format.PolicyAuditDimId,\n\tEXP_format.PremiumTransactionEnteredDateId,\n\tEXP_format.CreditDirectWrittenPremium,\n\tEXP_format.DebitDirectWrittenPremium,\n\tEXP_format.ExposureAmount AS WrittenExposure,\n\tLKP_PremiumMasterFact.PremiumMasterFactID AS LKP_PremiumMasterFactID,\n\tLKP_PremiumMasterFact.PremiumMasterAgencyDirectWrittenCommission AS LKP_PremiumMasterAgencyDirectWrittenCommission,\n\tLKP_PremiumMasterFact.PremiumMasterAgencyCommissionRate AS LKP_PremiumMasterAgencyCommissionRate,\n\tEXP_format.o_DeclaredEventFlag AS DeclaredEventFlag\n\tFROM EXP_format\n\tLEFT JOIN LKP_PremiumMasterFact\n\tON LKP_PremiumMasterFact.PolicyKey = EXP_format.pol_key1 AND LKP_PremiumMasterFact.AuditID = EXP_format.o_AuditID AND LKP_PremiumMasterFact.PremiumMasterRunDateID = EXP_format.o_PremiumMasterRunDateID\n),\nRTRTRANS1_INSERT AS (SELECT * FROM RTRTRANS1 WHERE ISNULL(LKP_PremiumMasterFactID)),\nRTRTRANS1_DEFAULT1 AS (SELECT * FROM RTRTRANS1 WHERE NOT ( (ISNULL(LKP_PremiumMasterFactID)) )),\nTGT_PremiumMasterFact_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumMasterFact\n\t(AuditID, AnnualStatementLineDimID, AnnualStatementLineProductCodeDimID, AgencyDimID, PolicyDimID, ContractCustomerDimID, RiskLocationDimID, ReinsuranceCoverageDimID, PremiumTransactionTypeDimID, EDWPremiumMasterCalculationPKID, EDWPremiumTransactionPKID, StagePremiumMasterPKID, PremiumMasterPolicyEffectiveDateID, PremiumMasterPolicyExpirationDateID, PremiumMasterCoverageEffectiveDateID, PremiumMasterCoverageExpirationDateID, PremiumMasterRunDateID, PremiumMasterPremium, PremiumMasterFullTermPremium, PremiumMasterDirectWrittenPremium, PremiumMasterCededWrittenPremium, PremiumMasterNetWrittenPremium, PremiumMasterAgencyCommissionRate, PremiumMasterAgencyDirectWrittenCommission, PremiumMasterAgencyCededWrittenCommission, PremiumMasterAgencyNetWrittenCommission, PremiumMasterAuditPremium, PremiumMasterReturnedPremium, PremiumMasterCollectionWriteOffPremium, InsuranceReferenceDimId, SalesDivisionDimId, InsuranceReferenceCoverageDimId, CoverageDetailDimId, ExposureAmount, PolicyAuditDimId, PremiumTransactionEnteredDateId, CreditDirectWrittenPremium, DebitDirectWrittenPremium, WrittenExposure, DeclaredEventFlag)\n\tSELECT \n\to_AuditID AS AUDITID, \n\tANNUALSTATEMENTLINEDIMID, \n\tANNUALSTATEMENTLINEPRODUCTCODEDIMID, \n\tAGENCYDIMID, \n\tPOLICYDIMID, \n\tCONTRACTCUSTOMERDIMID, \n\tRISKLOCATIONDIMID, \n\tREINSURANCECOVERAGEDIMID, \n\tPREMIUMTRANSACTIONTYPEDIMID, \n\tEDWPREMIUMMASTERCALCULATIONPKID, \n\tEDWPREMIUMTRANSACTIONPKID, \n\tSTAGEPREMIUMMASTERPKID, \n\tPREMIUMMASTERPOLICYEFFECTIVEDATEID, \n\tPREMIUMMASTERPOLICYEXPIRATIONDATEID, \n\tPREMIUMMASTERCOVERAGEEFFECTIVEDATEID, \n\tPREMIUMMASTERCOVERAGEEXPIRATIONDATEID, \n\to_PremiumMasterRunDateID AS PREMIUMMASTERRUNDATEID, \n\tPREMIUMMASTERPREMIUM, \n\tPREMIUMMASTERFULLTERMPREMIUM, \n\tPREMIUMMASTERDIRECTWRITTENPREMIUM, \n\tPREMIUMMASTERCEDEDWRITTENPREMIUM, \n\tPREMIUMMASTERNETWRITTENPREMIUM, \n\to_CommissionRateLevel AS PREMIUMMASTERAGENCYCOMMISSIONRATE, \n\to_CommissionAmountLevel AS PREMIUMMASTERAGENCYDIRECTWRITTENCOMMISSION, \n\tPREMIUMMASTERAGENCYCEDEDWRITTENCOMMISSION, \n\tPREMIUMMASTERAGENCYNETWRITTENCOMMISSION, \n\tPREMIUMMASTERAUDITPREMIUM, \n\tPREMIUMMASTERRETURNEDPREMIUM, \n\tPREMIUMMASTERCOLLECTIONWRITEOFFPREMIUM, \n\tINSURANCEREFERENCEDIMID, \n\tSALESDIVISIONDIMID, \n\tINSURANCEREFERENCECOVERAGEDIMID, \n\tCOVERAGEDETAILDIMID, \n\tEXPOSUREAMOUNT, \n\tPOLICYAUDITDIMID, \n\tPREMIUMTRANSACTIONENTEREDDATEID, \n\tCREDITDIRECTWRITTENPREMIUM, \n\tDEBITDIRECTWRITTENPREMIUM, \n\tWRITTENEXPOSURE, \n\tDECLAREDEVENTFLAG\n\tFROM RTRTRANS1_INSERT\n),\nUPDTRANS AS (\n\tSELECT\n\tLKP_PremiumMasterFactID AS LKP_PremiumMasterFactID2, \n\to_CommissionRateLevel1 AS o_CommissionRateLevel12, \n\to_CommissionAmountLevel1 AS o_CommissionAmountLevel12, \n\tPremiumMasterAgencyNetWrittenCommission AS PremiumMasterAgencyNetWrittenCommission2\n\tFROM RTRTRANS1_DEFAULT1\n),\nTGT_PremiumMasterFact_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumMasterFact AS T\n\tUSING UPDTRANS AS S\n\tON T.PremiumMasterFactID = S.LKP_PremiumMasterFactID2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.PremiumMasterAgencyCommissionRate = S.o_CommissionRateLevel12, T.PremiumMasterAgencyDirectWrittenCommission = S.o_CommissionAmountLevel12, T.PremiumMasterAgencyNetWrittenCommission = S.PremiumMasterAgencyNetWrittenCommission2\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUM_OF_MONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataMart/"
        },
        "annotations": []
    }
}