{
    "name": "m_AGY_DM_LOAD_AgencyRelationshipCurrent",
    "properties": {
        "activities": [
            {
                "name": "m_AGY_DM_LOAD_AgencyRelationshipCurrent",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Shortcut_to_AgencyRelationshipDim AS (\n\twith ##AgencyRelationship as (\r\n\tselect EDWAgencyAKId, EDWLegalPrimaryAgencyAKId, AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate, 1  as LoadOrder from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyRelationshipDim where CurrentSnapshotFlag=1\r\n\t)\r\n\t-- Get all records from AgencyrelationshipDim\r\n\tselect EDWAgencyAKId, EDWLegalPrimaryAgencyAKId, AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate,LoadOrder  from \r\n\t ##AgencyRelationship\r\n\tunion all\r\n\t-- Identify gaps in timeperiod between relationship and create records for those time period\r\n\tselect EDWAgencyAKId,EDWAgencyAKId,AgencyRelationshipExpirationDate,New_AgencyRelationshipEffectiveDate,2 as LoadOrder \r\n\tfrom (\r\n\tselect EDWAgencyAKId,EDWLegalPrimaryAgencyAKId,AgencyRelationshipEffectiveDate,AgencyRelationshipExpirationDate,\r\n\tlead(AgencyRelationshipEffectiveDate) over(Partition By EDWAgencyAKId order by AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate) New_AgencyRelationshipEffectiveDate \r\n\tfrom ##AgencyRelationship\r\n\twhere AgencyRelationshipEffectiveDate<=AgencyRelationshipExpirationDate\r\n\t) A\r\n\twhere A.AgencyRelationshipExpirationDate<>A.New_AgencyRelationshipEffectiveDate\r\n\t\r\n\tunion all\r\n\t-- identify initial start date of a relationshipd and create record from 1800-01-01\r\n\tselect EDWAgencyAKId,EDWAgencyAKId,'1800-01-01',AgencyRelationshipEffectiveDate,3 as LoadOrder from (\r\n\tselect EDWAgencyAKId,EDWLegalPrimaryAgencyAKId,AgencyRelationshipEffectiveDate,AgencyRelationshipExpirationDate,Lag(AgencyRelationshipEffectiveDate) over(Partition By EDWAgencyAKId order by AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate) New_AgencyRelationshipEffectiveDate from ##AgencyRelationship\r\n\twhere AgencyRelationshipEffectiveDate<=AgencyRelationshipExpirationDate\r\n\t) A\r\n\twhere New_AgencyRelationshipEffectiveDate is Null\r\n\tand ((AgencyRelationshipEffectiveDate<>'1800-01-01' and AgencyRelationShipExpirationDate<>'1800-01-01')\r\n\tor AgencyRelationShipEffectiveDate<>'1800-01-01')\r\n\t\r\n\tunion all\r\n\t-- identify current date and create records from last expiration date till current date\r\n\tselect EDWAgencyAKId,EDWAgencyAKId,AgencyRelationshipExpirationDate,'2999-12-31',4 as LoadOrder from \r\n\t(select EDWAgencyAKId,EDWLegalPrimaryAgencyAKId,AgencyRelationshipEffectiveDate,AgencyRelationshipExpirationDate,Lead(AgencyRelationshipEffectiveDate) over(Partition By EDWAgencyAKId order by AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate) New_AgencyRelationshipEffectiveDate from ##AgencyRelationship\r\n\twhere AgencyRelationshipEffectiveDate<=AgencyRelationshipExpirationDate\r\n\t) A\r\n\twhere New_AgencyRelationshipEffectiveDate is null\r\n\tand AgencyRelationshipExpirationDate<Getdate()\r\n\t--and AgencyRelationshipExpirationDate <> '1800-01-01' \r\n\t\r\n\tunion all\r\n\t-- identify agencies missing a relationship currently and create records for missing agencies\r\n\tselect distinct A.EDWAgencyAKId,A.EDWAgencyAKId,'1800-01-01','2999-12-31',5 as LoadOrder from v3.AgencyDim A\r\n\tleft outer join AgencyRelationshipDim B\r\n\ton A.EDWAgencyAKId=B.EDWAgencyAKId\r\n\twhere B.EDWAgencyAKId is null\n),\nEXP_Standalone AS (\n\tSELECT\n\tEDWAgencyAKId,\n\tEDWLegalPrimaryAgencyAKId,\n\tAgencyRelationshipEffectiveDate,\n\tAgencyRelationshipExpirationDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tsysdate AS o_CreateDate,\n\tsysdate AS o_ModifiedDate\n\tFROM SQ_Shortcut_to_AgencyRelationshipDim\n),\nAgencyRelationshipCurrent AS (\n\tTRUNCATE TABLE Shortcut_to_AgencyRelationshipCurrent;\n\tINSERT INTO Shortcut_to_AgencyRelationshipCurrent\n\t(AuditId, CreatedDate, ModifiedDate, EDWAgencyAKID, EDWLegalPrimaryAgencyAKId, AgencyRelationshipEffectiveDate, AgencyRelationshipExpirationDate)\n\tSELECT \n\to_AuditID AS AUDITID, \n\to_CreateDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\tEDWAgencyAKId AS EDWAGENCYAKID, \n\tEDWLEGALPRIMARYAGENCYAKID, \n\tAGENCYRELATIONSHIPEFFECTIVEDATE, \n\tAGENCYRELATIONSHIPEXPIRATIONDATE\n\tFROM EXP_Standalone\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246490"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905471"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603202"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:20:50"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:20:23"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_DATA_MART"
            }
        },
        "folder": {
            "name": "Agency DataMart/"
        },
        "annotations": []
    }
}