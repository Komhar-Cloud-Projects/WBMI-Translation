{
    "name": "s_m_CLM_DM_LOAD_NurseReferralDim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_NurseReferralDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_NurseReferral AS (\n\tSELECT\r\n\tN.NurseReferralId, \r\n\tN.EffectiveDate, \r\n\tN.SourceSystemId, \r\n\tN.NurseReferralAkId, \r\n\tN.claim_party_ak_id, \r\n\tN.ReferralDate \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.NurseReferral N\r\n\t\r\n\twhere\r\n\t\tN.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\tAND\r\n\t      N.CurrentSnapshotFlag = 1\n),\nEXP_Src_Values_Default AS (\n\tSELECT\n\tEdwNurseReferralPkId,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tEffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSourceSystemId,\n\tsysdate AS CreatedDate,\n\tsysdate AS ModifiedDate,\n\tNurseReferralAkId AS IN_NurseReferralAkId,\n\t-- *INF*: iif(isnull(IN_NurseReferralAkId), -1, IN_NurseReferralAkId)\n\tIFF(IN_NurseReferralAkId IS NULL, - 1, IN_NurseReferralAkId) AS v_NurseReferralAkId,\n\tv_NurseReferralAkId AS EdwNurseReferralAkId,\n\tclaim_party_ak_id AS IN_claim_party_ak_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(IN_claim_party_ak_id))), -1, IN_claim_party_ak_id)\n\tIFF(ltrim(rtrim(IN_claim_party_ak_id)) IS NULL, - 1, IN_claim_party_ak_id) AS v_claim_party_ak_id,\n\tv_claim_party_ak_id AS claim_party_ak_id,\n\tReferralDate AS IN_ReferralDate,\n\t-- *INF*: iif(isnull(IN_ReferralDate), to_date('1/1/1800','MM/DD/YYYY'), IN_ReferralDate)\n\tIFF(IN_ReferralDate IS NULL, to_date('1/1/1800', 'MM/DD/YYYY'), IN_ReferralDate) AS v_RefferalDate,\n\tv_RefferalDate AS ReferralDate\n\tFROM SQ_NurseReferral\n),\nLKP_NurseReferralDim AS (\n\tSELECT\n\tNurseReferralDimId,\n\tEdwNurseReferralAkId\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseReferralDimId as NurseReferralDimId,  \r\n\t\tN.EdwNurseReferralAkId as EdwNurseReferralAkId\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferralDim N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EdwNurseReferralAkId ORDER BY NurseReferralDimId) = 1\n),\nLKP_claim_party AS (\n\tSELECT\n\tclaim_party_full_name,\n\tclaim_party_first_name,\n\tclaim_party_last_name,\n\tclaim_party_mid_name,\n\tclaim_party_name_prfx,\n\tclaim_party_name_sfx,\n\tclaim_party_ak_id\n\tFROM (\n\t\tSELECT\r\n\t\tCP.claim_party_full_name as claim_party_full_name, CP.claim_party_first_name as claim_party_first_name, CP.claim_party_last_name as claim_party_last_name, CP.claim_party_mid_name as claim_party_mid_name, CP.claim_party_name_prfx as claim_party_name_prfx, CP.claim_party_name_sfx as claim_party_name_sfx, \r\n\t\tCP.claim_party_ak_id as claim_party_ak_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party CP\r\n\t\t\r\n\t\twhere\r\n\t\tCP.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_ak_id ORDER BY claim_party_full_name) = 1\n),\nEXP_Lkp_Records AS (\n\tSELECT\n\tLKP_NurseReferralDim.NurseReferralDimId,\n\tLKP_claim_party.claim_party_full_name AS NurseFullName,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseFullName),'N/A',\r\n\t-- Length(NurseFullName)= 0, 'N/A',\r\n\t-- is_spaces(NurseFullName), 'N/A',\r\n\t-- ltrim(rtrim(NurseFullName)))\n\tdecode(true,\n\tNurseFullName IS NULL, 'N/A',\n\tLength(NurseFullName) = 0, 'N/A',\n\tis_spaces(NurseFullName), 'N/A',\n\tltrim(rtrim(NurseFullName))) AS NurseFullName1,\n\tLKP_claim_party.claim_party_first_name AS NurseFirstName,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseFirstName),'N/A',\r\n\t-- Length(NurseFirstName)= 0, 'N/A',\r\n\t-- is_spaces(NurseFirstName), 'N/A',\r\n\t-- ltrim(rtrim(NurseFirstName)))\n\tdecode(true,\n\tNurseFirstName IS NULL, 'N/A',\n\tLength(NurseFirstName) = 0, 'N/A',\n\tis_spaces(NurseFirstName), 'N/A',\n\tltrim(rtrim(NurseFirstName))) AS NurseFirstName1,\n\tLKP_claim_party.claim_party_last_name AS NurseLastName,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseLastName),'N/A',\r\n\t-- Length(NurseLastName)= 0, 'N/A',\r\n\t-- is_spaces(NurseLastName), 'N/A',\r\n\t-- ltrim(rtrim(NurseLastName)))\n\tdecode(true,\n\tNurseLastName IS NULL, 'N/A',\n\tLength(NurseLastName) = 0, 'N/A',\n\tis_spaces(NurseLastName), 'N/A',\n\tltrim(rtrim(NurseLastName))) AS NurseLastName1,\n\tLKP_claim_party.claim_party_mid_name AS NurseMiddleName,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseMiddleName),'N/A',\r\n\t-- Length(NurseMiddleName)= 0, 'N/A',\r\n\t-- is_spaces(NurseMiddleName), 'N/A',\r\n\t-- ltrim(rtrim(NurseMiddleName)))\n\tdecode(true,\n\tNurseMiddleName IS NULL, 'N/A',\n\tLength(NurseMiddleName) = 0, 'N/A',\n\tis_spaces(NurseMiddleName), 'N/A',\n\tltrim(rtrim(NurseMiddleName))) AS NurseMiddleName1,\n\tLKP_claim_party.claim_party_name_prfx AS NurseNamePrefix,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseNamePrefix),'N/A',\r\n\t-- Length(NurseNamePrefix)= 0, 'N/A',\r\n\t-- is_spaces(NurseNamePrefix), 'N/A',\r\n\t-- ltrim(rtrim(NurseNamePrefix)))\n\tdecode(true,\n\tNurseNamePrefix IS NULL, 'N/A',\n\tLength(NurseNamePrefix) = 0, 'N/A',\n\tis_spaces(NurseNamePrefix), 'N/A',\n\tltrim(rtrim(NurseNamePrefix))) AS NurseNamePrefix1,\n\tLKP_claim_party.claim_party_name_sfx AS NurseNameSuffix,\n\t-- *INF*: decode(true,\r\n\t-- isnull(NurseNameSuffix),'N/A',\r\n\t-- Length(NurseNameSuffix)= 0, 'N/A',\r\n\t-- is_spaces(NurseNameSuffix), 'N/A',\r\n\t-- ltrim(rtrim(NurseNameSuffix)))\n\tdecode(true,\n\tNurseNameSuffix IS NULL, 'N/A',\n\tLength(NurseNameSuffix) = 0, 'N/A',\n\tis_spaces(NurseNameSuffix), 'N/A',\n\tltrim(rtrim(NurseNameSuffix))) AS NurseNameSuffix1\n\tFROM \n\tLEFT JOIN LKP_NurseReferralDim\n\tON LKP_NurseReferralDim.EdwNurseReferralAkId = EXP_Src_Values_Default.EdwNurseReferralAkId\n\tLEFT JOIN LKP_claim_party\n\tON LKP_claim_party.claim_party_ak_id = EXP_Src_Values_Default.claim_party_ak_id\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tEXP_Lkp_Records.NurseReferralDimId,\n\tEXP_Src_Values_Default.CurrentSnapshotFlag,\n\tEXP_Src_Values_Default.AuditId AS AuditID,\n\tEXP_Src_Values_Default.EffectiveDate,\n\tEXP_Src_Values_Default.ExpirationDate,\n\tEXP_Src_Values_Default.CreatedDate,\n\tEXP_Src_Values_Default.ModifiedDate,\n\tEXP_Src_Values_Default.EdwNurseReferralPkId,\n\tEXP_Src_Values_Default.EdwNurseReferralAkId,\n\tEXP_Src_Values_Default.ReferralDate,\n\tEXP_Lkp_Records.NurseFullName1 AS NurseFullName,\n\tEXP_Lkp_Records.NurseFirstName1 AS NurseFirstName,\n\tEXP_Lkp_Records.NurseLastName1 AS NurseLastName,\n\tEXP_Lkp_Records.NurseMiddleName1 AS NurseMiddleName,\n\tEXP_Lkp_Records.NurseNamePrefix1 AS NurseNamePrefix,\n\tEXP_Lkp_Records.NurseNameSuffix1 AS NurseNameSuffix\n\tFROM EXP_Lkp_Records\n\t -- Manually join with EXP_Src_Values_Default\n),\nRTR_Insert_Update_Insert AS (SELECT * FROM RTR_Insert_Update WHERE isnull(NurseReferralDimId)),\nRTR_Insert_Update_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update WHERE NOT ( (isnull(NurseReferralDimId)) )),\nUPD_Insert AS (\n\tSELECT\n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tEdwNurseReferralPkId, \n\tEdwNurseReferralAkId, \n\tReferralDate, \n\tNurseFullName, \n\tNurseFirstName, \n\tNurseLastName, \n\tNurseMiddleName, \n\tNurseNamePrefix, \n\tNurseNameSuffix\n\tFROM RTR_Insert_Update_Insert\n),\nNurseReferralDim_Insert AS (\n\tINSERT INTO NurseReferralDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, EdwNurseReferralPkId, EdwNurseReferralAkId, ReferralDate, NurseFullName, NurseFirstName, NurseLastName, NurseMiddleName, NurseNamePrefix, NurseNameSuffix)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tEDWNURSEREFERRALPKID, \n\tEDWNURSEREFERRALAKID, \n\tREFERRALDATE, \n\tNURSEFULLNAME, \n\tNURSEFIRSTNAME, \n\tNURSELASTNAME, \n\tNURSEMIDDLENAME, \n\tNURSENAMEPREFIX, \n\tNURSENAMESUFFIX\n\tFROM UPD_Insert\n),\nUPD_Update AS (\n\tSELECT\n\tNurseReferralDimId, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tEdwNurseReferralPkId, \n\tEdwNurseReferralAkId, \n\tReferralDate, \n\tNurseFullName, \n\tNurseFirstName, \n\tNurseLastName, \n\tNurseMiddleName, \n\tNurseNamePrefix, \n\tNurseNameSuffix\n\tFROM RTR_Insert_Update_DEFAULT1\n),\nNurseReferralDim_Update AS (\n\tMERGE INTO NurseReferralDim AS T\n\tUSING UPD_Update AS S\n\tON T.NurseReferralDimId = S.NurseReferralDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.AuditID = S.AuditID, T.EffectiveDate = S.EffectiveDate, T.ExpirationDate = S.ExpirationDate, T.CreatedDate = S.CreatedDate, T.ModifiedDate = S.ModifiedDate, T.EdwNurseReferralPkId = S.EdwNurseReferralPkId, T.EdwNurseReferralAkId = S.EdwNurseReferralAkId, T.ReferralDate = S.ReferralDate, T.NurseFullName = S.NurseFullName, T.NurseFirstName = S.NurseFirstName, T.NurseLastName = S.NurseLastName, T.NurseMiddleName = S.NurseMiddleName, T.NurseNamePrefix = S.NurseNamePrefix, T.NurseNameSuffix = S.NurseNameSuffix\n),\nSQ_NurseReferralDim AS (\n\tSELECT\r\n\tA.NurseReferralDimId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.EdwNurseReferralAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.NurseReferralDim A\r\n\t\r\n\twhere Exists\r\n\t   (\r\n\tSELECT 1\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferralDim B\r\n\t\r\n\tWHERE\r\n\tA.EdwNurseReferralAkId = B.EdwNurseReferralAkId\r\n\tAND\r\n\tB.CurrentSnapshotFlag = 1\r\n\t\r\n\tGROUP BY\r\n\tB.EdwNurseReferralAkId\r\n\t\r\n\tHAVING\r\n\tcount(*) > 1\r\n\t    ) \r\n\t\r\n\tORDER BY\r\n\tA.EdwNurseReferralAkId,\r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseReferralDimId,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: decode(true,\r\n\t-- EdwNurseReferralAkId = v_PREV_ROW_EdwNurseReferralAkId,\r\n\t-- add_to_date(v_PREV_ROW_EffectiveDate, 'SS', -1),\r\n\t-- orig_ExpirationDate)\n\tdecode(true,\n\tEdwNurseReferralAkId = v_PREV_ROW_EdwNurseReferralAkId, add_to_date(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tsysdate AS ModifiedDate,\n\tEdwNurseReferralAkId,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tEdwNurseReferralAkId AS v_PREV_ROW_EdwNurseReferralAkId\n\tFROM SQ_NurseReferralDim\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tNurseReferralDimId, \n\tCurrentSnapshotFlag, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_NurseReferralDim AS (\n\tSELECT\n\tNurseReferralDimId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowAkId\n),\nNurseReferralDim_Expire AS (\n\tMERGE INTO NurseReferralDim AS T\n\tUSING UPD_NurseReferralDim AS S\n\tON T.NurseReferralDimId = S.NurseReferralDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246514"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905534"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604542"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 03:42:21"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 04:16:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}