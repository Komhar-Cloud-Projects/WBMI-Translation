{
    "name": "s_m_POL_DW_LOAD_EarnedPremiumAudit_Balance",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_EarnedPremiumAudit_Balance",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_EarnedPremiumMonthlyCalculation_Balance AS (\n\tDeclare @Date1 datetime\r\n\t\r\n\tset @Date1=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS}),0))\r\n\t\r\n\t\r\n\tSELECT EPMC.CurrentSnapshotFlag, EPMC.AuditID, EPMC.EffectiveDate, EPMC.ExpirationDate, EPMC.SourceSystemID, EPMC.PolicyKey, EPMC.AgencyAKID, EPMC.ContractCustomerAKID, EPMC.PolicyAKID, EPMC.RiskLocationAKID, EPMC.PolicyCoverageAKID, EPMC.StatisticalCoverageAKID, EPMC.ReinsuranceCoverageAKID, EPMC.PremiumTransactionAKID, EPMC.BureauStatisticalCodeAKID, EPMC.PremiumMasterCalculationPKID, EPMC.PolicyEffectiveDate, EPMC.PolicyExpirationDate, EPMC.StatisticalCoverageEffectiveDate, EPMC.StatisticalCoverageExpirationDate, EPMC.StatisticalCoverageCancellationDate, EPMC.PremiumTransactionEnteredDate, EPMC.PremiumTransactionEffectiveDate, EPMC.PremiumTransactionExpirationDate, EPMC.PremiumTransactionBookedDate, EPMC.PremiumTransactionCode, EPMC.PremiumTransactionAmount, EPMC.FullTermPremium, EPMC.PremiumType, EPMC.ReasonAmendedCode, EPMC.EarnedPremium, EPMC.ChangeInEarnedPremium, EPMC.UnearnedPremium, EPMC.ChangeInUnearnedPremium, EPMC.ProductCode, EPMC.AnnualStatementLineCode, EPMC.SubAnnualStatementLineCode, EPMC.NonSubAnnualStatementLineCode, EPMC.AnnualStatementLineProductCode, EPMC.LineOfBusinessCode, EPMC.PolicyOfferingCode, EPMC.RunDate, EPMC.RatingCoverageAKId, EPMC.RatingCoverageEffectiveDate, EPMC.RatingCoverageExpirationDate, EPMC.EarnedExposure, EPMC.ChangeInEarnedExposure,\r\n\tEPMC.Exposure\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\twhere EPMC.UnearnedPremium<>0.0\r\n\tand EPMC.PremiumTransactionExpirationDate<=EPMC.Rundate\r\n\tand EPMC.StatisticalCoverageCancellationDate<>'2100-12-31 23:59:59'\r\n\tand EPMC.Rundate=@Date1\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BALANCE}\r\n\tOrder BY EPMC.PolicyAKID,EPMC.StatisticalCoverageAKID,EPMC.RatingCoverageAKId,EPMC.PremiumMasterCalculationPKID,EPMC.PremiumType,EPMC.AnnualStatementLineCode, EPMC.SubAnnualStatementLineCode, EPMC.NonSubAnnualStatementLineCode,EPMC.LineOfBusinessCode,EPMC.RunDate\n),\nEXP_Src_Data_Collect AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tReinsuranceCoverageAKID,\n\tPremiumTransactionAKID,\n\tBureauStatisticalCodeAKID,\n\tPremiumMasterCalculationPKID,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tStatisticalCoverageCancellationDate,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionCode,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tEarnedPremium,\n\tChangeInEarnedPremium,\n\tUnearnedPremium,\n\tChangeInUnearnedPremium,\n\tProductCode,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tNonSubAnnualStatementLineCode,\n\tAnnualStatementLineProductCode,\n\tLineOfBusinessCode,\n\tPolicyOfferingCode,\n\tRunDate,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART( Last_day(ADD_TO_DATE(RunDate,'MM',1)), 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\n\tDATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,Last_day(DATEADD(MONTH,1,RunDate)\n\t)),Last_day(DATEADD(MONTH,1,RunDate)\n\t))),DATEADD(HOUR,23-DATE_PART(HOUR,Last_day(DATEADD(MONTH,1,RunDate)\n\t)),Last_day(DATEADD(MONTH,1,RunDate)\n\t)))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,Last_day(DATEADD(MONTH,1,RunDate)\n\t)),Last_day(DATEADD(MONTH,1,RunDate)\n\t))),DATEADD(HOUR,23-DATE_PART(HOUR,Last_day(DATEADD(MONTH,1,RunDate)\n\t)),Last_day(DATEADD(MONTH,1,RunDate)\n\t)))) AS TO_Be_Rundate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tEarnedExposure,\n\tChangeInEarnedExposure,\n\tExposure\n\tFROM SQ_EarnedPremiumMonthlyCalculation_Balance\n),\nLKP_GetExposure AS (\n\tSELECT\n\tExposure,\n\tin_PremiumMasterCalculationPKID,\n\tin_PremiumType,\n\tin_AnnualStatementLineCode,\n\tin_SubAnnualStatementLineCode,\n\tin_NonSubAnnualStatementLineCode,\n\tin_LineOfBusinessCode,\n\tPremiumMasterCalculationPKID,\n\tPremiumType,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tNonSubAnnualStatementLineCode,\n\tLineOfBusinessCode\n\tFROM (\n\t\tSELECT \r\n\t\tEarnedPremiumMonthlyCalculation.Exposure as Exposure, \r\n\t\tEarnedPremiumMonthlyCalculation.PremiumMasterCalculationPKID as PremiumMasterCalculationPKID, \r\n\t\tEarnedPremiumMonthlyCalculation.PremiumType as PremiumType, \r\n\t\tEarnedPremiumMonthlyCalculation.AnnualStatementLineCode as AnnualStatementLineCode, \r\n\t\tEarnedPremiumMonthlyCalculation.SubAnnualStatementLineCode as SubAnnualStatementLineCode, \r\n\t\tEarnedPremiumMonthlyCalculation.NonSubAnnualStatementLineCode as NonSubAnnualStatementLineCode, \r\n\t\tEarnedPremiumMonthlyCalculation.LineOfBusinessCode as LineOfBusinessCode,\r\n\t\tEarnedPremiumMonthlyCalculation.RunDate as RunDate\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.EarnedPremiumMonthlyCalculation with (NOLOCK)\r\n\t\twhere exists\r\n\t\t(SELECT EPMC.PremiumMasterCalculationPKID\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\t\twhere EPMC.UnearnedPremium<>0.0\r\n\t\tand EPMC.PremiumTransactionExpirationDate<=EPMC.Rundate\r\n\t\tand EPMC.StatisticalCoverageCancellationDate<>'2100-12-31 23:59:59'\r\n\t\tand EPMC.Rundate=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS}),0))\r\n\t\tand EarnedPremiumMonthlyCalculation.PremiumMasterCalculationPKID=EPMC.PremiumMasterCalculationPKID)\r\n\t\torder by \r\n\t\tEarnedPremiumMonthlyCalculation.PremiumMasterCalculationPKID, \r\n\t\tEarnedPremiumMonthlyCalculation.PremiumType, \r\n\t\tEarnedPremiumMonthlyCalculation.AnnualStatementLineCode, \r\n\t\tEarnedPremiumMonthlyCalculation.SubAnnualStatementLineCode, \r\n\t\tEarnedPremiumMonthlyCalculation.NonSubAnnualStatementLineCode , \r\n\t\tEarnedPremiumMonthlyCalculation.LineOfBusinessCode,\r\n\t\tEarnedPremiumMonthlyCalculation.RunDate ASC--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumMasterCalculationPKID,PremiumType,AnnualStatementLineCode,SubAnnualStatementLineCode,NonSubAnnualStatementLineCode,LineOfBusinessCode ORDER BY Exposure) = 1\n),\nLKP_GetFirstAudits AS (\n\tSELECT\n\tPremiumMasterCalculationID,\n\tPolicyAKID,\n\tPremiumMasterPremiumType\n\tFROM (\n\t\tselect A.PremiumMasterCalculationID as PremiumMasterCalculationID,A.PolicyAKID as PolicyAKID,A.PremiumMasterPremiumType as PremiumMasterPremiumType \r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation A\r\n\t\twhere (PremiumMasterTransactionCode in ('14','24')\r\n\t\tor Premiummasterrundate>PremiumMasterCoverageExpirationDate)\r\n\t\tand PremiumMasterRunDate=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS})+1,0))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,PremiumMasterPremiumType ORDER BY PremiumMasterCalculationID DESC) = 1\n),\nEXP_SetEarnedPremiumValues AS (\n\tSELECT\n\tLKP_GetFirstAudits.PremiumMasterCalculationID,\n\t-- *INF*: IIF(ISNULL(PremiumMasterCalculationID),'1','2')\n\tIFF(PremiumMasterCalculationID IS NULL,\n\t\t'1',\n\t\t'2'\n\t) AS Decision_Flag,\n\tEXP_Src_Data_Collect.CurrentSnapshotFlag,\n\t999 AS AuditID,\n\tEXP_Src_Data_Collect.EffectiveDate,\n\tEXP_Src_Data_Collect.ExpirationDate,\n\tEXP_Src_Data_Collect.SourceSystemID,\n\tCURRENT_TIMESTAMP AS CreatedDate,\n\tEXP_Src_Data_Collect.PolicyKey,\n\tEXP_Src_Data_Collect.AgencyAKID,\n\tEXP_Src_Data_Collect.ContractCustomerAKID,\n\tEXP_Src_Data_Collect.PolicyAKID,\n\tEXP_Src_Data_Collect.RiskLocationAKID,\n\tEXP_Src_Data_Collect.PolicyCoverageAKID,\n\tEXP_Src_Data_Collect.StatisticalCoverageAKID,\n\tEXP_Src_Data_Collect.ReinsuranceCoverageAKID,\n\tEXP_Src_Data_Collect.PremiumTransactionAKID,\n\tEXP_Src_Data_Collect.BureauStatisticalCodeAKID,\n\tEXP_Src_Data_Collect.PremiumMasterCalculationPKID,\n\tEXP_Src_Data_Collect.PolicyEffectiveDate,\n\tEXP_Src_Data_Collect.PolicyExpirationDate,\n\tEXP_Src_Data_Collect.StatisticalCoverageEffectiveDate,\n\tEXP_Src_Data_Collect.StatisticalCoverageExpirationDate,\n\tEXP_Src_Data_Collect.StatisticalCoverageCancellationDate,\n\tEXP_Src_Data_Collect.PremiumTransactionEnteredDate,\n\tEXP_Src_Data_Collect.PremiumTransactionEffectiveDate,\n\tEXP_Src_Data_Collect.PremiumTransactionExpirationDate,\n\tEXP_Src_Data_Collect.PremiumTransactionBookedDate,\n\tEXP_Src_Data_Collect.PremiumTransactionCode,\n\tEXP_Src_Data_Collect.PremiumTransactionAmount,\n\t0.0 AS O_PremiumTransactionAmount,\n\tEXP_Src_Data_Collect.FullTermPremium,\n\t0.0 AS O_FullTermPremium,\n\tEXP_Src_Data_Collect.PremiumType,\n\tEXP_Src_Data_Collect.ReasonAmendedCode,\n\tEXP_Src_Data_Collect.EarnedPremium,\n\t-- *INF*: IIF(Decision_Flag='1',EarnedPremium,EarnedPremium+UnearnedPremium)\n\tIFF(Decision_Flag = '1',\n\t\tEarnedPremium,\n\t\tEarnedPremium + UnearnedPremium\n\t) AS v_EarnedPremium,\n\tv_EarnedPremium AS O_EarnedPremium,\n\tEXP_Src_Data_Collect.ChangeInEarnedPremium,\n\t-- *INF*: IIF(Decision_Flag='1',0.0,v_EarnedPremium-EarnedPremium)\n\tIFF(Decision_Flag = '1',\n\t\t0.0,\n\t\tv_EarnedPremium - EarnedPremium\n\t) AS v_ChangeInEarnedPremium,\n\tv_ChangeInEarnedPremium AS O_ChangeInEarnedPremium,\n\tEXP_Src_Data_Collect.UnearnedPremium,\n\t-- *INF*: IIF(Decision_Flag='1',UnearnedPremium,0.0)\n\tIFF(Decision_Flag = '1',\n\t\tUnearnedPremium,\n\t\t0.0\n\t) AS v_UnearnedPremium,\n\tv_UnearnedPremium AS O_UnearnedPremium,\n\tEXP_Src_Data_Collect.ChangeInUnearnedPremium,\n\t-- *INF*: IIF(Decision_Flag='1',0.0,v_UnearnedPremium-UnearnedPremium)\n\tIFF(Decision_Flag = '1',\n\t\t0.0,\n\t\tv_UnearnedPremium - UnearnedPremium\n\t) AS v_ChangeInUnearnedPremium,\n\tv_ChangeInUnearnedPremium AS O_ChangeInUnearnedPremium,\n\tEXP_Src_Data_Collect.ProductCode,\n\tEXP_Src_Data_Collect.AnnualStatementLineCode,\n\tEXP_Src_Data_Collect.SubAnnualStatementLineCode,\n\tEXP_Src_Data_Collect.NonSubAnnualStatementLineCode,\n\tEXP_Src_Data_Collect.AnnualStatementLineProductCode,\n\tEXP_Src_Data_Collect.LineOfBusinessCode,\n\tEXP_Src_Data_Collect.PolicyOfferingCode,\n\tEXP_Src_Data_Collect.TO_Be_Rundate,\n\tEXP_Src_Data_Collect.RatingCoverageAKId,\n\tEXP_Src_Data_Collect.RatingCoverageEffectiveDate,\n\tEXP_Src_Data_Collect.RatingCoverageExpirationDate,\n\t-- *INF*: --DATE_DIFF(StatisticalCoverageCancellationDate,PremiumTransactionEffectiveDate,'D')\n\t'' AS v_DaysTillCancellation,\n\t-- *INF*: --DATE_DIFF(PremiumTransactionExpirationDate,PremiumTransactionEffectiveDate,'D')\n\t'' AS v_TotalDays,\n\tLKP_GetExposure.Exposure AS LKP_Exposure,\n\t-- *INF*: IIF(ISNULL(LKP_Exposure),0.0,LKP_Exposure)\n\tIFF(LKP_Exposure IS NULL,\n\t\t0.0,\n\t\tLKP_Exposure\n\t) AS v_Exposure,\n\tEXP_Src_Data_Collect.EarnedExposure,\n\t-- *INF*: IIF(Decision_Flag='1',EarnedExposure,v_Exposure)\n\tIFF(Decision_Flag = '1',\n\t\tEarnedExposure,\n\t\tv_Exposure\n\t) AS v_EarnedExposure,\n\tv_EarnedExposure AS O_EarnedExposure,\n\tEXP_Src_Data_Collect.ChangeInEarnedExposure,\n\t-- *INF*: IIF(Decision_Flag='1',0.0,v_Exposure-EarnedExposure)\n\tIFF(Decision_Flag = '1',\n\t\t0.0,\n\t\tv_Exposure - EarnedExposure\n\t) AS v_ChangeInEarnedExposure,\n\tv_ChangeInEarnedExposure AS O_ChangeInEarnedExposure,\n\tEXP_Src_Data_Collect.Exposure\n\tFROM EXP_Src_Data_Collect\n\tLEFT JOIN LKP_GetExposure\n\tON LKP_GetExposure.PremiumMasterCalculationPKID = EXP_Src_Data_Collect.PremiumMasterCalculationPKID AND LKP_GetExposure.PremiumType = EXP_Src_Data_Collect.PremiumType AND LKP_GetExposure.AnnualStatementLineCode = EXP_Src_Data_Collect.AnnualStatementLineCode AND LKP_GetExposure.SubAnnualStatementLineCode = EXP_Src_Data_Collect.SubAnnualStatementLineCode AND LKP_GetExposure.NonSubAnnualStatementLineCode = EXP_Src_Data_Collect.NonSubAnnualStatementLineCode AND LKP_GetExposure.LineOfBusinessCode = EXP_Src_Data_Collect.LineOfBusinessCode\n\tLEFT JOIN LKP_GetFirstAudits\n\tON LKP_GetFirstAudits.PolicyAKID = EXP_Src_Data_Collect.PolicyAKID AND LKP_GetFirstAudits.PremiumMasterPremiumType = EXP_Src_Data_Collect.PremiumType\n),\nEarnedPremiumMonthlyCalculation AS (\n\tINSERT INTO EarnedPremiumMonthlyCalculation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, ReinsuranceCoverageAKID, PremiumTransactionAKID, BureauStatisticalCodeAKID, PremiumMasterCalculationPKID, PolicyEffectiveDate, PolicyExpirationDate, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, PremiumTransactionBookedDate, PremiumTransactionCode, PremiumTransactionAmount, FullTermPremium, PremiumType, ReasonAmendedCode, EarnedPremium, ChangeInEarnedPremium, UnearnedPremium, ChangeInUnearnedPremium, ProductCode, AnnualStatementLineCode, SubAnnualStatementLineCode, NonSubAnnualStatementLineCode, AnnualStatementLineProductCode, LineOfBusinessCode, PolicyOfferingCode, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, EarnedExposure, ChangeInEarnedExposure, Exposure)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tCreatedDate AS MODIFIEDDATE, \n\tPOLICYKEY, \n\tAGENCYAKID, \n\tCONTRACTCUSTOMERAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tREINSURANCECOVERAGEAKID, \n\tPREMIUMTRANSACTIONAKID, \n\tBUREAUSTATISTICALCODEAKID, \n\tPREMIUMMASTERCALCULATIONPKID, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYEXPIRATIONDATE, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONEXPIRATIONDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tPREMIUMTRANSACTIONCODE, \n\tO_PremiumTransactionAmount AS PREMIUMTRANSACTIONAMOUNT, \n\tO_FullTermPremium AS FULLTERMPREMIUM, \n\tPREMIUMTYPE, \n\tREASONAMENDEDCODE, \n\tO_EarnedPremium AS EARNEDPREMIUM, \n\tO_ChangeInEarnedPremium AS CHANGEINEARNEDPREMIUM, \n\tO_UnearnedPremium AS UNEARNEDPREMIUM, \n\tO_ChangeInUnearnedPremium AS CHANGEINUNEARNEDPREMIUM, \n\tPRODUCTCODE, \n\tANNUALSTATEMENTLINECODE, \n\tSUBANNUALSTATEMENTLINECODE, \n\tNONSUBANNUALSTATEMENTLINECODE, \n\tANNUALSTATEMENTLINEPRODUCTCODE, \n\tLINEOFBUSINESSCODE, \n\tPOLICYOFFERINGCODE, \n\tTO_Be_Rundate AS RUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tO_EarnedExposure AS EARNEDEXPOSURE, \n\tO_ChangeInEarnedExposure AS CHANGEINEARNEDEXPOSURE, \n\tEXPOSURE\n\tFROM EXP_SetEarnedPremiumValues\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244754"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893066"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542206"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 05:01:46"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 09:55:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "1"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_BALANCE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}