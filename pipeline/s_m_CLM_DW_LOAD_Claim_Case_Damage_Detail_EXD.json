{
    "name": "s_m_CLM_DW_LOAD_Claim_Case_Damage_Detail_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Case_Damage_Detail_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLAIM_CASE_AK_ID AS (\n\tSELECT\n\tclaim_case_ak_id,\n\tclaim_case_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_case.claim_case_ak_id as claim_case_ak_id, \r\n\t\tclaim_case.claim_case_key as claim_case_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case \r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_key ORDER BY claim_case_ak_id) = 1\n),\nSQ_CLAIM_CASE_STAGE_TABLES AS (\n\tSELECT \r\n\tccd.tch_claim_nbr, ccd.tch_client_id, ccd.damage_seq, ccd.damage_cd, ccd.damage_amt, ccd.damage_desc, ccd.damage_high_amt, ccd.damage_type \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_clmt_damages_stage ccd\n),\nEXP_VALIDATE AS (\n\tSELECT\n\ttch_claim_nbr1 AS tch_claim_nbr_ccd,\n\ttch_client_id1 AS tch_client_id_ccd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr_ccd))) OR IS_SPACES(LTRIM(RTRIM(tch_claim_nbr_ccd))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr_ccd)))=0,'N/A',LTRIM(RTRIM(tch_claim_nbr_ccd))) \r\n\t--                                                                                                                \n\tIFF(LTRIM(RTRIM(tch_claim_nbr_ccd)) IS NULL OR IS_SPACES(LTRIM(RTRIM(tch_claim_nbr_ccd))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr_ccd))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr_ccd))) AS v_tch_claim_nbr,\n\tv_tch_claim_nbr AS tch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_client_id_ccd))) OR IS_SPACES(LTRIM(RTRIM(tch_client_id_ccd))) OR LENGTH(LTRIM(RTRIM(tch_client_id_ccd)))=0,'N/A',LTRIM(RTRIM(tch_client_id_ccd)))\r\n\t--                                                                                                              \n\tIFF(LTRIM(RTRIM(tch_client_id_ccd)) IS NULL OR IS_SPACES(LTRIM(RTRIM(tch_client_id_ccd))) OR LENGTH(LTRIM(RTRIM(tch_client_id_ccd))) = 0, 'N/A', LTRIM(RTRIM(tch_client_id_ccd))) AS v_tch_client_id,\n\tv_tch_client_id AS tch_client_id,\n\t-- *INF*: v_tch_claim_nbr || '//'||v_tch_client_id\n\tv_tch_claim_nbr || '//' || v_tch_client_id AS v_Claim_Case_Key,\n\tv_Claim_Case_Key AS out_Claim_Case_Key,\n\t-- *INF*: :LKP.LKP_CLAIM_CASE_AK_ID(v_Claim_Case_Key)\n\tLKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_ak_id AS v_Claim_case_ak_id,\n\t-- *INF*: IIF(ISNULL(v_Claim_case_ak_id),-1,v_Claim_case_ak_id)\r\n\t-- \r\n\t-- \r\n\t-- ---v_Claim_case_ak_id\n\tIFF(v_Claim_case_ak_id IS NULL, - 1, v_Claim_case_ak_id) AS Claim_case_ak_id,\n\tdamage_seq AS IN_damage_seq,\n\t-- *INF*: IIF(ISNULL(IN_damage_seq) ,-1 ,IN_damage_seq)\n\tIFF(IN_damage_seq IS NULL, - 1, IN_damage_seq) AS damage_seq,\n\tdamage_cd AS IN_damage_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_damage_cd))) OR IS_SPACES(LTRIM(RTRIM(IN_damage_cd))) OR LENGTH(LTRIM(RTRIM(IN_damage_cd)))=0,'N/A' ,LTRIM(RTRIM(IN_damage_cd)))\n\tIFF(LTRIM(RTRIM(IN_damage_cd)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_damage_cd))) OR LENGTH(LTRIM(RTRIM(IN_damage_cd))) = 0, 'N/A', LTRIM(RTRIM(IN_damage_cd))) AS damage_cd,\n\tdamage_amt AS IN_damage_amt,\n\t-- *INF*: IIF(ISNULL(IN_damage_amt),0.0 ,IN_damage_amt)\n\tIFF(IN_damage_amt IS NULL, 0.0, IN_damage_amt) AS damage_amt,\n\tdamage_high_amt AS IN_damage_high_amt,\n\t-- *INF*: IIF(ISNULL(IN_damage_high_amt) ,0.0 ,IN_damage_high_amt)\n\tIFF(IN_damage_high_amt IS NULL, 0.0, IN_damage_high_amt) AS damage_high_amt,\n\tdamage_desc AS IN_damage_desc,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_damage_desc))) OR IS_SPACES(LTRIM(RTRIM(IN_damage_desc))) OR LENGTH(LTRIM(RTRIM(IN_damage_desc)))=0,'N/A' ,LTRIM(RTRIM(IN_damage_desc)))\n\tIFF(LTRIM(RTRIM(IN_damage_desc)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_damage_desc))) OR LENGTH(LTRIM(RTRIM(IN_damage_desc))) = 0, 'N/A', LTRIM(RTRIM(IN_damage_desc))) AS damage_desc,\n\tdamage_type AS IN_damage_type,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_damage_type))) OR IS_SPACES(LTRIM(RTRIM(IN_damage_type))) OR LENGTH(LTRIM(RTRIM(IN_damage_type)))=0,'N/A' ,LTRIM(RTRIM(IN_damage_type)))\n\tIFF(LTRIM(RTRIM(IN_damage_type)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_damage_type))) OR LENGTH(LTRIM(RTRIM(IN_damage_type))) = 0, 'N/A', LTRIM(RTRIM(IN_damage_type))) AS damage_type\n\tFROM SQ_CLAIM_CASE_STAGE_TABLES\n\tLEFT JOIN LKP_CLAIM_CASE_AK_ID LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key\n\tON LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_key = v_Claim_Case_Key\n\n),\nLKP_CLAIM_CASE_DAM_DETAIL AS (\n\tSELECT\n\tclaim_case_dam_det_id,\n\tclaim_case_dam_det_ak_id,\n\tclaim_case_ak_id,\n\tdam_seq_num,\n\tdam_code,\n\tdam_low_amt,\n\tdam_high_amt,\n\tdam_comment,\n\tdam_type_code\n\tFROM (\n\t\tSELECT ccd.claim_case_dam_det_id as claim_case_dam_det_id, \r\n\t\tccd.claim_case_dam_det_ak_id as claim_case_dam_det_ak_id, \r\n\t\tccd.dam_low_amt as dam_low_amt, ccd.dam_high_amt as dam_high_amt, \r\n\t\tccd.dam_comment as dam_comment, ccd.dam_type_code as dam_type_code, \r\n\t\tccd.claim_case_ak_id as claim_case_ak_id, ccd.dam_seq_num as dam_seq_num, \r\n\t\tLTRIM(RTRIM(ccd.dam_code)) as dam_code \r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_damage_detail ccd\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_ak_id,dam_seq_num,dam_code ORDER BY claim_case_dam_det_id) = 1\n),\nEXP_DETECT_CHANGES AS (\n\tSELECT\n\tEXP_VALIDATE.Claim_case_ak_id AS claim_case_ak_id,\n\tEXP_VALIDATE.out_Claim_Case_Key,\n\tEXP_VALIDATE.damage_seq,\n\tEXP_VALIDATE.damage_cd,\n\tEXP_VALIDATE.damage_amt,\n\tEXP_VALIDATE.damage_high_amt,\n\tEXP_VALIDATE.damage_desc,\n\tEXP_VALIDATE.damage_type,\n\tLKP_CLAIM_CASE_DAM_DETAIL.claim_case_dam_det_id AS old_claim_case_dam_det_id,\n\tLKP_CLAIM_CASE_DAM_DETAIL.claim_case_dam_det_ak_id AS old_claim_case_dam_det_ak_id,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_seq_num AS old_dam_seq_num,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_code AS old_dam_code,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_low_amt AS old_dam_low_amt,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_high_amt AS old_dam_high_amt,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_comment AS old_dam_comment,\n\tLKP_CLAIM_CASE_DAM_DETAIL.dam_type_code AS old_dam_type_code,\n\t-- *INF*: IIF(ISNULL(old_claim_case_dam_det_id),'NEW',\r\n\t--      IIF(\r\n\t-- \t\tdamage_amt <> old_dam_low_amt OR \r\n\t-- \t\tdamage_high_amt <> old_dam_high_amt OR \r\n\t-- \t\tLTRIM(RTRIM(damage_desc)) <> LTRIM(RTRIM(old_dam_comment)) OR \r\n\t-- \t\tLTRIM(RTRIM(damage_type)) <> LTRIM(RTRIM(old_dam_type_code)) \r\n\t-- \t\t,'UPDATE','NOCHANGE'))\r\n\t-- \n\tIFF(old_claim_case_dam_det_id IS NULL, 'NEW', IFF(damage_amt <> old_dam_low_amt OR damage_high_amt <> old_dam_high_amt OR LTRIM(RTRIM(damage_desc)) <> LTRIM(RTRIM(old_dam_comment)) OR LTRIM(RTRIM(damage_type)) <> LTRIM(RTRIM(old_dam_type_code)), 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(v_changed_flag='NEW',TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(v_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM EXP_VALIDATE\n\tLEFT JOIN LKP_CLAIM_CASE_DAM_DETAIL\n\tON LKP_CLAIM_CASE_DAM_DETAIL.claim_case_ak_id = EXP_VALIDATE.Claim_case_ak_id AND LKP_CLAIM_CASE_DAM_DETAIL.dam_seq_num = EXP_VALIDATE.damage_seq AND LKP_CLAIM_CASE_DAM_DETAIL.dam_code = EXP_VALIDATE.damage_cd\n),\nFIL_INSERT AS (\n\tSELECT\n\told_claim_case_dam_det_ak_id, \n\tclaim_case_ak_id, \n\tout_Claim_Case_Key, \n\tdamage_seq, \n\tdamage_cd, \n\tdamage_amt, \n\tdamage_high_amt, \n\tdamage_desc, \n\tdamage_type, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_DETECT_CHANGES\n\tWHERE changed_flag='NEW' OR changed_flag='UPDATE'\n),\nSEQ_Claim_Case_Dam_Det_ak_id AS (\n\tCREATE SEQUENCE SEQ_Claim_Case_Dam_Det_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\told_claim_case_dam_det_ak_id,\n\t-- *INF*: IIF(changed_flag ='NEW',NEXTVAL,old_claim_case_dam_det_ak_id)\n\tIFF(changed_flag = 'NEW', NEXTVAL, old_claim_case_dam_det_ak_id) AS claim_case_dam_det_ak_id,\n\tclaim_case_ak_id,\n\tout_Claim_Case_Key,\n\tdamage_seq,\n\tdamage_cd,\n\tdamage_amt,\n\tdamage_high_amt,\n\tdamage_desc,\n\tdamage_type,\n\tchanged_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tSEQ_Claim_Case_Dam_Det_ak_id.NEXTVAL\n\tFROM FIL_INSERT\n),\nclaim_case_damage_detail_insert AS (\n\tINSERT INTO claim_case_damage_detail\n\t(claim_case_dam_det_ak_id, claim_case_ak_id, claim_case_key, dam_seq_num, dam_code, dam_low_amt, dam_high_amt, dam_comment, dam_type_code, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tCLAIM_CASE_DAM_DET_AK_ID, \n\tCLAIM_CASE_AK_ID, \n\tout_Claim_Case_Key AS CLAIM_CASE_KEY, \n\tdamage_seq AS DAM_SEQ_NUM, \n\tdamage_cd AS DAM_CODE, \n\tdamage_amt AS DAM_LOW_AMT, \n\tdamage_high_amt AS DAM_HIGH_AMT, \n\tdamage_desc AS DAM_COMMENT, \n\tdamage_type AS DAM_TYPE_CODE, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_Determine_AK\n),\nSQ_claim_case_damage_detail AS (\n\tSELECT \r\n\ta.claim_case_dam_det_id, \r\n\ta.claim_case_ak_id, \r\n\ta.dam_seq_num, \r\n\ta.dam_code, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_damage_detail a\r\n\tWHERE \r\n\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND\r\n\tEXISTS(SELECT 1 \r\n\t                 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_damage_detail b\r\n\t                 WHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\r\n\t                 AND a.claim_case_ak_id = b.claim_case_ak_id\r\n\t                 AND a.dam_seq_num = b.dam_seq_num\r\n\t                 AND a.dam_code =b.dam_code \r\n\t \t           GROUP BY b.claim_case_ak_id,b.dam_seq_num,b.dam_code \r\n\t                 HAVING COUNT(*) >1) \r\n\tORDER BY a.claim_case_ak_id, a.dam_seq_num, a.dam_code, a.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_case_dam_det_id,\n\tclaim_case_ak_id,\n\tdam_seq_num,\n\tdam_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,claim_case_ak_id=v_prev_row_claim_case_ak_id\r\n\t--  and dam_seq_num = v_prev_row_dam_seq_num \r\n\t-- and dam_code=v_prev_row_dam_code,ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\t\tclaim_case_ak_id = v_prev_row_claim_case_ak_id AND dam_seq_num = v_prev_row_dam_seq_num AND dam_code = v_prev_row_dam_code, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_case_ak_id AS v_prev_row_claim_case_ak_id,\n\tdam_seq_num AS v_prev_row_dam_seq_num,\n\tdam_code AS v_prev_row_dam_code,\n\teff_from_date AS v_prev_row_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_case_damage_detail\n),\nFIL_Firstrow_InAk_Group AS (\n\tSELECT\n\tclaim_case_dam_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <>eff_to_date\n),\nUPD_CLAIM_CASE_DAMAGE_DETAIL AS (\n\tSELECT\n\tclaim_case_dam_det_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_Firstrow_InAk_Group\n),\nclaim_case_damage_detail_update AS (\n\tMERGE INTO claim_case_damage_detail AS T\n\tUSING UPD_CLAIM_CASE_DAMAGE_DETAIL AS S\n\tON T.claim_case_dam_det_id = S.claim_case_dam_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}