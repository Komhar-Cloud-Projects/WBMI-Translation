{
    "name": "s_m_FEED_Load_WorkHsbEquipBreakdown",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WorkHsbEquipBreakdown",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_sup_state AS (\n\tSELECT\n\tstate_code,\n\tstate_abbrev\n\tFROM (\n\t\tSELECT sup_state.state_code as state_code, sup_state.state_abbrev as state_abbrev FROM sup_state\r\n\t\twhere crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_abbrev ORDER BY state_code) = 1\n),\nLKP_Agency AS (\n\tSELECT\n\tAgencyCode,\n\tAgencyAKID\n\tFROM (\n\t\tSELECT v2.Agency.AgencyCode as AgencyCode, v2.Agency.AgencyAKID as AgencyAKID FROM v2.Agency\r\n\t\twhere SourceSystemID='AgencyODS' and CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyAKID ORDER BY AgencyCode) = 1\n),\nSQ_Equipment_PremiumAmount AS (\n\tSELECT p.pol_ak_id,pc.InsuranceLine,pd.ProductAKId,pt.PremiumTransactionEnteredDate,pt.PremiumTransactionEffectiveDate,\r\n\tcase when pt.OffsetOnsetCode<>'Offset' then pt.EffectiveDate else pt.PremiumTransactionEnteredDate end as OriginalTransactionEnteredDate, \r\n\tsum(pt.PremiumTransactionAmount) EquipmentBreakdownPremium \r\n\tFROM v2.policy p\r\n\tINNER JOIN  StrategicProfitCenter spc\r\n\ton spc.StrategicProfitCenterAKId=p.StrategicProfitCenterAKId and spc.CurrentSnapshotFlag=1 and p.crrnt_snpsht_flag=1 and p.source_sys_id='DCT'\r\n\tand spc.StrategicProfitCenterDescription =@{pipeline().parameters.STRATEGIC_PROFITCENTER_DESCRIPTION}\r\n\tINNER JOIN  InsuranceSegment i\r\n\ton i.InsuranceSegmentAKId=p.InsuranceSegmentAKId and i.CurrentSnapshotFlag=1 and i.InsuranceSegmentAbbreviation='CL'\r\n\tINNER JOIN  PolicyCoverage pc on pc.PolicyAKID=p.pol_ak_id and pc.CurrentSnapshotFlag=1 and pc.SourceSystemID='DCT'\r\n\tand pc.InsuranceLine =@{pipeline().parameters.INSURANCE_LINE}\r\n\tINNER JOIN  RatingCoverage rc on pc.PolicyCoverageAKID=rc.PolicyCoverageAKID and rc.CoverageType in ('EquipmentBreakdown','EquipBreakdown')\r\n\tINNER JOIN  Product pd on rc.ProductAKId=pd.ProductAKId and pd.CurrentSnapshotFlag=1 \r\n\tand pd.ProductDescription = @{pipeline().parameters.PRODUCT_DESCRIPTION}\r\n\tINNER JOIN  InsuranceReferenceLineOfBusiness lob on lob.InsuranceReferenceLineOfBusinessAKId=rc.InsuranceReferenceLineOfBusinessAKId\r\n\tand lob.CurrentSnapshotFlag=1 and lob.InsuranceReferenceLineOfBusinessDescription='Commercial Boiler & Machinery'\r\n\tINNER JOIN  PremiumTransaction pt on pt.RatingCoverageAKId=rc.RatingCoverageAKId and pt.EffectiveDate=rc.EffectiveDate\r\n\tand pt.SourceSystemID='DCT'\r\n\tand not pt.PremiumTransactionCode like '%Audit%'\r\n\tand not pt.ReasonAmendedCode in ('CWO','Claw Back')\r\n\tgroup by p.pol_ak_id,pc.InsuranceLine,pd.ProductAKId,pt.PremiumTransactionEnteredDate, pt.PremiumTransactionEffectiveDate, case when pt.OffsetOnsetCode<>'Offset' then pt.EffectiveDate else pt.PremiumTransactionEnteredDate end\r\n\t----\n),\nSQ_WorkHsbEquipmentBreakdown AS (\n\tDECLARE @date DATETIME\r\n\tset @date = cast(DATEADD(dd, 1, EOMONTH(GETDATE(),-2)) as datetime)\r\n\t\r\n\tSELECT p.pol_ak_id as PolicyAKId\r\n\t,p.AgencyAKid as AgencyAKId\r\n\t,right(r.RiskLocationKey,33) as LocationXMLId\r\n\t,pt.PremiumTransactionEnteredDate as TransactionEnteredDate\r\n\t,pt.PremiumTransactionEffectiveDate as TransactionEffectiveDate\r\n\t,pt.PremiumTransactionBookedDate as TransactionBookedDate\r\n\t,p.pol_num as PolicyNum\r\n\t,p.prior_pol_key as PriorPolicyKey\r\n\t,pt.PremiumTransactionCode as TransactionCode\r\n\t,pt.OffsetOnsetCode as OffsetOnsetCode\r\n\t,cc.name as NameOfInsured\r\n\t,ca.addr_line_1 as MailingStreetAddress1\r\n\t,ca.addr_line_2 as MailingStreetAddress2\r\n\t,ca.addr_line_3 as MailingStreetAddress3\r\n\t,ca.city_name as MailingCity\r\n\t,ca.state_prov_code as MailingStateProvinceAbbreviation\r\n\t,ca.zip_postal_code as MailingZipCode\r\n\t,ca.zip_postal_code_extension as MailingZipExtension\r\n\t,p.pol_eff_date as PolicyEffectiveDate\r\n\t,p.pol_exp_date as PolicyExpirationDate\r\n\t,0 as EquipmentBreakdownPremium\r\n\t,spc.StrategicProfitCenterAbbreviation+'-'+po.PolicyOfferingAbbreviation as ProgramId\r\n\t,r.StreetAddress as RiskStreetAddress\r\n\t,r.RatingCity as RiskCity\r\n\t,r.StateProvinceCode as RiskStateProvinceAbbreviation\r\n\t,r.ZipPostalCode as RiskZipCode\r\n\t,rc.OccupancyClassDescription as Occupancy\r\n\t,pc.InsuranceLine as InsuranceLine\r\n\t,rc.RiskType as RiskType\r\n\t,rc.CoverageType as CoverageType\r\n\t,rc.PerilGroup as PerilGroup\r\n\t,rc.SubCoverageTypecode as SubCoverageTypecode\r\n\t,rc.CoverageVersion as CoverageVersion \r\n\t,rc.RatingCoverageCancellationDate as RatingCoverageCancellationDate \r\n\t,case when pt.OffsetOnsetCode<>'Offset' then pt.EffectiveDate else pt.PremiumTransactionEnteredDate end as OriginalTransactionEnteredDate,\r\n\tpd.ProductAKId,\r\n\trc.ActiveBuildingFlag,\r\n\trc.SubLocationUnitNumber,\r\n\tlen(rc.OccupancyClassDescription) as OccupancyClassDescription,\r\n\tlen(p.prim_bus_class_code) as prim_bus_class_code,\r\n\tRIGHT(p.prim_bus_class_code,4) as BCCCode,\r\n\tpo.PolicyOfferingAbbreviation,\r\n\trc.ClassCode, A.LegalName,A.PrimaryEmailAddress, A.PrimaryPhoneNumber\r\n\tFROM v2.policy p\r\n\tINNER JOIN StrategicProfitCenter spc on spc.StrategicProfitCenterAKId=p.StrategicProfitCenterAKId and spc.CurrentSnapshotFlag=1 and p.source_sys_id='DCT'\r\n\tand spc.StrategicProfitCenterDescription=@{pipeline().parameters.STRATEGIC_PROFITCENTER_DESCRIPTION}\r\n\tINNER JOIN InsuranceSegment i on i.InsuranceSegmentAKId=p.InsuranceSegmentAKId and i.CurrentSnapshotFlag=1 and i.InsuranceSegmentAbbreviation='CL'\r\n\tINNER JOIN PolicyOffering po on po.PolicyOfferingAKId=p.PolicyOfferingAKId and po.CurrentSnapshotFlag=1\r\n\tINNER JOIN VWContractCustomer cc on p.contract_cust_ak_id=cc.contract_cust_ak_id and cc.source_sys_id='DCT'\r\n\tINNER JOIN contract_customer_address ca on ca.contract_cust_ak_id=cc.contract_cust_ak_id and ca.addr_type='MAILING' and ca.source_sys_id='DCT'\r\n\tINNER JOIN RiskLocation r on p.pol_ak_id=r.PolicyAKID and r.CurrentSnapshotFlag=1 and r.SourceSystemID='DCT'\r\n\tINNER JOIN PolicyCoverage pc on pc.RiskLocationAKID=r.RiskLocationAKID and pc.CurrentSnapshotFlag=1 and pc.SourceSystemID='DCT'\r\n\tand pc.InsuranceLine=@{pipeline().parameters.INSURANCE_LINE}\r\n\tINNER JOIN RatingCoverage rc on pc.PolicyCoverageAKID=rc.PolicyCoverageAKID and rc.CoverageType NOT in ('LiabilityOnly','MoneyAndSecurities')\r\n\tINNER JOIN Product pd on rc.ProductAKId=pd.ProductAKId and pd.CurrentSnapshotFlag=1 and pd.ProductDescription =@{pipeline().parameters.PRODUCT_DESCRIPTION}\r\n\tINNER JOIN PremiumTransaction pt on pt.RatingCoverageAKId=rc.RatingCoverageAKId and pt.EffectiveDate=rc.EffectiveDate and pt.SourceSystemID='DCT'\r\n\tinner join V2.agency A on P.AgencyAKId = A.AgencyAKID and A.CurrentSnapshotFlag = 1\r\n\tand not pt.PremiumTransactionCode like '%Audit%'\r\n\tand not pt.ReasonAmendedCode in ('CWO','Claw Back')\r\n\tand pt.PremiumTransactionEnteredDate between p.eff_from_date and p.eff_to_date\r\n\tand pt.PremiumTransactionEnteredDate between cc.eff_from_date and cc.eff_to_date\r\n\tand pt.PremiumTransactionEnteredDate between ca.eff_from_date and ca.eff_to_date\r\n\tand pt.PremiumTransactionBookedDate >= @Date\r\n\tand exists (\r\n\tSELECT 1 FROM  rpt_edm..WorkPremiumTransactionHsbEquipBreakdown a\r\n\tWHERE  a.PremiumTransactionAKId = pt.PremiumTransactionAKID)\n),\nJNR_EquipBreakdown AS (SELECT\n\tSQ_WorkHsbEquipmentBreakdown.PolicyAKId, \n\tSQ_WorkHsbEquipmentBreakdown.AgencyAKId, \n\tSQ_WorkHsbEquipmentBreakdown.LocationXMLId, \n\tSQ_WorkHsbEquipmentBreakdown.TransactionEnteredDate, \n\tSQ_WorkHsbEquipmentBreakdown.TransactionEffectiveDate, \n\tSQ_WorkHsbEquipmentBreakdown.TransactionBookedDate, \n\tSQ_WorkHsbEquipmentBreakdown.PolicyNum, \n\tSQ_WorkHsbEquipmentBreakdown.PriorPolicyKey, \n\tSQ_WorkHsbEquipmentBreakdown.TransactionCode, \n\tSQ_WorkHsbEquipmentBreakdown.OffsetOnsetCode, \n\tSQ_WorkHsbEquipmentBreakdown.NameOfInsured, \n\tSQ_WorkHsbEquipmentBreakdown.MailingStreetAddress1, \n\tSQ_WorkHsbEquipmentBreakdown.MailingStreetAddress2, \n\tSQ_WorkHsbEquipmentBreakdown.MailingStreetAddress3, \n\tSQ_WorkHsbEquipmentBreakdown.MailingCity, \n\tSQ_WorkHsbEquipmentBreakdown.MailingStateProvinceAbbreviation, \n\tSQ_WorkHsbEquipmentBreakdown.MailingZipCode, \n\tSQ_WorkHsbEquipmentBreakdown.zip_postal_code_extension, \n\tSQ_WorkHsbEquipmentBreakdown.PolicyEffectiveDate, \n\tSQ_WorkHsbEquipmentBreakdown.PolicyExpirationDate, \n\tSQ_WorkHsbEquipmentBreakdown.EquipmentBreakdownPremium, \n\tSQ_WorkHsbEquipmentBreakdown.ProgramId, \n\tSQ_WorkHsbEquipmentBreakdown.RiskStreetAddress, \n\tSQ_WorkHsbEquipmentBreakdown.RiskCity, \n\tSQ_WorkHsbEquipmentBreakdown.RiskStateProvinceAbbreviation, \n\tSQ_WorkHsbEquipmentBreakdown.RiskZipCode, \n\tSQ_WorkHsbEquipmentBreakdown.Occupancy, \n\tSQ_WorkHsbEquipmentBreakdown.InsuranceLine, \n\tSQ_WorkHsbEquipmentBreakdown.RiskType, \n\tSQ_WorkHsbEquipmentBreakdown.CoverageType, \n\tSQ_WorkHsbEquipmentBreakdown.PerilGroup, \n\tSQ_WorkHsbEquipmentBreakdown.SubCoverageTypecode, \n\tSQ_WorkHsbEquipmentBreakdown.CoverageVersion, \n\tSQ_WorkHsbEquipmentBreakdown.RatingCoverageCancellationDate, \n\tSQ_WorkHsbEquipmentBreakdown.OriginalTransactionEnteredDate, \n\tSQ_WorkHsbEquipmentBreakdown.ProductAKId, \n\tSQ_WorkHsbEquipmentBreakdown.ActiveBuildingFlag, \n\tSQ_WorkHsbEquipmentBreakdown.SubLocationUnitNumber, \n\tSQ_WorkHsbEquipmentBreakdown.OccupancyClassDescription, \n\tSQ_WorkHsbEquipmentBreakdown.prim_bus_class_code, \n\tSQ_WorkHsbEquipmentBreakdown.BCCCode, \n\tSQ_WorkHsbEquipmentBreakdown.PolicyOfferingAbbreviation, \n\tSQ_WorkHsbEquipmentBreakdown.ClassCode, \n\tSQ_Equipment_PremiumAmount.Pol_Ak_Id AS Equip_Pol_Ak_Id, \n\tSQ_Equipment_PremiumAmount.InsuranceLine AS Equip_InsuranceLine, \n\tSQ_Equipment_PremiumAmount.ProductAKId AS Equip_ProductAKId, \n\tSQ_Equipment_PremiumAmount.PremiumTransactionEnteredDate AS Equip_PremiumTransactionEnteredDate, \n\tSQ_Equipment_PremiumAmount.PremiumTransactionEffectiveDate AS Equip_PremiumTransactionEffectiveDate, \n\tSQ_Equipment_PremiumAmount.OriginalTransactionEnteredDate AS Equip_OriginalTransactionEnteredDate, \n\tSQ_Equipment_PremiumAmount.EquipmentBreakdownPremium AS Equip_EquipmentBreakdownPremium, \n\tSQ_WorkHsbEquipmentBreakdown.LegalName, \n\tSQ_WorkHsbEquipmentBreakdown.PrimaryPhoneNumber, \n\tSQ_WorkHsbEquipmentBreakdown.PrimaryEmailAddress\n\tFROM SQ_WorkHsbEquipmentBreakdown\n\tINNER JOIN SQ_Equipment_PremiumAmount\n\tON SQ_Equipment_PremiumAmount.Pol_Ak_Id = SQ_WorkHsbEquipmentBreakdown.PolicyAKId AND SQ_Equipment_PremiumAmount.InsuranceLine = SQ_WorkHsbEquipmentBreakdown.InsuranceLine AND SQ_Equipment_PremiumAmount.ProductAKId = SQ_WorkHsbEquipmentBreakdown.ProductAKId AND SQ_Equipment_PremiumAmount.PremiumTransactionEnteredDate = SQ_WorkHsbEquipmentBreakdown.TransactionEnteredDate AND SQ_Equipment_PremiumAmount.PremiumTransactionEffectiveDate = SQ_WorkHsbEquipmentBreakdown.TransactionEffectiveDate AND SQ_Equipment_PremiumAmount.OriginalTransactionEnteredDate = SQ_WorkHsbEquipmentBreakdown.OriginalTransactionEnteredDate\n),\nSRT_HSB_Equipment AS (\n\tSELECT\n\tPolicyAKId, \n\tInsuranceLine, \n\tAgencyAKId, \n\tLocationXMLId, \n\tTransactionEffectiveDate, \n\tTransactionEnteredDate, \n\tOriginalTransactionEnteredDate, \n\tTransactionBookedDate, \n\tPolicyNum, \n\tPriorPolicyKey, \n\tTransactionCode, \n\tOffsetOnsetCode, \n\tNameOfInsured, \n\tMailingStreetAddress1, \n\tMailingStreetAddress2, \n\tMailingStreetAddress3, \n\tMailingCity, \n\tMailingStateProvinceAbbreviation, \n\tMailingZipCode, \n\tzip_postal_code_extension, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate, \n\tEquip_EquipmentBreakdownPremium AS EquipmentBreakdownPremium, \n\tProgramId, \n\tRiskStreetAddress, \n\tRiskCity, \n\tRiskStateProvinceAbbreviation, \n\tRiskZipCode, \n\tOccupancy, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypecode, \n\tCoverageVersion, \n\tRatingCoverageCancellationDate, \n\tProductAKId, \n\tActiveBuildingFlag, \n\tSubLocationUnitNumber, \n\tOccupancyClassDescription, \n\tprim_bus_class_code, \n\tBCCCode, \n\tPolicyOfferingAbbreviation, \n\tClassCode, \n\tLegalName, \n\tPrimaryPhoneNumber, \n\tPrimaryEmailAddress\n\tFROM JNR_EquipBreakdown\n\tORDER BY PolicyAKId ASC, InsuranceLine ASC, LocationXMLId ASC, TransactionEffectiveDate ASC, TransactionEnteredDate ASC, OriginalTransactionEnteredDate ASC, OffsetOnsetCode ASC, ActiveBuildingFlag ASC, SubLocationUnitNumber DESC, OccupancyClassDescription ASC, prim_bus_class_code ASC\n),\nEXPTRANS AS (\n\tSELECT\n\tPolicyAKId,\n\tAgencyAKId,\n\tLocationXMLId,\n\tTransactionEnteredDate,\n\tTransactionEffectiveDate,\n\tTransactionBookedDate,\n\tPolicyNum,\n\tPriorPolicyKey,\n\tTransactionCode,\n\tOffsetOnsetCode,\n\tNameOfInsured,\n\tMailingStreetAddress1,\n\tMailingStreetAddress2,\n\tMailingStreetAddress3,\n\tMailingCity,\n\tMailingStateProvinceAbbreviation,\n\tMailingZipCode,\n\tzip_postal_code_extension,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tEquipmentBreakdownPremium,\n\tProgramId,\n\tRiskStreetAddress,\n\tRiskCity,\n\tRiskStateProvinceAbbreviation,\n\tRiskZipCode,\n\tOccupancy,\n\tInsuranceLine,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypecode,\n\tCoverageVersion,\n\tRatingCoverageCancellationDate,\n\tOriginalTransactionEnteredDate,\n\tBCCCode,\n\tPolicyOfferingAbbreviation,\n\tClassCode,\n\tLegalName,\n\tPrimaryPhoneNumber,\n\tPrimaryEmailAddress\n\tFROM SRT_HSB_Equipment\n),\nSRC_Anchor AS (\n\tSELECT\n\tPolicyAKId,\n\tAgencyAKId,\n\tLocationXMLId,\n\tTransactionEnteredDate,\n\tTransactionEffectiveDate,\n\tTransactionBookedDate,\n\tPolicyNum AS PolicyKey,\n\tPriorPolicyKey,\n\tTransactionCode,\n\tOffsetOnsetCode,\n\tNameOfInsured,\n\tMailingStreetAddress1,\n\tMailingStreetAddress2,\n\tMailingStreetAddress3,\n\t-- *INF*: CONCAT(CONCAT(IIF(MailingStreetAddress1<>'N/A', MailingStreetAddress1, ''),IIF(MailingStreetAddress2<>'N/A', MailingStreetAddress2,'')), IIF(MailingStreetAddress3<>'N/A', MailingStreetAddress3, ''))\n\tCONCAT(CONCAT(\n\t        IFF(\n\t            MailingStreetAddress1 <> 'N/A', MailingStreetAddress1, ''\n\t        ), \n\t        IFF(\n\t            MailingStreetAddress2 <> 'N/A', MailingStreetAddress2, ''\n\t        )), \n\t    IFF(\n\t        MailingStreetAddress3 <> 'N/A', MailingStreetAddress3, ''\n\t    )) AS MailingStreetAddress,\n\tMailingCity,\n\tMailingStateProvinceAbbreviation,\n\tMailingZipCode,\n\tzip_postal_code_extension,\n\t-- *INF*: CONCAT(REG_REPLACE(MailingZipCode,'-',''),IIF(zip_postal_code_extension<>'N/A',zip_postal_code_extension,''))\n\tCONCAT(REGEXP_REPLACE(MailingZipCode, '-', ''), \n\t    IFF(\n\t        zip_postal_code_extension <> 'N/A', zip_postal_code_extension, ''\n\t    )) AS o_MailingZipCode,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tEquipmentBreakdownPremium,\n\tProgramId,\n\tRiskStreetAddress,\n\tRiskCity,\n\tRiskStateProvinceAbbreviation,\n\t-- *INF*: :LKP.LKP_sup_state(RiskStateProvinceAbbreviation)\n\tLKP_SUP_STATE_RiskStateProvinceAbbreviation.state_code AS RiskStateProvinceAbbreviation1,\n\tRiskZipCode,\n\tOccupancy,\n\tInsuranceLine,\n\tRatingCoverageCancellationDate,\n\t-- *INF*: IIF(OffsetOnsetCode='Offset',0,IIF(RatingCoverageCancellationDate>=TO_DATE('21001231','YYYYMMDD'),1,0))\n\tIFF(\n\t    OffsetOnsetCode = 'Offset', 0,\n\t    IFF(\n\t        RatingCoverageCancellationDate >= TO_TIMESTAMP('21001231', 'YYYYMMDD'), 1, 0\n\t    )\n\t) AS ActiveBuildingFlag,\n\tOriginalTransactionEnteredDate,\n\tBCCCode,\n\tPolicyOfferingAbbreviation,\n\tClassCode,\n\tLegalName,\n\tPrimaryPhoneNumber,\n\tPrimaryEmailAddress\n\tFROM EXPTRANS\n\tLEFT JOIN LKP_SUP_STATE LKP_SUP_STATE_RiskStateProvinceAbbreviation\n\tON LKP_SUP_STATE_RiskStateProvinceAbbreviation.state_abbrev = RiskStateProvinceAbbreviation\n\n),\nAGG_location_grain AS (\n\tSELECT\n\tPolicyAKId,\n\tAgencyAKId,\n\tInsuranceLine,\n\tLocationXMLId,\n\tTransactionEffectiveDate,\n\tTransactionEnteredDate,\n\tTransactionBookedDate,\n\tPolicyKey,\n\tPriorPolicyKey,\n\tTransactionCode,\n\tNameOfInsured,\n\tMailingStreetAddress,\n\tMailingCity,\n\tMailingStateProvinceAbbreviation,\n\to_MailingZipCode AS MailingZipCode,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tEquipmentBreakdownPremium,\n\tProgramId,\n\tRiskStreetAddress,\n\tRiskCity,\n\tRiskStateProvinceAbbreviation1 AS RiskStateProvinceAbbreviation,\n\tRiskZipCode,\n\tOccupancy,\n\tActiveBuildingFlag AS i_ActiveBuildingFlag,\n\t-- *INF*: MAX(i_ActiveBuildingFlag)\n\tMAX(i_ActiveBuildingFlag) AS ActiveBuildingFlag,\n\tOriginalTransactionEnteredDate,\n\tBCCCode,\n\tPolicyOfferingAbbreviation,\n\tClassCode,\n\tLegalName,\n\tPrimaryPhoneNumber,\n\tPrimaryEmailAddress\n\tFROM SRC_Anchor\n\tGROUP BY PolicyAKId, InsuranceLine, LocationXMLId, TransactionEffectiveDate, TransactionEnteredDate, OriginalTransactionEnteredDate\n),\nLKP_RatingLocationLimit AS (\n\tSELECT\n\tRatingLocationLimitValue,\n\tPolicyAKId,\n\tInsuranceLine,\n\tRatingLocationKey,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT a.RatingLocationLimitValue as RatingLocationLimitValue,\r\n\t\ta.PolicyAKId as PolicyAKId,\r\n\t\ta.InsuranceLine as InsuranceLine,\r\n\t\ta.RatingLocationKey as RatingLocationKey,\r\n\t\ta.EffectiveDate as EffectiveDate,\r\n\t\ta.ExpirationDate as ExpirationDate\r\n\t\tFROM RatingLocationLimit a\r\n\t\twhere a.InsuranceLine in ('Property','SBOPProperty','BusinessOwners')\r\n\t\tand a.RatingLocationLimitType='EquipmentBreakdown'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKId,InsuranceLine,RatingLocationKey,EffectiveDate,ExpirationDate ORDER BY RatingLocationLimitValue) = 1\n),\nEXP_Calc AS (\n\tSELECT\n\tAGG_location_grain.PolicyAKId,\n\tAGG_location_grain.AgencyAKId,\n\tAGG_location_grain.InsuranceLine,\n\tAGG_location_grain.LocationXMLId,\n\tAGG_location_grain.TransactionEffectiveDate,\n\tAGG_location_grain.TransactionEnteredDate,\n\tAGG_location_grain.TransactionBookedDate,\n\tAGG_location_grain.PolicyKey,\n\tAGG_location_grain.PriorPolicyKey,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PriorPolicyKey='N/A','',\r\n\t-- LENGTH(PriorPolicyKey)<=9,SUBSTR(PriorPolicyKey,1,7),\r\n\t-- SUBSTR(PriorPolicyKey,-9,7))\n\tDECODE(\n\t    TRUE,\n\t    PriorPolicyKey = 'N/A', '',\n\t    LENGTH(PriorPolicyKey) <= 9, SUBSTR(PriorPolicyKey, 1, 7),\n\t    SUBSTR(PriorPolicyKey, - 9, 7)\n\t) AS o_PriorPolicyKey,\n\tAGG_location_grain.TransactionCode AS i_TransactionCode,\n\t-- *INF*: i_TransactionCode\r\n\t-- \r\n\t-- --DECODE(i_TransactionCode,'New','01','Endorse','30','Cancel','03','Reinstate','10','Rewrite','04','Reissue','04','Renew','07','NonRenew','03')\n\ti_TransactionCode AS TransactionCode,\n\tAGG_location_grain.NameOfInsured AS i_NameOfInsured,\n\t-- *INF*: SUBSTR(i_NameOfInsured,1,55)\n\tSUBSTR(i_NameOfInsured, 1, 55) AS NameOfInsured,\n\tAGG_location_grain.MailingStreetAddress AS i_MailingStreetAddress,\n\t-- *INF*: SUBSTR(i_MailingStreetAddress,1,55)\n\tSUBSTR(i_MailingStreetAddress, 1, 55) AS MailingStreetAddress,\n\tAGG_location_grain.MailingCity AS i_MailingCity,\n\t-- *INF*: SUBSTR(i_MailingCity,1,20)\n\tSUBSTR(i_MailingCity, 1, 20) AS MailingCity,\n\tAGG_location_grain.MailingStateProvinceAbbreviation,\n\tAGG_location_grain.MailingZipCode,\n\tAGG_location_grain.PolicyEffectiveDate,\n\tAGG_location_grain.PolicyExpirationDate,\n\tLKP_RatingLocationLimit.RatingLocationLimitValue AS Value,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(Value),-1,\r\n\t-- IS_NUMBER(Value),TO_DECIMAL(Value),\r\n\t-- -1)\n\tDECODE(\n\t    TRUE,\n\t    Value IS NULL, - 1,\n\t    REGEXP_LIKE(Value, '^[0-9]+$'), CAST(Value AS FLOAT),\n\t    - 1\n\t) AS o_Value,\n\tAGG_location_grain.EquipmentBreakdownPremium,\n\t-- *INF*: round(EquipmentBreakdownPremium,0)*100\n\tround(EquipmentBreakdownPremium, 0) * 100 AS o_EquipmentBreakdownPremium,\n\tAGG_location_grain.ProgramId,\n\tAGG_location_grain.RiskStreetAddress AS i_RiskStreetAddress,\n\t-- *INF*: SUBSTR(i_RiskStreetAddress,1,55)\n\tSUBSTR(i_RiskStreetAddress, 1, 55) AS RiskStreetAddress,\n\tAGG_location_grain.RiskCity AS i_RiskCity,\n\t-- *INF*: SUBSTR(i_RiskCity,1,20)\n\tSUBSTR(i_RiskCity, 1, 20) AS RiskCity,\n\tAGG_location_grain.RiskStateProvinceAbbreviation,\n\tAGG_location_grain.RiskZipCode AS i_RiskZipCode,\n\t-- *INF*: SUBSTR(REG_REPLACE(i_RiskZipCode,'-',''),1,13)\n\tSUBSTR(REGEXP_REPLACE(i_RiskZipCode, '-', ''), 1, 13) AS RiskZipCode,\n\tAGG_location_grain.BCCCode,\n\tAGG_location_grain.PolicyOfferingAbbreviation,\n\tAGG_location_grain.ClassCode,\n\tAGG_location_grain.Occupancy AS i_Occupancy,\n\t-- *INF*: LTRIM(RTRIM(\r\n\t-- IIF(\r\n\t-- REG_MATCH(i_Occupancy,'(.*)\\[([0-9]*)\\](.*)'),REG_EXTRACT(i_Occupancy,'(.*)\\[([0-9]*)\\](.*)',2),\r\n\t-- 'N/A')\r\n\t-- ))\n\tLTRIM(RTRIM(\n\t        IFF(\n\t            REGEXP_LIKE(i_Occupancy, '(.*)\\[([0-9]*)\\](.*)'),\n\t            REG_EXTRACT(i_Occupancy, '(.*)\\[([0-9]*)\\](.*)', 2),\n\t            'N/A'\n\t        ))) AS v_Occupancy,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_Occupancy='N/A' and PolicyOfferingAbbreviation = 'CPP', ClassCode,\r\n\t-- v_Occupancy='N/A' and PolicyOfferingAbbreviation = 'SMART', BCCCode,\r\n\t-- v_Occupancy)\n\tDECODE(\n\t    TRUE,\n\t    v_Occupancy = 'N/A' and PolicyOfferingAbbreviation = 'CPP', ClassCode,\n\t    v_Occupancy = 'N/A' and PolicyOfferingAbbreviation = 'SMART', BCCCode,\n\t    v_Occupancy\n\t) AS Occupancy,\n\tAGG_location_grain.ActiveBuildingFlag,\n\tAGG_location_grain.OriginalTransactionEnteredDate,\n\tAGG_location_grain.LegalName,\n\tAGG_location_grain.PrimaryPhoneNumber,\n\tAGG_location_grain.PrimaryEmailAddress\n\tFROM AGG_location_grain\n\tLEFT JOIN LKP_RatingLocationLimit\n\tON LKP_RatingLocationLimit.PolicyAKId = AGG_location_grain.PolicyAKId AND LKP_RatingLocationLimit.InsuranceLine = AGG_location_grain.InsuranceLine AND LKP_RatingLocationLimit.RatingLocationKey = AGG_location_grain.LocationXMLId AND LKP_RatingLocationLimit.EffectiveDate <= AGG_location_grain.TransactionEnteredDate AND LKP_RatingLocationLimit.ExpirationDate >= AGG_location_grain.TransactionEnteredDate\n),\nEXP_RowChange_Logic AS (\n\tSELECT\n\tPolicyAKId,\n\tAgencyAKId,\n\tInsuranceLine,\n\tLocationXMLId,\n\tTransactionEnteredDate,\n\tTransactionEffectiveDate,\n\tTransactionBookedDate,\n\tPolicyKey,\n\to_PriorPolicyKey AS PriorPolicyKey,\n\tTransactionCode,\n\tNameOfInsured,\n\tMailingStreetAddress,\n\tMailingCity,\n\tMailingStateProvinceAbbreviation,\n\tMailingZipCode,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\to_Value AS Value,\n\to_EquipmentBreakdownPremium AS EquipmentBreakdownPremium,\n\tProgramId,\n\tRiskStreetAddress,\n\tRiskCity,\n\tRiskStateProvinceAbbreviation,\n\tRiskZipCode,\n\tOccupancy,\n\tActiveBuildingFlag,\n\t-- *INF*: IIF(PolicyAKId=v_prev_PolicyAKId AND InsuranceLine=v_prev_InsuranceLine AND LocationXMLId=v_prev_LocationXMLId,1,0)\n\tIFF(\n\t    PolicyAKId = v_prev_PolicyAKId\n\t    and InsuranceLine = v_prev_InsuranceLine\n\t    and LocationXMLId = v_prev_LocationXMLId,\n\t    1,\n\t    0\n\t) AS v_SameGroupFlag,\n\t-- *INF*: MD5(NameOfInsured||\r\n\t-- MailingStreetAddress||\r\n\t-- MailingCity||\r\n\t-- MailingStateProvinceAbbreviation||\r\n\t-- MailingZipCode||\r\n\t-- RiskStreetAddress||\r\n\t-- RiskCity||\r\n\t-- RiskStateProvinceAbbreviation||\r\n\t-- RiskZipCode||\r\n\t-- Occupancy)\n\tMD5(NameOfInsured || MailingStreetAddress || MailingCity || MailingStateProvinceAbbreviation || MailingZipCode || RiskStreetAddress || RiskCity || RiskStateProvinceAbbreviation || RiskZipCode || Occupancy) AS v_HashValue,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- EquipmentBreakdownPremium!=0,1,\r\n\t-- v_SameGroupFlag=0,1,\r\n\t-- v_HashValue!=v_prev_HashValue,1,\r\n\t-- Value!=v_prev_Value,1,\r\n\t-- TransactionCode='03',1,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    EquipmentBreakdownPremium != 0, 1,\n\t    v_SameGroupFlag = 0, 1,\n\t    v_HashValue != v_prev_HashValue, 1,\n\t    Value != v_prev_Value, 1,\n\t    TransactionCode = '03', 1,\n\t    0\n\t) AS v_FilterFlag,\n\t-- *INF*: TRUNC(ADD_TO_DATE(SYSDATE,'MM',-(TO_INTEGER(@{pipeline().parameters.NO_OF_MONTHS}))-1),'MM')\n\tCAST(TRUNC(DATEADD(MONTH,- (CAST(@{pipeline().parameters.NO_OF_MONTHS} AS INTEGER)) - 1,CURRENT_TIMESTAMP), 'MONTH') AS TIMESTAMP_NTZ(0)) AS v_RunDate,\n\tOriginalTransactionEnteredDate,\n\t-- *INF*: to_char(TransactionBookedDate,'YYYYMM')\n\tto_char(TransactionBookedDate, 'YYYYMM') AS o_RunDate,\n\tPolicyAKId AS v_prev_PolicyAKId,\n\tLocationXMLId AS v_prev_LocationXMLId,\n\tInsuranceLine AS v_prev_InsuranceLine,\n\tv_HashValue AS v_prev_HashValue,\n\tValue AS v_prev_Value,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_FilterFlag!=1,0,\r\n\t-- TRUNC(TransactionBookedDate,'MM')>=v_RunDate AND TRUNC(TransactionBookedDate,'MM')<=GREATEST(ADD_TO_DATE(SYSDATE,'MM',@{pipeline().parameters.NO_OF_FUTUREMONTHS}),v_RunDate),1,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    v_FilterFlag != 1, 0,\n\t    CAST(TRUNC(TransactionBookedDate, 'MONTH') AS TIMESTAMP_NTZ(0)) >= v_RunDate AND CAST(TRUNC(TransactionBookedDate, 'MONTH') AS TIMESTAMP_NTZ(0)) <= GREATEST(DATEADD(MONTH,@{pipeline().parameters.NO_OF_FUTUREMONTHS},CURRENT_TIMESTAMP), v_RunDate), 1,\n\t    0\n\t) AS o_FilterFlag,\n\tLegalName,\n\tPrimaryPhoneNumber,\n\tPrimaryEmailAddress\n\tFROM EXP_Calc\n),\nmplt_value_type AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKPTRANS AS (\n\t\tSELECT\n\t\tCoverageGroupDescription,\n\t\tDctRiskTypeCode,\n\t\tDctCoverageTypeCode,\n\t\tDctPerilGroup,\n\t\tDctSubCoverageTypeCode,\n\t\tDctCoverageVersion\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tCoverageGroupDescription,\n\t\t\t\tDctRiskTypeCode,\n\t\t\t\tDctCoverageTypeCode,\n\t\t\t\tDctPerilGroup,\n\t\t\t\tDctSubCoverageTypeCode,\n\t\t\t\tDctCoverageVersion\n\t\t\tFROM InsuranceReferenceCoverageDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DctRiskTypeCode,DctCoverageTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY CoverageGroupDescription) = 1\n\t),\n\tEXPTRANS AS (\n\t\tSELECT\n\t\tINPUT.PolicyAKId,\n\t\tINPUT.InsuranceLine,\n\t\tINPUT.LocationXMLId,\n\t\tINPUT.TransactionEffectiveDate,\n\t\tINPUT.TransactionEnteredDate,\n\t\tLKPTRANS.CoverageGroupDescription,\n\t\t-- *INF*: decode(CoverageGroupDescription,\r\n\t\t-- 'Building',1,\r\n\t\t-- 'Blanket Building',1,\r\n\t\t-- 'Contents',10,\r\n\t\t-- 'Blanket Contents',10,\r\n\t\t-- 'Blanket Building and Contents',11,0\r\n\t\t-- )\n\t\tdecode(\n\t\t    CoverageGroupDescription,\n\t\t    'Building', 1,\n\t\t    'Blanket Building', 1,\n\t\t    'Contents', 10,\n\t\t    'Blanket Contents', 10,\n\t\t    'Blanket Building and Contents', 11,\n\t\t    0\n\t\t) AS v_CovGrpDesc\n\t\tFROM INPUT\n\t\tLEFT JOIN LKPTRANS\n\t\tON LKPTRANS.DctRiskTypeCode = INPUT.Risktype AND LKPTRANS.DctCoverageTypeCode = INPUT.CoverageType AND LKPTRANS.DctPerilGroup = INPUT.PerilGroup AND LKPTRANS.DctSubCoverageTypeCode = INPUT.subcoveragetypecode AND LKPTRANS.DctCoverageVersion = INPUT.coverageversion\n\t),\n\tSRTTRANS AS (\n\t\tSELECT\n\t\tPolicyAKId, \n\t\tInsuranceLine, \n\t\tLocationXMLId, \n\t\tTransactionEffectiveDate, \n\t\tTransactionEnteredDate, \n\t\tv_CovGrpDesc\n\t\tFROM EXPTRANS\n\t\tORDER BY PolicyAKId ASC, InsuranceLine ASC, LocationXMLId ASC, TransactionEffectiveDate ASC, TransactionEnteredDate ASC, v_CovGrpDesc ASC\n\t),\n\tAGG_Value_Type AS (\n\t\tSELECT\n\t\tPolicyAKId,\n\t\tInsuranceLine,\n\t\tLocationXMLId,\n\t\tTransactionEffectiveDate,\n\t\tTransactionEnteredDate,\n\t\tv_CovGrpDesc AS i_CovGrpDesc,\n\t\t-- *INF*: sum(i_CovGrpDesc)\n\t\tsum(i_CovGrpDesc) AS CovGrpDesc\n\t\tFROM SRTTRANS\n\t\tGROUP BY PolicyAKId, InsuranceLine, LocationXMLId, TransactionEffectiveDate, TransactionEnteredDate\n\t),\n\tEXP_CALC AS (\n\t\tSELECT\n\t\tPolicyAKId,\n\t\tInsuranceLine,\n\t\tLocationXMLId,\n\t\tTransactionEffectiveDate,\n\t\tTransactionEnteredDate,\n\t\tCovGrpDesc AS v_CovGrpDesc,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- v_CovGrpDesc=1,'B',\r\n\t\t-- v_CovGrpDesc=10,'C',\r\n\t\t-- v_CovGrpDesc>=11,'T',\r\n\t\t-- 'B')\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    v_CovGrpDesc = 1, 'B',\n\t\t    v_CovGrpDesc = 10, 'C',\n\t\t    v_CovGrpDesc >= 11, 'T',\n\t\t    'B'\n\t\t) AS Value_Type\n\t\tFROM AGG_Value_Type\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tPolicyAKId, \n\t\tInsuranceLine, \n\t\tLocationXMLId, \n\t\tTransactionEffectiveDate, \n\t\tTransactionEnteredDate, \n\t\tValue_Type\n\t\tFROM EXP_CALC\n\t),\n),\nJNRTRANS AS (SELECT\n\tEXP_RowChange_Logic.PolicyAKId, \n\tEXP_RowChange_Logic.AgencyAKId, \n\tEXP_RowChange_Logic.InsuranceLine, \n\tEXP_RowChange_Logic.LocationXMLId, \n\tEXP_RowChange_Logic.TransactionEffectiveDate, \n\tEXP_RowChange_Logic.TransactionEnteredDate, \n\tEXP_RowChange_Logic.TransactionBookedDate, \n\tEXP_RowChange_Logic.PolicyKey, \n\tEXP_RowChange_Logic.PriorPolicyKey, \n\tEXP_RowChange_Logic.TransactionCode, \n\tEXP_RowChange_Logic.NameOfInsured, \n\tEXP_RowChange_Logic.MailingStreetAddress, \n\tEXP_RowChange_Logic.MailingCity, \n\tEXP_RowChange_Logic.MailingStateProvinceAbbreviation, \n\tEXP_RowChange_Logic.MailingZipCode, \n\tEXP_RowChange_Logic.PolicyEffectiveDate, \n\tEXP_RowChange_Logic.PolicyExpirationDate, \n\tEXP_RowChange_Logic.Value, \n\tEXP_RowChange_Logic.EquipmentBreakdownPremium, \n\tEXP_RowChange_Logic.ProgramId, \n\tEXP_RowChange_Logic.RiskStreetAddress, \n\tEXP_RowChange_Logic.RiskCity, \n\tEXP_RowChange_Logic.RiskStateProvinceAbbreviation, \n\tEXP_RowChange_Logic.RiskZipCode, \n\tEXP_RowChange_Logic.Occupancy, \n\tEXP_RowChange_Logic.ActiveBuildingFlag, \n\tEXP_RowChange_Logic.OriginalTransactionEnteredDate, \n\tEXP_RowChange_Logic.o_RunDate AS ReportingPeriod, \n\tEXP_RowChange_Logic.o_FilterFlag AS FilterFlag, \n\tmplt_value_type.PolicyAKId1 AS in_PolicyAKId, \n\tmplt_value_type.InsuranceLine1 AS in_InsuranceLine, \n\tmplt_value_type.LocationXMLId1 AS in_LocationXMLId, \n\tmplt_value_type.TransactionEffectiveDate1 AS in_TransactionEffectiveDate, \n\tmplt_value_type.TransactionEnteredDate1 AS in_TransactionEnteredDate, \n\tmplt_value_type.Value_Type, \n\tEXP_RowChange_Logic.LegalName, \n\tEXP_RowChange_Logic.PrimaryPhoneNumber, \n\tEXP_RowChange_Logic.PrimaryEmailAddress\n\tFROM EXP_RowChange_Logic\n\tINNER JOIN mplt_value_type\n\tON mplt_value_type.PolicyAKId1 = EXP_RowChange_Logic.PolicyAKId AND mplt_value_type.InsuranceLine1 = EXP_RowChange_Logic.InsuranceLine AND mplt_value_type.LocationXMLId1 = EXP_RowChange_Logic.LocationXMLId AND mplt_value_type.TransactionEffectiveDate1 = EXP_RowChange_Logic.TransactionEffectiveDate AND mplt_value_type.TransactionEnteredDate1 = EXP_RowChange_Logic.TransactionEnteredDate\n),\nFIL_NoChange AS (\n\tSELECT\n\tPolicyAKId, \n\tAgencyAKId, \n\tLocationXMLId, \n\tTransactionEnteredDate, \n\tTransactionEffectiveDate, \n\tTransactionBookedDate, \n\tPolicyKey, \n\tPriorPolicyKey, \n\tTransactionCode, \n\tNameOfInsured, \n\tMailingStreetAddress, \n\tMailingCity, \n\tMailingStateProvinceAbbreviation, \n\tMailingZipCode, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate, \n\tValue, \n\tEquipmentBreakdownPremium, \n\tProgramId, \n\tRiskStreetAddress, \n\tRiskCity, \n\tRiskStateProvinceAbbreviation, \n\tRiskZipCode, \n\tOccupancy, \n\tActiveBuildingFlag, \n\tOriginalTransactionEnteredDate, \n\tReportingPeriod, \n\tFilterFlag, \n\tValue_Type, \n\tLegalName, \n\tPrimaryPhoneNumber, \n\tPrimaryEmailAddress\n\tFROM JNRTRANS\n\tWHERE FilterFlag=1\n),\nSRT_Target AS (\n\tSELECT\n\tReportingPeriod, \n\tPolicyAKId, \n\tAgencyAKId, \n\tLocationXMLId, \n\tTransactionEnteredDate, \n\tTransactionEffectiveDate, \n\tPolicyKey, \n\tPriorPolicyKey, \n\tTransactionCode, \n\tNameOfInsured, \n\tMailingStreetAddress, \n\tMailingCity, \n\tMailingStateProvinceAbbreviation, \n\tMailingZipCode, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate, \n\tValue, \n\tEquipmentBreakdownPremium, \n\tProgramId, \n\tRiskStreetAddress, \n\tRiskCity, \n\tRiskStateProvinceAbbreviation, \n\tRiskZipCode, \n\tOccupancy, \n\tActiveBuildingFlag, \n\tValue_Type, \n\tOriginalTransactionEnteredDate, \n\tLegalName, \n\tPrimaryPhoneNumber, \n\tPrimaryEmailAddress\n\tFROM FIL_NoChange\n\tORDER BY ReportingPeriod ASC, PolicyAKId ASC, TransactionEnteredDate ASC, TransactionEffectiveDate ASC\n),\nTGT_Anchor AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CreatedDate,\n\tReportingPeriod,\n\tPolicyAKId,\n\tAgencyAKId,\n\tTransactionEnteredDate,\n\tTransactionEffectiveDate,\n\tLocationXMLId,\n\tOriginalTransactionEnteredDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ReportingPeriod!=v_prev_ReportingPeriod,1,\r\n\t-- ISNULL(v_prev_PolicyAKId),1,\r\n\t-- PolicyAKId=v_prev_PolicyAKId AND TransactionEnteredDate=v_prev_TransactionEnteredDate AND TransactionEffectiveDate=v_prev_TransactionEffectiveDate AND OriginalTransactionEnteredDate=v_OriginalTransactionEnteredDate,v_TransactionNumber,\r\n\t-- v_TransactionNumber+1)\n\tDECODE(\n\t    TRUE,\n\t    ReportingPeriod != v_prev_ReportingPeriod, 1,\n\t    v_prev_PolicyAKId IS NULL, 1,\n\t    PolicyAKId = v_prev_PolicyAKId AND TransactionEnteredDate = v_prev_TransactionEnteredDate AND TransactionEffectiveDate = v_prev_TransactionEffectiveDate AND OriginalTransactionEnteredDate = v_OriginalTransactionEnteredDate, v_TransactionNumber,\n\t    v_TransactionNumber + 1\n\t) AS v_TransactionNumber,\n\tReportingPeriod AS v_prev_ReportingPeriod,\n\tPolicyAKId AS v_prev_PolicyAKId,\n\tTransactionEnteredDate AS v_prev_TransactionEnteredDate,\n\tTransactionEffectiveDate AS v_prev_TransactionEffectiveDate,\n\tOriginalTransactionEnteredDate AS v_OriginalTransactionEnteredDate,\n\t-- *INF*: LPAD(v_TransactionNumber,5,'0')\n\tLPAD(v_TransactionNumber, 5, '0') AS TransactionNumber,\n\tPolicyKey AS CurrentPolicyNumber,\n\t-- *INF*: :UDF.FORMAT_PADDING(CurrentPolicyNumber,20,' ')\n\tUDF_FORMAT_PADDING(CurrentPolicyNumber, 20, ' ') AS o_CurrentPolicyNumber,\n\t'000118' AS CompanyCode,\n\tTransactionCode,\n\tNameOfInsured,\n\t-- *INF*: :UDF.FORMAT_PADDING(NameOfInsured,55,' ')\n\tUDF_FORMAT_PADDING(NameOfInsured, 55, ' ') AS o_NameOfInsured,\n\tMailingStreetAddress,\n\t-- *INF*: :UDF.FORMAT_PADDING(MailingStreetAddress,55,' ')\n\tUDF_FORMAT_PADDING(MailingStreetAddress, 55, ' ') AS o_MailingStreetAddress,\n\tMailingCity,\n\t-- *INF*: :UDF.FORMAT_PADDING(MailingCity,20,' ')\n\tUDF_FORMAT_PADDING(MailingCity, 20, ' ') AS o_MailingCity,\n\tMailingStateProvinceAbbreviation,\n\t-- *INF*: :UDF.FORMAT_PADDING(MailingStateProvinceAbbreviation,2,' ')\n\tUDF_FORMAT_PADDING(MailingStateProvinceAbbreviation, 2, ' ') AS o_MailingStateProvinceAbbreviation,\n\tMailingZipCode AS in_MailingZipCode,\n\t-- *INF*: :UDF.FORMAT_PADDING(in_MailingZipCode,13,'0')\n\tUDF_FORMAT_PADDING(in_MailingZipCode, 13, '0') AS MailingZipCode1,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\t'013' AS Coverage,\n\tEquipmentBreakdownPremium AS EBGrossPremium,\n\t-- *INF*: ROUND(0.7*EBGrossPremium,-2)\n\tROUND(0.7 * EBGrossPremium, - 2) AS EBNetPremium,\n\t-- *INF*: :UDF.FORMAT_PADDING('0',9,'0')\n\tUDF_FORMAT_PADDING('0', 9, '0') AS Deductible,\n\tOccupancy,\n\t-- *INF*: :UDF.FORMAT_PADDING(Occupancy,6,' ')\n\tUDF_FORMAT_PADDING(Occupancy, 6, ' ') AS o_Occupancy,\n\tValue,\n\tValue_Type AS ValueType,\n\t-- *INF*: :UDF.FORMAT_PADDING('005',5,' ')\n\tUDF_FORMAT_PADDING('005', 5, ' ') AS BranchCode,\n\t-- *INF*: :LKP.LKP_Agency(AgencyAKId)\n\tLKP_AGENCY_AgencyAKId.AgencyCode AS v_AgencyCode,\n\t-- *INF*: :UDF.FORMAT_PADDING(v_AgencyCode,15,' ')\n\tUDF_FORMAT_PADDING(v_AgencyCode, 15, ' ') AS AgencyCode,\n\tPriorPolicyKey AS PreviousPolicyNumber,\n\t-- *INF*: :UDF.FORMAT_PADDING(PreviousPolicyNumber,20,' ')\n\tUDF_FORMAT_PADDING(PreviousPolicyNumber, 20, ' ') AS o_PreviousPolicyNumber,\n\tProgramId,\n\t-- *INF*: :UDF.FORMAT_PADDING(ProgramId,20,' ')\n\tUDF_FORMAT_PADDING(ProgramId, 20, ' ') AS o_ProgramId,\n\t-- *INF*: :UDF.FORMAT_PADDING('1000225',10,' ')\n\tUDF_FORMAT_PADDING('1000225', 10, ' ') AS TreatyNumber,\n\t-- *INF*: :UDF.FORMAT_PADDING('',2,' ')\n\tUDF_FORMAT_PADDING('', 2, ' ') AS ISOType,\n\t-- *INF*: :UDF.FORMAT_PADDING(' ',55,' ')\n\tUDF_FORMAT_PADDING(' ', 55, ' ') AS LocationName,\n\tRiskStreetAddress,\n\t-- *INF*: :UDF.FORMAT_PADDING(RiskStreetAddress,55,' ')\n\tUDF_FORMAT_PADDING(RiskStreetAddress, 55, ' ') AS o_RiskStreetAddress,\n\tRiskCity,\n\t-- *INF*: :UDF.FORMAT_PADDING(RiskCity,20,' ')\n\tUDF_FORMAT_PADDING(RiskCity, 20, ' ') AS o_RiskCity,\n\tRiskStateProvinceAbbreviation,\n\t-- *INF*: :UDF.FORMAT_PADDING(RiskStateProvinceAbbreviation,2,' ')\n\tUDF_FORMAT_PADDING(RiskStateProvinceAbbreviation, 2, ' ') AS o_RiskStateProvinceAbbreviation,\n\tRiskZipCode,\n\t-- *INF*: :UDF.FORMAT_PADDING(RiskZipCode,13,'0')\n\tUDF_FORMAT_PADDING(RiskZipCode, 13, '0') AS o_RiskZipCode,\n\t-- *INF*: DECODE(ValueType,\r\n\t-- 'T','O',\r\n\t-- 'C','T',\r\n\t-- 'B','O' ,' ')\n\tDECODE(\n\t    ValueType,\n\t    'T', 'O',\n\t    'C', 'T',\n\t    'B', 'O',\n\t    ' '\n\t) AS OTIndicator,\n\t-- *INF*: :UDF.FORMAT_PADDING(' ',55,' ')\n\tUDF_FORMAT_PADDING(' ', 55, ' ') AS InspectionContactName,\n\t'' AS ContactPhoneNumber,\n\tActiveBuildingFlag,\n\tLegalName,\n\tPrimaryPhoneNumber,\n\tPrimaryEmailAddress\n\tFROM SRT_Target\n\tLEFT JOIN LKP_AGENCY LKP_AGENCY_AgencyAKId\n\tON LKP_AGENCY_AgencyAKId.AgencyAKID = AgencyAKId\n\n),\nWorkHSBEquipmentBreakdownExtract AS (\n\tINSERT INTO WorkHSBEquipmentBreakdownExtract\n\t(AuditId, CreatedDate, PolicyAKId, LocationXMLId, TransactionNumber, CurrentPolicyNumber, CompanyCode, TransactionCode, NameOfInsured, MailingStreetAddress, MailingCity, MailingStateProvinceAbbreviation, MailingZipCode, TransactionEnteredDate, TransactionEffectiveDate, PolicyEffectiveDate, PolicyExpirationDate, Coverage, EBGrossPremium, EBNetPremium, Deductible, Occupancy, Value, ValueType, BranchCode, AgencyCode, PreviousPolicyNumber, ProgramId, TreatyNumber, ISOType, LocationName, RiskStreetAddress, RiskCity, RiskStateProvinceAbbreviation, RiskZipCode, OTIndicator, InspectionContactName, ContactPhoneNumber, ReportingPeriod, ActiveLocationFlag, OriginalTransactionalEnteredDate, AgencyName, AgencyEmailAddress, AgencyPhoneNumber)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tPOLICYAKID, \n\tLOCATIONXMLID, \n\tTRANSACTIONNUMBER, \n\to_CurrentPolicyNumber AS CURRENTPOLICYNUMBER, \n\tCOMPANYCODE, \n\tTRANSACTIONCODE, \n\to_NameOfInsured AS NAMEOFINSURED, \n\to_MailingStreetAddress AS MAILINGSTREETADDRESS, \n\to_MailingCity AS MAILINGCITY, \n\to_MailingStateProvinceAbbreviation AS MAILINGSTATEPROVINCEABBREVIATION, \n\tMailingZipCode1 AS MAILINGZIPCODE, \n\tTRANSACTIONENTEREDDATE, \n\tTRANSACTIONEFFECTIVEDATE, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYEXPIRATIONDATE, \n\tCOVERAGE, \n\tEBGROSSPREMIUM, \n\tEBNETPREMIUM, \n\tDEDUCTIBLE, \n\to_Occupancy AS OCCUPANCY, \n\tVALUE, \n\tVALUETYPE, \n\tBRANCHCODE, \n\tAGENCYCODE, \n\to_PreviousPolicyNumber AS PREVIOUSPOLICYNUMBER, \n\to_ProgramId AS PROGRAMID, \n\tTREATYNUMBER, \n\tISOTYPE, \n\tLOCATIONNAME, \n\to_RiskStreetAddress AS RISKSTREETADDRESS, \n\to_RiskCity AS RISKCITY, \n\to_RiskStateProvinceAbbreviation AS RISKSTATEPROVINCEABBREVIATION, \n\to_RiskZipCode AS RISKZIPCODE, \n\tOTINDICATOR, \n\tINSPECTIONCONTACTNAME, \n\tCONTACTPHONENUMBER, \n\tREPORTINGPERIOD, \n\tActiveBuildingFlag AS ACTIVELOCATIONFLAG, \n\tOriginalTransactionEnteredDate AS ORIGINALTRANSACTIONALENTEREDDATE, \n\tLegalName AS AGENCYNAME, \n\tPrimaryEmailAddress AS AGENCYEMAILADDRESS, \n\tPrimaryPhoneNumber AS AGENCYPHONENUMBER\n\tFROM TGT_Anchor\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "STRATEGIC_PROFITCENTER_DESCRIPTION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "INSURANCE_LINE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PRODUCT_DESCRIPTION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_FUTUREMONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}