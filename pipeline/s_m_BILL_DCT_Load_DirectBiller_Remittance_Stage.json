{
    "name": "s_m_BILL_DCT_Load_DirectBiller_Remittance_Stage",
    "properties": {
        "activities": [
            {
                "name": "m_BILL_DCT_Load_DirectBiller_Remittance_Stage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nXMLDSQ_DirectBillerRemittanceFile AS (\n),\nEXP_Load_Remittance_Stage AS (\n\tSELECT\n\tnumber,\n\treconciliation_date AS in_reconciliation_date,\n\t-- *INF*: TO_DATE(in_reconciliation_date,'MM/DD/YYYY')\n\tTO_TIMESTAMP(in_reconciliation_date, 'MM/DD/YYYY') AS out_reconciliation_date,\n\ttransaction_id,\n\taccount AS in_VendorAccountNumber,\n\tinvoice_number,\n\teffective_date AS in_effective_date,\n\t-- *INF*: TO_DATE(in_effective_date, 'MM/DD/YYYY')\n\tTO_TIMESTAMP(in_effective_date, 'MM/DD/YYYY') AS out_effective_date,\n\tdate_cleared AS in_date_cleared,\n\t-- *INF*: TO_DATE(in_date_cleared,'MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP(in_date_cleared, 'MM/DD/YYYY HH24:MI:SS') AS out_date_cleared,\n\tdate_initiated AS in_date_initiated,\n\t-- *INF*: sysdate\r\n\t-- --TO_DATE(in_date_initiated,'MM/DD/YYYY HH24:MI:SS')\n\tCURRENT_TIMESTAMP AS out_date_initiated,\n\tbill_amount,\n\tpaid_amount,\n\tfee_amount,\n\tpayment_mode,\n\tstatus,\n\tapproval_code,\n\tauthorized_by,\n\tnumber  || ',' || in_reconciliation_date || ',' || transaction_id || ',' || in_VendorAccountNumber || ',' || invoice_number || ',' || customer_name || ',' || in_effective_date || ',' || in_date_cleared || ',' || in_date_initiated || ',' || bill_amount || ',' || paid_amount || ',' || fee_amount || ',' || payment_mode || ',' || status || ',' || approval_code || ',' || authorized_by  || ',' || originalbillamount || ',' || minimumpayment || ',' || DCAccountNumber || ',' || stoppaperinvoices AS out_TransactionData,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP() AS out_ModifyDate,\n\t'B' AS out_RemittanceSource,\n\t'infmatca' AS out_ModifierUserID,\n\t-- *INF*: IIF(paid_amount  >  0,  'Payment', DECODE(payment_mode,\r\n\t-- 'Checking', 'Failed',\r\n\t-- 'Business Checking', 'Failed' ,\r\n\t-- 'Savings', 'Failed' ,\r\n\t-- 'Visa', 'Chargeback',\r\n\t-- 'MasterCard', 'Chargeback',\r\n\t-- 'American Express','Chargeback',\r\n\t-- 'Discover', 'Chargeback',\r\n\t--  'Reversal'))\n\tIFF(\n\t    paid_amount > 0, 'Payment',\n\t    DECODE(\n\t        payment_mode,\n\t        'Checking', 'Failed',\n\t        'Business Checking', 'Failed',\n\t        'Savings', 'Failed',\n\t        'Visa', 'Chargeback',\n\t        'MasterCard', 'Chargeback',\n\t        'American Express', 'Chargeback',\n\t        'Discover', 'Chargeback',\n\t        'Reversal'\n\t    )\n\t) AS out_TransactionType,\n\t-- *INF*: DECODE(payment_mode,\r\n\t-- 'Checking', 'WPA',\r\n\t-- 'Business Checking', 'WPA' ,\r\n\t-- 'Savings', 'WPA' ,\r\n\t-- 'Visa', 'CCP',\r\n\t-- 'MasterCard', 'CCP',\r\n\t-- 'American Express',  'CCP',\r\n\t-- 'Discover',  'CCP',\r\n\t-- payment_mode)\n\tDECODE(\n\t    payment_mode,\n\t    'Checking', 'WPA',\n\t    'Business Checking', 'WPA',\n\t    'Savings', 'WPA',\n\t    'Visa', 'CCP',\n\t    'MasterCard', 'CCP',\n\t    'American Express', 'CCP',\n\t    'Discover', 'CCP',\n\t    payment_mode\n\t) AS out_PaymentMode,\n\t-- *INF*: IIF(paid_amount < 0  AND (payment_mode = 'Visa' \r\n\t--  OR payment_mode = 'MasterCard'\r\n\t--  OR  payment_mode = 'American Express'\r\n\t-- OR  payment_mode =\r\n\t-- 'Discover'),'S', 'N')\n\tIFF(\n\t    paid_amount < 0\n\t    and (payment_mode = 'Visa'\n\t    or payment_mode = 'MasterCard'\n\t    or payment_mode = 'American Express'\n\t    or payment_mode = 'Discover'),\n\t    'S',\n\t    'N'\n\t) AS out_ProcessFlag,\n\toriginalbillamount,\n\tminimumpayment,\n\taccountkey AS DCAccountNumber,\n\tstoppaperinvoices,\n\t'Vendor Account Reference number missing Transaction ID =  '  || transaction_id AS var_vendor_AccountMissing_Message,\n\t-- *INF*: IIF(ISNULL(in_VendorAccountNumber), ERROR(var_vendor_AccountMissing_Message), in_VendorAccountNumber)\n\tIFF(\n\t    in_VendorAccountNumber IS NULL, ERROR(var_vendor_AccountMissing_Message),\n\t    in_VendorAccountNumber\n\t) AS out_Vendor_Account\n\tFROM XMLDSQ_DirectBillerRemittanceFile\n),\nLKP_WB_Bill_Remittance_stage AS (\n\tSELECT\n\tTransactionId,\n\tIN_transaction_id,\n\tIN_RemittanceSource,\n\tIN_TransactionType,\n\tRemittanceSource,\n\tTransactionType\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionId,\n\t\t\tIN_transaction_id,\n\t\t\tIN_RemittanceSource,\n\t\t\tIN_TransactionType,\n\t\t\tRemittanceSource,\n\t\t\tTransactionType\n\t\tFROM WB_BIL_RemittanceStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TransactionId,RemittanceSource,TransactionType ORDER BY TransactionId) = 1\n),\nFIL_TransactionID AS (\n\tSELECT\n\tLKP_WB_Bill_Remittance_stage.TransactionId AS Transaction_Id_Lookup, \n\tLKP_WB_Bill_Remittance_stage.IN_transaction_id, \n\tEXP_Load_Remittance_Stage.out_TransactionData AS SQ_TransactionData, \n\tEXP_Load_Remittance_Stage.out_ModifyDate AS SQ_ModifyDate, \n\tEXP_Load_Remittance_Stage.out_ProcessFlag AS SQ_ProcessFlag, \n\tEXP_Load_Remittance_Stage.out_ModifierUserID AS SQ_ModifierUserID, \n\tLKP_WB_Bill_Remittance_stage.IN_RemittanceSource, \n\tLKP_WB_Bill_Remittance_stage.IN_TransactionType, \n\tEXP_Load_Remittance_Stage.number, \n\tEXP_Load_Remittance_Stage.out_reconciliation_date AS reconciliation_date, \n\tEXP_Load_Remittance_Stage.transaction_id, \n\tEXP_Load_Remittance_Stage.out_Vendor_Account AS VendorAccountNumber, \n\tEXP_Load_Remittance_Stage.invoice_number, \n\tEXP_Load_Remittance_Stage.out_effective_date AS effective_date, \n\tEXP_Load_Remittance_Stage.out_date_cleared AS date_cleared, \n\tEXP_Load_Remittance_Stage.out_date_initiated AS date_initiated, \n\tEXP_Load_Remittance_Stage.bill_amount, \n\tEXP_Load_Remittance_Stage.paid_amount, \n\tEXP_Load_Remittance_Stage.fee_amount, \n\tEXP_Load_Remittance_Stage.out_PaymentMode AS payment_mode, \n\tEXP_Load_Remittance_Stage.status, \n\tEXP_Load_Remittance_Stage.approval_code, \n\tEXP_Load_Remittance_Stage.authorized_by, \n\tEXP_Load_Remittance_Stage.originalbillamount, \n\tEXP_Load_Remittance_Stage.minimumpayment, \n\tEXP_Load_Remittance_Stage.DCAccountNumber, \n\tEXP_Load_Remittance_Stage.stoppaperinvoices\n\tFROM EXP_Load_Remittance_Stage\n\tLEFT JOIN LKP_WB_Bill_Remittance_stage\n\tON LKP_WB_Bill_Remittance_stage.TransactionId = EXP_Load_Remittance_Stage.transaction_id AND LKP_WB_Bill_Remittance_stage.RemittanceSource = EXP_Load_Remittance_Stage.out_RemittanceSource AND LKP_WB_Bill_Remittance_stage.TransactionType = EXP_Load_Remittance_Stage.out_TransactionType\n\tWHERE ISNULL(Transaction_Id_Lookup)\n),\nWB_BIL_RemittanceStage AS (\n\tINSERT INTO WB_BIL_RemittanceStage\n\t(ModifiedUserId, ModifiedDate, TransactionId, TransactionType, TransactionData, RemittanceSource, ProcessedStatusCode, ReconciliationDate, VendorAccountNumber, InvoiceNumber, EffectiveDate, DateCleared, DateInitiated, BillAmount, PaidAmount, FeeAmount, PaymentMode, TransactionStatus, ApprovalCode, AuthorizedBy, OriginalBillAmount, MinimumPayment, DCAccountNumber, PaperProcessingCode)\n\tSELECT \n\tSQ_ModifierUserID AS MODIFIEDUSERID, \n\tSQ_ModifyDate AS MODIFIEDDATE, \n\ttransaction_id AS TRANSACTIONID, \n\tIN_TransactionType AS TRANSACTIONTYPE, \n\tSQ_TransactionData AS TRANSACTIONDATA, \n\tIN_RemittanceSource AS REMITTANCESOURCE, \n\tSQ_ProcessFlag AS PROCESSEDSTATUSCODE, \n\treconciliation_date AS RECONCILIATIONDATE, \n\tVENDORACCOUNTNUMBER, \n\tinvoice_number AS INVOICENUMBER, \n\teffective_date AS EFFECTIVEDATE, \n\tdate_cleared AS DATECLEARED, \n\tdate_initiated AS DATEINITIATED, \n\tbill_amount AS BILLAMOUNT, \n\tpaid_amount AS PAIDAMOUNT, \n\tfee_amount AS FEEAMOUNT, \n\tpayment_mode AS PAYMENTMODE, \n\tstatus AS TRANSACTIONSTATUS, \n\tapproval_code AS APPROVALCODE, \n\tauthorized_by AS AUTHORIZEDBY, \n\toriginalbillamount AS ORIGINALBILLAMOUNT, \n\tminimumpayment AS MINIMUMPAYMENT, \n\tDCACCOUNTNUMBER, \n\tstoppaperinvoices AS PAPERPROCESSINGCODE\n\tFROM FIL_TransactionID\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "DataFeed -Informatica/BillingDataServices/"
        },
        "annotations": []
    }
}