{
    "name": "m_IR_DW_Load_ConformedCoverage",
    "properties": {
        "activities": [
            {
                "name": "m_IR_DW_Load_ConformedCoverage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CSV_ConformedCoverage AS (\n\n-- TODO Manual --\n\n),\nEXP_Trim_Values AS (\n\tSELECT\n\tCoverageSummaryCode AS i_CoverageSummaryCode,\n\tCoverageGroupCode AS i_CoverageGroupCode,\n\tCoverageCode AS i_CoverageCode,\n\tCoverageDescription AS i_CoverageDescription,\n\tRatedCoverageCode AS i_RatedCoverageCode,\n\tRatedCoverageDescription AS i_RatedCoverageDescription,\n\t-- *INF*: LTRIM(RTRIM(i_CoverageSummaryCode))\n\tLTRIM(RTRIM(i_CoverageSummaryCode)) AS o_CoverageSummaryCode,\n\t-- *INF*: LTRIM(RTRIM(i_CoverageGroupCode))\n\tLTRIM(RTRIM(i_CoverageGroupCode)) AS o_CoverageGroupCode,\n\t-- *INF*: LTRIM(RTRIM(i_CoverageCode))\n\tLTRIM(RTRIM(i_CoverageCode)) AS o_CoverageCode,\n\t-- *INF*: LTRIM(RTRIM(i_CoverageDescription))\n\tLTRIM(RTRIM(i_CoverageDescription)) AS o_CoverageDescription,\n\t-- *INF*: LTRIM(RTRIM(i_RatedCoverageCode))\n\tLTRIM(RTRIM(i_RatedCoverageCode)) AS o_RatedCoverageCode,\n\t-- *INF*: LTRIM(RTRIM(i_RatedCoverageDescription))\n\tLTRIM(RTRIM(i_RatedCoverageDescription)) AS o_RatedCoverageDescription\n\tFROM SQ_CSV_ConformedCoverage\n),\nAGG_Remove_Duplicate AS (\n\tSELECT\n\to_CoverageSummaryCode AS CoverageSummaryCode, \n\to_CoverageGroupCode AS CoverageGroupCode, \n\to_CoverageCode AS CoverageCode, \n\to_CoverageDescription AS CoverageDescription, \n\to_RatedCoverageCode AS RatedCoverageCode, \n\to_RatedCoverageDescription AS RatedCoverageDescription\n\tFROM EXP_Trim_Values\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageSummaryCode, CoverageGroupCode, CoverageCode, RatedCoverageCode ORDER BY NULL) = 1\n),\nLKP_CoverageSummary AS (\n\tSELECT\n\tCoverageSummaryId,\n\tCoverageSummaryCode\n\tFROM (\n\t\tSELECT \n\t\t\tCoverageSummaryId,\n\t\t\tCoverageSummaryCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageSummaryCode ORDER BY CoverageSummaryId) = 1\n),\nLKP_CoverageGroup AS (\n\tSELECT\n\tCoverageGroupId,\n\tCoverageGroupCode,\n\tCoverageSummaryId\n\tFROM (\n\t\tSELECT \n\t\t\tCoverageGroupId,\n\t\t\tCoverageGroupCode,\n\t\t\tCoverageSummaryId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageGroup\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGroupCode,CoverageSummaryId ORDER BY CoverageGroupId) = 1\n),\nLKP_ConformedCoverage AS (\n\tSELECT\n\tConformedCoverageId,\n\tCoverageGroupId,\n\tCoverageDescription,\n\tRatedCoverageCode,\n\tRatedCoverageDescription,\n\ti_CoverageGroupId,\n\tCoverageCode\n\tFROM (\n\t\tSELECT \n\t\t\tConformedCoverageId,\n\t\t\tCoverageGroupId,\n\t\t\tCoverageDescription,\n\t\t\tRatedCoverageCode,\n\t\t\tRatedCoverageDescription,\n\t\t\ti_CoverageGroupId,\n\t\t\tCoverageCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ConformedCoverage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageCode,CoverageGroupId,RatedCoverageCode,RatedCoverageDescription ORDER BY ConformedCoverageId) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_ConformedCoverage.ConformedCoverageId AS lkp_ConformedCoverageId,\n\tLKP_ConformedCoverage.CoverageGroupId AS lkp_CoverageGroupId,\n\tLKP_ConformedCoverage.CoverageDescription AS lkp_CoverageDescription,\n\tLKP_ConformedCoverage.RatedCoverageCode AS lkp_RatedCoverageCode,\n\tLKP_ConformedCoverage.RatedCoverageDescription AS lkp_RatedCoverageDescription,\n\tLKP_CoverageGroup.CoverageGroupId,\n\tAGG_Remove_Duplicate.CoverageDescription,\n\tAGG_Remove_Duplicate.CoverageCode,\n\tAGG_Remove_Duplicate.RatedCoverageCode,\n\tAGG_Remove_Duplicate.RatedCoverageDescription,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: DECODE(TRUE,ISNULL(lkp_ConformedCoverageId),1,\r\n\t-- lkp_CoverageDescription<>CoverageDescription OR\r\n\t-- lkp_RatedCoverageDescription<>RatedCoverageDescription OR lkp_RatedCoverageCode<>RatedCoverageCode ,2,\r\n\t-- 0)\n\tDECODE(TRUE,\n\tlkp_ConformedCoverageId IS NULL, 1,\n\tlkp_CoverageDescription <> CoverageDescription OR lkp_RatedCoverageDescription <> RatedCoverageDescription OR lkp_RatedCoverageCode <> RatedCoverageCode, 2,\n\t0) AS o_change_flag\n\tFROM AGG_Remove_Duplicate\n\tLEFT JOIN LKP_ConformedCoverage\n\tON LKP_ConformedCoverage.CoverageCode = AGG_Remove_Duplicate.CoverageCode AND LKP_ConformedCoverage.CoverageGroupId = LKP_CoverageGroup.CoverageGroupId AND LKP_ConformedCoverage.RatedCoverageCode = AGG_Remove_Duplicate.RatedCoverageCode AND LKP_ConformedCoverage.RatedCoverageDescription = AGG_Remove_Duplicate.RatedCoverageDescription\n\tLEFT JOIN LKP_CoverageGroup\n\tON LKP_CoverageGroup.CoverageGroupCode = AGG_Remove_Duplicate.CoverageGroupCode AND LKP_CoverageGroup.CoverageSummaryId = LKP_CoverageSummary.CoverageSummaryId\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tlkp_ConformedCoverageId AS ConformedCoverageId,\n\tCoverageGroupId,\n\tCoverageCode,\n\tCoverageDescription,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_change_flag AS change_flag,\n\tRatedCoverageCode,\n\tRatedCoverageDescription\n\tFROM EXP_Detect_Changes\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE change_flag=1 AND  NOT ISNULL(CoverageGroupId) AND  NOT (ISNULL(CoverageCode) OR IS_SPACES(CoverageCode) OR LENGTH(CoverageCode)=0)),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE change_flag=2 AND  NOT ISNULL(CoverageGroupId) AND  NOT (ISNULL(CoverageCode) OR IS_SPACES(CoverageCode) OR LENGTH(CoverageCode)=0)),\nUPD_ConformedCoverage AS (\n\tSELECT\n\tConformedCoverageId, \n\tModifiedDate, \n\tCoverageGroupId, \n\tCoverageDescription, \n\tRatedCoverageCode, \n\tRatedCoverageDescription\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nConformedCoverage_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ConformedCoverage AS T\n\tUSING UPD_ConformedCoverage AS S\n\tON T.ConformedcoverageId = S.ConformedCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CoverageGroupId = S.CoverageGroupId, T.CoverageDescription = S.CoverageDescription, T.RatedCoverageCode = S.RatedCoverageCode, T.RatedCoverageDescription = S.RatedCoverageDescription\n),\nConformedCoverage_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ConformedCoverage\n\t(CreatedDate, ModifiedDate, CoverageGroupId, CoverageCode, CoverageDescription, RatedCoverageCode, RatedCoverageDescription)\n\tSELECT \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGEGROUPID, \n\tCOVERAGECODE, \n\tCOVERAGEDESCRIPTION, \n\tRATEDCOVERAGECODE, \n\tRATEDCOVERAGEDESCRIPTION\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "INPUTFILECONFORMEDCOVERAGE": {
                "type": "string",
                "defaultValue": "$PMSourceFileDir\\FlatFiles\\SRC_ConformedCoverage.csv"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_InsuranceReference_Policy"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            }
        },
        "folder": {
            "name": "Common DataWarehouse/"
        },
        "annotations": []
    }
}