{
    "name": "m_CLM_DW_LOAD_Claim_Party_Relation_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Party_Relation_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLAIM_OCCURRENCE AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\t   claim_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\t   claim_occurrence.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM \r\n\t\t   claim_occurrence\r\n\t\tWHERE\r\n\t\t   source_sys_id = '@{pipeline().parameters.SOURCE_SYS_ID}' AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_CLAIM_PARTY_OCCURRENCE AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaim_occurrence_ak_id,\n\tclaim_party_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\ta.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\ta.claim_party_ak_id as claim_party_ak_id \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence a\r\n\t\tWHERE \r\n\t\tclaim_party_role_code = 'CLMT' and \r\n\t\tsource_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_party_ak_id ORDER BY claim_party_occurrence_ak_id) = 1\n),\nSQ_clm_clt_relation_stage AS (\n\tSELECT \r\n\tdistinct A.cre_claim_nbr, A.cre_client_id, A.cre_client_role_cd,A.cre_rel_to_clt_id,\r\n\tB.cms_party_type \r\n\tFROM\r\n\t clm_clt_relation_stage A\r\n\tLEFT OUTER JOIN cms_clt_relation_stage B  ON \r\n\t                   A.cre_claim_nbr=B.cre_claim_nbr AND  \r\n\t                   A.cre_client_id=B.cre_client_id AND \t\r\n\t                   A.cre_client_role_cd=B.cre_client_role_cd AND\r\n\t                   A.cre_rel_to_clt_id=B.cre_rel_to_clt_id\n),\nEXP_Values AS (\n\tSELECT\n\tcre_claim_nbr,\n\tcre_client_id,\n\tcre_client_role_cd,\n\tcre_rel_to_clt_id,\n\tcms_party_type\n\tFROM SQ_clm_clt_relation_stage\n),\nLKP_CLAIM_PARTY_FROM AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tlgl_ent_code,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_party_ak_id as claim_party_ak_id, \r\n\t\ta.lgl_ent_code as lgl_ent_code, \r\n\t\ta.claim_party_key as claim_party_key \r\n\t\tFROM \r\n\t\t   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party a\r\n\t\tWHERE \r\n\t\t   a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND crrnt_snpsht_flag = '1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id DESC) = 1\n),\nLKP_CLAIM_PARTY_TO AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tlgl_ent_code,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_party_ak_id as claim_party_ak_id, \r\n\t\ta.lgl_ent_code as lgl_ent_code, \r\n\t\ta.claim_party_key as claim_party_key \r\n\t\tFROM \r\n\t\t   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party a\r\n\t\tWHERE \r\n\t\t   a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND crrnt_snpsht_flag = '1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id DESC) = 1\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tEXP_Values.cre_claim_nbr,\n\tLKP_CLAIM_PARTY_FROM.claim_party_ak_id AS claim_party_from_ak_id,\n\tLKP_CLAIM_PARTY_TO.claim_party_ak_id AS claim_party_to_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_OCCURRENCE(cre_claim_nbr)\n\tLKP_CLAIM_OCCURRENCE_cre_claim_nbr.claim_occurrence_ak_id AS v_claim_occurrence_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_PARTY_OCCURRENCE(v_claim_occurrence_ak_id, claim_party_to_ak_id)\n\tLKP_CLAIM_PARTY_OCCURRENCE_v_claim_occurrence_ak_id_claim_party_to_ak_id.claim_party_occurrence_ak_id AS v_claim_party_occurrence_ak_id,\n\tv_claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id,\n\tEXP_Values.cre_client_role_cd AS in_cre_client_role_cd,\n\t-- *INF*: IIF(ISNULL(in_cre_client_role_cd), 'N/A',\r\n\t--  IIF(IS_SPACES(in_cre_client_role_cd), 'N/A',\r\n\t-- in_cre_client_role_cd))\n\tIFF(in_cre_client_role_cd IS NULL, 'N/A', IFF(IS_SPACES(in_cre_client_role_cd), 'N/A', in_cre_client_role_cd)) AS cre_client_role_cd,\n\tEXP_Values.cms_party_type AS in_cms_party_type,\n\t-- *INF*: IIF(ISNULL(in_cms_party_type), 'N/A',\r\n\t--  IIF(IS_SPACES(in_cms_party_type), 'N/A',\r\n\t-- in_cms_party_type))\n\tIFF(in_cms_party_type IS NULL, 'N/A', IFF(IS_SPACES(in_cms_party_type), 'N/A', in_cms_party_type)) AS cms_party_type,\n\tLKP_CLAIM_PARTY_FROM.lgl_ent_code,\n\t-- *INF*: IIF(ISNULL(lgl_ent_code),'N/A',\r\n\t-- IIF(lgl_ent_code='IN', 'Y','N')\r\n\t-- )\n\tIFF(lgl_ent_code IS NULL, 'N/A', IFF(lgl_ent_code = 'IN', 'Y', 'N')) AS is_individual\n\tFROM EXP_Values\n\tLEFT JOIN LKP_CLAIM_PARTY_FROM\n\tON LKP_CLAIM_PARTY_FROM.claim_party_key = EXP_Values.cre_client_id\n\tLEFT JOIN LKP_CLAIM_PARTY_TO\n\tON LKP_CLAIM_PARTY_TO.claim_party_key = EXP_Values.cre_rel_to_clt_id\n\tLEFT JOIN LKP_CLAIM_OCCURRENCE LKP_CLAIM_OCCURRENCE_cre_claim_nbr\n\tON LKP_CLAIM_OCCURRENCE_cre_claim_nbr.claim_occurrence_key = cre_claim_nbr\n\n\tLEFT JOIN LKP_CLAIM_PARTY_OCCURRENCE LKP_CLAIM_PARTY_OCCURRENCE_v_claim_occurrence_ak_id_claim_party_to_ak_id\n\tON LKP_CLAIM_PARTY_OCCURRENCE_v_claim_occurrence_ak_id_claim_party_to_ak_id.claim_occurrence_ak_id = v_claim_occurrence_ak_id\n\tAND LKP_CLAIM_PARTY_OCCURRENCE_v_claim_occurrence_ak_id_claim_party_to_ak_id.claim_party_ak_id = claim_party_to_ak_id\n\n),\nSQ_claim_party_relation1 AS (\n\tSELECT claim_party_relation.claim_party_relation_id, claim_party_relation.claim_party_occurrence_ak_id, claim_party_relation.claim_party_relation_from_ak_id, claim_party_relation.claim_party_relation_to_ak_id, \r\n\trtrim(claim_party_relation.claim_party_relation_role_code) as claim_party_relation_role_code,\r\n\trtrim(claim_party_relation.cms_party_type) as cms_party_type\r\n\tFROM\r\n\t claim_party_relation \r\n\tWHERE\r\n\t source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\n),\nJNR_Source_Deleted_Rows AS (SELECT\n\tSQ_claim_party_relation1.claim_party_relation_id AS tgt_claim_party_relation_id, \n\tSQ_claim_party_relation1.claim_party_occurrence_ak_id AS tgt_claim_party_occurrence_ak_id, \n\tSQ_claim_party_relation1.claim_party_relation_from_ak_id AS tgt_claim_party_relation_from_ak_id, \n\tSQ_claim_party_relation1.claim_party_relation_to_ak_id AS tgt_claim_party_relation_to_ak_id, \n\tSQ_claim_party_relation1.claim_party_relation_role_code AS tgt_claim_party_relation_role_code, \n\tSQ_claim_party_relation1.cms_party_type AS tgt_cms_party_type, \n\tEXP_Lkp_Values.claim_party_occurrence_ak_id AS src_claim_party_occurrence_ak_id, \n\tEXP_Lkp_Values.claim_party_from_ak_id AS src_claim_party_relation_from_ak_id, \n\tEXP_Lkp_Values.claim_party_to_ak_id AS src_claim_party_relation_to_ak_id, \n\tEXP_Lkp_Values.cre_client_role_cd AS src_claim_party_relation_role_code, \n\tEXP_Lkp_Values.cms_party_type AS src_cms_party_type\n\tFROM EXP_Lkp_Values\n\tRIGHT OUTER JOIN SQ_claim_party_relation1\n\tON SQ_claim_party_relation1.claim_party_occurrence_ak_id = EXP_Lkp_Values.claim_party_occurrence_ak_id AND SQ_claim_party_relation1.claim_party_relation_from_ak_id = EXP_Lkp_Values.claim_party_from_ak_id AND SQ_claim_party_relation1.claim_party_relation_to_ak_id = EXP_Lkp_Values.claim_party_to_ak_id AND SQ_claim_party_relation1.claim_party_relation_role_code = EXP_Lkp_Values.cre_client_role_cd AND SQ_claim_party_relation1.cms_party_type = EXP_Lkp_Values.cms_party_type\n),\nFIL_Deleted_Rows AS (\n\tSELECT\n\ttgt_claim_party_relation_id, \n\ttgt_claim_party_occurrence_ak_id, \n\ttgt_claim_party_relation_from_ak_id, \n\ttgt_claim_party_relation_to_ak_id, \n\ttgt_claim_party_relation_role_code, \n\ttgt_cms_party_type, \n\tsrc_claim_party_occurrence_ak_id, \n\tsrc_claim_party_relation_from_ak_id, \n\tsrc_claim_party_relation_to_ak_id, \n\tsrc_claim_party_relation_role_code, \n\tsrc_cms_party_type\n\tFROM JNR_Source_Deleted_Rows\n\tWHERE ISNULL(src_claim_party_occurrence_ak_id)\n),\nEXP_deleted_rows AS (\n\tSELECT\n\ttgt_claim_party_relation_id,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS Modified_date\n\tFROM FIL_Deleted_Rows\n),\nUPD_Claim_Party_Relation1 AS (\n\tSELECT\n\ttgt_claim_party_relation_id, \n\tcrrnt_snpsht_flag, \n\tModified_date\n\tFROM EXP_deleted_rows\n),\nclaim_party_relation_Expire_Deleted_Rows AS (\n\tMERGE INTO claim_party_relation AS T\n\tUSING UPD_Claim_Party_Relation1 AS S\n\tON T.claim_party_relation_id = S.tgt_claim_party_relation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.modified_date = S.Modified_date\n),\nLKP_CLAIM_PARTY_RELATION AS (\n\tSELECT\n\tclaim_party_relation_id,\n\tclaim_party_relation_ak_id,\n\tclaim_party_relation_role_code,\n\tcms_party_type,\n\tis_cms_party_individ,\n\tclaim_party_occurrence_ak_id,\n\tclaim_party_relation_from_ak_id,\n\tclaim_party_relation_to_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_party_relation_id as claim_party_relation_id, \r\n\t\ta.claim_party_relation_ak_id as claim_party_relation_ak_id,\r\n\t\tltrim(rtrim(a.is_cms_party_individ)) as is_cms_party_individ,  \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\ta.claim_party_relation_from_ak_id as claim_party_relation_from_ak_id, \r\n\t\ta.claim_party_relation_to_ak_id as claim_party_relation_to_ak_id, \r\n\t\tltrim(rtrim(a.claim_party_relation_role_code)) as claim_party_relation_role_code,\r\n\t\tltrim(rtrim(a.cms_party_type)) as cms_party_type\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_relation a\r\n\t\tWHERE  \r\n\t\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND a.crrnt_snpsht_flag = 1\r\n\t\tORDER BY \r\n\t\tclaim_party_occurrence_ak_id, claim_party_relation_from_ak_id, claim_party_relation_to_ak_id, claim_party_relation_role_code --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claim_party_relation_from_ak_id,claim_party_relation_to_ak_id,claim_party_relation_role_code,cms_party_type ORDER BY claim_party_relation_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Lkp_Values.claim_party_occurrence_ak_id,\n\tEXP_Lkp_Values.claim_party_from_ak_id AS claim_party_relation_from_ak_id,\n\tEXP_Lkp_Values.claim_party_to_ak_id AS claim_party_relation_to_ak_id,\n\tEXP_Lkp_Values.cre_client_role_cd,\n\tEXP_Lkp_Values.cms_party_type,\n\tEXP_Lkp_Values.is_individual,\n\tLKP_CLAIM_PARTY_RELATION.claim_party_relation_id AS lkp_claim_party_relation_id,\n\tLKP_CLAIM_PARTY_RELATION.claim_party_relation_ak_id AS lkp_claim_party_relation_ak_id,\n\tLKP_CLAIM_PARTY_RELATION.claim_party_relation_role_code AS lkp_claim_party_relation_role_code,\n\tLKP_CLAIM_PARTY_RELATION.cms_party_type AS lkp_cms_party_type,\n\tLKP_CLAIM_PARTY_RELATION.is_cms_party_individ AS lkp_is_cms_party_individ,\n\t1 AS Crrnt_Snpsht_Flag,\n\t-- *INF*: iif(isnull(lkp_claim_party_relation_id),'NEW',\t\r\n\t-- \tiif (ltrim(rtrim(lkp_is_cms_party_individ)) <> ltrim(rtrim(is_individual))\r\n\t-- \t, 'UPDATE','NOCHANGE'))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(lkp_claim_party_relation_id IS NULL, 'NEW', IFF(ltrim(rtrim(lkp_is_cms_party_individ)) <> ltrim(rtrim(is_individual)), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date\n\tFROM EXP_Lkp_Values\n\tLEFT JOIN LKP_CLAIM_PARTY_RELATION\n\tON LKP_CLAIM_PARTY_RELATION.claim_party_occurrence_ak_id = EXP_Lkp_Values.claim_party_occurrence_ak_id AND LKP_CLAIM_PARTY_RELATION.claim_party_relation_from_ak_id = EXP_Lkp_Values.claim_party_from_ak_id AND LKP_CLAIM_PARTY_RELATION.claim_party_relation_to_ak_id = EXP_Lkp_Values.claim_party_to_ak_id AND LKP_CLAIM_PARTY_RELATION.claim_party_relation_role_code = EXP_Lkp_Values.cre_client_role_cd AND LKP_CLAIM_PARTY_RELATION.cms_party_type = EXP_Lkp_Values.cms_party_type\n),\nFIL_Insert AS (\n\tSELECT\n\tlkp_claim_party_relation_ak_id, \n\tclaim_party_occurrence_ak_id, \n\tclaim_party_relation_from_ak_id, \n\tclaim_party_relation_to_ak_id, \n\tcre_client_role_cd, \n\tcms_party_type, \n\tis_individual, \n\tCrrnt_Snpsht_Flag, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tSOURCE_SYSTEM_ID, \n\tCreated_Date, \n\tModified_Date, \n\tChanged_Flag\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_claim_party_relation AS (\n\tCREATE SEQUENCE SEQ_claim_party_relation\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tlkp_claim_party_relation_ak_id,\n\t-- *INF*: IIF(Changed_Flag='NEW', NEXTVAL, lkp_claim_party_relation_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, lkp_claim_party_relation_ak_id) AS claim_party_relation_ak_id,\n\tclaim_party_occurrence_ak_id,\n\tclaim_party_relation_from_ak_id,\n\tclaim_party_relation_to_ak_id,\n\tcre_client_role_cd,\n\tcms_party_type,\n\tis_individual,\n\tCrrnt_Snpsht_Flag,\n\tAudit_Id,\n\tEff_From_Date,\n\tEff_To_Date,\n\tSOURCE_SYSTEM_ID,\n\tCreated_Date,\n\tModified_Date,\n\tChanged_Flag,\n\tSEQ_claim_party_relation.NEXTVAL\n\tFROM FIL_Insert\n),\nclaim_party_relation_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_relation\n\t(claim_party_relation_ak_id, claim_party_occurrence_ak_id, claim_party_relation_from_ak_id, claim_party_relation_to_ak_id, claim_party_relation_role_code, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, cms_party_type, is_cms_party_individ)\n\tSELECT \n\tCLAIM_PARTY_RELATION_AK_ID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tCLAIM_PARTY_RELATION_FROM_AK_ID, \n\tCLAIM_PARTY_RELATION_TO_AK_ID, \n\tcre_client_role_cd AS CLAIM_PARTY_RELATION_ROLE_CODE, \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tCMS_PARTY_TYPE, \n\tis_individual AS IS_CMS_PARTY_INDIVID\n\tFROM EXP_Determine_AK\n),\nSQ_claim_party_relation AS (\n\tSELECT \r\n\ta.claim_party_relation_id, \r\n\ta.claim_party_occurrence_ak_id, \r\n\ta.claim_party_relation_from_ak_id, \r\n\ta.claim_party_relation_to_ak_id,\r\n\ta.claim_party_relation_role_code,\r\n\ta.eff_from_date, \r\n\ta.eff_to_date,\r\n\ta.cms_party_type\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_relation a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND  \r\n\t EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_relation b\r\n\t\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.claim_party_occurrence_ak_id = b.claim_party_occurrence_ak_id\r\n\t             AND a.claim_party_relation_from_ak_id = b.claim_party_relation_from_ak_id\r\n\t\t       AND a.claim_party_relation_to_ak_id = b.claim_party_relation_to_ak_id\r\n\t\t      AND a.claim_party_relation_role_code = b.claim_party_relation_role_code\r\n\t       \tAND a.cms_party_type = b.cms_party_type\r\n\t\tGROUP BY claim_party_occurrence_ak_id, claim_party_relation_from_ak_id, claim_party_relation_to_ak_id, claim_party_relation_role_code,cms_party_type\r\n\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY claim_party_occurrence_ak_id, claim_party_relation_from_ak_id, claim_party_relation_to_ak_id, claim_party_relation_role_code, cms_party_type, eff_from_date  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_party_relation_id,\n\tclaim_party_occurrence_ak_id,\n\tclaim_party_relation_from_ak_id,\n\tclaim_party_relation_to_ak_id,\n\tclaim_party_relation_role_code,\n\tcms_party_type,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id AND \r\n\t-- \tclaim_party_relation_from_ak_id = v_PREV_ROW_claim_party_relation_from_ak_id  AND \r\n\t-- \tclaim_party_relation_to_ak_id = v_PREV_ROW_claim_party_relation_to_ak_id AND\r\n\t--       claim_party_relation_role_code = v_claim_party_relation_role_code AND\r\n\t--       cms_party_type = v_cms_party_type,\r\n\t--   ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t--   orig_eff_to_date)\n\tDECODE(TRUE,\n\tclaim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id AND claim_party_relation_from_ak_id = v_PREV_ROW_claim_party_relation_from_ak_id AND claim_party_relation_to_ak_id = v_PREV_ROW_claim_party_relation_to_ak_id AND claim_party_relation_role_code = v_claim_party_relation_role_code AND cms_party_type = v_cms_party_type, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tclaim_party_occurrence_ak_id AS v_PREV_ROW_claim_party_occurrence_ak_id,\n\tclaim_party_relation_from_ak_id AS v_PREV_ROW_claim_party_relation_from_ak_id,\n\tclaim_party_relation_to_ak_id AS v_PREV_ROW_claim_party_relation_to_ak_id,\n\tclaim_party_relation_role_code AS v_claim_party_relation_role_code,\n\tcms_party_type AS v_cms_party_type,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_claim_party_relation\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tclaim_party_relation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_Claim_Party_Relation AS (\n\tSELECT\n\tclaim_party_relation_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nclaim_party_relation_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_relation AS T\n\tUSING UPD_Claim_Party_Relation AS S\n\tON T.claim_party_relation_id = S.claim_party_relation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "SOURCE_SYS_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}