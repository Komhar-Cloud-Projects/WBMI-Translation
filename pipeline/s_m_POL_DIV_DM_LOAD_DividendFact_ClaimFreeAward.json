{
    "name": "s_m_POL_DIV_DM_LOAD_DividendFact_ClaimFreeAward",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DIV_DM_LOAD_DividendFact_ClaimFreeAward",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_ClaimFreeAward AS (\n\tSELECT\n\t\tClaimFreeAward.PolicyAKId,\n\t\tClaimFreeAward.ClaimFreeAwardAmount,\n\t\tClaimFreeAward.ClaimFreeAwardTransactionEnteredDate,\n\t\tClaimFreeAward.ClaimFreeAwardRunDate,\n\t\tStrategicProfitCenter.StrategicProfitCenterCode,\n\t\tpolicy.contract_cust_ak_id,\n\t\tpolicy.sup_state_id,\n\t\tpolicy.AgencyAKId\n\tFROM ClaimFreeAward\n\tINNER JOIN StrategicProfitCenter\n\tINNER JOIN policy\n\tON ClaimFreeAward.PolicyAKId=policy.pol_ak_id and policy.crrnt_snpsht_flag=1 and policy.StrategicProfitCenterAKId=StrategicProfitCenter.StrategicProfitCenterAKId and StrategicProfitCenter.CurrentSnapshotFlag=1\n\tWHERE ClaimFreeAward.CurrentSnapshotFlag=1 AND\r\n\tClaimFreeAward.ClaimFreeAwardType in ('CHECK', 'LIQ-CHK', 'MANUAL-DISB') AND\r\n\tClaimFreeAward.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_GetValues AS (\n\tSELECT\n\tPolicyAKId,\n\tClaimFreeAwardAmount,\n\tClaimFreeAwardTransactionEnteredDate,\n\tClaimFreeAwardRunDate,\n\tStrategicProfitCenterCode,\n\tcontract_cust_ak_id,\n\tsup_state_id,\n\tAgencyAKId,\n\t1 AS o_DividendTypeDimID_lkp_key\n\tFROM SQ_ClaimFreeAward\n),\nLKP_DividendTypeDim AS (\n\tSELECT\n\tDividendTypeDimId,\n\tDividendTypeDimId_lkp_key\n\tFROM (\n\t\tSELECT \r\n\t\tDividendTypeDimId as DividendTypeDimId, \r\n\t\t1 as DividendTypeDimId_lkp_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.DividendTypeDim\r\n\t\tWHERE DividendCategory = 'CFA' and CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DividendTypeDimId_lkp_key ORDER BY DividendTypeDimId DESC) = 1\n),\nLKP_InsuranceReferenceDim AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tStrategicProfitCenterCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceDimId,\n\t\t\tStrategicProfitCenterCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t\tWHERE EnterpriseGroupCode = '1' and InsuranceReferenceCoverageTypeCode = 'N/A' and InsuranceReferenceLegalEntityCode = '1' and InsuranceReferenceLineOfBusinessCode = 'N/A' and InsuranceSegmentCode = 'N/A' and PolicyOfferingCode = 'N/A' and ProductCode = 'N/A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterCode ORDER BY InsuranceReferenceDimId DESC) = 1\n),\nLKP_SalesDivisionDim AS (\n\tSELECT\n\tSalesDivisionDimID,\n\tAgencyAKID\n\tFROM (\n\t\tSelect A.AgencyAKID AS AgencyAKID, \r\n\t\tSDD.SalesDivisionDimID AS SalesDivisionDimID\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Agency A,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RegionalSalesManager RSM,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.SalesDivisionDim SDD\r\n\t\tWHERE A.CurrentSnapshotFlag =1\r\n\t\tAND RSM.RegionalSalesManagerAKID = A.RegionalSalesManagerAKID\r\n\t\tAND RSM.CurrentSnapshotFlag = 1\r\n\t\tAND RSM.SalesDirectorAKID = SDD.EDWSalesDirectorAKID\r\n\t\tAND A.SalesTerritoryAKID = SDD.EDWSalesTerritoryAKID\r\n\t\tAND RSM.RegionalSalesManagerAKID = SDD.EDWRegionalSalesManagerAKID\r\n\t\tAND SDD.CurrentSnapshotFlag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyAKID ORDER BY SalesDivisionDimID DESC) = 1\n),\nLKP_sup_state AS (\n\tSELECT\n\tstate_code,\n\ti_sup_state_id,\n\tsup_state_id\n\tFROM (\n\t\tSELECT \n\t\t\tstate_code,\n\t\t\ti_sup_state_id,\n\t\t\tsup_state_id\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY sup_state_id ORDER BY state_code DESC) = 1\n),\nLKP_StateDim AS (\n\tSELECT\n\tStateDimId,\n\tStateAbbreviation\n\tFROM (\n\t\tSELECT @{pipeline().parameters.TARGET_TABLE_OWNER}.StateDim.StateDimId as StateDimId, LTRIM(RTRIM(@{pipeline().parameters.TARGET_TABLE_OWNER}.StateDim.StateAbbreviation)) as StateAbbreviation FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.StateDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateAbbreviation ORDER BY StateDimId DESC) = 1\n),\nLKP_calendar_dim_ClaimFreeAwardRunDate AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id DESC) = 1\n),\nLKP_calendar_dim_TransactionEnteredDate AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id DESC) = 1\n),\nmplt_PolicyDimID_PremiumMaster AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_GetDimIds AS (\n\tSELECT\n\tLKP_calendar_dim_TransactionEnteredDate.clndr_id AS lkp_DividendTransactionEnteredDateId,\n\tLKP_calendar_dim_ClaimFreeAwardRunDate.clndr_id AS lkp_ClaimFreeAwardRunDateID,\n\tLKP_InsuranceReferenceDim.InsuranceReferenceDimId AS lkp_InsuranceReferenceDimId,\n\tmplt_PolicyDimID_PremiumMaster.agency_dim_id AS lkp_AgencyDimID,\n\tLKP_SalesDivisionDim.SalesDivisionDimID AS lkp_SalesDivisionDimID,\n\tmplt_PolicyDimID_PremiumMaster.pol_dim_id AS lkp_pol_dim_id,\n\tmplt_PolicyDimID_PremiumMaster.contract_cust_dim_id AS lkp_contract_cust_dim_id,\n\tLKP_DividendTypeDim.DividendTypeDimId AS lkp_DividendTypeDimId,\n\tLKP_StateDim.StateDimId AS lkp_StateDimId,\n\tEXP_GetValues.ClaimFreeAwardAmount,\n\t-- *INF*: IIF(ISNULL(lkp_InsuranceReferenceDimId),-1,lkp_InsuranceReferenceDimId)\n\tIFF(lkp_InsuranceReferenceDimId IS NULL, - 1, lkp_InsuranceReferenceDimId) AS o_StrategicProfitCenterDimId,\n\t-- *INF*: IIF(ISNULL(lkp_AgencyDimID),-1,lkp_AgencyDimID)\n\tIFF(lkp_AgencyDimID IS NULL, - 1, lkp_AgencyDimID) AS o_AgencyDimId,\n\t-- *INF*: IIF(ISNULL(lkp_SalesDivisionDimID),-1,lkp_SalesDivisionDimID)\n\tIFF(lkp_SalesDivisionDimID IS NULL, - 1, lkp_SalesDivisionDimID) AS o_SalesDivisionDimId,\n\t-- *INF*: IIF(ISNULL(lkp_pol_dim_id),-1,lkp_pol_dim_id)\n\tIFF(lkp_pol_dim_id IS NULL, - 1, lkp_pol_dim_id) AS o_PolicyDimId,\n\t-- *INF*: IIF(ISNULL(lkp_contract_cust_dim_id),-1,lkp_contract_cust_dim_id)\n\tIFF(lkp_contract_cust_dim_id IS NULL, - 1, lkp_contract_cust_dim_id) AS o_ContractCustomerDimId,\n\t-- *INF*: IIF(ISNULL(lkp_DividendTypeDimId),-1,lkp_DividendTypeDimId)\n\tIFF(lkp_DividendTypeDimId IS NULL, - 1, lkp_DividendTypeDimId) AS o_DividendTypeDimId,\n\t-- *INF*: IIF(ISNULL(lkp_StateDimId),-1,lkp_StateDimId)\n\tIFF(lkp_StateDimId IS NULL, - 1, lkp_StateDimId) AS o_StateDimId,\n\t-- *INF*: IIF(ISNULL(lkp_DividendTransactionEnteredDateId),-1,lkp_DividendTransactionEnteredDateId)\n\tIFF(lkp_DividendTransactionEnteredDateId IS NULL, - 1, lkp_DividendTransactionEnteredDateId) AS o_DividendTransactionEnteredDateId,\n\t-- *INF*: IIF(ISNULL(lkp_ClaimFreeAwardRunDateID),-1,lkp_ClaimFreeAwardRunDateID)\n\tIFF(lkp_ClaimFreeAwardRunDateID IS NULL, - 1, lkp_ClaimFreeAwardRunDateID) AS o_ClaimFreeAwardRunDateID\n\tFROM EXP_GetValues\n\t -- Manually join with mplt_PolicyDimID_PremiumMaster\n\tLEFT JOIN LKP_DividendTypeDim\n\tON LKP_DividendTypeDim.DividendTypeDimId_lkp_key = EXP_GetValues.o_DividendTypeDimID_lkp_key\n\tLEFT JOIN LKP_InsuranceReferenceDim\n\tON LKP_InsuranceReferenceDim.StrategicProfitCenterCode = EXP_GetValues.StrategicProfitCenterCode\n\tLEFT JOIN LKP_SalesDivisionDim\n\tON LKP_SalesDivisionDim.AgencyAKID = EXP_GetValues.AgencyAKId\n\tLEFT JOIN LKP_StateDim\n\tON LKP_StateDim.StateAbbreviation = LKP_sup_state.state_code\n\tLEFT JOIN LKP_calendar_dim_ClaimFreeAwardRunDate\n\tON LKP_calendar_dim_ClaimFreeAwardRunDate.clndr_date = EXP_GetValues.ClaimFreeAwardRunDate\n\tLEFT JOIN LKP_calendar_dim_TransactionEnteredDate\n\tON LKP_calendar_dim_TransactionEnteredDate.clndr_date = EXP_GetValues.ClaimFreeAwardTransactionEnteredDate\n),\nAGG_SUM AS (\n\tSELECT\n\to_StrategicProfitCenterDimId AS StrategicProfitCenterDimId,\n\to_AgencyDimId AS AgencyDimId,\n\to_SalesDivisionDimId AS SalesDivisionDimId,\n\to_PolicyDimId AS PolicyDimId,\n\to_ContractCustomerDimId AS ContractCustomerDimId,\n\to_DividendTypeDimId AS DividendTypeDimId,\n\to_StateDimId AS StateDimId,\n\to_DividendTransactionEnteredDateId AS DividendTransactionEnteredDateId,\n\to_ClaimFreeAwardRunDateID AS ClaimFreeAwardRunDateID,\n\tClaimFreeAwardAmount,\n\t-- *INF*: ROUND(SUM(ClaimFreeAwardAmount),2)\n\tROUND(SUM(ClaimFreeAwardAmount), 2) AS SUM_ClaimFreeAwardAmount\n\tFROM EXP_GetDimIds\n\tGROUP BY PolicyDimId, DividendTypeDimId, StateDimId, DividendTransactionEnteredDateId, ClaimFreeAwardRunDateID\n),\nEXP_Default AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tStrategicProfitCenterDimId,\n\tAgencyDimId,\n\tSalesDivisionDimId,\n\tPolicyDimId,\n\tContractCustomerDimId,\n\tDividendTypeDimId,\n\tStateDimId,\n\tDividendTransactionEnteredDateId,\n\tClaimFreeAwardRunDateID AS DividendRunDateId,\n\t0.0 AS DividendPayableAmount,\n\tSUM_ClaimFreeAwardAmount AS DividendPaidAmount,\n\t-1 AS PolicyAuditDimID\n\tFROM AGG_SUM\n),\nLKP_DividendFact AS (\n\tSELECT\n\tDividendFactId,\n\tPolicyDimId,\n\tDividendTypeDimId,\n\tStateDimId,\n\tDividendTransactionEnteredDateId,\n\tDividendRunDateId\n\tFROM (\n\t\tSELECT \n\t\t\tDividendFactId,\n\t\t\tPolicyDimId,\n\t\t\tDividendTypeDimId,\n\t\t\tStateDimId,\n\t\t\tDividendTransactionEnteredDateId,\n\t\t\tDividendRunDateId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.DividendFact\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyDimId,DividendTypeDimId,StateDimId,DividendTransactionEnteredDateId,DividendRunDateId ORDER BY DividendFactId DESC) = 1\n),\nRTR_Target AS (\n\tSELECT\n\tLKP_DividendFact.DividendFactId,\n\tEXP_Default.o_AuditId AS AuditId,\n\tEXP_Default.StrategicProfitCenterDimId,\n\tEXP_Default.AgencyDimId,\n\tEXP_Default.SalesDivisionDimId,\n\tEXP_Default.PolicyDimId,\n\tEXP_Default.ContractCustomerDimId,\n\tEXP_Default.DividendTypeDimId,\n\tEXP_Default.StateDimId,\n\tEXP_Default.DividendTransactionEnteredDateId,\n\tEXP_Default.DividendRunDateId,\n\tEXP_Default.DividendPayableAmount,\n\tEXP_Default.DividendPaidAmount,\n\tEXP_Default.PolicyAuditDimID\n\tFROM EXP_Default\n\tLEFT JOIN LKP_DividendFact\n\tON LKP_DividendFact.PolicyDimId = EXP_Default.PolicyDimId AND LKP_DividendFact.DividendTypeDimId = EXP_Default.DividendTypeDimId AND LKP_DividendFact.StateDimId = EXP_Default.StateDimId AND LKP_DividendFact.DividendTransactionEnteredDateId = EXP_Default.DividendTransactionEnteredDateId AND LKP_DividendFact.DividendRunDateId = EXP_Default.DividendRunDateId\n),\nRTR_Target_NEW AS (SELECT * FROM RTR_Target WHERE ISNULL(DividendFactId)),\nRTR_Target_UPDATE AS (SELECT * FROM RTR_Target WHERE NOT ISNULL(DividendFactId)),\nDividendFact_INSERT AS (\n\tINSERT INTO DividendFact\n\t(AuditId, StrategicProfitCenterDimId, AgencyDimId, SalesDivisionDimId, PolicyDimId, ContractCustomerDimId, DividendTypeDimId, StateDimId, DividendTransactionEnteredDateId, DividendRunDateId, DividendPayableAmount, DividendPaidAmount, PolicyAuditDimId)\n\tSELECT \n\tAUDITID, \n\tSTRATEGICPROFITCENTERDIMID, \n\tAGENCYDIMID, \n\tSALESDIVISIONDIMID, \n\tPOLICYDIMID, \n\tCONTRACTCUSTOMERDIMID, \n\tDIVIDENDTYPEDIMID, \n\tSTATEDIMID, \n\tDIVIDENDTRANSACTIONENTEREDDATEID, \n\tDIVIDENDRUNDATEID, \n\tDIVIDENDPAYABLEAMOUNT, \n\tDIVIDENDPAIDAMOUNT, \n\tPolicyAuditDimID AS POLICYAUDITDIMID\n\tFROM RTR_Target_NEW\n),\nUPD_UPDATE AS (\n\tSELECT\n\tDividendFactId, \n\tAuditId, \n\tStrategicProfitCenterDimId, \n\tAgencyDimId, \n\tSalesDivisionDimId, \n\tPolicyDimId, \n\tContractCustomerDimId, \n\tDividendTypeDimId, \n\tStateDimId, \n\tDividendTransactionEnteredDateId, \n\tDividendRunDateId, \n\tDividendPayableAmount AS DividendPayableAmount3, \n\tDividendPaidAmount\n\tFROM RTR_Target_UPDATE\n),\nDividendFact_UPDATE AS (\n\tMERGE INTO DividendFact AS T\n\tUSING UPD_UPDATE AS S\n\tON T.DividendFactId = S.DividendFactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.StrategicProfitCenterDimId = S.StrategicProfitCenterDimId, T.AgencyDimId = S.AgencyDimId, T.SalesDivisionDimId = S.SalesDivisionDimId, T.PolicyDimId = S.PolicyDimId, T.ContractCustomerDimId = S.ContractCustomerDimId, T.DividendTypeDimId = S.DividendTypeDimId, T.StateDimId = S.StateDimId, T.DividendTransactionEnteredDateId = S.DividendTransactionEnteredDateId, T.DividendRunDateId = S.DividendRunDateId, T.DividendPayableAmount = S.DividendPayableAmount3, T.DividendPaidAmount = S.DividendPaidAmount\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246511"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905532"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604539"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 03:00:39"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 03:35:00"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Data_Mart"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}