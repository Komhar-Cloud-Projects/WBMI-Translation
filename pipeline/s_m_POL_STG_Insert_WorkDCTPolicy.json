{
    "name": "s_m_POL_STG_Insert_WorkDCTPolicy",
    "properties": {
        "activities": [
            {
                "name": "m_POL_STG_Insert_WorkDCTPolicy",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CheckPolicyForReissueORRewrite AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersion\n\tFROM (\n\t\tselect A.PolicyNumber AS PolicyNumber,A.PolicyVersion AS PolicyVersion \r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchWBPolicyStaging A\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCTransactionStaging B\r\n\t\ton A.SessionId=B.SessionId\r\n\t\twhere B.Type in ('Reissue','Rewrite')\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyVersion ORDER BY PolicyNumber) = 1\n),\nSQ_WorkDCTPolicy AS (\n\tSELECT  DCPolicyStaging.SessionId,\r\n\t\t\tDCPolicyStaging.PolicyId,\r\n\t\t\tDCPartyStaging.PartyId,\r\n\t\t\tDCPartyStaging.NAME,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tDCPartyStaging.FirstName,\r\n\t\t\tDCPartyStaging.LastName,\r\n\t\t\tDCPartyStaging.MiddleName,\r\n\t\t\tDCPartyAssociationStaging.EntityType,\r\n\t\t\tDCPartyAssociationStaging.FederalEmployeeIDNumber,\r\n\t\t\tDCPolicyStaging.SICCode,\r\n\t\t\tDCPolicyStaging.NAICSCode,\r\n\t\t\tWBPolicyStaging.Program,\r\n\t\t\tDCPolicyStaging.Id PolicyGUId,\r\n\t\t\tWBPartyStaging.CustomerNum,\r\n\t\t\tDCPolicyStaging.PolicyNumber,\r\n\t\t\tWBPolicyStaging.PolicyVersion,\r\n\t\t\tWBPolicyStaging.PolicyVersionFormatted,\r\n\t\t\tDCPolicyStaging.EffectiveDate PolicyEffectiveDate,\r\n\t\t\tDCPolicyStaging.ExpirationDate PolicyExpirationDate,\r\n\t\t\tDCPolicyStaging.LineOfBusiness,\r\n\t\t\tDCPolicyStaging.Term,\r\n\t\t\tDCPolicyStaging.PrimaryRatingState,\r\n\t\t\tDCPolicyStaging.Product,\r\n\t\t\tDCPolicyStaging.AuditPeriod,\r\n\t\t\tDCPolicyStaging.CancellationDate,\r\n\t\t\tDCPolicyStaging.TransactionDate,\r\n\t\t\tDCPolicyStaging.InceptionDate,\r\n\t\t\tDCTransactionStaging.Type TransactionType,\r\n\t\t\tWBPolicyStaging.Division,\r\n\t\t\tWBPolicyStaging.Terrorism,\r\n\t\t\tWBPolicyStaging.WBProduct,\r\n\t\t\tWBPolicyStaging.WBProductType,\r\n\t\t\t'N/A' AS RiskGrade,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tWBPolicyStaging.BCCCode,\r\n\t\t\tWBPolicyStaging.WB_PolicyId,\r\n\t\t\tWBPolicyStaging.AutomaticRenewalIndicator,\r\n\t\t\tWBPolicyStaging.Association,\r\n\t\t\tWBPolicyStaging.AssociationDiscountFactor,\r\n\t\t\t'N/A' AS LineType,\r\n\t\t\tWBPolicyStaging.PolicyProgram,\r\n\t\t\tDCPolicyStaging.STATUS PolicyStatus,\r\n\t\t\tISNULL(DCTransactionStaging.TransactionDate, DCTransactionStaging.CreatedDate) TransactionCreatedDate,\r\n\t\t\tDCTransactionStaging.EffectiveDate TransactionEffectiveDate,\r\n\t\t\tDCTransactionStaging.ExpirationDate TransactionExpirationDate,\r\n\t\t\tDCTransactionStaging.CancellationDate TransactionCancellationDate,\r\n\t\t\tWBReasonStaging.Code AS ReasonCode,\r\n\t\t\tWBReasonStaging.CodeCaption  AS ReasonCodeCaption,\r\n\t\t\tDCTransactionStaging.STATE AS TransactionState,\r\n\t\t\tDCSessionStaging.Purpose AS TransactionPurpose,\r\n\t\t\tDCPolicyStaging.SICCodeDesc,\r\n\t\t\tDCPolicyStaging.NAICSCodeDesc,\r\n\t\t\tDCPartyStaging.Title,\r\n\t\t\tWBPartyStaging.DoingBusinessAs,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tWBTransactionStage.QuoteActionTimeStamp,\r\n\t\t\tWBTransactionStage.QuoteActionStatus,\r\n\t\t\tWBTransactionStage.QuoteActionUserClassification,\r\n\t\t\tWBTransactionStage.QuoteActionUserName,\r\n\t\t\tWBAgencyStaging.Reference AS AgencyCode,\r\n\t\t\tWBCLPolicyStage.IsApplicant,\r\n\t\t\tWBCLPolicyStage.RejectedReason,\r\n\t\t\tWBCLPolicyStage.RejectedReasonDetails,\r\n\t\t\tWBProducerStage.NAME AS ProducerName,\r\n\t\t\tDCContactStaging.PhoneNumber,\r\n\t\t\tWBPolicyStaging.customercare,\r\n\t\t\tWBBPPartyStage.BOP_New_BusinessSegment AS BusinessSegmentCode,\r\n\t\t\tDCTransactionStaging.IssuedUserName AS TransactionCreatedUserId,\t\r\n\t\t\tWBPolicyStaging.EndorseProcessedBy AS EndorsedProcessedBy,\r\n\t\t\tWBCLPolicyStage.EstimatedQuotePremium,\r\n\t\t\tWBPolicyStaging.IsRollover,\r\n\t\t\tCASE WHEN WBPolicyStaging.IsRollover = 1 AND LTRIM(RTRIM(WBPolicyStaging.PriorCarrierName)) = 'Other'\r\n\t\t\t\tTHEN WBPolicyStaging.PriorCarrierNameOther \r\n\t\t\tELSE PriorInsurance.CarrierNameOther \r\n\t\t\tend as PriorCarrierNameOther,\t\r\n\t\t\tWBCLPolicyStage.MailPolicyToInsured,\r\n\t\t\tWBTransactionStage.DataFix,\r\n\t\t\tWBTransactionStage.DataFixDate,\r\n\t\t\tWBTransactionStage.DataFixType,\r\n\t\t\tCASE \r\n\t\t\t\tWHEN WBPolicyStaging.IsRollover = 1 \r\n\t\t\t\t\tTHEN WBPolicyStaging.PriorCarrierName\r\n\t\t\t\tWHEN DCPolicyStaging.PreviousPolicyNumber IS NOT NULL \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tTHEN COALESCE(WBPolicyStaging.PriorCarrierName, PriorInsurance.CarrierName, 'WestBend')\r\n\t\t\t\tELSE COALESCE(PriorInsurance.CarrierName, DCTPriorLookup.CarrierName)\r\n\t\t\tEND AS PriorCarrierName,\r\n\t\r\n\t\t\tCASE\r\n\t\t\t\tWHEN (\r\n\t\t\t\t\t\tDCPolicyStaging.PreviousPolicyNumber IS NULL\r\n\t\t\t\t\t\tOR WBPolicyStaging.PreviousPolicyVersion IS NULL\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tAND (\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tPriorInsurance.CarrierName = 'WestBend'\r\n\t\t\t\t\t\t\tOR PriorInsurance.CarrierName IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\tPriorInsurance.PolicyNumber IS NULL\r\n\t\t\t\t\t\t\tOR PriorInsurance.PolicyMod IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tTHEN DCTPriorLookup.PolicySymbol\r\n\t\t\t\tELSE CASE \r\n\t\t\t\t\t\tWHEN PriorInsurance.CarrierName = 'WestBend'\r\n\t\t\t\t\t\t\tOR DCPolicyStaging.PreviousPolicyNumber IS NOT NULL\r\n\t\t\t\t\t\t\tTHEN ISNULL(PriorInsurance.PolicySymbol, '000')\t\t\t\t\t\r\n\t\t\t\t\t\tEND\r\n\t\t\t\tEND AS PriorPolicySymbol,\r\n\t\r\n\t\t\t\tCASE\r\n\t\t\t\tWHEN (\r\n\t\t\t\t\t\tDCPolicyStaging.PreviousPolicyNumber IS NULL\r\n\t\t\t\t\t\tOR WBPolicyStaging.PreviousPolicyVersion IS NULL\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tAND (\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tPriorInsurance.CarrierName = 'WestBend'\r\n\t\t\t\t\t\t\tOR PriorInsurance.CarrierName IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\tPriorInsurance.PolicyNumber IS NULL\r\n\t\t\t\t\t\t\tOR PriorInsurance.PolicyMod IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tTHEN DCTPriorLookup.PolicyNumber\r\n\t\t\t\tELSE COALESCE(DCPolicyStaging.PreviousPolicyNumber, PriorInsurance.PolicyNumber)\r\n\t\t\t\tEND AS PriorPolicyNumber,\r\n\t\r\n\t\t\t\tCASE\r\n\t\t\t\tWHEN (\r\n\t\t\t\t\t\tDCPolicyStaging.PreviousPolicyNumber IS NULL\r\n\t\t\t\t\t\tOR WBPolicyStaging.PreviousPolicyVersion IS NULL\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tAND (\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tPriorInsurance.CarrierName = 'WestBend'\r\n\t\t\t\t\t\t\tOR PriorInsurance.CarrierName IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\tPriorInsurance.PolicyNumber IS NULL\r\n\t\t\t\t\t\t\tOR PriorInsurance.PolicyMod IS NULL\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tTHEN DCTPriorLookup.PolicyVersion\t\r\n\t\t\t\t\tELSE COALESCE(CASE \r\n\t\t\t\t\t\t\tWHEN ISNUMERIC(WBPolicyStaging.PreviousPolicyVersion) = 1\r\n\t\t\t\t\t\t\t\tTHEN RIGHT('00' + CAST(WBPolicyStaging.PreviousPolicyVersion AS VARCHAR(2)), 2)\r\n\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\tEND,PriorInsurance.PolicyMod)\r\n\t\t\t\tEND AS PriorPolicyMod,\r\n\t\r\n\t\t\tCASE\r\n\t\t\t\tWHEN PriorInsurance.CarrierName = 'WestBend' THEN PriorInsurance.PolicyNumber\r\n\t\t\t\tWHEN DCPolicyStaging.PreviousPolicyNumber IS NULL AND\r\n\t\t\t\t\tWBPolicyStaging.PreviousPolicyVersion > 0 THEN DCPolicyStaging.PolicyNumber \t\t\t\t\r\n\t\t\t\tELSE COALESCE(DCPolicyStaging.PreviousPolicyNumber,null)\r\n\t\t\tEND AS \tPreviousPolicyNumber,\r\n\t\tWBPolicyStaging.PolicyIssueCodeDesc,\r\n\t\tWBPolicyStaging.PolicyIssueCodeOverride,\r\n\t\tWBTransactionStage.DeclaredEvent,\r\n\t\tWBPolicyStaging.IssuedUWID,\r\n\t\tWBPolicyStaging.IssuedUnderwriter,\r\n\t\tWBPolicyStaging.ExternalQuoteSource,\r\n\t\tWBPolicyStaging.TurnstileGenerated,\r\n\t\tWBPolicyStaging.PenguinTechGenerated,\r\n\t\tWBPolicyStaging.LCSurveyOrderedIndicator,\r\n\t\tWBPolicyStaging.LCSurveyOrderedDate,\r\n\t\tWBCLPolicyStage.ExpiredReason,\r\n\t\tWBCLPolicyStage.ExpiredReasonDetails\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPolicyStaging DCPolicyStaging\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCSessionStaging DCSessionStaging\r\n\t\t\tON DCSessionStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPolicyStaging WBPolicyStaging\r\n\t\t\tON WBPolicyStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBPolicyStaging.PolicyId = DCPolicyStaging.PolicyId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTransactionStaging DCTransactionStaging\r\n\t\t\tON DCTransactionStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\t-- This accomodates obscure situations where for a given sessionID I get multiple HistoryIDs.  This situation\r\n\t\t\t\t-- should not occur, but has in the past so this logic deals with that anomaly by retrieving only the maximum\r\n\t\t\t\t-- (i.e. lastest) history ID for a given SessionID\r\n\t\t\t\tAND DCTransactionStaging.HistoryId IN (\r\n\t\t\t\t\tSELECT MAX(a.HistoryId)\r\n\t\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTransactionStaging a\r\n\t\t\t\t\tWHERE a.SessionId = DCTransactionStaging.SessionId\r\n\t\t\t\t\t)\r\n\t\tLeft Join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBReasonStaging WBReasonStaging\r\n\t\ton WBReasonStaging.TransactionId=DCTransactionStaging.TransactionId\r\n\t\tand WBReasonStaging.SessionId=DCTransactionStaging.SessionId\r\n\t\tand not exists (\r\n\t\tselect 1 from WBReasonStaging WBR\r\n\t\twhere WBR.TransactionId=WBReasonStaging.TransactionId\r\n\t\tand WBR.Sessionid=WBReasonStaging.Sessionid\r\n\t\tand WBR.WB_ReasonId>WBReasonStaging.WB_ReasonId)\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPartyAssociationStaging DCPartyAssociationStaging\r\n\t\t\tON DCPartyAssociationStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND DCPartyAssociationStaging.PartyAssociationType = 'Account'\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPartyStaging DCPartyStaging\r\n\t\t\tON DCPartyStaging.SessionId = DCPartyAssociationStaging.SessionId\r\n\t\t\t\tAND DCPartyStaging.PartyId = DCPartyAssociationStaging.PartyId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPartyStaging WBPartyStaging\r\n\t\t\tON WBPartyStaging.SessionId = DCPartyAssociationStaging.SessionId\r\n\t\t\t\tAND WBPartyStaging.PartyId = DCPartyAssociationStaging.PartyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBTransactionStage WBTransactionStage\r\n\t\t\tON WBTransactionStage.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBTransactionStage.TransactionId = DCTransactionStaging.TransactionId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBAgencyStaging WBAgencyStaging\r\n\t\t\tON WBAgencyStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLPolicyStage WBCLPolicyStage\r\n\t\t\tON WBCLPolicyStage.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBCLPolicyStage.WB_PolicyId = WBPolicyStaging.WB_PolicyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBProducerStage WBProducerStage\r\n\t\t\tON WBProducerStage.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBProducerStage.PolicyId = DCPolicyStaging.PolicyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCContactStaging DCContactStaging\r\n\t\t\tON DCContactStaging.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND DCContactStaging.Type = 'Primary'\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLPartyStage WBCLPartyStage\r\n\t\t\tON WBCLPartyStage.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBCLPartyStage.WB_PartyId = WBPartyStaging.WB_PartyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPPartyStage WBBPPartyStage\r\n\t\t\tON WBBPPartyStage.SessionId = DCPolicyStaging.SessionId\r\n\t\t\t\tAND WBBPPartyStage.WB_CL_PartyId = WBCLPartyStage.WB_CL_PartyId\r\n\t\tOUTER APPLY (\r\n\t\t\t --Get the policy key information from the Prior Insurance tables for one and only one policy \r\n\t\t\tSELECT TOP 1 dpi.CarrierName,\r\n\t\t\t\twpi.CarrierNameOther,\r\n\t\t\t\twcpi.PolicySymbol,\r\n\t\t\t\tdpi.PolicyNumber,\r\n\t\t\t\tCASE \r\n\t\t\t\t\tWHEN ISNUMERIC(wcpi.PolicyMod) = 1\r\n\t\t\t\t\t\tTHEN RIGHT('00' + CAST(wcpi.PolicyMod AS VARCHAR(2)), 2)\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\t\tEND AS PolicyMod\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPriorInsuranceStaging dpi\r\n\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPriorInsuranceStage wpi\r\n\t\t\t\tON dpi.PriorInsuranceId = wpi.PriorInsuranceId\r\n\t\t\t\t\tAND dpi.SessionId = wpi.SessionId\r\n\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLPriorInsuranceStage wcpi\r\n\t\t\t\tON wpi.WBPriorInsuranceId = wcpi.WBPriorInsuranceId\r\n\t\t\t\t\tAND wpi.SessionId = wcpi.SessionId\r\n\t\t\tWHERE dpi.PolicyId = DCPolicyStaging.PolicyId\r\n\t\t\t\tAND dpi.SessionId = DCPolicyStaging.SessionId\r\n\t\t\tORDER BY wcpi.PolicySymbol,\r\n\t\t\t\tdpi.PolicyNumber,\r\n\t\t\t\twcpi.PolicyMod\r\n\t\t\t) PriorInsurance\r\n\t\tOUTER APPLY (\r\n\t\t\t-- Get the policy key information with same policy number that has the highest version that is less than the current version\r\n\t\t\tSELECT TOP 1 'WestBend' AS CarrierName,\r\n\t\t\t\t'000' AS PolicySymbol,\r\n\t\t\t\ta.PolicyNumber,\r\n\t\t\t\tCASE \r\n\t\t\t\t\tWHEN ISNUMERIC(b.PolicyVersion) = 1\r\n\t\t\t\t\t\tTHEN RIGHT('00' + CAST(b.PolicyVersion AS VARCHAR(2)), 2)\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\t\tEND AS PolicyVersion\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPolicyStaging a\r\n\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPolicyStaging b\r\n\t\t\t\tON a.policyid = b.policyid\r\n\t\t\t\t\tAND a.SessionId = b.SessionId\r\n\t\t\tWHERE a.policynumber = DCPolicyStaging.PolicyNumber\r\n\t\t\t\tAND b.PolicyVersion < WBPolicyStaging.PolicyVersion\r\n\t\t\tORDER BY b.PolicyVersion DESC\r\n\t\t\t) DCTPriorLookup\n),\nEXP_Default AS (\n\tSELECT\n\tSYSDATE AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tSessionId,\n\tPolicyId,\n\tPartyId,\n\tName,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tEntityType,\n\tFederalEmployeeIDNumber,\n\tSICCode,\n\tNAICSCode,\n\tProgram,\n\tPolicyGUId,\n\tCustomerNum,\n\tPolicyNumber,\n\tPolicyVersion,\n\tPolicyVersionFormatted,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tLineOfBusiness,\n\tTerm,\n\tPrimaryRatingState,\n\tProduct,\n\tAuditPeriod,\n\tCancellationDate,\n\tTransactionDate,\n\tPriorPolicySymbol,\n\t-- *INF*: IIF(ISNULL(PriorPolicySymbol),'',ltrim(rtrim(PriorPolicySymbol)))\n\tIFF(PriorPolicySymbol IS NULL, '', ltrim(rtrim(PriorPolicySymbol))) AS v_PriorPolicySymbol,\n\tPriorPolicyNumber,\n\t-- *INF*: IIF(ISNULL(PriorPolicyNumber),'',ltrim(rtrim(PriorPolicyNumber)))\n\tIFF(PriorPolicyNumber IS NULL, '', ltrim(rtrim(PriorPolicyNumber))) AS v_PriorPolicyNumber,\n\tPriorPolicyMod,\n\t-- *INF*: IIF(ISNULL(PriorPolicyMod),'',ltrim(rtrim(PriorPolicyMod)))\n\tIFF(PriorPolicyMod IS NULL, '', ltrim(rtrim(PriorPolicyMod))) AS v_PriorPolicyMod,\n\t-- *INF*: IIF(v_PriorPolicySymbol='000',v_PriorPolicyNumber||v_PriorPolicyMod,v_PriorPolicySymbol||v_PriorPolicyNumber||v_PriorPolicyMod)\r\n\t-- \r\n\t-- --IIF(ISNULL(v_PriorPolicySymbol||v_PreviousPolicyNumber||v_PriorPolicyMod),'',v_PriorPolicySymbol||v_PreviousPolicyNumber||v_PriorPolicyMod)\n\tIFF(\n\t    v_PriorPolicySymbol = '000', v_PriorPolicyNumber || v_PriorPolicyMod,\n\t    v_PriorPolicySymbol || v_PriorPolicyNumber || v_PriorPolicyMod\n\t) AS v_PriorPolicyKey_Check,\n\t-- *INF*: IIF(PriorCarrierName='WestBend' or ISNULL(PriorCarrierName),v_PriorPolicyKey_Check,'')\n\tIFF(PriorCarrierName = 'WestBend' or PriorCarrierName IS NULL, v_PriorPolicyKey_Check, '') AS v_PriorPolicyKey_Check2,\n\t-- *INF*: IIF(ISNULL(v_PriorPolicyKey_Check2),'', v_PriorPolicyKey_Check2)\r\n\t-- \r\n\t-- --IIF(ISNULL(v_PriorPolicySymbol||v_PreviousPolicyNumber||v_PriorPolicyMod),'',v_PriorPolicySymbol||v_PreviousPolicyNumber||v_PriorPolicyMod)\n\tIFF(v_PriorPolicyKey_Check2 IS NULL, '', v_PriorPolicyKey_Check2) AS v_PriorPolicyKey,\n\tInceptionDate,\n\tTransactionType,\n\tDivision,\n\tTerrorism,\n\tWBProduct,\n\tWBProductType,\n\tRiskGrade,\n\tBCCCode,\n\tWBPolicyId,\n\tAutomaticRenewalIndicator AS i_AutomaticRenewalIndicator,\n\t-- *INF*: DECODE(i_AutomaticRenewalIndicator,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_AutomaticRenewalIndicator,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_AutomaticRenewalIndicator,\n\tAssociation,\n\tAssociationDiscountFactor,\n\tLineType,\n\tPolicyProgram,\n\tv_PriorPolicyKey AS PriorPolicyKey,\n\t-- *INF*: IIF(PriorCarrierName='WestBend',IIF(ISNULL(:LKP.LKP_CHECKPOLICYFORREISSUEORREWRITE(PolicyNumber,PolicyVersion))=1,'1','0'),'0')\n\tIFF(\n\t    PriorCarrierName = 'WestBend',\n\t    IFF(\n\t        LKP_CHECKPOLICYFORREISSUEORREWRITE_PolicyNumber_PolicyVersion.PolicyNumber IS NULL = 1,\n\t        '1',\n\t        '0'\n\t    ),\n\t    '0'\n\t) AS v_RenewalPolicyFlag,\n\t-- *INF*: IIF(v_RenewalPolicyFlag='1',v_PriorPolicySymbol,NULL)\n\tIFF(v_RenewalPolicyFlag = '1', v_PriorPolicySymbol, NULL) AS RenewalPolicySymbol,\n\t-- *INF*: IIF(v_RenewalPolicyFlag='1',v_PriorPolicyNumber,NULL)\n\tIFF(v_RenewalPolicyFlag = '1', v_PriorPolicyNumber, NULL) AS RenewalPolicyNumber,\n\t-- *INF*: IIF(v_RenewalPolicyFlag='1',v_PriorPolicyMod,NULL)\n\tIFF(v_RenewalPolicyFlag = '1', v_PriorPolicyMod, NULL) AS RenewalPolicyMod,\n\tPolicyStatus,\n\tTransactionCreatedDate,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tTransactionCancellationDate,\n\tReasonCode,\n\tReasonCodeCaption,\n\tTransactionState,\n\tTransactionPurpose,\n\tSICCodeDesc,\n\tNAICSCodeDesc,\n\tTitle,\n\tDoingBusinessAs,\n\tQuoteActionTimeStamp,\n\tQuoteActionStatus,\n\tQuoteActionUserClassification,\n\tQuoteActionUserName,\n\tAgencyCode,\n\tIsApplicant,\n\tRejectedReason,\n\tRejectedReasonDetails,\n\tProducerName,\n\tPhoneNumber,\n\tCustomerCare,\n\tBusinessSegmentCode,\n\tTransactionCreatedUserId,\n\t-- *INF*: IIF (isnull(TransactionCreatedUserId),'N/A',\r\n\t-- SUBSTR(TransactionCreatedUserId,\r\n\t--                   INSTR(TransactionCreatedUserId,'\\')+1,LENGTH(TransactionCreatedUserId)))\n\tIFF(\n\t    TransactionCreatedUserId IS NULL, 'N/A',\n\t    SUBSTR(TransactionCreatedUserId, REGEXP_INSTR(TransactionCreatedUserId, '\\') + 1, LENGTH(TransactionCreatedUserId))\n\t) AS o_TransactionCreateduserId,\n\tEndorsedProcessedby AS EndorseProcessedby,\n\t-- *INF*: IIF(ISNULL(EndorseProcessedby),'N/A',EndorseProcessedby)\n\tIFF(EndorseProcessedby IS NULL, 'N/A', EndorseProcessedby) AS o_EndorseProcessedby,\n\tEstimatedQuotePremium,\n\tIsRollover AS i_IsRollover,\n\t-- *INF*: IIF(i_IsRollover='T','1','0')\n\tIFF(i_IsRollover = 'T', '1', '0') AS o_IsRollover,\n\tPriorCarrierName,\n\tPirorCarrierNameOther,\n\tMailPolicyToInsured AS i_MailPolicyToInsured,\n\t-- *INF*: IIF(i_MailPolicyToInsured='T','1','0')\n\tIFF(i_MailPolicyToInsured = 'T', '1', '0') AS o_MailPolicyToInsured,\n\tDataFix,\n\tDataFixDate,\n\tDataFixType,\n\tPreviousPolicyNumber,\n\tPolicyIssueCodeDesc,\n\tPolicyIssueCodeOverride AS i_PolicyIssueCodeOverride,\n\t-- *INF*: DECODE(i_PolicyIssueCodeOverride, 'T', 1, 'F', 0)\n\tDECODE(\n\t    i_PolicyIssueCodeOverride,\n\t    'T', 1,\n\t    'F', 0\n\t) AS o_PolicyIssueCodeOverride,\n\tDeclaredEvent AS i_DeclaredEvent,\n\t-- *INF*: DECODE(TRUE,i_DeclaredEvent ='T',1,\r\n\t-- i_DeclaredEvent = 'F',0,\r\n\t-- ISNULL(i_DeclaredEvent),0\r\n\t-- )\r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    i_DeclaredEvent = 'T', 1,\n\t    i_DeclaredEvent = 'F', 0,\n\t    i_DeclaredEvent IS NULL, 0\n\t) AS o_DeclaredEvent,\n\tIssuedUWID,\n\tIssuedUnderwriter,\n\tExternalQuoteSource,\n\tTurnstileGenerated AS i_TurnstileGenerated,\n\t-- *INF*: DECODE(i_TurnstileGenerated, 'T', 1, 'F', 0)\n\tDECODE(\n\t    i_TurnstileGenerated,\n\t    'T', 1,\n\t    'F', 0\n\t) AS o_TurnstileGenerated,\n\tPenguinTechGenerated AS i_PenguinTechGenerated,\n\t-- *INF*: DECODE(i_PenguinTechGenerated, 'T', 1, 'F', 0)\n\tDECODE(\n\t    i_PenguinTechGenerated,\n\t    'T', 1,\n\t    'F', 0\n\t) AS o_PenguinTechGenerated,\n\tLCSurveyOrderedIndicator,\n\t-- *INF*: DECODE(LCSurveyOrderedIndicator, 'T', '1', 'F','0',null)\n\tDECODE(\n\t    LCSurveyOrderedIndicator,\n\t    'T', '1',\n\t    'F', '0',\n\t    null\n\t) AS o_LCSurveyOrderedIndicator,\n\tLCSurveyOrderedDate,\n\tExpiredReason AS i_ExpiredReason,\n\t-- *INF*: IIF(QuoteActionUserClassification = 'System' AND QuoteActionUserName = 'admin' AND QuoteActionStatus = 'Closed', '11', i_ExpiredReason)\n\tIFF(\n\t    QuoteActionUserClassification = 'System'\n\t    and QuoteActionUserName = 'admin'\n\t    and QuoteActionStatus = 'Closed',\n\t    '11',\n\t    i_ExpiredReason\n\t) AS v_ExpiredReason,\n\tv_ExpiredReason AS o_ExpiredReason,\n\tExpiredReasonDetails\n\tFROM SQ_WorkDCTPolicy\n\tLEFT JOIN LKP_CHECKPOLICYFORREISSUEORREWRITE LKP_CHECKPOLICYFORREISSUEORREWRITE_PolicyNumber_PolicyVersion\n\tON LKP_CHECKPOLICYFORREISSUEORREWRITE_PolicyNumber_PolicyVersion.PolicyNumber = PolicyNumber\n\tAND LKP_CHECKPOLICYFORREISSUEORREWRITE_PolicyNumber_PolicyVersion.PolicyVersion = PolicyVersion\n\n),\nWorkDCTPolicy AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTPolicy;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTPolicy\n\t(ExtractDate, SourceSystemId, SessionId, PolicyId, PartyId, Name, FirstName, LastName, MiddleName, EntityType, FederalEmployeeIDNumber, SICCode, NAICSCode, Program, PolicyGUId, CustomerNum, PolicyNumber, PolicyVersion, PolicyVersionFormatted, PolicyEffectiveDate, PolicyExpirationDate, LineOfBusiness, Term, PrimaryRatingState, Product, AuditPeriod, CancellationDate, TransactionDate, PreviousPolicyNumber, InceptionDate, TransactionType, Division, Terrorism, WBProduct, WBProductType, RiskGrade, BCCCode, WBPolicyId, AutomaticRenewalIndicator, Association, AssociationDiscountFactor, LineType, PolicyProgram, PriorPolicyKey, RenewalPolicySymbol, RenewalPolicyNumber, RenewalPolicyMod, PolicyStatus, TransactionCreatedDate, TransactionEffectiveDate, TransactionExpirationDate, TransactionCancellationDate, ReasonCode, ReasonCodeCaption, TransactionState, TransactionPurpose, SICCodeDesc, NAICSCodeDesc, Title, DoingBusinessAs, QuoteActionTimeStamp, QuoteActionStatus, QuoteActionUserClassification, QuoteActionUserName, AgencyCode, IsApplicant, RejectedReason, RejectedReasonDetails, ProducerName, PhoneNumber, CustomerCare, BusinessSegmentCode, TransactionCreatedUserId, EndorsedProcessedBy, EstimatedQuotePremium, IsRollover, PriorCarrierName, PirorCarrierNameOther, MailPolicyToInsured, DataFix, DataFixDate, DataFixType, PolicyIssueCodeDesc, PolicyIssueCodeOverride, DeclaredEvent, IssuedUWID, IssuedUnderwriter, ExternalQuoteSource, TurnstileGenerated, PenguinTechGenerated, LCSurveyOrderedIndicator, LCSurveyOrderedDate, ExpiredReason, ExpiredReasonDetails)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tSESSIONID, \n\tPOLICYID, \n\tPARTYID, \n\tNAME, \n\tFIRSTNAME, \n\tLASTNAME, \n\tMIDDLENAME, \n\tENTITYTYPE, \n\tFEDERALEMPLOYEEIDNUMBER, \n\tSICCODE, \n\tNAICSCODE, \n\tPROGRAM, \n\tPOLICYGUID, \n\tCUSTOMERNUM, \n\tPOLICYNUMBER, \n\tPOLICYVERSION, \n\tPOLICYVERSIONFORMATTED, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYEXPIRATIONDATE, \n\tLINEOFBUSINESS, \n\tTERM, \n\tPRIMARYRATINGSTATE, \n\tPRODUCT, \n\tAUDITPERIOD, \n\tCANCELLATIONDATE, \n\tTRANSACTIONDATE, \n\tPREVIOUSPOLICYNUMBER, \n\tINCEPTIONDATE, \n\tTRANSACTIONTYPE, \n\tDIVISION, \n\tTERRORISM, \n\tWBPRODUCT, \n\tWBPRODUCTTYPE, \n\tRISKGRADE, \n\tBCCCODE, \n\tWBPOLICYID, \n\to_AutomaticRenewalIndicator AS AUTOMATICRENEWALINDICATOR, \n\tASSOCIATION, \n\tASSOCIATIONDISCOUNTFACTOR, \n\tLINETYPE, \n\tPOLICYPROGRAM, \n\tPRIORPOLICYKEY, \n\tRENEWALPOLICYSYMBOL, \n\tRENEWALPOLICYNUMBER, \n\tRENEWALPOLICYMOD, \n\tPOLICYSTATUS, \n\tTRANSACTIONCREATEDDATE, \n\tTRANSACTIONEFFECTIVEDATE, \n\tTRANSACTIONEXPIRATIONDATE, \n\tTRANSACTIONCANCELLATIONDATE, \n\tREASONCODE, \n\tREASONCODECAPTION, \n\tTRANSACTIONSTATE, \n\tTRANSACTIONPURPOSE, \n\tSICCODEDESC, \n\tNAICSCODEDESC, \n\tTITLE, \n\tDOINGBUSINESSAS, \n\tQUOTEACTIONTIMESTAMP, \n\tQUOTEACTIONSTATUS, \n\tQUOTEACTIONUSERCLASSIFICATION, \n\tQUOTEACTIONUSERNAME, \n\tAGENCYCODE, \n\tISAPPLICANT, \n\tREJECTEDREASON, \n\tREJECTEDREASONDETAILS, \n\tPRODUCERNAME, \n\tPHONENUMBER, \n\tCUSTOMERCARE, \n\tBUSINESSSEGMENTCODE, \n\to_TransactionCreateduserId AS TRANSACTIONCREATEDUSERID, \n\to_EndorseProcessedby AS ENDORSEDPROCESSEDBY, \n\tESTIMATEDQUOTEPREMIUM, \n\to_IsRollover AS ISROLLOVER, \n\tPRIORCARRIERNAME, \n\tPIRORCARRIERNAMEOTHER, \n\to_MailPolicyToInsured AS MAILPOLICYTOINSURED, \n\tDATAFIX, \n\tDATAFIXDATE, \n\tDATAFIXTYPE, \n\tPOLICYISSUECODEDESC, \n\to_PolicyIssueCodeOverride AS POLICYISSUECODEOVERRIDE, \n\to_DeclaredEvent AS DECLAREDEVENT, \n\tISSUEDUWID, \n\tISSUEDUNDERWRITER, \n\tEXTERNALQUOTESOURCE, \n\to_TurnstileGenerated AS TURNSTILEGENERATED, \n\to_PenguinTechGenerated AS PENGUINTECHGENERATED, \n\to_LCSurveyOrderedIndicator AS LCSURVEYORDEREDINDICATOR, \n\tLCSURVEYORDEREDDATE, \n\to_ExpiredReason AS EXPIREDREASON, \n\tEXPIREDREASONDETAILS\n\tFROM EXP_Default\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}