{
    "name": "s_m_POL_DW_Update_CoverageDetailGeneralLiability_Detail_MonthlyLoad",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_Update_CoverageDetailGeneralLiability_Detai_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupClassificationGeneralLiability AS (\n\tSELECT\n\tlkp_result,\n\tClassCode,\n\tSublineCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT ClassCode as ClassCode,\r\n\t\tSublineCode as SublineCode,\r\n\t\tRatingStateCode as RatingStateCode,\r\n\t\tISOGeneralLiabilityClassSummary+'@1'\r\n\t\t       +ISOGeneralLiabilityClassGroupCode+'@2'\r\n\t\t\t     as lkp_result\r\n\t\t  FROM SupClassificationGeneralLiability\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,SublineCode,RatingStateCode ORDER BY lkp_result) = 1\n),\nSQ_CoverageDetailGeneralLiability_DCT AS (\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect distinct t.PremiumTransactionID AS PremiumTransactionID\r\n\t,RC.ClassCode AS ClassCode\r\n\t,RC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'DCT' and T.SourceSystemID='DCT' \r\n\tINNER JOIN RatingCoverage RC ON PT.RatingCoverageAKId = RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT'  AND PC.InsuranceLine in ('GeneralLiability','SBOPGeneralLiability')\r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='DCT'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=0 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect distinct t.PremiumTransactionID AS PremiumTransactionID\r\n\t,RC.ClassCode AS ClassCode\r\n\t,RC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'DCT' and T.SourceSystemID='DCT' \r\n\tINNER JOIN RatingCoverage RC ON PT.RatingCoverageAKId = RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT'  AND PC.InsuranceLine in ('GeneralLiability','SBOPGeneralLiability')\r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='DCT'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=1  \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect distinct t.PremiumTransactionID AS PremiumTransactionID\r\n\t,RC.ClassCode AS ClassCode\r\n\t,RC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'DCT' and T.SourceSystemID='DCT' \r\n\tINNER JOIN RatingCoverage RC ON PT.RatingCoverageAKId = RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT'  AND PC.InsuranceLine in ('GeneralLiability','SBOPGeneralLiability')\r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='DCT'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=2 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect distinct t.PremiumTransactionID AS PremiumTransactionID\r\n\t,RC.ClassCode AS ClassCode\r\n\t,RC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'DCT' and T.SourceSystemID='DCT' \r\n\tINNER JOIN RatingCoverage RC ON PT.RatingCoverageAKId = RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT'  AND PC.InsuranceLine in ('GeneralLiability','SBOPGeneralLiability')\r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='DCT'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=3 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nSQ_CoverageDetailGeneralLiability_PMS AS (\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect t.PremiumTransactionID AS PremiumTransactionID\r\n\t,SC.ClassCode AS ClassCode\r\n\t,SC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,SC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'PMS' and T.SourceSystemID='PMS'\r\n\tJOIN StatisticalCoverage SC ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID  AND SC.SourceSystemID = 'PMS' \r\n\tJOIN PolicyCoverage PC ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'PMS' \r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='PMS'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=0\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\t--union all\r\n\t--select t.PremiumTransactionID AS PremiumTransactionID\r\n\t--,RC.ClassCode AS ClassCode\r\n\t--,RC.SublineCode AS SublineCode\r\n\t--,rl.StateProvinceCode as StateCode\r\n\t--,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\t--from PremiumTransaction PT\r\n\t--inner join CoverageDetailGeneralLiability t\r\n\t--on t.PremiumTransactionID=PT.PremiumTransactionID\r\n\t--JOIN RatingCoverage RC\r\n\t--ON PT.RatingCoverageAKId = RC.RatingCoverageAKId AND PT.SourceSystemID = 'DCT' AND RC.SourceSystemID = 'DCT'\r\n\t--and PT.EffectiveDate=RC.EffectiveDate\r\n\t--JOIN PolicyCoverage PC\r\n\t--ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT' \r\n\t--inner join RiskLocation RL \r\n\t--on RL.RiskLocationAKID = PC.RiskLocationAKID\r\n\t--@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect t.PremiumTransactionID AS PremiumTransactionID\r\n\t,SC.ClassCode AS ClassCode\r\n\t,SC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,SC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'PMS' and T.SourceSystemID='PMS'\r\n\tJOIN StatisticalCoverage SC ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID  AND SC.SourceSystemID = 'PMS' \r\n\tJOIN PolicyCoverage PC ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'PMS' \r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='PMS'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=1\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\t--union all\r\n\t--select t.PremiumTransactionID AS PremiumTransactionID\r\n\t--,RC.ClassCode AS ClassCode\r\n\t--,RC.SublineCode AS SublineCode\r\n\t--,rl.StateProvinceCode as StateCode\r\n\t--,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\t--from PremiumTransaction PT\r\n\t--inner join CoverageDetailGeneralLiability t\r\n\t--on t.PremiumTransactionID=PT.PremiumTransactionID\r\n\t--JOIN RatingCoverage RC\r\n\t--ON PT.RatingCoverageAKId = RC.RatingCoverageAKId AND PT.SourceSystemID = 'DCT' AND RC.SourceSystemID = 'DCT'\r\n\t--and PT.EffectiveDate=RC.EffectiveDate\r\n\t--JOIN PolicyCoverage PC\r\n\t--ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT' \r\n\t--inner join RiskLocation RL \r\n\t--on RL.RiskLocationAKID = PC.RiskLocationAKID\r\n\t--@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect t.PremiumTransactionID AS PremiumTransactionID\r\n\t,SC.ClassCode AS ClassCode\r\n\t,SC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,SC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'PMS' and T.SourceSystemID='PMS'\r\n\tJOIN StatisticalCoverage SC ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID  AND SC.SourceSystemID = 'PMS' \r\n\tJOIN PolicyCoverage PC ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'PMS' \r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='PMS'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=2\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\t--union all\r\n\t--select t.PremiumTransactionID AS PremiumTransactionID\r\n\t--,RC.ClassCode AS ClassCode\r\n\t--,RC.SublineCode AS SublineCode\r\n\t--,rl.StateProvinceCode as StateCode\r\n\t--,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\t--from PremiumTransaction PT\r\n\t--inner join CoverageDetailGeneralLiability t\r\n\t--on t.PremiumTransactionID=PT.PremiumTransactionID\r\n\t--JOIN RatingCoverage RC\r\n\t--ON PT.RatingCoverageAKId = RC.RatingCoverageAKId AND PT.SourceSystemID = 'DCT' AND RC.SourceSystemID = 'DCT'\r\n\t--and PT.EffectiveDate=RC.EffectiveDate\r\n\t--JOIN PolicyCoverage PC\r\n\t--ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT' \r\n\t--inner join RiskLocation RL \r\n\t--on RL.RiskLocationAKID = PC.RiskLocationAKID\r\n\t--@{pipeline().parameters.WHERE_CLAUSE}\n\t\n\tUNION ALL\n\tDECLARE @Date1 DATE = DATEADD(D, -1, DATEADD(M,DATEDIFF(M,0,GETDATE())@{pipeline().parameters.NO_MONTHS},0)) \r\n\t\r\n\tselect t.PremiumTransactionID AS PremiumTransactionID\r\n\t,SC.ClassCode AS ClassCode\r\n\t,SC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,SC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom PremiumTransaction PT\r\n\tinner join CoverageDetailGeneralLiability t on t.PremiumTransactionID=PT.PremiumTransactionID AND PT.SourceSystemID = 'PMS' and T.SourceSystemID='PMS'\r\n\tJOIN StatisticalCoverage SC ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID  AND SC.SourceSystemID = 'PMS' \r\n\tJOIN PolicyCoverage PC ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'PMS' \r\n\tinner join RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID and RL.SourceSystemID='PMS'\r\n\twhere @{pipeline().parameters.PCOLUMN}%@{pipeline().parameters.NUM_OF_PARTITIONS}=3\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\t--union all\r\n\t--select t.PremiumTransactionID AS PremiumTransactionID\r\n\t--,RC.ClassCode AS ClassCode\r\n\t--,RC.SublineCode AS SublineCode\r\n\t--,rl.StateProvinceCode as StateCode\r\n\t--,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\t--from PremiumTransaction PT\r\n\t--inner join CoverageDetailGeneralLiability t\r\n\t--on t.PremiumTransactionID=PT.PremiumTransactionID\r\n\t--JOIN RatingCoverage RC\r\n\t--ON PT.RatingCoverageAKId = RC.RatingCoverageAKId AND PT.SourceSystemID = 'DCT' AND RC.SourceSystemID = 'DCT'\r\n\t--and PT.EffectiveDate=RC.EffectiveDate\r\n\t--JOIN PolicyCoverage PC\r\n\t--ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'DCT' \r\n\t--inner join RiskLocation RL \r\n\t--on RL.RiskLocationAKID = PC.RiskLocationAKID\r\n\t--@{pipeline().parameters.WHERE_CLAUSE}\n),\nUnion_DCT_PMS AS (\n\tSELECT PremiumTransactionID, ClassCode, SublineCode, StateCode, ClassCodeOrganizationCode\n\tFROM SQ_CoverageDetailGeneralLiability_DCT\n\tUNION\n\tSELECT PremiumTransactionID, ClassCode, SublineCode, StateCode, ClassCodeOrganizationCode\n\tFROM SQ_CoverageDetailGeneralLiability_PMS\n),\nEXP_MetaData AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tClassCode AS i_ClassCode,\n\tSublineCode AS i_SublineCode,\n\tStateCode AS i_RatingStateCode,\n\tClassCodeOrganizationCode AS i_OriginatingOrganizationCode,\n\t-- *INF*: DECODE(true,\r\n\t-- NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode)),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode),\r\n\t-- NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99')),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99'),\r\n\t-- 'N/A')\n\tDECODE(\n\t    true,\n\t    LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result,\n\t    LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result,\n\t    'N/A'\n\t) AS v_lkp_result,\n\t-- *INF*: SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1)\n\tSUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1') - 1) AS v_ClassSummary,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@1') + 2, REGEXP_INSTR(v_lkp_result, '@2') - REGEXP_INSTR(v_lkp_result, '@1') - 2) AS v_ClassGroupCode,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: IIF(length(v_ClassSummary)=0,'N/A',v_ClassSummary)\n\tIFF(length(v_ClassSummary) = 0, 'N/A', v_ClassSummary) AS o_ISOGeneralLiabilityClassSummary,\n\t-- *INF*: IIF(length(v_ClassGroupCode)=0,'N/A',v_ClassGroupCode)\n\tIFF(length(v_ClassGroupCode) = 0, 'N/A', v_ClassGroupCode) AS o_ISOGeneralLiabilityClassGroupCode\n\tFROM Union_DCT_PMS\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.RatingStateCode = i_RatingStateCode\n\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.RatingStateCode = '99'\n\n),\nUPD_PMS AS (\n\tSELECT\n\to_PremiumTransactionID, \n\to_ISOGeneralLiabilityClassSummary, \n\to_ISOGeneralLiabilityClassGroupCode\n\tFROM EXP_MetaData\n),\nCoverageDetailGeneralLiability1 AS (\n\tMERGE INTO CoverageDetailGeneralLiability AS T\n\tUSING UPD_PMS AS S\n\tON T.PremiumTransactionID = S.o_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ISOGeneralLiabilityClassSummary = S.o_ISOGeneralLiabilityClassSummary, T.ISOGeneralLiabilityClassGroupCode = S.o_ISOGeneralLiabilityClassGroupCode\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NO_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PCOLUMN": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUM_OF_PARTITIONS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}