{
    "name": "s_m_FEED_Load_WCSTAT_WorkWCSTATPremium_DCTPassThrough",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WCSTAT_WorkWCSTATPremium_DCTPassThrough",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_PremiumTransaction_pol_ak_id AS (\n\tSELECT\n\tpol_ak_id\n\tFROM (\n\t\tSELECT DISTINCT  P.pol_ak_id AS pol_ak_id\r\n\t\t   from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton RC.RatingCoverageAKID=PT.RatingCoverageAKId\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate and PT.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\tand PC.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tand RL.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\t\ton P.pol_ak_id=RL.PolicyAKID \r\n\t\tand P.crrnt_snpsht_flag=1 \r\n\t\t\r\n\t\twhere RC.SourceSystemID='DCT' and PC.TypeBureauCode in ('WC','WP','WorkersCompensation')  and PT.PremiumType='D'\r\n\t\tand PT.ReasonAmendedCode NOT IN ('CWO','Claw Back')\r\n\t\tand DATEDIFF(MM,P.pol_eff_date, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0) )  > 18\r\n\t\tand PT.PremiumTransactionBookedDate>=DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0)\r\n\t\tand PT.PremiumTransactionBookedDate<DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id ORDER BY pol_ak_id) = 1\n),\nSQ_Premium_mnsc AS (\n\tDECLARE @startdate as datetime, \r\n\t        @enddate as datetime\r\n\t\r\n\tSET @startdate = DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) +@{pipeline().parameters.NUM_OF_MONTHS}+1-18, 0) \r\n\tSET @enddate =  DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\r\n\t\r\n\t\r\n\t--DCT MN surcharge\r\n\tselect \r\n\t'DCT PT' SourceSystem\r\n\t,case when mnsc.PremiumTransactionId is null then -1 else mnsc.PremiumTransactionId end as PremiumTransactionId\r\n\t,case when mnsc.PassThroughChargeTransactionBookedDate is null then mnsc.pol_eff_date else mnsc.PassThroughChargeTransactionBookedDate end as PremiumTransactionBookedDate\r\n\t,mnsc.StateRatingEffectiveDate\r\n\t,mnsc.WCRetrospectiveRatingIndicator\r\n\t,mnsc.ExperienceModificationFactor\r\n\t,mnsc.ExperienceModificationEffectiveDate\r\n\t,case when mnsc.PassThroughChargeTransactionAmount is null then 0 else mnsc.PassThroughChargeTransactionAmount end as PremiumTransactionAmount\r\n\t,mnsc.BaseRate\r\n\t,mnsc.TypeBureauCode\r\n\t,mnsc.pol_sym\r\n\t,mnsc.pol_num\r\n\t,mnsc.pol_mod\r\n\t,mnsc.pol_key\r\n\t,mnsc.CoverageType\r\n\t,mnsc.PremiumTransactionCode\r\n\t,mnsc.CoverageGUID\r\n\t,mnsc.RatingCoverageAKID\r\n\t, mnsc.Period_start_date\r\n\t, mnsc.Period_end_date\r\n\t, mnsc.AnyARDIndicator\r\n\t , mnsc.ExperienceRated\r\n\t , mnsc.TermType\r\n\t,mnsc.StateProvinceCode\r\n\t,mnsc.pol_eff_date\r\n\t,mnsc.pol_exp_date\r\n\t,mnsc.pol_cancellation_date\r\n\t,mnsc.pol_cancellation_ind\r\n\t,mnsc.InterstateRiskId\r\n\t,mnsc.pol_id\r\n\t,mnsc.fed_tax_id\r\n\t,mnsc.pol_term\r\n\t,mnsc.pol_ak_id\r\n\t,mnsc.InsuranceSegmentAbbreviation\r\n\t,mnsc.cust_role\r\n\t,mnsc.name\r\n\t,mnsc.addr_line_1\r\n\t,mnsc.city_name\r\n\t,mnsc.state_prov_code\r\n\t,mnsc.zip_postal_code\r\n\t,mnsc.ClassCode\r\n\t,mnsc.WrittenExposure\r\n\t,mnsc.DeductibleAmount\r\n\t,mnsc.InsuranceLine\r\n\t--,SUM(mnsc.PassThroughChargeTransactionAmount) OVER (PARTITION BY mnsc.pol_key) as PolicyPremiumTotal\r\n\t,SUM(0)  OVER (PARTITION BY mnsc.pol_key,mnsc.StateProvinceCode) as ManualPremiumInd\r\n\t,SUM(0) OVER (PARTITION BY mnsc.pol_key,mnsc.StateProvinceCode) as PolicyStateManualPremiumTotal\r\n\t,mnsc.BalMinPremiumTotal\r\n\t,mnsc.ReasonAmendedCode\r\n\t,mnsc.StrategicProfitCenterAbbreviation\r\n\t,mnsc.pol_status_code\r\n\t--,mnsc.PremiumTransactionEnteredDate\r\n\t,case when PremiumTransactionEnteredDate is null then '' else PremiumTransactionEnteredDate end\r\n\t,mnsc.OffsetOnsetCode\r\n\tfrom  \r\n\t(select \r\n\tdistinct\r\n\tpt.PassThroughChargeTransactionID as PremiumTransactionId\r\n\t,pt.PassThroughChargeTransactionBookedDate\r\n\t,'01-01-1800 00:00:00' as StateRatingEffectiveDate\r\n\t,case when RPDT.RatingPlanCode='2' then '1' else '0' end as WCRetrospectiveRatingIndicator\r\n\t,0 as ExperienceModificationFactor\r\n\t,'12-31-2100 00:00:00' as ExperienceModificationEffectiveDate\r\n\t,pt.PassThroughChargeTransactionAmount\r\n\t,0 as BaseRate\r\n\t,PolicyCoverage.TypeBureauCode\r\n\t,'' as pol_sym\r\n\t,policy.pol_num\r\n\t,policy.pol_mod\r\n\t,'N/A' AS CoverageType\r\n\t,'N/A' AS PremiumTransactionCode\r\n\t,'N/A' AS CoverageGUID\r\n\t,  -1 AS  RatingCoverageAKID  \r\n\t  ,'1800-01-01 00:00:00.000' AS  Period_start_date\r\n\t,'1800-01-01 00:00:00.000' AS Period_end_date\r\n\t,'' AS   AnyARDIndicator\r\n\t, '' AS ExperienceRated\r\n\t,'N/A' AS TermType \r\n\t,RiskLocation.StateProvinceCode\r\n\t,policy.pol_eff_date\r\n\t,policy.pol_exp_date\r\n\t,policy.pol_cancellation_date\r\n\t,policy.pol_cancellation_ind\r\n\t,PolicyCoverage.InterstateRiskId\r\n\t,policy.pol_id\r\n\t,contract_customer.fed_tax_id\r\n\t,policy.pol_term\r\n\t,policy.pol_ak_id\r\n\t,InsuranceSegment.InsuranceSegmentAbbreviation\r\n\t,contract_customer.cust_role\r\n\t,contract_customer.name\r\n\t,contract_customer_address.addr_line_1\r\n\t,contract_customer_address.city_name\r\n\t,contract_customer_address.state_prov_code\r\n\t,contract_customer_address.zip_postal_code\r\n\t,CASE \r\n\tWHEN ISNUMERIC (isnull(RatingCoverage.ClassCode,'XXXX')) = 1\r\n\tTHEN cast(RatingCoverage.ClassCode as varchar)\r\n\tWHEN RiskLocation.StateProvinceCode = '22'\r\n\tTHEN '0174'\r\n\tELSE '0000'\r\n\tEND as ClassCode\r\n\t,0 as WrittenExposure\r\n\t,0 as DeductibleAmount\r\n\t,PolicyCoverage.InsuranceLine\r\n\t,99999999 as BalMinPremiumTotal\r\n\t,policy.pol_key\r\n\t,pt.ReasonAmendedCode\r\n\t,StrategicProfitCenter.StrategicProfitCenterAbbreviation\r\n\t,policy.pol_status_code\r\n\t,pt.PassThroughChargeTransactionEnteredDate as PremiumTransactionEnteredDate\r\n\t,pt.OffsetOnsetCode\r\n\t\r\n\tFROM       dbo.passthroughchargetransaction pt\r\n\t\r\n\tINNER JOIN dbo.policycoverage \r\n\t\t\tON         pt.policycoverageakid = policycoverage.policycoverageakid\r\n\t\t\tAND        pt.currentsnapshotflag = 1 \r\n\t\t\tAND        pt.sourcesystemid = 'DCT' \r\n\t\t\tAND        policycoverage.typebureaucode IN ('WC','WP','WorkersCompensation') \r\n\t\r\n\tINNER JOIN dbo.suppassthroughchargetype spc \r\n\t\t\tON         pt.suppassthroughchargetypeid = spc.suppassthroughchargetypeid \r\n\t\t\tAND        spc.passthroughchargetype IN ('MN Second Injury Fund', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'MN Special Compensation Fund Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'MT WC Regulatory Assessment Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'MT Subsequent Injury Fund', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'MT Occupational Safety and Health Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'MT Stay At Work/Return To Work Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'PA Employer Assessment Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'NJ Second Injury Fund Surcharge', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'NJ Uninsured Employers Fund', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'NY State Assessment', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t 'NY WC Security Fund Assessment')--,'IN Second Injury Fund') \r\n\t\r\n\tINNER JOIN dbo.risklocation \r\n\t\t\tON         risklocation.risklocationakid=policycoverage.risklocationakid \r\n\t\t\tAND        policycoverage.currentsnapshotflag = 1 \r\n\t\t\tAND        risklocation.currentsnapshotflag = 1 \r\n\t\r\n\tINNER JOIN v2.policy \r\n\t\t\tON         policy.pol_ak_id=risklocation.policyakid \r\n\t\t\tAND        risklocation.currentsnapshotflag = 1 \r\n\t\t\tAND        policy.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.strategicprofitcenter \r\n\t\t\tON         policy.strategicprofitcenterakid=strategicprofitcenter.strategicprofitcenterakid \r\n\t\t\tAND        strategicprofitcenter.currentsnapshotflag=1 \r\n\t\r\n\tINNER JOIN dbo.contract_customer \r\n\t\t\tON         contract_customer.contract_cust_ak_id = policy.contract_cust_ak_id \r\n\t\t\tAND        contract_customer.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.contract_customer_address \r\n\t\t\tON         contract_customer_address.contract_cust_ak_id = contract_customer.contract_cust_ak_id\r\n\t\t\tAND        contract_customer_address.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.insurancesegment -- DOES HAVING AN INNER JOIN CHANGE OUTPUT?\r\n\t\t\tON         insurancesegment.insurancesegmentakid = policy.insurancesegmentakid \r\n\t\t\tAND        insurancesegment.currentsnapshotflag = 1 \r\n\t\r\n\tLEFT JOIN  dbo.ratingplan RPDT \r\n\t\t\tON         policycoverage.ratingplanakid=RPDT.ratingplanakid \r\n\t\t\tAND        RPDT.currentsnapshotflag=1 \r\n\t\r\n\tLEFT JOIN  dbo.ratingcoverage \r\n\t\t\tON         pt.ratingcoverageakid = ratingcoverage.ratingcoverageakid \r\n\t\t\tAND        pt.passthroughchargetransactionentereddate = ratingcoverage.effectivedate \r\n\t\r\n\twhere  policy.source_sys_id='DCT' \r\n\tand policy.crrnt_snpsht_flag = 1 \r\n\tand policy.crrnt_snpsht_flag=1 \r\n\tand policy.pol_eff_date < @startdate\r\n\tand pt.PassThroughChargeTransactionBookedDate< @enddate\r\n\t@{pipeline().parameters.PREMIUM_WHERE_CLAUSE_PTC}\r\n\t) mnsc\n),\nEXP_Premium_mnsc AS (\n\tSELECT\n\tSourceSystem,\n\tPremiumMasterCalculationID,\n\tPremiumMasterRunDate,\n\tStateRatingEffectiveDate,\n\tWCRetrospectiveRatingIndicator,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPremiumMasterPremium,\n\tBaseRate,\n\tTypeBureauCode,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tCoverageType,\n\tPremiumTransactionCode,\n\tCoverageGUID,\n\tRatingCoverageAKID,\n\tPeriod_start_date,\n\tPeriod_end_date,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tTermType,\n\tStateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\tInterstateRiskId,\n\tpol_id,\n\tfed_tax_id,\n\tpol_term,\n\tpol_ak_id,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tClassCode,\n\tWrittenExposure,\n\tDeductibleAmount,\n\tInsuranceLine,\n\tManualPremiumInd,\n\tPolicyStateManualPremiumTotal,\n\tBalMinPremiumTotal,\n\tReasonAmendedCode,\n\tStrategicProfitCenterAbbreviation,\n\tpol_status_code,\n\tPremiumTransactionEnteredDate,\n\tOffsetOnsetCode\n\tFROM SQ_Premium_mnsc\n),\nSQ_Premium_INSIF AS (\n\tDECLARE @startdate as datetime, \r\n\t        @enddate as datetime\r\n\t\r\n\tSET @startdate = DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) +@{pipeline().parameters.NUM_OF_MONTHS}+1-18, 0) \r\n\tSET @enddate =  DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\r\n\t\r\n\t\r\n\t--DCT IN Second Injury Fund\r\n\tselect \r\n\t'DCT PT' SourceSystem\r\n\t,case when INSIF.PremiumTransactionId is null then -1 else INSIF.PremiumTransactionId end as PremiumTransactionId\r\n\t,case when INSIF.PassThroughChargeTransactionBookedDate is null then INSIF.pol_eff_date else INSIF.PassThroughChargeTransactionBookedDate end as PremiumTransactionBookedDate\r\n\t,INSIF.StateRatingEffectiveDate\r\n\t,INSIF.WCRetrospectiveRatingIndicator\r\n\t,INSIF.ExperienceModificationFactor\r\n\t,INSIF.ExperienceModificationEffectiveDate\r\n\t,case when INSIF.PassThroughChargeTransactionAmount is null then 0 else INSIF.PassThroughChargeTransactionAmount end as PremiumTransactionAmount\r\n\t,INSIF.BaseRate\r\n\t,INSIF.TypeBureauCode\r\n\t,INSIF.pol_sym\r\n\t,INSIF.pol_num\r\n\t,INSIF.pol_mod\r\n\t,INSIF.pol_key\r\n\t,INSIF.CoverageType\r\n\t,INSIF.PremiumTransactionCode\r\n\t,INSIF.CoverageGUID\r\n\t,INSIF.RatingCoverageAKID\r\n\t, INSIF.Period_start_date\r\n\t, INSIF.Period_end_date\r\n\t, INSIF.AnyARDIndicator\r\n\t , INSIF.ExperienceRated\r\n\t , INSIF.TermType\r\n\t,INSIF.StateProvinceCode\r\n\t,INSIF.pol_eff_date\r\n\t,INSIF.pol_exp_date\r\n\t,INSIF.pol_cancellation_date\r\n\t,INSIF.pol_cancellation_ind\r\n\t,INSIF.InterstateRiskId\r\n\t,INSIF.pol_id\r\n\t,INSIF.fed_tax_id\r\n\t,INSIF.pol_term\r\n\t,INSIF.pol_ak_id\r\n\t,INSIF.InsuranceSegmentAbbreviation\r\n\t,INSIF.cust_role\r\n\t,INSIF.name\r\n\t,INSIF.addr_line_1\r\n\t,INSIF.city_name\r\n\t,INSIF.state_prov_code\r\n\t,INSIF.zip_postal_code\r\n\t,INSIF.ClassCode\r\n\t,INSIF.WrittenExposure\r\n\t,INSIF.DeductibleAmount\r\n\t,INSIF.InsuranceLine\r\n\t--,SUM(INSIF.PassThroughChargeTransactionAmount) OVER (PARTITION BY INSIF.pol_key) as PolicyPremiumTotal\r\n\t,SUM(0)  OVER (PARTITION BY INSIF.pol_key,INSIF.StateProvinceCode) as ManualPremiumInd\r\n\t,SUM(0) OVER (PARTITION BY INSIF.pol_key,INSIF.StateProvinceCode) as PolicyStateManualPremiumTotal\r\n\t,INSIF.BalMinPremiumTotal\r\n\t,INSIF.ReasonAmendedCode\r\n\t,INSIF.StrategicProfitCenterAbbreviation\r\n\t,INSIF.pol_status_code\r\n\t--,INSIF.PremiumTransactionEnteredDate\r\n\t,case when PremiumTransactionEnteredDate is null then '' else PremiumTransactionEnteredDate end\r\n\t,INSIF.OffsetOnsetCode\r\n\tfrom  \r\n\t(\r\n\tselect \r\n\tdistinct\r\n\tpt.PassThroughChargeTransactionID as PremiumTransactionId\r\n\t,pt.PassThroughChargeTransactionBookedDate\r\n\t,'01-01-1800 00:00:00' as StateRatingEffectiveDate\r\n\t,case when RPDT.RatingPlanCode='2' then '1' else '0' end as WCRetrospectiveRatingIndicator\r\n\t,0 as ExperienceModificationFactor\r\n\t,'12-31-2100 00:00:00' as ExperienceModificationEffectiveDate\r\n\t,pt.PassThroughChargeTransactionAmount\r\n\t,0 as BaseRate\r\n\t,PolicyCoverage.TypeBureauCode\r\n\t,'' as pol_sym\r\n\t,policy.pol_num\r\n\t,policy.pol_mod\r\n\t,'N/A' AS CoverageType\r\n\t,'N/A' AS PremiumTransactionCode\r\n\t,'N/A' AS CoverageGUID\r\n\t,  -1 AS  RatingCoverageAKID  \r\n\t  ,'1800-01-01 00:00:00.000' AS  Period_start_date\r\n\t,'1800-01-01 00:00:00.000' AS Period_end_date\r\n\t,'' AS   AnyARDIndicator\r\n\t, '' AS ExperienceRated\r\n\t,'N/A' AS TermType \r\n\t,RiskLocation.StateProvinceCode\r\n\t,policy.pol_eff_date\r\n\t,policy.pol_exp_date\r\n\t,policy.pol_cancellation_date\r\n\t,policy.pol_cancellation_ind\r\n\t,PolicyCoverage.InterstateRiskId\r\n\t,policy.pol_id\r\n\t,contract_customer.fed_tax_id\r\n\t,policy.pol_term\r\n\t,policy.pol_ak_id\r\n\t,InsuranceSegment.InsuranceSegmentAbbreviation\r\n\t,contract_customer.cust_role\r\n\t,contract_customer.name\r\n\t,contract_customer_address.addr_line_1\r\n\t,contract_customer_address.city_name\r\n\t,contract_customer_address.state_prov_code\r\n\t,contract_customer_address.zip_postal_code\r\n\t,CASE \r\n\tWHEN ISNUMERIC (isnull(RatingCoverage.ClassCode,'XXXX')) = 1\r\n\tTHEN cast(RatingCoverage.ClassCode as varchar)\r\n\tELSE '0935'\r\n\tEND as ClassCode\r\n\t,0 as WrittenExposure\r\n\t,0 as DeductibleAmount\r\n\t,PolicyCoverage.InsuranceLine\r\n\t,99999999 as BalMinPremiumTotal\r\n\t,policy.pol_key\r\n\t,pt.ReasonAmendedCode\r\n\t,StrategicProfitCenter.StrategicProfitCenterAbbreviation\r\n\t,policy.pol_status_code\r\n\t,pt.PassThroughChargeTransactionEnteredDate as PremiumTransactionEnteredDate\r\n\t,pt.OffsetOnsetCode\r\n\t\r\n\tFROM       dbo.passthroughchargetransaction pt\r\n\t\r\n\tINNER JOIN dbo.policycoverage \r\n\t\t\tON         pt.policycoverageakid = policycoverage.policycoverageakid\r\n\t\t\tAND        pt.currentsnapshotflag = 1 \r\n\t\t\tAND        pt.sourcesystemid = 'DCT' \r\n\t\t\tAND        policycoverage.typebureaucode IN ('WC','WP','WorkersCompensation') \r\n\t\r\n\tINNER JOIN dbo.suppassthroughchargetype spc \r\n\t\t\tON         pt.suppassthroughchargetypeid = spc.suppassthroughchargetypeid \r\n\t\t\tAND        spc.passthroughchargetype IN ('IN Second Injury Fund')  \r\n\t\r\n\tINNER JOIN dbo.risklocation \r\n\t\t\tON         risklocation.risklocationakid=policycoverage.risklocationakid \r\n\t\t\tAND        policycoverage.currentsnapshotflag = 1 \r\n\t\t\tAND        risklocation.currentsnapshotflag = 1 \r\n\t\r\n\tINNER JOIN v2.policy \r\n\t\t\tON         policy.pol_ak_id=risklocation.policyakid \r\n\t\t\tAND        risklocation.currentsnapshotflag = 1 \r\n\t\t\tAND        policy.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.strategicprofitcenter \r\n\t\t\tON         policy.strategicprofitcenterakid=strategicprofitcenter.strategicprofitcenterakid \r\n\t\t\tAND        strategicprofitcenter.currentsnapshotflag=1 \r\n\t\r\n\tINNER JOIN dbo.contract_customer \r\n\t\t\tON         contract_customer.contract_cust_ak_id = policy.contract_cust_ak_id \r\n\t\t\tAND        contract_customer.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.contract_customer_address \r\n\t\t\tON         contract_customer_address.contract_cust_ak_id = contract_customer.contract_cust_ak_id\r\n\t\t\tAND        contract_customer_address.crrnt_snpsht_flag = 1 \r\n\t\r\n\tINNER JOIN dbo.insurancesegment -- DOES HAVING AN INNER JOIN CHANGE OUTPUT?\r\n\t\t\tON         insurancesegment.insurancesegmentakid = policy.insurancesegmentakid \r\n\t\t\tAND        insurancesegment.currentsnapshotflag = 1 \r\n\t\r\n\tLEFT JOIN  dbo.ratingplan RPDT \r\n\t\t\tON         policycoverage.ratingplanakid=RPDT.ratingplanakid \r\n\t\t\tAND        RPDT.currentsnapshotflag=1 \r\n\t\r\n\tLEFT JOIN  dbo.ratingcoverage \r\n\t\t\tON         pt.ratingcoverageakid = ratingcoverage.ratingcoverageakid \r\n\t\t\tAND        pt.passthroughchargetransactionentereddate = ratingcoverage.effectivedate \r\n\t\r\n\twhere  policy.source_sys_id='DCT'\r\n\tand policy.crrnt_snpsht_flag = 1 and RiskLocation.StateProvinceCode = '13'\r\n\tand policy.crrnt_snpsht_flag=1 \r\n\tand policy.pol_eff_date < @startdate\r\n\tand pt.PassThroughChargeTransactionBookedDate< @enddate\r\n\t\r\n\t) INSIF\n),\nEXP_Premium_mnsc1 AS (\n\tSELECT\n\tSourceSystem,\n\tPremiumMasterCalculationID,\n\tPremiumMasterRunDate,\n\tStateRatingEffectiveDate,\n\tWCRetrospectiveRatingIndicator,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPremiumMasterPremium,\n\tBaseRate,\n\tTypeBureauCode,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tCoverageType,\n\tPremiumTransactionCode,\n\tCoverageGUID,\n\tRatingCoverageAKID,\n\tPeriod_start_date,\n\tPeriod_end_date,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tTermType,\n\tStateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\tInterstateRiskId,\n\tpol_id,\n\tfed_tax_id,\n\tpol_term,\n\tpol_ak_id,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tClassCode,\n\tWrittenExposure,\n\tDeductibleAmount,\n\tInsuranceLine,\n\tManualPremiumInd,\n\tPolicyStateManualPremiumTotal,\n\tBalMinPremiumTotal,\n\tReasonAmendedCode,\n\tStrategicProfitCenterAbbreviation,\n\tpol_status_code,\n\tPremiumTransactionEnteredDate,\n\tOffsetOnsetCode\n\tFROM SQ_Premium_INSIF\n),\nUnion_all AS (\n\tSELECT SourceSystem, PremiumMasterCalculationID, PremiumMasterRunDate, StateRatingEffectiveDate, WCRetrospectiveRatingIndicator, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PremiumMasterPremium, BaseRate, TypeBureauCode, pol_sym, pol_num, pol_mod, pol_key, CoverageType, PremiumTransactionCode, CoverageGUID, RatingCoverageAKID, Period_start_date, Period_end_date, AnyARDIndicator, ExperienceRated, TermType, StateProvinceCode, pol_eff_date, pol_exp_date, pol_cancellation_date, pol_cancellation_ind, InterstateRiskId, pol_id, fed_tax_id, pol_term, pol_ak_id, InsuranceSegmentAbbreviation, cust_role, name, addr_line_1, city_name, state_prov_code, zip_postal_code, ClassCode, WrittenExposure, DeductibleAmount, InsuranceLine, ManualPremiumInd, PolicyStateManualPremiumTotal, BalMinPremiumTotal, ReasonAmendedCode, StrategicProfitCenterAbbreviation, pol_status_code, PremiumTransactionEnteredDate, OffsetOnsetCode\n\tFROM EXP_Premium_mnsc\n\tUNION\n\tSELECT SourceSystem, PremiumMasterCalculationID, PremiumMasterRunDate, StateRatingEffectiveDate, WCRetrospectiveRatingIndicator, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PremiumMasterPremium, BaseRate, TypeBureauCode, pol_sym, pol_num, pol_mod, pol_key, CoverageType, PremiumTransactionCode, CoverageGUID, RatingCoverageAKID, Period_start_date, Period_end_date, AnyARDIndicator, ExperienceRated, TermType, StateProvinceCode, pol_eff_date, pol_exp_date, pol_cancellation_date, pol_cancellation_ind, InterstateRiskId, pol_id, fed_tax_id, pol_term, pol_ak_id, InsuranceSegmentAbbreviation, cust_role, name, addr_line_1, city_name, state_prov_code, zip_postal_code, ClassCode, WrittenExposure, DeductibleAmount, InsuranceLine, ManualPremiumInd, PolicyStateManualPremiumTotal, BalMinPremiumTotal, ReasonAmendedCode, StrategicProfitCenterAbbreviation, pol_status_code, PremiumTransactionEnteredDate, OffsetOnsetCode\n\tFROM EXP_Premium_mnsc1\n),\nEXP_identify_records_Wc_stat AS (\n\tSELECT\n\tSourceSystem,\n\tPremiumMasterCalculationID,\n\tPremiumMasterRunDate,\n\tStateRatingEffectiveDate,\n\tWCRetrospectiveRatingIndicator,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPremiumMasterPremium,\n\tBaseRate,\n\tTypeBureauCode,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tStateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\tInterstateRiskId,\n\tpol_id,\n\tfed_tax_id,\n\tpol_term,\n\tpol_ak_id,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tClassCode,\n\tWrittenExposure AS Exposure,\n\tDeductibleAmount,\n\tInsuranceLine,\n\t-- *INF*: :LKP.LKP_PREMIUMTRANSACTION_POL_AK_ID(pol_ak_id)\n\tLKP_PREMIUMTRANSACTION_POL_AK_ID_pol_ak_id.pol_ak_id AS lkp_pol_ak_id,\n\t-- *INF*: SET_DATE_PART(ADD_TO_DATE(TRUNC(SYSDATE),'MM',@{pipeline().parameters.NUM_OF_MONTHS}),'DD',1)\n\tDATEADD(DAY,1-DATE_PART(DAY,DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTHS},TRUNC(CURRENT_TIMESTAMP))),DATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTHS},TRUNC(CURRENT_TIMESTAMP))) AS v_ProcessRunDate,\n\t-- *INF*: SET_DATE_PART(pol_eff_date,'DD',1)\n\tDATEADD(DAY,1-DATE_PART(DAY,pol_eff_date),pol_eff_date) AS v_BeginingOfMonthForPolicyEffectiveDate,\n\t-- *INF*: LAST_DAY(pol_eff_date)\n\tLAST_DAY(pol_eff_date) AS v_EndOfMonthForPolicyEffectiveDate,\n\t-- *INF*: DATE_DIFF(v_ProcessRunDate,v_BeginingOfMonthForPolicyEffectiveDate,'MM')\n\tDATEDIFF(MONTH,v_ProcessRunDate,v_BeginingOfMonthForPolicyEffectiveDate) AS v_AgeOfPolicy,\n\t-- *INF*: IIF(v_AgeOfPolicy =18 OR NOT ISNULL(lkp_pol_ak_id),'VALID','INVALID')\r\n\t-- \r\n\t-- --IIF(v_AgeOfPolicy =18 OR (v_AgeOfPolicy > 18 and PremiumMasterRunDate>= v_ProcessRunDate),'VALID','INVALID')\n\tIFF(v_AgeOfPolicy = 18 OR lkp_pol_ak_id IS NOT NULL, 'VALID', 'INVALID') AS o_ValidRecordForWCSTat,\n\t-- *INF*: IIF(DATE_DIFF(v_ProcessRunDate,PremiumMasterRunDate,'MM')=0,1,0)\n\tIFF(DATEDIFF(MONTH,v_ProcessRunDate,PremiumMasterRunDate) = 0, 1, 0) AS o_RunMonthAuditTransFlag,\n\tv_AgeOfPolicy AS o_AgeOfPolicy,\n\tManualPremiumInd,\n\tPolicyStateManualPremiumTotal,\n\tBalMinPremiumTotal,\n\tReasonAmendedCode,\n\tStrategicProfitCenterAbbreviation,\n\tpol_status_code,\n\tPremiumTransactionEnteredDate,\n\tOffsetOnsetCode,\n\tpol_key,\n\tCoverageType,\n\tPremiumTransactionCode,\n\tCoverageGUID,\n\tRatingCoverageAKID,\n\tPeriod_start_date,\n\tPeriod_end_date,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tTermType,\n\t-- *INF*: IIF(CoverageType='ManualPremium',Period_start_date,pol_eff_date)\r\n\t-- \r\n\t-- --DECODE(True,NOT ISNULL(Period_start_date), Period_start_date, pol_eff_date)\n\tIFF(CoverageType = 'ManualPremium', Period_start_date, pol_eff_date) AS RateEffectiveDate\n\tFROM Union_all\n\tLEFT JOIN LKP_PREMIUMTRANSACTION_POL_AK_ID LKP_PREMIUMTRANSACTION_POL_AK_ID_pol_ak_id\n\tON LKP_PREMIUMTRANSACTION_POL_AK_ID_pol_ak_id.pol_ak_id = pol_ak_id\n\n),\nFIL_FIlterrecordsthatarenotvalid AS (\n\tSELECT\n\tSourceSystem, \n\tPremiumMasterCalculationID, \n\tPremiumMasterRunDate, \n\tStateRatingEffectiveDate, \n\tWCRetrospectiveRatingIndicator, \n\tExperienceModificationFactor, \n\tExperienceModificationEffectiveDate, \n\tPremiumMasterPremium, \n\tBaseRate, \n\tTypeBureauCode, \n\tpol_sym, \n\tpol_num, \n\tpol_mod, \n\tStateProvinceCode, \n\tpol_eff_date, \n\tpol_exp_date, \n\tpol_cancellation_date, \n\tpol_cancellation_ind, \n\tInterstateRiskId, \n\tpol_id, \n\tfed_tax_id, \n\tpol_term, \n\tpol_ak_id, \n\tInsuranceSegmentAbbreviation, \n\tcust_role, \n\tname, \n\taddr_line_1, \n\tcity_name, \n\tstate_prov_code, \n\tzip_postal_code, \n\tClassCode, \n\tExposure, \n\tDeductibleAmount, \n\tInsuranceLine, \n\to_ValidRecordForWCSTat, \n\to_RunMonthAuditTransFlag, \n\to_AgeOfPolicy, \n\tManualPremiumInd, \n\tPolicyStateManualPremiumTotal, \n\tBalMinPremiumTotal, \n\tRateEffectiveDate, \n\tReasonAmendedCode, \n\tStrategicProfitCenterAbbreviation, \n\tpol_status_code, \n\tPremiumTransactionEnteredDate, \n\tOffsetOnsetCode, \n\tpol_key, \n\tCoverageType, \n\tPremiumTransactionCode, \n\tCoverageGUID, \n\tRatingCoverageAKID, \n\tPeriod_start_date, \n\tPeriod_end_date, \n\tAnyARDIndicator, \n\tExperienceRated, \n\tTermType\n\tFROM EXP_identify_records_Wc_stat\n\tWHERE IIF(o_ValidRecordForWCSTat='VALID',TRUE,FALSE)\n),\nEXP_Target_Load AS (\n\tSELECT\n\tPremiumMasterCalculationID,\n\tPremiumMasterRunDate,\n\tStateRatingEffectiveDate,\n\tWCRetrospectiveRatingIndicator,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPremiumMasterPremium,\n\tBaseRate,\n\tTypeBureauCode,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tStateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\tInterstateRiskId,\n\tpol_id,\n\tfed_tax_id,\n\tpol_term,\n\tpol_ak_id,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tClassCode,\n\tExposure,\n\tDeductibleAmount,\n\tInsuranceLine,\n\to_ValidRecordForWCSTat,\n\to_RunMonthAuditTransFlag,\n\to_AgeOfPolicy,\n\tManualPremiumInd,\n\tPolicyStateManualPremiumTotal,\n\tBalMinPremiumTotal,\n\tRateEffectiveDate,\n\tSourceSystem,\n\tReasonAmendedCode,\n\tStrategicProfitCenterAbbreviation,\n\tpol_status_code,\n\tPremiumTransactionEnteredDate,\n\tOffsetOnsetCode,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tpol_key,\n\tCoverageType,\n\tPremiumTransactionCode,\n\tCoverageGUID,\n\tRatingCoverageAKID,\n\tPeriod_start_date,\n\tPeriod_end_date,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tTermType,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t0 AS o_PolicyPremiumTotal,\n\t-- *INF*: TO_DATE('1800-01-01', 'YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS PremiumTransactionEffectiveDate,\n\t'00' AS LossesSubjectToDeductibleCode,\n\t'00' AS BasisOfDeductibleCalculationCode\n\tFROM FIL_FIlterrecordsthatarenotvalid\n),\nWorkWCSTATPremium AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO WorkWCSTATPremium\n\t(AuditId, CreatedDate, ModifiedDate, SourceSystemId, PremiumMasterCalculationID, PremiumMasterRunDate, StateRatingEffectiveDate, WCRetrospectiveRatingIndicator, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PremiumMasterPremium, BaseRate, TypeBureauCode, PolicySymbol, PolicyNumber, PolicyModulus, StateProvinceCode, PolicyEffectiveDate, PolicyExpiryDate, PolicyCancellationDate, PolicyCancellationIndicator, InterstateRiskId, FederalTaxId, PolicyTerm, PolicyAKId, InsuranceSegmentAbbreviation, CustomerRole, Name, AddressLine1, CityName, StateProvCodeContractCustomerAddress, ZipPostalCode, ClassCode, Exposure, DeductibleAmount, InsuranceLine, BalanceMinimumPremiumTotal, RateEffectiveDate, ReasonAmendedCode, StrategicProfitCenterAbbreviation, PolicyStatusCode, PremiumTransactionEnteredDate, OffsetOnsetCode, PolicyKey, CoverageType, PremiumTransactionCode, CoverageGUID, RatingCoverageAKID, RunMonthAuditTransactionFlag, AgeOfPolicy, TermType, PeriodStartDate, PeriodEndDate, AnyARDIndicator, ExperienceRated, PremiumTransactionEffectiveDate, LossesSubjectToDeductibleCode, BasisOfDeductibleCalculationCode)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tSourceSystem AS SOURCESYSTEMID, \n\tPREMIUMMASTERCALCULATIONID, \n\tPREMIUMMASTERRUNDATE, \n\tSTATERATINGEFFECTIVEDATE, \n\tWCRETROSPECTIVERATINGINDICATOR, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tEXPERIENCEMODIFICATIONEFFECTIVEDATE, \n\tPREMIUMMASTERPREMIUM, \n\tBASERATE, \n\tTYPEBUREAUCODE, \n\tpol_sym AS POLICYSYMBOL, \n\tpol_num AS POLICYNUMBER, \n\tpol_mod AS POLICYMODULUS, \n\tSTATEPROVINCECODE, \n\tpol_eff_date AS POLICYEFFECTIVEDATE, \n\tpol_exp_date AS POLICYEXPIRYDATE, \n\tpol_cancellation_date AS POLICYCANCELLATIONDATE, \n\tpol_cancellation_ind AS POLICYCANCELLATIONINDICATOR, \n\tINTERSTATERISKID, \n\tfed_tax_id AS FEDERALTAXID, \n\tpol_term AS POLICYTERM, \n\tpol_ak_id AS POLICYAKID, \n\tINSURANCESEGMENTABBREVIATION, \n\tcust_role AS CUSTOMERROLE, \n\tname AS NAME, \n\taddr_line_1 AS ADDRESSLINE1, \n\tcity_name AS CITYNAME, \n\tstate_prov_code AS STATEPROVCODECONTRACTCUSTOMERADDRESS, \n\tzip_postal_code AS ZIPPOSTALCODE, \n\tCLASSCODE, \n\tEXPOSURE, \n\tDEDUCTIBLEAMOUNT, \n\tINSURANCELINE, \n\tBalMinPremiumTotal AS BALANCEMINIMUMPREMIUMTOTAL, \n\tRATEEFFECTIVEDATE, \n\tREASONAMENDEDCODE, \n\tSTRATEGICPROFITCENTERABBREVIATION, \n\tpol_status_code AS POLICYSTATUSCODE, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tOFFSETONSETCODE, \n\tpol_key AS POLICYKEY, \n\tCOVERAGETYPE, \n\tPREMIUMTRANSACTIONCODE, \n\tCOVERAGEGUID, \n\tRATINGCOVERAGEAKID, \n\to_RunMonthAuditTransFlag AS RUNMONTHAUDITTRANSACTIONFLAG, \n\to_AgeOfPolicy AS AGEOFPOLICY, \n\tTERMTYPE, \n\tPeriod_start_date AS PERIODSTARTDATE, \n\tPeriod_end_date AS PERIODENDDATE, \n\tANYARDINDICATOR, \n\tEXPERIENCERATED, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tLOSSESSUBJECTTODEDUCTIBLECODE, \n\tBASISOFDEDUCTIBLECALCULATIONCODE\n\tFROM EXP_Target_Load\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUM_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PREMIUM_WHERE_CLAUSE_PTC": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}