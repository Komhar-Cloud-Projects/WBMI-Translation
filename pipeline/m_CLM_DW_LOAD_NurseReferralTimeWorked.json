{
    "name": "m_CLM_DW_LOAD_NurseReferralTimeWorked",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseReferralTimeWorked",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_nurse_referral_time_worked_stage AS (\n\tSELECT\n\t\tNurseReferralTimeWorkedStageId,\n\t\tnurse_referral_id,\n\t\ttime_worked_seq,\n\t\tdate_worked,\n\t\ttime_worked_hours,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM nurse_referral_time_worked_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tnurse_referral_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(nurse_referral_id))), -1, \r\n\t--   nurse_referral_id)\n\tIFF(ltrim(rtrim(nurse_referral_id)) IS NULL, - 1, nurse_referral_id) AS o_nurse_referral_id,\n\ttime_worked_seq,\n\t-- *INF*: iif(isnull(ltrim(rtrim(time_worked_seq))), -1, time_worked_seq)\n\tIFF(ltrim(rtrim(time_worked_seq)) IS NULL, - 1, time_worked_seq) AS o_time_worked_seq,\n\tdate_worked,\n\t-- *INF*: iif(isnull(ltrim(rtrim(date_worked))), to_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), date_worked)\n\tIFF(ltrim(rtrim(date_worked)) IS NULL, to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), date_worked) AS o_date_worked,\n\ttime_worked_hours,\n\t-- *INF*: iif(isnull(ltrim(rtrim(time_worked_hours))), 0, time_worked_hours)\n\tIFF(ltrim(rtrim(time_worked_hours)) IS NULL, 0, time_worked_hours) AS o_time_worked_hours\n\tFROM SQ_nurse_referral_time_worked_stage\n),\nLKP_NurseReferral AS (\n\tSELECT\n\tNurseReferralAkId,\n\tnurse_referral_id\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseReferralAkId as NurseReferralAkId, \r\n\t\tN.nurse_referral_id as nurse_referral_id\r\n\t\t\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferral N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY nurse_referral_id ORDER BY NurseReferralAkId) = 1\n),\nEXP_Lkp_Default AS (\n\tSELECT\n\tNurseReferralAkId,\n\t-- *INF*: iif(isnull(NurseReferralAkId), -1, NurseReferralAkId)\n\tIFF(NurseReferralAkId IS NULL, - 1, NurseReferralAkId) AS o_NurseReferralAkId\n\tFROM LKP_NurseReferral\n),\nLKP_NurseReferralTimeWorked AS (\n\tSELECT\n\tNurseReferralTimeWorkedId,\n\tNurseReferralTimeWorkedAkId,\n\tNurseReferralAkId,\n\tTimeWorkedSequence,\n\tWorkedDate,\n\tTimeWorkedHours\n\tFROM (\n\t\tSELECT \r\n\t\tN.NurseReferralTimeWorkedId as NurseReferralTimeWorkedId, \r\n\t\tN.NurseReferralTimeWorkedAkId as NurseReferralTimeWorkedAkId, \r\n\t\tN.TimeWorkedSequence as TimeWorkedSequence, \r\n\t\tN.WorkedDate as WorkedDate, \r\n\t\tN.TimeWorkedHours as TimeWorkedHours, \r\n\t\tN.NurseReferralAkId as NurseReferralAkId\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferralTimeWorked N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseReferralAkId,TimeWorkedSequence ORDER BY NurseReferralTimeWorkedId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseReferralTimeWorked.NurseReferralTimeWorkedId AS Lkp_NurseReferralTimeWorkedId,\n\tLKP_NurseReferralTimeWorked.NurseReferralTimeWorkedAkId AS Lkp_NurseReferralTimeWorkedAkId,\n\tLKP_NurseReferralTimeWorked.NurseReferralAkId AS Lkp_NurseReferralAkId,\n\tLKP_NurseReferralTimeWorked.TimeWorkedSequence AS Lkp_TimeWorkedSequence,\n\tLKP_NurseReferralTimeWorked.WorkedDate AS Lkp_WorkedDate,\n\tLKP_NurseReferralTimeWorked.TimeWorkedHours AS Lkp_TimeWorkedHours,\n\t-- *INF*: iif(isnull(Lkp_NurseReferralTimeWorkedId), 'NEW',\r\n\t-- \r\n\t--   iif(  \r\n\t-- \r\n\t--  ltrim(rtrim(Lkp_NurseReferralAkId)) != ltrim(rtrim(NurseReferralAkId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_TimeWorkedSequence)) != ltrim(rtrim(TimeWorkedSequence))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_WorkedDate)) != ltrim(rtrim(WorkedDate))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_TimeWorkedHours)) != ltrim(rtrim(TimeWorkedHours)),\r\n\t-- \r\n\t-- --or\r\n\t-- \r\n\t-- --   ltrim(rtrim(Lkp_NurseReferralTimeWorkedAkId)) != ltrim(rtrim(NurseReferralTimeWorkedAkId))\r\n\t-- \r\n\t--    'UPDATE', 'NOCHANGE')\r\n\t--   \r\n\t--    )\n\tIFF(Lkp_NurseReferralTimeWorkedId IS NULL, 'NEW', IFF(ltrim(rtrim(Lkp_NurseReferralAkId)) != ltrim(rtrim(NurseReferralAkId)) OR ltrim(rtrim(Lkp_TimeWorkedSequence)) != ltrim(rtrim(TimeWorkedSequence)) OR ltrim(rtrim(Lkp_WorkedDate)) != ltrim(rtrim(WorkedDate)) OR ltrim(rtrim(Lkp_TimeWorkedHours)) != ltrim(rtrim(TimeWorkedHours)), 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_ChangedFlag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Lkp_Default.o_NurseReferralAkId AS NurseReferralAkId,\n\tEXP_Src_Values.o_time_worked_seq AS TimeWorkedSequence,\n\tEXP_Src_Values.o_date_worked AS WorkedDate,\n\tEXP_Src_Values.o_time_worked_hours AS TimeWorkedHours\n\tFROM EXP_Lkp_Default\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseReferralTimeWorked\n\tON LKP_NurseReferralTimeWorked.NurseReferralAkId = EXP_Lkp_Default.o_NurseReferralAkId AND LKP_NurseReferralTimeWorked.TimeWorkedSequence = EXP_Src_Values.o_time_worked_seq\n),\nFIL_Lkp_Target AS (\n\tSELECT\n\tChangedFlag, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemId, \n\tCreatedDate, \n\tModifiedDate, \n\tNurseReferralAkId, \n\tTimeWorkedSequence, \n\tWorkedDate, \n\tTimeWorkedHours, \n\tLkp_NurseReferralTimeWorkedAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseReferralTimeWorked AS (\n\tCREATE SEQUENCE SEQ_NurseReferralTimeWorked\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Akid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemId,\n\tCreatedDate,\n\tModifiedDate,\n\tNurseReferralAkId,\n\tTimeWorkedSequence,\n\tWorkedDate,\n\tTimeWorkedHours,\n\t-- *INF*: iif(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseReferralTimeWorkedAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseReferralTimeWorkedAkId) AS NurseReferralTimeWorkedAkId,\n\tLkp_NurseReferralTimeWorkedAkId,\n\tSEQ_NurseReferralTimeWorked.NEXTVAL\n\tFROM FIL_Lkp_Target\n),\nNurseReferralTimeWorked_Insert AS (\n\tINSERT INTO NurseReferralTimeWorked\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseReferralTimeWorkedAkId, NurseReferralAkId, TimeWorkedSequence, WorkedDate, TimeWorkedHours)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSEREFERRALTIMEWORKEDAKID, \n\tNURSEREFERRALAKID, \n\tTIMEWORKEDSEQUENCE, \n\tWORKEDDATE, \n\tTIMEWORKEDHOURS\n\tFROM EXP_Akid_Insert_Target\n),\nSQ_NurseReferralTimeWorked AS (\n\tSELECT\r\n\tA.NurseReferralTimeWorkedId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate, \r\n\tA.NurseReferralTimeWorkedAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferralTimeWorked A\r\n\t\r\n\tWhere Exists\r\n\t   ( \r\n\tSELECT 1\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferralTimeWorked B\r\n\twhere\r\n\tB.CurrentSnapshotFlag =1\r\n\tAND\r\n\tA.NurseReferralTimeWorkedAkId = B.NurseReferralTimeWorkedAkId \r\n\t\r\n\tgroup by \r\n\tB.NurseReferralTimeWorkedAkId \r\n\t\r\n\thaving\r\n\tcount(*) > 1\r\n\t     )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseReferralTimeWorkedAkId , \r\n\tA.EffectiveDate desc\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseReferralTimeWorkedId,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tNurseReferralTimeWorkedAkId= v_PREV_ROW_NurseReferralTimeWorkedAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\r\n\t-- \n\tDECODE(TRUE,\n\tNurseReferralTimeWorkedAkId = v_PREV_ROW_NurseReferralTimeWorkedAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseReferralTimeWorkedAkId AS v_PREV_ROW_NurseReferralTimeWorkedAkId,\n\tNurseReferralTimeWorkedAkId,\n\tsysdate AS ModifiedDate\n\tFROM SQ_NurseReferralTimeWorked\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tNurseReferralTimeWorkedId, \n\tCurrentSnapshotFlag, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE TRUE\n),\nUPD_NurseReferralTimeWorked AS (\n\tSELECT\n\tNurseReferralTimeWorkedId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowAkId\n),\nNurseReferralTimeWorked_Update AS (\n\tMERGE INTO NurseReferralTimeWorked AS T\n\tUSING UPD_NurseReferralTimeWorked AS S\n\tON T.NurseReferralTimeWorkedId = S.NurseReferralTimeWorkedId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246502"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905527"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604461"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:37"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:40"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}