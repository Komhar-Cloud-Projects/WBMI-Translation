{
    "name": "s_m_POL_DW_LOAD_PremiumTransaction_DCT_PL",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PremiumTransaction_DCT_PL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupStateCFAXRef_Percent AS (\n\tSELECT\n\tCFARate,\n\tStateCode,\n\tEffectiveFromDate,\n\tEffectiveToDate\n\tFROM (\n\t\tSELECT \n\t\t\tCFARate,\n\t\t\tStateCode,\n\t\t\tEffectiveFromDate,\n\t\t\tEffectiveToDate\n\t\tFROM SupStateCFAXRef\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateCode,EffectiveFromDate,EffectiveToDate ORDER BY CFARate) = 1\n),\nLKP_ExcludePassThrough AS (\n\tSELECT\n\tRatedCoverageCode\n\tFROM (\n\t\tselect cc.RatedCoverageCode as RatedCoverageCode \r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary CS\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageGroup CG\r\n\t\ton CS.CoverageSummaryId=CG.CoverageSummaryId\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.ConformedCoverage CC\r\n\t\ton CG.CoverageGroupId=CC.CoverageGroupId\r\n\t\twhere CS.CoverageSummaryCode='PASSTHRU'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatedCoverageCode ORDER BY RatedCoverageCode) = 1\n),\nLKP_RatingCoverage AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tRatingCoverageId,\n\tRatingCoverageHashKey,\n\tRatingCoverageCancellationDate,\n\tCoverageGUID,\n\tCoverageType,\n\tSubCoverageTypeCode\n\tFROM (\n\t\tSELECT RC.RatingCoverageId as RatingCoverageId,\r\n\t\tRC.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tRC.RatingCoverageHashKey as RatingCoverageHashKey, \r\n\t\tRC.RatingCoverageCancellationDate as RatingCoverageCancellationDate, \r\n\t\tRC.CoverageGUID as CoverageGUID,\r\n\t\tRC.CoverageType as CoverageType,\r\n\t\tRC.SubCoverageTypeCode as SubCoverageTypeCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\t\ton RC.CoverageGUID=C.Coveragekey\r\n\t\tand RC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by RC.CoverageGUID,EffectiveDate desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGUID ORDER BY RatingCoverageAKID) = 1\n),\nSQ_WorkDCTPLCoverage AS (\n\tselect distinct P.PolicySymbol,\r\n\tP.PolicyNumber,\r\n\tP.PolicyVersion,\r\n\tP.TransactionCreatedDate,\r\n\tP.TransactionTypeCode,\r\n\tP.PolicyEffectiveDate,\r\n\tC.MeasureName,\r\n\tC.MeasureDetailCode,\r\n\tC.CoverageEffectiveDate,\r\n\tC.CoverageExpirationDate,\r\n\tC.TransactionAmount,\r\n\tISNULL(C.FullTermPremium,C.TransactionAmount) FullTermPremium,\r\n\tISNULL(C.ExposureAmount,0) ExposureAmount,\r\n\tC.CoverageKey,\r\n\tC.TransactionEffectiveDate,\r\n\tC.TransactionIssueDate,\r\n\tISNULL(C.TransactionReasonCode,'N/A') TransactionReasonCode,\r\n\tISNULL(C.DeductibleAmount,0) DeductibleAmount,\r\n\tC.CoverageCodeKey,\r\n\tISNULL(C.CoverageSubCd,'') CoverageSubCd,\r\n\tP.ExtractDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\ton P.PolicyKey=C.PolicyKey\r\n\tand P.StartDate=C.StartDate\r\n\twhere C.MeasureName='WrittenPremium'\r\n\tand not exists(select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P2 where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_RC}\r\n\torder by P.PolicySymbol,P.PolicyNumber,P.PolicyVersion,CoverageKey,P.TransactionCreatedDate\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\tTransactionCreatedDate,\n\tTransactionTypeCode,\n\tPolicyEffectiveDate,\n\tMeasureName,\n\tMeasureDetailCode,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tTransactionAmount,\n\tFullTermPremium,\n\tExposureAmount,\n\tCoverageKey,\n\tTransactionEffectiveDate,\n\tTransactionIssueDate,\n\tTransactionReasonCode,\n\tDeductibleAmount,\n\tCoverageCodeKey,\n\tCoverageSubCd,\n\t-- *INF*: :LKP.LKP_EXCLUDEPASSTHROUGH(CoverageSubCd)\n\tLKP_EXCLUDEPASSTHROUGH_CoverageSubCd.RatedCoverageCode AS v_LKP_PassThroughExclusion,\n\t-- *INF*: IIF(ISNULL(v_LKP_PassThroughExclusion),'1','0')\n\tIFF(v_LKP_PassThroughExclusion IS NULL,\n\t\t'1',\n\t\t'0'\n\t) AS o_PassThroughExclusionFlag,\n\tExtractDate\n\tFROM SQ_WorkDCTPLCoverage\n\tLEFT JOIN LKP_EXCLUDEPASSTHROUGH LKP_EXCLUDEPASSTHROUGH_CoverageSubCd\n\tON LKP_EXCLUDEPASSTHROUGH_CoverageSubCd.RatedCoverageCode = CoverageSubCd\n\n),\nFIL_PasThroughChargeExclusion AS (\n\tSELECT\n\tPolicySymbol, \n\tPolicyNumber, \n\tPolicyVersion, \n\tTransactionCreatedDate, \n\tTransactionTypeCode, \n\tPolicyEffectiveDate, \n\tMeasureName, \n\tMeasureDetailCode, \n\tCoverageEffectiveDate, \n\tCoverageExpirationDate, \n\tTransactionAmount, \n\tFullTermPremium, \n\tExposureAmount, \n\tCoverageKey, \n\tTransactionEffectiveDate, \n\tTransactionIssueDate, \n\tTransactionReasonCode, \n\tDeductibleAmount, \n\tCoverageCodeKey, \n\tCoverageSubCd, \n\to_PassThroughExclusionFlag AS PassThroughExclusionFlag, \n\tExtractDate\n\tFROM EXP_SRCDataCollect\n\tWHERE PassThroughExclusionFlag='1'\n),\nExp_Get_Values AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\tTransactionCreatedDate,\n\tTransactionTypeCode,\n\tMeasureName,\n\tMeasureDetailCode,\n\t'N/A' AS v_MeasureDetailCode,\n\tv_MeasureDetailCode AS o_MeasureDetailCode,\n\t-- *INF*: Decode(TRUE,\r\n\t-- TransactionTypeCode='New','10',\r\n\t-- TransactionTypeCode='Renew','11',\r\n\t-- TransactionTypeCode='Endorse','12',\r\n\t-- TransactionTypeCode='Reinstate','15',\r\n\t-- TransactionTypeCode='Cancel','20',\r\n\t-- TransactionTypeCode='Reissue','30',\r\n\t-- TransactionTypeCode='Rewrite','31',\r\n\t-- '-1'\r\n\t-- )\r\n\t-- \n\tDecode(TRUE,\n\t\tTransactionTypeCode = 'New', '10',\n\t\tTransactionTypeCode = 'Renew', '11',\n\t\tTransactionTypeCode = 'Endorse', '12',\n\t\tTransactionTypeCode = 'Reinstate', '15',\n\t\tTransactionTypeCode = 'Cancel', '20',\n\t\tTransactionTypeCode = 'Reissue', '30',\n\t\tTransactionTypeCode = 'Rewrite', '31',\n\t\t'-1'\n\t) AS o_standardPremiumTransactionCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_RATINGCOVERAGE(CoverageKey)),-1,:LKP.LKP_RATINGCOVERAGE(CoverageKey))\n\tIFF(LKP_RATINGCOVERAGE_CoverageKey.RatingCoverageAKID IS NULL,\n\t\t- 1,\n\t\tLKP_RATINGCOVERAGE_CoverageKey.RatingCoverageAKID\n\t) AS v_RatingCoverageAkid,\n\tv_RatingCoverageAkid AS o_RatingCoverageAkid,\n\t-1 AS o_StatisticalCoverageAkid,\n\t-- *INF*: MD5(v_RatingCoverageAkid||TO_CHAR(TransactionCreatedDate)|| v_MeasureDetailCode)\n\tMD5(v_RatingCoverageAkid || TO_CHAR(TransactionCreatedDate\n\t\t) || v_MeasureDetailCode\n\t) AS v_PremiunTransactionHashKey,\n\tv_PremiunTransactionHashKey AS o_PremiunTransactionHashKey,\n\t'D' AS o_PremiumType,\n\tPolicyEffectiveDate,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tTransactionAmount,\n\tFullTermPremium,\n\tExposureAmount,\n\tCoverageKey,\n\t-- *INF*: CoverageKey||'||'||TO_CHAR(TransactionCreatedDate)\n\tCoverageKey || '||' || TO_CHAR(TransactionCreatedDate\n\t) AS o_PremiumTransactionKey,\n\tTransactionEffectiveDate,\n\tTransactionIssueDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- TO_CHAR(ExtractDate, 'DD' ) ='02' and TO_CHAR( ExtractDate, 'DAY' )='Tuesday',1,\r\n\t-- TO_CHAR(ExtractDate, 'DD' ) ='01',1,\r\n\t-- 0\r\n\t-- )\n\tDECODE(TRUE,\n\t\tTO_CHAR(ExtractDate, 'DD'\n\t\t) = '02' \n\t\tAND TO_CHAR(ExtractDate, 'DAY'\n\t\t) = 'Tuesday', 1,\n\t\tTO_CHAR(ExtractDate, 'DD'\n\t\t) = '01', 1,\n\t\t0\n\t) AS v_AdjustForMonthEnd,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AdjustForMonthEnd = 1, ADD_TO_DATE(ExtractDate,'MM',-1),\r\n\t-- ExtractDate)\n\tDECODE(TRUE,\n\t\tv_AdjustForMonthEnd = 1, DATEADD(MONTH,- 1,ExtractDate),\n\t\tExtractDate\n\t) AS v_ExtractDate,\n\t-- *INF*: TRUNC(GREATEST(TransactionCreatedDate,TransactionEffectiveDate), 'MM')\n\tCAST(TRUNC(GREATEST(TransactionCreatedDate, TransactionEffectiveDate\n\t), 'MONTH') AS TIMESTAMP_NTZ(0)) AS v_TransactionIssueDate,\n\t-- *INF*: TRUNC(GREATEST(v_TransactionIssueDate,v_ExtractDate), 'MM')\n\tCAST(TRUNC(GREATEST(v_TransactionIssueDate, v_ExtractDate\n\t), 'MONTH') AS TIMESTAMP_NTZ(0)) AS o_TransactionIssueDate,\n\tTransactionReasonCode,\n\tDeductibleAmount,\n\t0 AS o_ExperienceModificationFactor,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS o_ExperienceModificationEffectiveDate,\n\t0 AS o_PackageModificationAdjustmentFactor,\n\t'0' AS o_PackageModificationAdjustmentGroupCode,\n\t0 AS o_IncreasedLimitFactor,\n\t'0' AS o_IncreasedLimitGroupCode,\n\t'0000' AS o_YearBuilt,\n\t0 AS o_AgencyActualCommissionRate,\n\t0.0000 AS o_BaseRate,\n\t'N/A' AS o_ConstructionCode,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS o_StateRatingEffectiveDate,\n\t0 AS o_IndividualRiskPremiumModification,\n\t'0' AS o_WindCoverageFlag,\n\t'N/A' AS o_DeductibleBasis,\n\t'N/A' AS o_ExposureBasis,\n\t'N/A' AS o_TransactionCreatedUserId,\n\t'N/A' AS o_ServiceCentreName5,\n\t0 AS o_NumberOfEmployees,\n\t'N/A' AS o_NegateRestateCode,\n\tCoverageCodeKey,\n\tCoverageSubCd,\n\tExtractDate\n\tFROM FIL_PasThroughChargeExclusion\n\tLEFT JOIN LKP_RATINGCOVERAGE LKP_RATINGCOVERAGE_CoverageKey\n\tON LKP_RATINGCOVERAGE_CoverageKey.CoverageGUID = CoverageKey\n\n),\nLKP_PremiumTransaction AS (\n\tSELECT\n\tPremiumTransactionAKID,\n\tPremiumTransactionID,\n\tPremiumTransactionHashKey\n\tFROM (\n\t\tSELECT PT.PremiumTransactionAKID as PremiumTransactionAKID, \r\n\t\tPT.PremiumTransactionID as PremiumTransactionID, \r\n\t\tPT.PremiumTransactionHashKey as PremiumTransactionHashKey,\r\n\t\tPT.NegateRestateCode as NegateRestateCode\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton PT.RatingCoverageAKId=RC.RatingCoverageAKID\r\n\t\tand PT.EffectiveDate=RC.EffectiveDate\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\t\ton C.Coveragekey = RC.CoverageGUID\r\n\t\tand PT.CurrentSnapshotFlag='1' \r\n\t\tAND PT.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionHashKey ORDER BY PremiumTransactionAKID DESC) = 1\n),\nLKP_sup_premium_transaction_code AS (\n\tSELECT\n\tsup_prem_trans_code_id,\n\tprem_trans_code,\n\tStandardPremiumTransactionCode\n\tFROM (\n\t\tSELECT \n\t\t\tsup_prem_trans_code_id,\n\t\t\tprem_trans_code,\n\t\t\tStandardPremiumTransactionCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_premium_transaction_code\n\t\tWHERE crrnt_snpsht_flag='1' AND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY prem_trans_code,StandardPremiumTransactionCode ORDER BY sup_prem_trans_code_id) = 1\n),\nEXP_Format_PremiumTransaction AS (\n\tSELECT\n\tLKP_sup_premium_transaction_code.sup_prem_trans_code_id AS i_sup_premium_transaction_id,\n\tExp_Get_Values.o_PremiumTransactionKey AS i_PremiumTransactionKey,\n\tExp_Get_Values.TransactionTypeCode AS i_PremiumTransactionCode,\n\tExp_Get_Values.TransactionCreatedDate AS i_PremiumTransactionEnteredDate,\n\tExp_Get_Values.TransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tExp_Get_Values.CoverageExpirationDate AS i_PremiumTransactionExpirationDate,\n\tExp_Get_Values.o_TransactionIssueDate AS i_PremiumTransactionBookedDate,\n\tExp_Get_Values.TransactionAmount AS i_PremiumTransactionAmount,\n\tExp_Get_Values.FullTermPremium AS i_FullTermPremium,\n\tExp_Get_Values.o_PremiumType AS i_PremiumType,\n\tExp_Get_Values.o_MeasureDetailCode AS i_OffsetOnsetIndicator,\n\tExp_Get_Values.o_StatisticalCoverageAkid AS i_StatisticalCoverageAKID,\n\tExp_Get_Values.CoverageKey AS i_CoverageGUID,\n\tExp_Get_Values.TransactionReasonCode AS i_ReasonAmendedCode,\n\tExp_Get_Values.o_PremiunTransactionHashKey AS i_PremiumTransactionHashKey,\n\tExp_Get_Values.o_RatingCoverageAkid AS i_RatingCoverageAKId,\n\tLKP_PremiumTransaction.PremiumTransactionAKID,\n\tLKP_PremiumTransaction.PremiumTransactionID,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\ti_PremiumTransactionEnteredDate AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t0 AS o_LogicalIndicator,\n\t'1' AS o_LogicalDeleteFlag,\n\ti_PremiumTransactionHashKey AS o_PremiumTransactionHashKey,\n\t1 AS o_PremiumLoadSequence,\n\t1 AS o_DuplicateSequence,\n\t-1 AS o_ReinsuranceCoverageAKID,\n\t-1 AS o_StatisticalCoverageAKID,\n\ti_PremiumTransactionKey AS o_PremiumTransactionKey,\n\t'N/A' AS o_PMSFunctionCode,\n\ti_PremiumTransactionCode AS o_PremiumTransactionCode,\n\ti_PremiumTransactionEnteredDate AS o_PremiumTransactionEnteredDate,\n\ti_PremiumTransactionEffectiveDate AS o_PremiumTransactionEffectiveDate,\n\ti_PremiumTransactionExpirationDate AS o_PremiumTransactionExpirationDate,\n\ti_PremiumTransactionBookedDate AS o_PremiumTransactionBookedDate,\n\ti_PremiumTransactionAmount AS o_PremiumTransactionAmount,\n\ti_FullTermPremium AS o_FullTermPremium,\n\ti_PremiumType AS o_PremiumType,\n\t-- *INF*: i_ReasonAmendedCode\r\n\t-- \r\n\t-- --'TBD'\n\ti_ReasonAmendedCode AS o_ReasonAmendedCode,\n\ti_OffsetOnsetIndicator AS o_OffsetOnsetCode,\n\ti_sup_premium_transaction_id AS o_sup_premium_transaction_id,\n\ti_RatingCoverageAKId AS o_RatingCoverageAKId,\n\tExp_Get_Values.DeductibleAmount,\n\tExp_Get_Values.o_ExperienceModificationFactor AS ExperienceModificationFactor,\n\tExp_Get_Values.o_ExperienceModificationEffectiveDate AS ExperienceModificationEffectiveDate,\n\tExp_Get_Values.o_PackageModificationAdjustmentFactor AS PackageModificationAdjustmentFactor,\n\tExp_Get_Values.o_PackageModificationAdjustmentGroupCode AS PackageModificationAdjustmentGroupCode,\n\tExp_Get_Values.o_IncreasedLimitFactor AS IncreasedLimitFactor,\n\tExp_Get_Values.o_IncreasedLimitGroupCode AS IncreasedLimitGroupCode,\n\tExp_Get_Values.o_YearBuilt AS YearBuilt,\n\tExp_Get_Values.o_AgencyActualCommissionRate AS i_AgencyActualCommissionRate,\n\ti_AgencyActualCommissionRate*0.01 AS o_AgencyActualCommissionRate,\n\tExp_Get_Values.o_BaseRate AS BaseRate,\n\tExp_Get_Values.o_ConstructionCode AS ConstructionCode,\n\tExp_Get_Values.o_StateRatingEffectiveDate AS StateRatingEffectiveDate,\n\ti_CoverageId AS o_PremiumTransactionStageId,\n\tExp_Get_Values.o_IndividualRiskPremiumModification AS IndividualRiskPremiumModification,\n\tExp_Get_Values.o_WindCoverageFlag AS WindCoverageFlag,\n\tExp_Get_Values.TransactionCreatedDate AS CreatedDate,\n\tExp_Get_Values.o_DeductibleBasis AS DeductibleBasis,\n\tExp_Get_Values.o_ExposureBasis AS ExposureBasis,\n\tExp_Get_Values.ExposureAmount AS Exposure,\n\tExp_Get_Values.o_TransactionCreatedUserId AS TransactionCreatedUserId5,\n\tExp_Get_Values.o_ServiceCentreName5 AS ServiceCentreName5,\n\tExp_Get_Values.o_NumberOfEmployees AS lkp_NumberOfEmployees,\n\t-- *INF*: IIF(ISNULL(lkp_NumberOfEmployees),0,lkp_NumberOfEmployees)\n\tIFF(lkp_NumberOfEmployees IS NULL,\n\t\t0,\n\t\tlkp_NumberOfEmployees\n\t) AS o_NumberOfEmployees,\n\tExp_Get_Values.o_NegateRestateCode AS NegateRestateCode,\n\tExp_Get_Values.ExposureAmount AS WrittenExposure,\n\t-- *INF*: substr(i_PremiumTransactionKey,1,instr(i_PremiumTransactionKey,'~',1,1))\n\tsubstr(i_PremiumTransactionKey, 1, REGEXP_INSTR(i_PremiumTransactionKey, '~', 1, 1\n\t\t)\n\t) AS o_Policyakid,\n\t0 AS DeclaredEventFlag\n\tFROM Exp_Get_Values\n\tLEFT JOIN LKP_PremiumTransaction\n\tON LKP_PremiumTransaction.PremiumTransactionHashKey = Exp_Get_Values.o_PremiunTransactionHashKey\n\tLEFT JOIN LKP_sup_premium_transaction_code\n\tON LKP_sup_premium_transaction_code.prem_trans_code = Exp_Get_Values.TransactionTypeCode AND LKP_sup_premium_transaction_code.StandardPremiumTransactionCode = Exp_Get_Values.o_standardPremiumTransactionCode\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tPremiumTransactionAKID AS lkp_PremiumTransactionAKID,\n\tPremiumTransactionID AS lkp_PremiumTransactionID,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\tCreatedDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_LogicalIndicator AS LogicalIndicator,\n\to_LogicalDeleteFlag AS LogicalDeleteFlag,\n\to_PremiumTransactionHashKey AS PremiumTransactionHashKey,\n\to_PremiumLoadSequence AS PremiumLoadSequence,\n\to_DuplicateSequence AS DuplicateSequence,\n\to_ReinsuranceCoverageAKID AS ReinsuranceCoverageAKID,\n\to_StatisticalCoverageAKID AS StatisticalCoverageAKID,\n\to_PremiumTransactionKey AS PremiumTransactionKey,\n\to_PMSFunctionCode AS PMSFunctionCode,\n\to_PremiumTransactionCode AS PremiumTransactionCode,\n\to_PremiumTransactionEnteredDate AS PremiumTransactionEnteredDate,\n\to_PremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate,\n\to_PremiumTransactionExpirationDate AS PremiumTransactionExpirationDate,\n\to_PremiumTransactionBookedDate AS PremiumTransactionBookedDate,\n\to_PremiumTransactionAmount AS PremiumTransactionAmount,\n\to_FullTermPremium AS FullTermPremium,\n\to_PremiumType AS PremiumType,\n\to_ReasonAmendedCode AS ReasonAmendedCode,\n\to_OffsetOnsetCode AS OffsetOnsetCode,\n\to_sup_premium_transaction_id AS SupPremiumTransactionCodeId,\n\to_RatingCoverageAKId AS RatingCoverageAKId,\n\tDeductibleAmount,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPackageModificationAdjustmentFactor,\n\tPackageModificationAdjustmentGroupCode,\n\tIncreasedLimitFactor,\n\tIncreasedLimitGroupCode,\n\tYearBuilt,\n\to_AgencyActualCommissionRate AS AgencyActualCommissionRate,\n\tBaseRate,\n\tConstructionCode,\n\tStateRatingEffectiveDate,\n\tIndividualRiskPremiumModification,\n\tWindCoverageFlag,\n\tDeductibleBasis,\n\tExposureBasis,\n\to_PremiumTransactionStageId AS PremiumTransactionStageId,\n\tExposure,\n\tTransactionCreatedUserId5 AS TransactionCreatedUserId,\n\tServiceCentreName5 AS ServiceCentreName,\n\to_NumberOfEmployees AS NumberOfEmployee,\n\tNegateRestateCode,\n\tWrittenExposure,\n\to_Policyakid,\n\tDeclaredEventFlag\n\tFROM EXP_Format_PremiumTransaction\n),\nRTR_Insert_Update_INSERT_PREMIUM AS (SELECT * FROM RTR_Insert_Update WHERE ISNULL(lkp_PremiumTransactionAKID) AND NOT (IN(OffsetOnsetCode,'Offset','Deprecated')=1 AND PremiumTransactionAmount=0)),\nRTR_Insert_Update_UPDATE_PREMIUM AS (SELECT * FROM RTR_Insert_Update WHERE (NOT ISNULL(lkp_PremiumTransactionAKID)) AND (NOT (IN(OffsetOnsetCode,'Offset','Deprecated')=1 AND PremiumTransactionAmount=0))),\nSEQ_PremiumTransactionAKID AS (\n\tCREATE SEQUENCE SEQ_PremiumTransactionAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Set_AKID AS (\n\tSELECT\n\tSEQ_PremiumTransactionAKID.NEXTVAL AS i_NEXTVAL,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tLogicalIndicator,\n\tLogicalDeleteFlag,\n\tPremiumTransactionHashKey,\n\tPremiumLoadSequence,\n\tDuplicateSequence,\n\ti_NEXTVAL AS PremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionKey,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tOffsetOnsetCode,\n\tSupPremiumTransactionCodeId,\n\tRatingCoverageAKId,\n\tDeductibleAmount,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPackageModificationAdjustmentFactor,\n\tPackageModificationAdjustmentGroupCode,\n\tIncreasedLimitFactor,\n\tIncreasedLimitGroupCode,\n\tYearBuilt,\n\tAgencyActualCommissionRate,\n\tBaseRate,\n\tConstructionCode,\n\tStateRatingEffectiveDate,\n\tIndividualRiskPremiumModification,\n\tWindCoverageFlag,\n\tDeductibleBasis,\n\tExposureBasis,\n\tPremiumTransactionStageId,\n\tExposure,\n\tTransactionCreatedUserId AS TransactionCreatedUserId1,\n\tServiceCentreName AS ServiceCentreName1,\n\tNumberOfEmployee AS NumberOfEmployee1,\n\tNegateRestateCode,\n\tWrittenExposure AS WrittenExposure1,\n\tDeclaredEventFlag AS DeclaredEventFlag1\n\tFROM RTR_Insert_Update_INSERT_PREMIUM\n),\nTGT_PremiumTransaction_Insert_Incremental AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n\tINSERT INTO PremiumTransaction\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, LogicalDeleteFlag, PremiumTransactionHashKey, PremiumLoadSequence, DuplicateSequence, PremiumTransactionAKID, ReinsuranceCoverageAKID, StatisticalCoverageAKID, PremiumTransactionKey, PMSFunctionCode, PremiumTransactionCode, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, PremiumTransactionBookedDate, PremiumTransactionAmount, FullTermPremium, PremiumType, ReasonAmendedCode, OffsetOnsetCode, SupPremiumTransactionCodeId, RatingCoverageAKId, DeductibleAmount, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PackageModificationAdjustmentFactor, PackageModificationAdjustmentGroupCode, IncreasedLimitFactor, IncreasedLimitGroupCode, YearBuilt, AgencyActualCommissionRate, BaseRate, ConstructionCode, StateRatingEffectiveDate, IndividualRiskPremiumModification, WindCoverageFlag, DeductibleBasis, ExposureBasis, TransactionCreatedUserId, ServiceCentreName, Exposure, NumberOfEmployee, NegateRestateCode, WrittenExposure, DeclaredEventFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tLOGICALDELETEFLAG, \n\tPREMIUMTRANSACTIONHASHKEY, \n\tPREMIUMLOADSEQUENCE, \n\tDUPLICATESEQUENCE, \n\tPREMIUMTRANSACTIONAKID, \n\tREINSURANCECOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPREMIUMTRANSACTIONKEY, \n\tPMSFUNCTIONCODE, \n\tPREMIUMTRANSACTIONCODE, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONEXPIRATIONDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tPREMIUMTRANSACTIONAMOUNT, \n\tFULLTERMPREMIUM, \n\tPREMIUMTYPE, \n\tREASONAMENDEDCODE, \n\tOFFSETONSETCODE, \n\tSUPPREMIUMTRANSACTIONCODEID, \n\tRATINGCOVERAGEAKID, \n\tDEDUCTIBLEAMOUNT, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tEXPERIENCEMODIFICATIONEFFECTIVEDATE, \n\tPACKAGEMODIFICATIONADJUSTMENTFACTOR, \n\tPACKAGEMODIFICATIONADJUSTMENTGROUPCODE, \n\tINCREASEDLIMITFACTOR, \n\tINCREASEDLIMITGROUPCODE, \n\tYEARBUILT, \n\tAGENCYACTUALCOMMISSIONRATE, \n\tBASERATE, \n\tCONSTRUCTIONCODE, \n\tSTATERATINGEFFECTIVEDATE, \n\tINDIVIDUALRISKPREMIUMMODIFICATION, \n\tWINDCOVERAGEFLAG, \n\tDEDUCTIBLEBASIS, \n\tEXPOSUREBASIS, \n\tTransactionCreatedUserId1 AS TRANSACTIONCREATEDUSERID, \n\tServiceCentreName1 AS SERVICECENTRENAME, \n\tEXPOSURE, \n\tNumberOfEmployee1 AS NUMBEROFEMPLOYEE, \n\tNEGATERESTATECODE, \n\tWrittenExposure1 AS WRITTENEXPOSURE, \n\tDeclaredEventFlag1 AS DECLAREDEVENTFLAG\n\tFROM EXP_Set_AKID\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n),\nUPD_PremiumTransaction AS (\n\tSELECT\n\tlkp_PremiumTransactionID AS PremiumTransactionID, \n\tPremiumTransactionCode, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionBookedDate, \n\tPremiumType, \n\tOffsetOnsetCode, \n\tSupPremiumTransactionCodeId, \n\tRatingCoverageAKId, \n\tAgencyActualCommissionRate, \n\tExposureBasis, \n\tExposure, \n\tTransactionCreatedUserId AS TransactionCreatedUserId3, \n\tWrittenExposure AS WrittenExposure3, \n\tDeclaredEventFlag AS DeclaredEventFlag3\n\tFROM RTR_Insert_Update_UPDATE_PREMIUM\n),\nTGT_PremiumTransaction_Update_Incremental AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_PremiumTransaction AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.PremiumTransactionCode = S.PremiumTransactionCode, T.PremiumTransactionEnteredDate = S.PremiumTransactionEnteredDate, T.PremiumTransactionEffectiveDate = S.PremiumTransactionEffectiveDate, T.PremiumType = S.PremiumType, T.OffsetOnsetCode = S.OffsetOnsetCode, T.SupPremiumTransactionCodeId = S.SupPremiumTransactionCodeId, T.RatingCoverageAKId = S.RatingCoverageAKId, T.AgencyActualCommissionRate = S.AgencyActualCommissionRate, T.ExposureBasis = S.ExposureBasis, T.TransactionCreatedUserId = S.TransactionCreatedUserId3, T.Exposure = S.Exposure, T.WrittenExposure = S.WrittenExposure3, T.DeclaredEventFlag = S.DeclaredEventFlag3\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n),\nSQ_PremiumTransaction_CFA AS (\n\tSELECT \r\n\tPT.PremiumTransactionID, \r\n\tPT.CurrentSnapshotFlag, \r\n\tPT.AuditID, \r\n\tPT.EffectiveDate, \r\n\tPT.ExpirationDate, \r\n\tPT.SourceSystemID, \r\n\tPT.CreatedDate, \r\n\tPT.ModifiedDate, \r\n\tPT.LogicalIndicator, \r\n\tPT.LogicalDeleteFlag, \r\n\tPT.PremiumTransactionHashKey, \r\n\tPT.PremiumLoadSequence, \r\n\tPT.DuplicateSequence, \r\n\tPT.PremiumTransactionAKID, \r\n\tPT.ReinsuranceCoverageAKID, \r\n\tPT.StatisticalCoverageAKID, \r\n\tPT.PremiumTransactionKey, \r\n\tPT.PMSFunctionCode, \r\n\tPT.PremiumTransactionCode, \r\n\tPT.PremiumTransactionEnteredDate, \r\n\tPT.PremiumTransactionEffectiveDate, \r\n\tPT.PremiumTransactionExpirationDate, \r\n\tPT.PremiumTransactionBookedDate, \r\n\tPT.PremiumTransactionAmount, \r\n\tPT.FullTermPremium, \r\n\tPT.PremiumType, \r\n\tPT.ReasonAmendedCode, \r\n\tPT.OffsetOnsetCode, \r\n\tPT.SupPremiumTransactionCodeId, \r\n\tPT.RatingCoverageAKId, \r\n\tPT.DeductibleAmount, \r\n\tPT.ExperienceModificationFactor, \r\n\tPT.ExperienceModificationEffectiveDate, \r\n\tPT.PackageModificationAdjustmentFactor, \r\n\tPT.PackageModificationAdjustmentGroupCode, \r\n\tPT.IncreasedLimitFactor, \r\n\tPT.IncreasedLimitGroupCode, \r\n\tPT.YearBuilt, \r\n\tPT.AgencyActualCommissionRate, \r\n\tPT.BaseRate, \r\n\tPT.ConstructionCode, \r\n\tPT.StateRatingEffectiveDate, \r\n\tPT.IndividualRiskPremiumModification, \r\n\tPT.WindCoverageFlag, \r\n\tPT.DeductibleBasis, \r\n\tPT.ExposureBasis, \r\n\tPT.TransactionCreatedUserId, \r\n\tPT.ServiceCentreName, \r\n\tPT.Exposure, \r\n\tPT.NumberOfEmployee, \r\n\tPT.NegateRestateCode, \r\n\tPT.WrittenExposure, \r\n\tPT.DeclaredEventFlag, \r\n\tWorkRC.WorkCFARatingCoverageXRefId, \r\n\tWorkRC.WorkCFAPolicyListId, \r\n\tWorkRC.PolicyKey, \r\n\tWorkRC.OriginalRatingCoverageAKID, \r\n\tWorkRC.CFARatingCoverageAKID, \r\n\tWorkRC.OriginalCoverageGuid, \r\n\tWorkRC.CFACoverageGuid, \r\n\tWorkList.Status,\r\n\tWorkList.TransactionCreatedDate,\r\n\tWorkList.LineageId,\r\n\tISNULL(WorkList.PolicyStateCode,'N/A') as PolicyStateCode,\r\n\tP.pol_eff_date\r\n\tFROM\r\n\tPremiumTransaction PT\r\n\tINNER JOIN WorkCFARatingCoverageXRef WorkRC ON PT.RatingCoverageAKId= WorkRC.OriginalRatingCoverageAKID AND PT.EffectiveDate=WorkRC.OriginalEffectiveDate\r\n\tINNER JOIN WorkCFAPolicyList  WorkList ON WorkList.WorkCFAPolicyListId=WorkRC.WorkCFAPolicyListId\r\n\tINNER JOIN V2.policy P ON WorkList.PolicyKey=P.pol_key and P.crrnt_snpsht_flag=1\r\n\tLEFT JOIN WorkCFAPremiumTransactionXRef WorkPT ON WorkPT.OriginalPremiumTransactionAKID = PT.PremiumTransactionAKID\r\n\tLEFT JOIN WorkCFAPremiumTransactionXRef WorkPT2 on WorkPT2.CFAPremiumTransactionAKID = PT.PremiumTransactionAKID\r\n\t-- add negative tests to exclude any records we may accidentally be running twice\r\n\tWHERE \r\n\tWorkList.Status='Processed' \r\n\tAND WorkPT.OriginalPremiumTransactionAKID IS NULL \r\n\tAND WorkPT2.CFAPremiumTransactionAKID IS NULL\r\n\tAND NOT PT.PremiumTransactionKey like '%CFA%'\r\n\t@{pipeline().parameters.WHERE_CFA}\n),\nLKP_CFATransactionEffectiveDate AS (\n\tSELECT\n\tTransactionEffectiveDate,\n\tPolicyKey\n\tFROM (\n\t\tSELECT \r\n\t\tC.TransactionEffectiveDate AS TransactionEffectiveDate\r\n\t\t,RIGHT(REPLACE(P.policykey,'||',''),LEN(REPLACE(P.policykey,'||',''))-1) AS PolicyKey\r\n\t\tfrom WorkDCTPLPolicy P  WITH (NOLOCK)\r\n\t\tleft join WorkDCTPLCoverage C  WITH (NOLOCK)\r\n\t\ton P.PolicyKey=C.PolicyKey\r\n\t\tand P.StartDate=C.StartDate\r\n\t\twhere C.MeasureName='WrittenPremium'\r\n\t\tand exists(select 1 from WorkDCTPLPolicy P2  WITH (NOLOCK) where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward') \r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tSELECT \r\n\t\tC.TransactionEffectiveDate AS TransactionEffectiveDate\r\n\t\t,RIGHT(REPLACE(P.policykey,'||',''),LEN(REPLACE(P.policykey,'||',''))-1) AS PolicyKey\r\n\t\tfrom ArchWorkDCTPLPolicy P WITH (NOLOCK)\r\n\t\tleft join ArchWorkDCTPLCoverage C WITH (NOLOCK)\r\n\t\ton P.PolicyKey=C.PolicyKey\r\n\t\tand P.StartDate=C.StartDate\r\n\t\twhere C.MeasureName='WrittenPremium'\r\n\t\tand exists(select 1 from ArchWorkDCTPLPolicy P2 WITH (NOLOCK) where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY TransactionEffectiveDate) = 1\n),\nEXP_Input_CFA AS (\n\tSELECT\n\tSQ_PremiumTransaction_CFA.PremiumTransactionID,\n\tSQ_PremiumTransaction_CFA.CurrentSnapshotFlag,\n\tSQ_PremiumTransaction_CFA.AuditID,\n\tSQ_PremiumTransaction_CFA.EffectiveDate,\n\tSQ_PremiumTransaction_CFA.ExpirationDate,\n\tSQ_PremiumTransaction_CFA.SourceSystemID,\n\tSQ_PremiumTransaction_CFA.CreatedDate,\n\tSQ_PremiumTransaction_CFA.ModifiedDate,\n\tSQ_PremiumTransaction_CFA.LogicalIndicator,\n\tSQ_PremiumTransaction_CFA.LogicalDeleteFlag,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionHashKey,\n\tSQ_PremiumTransaction_CFA.PremiumLoadSequence,\n\tSQ_PremiumTransaction_CFA.DuplicateSequence,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionAKID,\n\tSQ_PremiumTransaction_CFA.ReinsuranceCoverageAKID,\n\tSQ_PremiumTransaction_CFA.StatisticalCoverageAKID,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionKey,\n\tSQ_PremiumTransaction_CFA.PMSFunctionCode,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionCode,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionEnteredDate,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionEffectiveDate,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionExpirationDate,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionBookedDate,\n\tSQ_PremiumTransaction_CFA.PremiumTransactionAmount,\n\tSQ_PremiumTransaction_CFA.FullTermPremium,\n\tSQ_PremiumTransaction_CFA.PremiumType,\n\tSQ_PremiumTransaction_CFA.ReasonAmendedCode,\n\tSQ_PremiumTransaction_CFA.OffsetOnsetCode,\n\tSQ_PremiumTransaction_CFA.SupPremiumTransactionCodeId,\n\tSQ_PremiumTransaction_CFA.RatingCoverageAKId,\n\tSQ_PremiumTransaction_CFA.DeductibleAmount,\n\tSQ_PremiumTransaction_CFA.ExperienceModificationFactor,\n\tSQ_PremiumTransaction_CFA.ExperienceModificationEffectiveDate,\n\tSQ_PremiumTransaction_CFA.PackageModificationAdjustmentFactor,\n\tSQ_PremiumTransaction_CFA.PackageModificationAdjustmentGroupCode,\n\tSQ_PremiumTransaction_CFA.IncreasedLimitFactor,\n\tSQ_PremiumTransaction_CFA.IncreasedLimitGroupCode,\n\tSQ_PremiumTransaction_CFA.YearBuilt,\n\tSQ_PremiumTransaction_CFA.AgencyActualCommissionRate,\n\tSQ_PremiumTransaction_CFA.BaseRate,\n\tSQ_PremiumTransaction_CFA.ConstructionCode,\n\tSQ_PremiumTransaction_CFA.StateRatingEffectiveDate,\n\tSQ_PremiumTransaction_CFA.IndividualRiskPremiumModification,\n\tSQ_PremiumTransaction_CFA.WindCoverageFlag,\n\tSQ_PremiumTransaction_CFA.DeductibleBasis,\n\tSQ_PremiumTransaction_CFA.ExposureBasis,\n\tSQ_PremiumTransaction_CFA.TransactionCreatedUserId,\n\tSQ_PremiumTransaction_CFA.ServiceCentreName,\n\tSQ_PremiumTransaction_CFA.Exposure,\n\tSQ_PremiumTransaction_CFA.NumberOfEmployee,\n\tSQ_PremiumTransaction_CFA.NegateRestateCode,\n\tSQ_PremiumTransaction_CFA.WrittenExposure,\n\tSQ_PremiumTransaction_CFA.DeclaredEventFlag,\n\tSQ_PremiumTransaction_CFA.WorkCFARatingCoverageXRefId,\n\tSQ_PremiumTransaction_CFA.WorkCFAPolicyListId,\n\tSQ_PremiumTransaction_CFA.PolicyKey,\n\tSQ_PremiumTransaction_CFA.OriginalRatingCoverageAKID,\n\tSQ_PremiumTransaction_CFA.CFARatingCoverageAKID,\n\tSQ_PremiumTransaction_CFA.OriginalCoverageGuid,\n\tSQ_PremiumTransaction_CFA.CFACoverageGuid,\n\tSQ_PremiumTransaction_CFA.TransactionCreatedDate AS CFATransactionCreatedDate,\n\tSQ_PremiumTransaction_CFA.Status,\n\tSQ_PremiumTransaction_CFA.LineageId,\n\tSQ_PremiumTransaction_CFA.PolicyStateCode,\n\tSQ_PremiumTransaction_CFA.pol_eff_date,\n\tSYSDATE AS DefaultDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- TO_CHAR(SYSDATE, 'DD' ) ='02' and TO_CHAR( SYSDATE, 'DAY' )='Tuesday',1,\r\n\t-- TO_CHAR(SYSDATE, 'DD' ) ='01',1,\r\n\t-- 0\r\n\t-- )\n\tDECODE(TRUE,\n\t\tTO_CHAR(SYSDATE, 'DD'\n\t\t) = '02' \n\t\tAND TO_CHAR(SYSDATE, 'DAY'\n\t\t) = 'Tuesday', 1,\n\t\tTO_CHAR(SYSDATE, 'DD'\n\t\t) = '01', 1,\n\t\t0\n\t) AS v_AdjustForMonthEnd,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AdjustForMonthEnd = 1, ADD_TO_DATE(SYSDATE,'MM',-1),\r\n\t-- SYSDATE)\n\tDECODE(TRUE,\n\t\tv_AdjustForMonthEnd = 1, DATEADD(MONTH,- 1,SYSDATE),\n\t\tSYSDATE\n\t) AS v_ExtractDate,\n\t-- *INF*: IIF\r\n\t-- (\r\n\t-- NOT ISNULL(:LKP.LKP_SUPSTATECFAXREF_PERCENT(PolicyStateCode,pol_eff_date)),\r\n\t-- :LKP.LKP_SUPSTATECFAXREF_PERCENT(PolicyStateCode,pol_eff_date),\r\n\t-- :LKP.LKP_SUPSTATECFAXREF_PERCENT('N/A',pol_eff_date)\r\n\t-- )\n\tIFF(LKP_SUPSTATECFAXREF_PERCENT_PolicyStateCode_pol_eff_date.CFARate IS NOT NULL,\n\t\tLKP_SUPSTATECFAXREF_PERCENT_PolicyStateCode_pol_eff_date.CFARate,\n\t\tLKP_SUPSTATECFAXREF_PERCENT__N_A_pol_eff_date.CFARate\n\t) AS v_CFARate,\n\t-- *INF*: GREATEST(TRUNC(v_ExtractDate,'MM'),TRUNC(PremiumTransactionEffectiveDate,'MM'),TRUNC(EffectiveDate,'MM'))\r\n\t-- \r\n\t-- \r\n\t-- \n\tGREATEST(CAST(TRUNC(v_ExtractDate, 'MONTH') AS TIMESTAMP_NTZ(0)), CAST(TRUNC(PremiumTransactionEffectiveDate, 'MONTH') AS TIMESTAMP_NTZ(0)), CAST(TRUNC(EffectiveDate, 'MONTH') AS TIMESTAMP_NTZ(0))\n\t) AS o_BookedDate,\n\t'Complete' AS o_Status,\n\t-- *INF*: MD5(CFARatingCoverageAKID||TO_CHAR(EffectiveDate)|| 'N/A')\n\tMD5(CFARatingCoverageAKID || TO_CHAR(EffectiveDate\n\t\t) || 'N/A'\n\t) AS o_PremiumTransactionHashKey,\n\t-- *INF*: CFACoverageGuid||'||'||TO_CHAR(EffectiveDate)\n\tCFACoverageGuid || '||' || TO_CHAR(EffectiveDate\n\t) AS o_PremiumTransactionKey,\n\t-- *INF*: v_CFARate * PremiumTransactionAmount\r\n\t-- \r\n\t-- --PremiumTransactionAmount * (-0.05)\r\n\t-- -- using hardcoded AZ rates , come back with a state specific table\n\tv_CFARate * PremiumTransactionAmount AS o_PremiumTransactionAmount,\n\t'CFA' AS o_ReasonAmendedCode,\n\tSEQ_PremiumTransactionAKID.NEXTVAL AS i_NEXTVAL,\n\ti_NEXTVAL AS o_PremiumTransactionAKID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tLKP_CFATransactionEffectiveDate.TransactionEffectiveDate AS LKP_CFATransactionEffectiveDate,\n\t-- *INF*: IIF(ISNULL(LKP_CFATransactionEffectiveDate),TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),LKP_CFATransactionEffectiveDate)\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(LKP_CFATransactionEffectiveDate IS NULL,\n\t\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t),\n\t\tLKP_CFATransactionEffectiveDate\n\t) AS v_CFATransactionEffectiveDate,\n\tv_CFATransactionEffectiveDate AS o_CFATransactionEffectiveDate\n\tFROM SQ_PremiumTransaction_CFA\n\tLEFT JOIN LKP_CFATransactionEffectiveDate\n\tON LKP_CFATransactionEffectiveDate.PolicyKey = SQ_PremiumTransaction_CFA.PolicyKey\n\tLEFT JOIN LKP_SUPSTATECFAXREF_PERCENT LKP_SUPSTATECFAXREF_PERCENT_PolicyStateCode_pol_eff_date\n\tON LKP_SUPSTATECFAXREF_PERCENT_PolicyStateCode_pol_eff_date.StateCode = PolicyStateCode\n\tAND LKP_SUPSTATECFAXREF_PERCENT_PolicyStateCode_pol_eff_date.EffectiveFromDate = pol_eff_date\n\n\tLEFT JOIN LKP_SUPSTATECFAXREF_PERCENT LKP_SUPSTATECFAXREF_PERCENT__N_A_pol_eff_date\n\tON LKP_SUPSTATECFAXREF_PERCENT__N_A_pol_eff_date.StateCode = 'N/A'\n\tAND LKP_SUPSTATECFAXREF_PERCENT__N_A_pol_eff_date.EffectiveFromDate = pol_eff_date\n\n),\nAGG_WorkCFAPolicyList AS (\n\tSELECT\n\tWorkCFAPolicyListId,\n\to_Status AS Status,\n\tDefaultDate\n\tFROM EXP_Input_CFA\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkCFAPolicyListId ORDER BY NULL) = 1\n),\nUPD_WorkCFA_PolicyList AS (\n\tSELECT\n\tWorkCFAPolicyListId, \n\tStatus, \n\tDefaultDate\n\tFROM AGG_WorkCFAPolicyList\n),\nTGT_WorkCFAPolicyList_CFA AS (\n\tMERGE INTO WorkCFAPolicyList AS T\n\tUSING UPD_WorkCFA_PolicyList AS S\n\tON T.WorkCFAPolicyListId = S.WorkCFAPolicyListId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.Status = S.Status, T.ModifiedDate = S.DefaultDate\n),\nTGT_PremiumTransaction_CFA_Insert AS (\n\tINSERT INTO PremiumTransaction\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, LogicalDeleteFlag, PremiumTransactionHashKey, PremiumLoadSequence, DuplicateSequence, PremiumTransactionAKID, ReinsuranceCoverageAKID, StatisticalCoverageAKID, PremiumTransactionKey, PMSFunctionCode, PremiumTransactionCode, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, PremiumTransactionBookedDate, PremiumTransactionAmount, FullTermPremium, PremiumType, ReasonAmendedCode, OffsetOnsetCode, SupPremiumTransactionCodeId, RatingCoverageAKId, DeductibleAmount, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PackageModificationAdjustmentFactor, PackageModificationAdjustmentGroupCode, IncreasedLimitFactor, IncreasedLimitGroupCode, YearBuilt, AgencyActualCommissionRate, BaseRate, ConstructionCode, StateRatingEffectiveDate, IndividualRiskPremiumModification, WindCoverageFlag, DeductibleBasis, ExposureBasis, TransactionCreatedUserId, ServiceCentreName, Exposure, NumberOfEmployee, NegateRestateCode, WrittenExposure, DeclaredEventFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\to_AuditId AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tDefaultDate AS CREATEDDATE, \n\tDefaultDate AS MODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tLOGICALDELETEFLAG, \n\to_PremiumTransactionHashKey AS PREMIUMTRANSACTIONHASHKEY, \n\tPREMIUMLOADSEQUENCE, \n\tDUPLICATESEQUENCE, \n\to_PremiumTransactionAKID AS PREMIUMTRANSACTIONAKID, \n\tREINSURANCECOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\to_PremiumTransactionKey AS PREMIUMTRANSACTIONKEY, \n\tPMSFUNCTIONCODE, \n\tPREMIUMTRANSACTIONCODE, \n\tCFATransactionCreatedDate AS PREMIUMTRANSACTIONENTEREDDATE, \n\to_CFATransactionEffectiveDate AS PREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONEXPIRATIONDATE, \n\to_BookedDate AS PREMIUMTRANSACTIONBOOKEDDATE, \n\to_PremiumTransactionAmount AS PREMIUMTRANSACTIONAMOUNT, \n\tFULLTERMPREMIUM, \n\tPREMIUMTYPE, \n\to_ReasonAmendedCode AS REASONAMENDEDCODE, \n\tOFFSETONSETCODE, \n\tSUPPREMIUMTRANSACTIONCODEID, \n\tCFARatingCoverageAKID AS RATINGCOVERAGEAKID, \n\tDEDUCTIBLEAMOUNT, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tEXPERIENCEMODIFICATIONEFFECTIVEDATE, \n\tPACKAGEMODIFICATIONADJUSTMENTFACTOR, \n\tPACKAGEMODIFICATIONADJUSTMENTGROUPCODE, \n\tINCREASEDLIMITFACTOR, \n\tINCREASEDLIMITGROUPCODE, \n\tYEARBUILT, \n\tAGENCYACTUALCOMMISSIONRATE, \n\tBASERATE, \n\tCONSTRUCTIONCODE, \n\tSTATERATINGEFFECTIVEDATE, \n\tINDIVIDUALRISKPREMIUMMODIFICATION, \n\tWINDCOVERAGEFLAG, \n\tDEDUCTIBLEBASIS, \n\tEXPOSUREBASIS, \n\tTRANSACTIONCREATEDUSERID, \n\tSERVICECENTRENAME, \n\tEXPOSURE, \n\tNUMBEROFEMPLOYEE, \n\tNEGATERESTATECODE, \n\tWRITTENEXPOSURE, \n\tDECLAREDEVENTFLAG\n\tFROM EXP_Input_CFA\n),\nTGT_WorkCFAPremiumTransactionXRef_Insert AS (\n\tINSERT INTO WorkCFAPremiumTransactionXRef\n\t(WorkCFARatingCoverageXRefId, WorkCFAPolicyListId, PolicyKey, TransactionCreatedDate, LineageId, OriginalPremiumTransactionID, OriginalPremiumTransactionAKID, OriginalPremiumTransactionHashKey, OriginalPremiumTransactionAmount, CFAPremiumTransactionAKID, CFAPremiumTransactionHashKey, CFAPremiumTransactionAmount, AuditId, SourceSysId, CreatedDate, ModifiedDate)\n\tSELECT \n\tWORKCFARATINGCOVERAGEXREFID, \n\tWORKCFAPOLICYLISTID, \n\tPOLICYKEY, \n\tCFATransactionCreatedDate AS TRANSACTIONCREATEDDATE, \n\tLINEAGEID, \n\tPremiumTransactionID AS ORIGINALPREMIUMTRANSACTIONID, \n\tPremiumTransactionAKID AS ORIGINALPREMIUMTRANSACTIONAKID, \n\tPremiumTransactionHashKey AS ORIGINALPREMIUMTRANSACTIONHASHKEY, \n\tPremiumTransactionAmount AS ORIGINALPREMIUMTRANSACTIONAMOUNT, \n\to_PremiumTransactionAKID AS CFAPREMIUMTRANSACTIONAKID, \n\to_PremiumTransactionHashKey AS CFAPREMIUMTRANSACTIONHASHKEY, \n\to_PremiumTransactionAmount AS CFAPREMIUMTRANSACTIONAMOUNT, \n\to_AuditId AS AUDITID, \n\tSourceSystemID AS SOURCESYSID, \n\tDefaultDate AS CREATEDDATE, \n\tDefaultDate AS MODIFIEDDATE\n\tFROM EXP_Input_CFA\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905512"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604108"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:12:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:29:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "WHERE_CLAUSE_RC": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CFA": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}