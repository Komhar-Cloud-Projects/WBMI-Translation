{
    "name": "s_m_POL_DM_LOAD_RiskLocationDim",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_RiskLocationDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_RiskLocation AS (\n\tSELECT RiskLocationHashKey, \r\n\tLocationUnitNumber, \r\n\tRiskLocationID, \r\n\tLocationIndicator, \r\n\tRiskTerritory, \r\n\tZipPostalCode, \r\n\tTaxLocation, \r\n\tsup_state_id, \r\n\tRatingCity, \r\n\tRatingCounty, \r\n\tTaxCode, \r\n\tStreetAddress, \r\n\tISOFireProtectCity, \r\n\tISOFireProtectCounty \r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation \r\n\tWHERE CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND CurrentSnapshotFlag=1\r\n\t\r\n\tORDER BY RiskLocationHashKey, LocationUnitNumber, \r\n\tcase when TaxLocation='N/A' then 0 else 1 end,RiskLocationID\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tRiskLocationHashKey,\n\tLocationUnitNumber,\n\tRiskLocationID,\n\tLocationIndicator,\n\tRiskTerritory,\n\tZipPostalCode,\n\tTaxLocation,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tTaxCode,\n\tStreetAddress,\n\tISOFireProtectCity,\n\tISOFireProtectCounty\n\tFROM SQ_RiskLocation\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationHashKey ORDER BY NULL) = 1\n),\nEXP_Def_Values AS (\n\tSELECT\n\tRiskLocationHashKey,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\t-- *INF*: IIF(LocationIndicator =  'Y',LocationUnitNumber,'N/A')\n\tIFF(LocationIndicator = 'Y', LocationUnitNumber, 'N/A') AS LocationNumber,\n\tRiskTerritory,\n\tZipPostalCode,\n\tTaxLocation,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tTaxCode,\n\tStreetAddress,\n\tISOFireProtectCity,\n\tISOFireProtectCounty\n\tFROM AGG_RemoveDuplicates\n),\nLKP_SupState AS (\n\tSELECT\n\tstate_code,\n\tstate_abbrev,\n\tsup_state_id\n\tFROM (\n\t\tSELECT \n\t\t\tstate_code,\n\t\t\tstate_abbrev,\n\t\t\tsup_state_id\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id='EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY sup_state_id ORDER BY state_code) = 1\n),\nlkp_RiskLocationDim AS (\n\tSELECT\n\tLocationNumber,\n\tRiskTerritory,\n\tTaxLocation,\n\tRatingCounty,\n\tTaxCode,\n\tISOFireProtectCity,\n\tISOFireProtectCounty,\n\tRiskLocationHashKey,\n\tRiskLocationDimID\n\tFROM (\n\t\tSELECT \n\t\t\tLocationNumber,\n\t\t\tRiskTerritory,\n\t\t\tTaxLocation,\n\t\t\tRatingCounty,\n\t\t\tTaxCode,\n\t\t\tISOFireProtectCity,\n\t\t\tISOFireProtectCounty,\n\t\t\tRiskLocationHashKey,\n\t\t\tRiskLocationDimID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationHashKey ORDER BY LocationNumber) = 1\n),\nExp_RiskLocationDimINS AS (\n\tSELECT\n\tlkp_RiskLocationDim.LocationNumber AS lkp_LocationNumber,\n\tLKP_SupState.state_code AS lkp_state_code,\n\tLKP_SupState.state_abbrev AS lkp_state_abbrev,\n\tlkp_RiskLocationDim.RiskTerritory AS lkp_RiskTerritory,\n\tlkp_RiskLocationDim.TaxLocation AS lkp_TaxLocation,\n\tlkp_RiskLocationDim.RatingCounty AS lkp_RatingCounty,\n\tlkp_RiskLocationDim.TaxCode AS lkp_TaxCode,\n\tlkp_RiskLocationDim.ISOFireProtectCity AS lkp_ISOFireProtectCity,\n\tlkp_RiskLocationDim.ISOFireProtectCounty AS lkp_ISOFireProtectCounty,\n\tlkp_RiskLocationDim.RiskLocationHashKey AS lkp_RiskLocationHashKey,\n\tlkp_RiskLocationDim.RiskLocationDimID AS lkp_RiskLocationDimID,\n\tEXP_Def_Values.RiskLocationHashKey,\n\tEXP_Def_Values.LocationNumber,\n\tEXP_Def_Values.RiskTerritory,\n\tEXP_Def_Values.ZipPostalCode,\n\tEXP_Def_Values.TaxLocation,\n\tEXP_Def_Values.RatingCity,\n\tEXP_Def_Values.RatingCounty,\n\tEXP_Def_Values.TaxCode,\n\tEXP_Def_Values.StreetAddress,\n\tEXP_Def_Values.ISOFireProtectCity,\n\tEXP_Def_Values.ISOFireProtectCounty,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_RiskLocationHashKey),1,\r\n\t-- lkp_LocationNumber != LocationNumber \r\n\t-- OR lkp_RiskTerritory!=RiskTerritory \r\n\t-- OR lkp_TaxLocation!=TaxLocation \r\n\t-- OR lkp_RatingCounty!=RatingCounty \r\n\t-- OR lkp_TaxCode!=TaxCode \r\n\t-- OR lkp_ISOFireProtectCity != ISOFireProtectCity \r\n\t-- OR lkp_ISOFireProtectCounty != ISOFireProtectCounty,2,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    lkp_RiskLocationHashKey IS NULL, 1,\n\t    lkp_LocationNumber != LocationNumber OR lkp_RiskTerritory != RiskTerritory OR lkp_TaxLocation != TaxLocation OR lkp_RatingCounty != RatingCounty OR lkp_TaxCode != TaxCode OR lkp_ISOFireProtectCity != ISOFireProtectCity OR lkp_ISOFireProtectCounty != ISOFireProtectCounty, 2,\n\t    0\n\t) AS o_ChangeFlag,\n\t1 AS o_crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\tSYSDATE AS o_createddate,\n\tSYSDATE AS o_modifieddate,\n\t-- *INF*: IIF(ISNULL(lkp_state_code) OR IS_SPACES(lkp_state_code) OR LENGTH(lkp_state_code)=0,'N/A',LTRIM(RTRIM(lkp_state_code)))\n\tIFF(\n\t    lkp_state_code IS NULL\n\t    or LENGTH(lkp_state_code)>0\n\t    and TRIM(lkp_state_code)=''\n\t    or LENGTH(lkp_state_code) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(lkp_state_code))\n\t) AS o_StateProvinceCode,\n\t-- *INF*: IIF(ISNULL(lkp_state_abbrev) OR IS_SPACES(lkp_state_abbrev) OR LENGTH(lkp_state_abbrev)=0, 'N/A',LTRIM(RTRIM(lkp_state_abbrev)))\n\tIFF(\n\t    lkp_state_abbrev IS NULL\n\t    or LENGTH(lkp_state_abbrev)>0\n\t    and TRIM(lkp_state_abbrev)=''\n\t    or LENGTH(lkp_state_abbrev) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(lkp_state_abbrev))\n\t) AS o_StateProvinceCodeAbbreviation\n\tFROM EXP_Def_Values\n\tLEFT JOIN LKP_SupState\n\tON LKP_SupState.sup_state_id = EXP_Def_Values.sup_state_id\n\tLEFT JOIN lkp_RiskLocationDim\n\tON lkp_RiskLocationDim.RiskLocationHashKey = EXP_Def_Values.RiskLocationHashKey\n),\nRTR_InsertOrUpdate AS (\n\tSELECT\n\to_ChangeFlag AS ChangeFlag,\n\tlkp_RiskLocationDimID AS RiskLocationDimID,\n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag,\n\to_audit_id AS audit_id,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_createddate AS createddate,\n\to_modifieddate AS modifieddate,\n\tLocationNumber,\n\tRiskTerritory,\n\to_StateProvinceCodeAbbreviation AS StateProvinceCode,\n\to_StateProvinceCode AS StateProvinceCodeAbbreviation,\n\tZipPostalCode,\n\tTaxLocation,\n\tRatingCity,\n\tRatingCounty,\n\tTaxCode,\n\tRiskLocationHashKey,\n\tStreetAddress,\n\tISOFireProtectCity,\n\tISOFireProtectCounty\n\tFROM Exp_RiskLocationDimINS\n),\nRTR_InsertOrUpdate_INSERT AS (SELECT * FROM RTR_InsertOrUpdate WHERE ChangeFlag=1),\nRTR_InsertOrUpdate_UPDATE AS (SELECT * FROM RTR_InsertOrUpdate WHERE ChangeFlag=2),\nUPD_RiskLocationDim AS (\n\tSELECT\n\tRiskLocationDimID, \n\tmodifieddate AS ModifiedDate, \n\tLocationNumber, \n\tRiskTerritory, \n\tTaxLocation, \n\tRatingCounty, \n\tTaxCode, \n\tISOFireProtectCity, \n\tISOFireProtectCounty\n\tFROM RTR_InsertOrUpdate_UPDATE\n),\nTGT_RiskLocationDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim AS T\n\tUSING UPD_RiskLocationDim AS S\n\tON T.RiskLocationDimID = S.RiskLocationDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.LocationNumber = S.LocationNumber, T.RiskTerritory = S.RiskTerritory, T.TaxLocation = S.TaxLocation, T.RatingCounty = S.RatingCounty, T.TaxCode = S.TaxCode, T.ISOFireProtectCity = S.ISOFireProtectCity, T.ISOFireProtectCounty = S.ISOFireProtectCounty\n),\nTGT_RiskLocationDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, LocationNumber, RiskTerritory, StateProvinceCode, StateProvinceCodeAbbreviation, ZipPostalCode, TaxLocation, RatingCity, RatingCounty, TaxCode, RiskLocationHashKey, StreetAddress, ISOFireProtectCity, ISOFireProtectCounty)\n\tSELECT \n\tcrrnt_snpsht_flag AS CURRENTSNAPSHOTFLAG, \n\taudit_id AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tcreateddate AS CREATEDDATE, \n\tmodifieddate AS MODIFIEDDATE, \n\tLOCATIONNUMBER, \n\tRISKTERRITORY, \n\tSTATEPROVINCECODE, \n\tSTATEPROVINCECODEABBREVIATION, \n\tZIPPOSTALCODE, \n\tTAXLOCATION, \n\tRATINGCITY, \n\tRATINGCOUNTY, \n\tTAXCODE, \n\tRISKLOCATIONHASHKEY, \n\tSTREETADDRESS, \n\tISOFIREPROTECTCITY, \n\tISOFIREPROTECTCOUNTY\n\tFROM RTR_InsertOrUpdate_INSERT\n),\nSQ_RiskLocationDim_DCT_IL_TaxLoc_Dataplug AS (\n\tSELECT \r\n\tRD.RiskLocationDimid,\r\n\tIL.TaxLocation\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim RD\r\n\tinner join\r\n\t(select distinct \r\n\tRL.risklocationhashkey,\r\n\tRL.taxlocation\r\n\tfrom \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.risklocation RL\r\n\tinner join\r\n\tsup_state S\r\n\ton S.state_code = 'IL' and S.sup_state_id = RL.sup_state_id\r\n\twhere CurrentSnapshotFlag = 1 and SourceSystemID = 'DCT' \r\n\t) IL\r\n\ton RD.RiskLocationHashKey = IL.RiskLocationHashKey\r\n\tand RD.TaxLocation <> IL.TaxLocation\r\n\tORDER BY \r\n\tRD.RiskLocationDimid,\r\n\tcase when IL.TaxLocation = 'N/A' then 0\r\n\telse 1 end,\r\n\tIL.TaxLocation\n),\nAGG_Remove_Dups_with_TaxLoc_NA AS (\n\tSELECT\n\tRiskLocationDimID,\n\tTaxLocation\n\tFROM SQ_RiskLocationDim_DCT_IL_TaxLoc_Dataplug\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationDimID ORDER BY NULL) = 1\n),\nFIL_TaxLoc AS (\n\tSELECT\n\tRiskLocationDimID, \n\tTaxLocation\n\tFROM AGG_Remove_Dups_with_TaxLoc_NA\n\tWHERE TaxLocation != 'N/A'\n),\nEXP_TaxLoc AS (\n\tSELECT\n\tRiskLocationDimID,\n\tTaxLocation\n\tFROM FIL_TaxLoc\n),\nUPD_RiskLocationDim_DCT_TaxLoc AS (\n\tSELECT\n\tRiskLocationDimID, \n\tTaxLocation\n\tFROM EXP_TaxLoc\n),\nTGT_RiskLocationDim_Update_DCT_TaxLoc AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim AS T\n\tUSING UPD_RiskLocationDim_DCT_TaxLoc AS S\n\tON T.RiskLocationDimID = S.RiskLocationDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.TaxLocation = S.TaxLocation\n),\nSQ_RiskLocationDim_DCT_IL_ISOCity_Dataplug AS (\n\tSELECT \r\n\tRD.RiskLocationDimid,\r\n\tIL.ISOFireProtectCity\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim RD\r\n\tinner join\r\n\t(select distinct \r\n\tRL.risklocationhashkey,\r\n\tRL.ISOFireProtectCity\r\n\tfrom \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.risklocation RL\r\n\tinner join\r\n\tsup_state S\r\n\ton S.state_code = 'IL' and S.sup_state_id = RL.sup_state_id\r\n\twhere CurrentSnapshotFlag = 1 and SourceSystemID = 'DCT' \r\n\t) IL\r\n\ton RD.RiskLocationHashKey = IL.RiskLocationHashKey\r\n\tand RD.ISOFireProtectCity <> IL.ISOFireProtectCity\r\n\tORDER BY \r\n\tRD.RiskLocationDimid,\r\n\tcase when IL.ISOFireProtectCity = 'N/A' then 0\r\n\telse 1 end,\r\n\tIL.ISOFireProtectCity\n),\nAGG_Remove_Dups_with_TaxLoc_NA1 AS (\n\tSELECT\n\tRiskLocationDimID,\n\tISOFireProtectCity\n\tFROM SQ_RiskLocationDim_DCT_IL_ISOCity_Dataplug\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationDimID ORDER BY NULL) = 1\n),\nFIL_ISOCity AS (\n\tSELECT\n\tRiskLocationDimID, \n\tISOFireProtectCity\n\tFROM AGG_Remove_Dups_with_TaxLoc_NA1\n\tWHERE ISOFireProtectCity != 'N/A'\n),\nEXP_ISOCity AS (\n\tSELECT\n\tRiskLocationDimID,\n\tISOFireProtectCity\n\tFROM FIL_ISOCity\n),\nUPD_RiskLocationDim_DCT_ISOCity AS (\n\tSELECT\n\tRiskLocationDimID, \n\tISOFireProtectCity\n\tFROM EXP_ISOCity\n),\nTGT_RiskLocationDim_Update_DCT_ISOCity AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim AS T\n\tUSING UPD_RiskLocationDim_DCT_ISOCity AS S\n\tON T.RiskLocationDimID = S.RiskLocationDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ISOFireProtectCity = S.ISOFireProtectCity\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataMart/"
        },
        "annotations": []
    }
}