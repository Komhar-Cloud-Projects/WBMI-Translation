{
    "name": "s_m_POL_CUS_DW_LOAD_PremiumTransaction_DataLineage_AutoReShreds",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_PremiumTransaction_DataLineage_Aut_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_IDO_Data AS (\n\tSelect distinct WBE.PolicyNumber,\r\n\tWBE.PolicyVersion,\r\n\tDT.HistoryID,\r\n\tDT.Type,\r\n\tISNULL(DT.TransactionDate,DT.CreatedDate) TransactionDate, \r\n\tWBE.Purpose,\r\n\tWBE.SessionId,\r\n\tDC.CoverageId,\r\n\tDC.ID CoverageGuid,\r\n\tDTR.[Index],\r\n\tDTR.[Sequence]\r\n\tFrom @{pipeline().parameters.WBEXAMPLEDATA_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions WBE\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\ton WBE.SessionId=DT.SessionID\r\n\tand WBE.HistoryID=DT.HistoryID\r\n\tand WBE.ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage DC\r\n\ton DT.SessionId=DC.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_TransactionReportEntry DTR\r\n\ton DT.Sessionid=DTR.Sessionid\r\n\twhere WBE.Autoshred='1'\r\n\tand WBE.Indicator='1'\r\n\tand DT.Type @{pipeline().parameters.EXCLUDE_TTYPE}\n),\nEXP_IDO_Data AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersion,\n\tPolicyNumber || PolicyVersion AS Pol_key,\n\tHistoryID,\n\tType,\n\tTransactionDate,\n\tPurpose,\n\tSessionId,\n\tCoverageId,\n\tId,\n\tIndex,\n\tSequence\n\tFROM SQ_IDO_Data\n),\nLKP_RatingCoverageAKID AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tIN_pol_key,\n\tIN_CoverageGUID,\n\tIN_TransactionDate,\n\tPol_key,\n\tCoverageGUID,\n\tEffectiveDate\n\tFROM (\n\t\tselect distinct RC.RatingCoverageAKID as RatingCoverageAKID,\r\n\t\tP.Pol_key as Pol_key,\r\n\t\tRC.CoverageGUID as CoverageGUID,\r\n\t\tRC.EffectiveDate as EffectiveDate\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\t\tinner join @{pipeline().parameters.STAGE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBEDWIncrementalDataQualitySessions W\r\n\t\ton P.pol_key=W.PolicyNumber+W.PolicyVersion\r\n\t\tand P.source_sys_id='DCT'\r\n\t\tand P.crrnt_snpsht_flag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton P.pol_ak_id=cast(substring(RC.RatingCoverageKey,1,charindex('~',RC.RatingCoverageKey,1)-1) as bigint)\r\n\t\tand RC.PolicyCoverageAKID<>-1\r\n\t\twhere W.Autoshred='1'\r\n\t\tand W.Indicator='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Pol_key,CoverageGUID,EffectiveDate ORDER BY RatingCoverageAKID) = 1\n),\nEXP_IDO_PTHashKey AS (\n\tSELECT\n\tEXP_IDO_Data.Pol_key,\n\tEXP_IDO_Data.HistoryID,\n\tEXP_IDO_Data.Type,\n\tEXP_IDO_Data.TransactionDate,\n\tEXP_IDO_Data.Purpose,\n\tEXP_IDO_Data.SessionId,\n\tEXP_IDO_Data.CoverageId,\n\tEXP_IDO_Data.Id,\n\tEXP_IDO_Data.Index,\n\tEXP_IDO_Data.Sequence,\n\tLKP_RatingCoverageAKID.RatingCoverageAKID,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Onset' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Onset' || 'Onset') AS Onset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Offset' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Offset' || 'Onset') AS Offset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'N/A' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'N/A' || 'Onset') AS NA_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Onset' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Onset' || 'Offset') AS DepOnset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Offset' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Offset' || 'Offset') AS DepOffset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'N/A' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'N/A' || 'Offset') AS DepNA_HashKey\n\tFROM EXP_IDO_Data\n\tLEFT JOIN LKP_RatingCoverageAKID\n\tON LKP_RatingCoverageAKID.Pol_key = EXP_IDO_Data.Pol_key AND LKP_RatingCoverageAKID.CoverageGUID = EXP_IDO_Data.Id AND LKP_RatingCoverageAKID.EffectiveDate = EXP_IDO_Data.TransactionDate\n),\nSQ_PremiumTransaction AS (\n\tSELECT Distinct D.PremiumTransactionID, D.PremiumTransactionHashKey, D.PremiumTransactionAKID \r\n\tFROM @{pipeline().parameters.STAGE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCCoverageStaging A\r\n\tinner join (\r\n\tselect B.Historyid,C.Purpose,max(B.Sessionid) Sessionid from @{pipeline().parameters.STAGE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBEDWIncrementalDataQualitySessions A\r\n\tinner Join @{pipeline().parameters.STAGE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCTransactionStaging B\r\n\ton A.HistoryID=B.HistoryID\r\n\tinner join @{pipeline().parameters.STAGE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCSessionStaging C\r\n\ton B.SessionId=C.SessionId\r\n\twhere A.Autoshred='1'\r\n\tand A.Indicator='1'\r\n\tgroup by B.Historyid,C.Purpose) B\r\n\ton A.SessionId=B.Sessionid\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchWorkPremiumTransaction C\r\n\ton A.CoverageId=C.PremiumTransactionStageId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction D\r\n\ton C.PremiumTransactionAKId=D.PremiumTransactionAKID\n),\nJNR_DEP_NA AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepNA_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepNA_HashKey\n),\nJNR_DEP_OFFSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepOffset_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepOffset_HashKey\n),\nJNR_DEP_ONSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepOnset_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepOnset_HashKey\n),\nJNR_NA AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.NA_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.NA_HashKey\n),\nJNR_OFFSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.Offset_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.Offset_HashKey\n),\nJNR_ONSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.Onset_HashKey, \n\tEXP_IDO_PTHashKey.Index, \n\tEXP_IDO_PTHashKey.Sequence, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.Onset_HashKey\n),\nUnion_ALL AS (\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_ONSET\n\tUNION\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_OFFSET\n\tUNION\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_NA\n\tUNION\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_DEP_ONSET\n\tUNION\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_DEP_OFFSET\n\tUNION\n\tSELECT CoverageId, Index, Sequence, PremiumTransactionID, PremiumTransactionAKID\n\tFROM JNR_DEP_NA\n),\nUPD_Tracking AS (\n\tSELECT\n\tPremiumTransactionID, \n\tIndex, \n\tSequence\n\tFROM Union_ALL\n),\nWorkDCTPremiumTransactionTracking AS (\n\tMERGE INTO WorkDCTPremiumTransactionTracking AS T\n\tUSING UPD_Tracking AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.DCTTransactionSequence = S.Sequence, T.DCTTransactionIndex = S.Index\n),\nEXP_TGT_DataCollect AS (\n\tSELECT\n\t-999 AS AuditID,\n\t'DCT' AS SourceSystemID,\n\tCURRENT_TIMESTAMP AS CreatedDate,\n\tPremiumTransactionAKID AS PremiumTransactionAKId,\n\tCoverageId AS PremiumTransactionStageId,\n\tIndex,\n\tSequence\n\tFROM Union_ALL\n),\nArchWorkPremiumTransaction AS (\n\tINSERT INTO ArchWorkPremiumTransaction\n\t(WorkPremiumTransactionId, AuditID, SourceSystemID, CreatedDate, PremiumTransactionAKId, PremiumTransactionStageId)\n\tSELECT \n\tAuditID AS WORKPREMIUMTRANSACTIONID, \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tPREMIUMTRANSACTIONAKID, \n\tPREMIUMTRANSACTIONSTAGEID\n\tFROM EXP_TGT_DataCollect\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905451"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7602777"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:00:17"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:00:17"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "DBCONNECTION_SOURCE_IDO": {
                "type": "string",
                "defaultValue": "SQLServer_ExampleIDO_Customer"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "v2"
            },
            "WBEXAMPLEDATA_DATABASE": {
                "type": "string",
                "defaultValue": "WBExampleData"
            },
            "STAGE_DATABASE": {
                "type": "string",
                "defaultValue": "WC_STAGE"
            },
            "EXCLUDE_TTYPE": {
                "type": "string",
                "defaultValue": "NOT IN ('RescindNonRenew','Reporting','VoidReporting','Information','Rescind','Dividend','RevisedDividend','VoidDividend','NonRenew','RescindCancelPending','CancelPending')"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}