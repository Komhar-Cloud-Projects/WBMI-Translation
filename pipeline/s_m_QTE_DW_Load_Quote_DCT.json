{
    "name": "s_m_QTE_DW_Load_Quote_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_QTE_DW_Load_Quote_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_V2_Agency AS (\n\tSELECT\n\tAgencyAKID,\n\tAgencyCode\n\tFROM (\n\t\tSELECT \n\t\t\tAgencyAKID,\n\t\t\tAgencyCode\n\t\tFROM V2.Agency\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode ORDER BY AgencyAKID) = 1\n),\nLKP_AgencyEmployee AS (\n\tSELECT\n\tAgencyEmployeeAKID,\n\tUserID,\n\tAgencyAKID\n\tFROM (\n\t\tSELECT \r\n\t\tAgencyEmployeeAKID as AgencyEmployeeAKID, \r\n\t\tUPPER(LTRIM(RTRIM(UserID))) as UserID, \r\n\t\tAgencyAKID as AgencyAKID \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.AgencyEmployee\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UserID,AgencyAKID ORDER BY AgencyEmployeeAKID) = 1\n),\nSQ_Quote AS (\n\tSELECT\n\t\tPolicyGUId,\n\t\tQuoteActionTimeStamp,\n\t\tSessionId,\n\t\tQuoteActionStatus,\n\t\tRejectedReason,\n\t\tRejectedReasonDetails,\n\t\tPolicyEffectiveDate,\n\t\tPolicyExpirationDate,\n\t\tQuoteActionUserClassification,\n\t\tQuoteActionUserName,\n\t\tPrimaryRatingState,\n\t\tPolicyNumber,\n\t\tDivision,\n\t\tPolicyProgram,\n\t\tPolicyVersion,\n\t\tWBProduct,\n\t\tWBProductType,\n\t\tLineType,\n\t\tBCCCode,\n\t\tAgencyCode,\n\t\tEstimatedQuotePremium,\n\t\tPolicyIssueCodeDesc,\n\t\tPolicyIssueCodeOverride,\n\t\tTransactionDate,\n\t\tProducerName,\n\t\tIssuedUWID,\n\t\tIssuedUnderwriter,\n\t\tExternalQuoteSource,\n\t\tTurnstileGenerated,\n\t\tPenguinTechGenerated,\n\t\tLCSurveyOrderedIndicator,\n\t\tLCSurveyOrderedDate,\n\t\tExpiredReason,\n\t\tExpiredReasonDetails,\n\t\tCustomerCare AS ServCenterSupportCode,\n\t\tIsRollover AS RolloverPolicyIndicator,\n\t\tPriorCarrierName AS RolloverPriorCarrier,\n\t\tPirorCarrierNameOther\n\tFROM WorkDCTPolicy\n\tON WorkDCTPolicy.QuoteActionTimeStamp is not null\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tPolicyGUId AS QuoteKey,\n\tQuoteActionTimeStamp,\n\tSessionId AS i_SessionId,\n\tQuoteActionStatus,\n\tRejectedReason,\n\tRejectedReasonDetails,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tQuoteActionUserClassification,\n\tQuoteActionUserName,\n\tPrimaryRatingState,\n\tPolicyNumber,\n\tDivision,\n\tPolicyProgram,\n\tPolicyVersion,\n\tWBProduct,\n\tWBProductType,\n\tLineType,\n\tBCCCode,\n\tAgencyCode,\n\tEstimatedQuotePremium,\n\tPolicyIssueCodeDesc,\n\tPolicyIssueCodeOverride,\n\tTransactionDate,\n\tProducerName,\n\tIssuedUWID,\n\tIssuedUnderwriter,\n\tExternalQuoteSource,\n\tTurnstileGenerated,\n\tPenguinTechGenerated,\n\tLCSurveyOrderedIndicator,\n\tLCSurveyOrderedDate,\n\tExpiredReason,\n\tExpiredReasonDetails,\n\tServCenterSupportCode,\n\tRolloverPolicyIndicator,\n\tRolloverPriorCarrier,\n\tPirorCarrierNameOther\n\tFROM SQ_Quote\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteKey, QuoteActionTimeStamp ORDER BY NULL) = 1\n),\nEXP_GetValues AS (\n\tSELECT\n\tQuoteKey AS i_QuoteKey,\n\tQuoteActionTimeStamp AS i_QuoteActionTimeStamp,\n\tQuoteActionStatus AS i_QuoteActionStatus,\n\tRejectedReason AS i_RejectedReason,\n\tRejectedReasonDetails AS i_RejectedReasonDetails,\n\tPolicyEffectiveDate AS i_PolicyEffectiveDate,\n\tPolicyExpirationDate AS i_PolicyExpirationDate,\n\tQuoteActionUserClassification AS i_QuoteActionUserClassification,\n\tQuoteActionUserName AS i_QuoteActionUserName,\n\tPrimaryRatingState AS i_PrimaryRatingState,\n\tPolicyNumber AS i_PolicyNumber,\n\tDivision AS i_Division,\n\tPolicyProgram AS i_PolicyProgram,\n\tPolicyVersion AS i_PolicyVersion,\n\tWBProduct AS i_WBProduct,\n\tWBProductType AS i_WBProductType,\n\tLineType AS i_LineType,\n\tBCCCode AS i_BCCCode,\n\tAgencyCode AS i_AgencyCode,\n\tEstimatedQuotePremium AS i_EstimatedQuotePremium,\n\tPolicyIssueCodeDesc AS i_PolicyIssueCodeDesc,\n\t-- *INF*: IIF (ISNULL(i_PolicyIssueCodeDesc),'N',SUBSTR(i_PolicyIssueCodeDesc,1,1))\n\tIFF(i_PolicyIssueCodeDesc IS NULL, 'N', SUBSTR(i_PolicyIssueCodeDesc, 1, 1)) AS o_QuoteIssueCode,\n\tPolicyIssueCodeOverride,\n\t-- *INF*: IIF(NOT ISNULL(i_AgencyCode),LTRIM(RTRIM(i_AgencyCode)),'N/A')\n\tIFF(i_AgencyCode IS NOT NULL, LTRIM(RTRIM(i_AgencyCode)), 'N/A') AS v_AgencyCode,\n\t-- *INF*: :LKP.LKP_V2_AGENCY(v_AgencyCode)\n\tLKP_V2_AGENCY_v_AgencyCode.AgencyAKID AS v_AgencyAKId,\n\t-- *INF*: substr(in_ProducerName,11)\r\n\t-- \r\n\t-- --REPLACESTR(0,UPPER(LTRIM(RTRIM(i_QuoteActionUserName))),'WBMI\\','WBCONNECT\\','WBENP\\','')\n\tsubstr(in_ProducerName, 11) AS v_ProducerName,\n\t-- *INF*: :LKP.LKP_AGENCYEMPLOYEE(v_ProducerName, v_AgencyAKId)\n\tLKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKId.AgencyEmployeeAKID AS v_AgencyEmployeeAKId,\n\t-- *INF*: :LKP.LKP_V2_AGENCY('99999')\n\tLKP_V2_AGENCY__99999.AgencyAKID AS v_AgencyAKID_99999,\n\t-- *INF*: :LKP.LKP_AGENCYEMPLOYEE(v_ProducerName, v_AgencyAKID_99999)\n\tLKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKID_99999.AgencyEmployeeAKID AS v_AgencyEmployeeAKId_99999,\n\ti_QuoteActionStatus AS QuoteStatusCode,\n\t-1 AS UnderwritingAssociateAKId,\n\t-- *INF*: DECODE(TRUE,\r\n\t--  NOT ISNULL(v_AgencyEmployeeAKId),\r\n\t-- v_AgencyEmployeeAKId,\r\n\t--  NOT ISNULL(v_AgencyEmployeeAKId_99999),\r\n\t-- v_AgencyEmployeeAKId_99999,\r\n\t-- -1)\n\tDECODE(\n\t    TRUE,\n\t    v_AgencyEmployeeAKId IS NOT NULL, v_AgencyEmployeeAKId,\n\t    v_AgencyEmployeeAKId_99999 IS NOT NULL, v_AgencyEmployeeAKId_99999,\n\t    - 1\n\t) AS AgencyEmployeeAKId,\n\ti_QuoteActionTimeStamp AS StatusDate,\n\t-- *INF*: IIF(ISNULL(i_RejectedReason) OR IS_SPACES(i_RejectedReason) OR LENGTH(i_RejectedReason)=0,'-1',LTRIM(RTRIM(i_RejectedReason)))\n\tIFF(\n\t    i_RejectedReason IS NULL\n\t    or LENGTH(i_RejectedReason)>0\n\t    and TRIM(i_RejectedReason)=''\n\t    or LENGTH(i_RejectedReason) = 0,\n\t    '-1',\n\t    LTRIM(RTRIM(i_RejectedReason))\n\t) AS ReasonCode,\n\t-- *INF*: IIF(ISNULL(i_RejectedReasonDetails) OR IS_SPACES(i_RejectedReasonDetails) OR LENGTH(i_RejectedReasonDetails)=0,'N/A',LTRIM(RTRIM(i_RejectedReasonDetails)))\n\tIFF(\n\t    i_RejectedReasonDetails IS NULL\n\t    or LENGTH(i_RejectedReasonDetails)>0\n\t    and TRIM(i_RejectedReasonDetails)=''\n\t    or LENGTH(i_RejectedReasonDetails) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_RejectedReasonDetails))\n\t) AS o_OtherReasonComment,\n\t-- *INF*: IIF(NOT ISNULL(i_PolicyEffectiveDate),i_PolicyEffectiveDate,TO_DATE('18000101','YYYYMMDD'))\n\tIFF(\n\t    i_PolicyEffectiveDate IS NOT NULL, i_PolicyEffectiveDate,\n\t    TO_TIMESTAMP('18000101', 'YYYYMMDD')\n\t) AS QuoteEffectiveDate,\n\t-- *INF*: IIF(NOT ISNULL(i_PolicyExpirationDate),i_PolicyExpirationDate,TO_DATE('18000101','YYYYMMDD'))\n\tIFF(\n\t    i_PolicyExpirationDate IS NOT NULL, i_PolicyExpirationDate,\n\t    TO_TIMESTAMP('18000101', 'YYYYMMDD')\n\t) AS QuoteExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_QuoteKey) OR IS_SPACES(i_QuoteKey) OR LENGTH(i_QuoteKey)=0,'N/A',LTRIM(RTRIM(i_QuoteKey)))\n\tIFF(\n\t    i_QuoteKey IS NULL OR LENGTH(i_QuoteKey)>0 AND TRIM(i_QuoteKey)='' OR LENGTH(i_QuoteKey) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_QuoteKey))\n\t) AS QuoteKey,\n\t-- *INF*: IIF(ISNULL(i_PolicyNumber) OR IS_SPACES(i_PolicyNumber) OR LENGTH(i_PolicyNumber)=0,'N/A',LTRIM(RTRIM(i_PolicyNumber)))\n\tIFF(\n\t    i_PolicyNumber IS NULL\n\t    or LENGTH(i_PolicyNumber)>0\n\t    and TRIM(i_PolicyNumber)=''\n\t    or LENGTH(i_PolicyNumber) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_PolicyNumber))\n\t) AS QuoteNumber,\n\t-- *INF*: IIF(ISNULL(i_PolicyVersion),'00',LPAD(TO_CHAR(i_PolicyVersion),2,'0'))\n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS QuoteVersion,\n\t-- *INF*: IIF(ISNULL(i_PolicyProgram) OR IS_SPACES(i_PolicyProgram) OR LENGTH(i_PolicyProgram)=0,'N/A',LTRIM(RTRIM(i_PolicyProgram)))\n\tIFF(\n\t    i_PolicyProgram IS NULL\n\t    or LENGTH(i_PolicyProgram)>0\n\t    and TRIM(i_PolicyProgram)=''\n\t    or LENGTH(i_PolicyProgram) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_PolicyProgram))\n\t) AS o_ProgramCode,\n\t-- *INF*: IIF(ISNULL(i_BCCCode) OR IS_SPACES(i_BCCCode) OR LENGTH(i_BCCCode)=0,'N/A',IIF(LENGTH(i_BCCCode)<5,LPAD(LTRIM(RTRIM(i_BCCCode)),5,'0'),LTRIM(RTRIM(i_BCCCode))))\n\tIFF(\n\t    i_BCCCode IS NULL OR LENGTH(i_BCCCode)>0 AND TRIM(i_BCCCode)='' OR LENGTH(i_BCCCode) = 0,\n\t    'N/A',\n\t    IFF(\n\t        LENGTH(i_BCCCode) < 5, LPAD(LTRIM(RTRIM(i_BCCCode)), 5, '0'),\n\t        LTRIM(RTRIM(i_BCCCode))\n\t    )\n\t) AS BusinessClassCode,\n\t-- *INF*: IIF(NOT ISNULL(i_QuoteActionUserClassification),i_QuoteActionUserClassification,'N/A')\n\tIFF(i_QuoteActionUserClassification IS NOT NULL, i_QuoteActionUserClassification, 'N/A') AS InternalExternalIndicator,\n\t-- *INF*: IIF(ISNULL(i_PrimaryRatingState) OR IS_SPACES(i_PrimaryRatingState) OR LENGTH(i_PrimaryRatingState)=0,'N/A',LTRIM(RTRIM(i_PrimaryRatingState)))\n\tIFF(\n\t    i_PrimaryRatingState IS NULL\n\t    or LENGTH(i_PrimaryRatingState)>0\n\t    and TRIM(i_PrimaryRatingState)=''\n\t    or LENGTH(i_PrimaryRatingState) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_PrimaryRatingState))\n\t) AS RiskState,\n\t-- *INF*: IIF(ISNULL(i_Division) OR IS_SPACES(i_Division) OR LENGTH(i_Division)=0, 'N/A', LTRIM(RTRIM(i_Division)))\n\tIFF(\n\t    i_Division IS NULL OR LENGTH(i_Division)>0 AND TRIM(i_Division)='' OR LENGTH(i_Division) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_Division))\n\t) AS o_Division,\n\t-- *INF*: IIF(ISNULL(i_WBProduct) OR IS_SPACES(i_WBProduct) OR LENGTH(i_WBProduct)=0, 'N/A', LTRIM(RTRIM(i_WBProduct)))\n\tIFF(\n\t    i_WBProduct IS NULL\n\t    or LENGTH(i_WBProduct)>0\n\t    and TRIM(i_WBProduct)=''\n\t    or LENGTH(i_WBProduct) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_WBProduct))\n\t) AS o_WBProduct,\n\t-- *INF*: IIF(ISNULL(i_WBProductType) OR IS_SPACES(i_WBProductType) OR LENGTH(i_WBProductType)=0, 'N/A', LTRIM(RTRIM(i_WBProductType)))\n\tIFF(\n\t    i_WBProductType IS NULL\n\t    or LENGTH(i_WBProductType)>0\n\t    and TRIM(i_WBProductType)=''\n\t    or LENGTH(i_WBProductType) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_WBProductType))\n\t) AS o_WBProductType,\n\t-- *INF*: IIF(ISNULL(i_LineType) OR IS_SPACES(i_LineType) OR LENGTH(i_LineType)=0, 'N/A', LTRIM(RTRIM(i_LineType)))\n\tIFF(\n\t    i_LineType IS NULL OR LENGTH(i_LineType)>0 AND TRIM(i_LineType)='' OR LENGTH(i_LineType) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_LineType))\n\t) AS o_LineType,\n\t-- *INF*: IIF(NOT ISNULL(v_AgencyAKId),v_AgencyAKId,v_AgencyAKID_99999)\n\tIFF(v_AgencyAKId IS NOT NULL, v_AgencyAKId, v_AgencyAKID_99999) AS AgencyAKId,\n\t-- *INF*: IIF (ISNULL(i_EstimatedQuotePremium),0,i_EstimatedQuotePremium)\n\tIFF(i_EstimatedQuotePremium IS NULL, 0, i_EstimatedQuotePremium) AS EstimatedQuotePremium,\n\tTransactionDate,\n\t-- *INF*: IIF (ISNULL(TransactionDate),i_QuoteActionTimeStamp,TransactionDate)\n\tIFF(TransactionDate IS NULL, i_QuoteActionTimeStamp, TransactionDate) AS v_TransactionDate,\n\t-- *INF*: IIF (ISNULL(i_PolicyIssueCodeDesc),NULL,v_TransactionDate)\n\tIFF(i_PolicyIssueCodeDesc IS NULL, NULL, v_TransactionDate) AS o_TransactionDate,\n\tProducerName AS in_ProducerName,\n\tIssuedUWID,\n\t-- *INF*: IIF(ISNULL(IssuedUWID) OR IssuedUWID= '0','N/A',IssuedUWID)\n\tIFF(IssuedUWID IS NULL OR IssuedUWID = '0', 'N/A', IssuedUWID) AS o_IssuedUWID,\n\tIssuedUnderwriter,\n\t-- *INF*: IIF(ISNULL(IssuedUnderwriter),'N/A',IssuedUnderwriter)\n\tIFF(IssuedUnderwriter IS NULL, 'N/A', IssuedUnderwriter) AS o_IssuedUnderwriter,\n\tExternalQuoteSource AS i_ExternalQuoteSource,\n\tTurnstileGenerated AS i_TurnstileGenerated,\n\tPenguinTechGenerated AS i_PenguinTechGenerated,\n\t-- *INF*: IIF(ISNULL(i_TurnstileGenerated),'F',i_TurnstileGenerated)\n\tIFF(i_TurnstileGenerated IS NULL, 'F', i_TurnstileGenerated) AS v_TurnstileGenerated,\n\t-- *INF*: IIF(ISNULL(i_PenguinTechGenerated),'F',i_PenguinTechGenerated)\n\tIFF(i_PenguinTechGenerated IS NULL, 'F', i_PenguinTechGenerated) AS v_PenguinTechGenerated,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- ISNULL(i_ExternalQuoteSource) AND v_TurnstileGenerated='F' AND v_PenguinTechGenerated='F', 'DCT',\r\n\t-- ISNULL(i_ExternalQuoteSource) AND v_TurnstileGenerated='T' AND v_PenguinTechGenerated='F', 'Turnstile',\r\n\t-- ISNULL(i_ExternalQuoteSource) AND v_TurnstileGenerated='F' AND v_PenguinTechGenerated='T', 'AgentPortal',\r\n\t-- i_ExternalQuoteSource)\r\n\t-- \r\n\t-- --REG_REPLACE( i_ExternalQuoteSource, '\\s+', ''))\n\tDECODE(\n\t    TRUE,\n\t    i_ExternalQuoteSource IS NULL AND v_TurnstileGenerated = 'F' AND v_PenguinTechGenerated = 'F', 'DCT',\n\t    i_ExternalQuoteSource IS NULL AND v_TurnstileGenerated = 'T' AND v_PenguinTechGenerated = 'F', 'Turnstile',\n\t    i_ExternalQuoteSource IS NULL AND v_TurnstileGenerated = 'F' AND v_PenguinTechGenerated = 'T', 'AgentPortal',\n\t    i_ExternalQuoteSource\n\t) AS v_QuoteChannel,\n\tv_QuoteChannel AS o_QuoteChannel,\n\tLCSurveyOrderedIndicator,\n\tLCSurveyOrderedDate,\n\t-- *INF*: Decode( true,\r\n\t-- v_QuoteChannel ='DCT', 'Internal', \r\n\t-- v_QuoteChannel ='Turnstile', 'Internal', \r\n\t-- v_QuoteChannel = 'UploadAgentPortal','Internal', \r\n\t-- v_QuoteChannel ='UploadUWPortal','Internal',\r\n\t-- --v_QuoteChannel='3rd Party Rater  Tarmika','External', \r\n\t--  --v_QuoteChannel='Dais', 'External',  \r\n\t--  v_QuoteChannel='DAIS', 'External',  \r\n\t-- SUBSTR(REPLACESTR(1,v_QuoteChannel,chr(32),chr(45),''), 0, 11)='AgentPortal','External', \r\n\t-- SUBSTR(REPLACESTR(1,v_QuoteChannel,chr(32),chr(45),''), 0, 13)='3rdPartyRater','External', \r\n\t-- 'N/A')\r\n\t-- \r\n\t-- \r\n\t-- \n\tDecode(\n\t    true,\n\t    v_QuoteChannel = 'DCT', 'Internal',\n\t    v_QuoteChannel = 'Turnstile', 'Internal',\n\t    v_QuoteChannel = 'UploadAgentPortal', 'Internal',\n\t    v_QuoteChannel = 'UploadUWPortal', 'Internal',\n\t    v_QuoteChannel = 'DAIS', 'External',\n\t    SUBSTR(REGEXP_REPLACE(v_QuoteChannel,chr(32),chr(45),''), 0, 11) = 'AgentPortal', 'External',\n\t    SUBSTR(REGEXP_REPLACE(v_QuoteChannel,chr(32),chr(45),''), 0, 13) = '3rdPartyRater', 'External',\n\t    'N/A'\n\t) AS v_QuoteChannelOrigin,\n\tv_QuoteChannelOrigin AS o_QuoteChannelOrigin,\n\tExpiredReason AS i_ExpiredReason,\n\t-- *INF*: IIF(ISNULL(i_ExpiredReason) OR IS_SPACES(i_ExpiredReason) OR LENGTH(i_ExpiredReason)=0,'-1',LTRIM(RTRIM(i_ExpiredReason)))\n\tIFF(\n\t    i_ExpiredReason IS NULL\n\t    or LENGTH(i_ExpiredReason)>0\n\t    and TRIM(i_ExpiredReason)=''\n\t    or LENGTH(i_ExpiredReason) = 0,\n\t    '-1',\n\t    LTRIM(RTRIM(i_ExpiredReason))\n\t) AS QuoteReasonClosedCode,\n\tExpiredReasonDetails AS i_ExpiredReasonDetails,\n\t-- *INF*: IIF(ISNULL(i_ExpiredReasonDetails) OR IS_SPACES(i_ExpiredReasonDetails) OR LENGTH(i_ExpiredReasonDetails)=0,'N/A',LTRIM(RTRIM(i_ExpiredReasonDetails)))\n\tIFF(\n\t    i_ExpiredReasonDetails IS NULL\n\t    or LENGTH(i_ExpiredReasonDetails)>0\n\t    and TRIM(i_ExpiredReasonDetails)=''\n\t    or LENGTH(i_ExpiredReasonDetails) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_ExpiredReasonDetails))\n\t) AS QuoteReasonClosedComments,\n\tServCenterSupportCode AS i_ServCenterSupportCode,\n\tRolloverPolicyIndicator AS i_RolloverPolicyIndicator,\n\tRolloverPriorCarrier AS i_RolloverPriorCarrier,\n\tPirorCarrierNameOther AS i_PriorCarrierNameOther,\n\t-- *INF*: Decode(True,\r\n\t--       In(ltrim(rtrim(i_ServCenterSupportCode)),'0'),'N',\r\n\t--    In(ltrim(rtrim(i_ServCenterSupportCode)),'1'),'Y',\r\n\t--       'N/A')\r\n\t-- \n\tDecode(\n\t    True,\n\t    ltrim(rtrim(i_ServCenterSupportCode)) IN ('0'), 'N',\n\t    ltrim(rtrim(i_ServCenterSupportCode)) IN ('1'), 'Y',\n\t    'N/A'\n\t) AS o_ServCenterSupportCode,\n\t-- *INF*: IIF(ISNULL(i_RolloverPriorCarrier),'N/A', SUBSTR(LTRIM(RTRIM(i_RolloverPriorCarrier)),1,50))\n\tIFF(\n\t    i_RolloverPriorCarrier IS NULL, 'N/A', SUBSTR(LTRIM(RTRIM(i_RolloverPriorCarrier)), 1, 50)\n\t) AS v_RolloverPriorCarrier,\n\t-- *INF*: IIF(ISNULL(i_PriorCarrierNameOther),'N/A',SUBSTR(LTRIM(RTRIM(i_PriorCarrierNameOther)),1,50))\n\tIFF(\n\t    i_PriorCarrierNameOther IS NULL, 'N/A', SUBSTR(LTRIM(RTRIM(i_PriorCarrierNameOther)), 1, 50)\n\t) AS v_PriorCarrierNameOther,\n\t-- *INF*: DECODE(i_RolloverPolicyIndicator, 'T',1,'F',0,0)\n\tDECODE(\n\t    i_RolloverPolicyIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    0\n\t) AS o_RolloverPolicyIndicator,\n\t-- *INF*: IIF(i_RolloverPolicyIndicator ='T',\r\n\t-- IIF(v_RolloverPriorCarrier='Other', v_PriorCarrierNameOther,v_RolloverPriorCarrier),'N/A')\n\tIFF(\n\t    i_RolloverPolicyIndicator = 'T',\n\t    IFF(\n\t        v_RolloverPriorCarrier = 'Other', v_PriorCarrierNameOther, v_RolloverPriorCarrier\n\t    ),\n\t    'N/A'\n\t) AS o_RolloverPriorCarrier\n\tFROM AGG_RemoveDuplicates\n\tLEFT JOIN LKP_V2_AGENCY LKP_V2_AGENCY_v_AgencyCode\n\tON LKP_V2_AGENCY_v_AgencyCode.AgencyCode = v_AgencyCode\n\n\tLEFT JOIN LKP_AGENCYEMPLOYEE LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKId\n\tON LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKId.UserID = v_ProducerName\n\tAND LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKId.AgencyAKID = v_AgencyAKId\n\n\tLEFT JOIN LKP_V2_AGENCY LKP_V2_AGENCY__99999\n\tON LKP_V2_AGENCY__99999.AgencyCode = '99999'\n\n\tLEFT JOIN LKP_AGENCYEMPLOYEE LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKID_99999\n\tON LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKID_99999.UserID = v_ProducerName\n\tAND LKP_AGENCYEMPLOYEE_v_ProducerName_v_AgencyAKID_99999.AgencyAKID = v_AgencyAKID_99999\n\n),\nLKP_SupStrategicProfitCenterInsuranceSegment AS (\n\tSELECT\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tDivision\n\tFROM (\n\t\tSELECT \n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tDivision\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupStrategicProfitCenterInsuranceSegment\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceCode='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Division ORDER BY StrategicProfitCenterCode) = 1\n),\nLKP_InsuranceSegment AS (\n\tSELECT\n\tInsuranceSegmentAKId,\n\tInsuranceSegmentCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceSegmentAKId,\n\t\t\tInsuranceSegmentCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceSegment\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentCode ORDER BY InsuranceSegmentAKId) = 1\n),\nLKP_SupDCTPolicyOfferingLineOfBusinessProductRules AS (\n\tSELECT\n\tPolicyOfferingCode,\n\tDCTPolicyDivision,\n\tDCTProductCode,\n\tDCTProductType,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT SupDCTPolicyOfferingLineOfBusinessProductRules.PolicyOfferingCode as PolicyOfferingCode, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTPolicyDivision as DCTPolicyDivision, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductCode as DCTProductCode, SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductType as DCTProductType, SupDCTPolicyOfferingLineOfBusinessProductRules.EffectiveDate as EffectiveDate, SupDCTPolicyOfferingLineOfBusinessProductRules.ExpirationDate as ExpirationDate \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTPolicyOfferingLineOfBusinessProductRules\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DCTPolicyDivision,DCTProductCode,DCTProductType,EffectiveDate,ExpirationDate ORDER BY PolicyOfferingCode) = 1\n),\nLKP_PolicyOffering AS (\n\tSELECT\n\tPolicyOfferingAKId,\n\tPolicyOfferingCode\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyOfferingAKId,\n\t\t\tPolicyOfferingCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyOffering\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOfferingCode ORDER BY PolicyOfferingAKId) = 1\n),\nLKP_Program AS (\n\tSELECT\n\tProgramAKId,\n\tProgramCode\n\tFROM (\n\t\tSELECT \n\t\t\tProgramAKId,\n\t\t\tProgramCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Program\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramCode ORDER BY ProgramAKId DESC) = 1\n),\nLKP_Quote AS (\n\tSELECT\n\tQuoteId,\n\tStatusDate,\n\tQuoteKey\n\tFROM (\n\t\tSelect \r\n\t\ta.QuoteId as QuoteId,\r\n\t\ta.QuoteKey as QuoteKey,\r\n\t\ta.StatusDate as StatusDate\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote a\r\n\t\twhere exists (select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy w\r\n\t\twhere w.PolicyGUId=a.QuoteKey)\r\n\t\tand a.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by a.StatusDate,a.QuoteKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatusDate,QuoteKey ORDER BY QuoteId) = 1\n),\nLKP_StrategicProfitCenter AS (\n\tSELECT\n\tStrategicProfitCenterAKId,\n\tStrategicProfitCenterCode\n\tFROM (\n\t\tSELECT \n\t\t\tStrategicProfitCenterAKId,\n\t\t\tStrategicProfitCenterCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.StrategicProfitCenter\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterCode ORDER BY StrategicProfitCenterAKId) = 1\n),\nEXP_InsertFlag AS (\n\tSELECT\n\tLKP_Quote.QuoteId,\n\tLKP_Program.ProgramAKId AS i_ProgramAKId,\n\tLKP_StrategicProfitCenter.StrategicProfitCenterAKId AS i_StrategicProfitCenterAKId,\n\tLKP_InsuranceSegment.InsuranceSegmentAKId AS i_InsuranceSegmentAKId,\n\tLKP_PolicyOffering.PolicyOfferingAKId AS i_PolicyOfferingAKId,\n\tEXP_GetValues.QuoteStatusCode,\n\tEXP_GetValues.UnderwritingAssociateAKId,\n\tEXP_GetValues.AgencyEmployeeAKId,\n\tEXP_GetValues.StatusDate,\n\tEXP_GetValues.ReasonCode,\n\tEXP_GetValues.o_OtherReasonComment AS OtherReasonComment,\n\tEXP_GetValues.QuoteEffectiveDate,\n\tEXP_GetValues.QuoteExpirationDate,\n\tEXP_GetValues.QuoteKey,\n\tEXP_GetValues.QuoteNumber,\n\tEXP_GetValues.QuoteVersion,\n\tEXP_GetValues.BusinessClassCode,\n\tEXP_GetValues.InternalExternalIndicator,\n\tEXP_GetValues.RiskState,\n\tEXP_GetValues.AgencyAKId AS AgencyAKID,\n\t-- *INF*: IIF(ISNULL(i_StrategicProfitCenterAKId),-1,i_StrategicProfitCenterAKId)\n\tIFF(i_StrategicProfitCenterAKId IS NULL, - 1, i_StrategicProfitCenterAKId) AS StrategicProfitCenterAKId,\n\t-- *INF*: IIF(ISNULL(i_InsuranceSegmentAKId),-1,i_InsuranceSegmentAKId)\n\tIFF(i_InsuranceSegmentAKId IS NULL, - 1, i_InsuranceSegmentAKId) AS InsuranceSegmentAKId,\n\t-- *INF*: IIF(ISNULL(i_PolicyOfferingAKId), -1, i_PolicyOfferingAKId)\n\tIFF(i_PolicyOfferingAKId IS NULL, - 1, i_PolicyOfferingAKId) AS PolicyOfferingAKId,\n\t-- *INF*: IIF(ISNULL(i_ProgramAKId),-1,i_ProgramAKId)\n\tIFF(i_ProgramAKId IS NULL, - 1, i_ProgramAKId) AS ProgramAKId,\n\tEXP_GetValues.EstimatedQuotePremium,\n\tEXP_GetValues.o_QuoteIssueCode AS QuoteIssueCode,\n\tEXP_GetValues.PolicyIssueCodeOverride,\n\tEXP_GetValues.o_TransactionDate AS TransactionDate,\n\tEXP_GetValues.o_IssuedUWID AS IssuedUWID,\n\tEXP_GetValues.o_IssuedUnderwriter AS IssuedUnderwriter,\n\tEXP_GetValues.o_QuoteChannel AS QuoteChannel,\n\tEXP_GetValues.LCSurveyOrderedIndicator,\n\tEXP_GetValues.LCSurveyOrderedDate,\n\tEXP_GetValues.o_QuoteChannelOrigin AS QuoteChannelOrigin,\n\tEXP_GetValues.QuoteReasonClosedCode,\n\tEXP_GetValues.QuoteReasonClosedComments,\n\tEXP_GetValues.o_ServCenterSupportCode AS ServCenterSupportCode,\n\tEXP_GetValues.o_RolloverPolicyIndicator AS RolloverPolicyIndicator,\n\tEXP_GetValues.o_RolloverPriorCarrier AS RolloverPriorCarrier\n\tFROM EXP_GetValues\n\tLEFT JOIN LKP_InsuranceSegment\n\tON LKP_InsuranceSegment.InsuranceSegmentCode = LKP_SupStrategicProfitCenterInsuranceSegment.InsuranceSegmentCode\n\tLEFT JOIN LKP_PolicyOffering\n\tON LKP_PolicyOffering.PolicyOfferingCode = LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.PolicyOfferingCode\n\tLEFT JOIN LKP_Program\n\tON LKP_Program.ProgramCode = EXP_GetValues.o_ProgramCode\n\tLEFT JOIN LKP_Quote\n\tON LKP_Quote.StatusDate = EXP_GetValues.StatusDate AND LKP_Quote.QuoteKey = EXP_GetValues.QuoteKey\n\tLEFT JOIN LKP_StrategicProfitCenter\n\tON LKP_StrategicProfitCenter.StrategicProfitCenterCode = LKP_SupStrategicProfitCenterInsuranceSegment.StrategicProfitCenterCode\n),\nFIL_UnchangedRecords AS (\n\tSELECT\n\tQuoteId, \n\tQuoteStatusCode, \n\tUnderwritingAssociateAKId, \n\tAgencyEmployeeAKId, \n\tStatusDate, \n\tReasonCode, \n\tOtherReasonComment, \n\tQuoteEffectiveDate, \n\tQuoteExpirationDate, \n\tQuoteKey, \n\tQuoteNumber, \n\tQuoteVersion, \n\tBusinessClassCode, \n\tInternalExternalIndicator, \n\tRiskState, \n\tAgencyAKID, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProgramAKId, \n\tEstimatedQuotePremium, \n\tQuoteIssueCode, \n\tPolicyIssueCodeOverride, \n\tTransactionDate, \n\tIssuedUWID, \n\tIssuedUnderwriter, \n\tQuoteChannel, \n\tLCSurveyOrderedIndicator, \n\tLCSurveyOrderedDate, \n\tQuoteChannelOrigin, \n\tQuoteReasonClosedCode, \n\tQuoteReasonClosedComments, \n\tServCenterSupportCode, \n\tRolloverPolicyIndicator, \n\tRolloverPriorCarrier\n\tFROM EXP_InsertFlag\n\tWHERE ISNULL(QuoteId)\n),\nLKP_QuoteAKId AS (\n\tSELECT\n\tQuoteAKId,\n\tLkpQuoteIssueCodeChangeDate,\n\tLkpQuoteIssueCode,\n\tQuoteKey\n\tFROM (\n\t\tSelect \r\n\t\ta.QuoteAKId as QuoteAKId,\r\n\t\ta.QuoteKey as QuoteKey,\r\n\t\ta.QuoteIssueCode as LkpQuoteIssueCode,\r\n\t\ta.QuoteIssueCodeChangeDate as LkpQuoteIssueCodeChangeDate\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote a\r\n\t\twhere exists (select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy w\r\n\t\twhere w.PolicyGUId=a.QuoteKey)\r\n\t\tand a.CurrentSnapshotFlag = 1\r\n\t\tand a.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteKey ORDER BY QuoteAKId) = 1\n),\nLKP_Quotecreateddate AS (\n\tSELECT\n\tQuoteActionTimeStamp,\n\tPolicyGUId\n\tFROM (\n\t\tSelect \r\n\t\tmin (w.QuoteActionTimeStamp) as QuoteActionTimeStamp,\r\n\t\ta.PolicyGUId as PolicyGUId\r\n\t\tfrom  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy a\r\n\t\tinner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.archWorkDCTPolicy w\r\n\t\ton w.PolicyGUId=a.PolicyGUId\r\n\t\tgroup by a.PolicyGUId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyGUId ORDER BY QuoteActionTimeStamp) = 1\n),\nLKP_WBPolicyStaging AS (\n\tSELECT\n\tPenguinTechGenerated,\n\tPolicyNumber,\n\tPolicyVersionFormatted\n\tFROM (\n\t\tSELECT \n\t\t\tPenguinTechGenerated,\n\t\t\tPolicyNumber,\n\t\t\tPolicyVersionFormatted\n\t\tFROM WBPolicyStaging\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyVersionFormatted ORDER BY PenguinTechGenerated) = 1\n),\nSEQ_QuoteAKId AS (\n\tCREATE SEQUENCE SEQ_QuoteAKId\n\tSTART = 1\n\tINCREMENT = 1;\n),\nEXP_GetSupportIds AS (\n\tSELECT\n\tSEQ_QuoteAKId.NEXTVAL AS i_NEXTVAL,\n\tLKP_Quotecreateddate.QuoteActionTimeStamp AS i_QuoteCreatedDate,\n\tLKP_QuoteAKId.QuoteAKId AS i_QuoteAKId,\n\tFIL_UnchangedRecords.QuoteStatusCode,\n\tFIL_UnchangedRecords.UnderwritingAssociateAKId,\n\tFIL_UnchangedRecords.AgencyEmployeeAKId,\n\tFIL_UnchangedRecords.StatusDate,\n\tFIL_UnchangedRecords.ReasonCode,\n\tFIL_UnchangedRecords.OtherReasonComment AS i_OtherReasonComment,\n\tFIL_UnchangedRecords.QuoteEffectiveDate,\n\tFIL_UnchangedRecords.QuoteExpirationDate,\n\tFIL_UnchangedRecords.QuoteKey,\n\tFIL_UnchangedRecords.QuoteNumber,\n\tFIL_UnchangedRecords.QuoteVersion,\n\tFIL_UnchangedRecords.BusinessClassCode,\n\tLKP_WBPolicyStaging.PenguinTechGenerated,\n\tFIL_UnchangedRecords.InternalExternalIndicator AS i_InternalExternalIndicator,\n\t-- *INF*: IIF(PenguinTechGenerated='T', 'External', i_InternalExternalIndicator)\n\tIFF(PenguinTechGenerated = 'T', 'External', i_InternalExternalIndicator) AS v_InternalExternalIndicator,\n\tv_InternalExternalIndicator AS o_InternalExternalIndicator,\n\tFIL_UnchangedRecords.RiskState,\n\tFIL_UnchangedRecords.AgencyAKID,\n\tFIL_UnchangedRecords.StrategicProfitCenterAKId,\n\tFIL_UnchangedRecords.InsuranceSegmentAKId,\n\tFIL_UnchangedRecords.PolicyOfferingAKId,\n\tFIL_UnchangedRecords.ProgramAKId,\n\t-- *INF*: IIF(QuoteKey=v_prev_QuoteKey,v_NEXTVAL, i_NEXTVAL)\n\tIFF(QuoteKey = v_prev_QuoteKey, v_NEXTVAL, i_NEXTVAL) AS v_NEXTVAL,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- --QuoteKey=v_prev_QuoteKey,v_QuoteCreatedDate,\r\n\t-- ISNULL(i_QuoteCreatedDate),StatusDate,\r\n\t-- i_QuoteCreatedDate)\n\tDECODE(\n\t    TRUE,\n\t    i_QuoteCreatedDate IS NULL, StatusDate,\n\t    i_QuoteCreatedDate\n\t) AS v_QuoteCreatedDate,\n\tQuoteKey AS v_prev_QuoteKey,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t-- *INF*: IIF(ISNULL(i_QuoteAKId),v_NEXTVAL,i_QuoteAKId)\n\tIFF(i_QuoteAKId IS NULL, v_NEXTVAL, i_QuoteAKId) AS QuoteAKId,\n\t-1 AS PolicyAKId,\n\ti_OtherReasonComment AS OtherReasonComment,\n\tv_QuoteCreatedDate AS QuoteCreatedDate,\n\tFIL_UnchangedRecords.EstimatedQuotePremium,\n\tFIL_UnchangedRecords.PolicyIssueCodeOverride AS i_PolicyIssueCodeOverride,\n\t-- *INF*: DECODE(i_PolicyIssueCodeOverride, 'T', 1, 'F', 0, NULL)  \n\tDECODE(\n\t    i_PolicyIssueCodeOverride,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_PolicyIssueCodeOverride,\n\tFIL_UnchangedRecords.QuoteIssueCode,\n\tFIL_UnchangedRecords.TransactionDate,\n\tLKP_QuoteAKId.LkpQuoteIssueCode,\n\tLKP_QuoteAKId.LkpQuoteIssueCodeChangeDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(LkpQuoteIssueCodeChangeDate),TransactionDate,\r\n\t-- ISNULL(LkpQuoteIssueCode),TransactionDate,\r\n\t-- QuoteIssueCode = LkpQuoteIssueCode, LkpQuoteIssueCodeChangeDate,\r\n\t-- TransactionDate)\n\tDECODE(\n\t    TRUE,\n\t    LkpQuoteIssueCodeChangeDate IS NULL, TransactionDate,\n\t    LkpQuoteIssueCode IS NULL, TransactionDate,\n\t    QuoteIssueCode = LkpQuoteIssueCode, LkpQuoteIssueCodeChangeDate,\n\t    TransactionDate\n\t) AS o_QuoteIssueCodeChangeDate,\n\tFIL_UnchangedRecords.IssuedUWID,\n\tFIL_UnchangedRecords.IssuedUnderwriter,\n\tFIL_UnchangedRecords.QuoteChannel,\n\tFIL_UnchangedRecords.LCSurveyOrderedIndicator,\n\t-- *INF*: DECODE(LCSurveyOrderedIndicator, 'T', '1', 'F','0', NULL)  \n\tDECODE(\n\t    LCSurveyOrderedIndicator,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_LCSurveyOrderedIndicator,\n\tFIL_UnchangedRecords.LCSurveyOrderedDate,\n\tFIL_UnchangedRecords.QuoteChannelOrigin,\n\tFIL_UnchangedRecords.QuoteReasonClosedCode,\n\tFIL_UnchangedRecords.QuoteReasonClosedComments,\n\tFIL_UnchangedRecords.ServCenterSupportCode,\n\tFIL_UnchangedRecords.RolloverPolicyIndicator,\n\tFIL_UnchangedRecords.RolloverPriorCarrier\n\tFROM FIL_UnchangedRecords\n\tLEFT JOIN LKP_QuoteAKId\n\tON LKP_QuoteAKId.QuoteKey = FIL_UnchangedRecords.QuoteKey\n\tLEFT JOIN LKP_Quotecreateddate\n\tON LKP_Quotecreateddate.PolicyGUId = FIL_UnchangedRecords.QuoteKey\n\tLEFT JOIN LKP_WBPolicyStaging\n\tON LKP_WBPolicyStaging.PolicyNumber = FIL_UnchangedRecords.QuoteNumber AND LKP_WBPolicyStaging.PolicyVersionFormatted = FIL_UnchangedRecords.QuoteVersion\n),\nQuote AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote\n\t(CurrentSnapshotFlag, AuditID, SourceSystemID, CreatedDate, ModifiedDate, QuoteAKId, QuoteKey, PolicyAKId, AgencyAKId, QuoteNumber, QuoteVersion, BusinessClassCode, InternalExternalIndicator, RiskState, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProgramAKId, QuoteStatusCode, UnderwritingAssociateAKId, AgencyEmployeeAKId, StatusDate, QuoteCreatedDate, ReasonCode, OtherReasonComment, QuoteEffectiveDate, QuoteExpirationDate, EstimatedQuotePremium, PolicyIssueCodeOverride, QuoteIssueCode, QuoteIssueCodeChangeDate, IssuedUWID, IssuedUnderwriter, QuoteChannel, LCSurveyOrderedIndicator, LCSurveyOrderedDate, QuoteChannelOrigin, QuoteReasonClosedCode, QuoteReasonClosedComments, RolloverPolicyIndicator, RolloverPriorCarrier, ServCenterSupportCode)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tQUOTEAKID, \n\tQUOTEKEY, \n\tPOLICYAKID, \n\tAgencyAKID AS AGENCYAKID, \n\tQUOTENUMBER, \n\tQUOTEVERSION, \n\tBUSINESSCLASSCODE, \n\to_InternalExternalIndicator AS INTERNALEXTERNALINDICATOR, \n\tRISKSTATE, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPROGRAMAKID, \n\tQUOTESTATUSCODE, \n\tUNDERWRITINGASSOCIATEAKID, \n\tAGENCYEMPLOYEEAKID, \n\tSTATUSDATE, \n\tQUOTECREATEDDATE, \n\tREASONCODE, \n\tOTHERREASONCOMMENT, \n\tQUOTEEFFECTIVEDATE, \n\tQUOTEEXPIRATIONDATE, \n\tESTIMATEDQUOTEPREMIUM, \n\to_PolicyIssueCodeOverride AS POLICYISSUECODEOVERRIDE, \n\tQUOTEISSUECODE, \n\to_QuoteIssueCodeChangeDate AS QUOTEISSUECODECHANGEDATE, \n\tISSUEDUWID, \n\tISSUEDUNDERWRITER, \n\tQUOTECHANNEL, \n\to_LCSurveyOrderedIndicator AS LCSURVEYORDEREDINDICATOR, \n\tLCSURVEYORDEREDDATE, \n\tQUOTECHANNELORIGIN, \n\tQUOTEREASONCLOSEDCODE, \n\tQUOTEREASONCLOSEDCOMMENTS, \n\tROLLOVERPOLICYINDICATOR, \n\tROLLOVERPRIORCARRIER, \n\tSERVCENTERSUPPORTCODE\n\tFROM EXP_GetSupportIds\n\n\t------------ POST SQL ----------\n\tUPDATE A\r\n\tSET A.CurrentSnapshotFlag=0,\r\n\tA.ModifiedDate=GETDATE()\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote A\r\n\tWHERE EXISTS (\r\n\tSELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote B\r\n\tWHERE A.QuoteAKId=B.QuoteAKId\r\n\tAND B.StatusDate>A.StatusDate)\r\n\tAND A.CurrentSnapshotFlag=1\r\n\tAND A.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t-------------------------------\n\n\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "QuoteDataWarehouse/"
        },
        "annotations": []
    }
}