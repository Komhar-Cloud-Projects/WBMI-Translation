{
    "name": "m_CLM_DW_LOAD_NurseAssignment",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseAssignment",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clmt_nurse_assignment_stage AS (\n\tSELECT\n\t\tClmtNurseAssignmentStageId,\n\t\tnurse_assignment_id,\n\t\tclmt_nurse_manage_id,\n\t\tassigned_nurse_id,\n\t\topen_date,\n\t\tclosed_date,\n\t\tassignment_comment,\n\t\twork_time_saved_weeks,\n\t\twork_time_saved_days,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM clmt_nurse_assignment_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tnurse_assignment_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(nurse_assignment_id))),-1,nurse_assignment_id)\n\tIFF(ltrim(rtrim(nurse_assignment_id)) IS NULL, - 1, nurse_assignment_id) AS o_nurse_assignment_id,\n\tclmt_nurse_manage_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(clmt_nurse_manage_id))),-1,clmt_nurse_manage_id)\n\tIFF(ltrim(rtrim(clmt_nurse_manage_id)) IS NULL, - 1, clmt_nurse_manage_id) AS o_clmt_nurse_manage_id,\n\tassigned_nurse_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(assigned_nurse_id),'N/A',\r\n\t-- IS_SPACES(assigned_nurse_id),'N/A',\r\n\t-- LENGTH(assigned_nurse_id)=0,'N/A',\r\n\t-- LTRIM(RTRIM(assigned_nurse_id)))\n\tDECODE(TRUE,\n\tassigned_nurse_id IS NULL, 'N/A',\n\tIS_SPACES(assigned_nurse_id), 'N/A',\n\tLENGTH(assigned_nurse_id) = 0, 'N/A',\n\tLTRIM(RTRIM(assigned_nurse_id))) AS o_assigned_nurse_id,\n\topen_date,\n\t-- *INF*: iif(isnull(ltrim(rtrim(open_date))),to_date('01/01/1800','MM/DD/YYYY'),open_date)\n\tIFF(ltrim(rtrim(open_date)) IS NULL, to_date('01/01/1800', 'MM/DD/YYYY'), open_date) AS o_open_date,\n\tclosed_date,\n\t-- *INF*: iif(isnull(ltrim(rtrim(closed_date))),to_date('12/31/2100','MM/DD/YYYY'),closed_date)\n\tIFF(ltrim(rtrim(closed_date)) IS NULL, to_date('12/31/2100', 'MM/DD/YYYY'), closed_date) AS o_closed_date,\n\tassignment_comment,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(assignment_comment),'N/A',\r\n\t-- IS_SPACES(assignment_comment),'N/A',\r\n\t-- LENGTH(assignment_comment)=0,'N/A',\r\n\t-- LTRIM(RTRIM(assignment_comment)))\n\tDECODE(TRUE,\n\tassignment_comment IS NULL, 'N/A',\n\tIS_SPACES(assignment_comment), 'N/A',\n\tLENGTH(assignment_comment) = 0, 'N/A',\n\tLTRIM(RTRIM(assignment_comment))) AS o_assignment_comment,\n\twork_time_saved_weeks,\n\t-- *INF*: iif(isnull(ltrim(rtrim(work_time_saved_weeks))),0,work_time_saved_weeks)\n\tIFF(ltrim(rtrim(work_time_saved_weeks)) IS NULL, 0, work_time_saved_weeks) AS o_work_time_saved_weeks,\n\twork_time_saved_days,\n\t-- *INF*: iif(isnull(ltrim(rtrim(work_time_saved_days))),0,work_time_saved_days)\n\tIFF(ltrim(rtrim(work_time_saved_days)) IS NULL, 0, work_time_saved_days) AS o_work_time_saved_days\n\tFROM SQ_clmt_nurse_assignment_stage\n),\nLKP_NurseCase AS (\n\tSELECT\n\tNurseCaseAkId,\n\tclmt_nurse_manage_id\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseCaseAkId as NurseCaseAkId, \r\n\t\tN.clmt_nurse_manage_id as clmt_nurse_manage_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseCase N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clmt_nurse_manage_id ORDER BY NurseCaseAkId) = 1\n),\nLKP_claim_party AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT\r\n\t\tCP.claim_party_ak_id as claim_party_ak_id, \r\n\t\tCP.claim_party_key as claim_party_key\r\n\t\t\r\n\t\t FROM\r\n\t\t   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP\r\n\t\t\r\n\t\twhere\r\n\t\tCP.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id) = 1\n),\nEXP_Lkp_Default AS (\n\tSELECT\n\tLKP_claim_party.claim_party_ak_id,\n\t-- *INF*: iif(isnull(claim_party_ak_id),-1,claim_party_ak_id)\n\tIFF(claim_party_ak_id IS NULL, - 1, claim_party_ak_id) AS o_claim_party_ak_id,\n\tLKP_NurseCase.NurseCaseAkId,\n\t-- *INF*: iif(isnull(NurseCaseAkId),-1,NurseCaseAkId)\n\tIFF(NurseCaseAkId IS NULL, - 1, NurseCaseAkId) AS o_NurseCaseAkId\n\tFROM \n\tLEFT JOIN LKP_NurseCase\n\tON LKP_NurseCase.clmt_nurse_manage_id = EXP_Src_Values.o_clmt_nurse_manage_id\n\tLEFT JOIN LKP_claim_party\n\tON LKP_claim_party.claim_party_key = EXP_Src_Values.o_assigned_nurse_id\n),\nLKP_NurseAssignment AS (\n\tSELECT\n\tNurseAssignmentId,\n\tNurseAssignmentAkId,\n\tNurseCaseAkId,\n\tclaim_party_ak_id,\n\tnurse_assignment_id,\n\tOpenDate,\n\tClosedDate,\n\tComment,\n\tTimeSavedWeeks,\n\tTimeSavedDays\n\tFROM (\n\t\tSELECT NurseAssignment.NurseAssignmentId as NurseAssignmentId, NurseAssignment.NurseAssignmentAkId as NurseAssignmentAkId, NurseAssignment.nurse_assignment_id as nurse_assignment_id, NurseAssignment.OpenDate as OpenDate, NurseAssignment.ClosedDate as ClosedDate, NurseAssignment.Comment as Comment, NurseAssignment.TimeSavedWeeks as TimeSavedWeeks, NurseAssignment.TimeSavedDays as TimeSavedDays, NurseAssignment.NurseCaseAkId as NurseCaseAkId, NurseAssignment.claim_party_ak_id as claim_party_ak_id \r\n\t\t\r\n\t\tFROM NurseAssignment\r\n\t\t\r\n\t\twhere \r\n\t\tCurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseCaseAkId,nurse_assignment_id,claim_party_ak_id ORDER BY NurseAssignmentId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseAssignment.NurseAssignmentId AS Lkp_NurseAssignmentId,\n\tLKP_NurseAssignment.NurseAssignmentAkId AS Lkp_NurseAssignmentAkId,\n\tLKP_NurseAssignment.NurseCaseAkId AS Lkp_NurseCaseAkId,\n\tLKP_NurseAssignment.claim_party_ak_id AS Lkp_claim_party_ak_id,\n\tLKP_NurseAssignment.nurse_assignment_id AS Lkp_nurse_assignment_id,\n\tLKP_NurseAssignment.OpenDate AS Lkp_OpenDate,\n\tLKP_NurseAssignment.ClosedDate AS Lkp_ClosedDate,\n\tLKP_NurseAssignment.Comment AS Lkp_Comment,\n\tLKP_NurseAssignment.TimeSavedWeeks AS Lkp_TimeSavedWeeks,\n\tLKP_NurseAssignment.TimeSavedDays AS Lkp_TimeSavedDays,\n\t-- *INF*: iif(isnull(Lkp_NurseAssignmentId), 'NEW',\r\n\t-- \r\n\t--   iif(\r\n\t-- \r\n\t--  --      ltrim(rtrim(Lkp_NurseAssignmentAkId)) != ltrim(rtrim(NurseAssignmentAkId))\r\n\t-- \r\n\t-- --or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_NurseCaseAkId)) != ltrim(rtrim(NurseCaseAkId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_claim_party_ak_id)) != ltrim(rtrim(claim_party_ak_id))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_nurse_assignment_id)) != ltrim(rtrim(nurse_assignment_id))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_OpenDate)) != ltrim(rtrim(OpenDate))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_ClosedDate)) != ltrim(rtrim(ClosedDate))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--      ltrim(rtrim(Lkp_Comment)) != ltrim(rtrim(Comment))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_TimeSavedWeeks)) != ltrim(rtrim(TimeSavedWeeks))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--        ltrim(rtrim(Lkp_TimeSavedDays)) != ltrim(rtrim(TimeSavedDays)),\r\n\t-- \r\n\t--   'UPDATE', 'NOCHANGE')\r\n\t-- \r\n\t--    )\n\tIFF(Lkp_NurseAssignmentId IS NULL, 'NEW', IFF(ltrim(rtrim(Lkp_NurseCaseAkId)) != ltrim(rtrim(NurseCaseAkId)) OR ltrim(rtrim(Lkp_claim_party_ak_id)) != ltrim(rtrim(claim_party_ak_id)) OR ltrim(rtrim(Lkp_nurse_assignment_id)) != ltrim(rtrim(nurse_assignment_id)) OR ltrim(rtrim(Lkp_OpenDate)) != ltrim(rtrim(OpenDate)) OR ltrim(rtrim(Lkp_ClosedDate)) != ltrim(rtrim(ClosedDate)) OR ltrim(rtrim(Lkp_Comment)) != ltrim(rtrim(Comment)) OR ltrim(rtrim(Lkp_TimeSavedWeeks)) != ltrim(rtrim(TimeSavedWeeks)) OR ltrim(rtrim(Lkp_TimeSavedDays)) != ltrim(rtrim(TimeSavedDays)), 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_ChangedFlag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Lkp_Default.o_NurseCaseAkId AS NurseCaseAkId,\n\tEXP_Lkp_Default.o_claim_party_ak_id AS claim_party_ak_id,\n\tEXP_Src_Values.o_nurse_assignment_id AS nurse_assignment_id,\n\tEXP_Src_Values.o_open_date AS OpenDate,\n\tEXP_Src_Values.o_closed_date AS ClosedDate,\n\tEXP_Src_Values.o_assignment_comment AS Comment,\n\tEXP_Src_Values.o_work_time_saved_weeks AS TimeSavedWeeks,\n\tEXP_Src_Values.o_work_time_saved_days AS TimeSavedDays\n\tFROM EXP_Lkp_Default\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseAssignment\n\tON LKP_NurseAssignment.NurseCaseAkId = EXP_Lkp_Default.o_NurseCaseAkId AND LKP_NurseAssignment.nurse_assignment_id = EXP_Src_Values.o_nurse_assignment_id AND LKP_NurseAssignment.claim_party_ak_id = EXP_Lkp_Default.o_claim_party_ak_id\n),\nFIL_Lkp_Records AS (\n\tSELECT\n\tChangedFlag, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemId, \n\tCreatedDate, \n\tModifiedDate, \n\tNurseCaseAkId, \n\tclaim_party_ak_id, \n\tnurse_assignment_id, \n\tOpenDate, \n\tClosedDate, \n\tComment AS o_Comment, \n\tTimeSavedWeeks AS o_TimeSavedWeeks, \n\tTimeSavedDays AS o_TimeSavedDays, \n\tLkp_NurseAssignmentAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseAssignment AS (\n\tCREATE SEQUENCE SEQ_NurseAssignment\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_AKid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemId,\n\tCreatedDate,\n\tModifiedDate,\n\tNurseCaseAkId AS o_NurseCaseAkId,\n\tclaim_party_ak_id AS o_claim_party_ak_id,\n\tnurse_assignment_id AS o_nurse_assignment_id,\n\tOpenDate,\n\tClosedDate,\n\to_Comment,\n\to_TimeSavedWeeks,\n\to_TimeSavedDays,\n\t-- *INF*: iif(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentAkId) AS NurseAssignmentAkId,\n\tLkp_NurseAssignmentAkId,\n\tSEQ_NurseAssignment.NEXTVAL\n\tFROM FIL_Lkp_Records\n),\nNurseAssignment_Insert AS (\n\tINSERT INTO NurseAssignment\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseAssignmentAkId, NurseCaseAkId, claim_party_ak_id, nurse_assignment_id, OpenDate, ClosedDate, Comment, TimeSavedWeeks, TimeSavedDays)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSEASSIGNMENTAKID, \n\to_NurseCaseAkId AS NURSECASEAKID, \n\to_claim_party_ak_id AS CLAIM_PARTY_AK_ID, \n\to_nurse_assignment_id AS NURSE_ASSIGNMENT_ID, \n\tOPENDATE, \n\tCLOSEDDATE, \n\to_Comment AS COMMENT, \n\to_TimeSavedWeeks AS TIMESAVEDWEEKS, \n\to_TimeSavedDays AS TIMESAVEDDAYS\n\tFROM EXP_AKid_Insert_Target\n),\nSQ_NurseAssignment AS (\n\tSELECT\r\n\tA.NurseAssignmentId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.NurseAssignmentAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignment A\r\n\t\r\n\tWhere Exists \r\n\t    ( \r\n\tSELECT 1\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignment B\r\n\t\r\n\twhere\r\n\tB.CurrentSnapshotFlag =1\r\n\tAND\r\n\tA.NurseAssignmentAkId = B.NurseAssignmentAkId \r\n\t\r\n\tgroup by \r\n\tB.NurseAssignmentAkId \r\n\t\r\n\thaving \r\n\tcount(*) > 1 \r\n\t  )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseAssignmentAkId , \r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseAssignmentId,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tNurseAssignmentAkId= v_PREV_ROW_NurseAssignmentAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\n\tDECODE(TRUE,\n\tNurseAssignmentAkId = v_PREV_ROW_NurseAssignmentAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tSYSDATE AS ModifiedDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseAssignmentAkId AS v_PREV_ROW_NurseAssignmentAkId,\n\tNurseAssignmentAkId,\n\t0 AS CurrentSnapshotFlag\n\tFROM SQ_NurseAssignment\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tNurseAssignmentId, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_NurseAssignment AS (\n\tSELECT\n\tNurseAssignmentId, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM FIL_FirstRowAkId\n),\nNurseAssignment_Update AS (\n\tMERGE INTO NurseAssignment AS T\n\tUSING UPD_NurseAssignment AS S\n\tON T.NurseAssignmentId = S.NurseAssignmentId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246502"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905527"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604459"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:37"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:40"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}