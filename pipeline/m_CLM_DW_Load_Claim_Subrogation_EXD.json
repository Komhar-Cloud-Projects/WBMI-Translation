{
    "name": "m_CLM_DW_Load_Claim_Subrogation_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_Load_Claim_Subrogation_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clm_subrogation_stage AS (\n\tSELECT\n\t\tclm_subrogation_stage_id,\n\t\ttch_claim_nbr,\n\t\ttch_claimant_id,\n\t\tobject_type_cd,\n\t\tobject_seq_nbr,\n\t\tcov_type_cd,\n\t\tcov_seq_nbr,\n\t\tbur_cause_loss,\n\t\tinsd_deduct,\n\t\tref_subro_dt,\n\t\tgeneral_comment,\n\t\tinstall_reached,\n\t\tamt_of_agreement,\n\t\tinstall_amt_month,\n\t\tstart_pmt_dt,\n\t\tupdate_ts,\n\t\tupdate_user_id,\n\t\tcreate_ts,\n\t\tcreate_user_id,\n\t\tclosure_date,\n\t\tsubro_rep_clt_id,\n\t\tsubro_mgr_clt_id,\n\t\treferring_adj_id,\n\t\tfile_status,\n\t\tdeduct_has_been,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id\n\tFROM clm_subrogation_stage\n),\nEXP_source_anchor AS (\n\tSELECT\n\tclm_subrogation_stage_id,\n\ttch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr)))\n\tIFF(LTRIM(RTRIM(tch_claim_nbr)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr))) AS tch_claim_nbr_out,\n\ttch_claimant_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claimant_id))) OR LENGTH(LTRIM(RTRIM(tch_claimant_id))) = 0, 'N/A', LTRIM(RTRIM(tch_claimant_id)))\n\tIFF(LTRIM(RTRIM(tch_claimant_id)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_claimant_id))) = 0, 'N/A', LTRIM(RTRIM(tch_claimant_id))) AS tch_claimant_id_out,\n\tobject_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(object_type_cd))) OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd)))\n\tIFF(LTRIM(RTRIM(object_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd))) AS object_type_cd_out,\n\tobject_seq_nbr,\n\tcov_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(cov_type_cd))) OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd)))\n\tIFF(LTRIM(RTRIM(cov_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd))) AS cov_type_cd_out,\n\tcov_seq_nbr,\n\tbur_cause_loss,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(bur_cause_loss))) OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A',  SUBSTR(bur_cause_loss, 1,2))\n\tIFF(LTRIM(RTRIM(bur_cause_loss)) IS NULL OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A', SUBSTR(bur_cause_loss, 1, 2)) AS bur_cause_loss_out,\n\t-- *INF*: IIF(ISNULL(bur_cause_loss) OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3,1))\n\tIFF(bur_cause_loss IS NULL OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3, 1)) AS reserve_category_out,\n\tinsd_deduct,\n\t-- *INF*: IIF (ISNULL(insd_deduct), 0 , insd_deduct)\n\tIFF(insd_deduct IS NULL, 0, insd_deduct) AS insd_deduct_out,\n\tref_subro_dt,\n\t-- *INF*: IIF(ISNULL(ref_subro_dt), to_date('01/01/1800', 'MM/DD/YYYY'), ref_subro_dt)\n\tIFF(ref_subro_dt IS NULL, to_date('01/01/1800', 'MM/DD/YYYY'), ref_subro_dt) AS ref_subro_dt_out,\n\tgeneral_comment,\n\tinstall_reached,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(install_reached))) OR LENGTH(LTRIM(RTRIM(install_reached))) = 0, 'N/A', LTRIM(RTRIM(install_reached)))\n\tIFF(LTRIM(RTRIM(install_reached)) IS NULL OR LENGTH(LTRIM(RTRIM(install_reached))) = 0, 'N/A', LTRIM(RTRIM(install_reached))) AS install_reached_out,\n\tamt_of_agreement,\n\t-- *INF*: IIF(ISNULL(amt_of_agreement), 0, amt_of_agreement)\n\tIFF(amt_of_agreement IS NULL, 0, amt_of_agreement) AS amt_of_agreement_out,\n\tinstall_amt_month,\n\t-- *INF*: IIF(ISNULL(install_amt_month), 0,install_amt_month) \n\tIFF(install_amt_month IS NULL, 0, install_amt_month) AS install_amt_month_out,\n\tstart_pmt_dt,\n\t-- *INF*: IIF(ISNULL(start_pmt_dt), to_date('01/01/1800', 'MM/DD/YYYY'), start_pmt_dt)\n\tIFF(start_pmt_dt IS NULL, to_date('01/01/1800', 'MM/DD/YYYY'), start_pmt_dt) AS start_pmt_dt_out,\n\tupdate_ts,\n\tupdate_user_id,\n\tcreate_ts,\n\tcreate_user_id,\n\tclosure_date,\n\t-- *INF*: IIF(ISNULL(closure_date), to_date('01/01/1800', 'MM/DD/YYYY'), closure_date)\n\tIFF(closure_date IS NULL, to_date('01/01/1800', 'MM/DD/YYYY'), closure_date) AS closure_date_out,\n\tsubro_rep_clt_id,\n\tsubro_mgr_clt_id,\n\treferring_adj_id,\n\tfile_status,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(file_status))) OR LENGTH(LTRIM(RTRIM(file_status))) = 0, 'N/A', LTRIM(RTRIM(file_status)))\n\tIFF(LTRIM(RTRIM(file_status)) IS NULL OR LENGTH(LTRIM(RTRIM(file_status))) = 0, 'N/A', LTRIM(RTRIM(file_status))) AS file_status_out,\n\tdeduct_has_been,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(deduct_has_been))) OR LENGTH(LTRIM(RTRIM(deduct_has_been))) = 0, 'N/A', LTRIM(RTRIM(deduct_has_been)))\n\tIFF(LTRIM(RTRIM(deduct_has_been)) IS NULL OR LENGTH(LTRIM(RTRIM(deduct_has_been))) = 0, 'N/A', LTRIM(RTRIM(deduct_has_been))) AS deduct_has_been_out,\n\textract_date,\n\tas_of_date,\n\trecord_count,\n\tsource_system_id\n\tFROM SQ_clm_subrogation_stage\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\toffset_onset_ind,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nLKP_claimant_coverage_detail AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\ts3p_ins_line_code,\n\ts3p_unit_type_code,\n\ts3p_wc_class_descript,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\treserve_ctgry,\n\tcause_of_loss,\n\tclaimant_cov_eff_date,\n\tclaimant_cov_exp_date,\n\trisk_type_ind,\n\ts3p_unit_descript,\n\tspec_pers_prop_use_code,\n\tpkg_ded_amt,\n\tpkg_lmt_amt,\n\tmanual_entry_ind,\n\tunit_veh_registration_state_code,\n\tunit_veh_stated_amt,\n\tunit_dam_descript,\n\tunit_veh_yr,\n\tunit_veh_make,\n\tunit_vin_num,\n\tCoverageGUID,\n\tpms_type_bureau_code,\n\tIN_claim_party_occurrence_ak_id,\n\tIN_COB_OBJECT_TYPE_CD,\n\tIN_COB_OBJECT_SEQ_NBR,\n\tIN_MAJOR_PERIL_CODE1,\n\tIN_s3p_PKG_SEQ_NUM1,\n\tIN_cause_of_loss_out,\n\tIN_reserve_ctgry_out\n\tFROM (\n\t\tSELECT a.claimant_cov_det_ak_id as claimant_cov_det_ak_id,\r\n\t\tLTRIM(RTRIM(a.s3p_ins_line_code)) as s3p_ins_line_code, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_type_code)) as s3p_unit_type_code, \r\n\t\tLTRIM(RTRIM(a.s3p_wc_class_descript)) as s3p_wc_class_descript, \r\n\t\tLTRIM(RTRIM(a.loc_unit_num)) as loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.sub_loc_unit_num)) as sub_loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.ins_line)) as ins_line, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp)) as risk_unit_grp, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num, \r\n\t\tLTRIM(RTRIM(a.risk_unit)) as risk_unit, \r\n\t\tLTRIM(RTRIM(a.risk_unit_seq_num)) as risk_unit_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_seq)) as major_peril_seq, \r\n\t\ta.claimant_cov_eff_date as claimant_cov_eff_date, \r\n\t\ta.claimant_cov_exp_date as claimant_cov_exp_date, \r\n\t\tLTRIM(RTRIM(a.risk_type_ind)) as risk_type_ind, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_descript)) as s3p_unit_descript, \r\n\t\tLTRIM(RTRIM(a.spec_pers_prop_use_code)) as spec_pers_prop_use_code, \r\n\t\ta.pkg_ded_amt as pkg_ded_amt, \r\n\t\ta.pkg_lmt_amt as pkg_lmt_amt, \r\n\t\tLTRIM(RTRIM(a.manual_entry_ind)) as manual_entry_ind,\r\n\t\tLTRIM(RTRIM(a.unit_veh_registration_state_code)) as unit_veh_registration_state_code, \r\n\t\ta.unit_veh_stated_amt as unit_veh_stated_amt, \r\n\t\tLTRIM(RTRIM(a.unit_dam_descript)) as unit_dam_descript, \r\n\t\ta.unit_veh_yr as unit_veh_yr, \r\n\t\tLTRIM(RTRIM(a.unit_veh_make)) as unit_veh_make, \r\n\t\tLTRIM(RTRIM(a.unit_vin_num)) as unit_vin_num, \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(a.s3p_object_type_code)) as s3p_object_type_code, \r\n\t\ta.s3p_object_seq_num as s3p_object_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_code)) as major_peril_code, \r\n\t\ta.s3p_pkg_seq_num as s3p_pkg_seq_num, \r\n\t\ta.cause_of_loss as cause_of_loss, \r\n\t\ta.reserve_ctgry as reserve_ctgry,\r\n\t\ta.CoverageGUID as CoverageGUID, \r\n\t\tLTRIM(RTRIM(a.pms_type_bureau_code)) as pms_type_bureau_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,s3p_object_type_code,s3p_object_seq_num,major_peril_code,s3p_pkg_seq_num,cause_of_loss,reserve_ctgry ORDER BY claimant_cov_det_ak_id) = 1\n),\nEXP_gather_values AS (\n\tSELECT\n\tLKP_claimant_coverage_detail.claimant_cov_det_ak_id,\n\tEXP_source_anchor.insd_deduct_out AS insd_deduct,\n\tEXP_source_anchor.ref_subro_dt_out AS ref_subro_dt,\n\tEXP_source_anchor.general_comment,\n\tEXP_source_anchor.install_reached_out,\n\tEXP_source_anchor.amt_of_agreement_out AS amt_of_agreement,\n\tEXP_source_anchor.install_amt_month_out AS install_amt_month,\n\tEXP_source_anchor.start_pmt_dt_out AS start_pmt_dt,\n\tEXP_source_anchor.file_status_out AS file_status,\n\tEXP_source_anchor.deduct_has_been_out AS deduct_has_been,\n\tEXP_source_anchor.closure_date_out AS closure_date,\n\tEXP_source_anchor.tch_claim_nbr_out\n\tFROM EXP_source_anchor\n\tLEFT JOIN LKP_claimant_coverage_detail\n\tON LKP_claimant_coverage_detail.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id AND LKP_claimant_coverage_detail.s3p_object_type_code = EXP_source_anchor.object_type_cd_out AND LKP_claimant_coverage_detail.s3p_object_seq_num = EXP_source_anchor.object_seq_nbr AND LKP_claimant_coverage_detail.major_peril_code = EXP_source_anchor.cov_type_cd_out AND LKP_claimant_coverage_detail.s3p_pkg_seq_num = EXP_source_anchor.cov_seq_nbr AND LKP_claimant_coverage_detail.cause_of_loss = EXP_source_anchor.bur_cause_loss_out AND LKP_claimant_coverage_detail.reserve_ctgry = EXP_source_anchor.reserve_category_out\n),\nLKP_CLM_COMMENTS_STAGE AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT comment.TCC_COMMENT_TXT as TCC_COMMENT_TXT, \r\n\t\tcomment.FOLDER_KEY as FOLDER_KEY, \r\n\t\tcomment.COMMENT_ITEM_NBR as COMMENT_ITEM_NBR \r\n\t\tFROM CLM_COMMENTS_STAGE comment\r\n\t\tinner join  clm_subrogation_stage subro\r\n\t\ton subro.tch_claim_nbr = comment.FOLDER_KEY\r\n\t\tand subro.general_comment = comment.COMMENT_ITEM_NBR\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nLKP_claim_subrogation AS (\n\tSELECT\n\tclaim_subrogation_id,\n\tclaim_subrogation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tinsd_ded_amt,\n\treferred_to_subrogation_date,\n\tsubrogation_comment,\n\tinstallment_reached_ind,\n\tagreement_amt,\n\tmonthly_installment_amt,\n\tpay_start_date,\n\tfile_status_code,\n\tded_status_code,\n\tclosure_date\n\tFROM (\n\t\tSELECT A.claim_subrogation_id as claim_subrogation_id, \r\n\t\tA.claim_subrogation_ak_id as claim_subrogation_ak_id, \r\n\t\tA.insd_ded_amt as insd_ded_amt,\r\n\t\tA.referred_to_subrogation_date as referred_to_subrogation_date, \r\n\t\tA.subrogation_comment as subrogation_comment, \r\n\t\tA.installment_reached_ind as installment_reached_ind, \r\n\t\tA.agreement_amt as agreement_amt, \r\n\t\tA.monthly_installment_amt as monthly_installment_amt, \r\n\t\tA.pay_start_date as pay_start_date, \r\n\t\tA.file_status_code as file_status_code, \r\n\t\tA.ded_status_code as ded_status_code, \r\n\t\tA.closure_date as closure_date, \r\n\t\tA.claimant_cov_det_ak_id as claimant_cov_det_ak_id \r\n\t\tFROM claim_subrogation A\r\n\t\tWHERE A.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id ORDER BY claim_subrogation_id) = 1\n),\nEXP_gather_old_values AS (\n\tSELECT\n\tLKP_claim_subrogation.claim_subrogation_id,\n\tLKP_claim_subrogation.claim_subrogation_ak_id,\n\tLKP_claim_subrogation.claimant_cov_det_ak_id AS old_claimant_cov_det_ak_id,\n\tLKP_claim_subrogation.insd_ded_amt AS old_insd_ded_amt,\n\tLKP_claim_subrogation.referred_to_subrogation_date AS old_referred_to_subrogation_date,\n\tLKP_claim_subrogation.subrogation_comment AS old_subrogation_comment,\n\tLKP_claim_subrogation.installment_reached_ind AS old_installment_reached_ind,\n\tLKP_claim_subrogation.agreement_amt AS old_agreement_amt,\n\tLKP_claim_subrogation.monthly_installment_amt AS old_monthly_installment_amt,\n\tLKP_claim_subrogation.pay_start_date AS old_pay_start_date,\n\tLKP_claim_subrogation.file_status_code AS old_file_status_code,\n\tLKP_claim_subrogation.ded_status_code AS old_ded_status_code,\n\tLKP_claim_subrogation.closure_date AS old_closure_date,\n\tEXP_gather_values.insd_deduct,\n\tEXP_gather_values.ref_subro_dt,\n\tEXP_gather_values.general_comment,\n\tEXP_gather_values.install_reached_out,\n\tEXP_gather_values.amt_of_agreement,\n\tEXP_gather_values.install_amt_month,\n\tEXP_gather_values.start_pmt_dt,\n\tEXP_gather_values.file_status,\n\tEXP_gather_values.deduct_has_been,\n\tEXP_gather_values.closure_date,\n\tLKP_CLM_COMMENTS_STAGE.TCC_COMMENT_TXT,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(TCC_COMMENT_TXT))) OR LENGTH(LTRIM(RTRIM(TCC_COMMENT_TXT))) = 0, 'N/A', LTRIM(RTRIM(TCC_COMMENT_TXT)))\n\tIFF(LTRIM(RTRIM(TCC_COMMENT_TXT)) IS NULL OR LENGTH(LTRIM(RTRIM(TCC_COMMENT_TXT))) = 0, 'N/A', LTRIM(RTRIM(TCC_COMMENT_TXT))) AS v_TCC_COMMENT_TXT,\n\tv_TCC_COMMENT_TXT AS TCC_COMMENT_TXT_out,\n\t-- *INF*: iif(isnull(old_claimant_cov_det_ak_id)\r\n\t-- , 'NEW'\r\n\t-- , IIF(old_insd_ded_amt != insd_deduct OR\r\n\t-- old_referred_to_subrogation_date != ref_subro_dt OR\r\n\t-- old_subrogation_comment != v_TCC_COMMENT_TXT OR\r\n\t-- old_installment_reached_ind != install_reached_out OR\r\n\t-- old_agreement_amt != amt_of_agreement OR\r\n\t-- old_monthly_installment_amt != install_amt_month OR\r\n\t-- old_pay_start_date != start_pmt_dt OR\r\n\t-- old_file_status_code != file_status OR\r\n\t-- old_ded_status_code != deduct_has_been OR\r\n\t-- old_closure_date != closure_date\r\n\t-- ,'UPDATE'\r\n\t-- ,'NOCHANGE')\r\n\t-- )\r\n\t-- \n\tIFF(old_claimant_cov_det_ak_id IS NULL, 'NEW', IFF(old_insd_ded_amt != insd_deduct OR old_referred_to_subrogation_date != ref_subro_dt OR old_subrogation_comment != v_TCC_COMMENT_TXT OR old_installment_reached_ind != install_reached_out OR old_agreement_amt != amt_of_agreement OR old_monthly_installment_amt != install_amt_month OR old_pay_start_date != start_pmt_dt OR old_file_status_code != file_status OR old_ded_status_code != deduct_has_been OR old_closure_date != closure_date, 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\tEXP_gather_values.claimant_cov_det_ak_id\n\tFROM EXP_gather_values\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE\n\tON LKP_CLM_COMMENTS_STAGE.FOLDER_KEY = EXP_gather_values.tch_claim_nbr_out AND LKP_CLM_COMMENTS_STAGE.COMMENT_ITEM_NBR = EXP_gather_values.general_comment\n\tLEFT JOIN LKP_claim_subrogation\n\tON LKP_claim_subrogation.claimant_cov_det_ak_id = EXP_gather_values.claimant_cov_det_ak_id\n),\nFIL_insert_rows AS (\n\tSELECT\n\tclaim_subrogation_id, \n\tclaim_subrogation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tinsd_deduct, \n\tref_subro_dt, \n\tinstall_reached_out, \n\tamt_of_agreement, \n\tinstall_amt_month, \n\tstart_pmt_dt, \n\tfile_status, \n\tdeduct_has_been, \n\tclosure_date, \n\tTCC_COMMENT_TXT_out AS TCC_COMMENT_TXT, \n\tchanged_flag, \n\told_claimant_cov_det_ak_id\n\tFROM EXP_gather_old_values\n\tWHERE changed_flag = 'NEW' OR changed_flag = 'UPDATE'\n),\nSEQ_claim_subrogation_ak_id AS (\n\tCREATE SEQUENCE SEQ_claim_subrogation_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_determine_AK AS (\n\tSELECT\n\tclaim_subrogation_id,\n\tclaim_subrogation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tinsd_deduct,\n\tref_subro_dt,\n\tinstall_reached_out,\n\tamt_of_agreement,\n\tinstall_amt_month,\n\tstart_pmt_dt,\n\tfile_status,\n\tdeduct_has_been,\n\tclosure_date,\n\tTCC_COMMENT_TXT,\n\tchanged_flag,\n\tSEQ_claim_subrogation_ak_id.NEXTVAL,\n\t-- *INF*: IIF(ISNULL(claim_subrogation_ak_id), NEXTVAL, claim_subrogation_ak_id)\n\tIFF(claim_subrogation_ak_id IS NULL, NEXTVAL, claim_subrogation_ak_id) AS claim_subrogation_ak_id_out,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_system_id,\n\tSYSDATE AS created_modified_date\n\tFROM FIL_insert_rows\n),\nclaim_subrogation_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_subrogation\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_subrogation_ak_id, claimant_cov_det_ak_id, insd_ded_amt, referred_to_subrogation_date, subrogation_comment, installment_reached_ind, agreement_amt, monthly_installment_amt, pay_start_date, file_status_code, ded_status_code, closure_date)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tsource_system_id AS SOURCE_SYS_ID, \n\tcreated_modified_date AS CREATED_DATE, \n\tcreated_modified_date AS MODIFIED_DATE, \n\tclaim_subrogation_ak_id_out AS CLAIM_SUBROGATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tinsd_deduct AS INSD_DED_AMT, \n\tref_subro_dt AS REFERRED_TO_SUBROGATION_DATE, \n\tTCC_COMMENT_TXT AS SUBROGATION_COMMENT, \n\tinstall_reached_out AS INSTALLMENT_REACHED_IND, \n\tamt_of_agreement AS AGREEMENT_AMT, \n\tinstall_amt_month AS MONTHLY_INSTALLMENT_AMT, \n\tstart_pmt_dt AS PAY_START_DATE, \n\tfile_status AS FILE_STATUS_CODE, \n\tdeduct_has_been AS DED_STATUS_CODE, \n\tCLOSURE_DATE\n\tFROM EXP_determine_AK\n),\nSQ_claim_subrogation AS (\n\tSELECT a.claim_subrogation_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date, \r\n\ta.source_sys_id, \r\n\ta.claim_subrogation_ak_id, \r\n\ta.claimant_cov_det_ak_id \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_subrogation a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND\r\n\tEXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_subrogation b\r\n\t\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND \r\n\tb.crrnt_snpsht_flag = '1'\r\n\t\t\tAND a.claim_subrogation_ak_id =  b.claim_subrogation_ak_id\r\n\t\t\tAND a.claimant_cov_det_ak_id = b.claimant_cov_det_ak_id\r\n\t\t\tGROUP BY claim_subrogation_ak_id, claimant_cov_det_ak_id \r\n\t\t\tHAVING COUNT(*) > 1) \r\n\tORDER BY claim_subrogation_ak_id, claimant_cov_det_ak_id , eff_from_date  DESC\n),\nEXP_expire_rows AS (\n\tSELECT\n\tclaim_subrogation_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tclaim_subrogation_ak_id,\n\tclaimant_cov_det_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_subrogation_ak_id = v_prev_row_claim_subrogation_ak_id AND claimant_cov_det_ak_id = v_prev_row_claimant_cov_det_ak_id, ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),\r\n\t-- \teff_to_date)\n\tDECODE(TRUE,\n\tclaim_subrogation_ak_id = v_prev_row_claim_subrogation_ak_id AND claimant_cov_det_ak_id = v_prev_row_claimant_cov_det_ak_id, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\teff_to_date) AS v_new_eff_to_date,\n\tv_new_eff_to_date AS new_eff_to_date,\n\t0 AS new_crrnt_snpsht_flag,\n\tclaim_subrogation_ak_id AS v_prev_row_claim_subrogation_ak_id,\n\tclaimant_cov_det_ak_id AS v_prev_row_claimant_cov_det_ak_id,\n\teff_from_date AS v_prev_row_eff_from_date,\n\tsysdate AS new_modified_Date\n\tFROM SQ_claim_subrogation\n),\nFIL_first_row_in_ak_group AS (\n\tSELECT\n\tclaim_subrogation_id, \n\teff_to_date, \n\tclaim_subrogation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_Date\n\tFROM EXP_expire_rows\n\tWHERE eff_to_date <> new_eff_to_date\n),\nUPD_claim_subrogation AS (\n\tSELECT\n\tclaim_subrogation_id, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_Date\n\tFROM FIL_first_row_in_ak_group\n),\nclaim_subrogation_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_subrogation AS T\n\tUSING UPD_claim_subrogation AS S\n\tON T.claim_subrogation_id = S.claim_subrogation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.new_crrnt_snpsht_flag, T.eff_to_date = S.new_eff_to_date, T.modified_date = S.new_modified_Date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}