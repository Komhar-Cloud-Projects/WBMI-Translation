{
    "name": "m_CLM_DW_LOAD_Claim_Occurrence_Calc",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Occurrence_Calc",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_claimat_calc_rptd_date AS (\n\tSELECT\n\tclaimant_date,\n\tclaim_occurrence_ak_id\n\tFROM (\n\t\tSELECT CALC.claimant_date as claimant_date, CPO.claim_occurrence_ak_id as claim_occurrence_ak_id FROM claimant_calculation CALC, claim_party_occurrence CPO\r\n\t\tWHERE\r\n\t\tCPO.claim_party_occurrence_ak_id = CALC.claim_party_occurrence_ak_id\r\n\t\tORDER BY CPO.claim_occurrence_ak_id , CALC.claimant_date --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id ORDER BY claimant_date) = 1\n),\nSQ_claim_occurrence_reserve_calculation AS (\n\tSELECT A.claim_occurrence_ak_id, A.financial_type_code, A.reserve_date, A.reserve_date_type, A.source_sys_id \r\n\tFROM\r\n\t claim_occurrence_reserve_calculation A\r\n\tWHERE A.claim_occurrence_ak_id \r\n\tIN(\r\n\tSELECT B.claim_occurrence_ak_id FROM claim_occurrence_reserve_calculation B\r\n\tWHERE B.created_date >='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t)\r\n\tORDER BY A.claim_occurrence_ak_id, A.reserve_date, A.reserve_date_type\n),\nEXP_get_values AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\t-- *INF*: IIF(claim_occurrence_ak_id = v_prev_row_claim_occurrence_ak_id, 'OLD', 'NEW')\n\tIFF(claim_occurrence_ak_id = v_prev_row_claim_occurrence_ak_id, 'OLD', 'NEW') AS v_claim_occurrence,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', IIF(financial_type_code = 'D', reserve_date_type,'NA'), IIF(financial_type_code = 'D', reserve_date_type, v_claim_occurrence_date_type_D_old))\n\tIFF(v_claim_occurrence = 'NEW', IFF(financial_type_code = 'D', reserve_date_type, 'NA'), IFF(financial_type_code = 'D', reserve_date_type, v_claim_occurrence_date_type_D_old)) AS v_claim_occurrence_date_type_D,\n\tv_claim_occurrence_date_type_D AS v_claim_occurrence_date_type_D_old,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', IIF(financial_type_code = 'E', reserve_date_type,'NA'), IIF(financial_type_code = 'E', reserve_date_type, v_claim_occurrence_date_type_E_old))\n\tIFF(v_claim_occurrence = 'NEW', IFF(financial_type_code = 'E', reserve_date_type, 'NA'), IFF(financial_type_code = 'E', reserve_date_type, v_claim_occurrence_date_type_E_old)) AS v_claim_occurrence_date_type_E,\n\tv_claim_occurrence_date_type_E AS v_claim_occurrence_date_type_E_old,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', IIF(financial_type_code = 'S', reserve_date_type,'NA'), IIF(financial_type_code = 'S', reserve_date_type, v_claim_occurrence_date_type_S_old))\n\tIFF(v_claim_occurrence = 'NEW', IFF(financial_type_code = 'S', reserve_date_type, 'NA'), IFF(financial_type_code = 'S', reserve_date_type, v_claim_occurrence_date_type_S_old)) AS v_claim_occurrence_date_type_S,\n\tv_claim_occurrence_date_type_S AS v_claim_occurrence_date_type_S_old,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', IIF(financial_type_code = 'B', reserve_date_type,'NA'), IIF(financial_type_code = 'B', reserve_date_type, v_claim_occurrence_date_type_B_old))\n\tIFF(v_claim_occurrence = 'NEW', IFF(financial_type_code = 'B', reserve_date_type, 'NA'), IFF(financial_type_code = 'B', reserve_date_type, v_claim_occurrence_date_type_B_old)) AS v_claim_occurrence_date_type_B,\n\tv_claim_occurrence_date_type_B AS v_claim_occurrence_date_type_B_old,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', IIF(financial_type_code = 'R', reserve_date_type,'NA'), IIF(financial_type_code = 'R', reserve_date_type, v_claim_occurrence_date_type_R_old))\n\tIFF(v_claim_occurrence = 'NEW', IFF(financial_type_code = 'R', reserve_date_type, 'NA'), IFF(financial_type_code = 'R', reserve_date_type, v_claim_occurrence_date_type_R_old)) AS v_claim_occurrence_date_type_R,\n\tv_claim_occurrence_date_type_R AS v_claim_occurrence_date_type_R_old,\n\t-- *INF*: IIF(\r\n\t-- (ISNULL(v_claim_occurrence_date_type_D) OR v_claim_occurrence_date_type_D = 'NA' OR v_claim_occurrence_date_type_D = '1NOTICEONLY' )\r\n\t-- AND(ISNULL(v_claim_occurrence_date_type_E) OR v_claim_occurrence_date_type_E = 'NA' OR v_claim_occurrence_date_type_E = '1NOTICEONLY') \r\n\t-- AND (ISNULL(v_claim_occurrence_date_type_S) OR v_claim_occurrence_date_type_S = 'NA' OR v_claim_occurrence_date_type_S = '1NOTICEONLY') \r\n\t-- AND (ISNULL(v_claim_occurrence_date_type_B) OR v_claim_occurrence_date_type_B = 'NA' OR v_claim_occurrence_date_type_B = '1NOTICEONLY')\r\n\t-- AND (ISNULL(v_claim_occurrence_date_type_R) OR v_claim_occurrence_date_type_R = 'NA' OR v_claim_occurrence_date_type_R = '1NOTICEONLY'), '1NOTICEONLY', \r\n\t-- \r\n\t-- IIF(v_claim_occurrence_date_type_D = '2OPEN' OR v_claim_occurrence_date_type_D = '4REOPEN' OR v_claim_occurrence_date_type_E = '2OPEN' OR v_claim_occurrence_date_type_E = '4REOPEN' OR v_claim_occurrence_date_type_S = '2OPEN' OR v_claim_occurrence_date_type_S = '4REOPEN' OR v_claim_occurrence_date_type_B = '2OPEN' OR v_claim_occurrence_date_type_B = '4REOPEN' OR v_claim_occurrence_date_type_R = '2OPEN' OR v_claim_occurrence_date_type_R = '4REOPEN', '2OPEN',\r\n\t-- \r\n\t-- '3CLOSED'))\n\tIFF(( v_claim_occurrence_date_type_D IS NULL OR v_claim_occurrence_date_type_D = 'NA' OR v_claim_occurrence_date_type_D = '1NOTICEONLY' ) AND ( v_claim_occurrence_date_type_E IS NULL OR v_claim_occurrence_date_type_E = 'NA' OR v_claim_occurrence_date_type_E = '1NOTICEONLY' ) AND ( v_claim_occurrence_date_type_S IS NULL OR v_claim_occurrence_date_type_S = 'NA' OR v_claim_occurrence_date_type_S = '1NOTICEONLY' ) AND ( v_claim_occurrence_date_type_B IS NULL OR v_claim_occurrence_date_type_B = 'NA' OR v_claim_occurrence_date_type_B = '1NOTICEONLY' ) AND ( v_claim_occurrence_date_type_R IS NULL OR v_claim_occurrence_date_type_R = 'NA' OR v_claim_occurrence_date_type_R = '1NOTICEONLY' ), '1NOTICEONLY', IFF(v_claim_occurrence_date_type_D = '2OPEN' OR v_claim_occurrence_date_type_D = '4REOPEN' OR v_claim_occurrence_date_type_E = '2OPEN' OR v_claim_occurrence_date_type_E = '4REOPEN' OR v_claim_occurrence_date_type_S = '2OPEN' OR v_claim_occurrence_date_type_S = '4REOPEN' OR v_claim_occurrence_date_type_B = '2OPEN' OR v_claim_occurrence_date_type_B = '4REOPEN' OR v_claim_occurrence_date_type_R = '2OPEN' OR v_claim_occurrence_date_type_R = '4REOPEN', '2OPEN', '3CLOSED')) AS v_overall_claim_occurrence_date_type_crrnt,\n\t-- *INF*: IIF(v_overall_claim_occurrence_date_type_crrnt = '1NOTICEONLY', '1NOTICEONLY', IIF(v_overall_claim_occurrence_date_type_crrnt = '2OPEN', IIF(IN(v_claim_occurrence_date_type_out_old , '3CLOSED', '5CLOSEDAFTERREOPEN', '4REOPEN') AND v_claim_occurrence = 'OLD', '4REOPEN', '2OPEN'), IIF(v_overall_claim_occurrence_date_type_crrnt = '3CLOSED', IIF(IN(v_claim_occurrence_date_type_out_old, '4REOPEN', '5CLOSEDAFTERREOPEN'), '5CLOSEDAFTERREOPEN', '3CLOSED'))))\n\tIFF(v_overall_claim_occurrence_date_type_crrnt = '1NOTICEONLY', '1NOTICEONLY', IFF(v_overall_claim_occurrence_date_type_crrnt = '2OPEN', IFF(IN(v_claim_occurrence_date_type_out_old, '3CLOSED', '5CLOSEDAFTERREOPEN', '4REOPEN') AND v_claim_occurrence = 'OLD', '4REOPEN', '2OPEN'), IFF(v_overall_claim_occurrence_date_type_crrnt = '3CLOSED', IFF(IN(v_claim_occurrence_date_type_out_old, '4REOPEN', '5CLOSEDAFTERREOPEN'), '5CLOSEDAFTERREOPEN', '3CLOSED')))) AS v_claim_occurrence_date_type_out,\n\t-- *INF*: IIF(v_claim_occurrence = 'NEW', 'INSERT', IIF(v_claim_occurrence_date_type_out = v_claim_occurrence_date_type_out_old, 'NOCHANGE', 'INSERT'))\n\tIFF(v_claim_occurrence = 'NEW', 'INSERT', IFF(v_claim_occurrence_date_type_out = v_claim_occurrence_date_type_out_old, 'NOCHANGE', 'INSERT')) AS v_insert_flag,\n\tv_insert_flag AS insert_flag_out,\n\tv_claim_occurrence_date_type_out AS v_claim_occurrence_date_type_out_old,\n\tv_claim_occurrence_date_type_out AS claim_occurrence_date_type_out,\n\tclaim_occurrence_ak_id AS v_prev_row_claim_occurrence_ak_id,\n\treserve_date_type AS v_prev_row_reserve_date_type,\n\tfinancial_type_code AS v_prev_row_financial_type_code,\n\tsource_sys_id\n\tFROM SQ_claim_occurrence_reserve_calculation\n),\nFIL_non_inserts AS (\n\tSELECT\n\tclaim_occurrence_ak_id, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_date_type, \n\tinsert_flag_out, \n\tclaim_occurrence_date_type_out, \n\tsource_sys_id\n\tFROM EXP_get_values\n\tWHERE insert_flag_out = 'INSERT'\n),\nLKP_Claim_occurrence_Calc1 AS (\n\tSELECT\n\tclaim_occurrence_calculation_id,\n\tclaim_occurrence_status_code,\n\tclaim_occurrence_reported_date,\n\tclaim_supplemental_ind,\n\tclaim_financial_ind,\n\tclaim_recovery_ind,\n\tclaim_notice_only_ind,\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_date,\n\tclaim_occurrence_date_type\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_calculation_id,\n\t\t\tclaim_occurrence_status_code,\n\t\t\tclaim_occurrence_reported_date,\n\t\t\tclaim_supplemental_ind,\n\t\t\tclaim_financial_ind,\n\t\t\tclaim_recovery_ind,\n\t\t\tclaim_notice_only_ind,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\tclaim_occurrence_date,\n\t\t\tclaim_occurrence_date_type\n\t\tFROM claim_occurrence_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_occurrence_date,claim_occurrence_date_type ORDER BY claim_occurrence_calculation_id) = 1\n),\nEXP_get_lookup_values AS (\n\tSELECT\n\tFIL_non_inserts.claim_occurrence_ak_id,\n\tFIL_non_inserts.financial_type_code,\n\tFIL_non_inserts.reserve_date,\n\tFIL_non_inserts.reserve_date_type,\n\tFIL_non_inserts.claim_occurrence_date_type_out,\n\tFIL_non_inserts.source_sys_id,\n\tLKP_Claim_occurrence_Calc1.claim_occurrence_calculation_id AS lkp_caim_occurrence_clac_id\n\tFROM FIL_non_inserts\n\tLEFT JOIN LKP_Claim_occurrence_Calc1\n\tON LKP_Claim_occurrence_Calc1.claim_occurrence_ak_id = FIL_non_inserts.claim_occurrence_ak_id AND LKP_Claim_occurrence_Calc1.claim_occurrence_date = FIL_non_inserts.reserve_date AND LKP_Claim_occurrence_Calc1.claim_occurrence_date_type = FIL_non_inserts.claim_occurrence_date_type_out\n),\nFIL_existing_records AS (\n\tSELECT\n\tEXP_get_lookup_values.lkp_caim_occurrence_clac_id AS lkp_claim_occurrence_calculation_id, \n\tFIL_non_inserts.claim_occurrence_ak_id, \n\tFIL_non_inserts.financial_type_code, \n\tFIL_non_inserts.reserve_date, \n\tFIL_non_inserts.reserve_date_type, \n\tFIL_non_inserts.claim_occurrence_date_type_out, \n\tFIL_non_inserts.source_sys_id\n\tFROM EXP_get_lookup_values\n\t -- Manually join with FIL_non_inserts\n\tWHERE IIF(ISNULL(lkp_claim_occurrence_calculation_id), TRUE, FALSE)\n),\nLKP_Claimant_calc_financial_ind AS (\n\tSELECT\n\tIN_claim_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_occurrence_ak_id,\n\tclaimant_date,\n\tclaimant_financial_ind\n\tFROM (\n\t\tSELECT CALC.claimant_financial_ind as claimant_financial_ind, CPO.claim_occurrence_ak_id as claim_occurrence_ak_id, CALC.claimant_date as claimant_date FROM claimant_calculation CALC, claim_party_occurrence CPO\r\n\t\tWHERE\r\n\t\tCPO.claim_party_occurrence_ak_id = CALC.claim_party_occurrence_ak_id\r\n\t\tAND CALC.claimant_financial_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claimant_date ORDER BY IN_claim_occurrence_ak_id) = 1\n),\nLKP_Claimant_calc_supplemental_ind AS (\n\tSELECT\n\tIN_claim_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_occurrence_ak_id,\n\tclaimant_date,\n\tclaimant_supplemental_ind\n\tFROM (\n\t\tSELECT CALC.claimant_supplemental_ind as claimant_supplemental_ind, CPO.claim_occurrence_ak_id as claim_occurrence_ak_id, CALC.claimant_date as claimant_date FROM claimant_calculation CALC, claim_party_occurrence CPO\r\n\t\tWHERE\r\n\t\tCPO.claim_party_occurrence_ak_id = CALC.claim_party_occurrence_ak_id\r\n\t\tAND CALC.claimant_supplemental_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claimant_date ORDER BY IN_claim_occurrence_ak_id) = 1\n),\nLKP_claim_occurrence AS (\n\tSELECT\n\tIN_claim_occurrence_ak_id,\n\tclaim_occurrence_ak_id,\n\ts3p_claim_created_date\n\tFROM (\n\t\tSELECT \n\t\t\tIN_claim_occurrence_ak_id,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\ts3p_claim_created_date\n\t\tFROM claim_occurrence\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id ORDER BY IN_claim_occurrence_ak_id) = 1\n),\nLKP_claimant_calc_notice_only AS (\n\tSELECT\n\tIN_claim_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_occurrence_ak_id,\n\tclaimant_date,\n\tclaimant_notice_only_ind\n\tFROM (\n\t\tSELECT CALC.claimant_notice_only_ind as claimant_notice_only_ind, CPO.claim_occurrence_ak_id as claim_occurrence_ak_id, CALC.claimant_date as claimant_date FROM claimant_calculation CALC, claim_party_occurrence CPO\r\n\t\tWHERE\r\n\t\tCPO.claim_party_occurrence_ak_id = CALC.claim_party_occurrence_ak_id\r\n\t\tAND CALC.claimant_notice_only_ind = 'N'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claimant_date ORDER BY IN_claim_occurrence_ak_id) = 1\n),\nLKP_claimant_calc_recovery_ind AS (\n\tSELECT\n\tIN_claim_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_occurrence_ak_id,\n\tclaimant_date,\n\tclaimant_recovery_ind\n\tFROM (\n\t\tSELECT CALC.claimant_recovery_ind as claimant_recovery_ind, CPO.claim_occurrence_ak_id as claim_occurrence_ak_id, CALC.claimant_date as claimant_date FROM claimant_calculation CALC, claim_party_occurrence CPO\r\n\t\tWHERE\r\n\t\tCPO.claim_party_occurrence_ak_id = CALC.claim_party_occurrence_ak_id\r\n\t\tAND CALC.claimant_recovery_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claimant_date ORDER BY IN_claim_occurrence_ak_id) = 1\n),\nEXP_calculate_values AS (\n\tSELECT\n\tFIL_existing_records.claim_occurrence_ak_id,\n\tFIL_existing_records.reserve_date,\n\tFIL_existing_records.reserve_date_type,\n\tFIL_existing_records.claim_occurrence_date_type_out,\n\t-- *INF*: DECODE(claim_occurrence_date_type_out, '1NOTICEONLY', 'N', '2OPEN', 'O', '3CLOSED', 'C', '4REOPEN', 'O', '5CLOSEDAFTERREOPEN', 'C')\n\tDECODE(claim_occurrence_date_type_out,\n\t'1NOTICEONLY', 'N',\n\t'2OPEN', 'O',\n\t'3CLOSED', 'C',\n\t'4REOPEN', 'O',\n\t'5CLOSEDAFTERREOPEN', 'C') AS claim_occurrence_status_code_out,\n\t-- *INF*: :LKP.LKP_CLAIMAT_CALC_RPTD_DATE(claim_occurrence_ak_id)\n\tLKP_CLAIMAT_CALC_RPTD_DATE_claim_occurrence_ak_id.claimant_date AS v_claim_occurrence_rpted_date_pms,\n\tv_claim_occurrence_rpted_date_pms AS claim_occurrence_rpted_date_pms,\n\tLKP_claim_occurrence.s3p_claim_created_date AS claim_occurrence_rpted_date_exceed,\n\t-- *INF*: IIF(source_sys_id = 'EXCEED', claim_occurrence_rpted_date_exceed, v_claim_occurrence_rpted_date_pms)\n\tIFF(source_sys_id = 'EXCEED', claim_occurrence_rpted_date_exceed, v_claim_occurrence_rpted_date_pms) AS claim_occurrence_rpted_date_out,\n\tLKP_claimant_calc_notice_only.claimant_notice_only_ind AS lkp_claimant_notice_only_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_notice_only_ind), 'Y', 'N')\n\tIFF(lkp_claimant_notice_only_ind IS NULL, 'Y', 'N') AS claim_occurrence_notice_only_indicator,\n\tLKP_claimant_calc_recovery_ind.claimant_recovery_ind AS lkp_claimant_recovery_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_recovery_ind), 'N', 'Y')\n\tIFF(lkp_claimant_recovery_ind IS NULL, 'N', 'Y') AS claim_occurrence_recovery_ind_out,\n\tLKP_Claimant_calc_supplemental_ind.claimant_supplemental_ind AS lkp_claimant_supplemental_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_supplemental_ind), 'N', 'Y')\n\tIFF(lkp_claimant_supplemental_ind IS NULL, 'N', 'Y') AS claim_occurrence_supplemental_ind_out,\n\tLKP_Claimant_calc_financial_ind.claimant_financial_ind AS lkp_claimant_financial_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_financial_ind), 'N', 'Y')\n\tIFF(lkp_claimant_financial_ind IS NULL, 'N', 'Y') AS claim_occurrence_financial_indicator,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tFIL_existing_records.source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM FIL_existing_records\n\tLEFT JOIN LKP_Claimant_calc_financial_ind\n\tON LKP_Claimant_calc_financial_ind.claim_occurrence_ak_id = FIL_existing_records.claim_occurrence_ak_id AND LKP_Claimant_calc_financial_ind.claimant_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_Claimant_calc_supplemental_ind\n\tON LKP_Claimant_calc_supplemental_ind.claim_occurrence_ak_id = FIL_existing_records.claim_occurrence_ak_id AND LKP_Claimant_calc_supplemental_ind.claimant_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_claim_occurrence\n\tON LKP_claim_occurrence.claim_occurrence_ak_id = FIL_existing_records.claim_occurrence_ak_id\n\tLEFT JOIN LKP_claimant_calc_notice_only\n\tON LKP_claimant_calc_notice_only.claim_occurrence_ak_id = FIL_existing_records.claim_occurrence_ak_id AND LKP_claimant_calc_notice_only.claimant_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_claimant_calc_recovery_ind\n\tON LKP_claimant_calc_recovery_ind.claim_occurrence_ak_id = FIL_existing_records.claim_occurrence_ak_id AND LKP_claimant_calc_recovery_ind.claimant_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_CLAIMAT_CALC_RPTD_DATE LKP_CLAIMAT_CALC_RPTD_DATE_claim_occurrence_ak_id\n\tON LKP_CLAIMAT_CALC_RPTD_DATE_claim_occurrence_ak_id.claim_occurrence_ak_id = claim_occurrence_ak_id\n\n),\nSEQ_claim_occ_calc_ak_id AS (\n\tCREATE SEQUENCE SEQ_claim_occ_calc_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaim_occurrence_calculation AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tclaim_occurrence_status_code_out AS CLAIM_OCCURRENCE_STATUS_CODE, \n\treserve_date AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out AS CLAIM_OCCURRENCE_DATE_TYPE, \n\tclaim_occurrence_rpted_date_out AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tclaim_occurrence_supplemental_ind_out AS CLAIM_SUPPLEMENTAL_IND, \n\tclaim_occurrence_financial_indicator AS CLAIM_FINANCIAL_IND, \n\tclaim_occurrence_recovery_ind_out AS CLAIM_RECOVERY_IND, \n\tclaim_occurrence_notice_only_indicator AS CLAIM_NOTICE_ONLY_IND, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_calculate_values\n),\nSQ_claim_occurrence_insert_missing_claims AS (\n\tSELECT claim_occurrence.claim_occurrence_ak_id, claim_occurrence.source_claim_occurrence_status_code, claim_occurrence.notice_claim_ind, claim_occurrence.s3p_claim_created_date, claim_occurrence.s3p_claim_updated_date, claim_occurrence.source_sys_id \r\n\tFROM\r\n\t claim_occurrence\r\n\tWHERE  claim_occurrence.claim_occurrence_ak_id NOT IN\r\n\t(SELECT DISTINCT claim_occurrence_ak_id FROM claim_occurrence_calculation)\r\n\tAND claim_occurrence.source_sys_id = 'EXCEED' and claim_occurrence.crrnt_snpsht_flag = 1\n),\nEXP_set_values_insert_missing_claims AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tnotice_claim_ind AS S3P_not_claim_ind,\n\tsource_claim_occurrence_status_code AS s3p_claim_occurrence_status_code,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, IIF(s3p_claim_occurrence_status_code = 'C', 'O',s3p_claim_occurrence_status_code) )\n\tIFF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, IFF(s3p_claim_occurrence_status_code = 'C', 'O', s3p_claim_occurrence_status_code)) AS claim_occurrence_status_code_out,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, s3p_claim_occurrence_status_code)\n\tIFF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, s3p_claim_occurrence_status_code) AS claim_occurrence_status_code_out_closed,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', '1NOTICEONLY', IIF(s3p_claim_occurrence_status_code = 'E', '6OPENEDINERROR', '7OPEN\\NOFINANCIAL'))\n\tIFF(S3P_not_claim_ind = 'N', '1NOTICEONLY', IFF(s3p_claim_occurrence_status_code = 'E', '6OPENEDINERROR', '7OPEN\\NOFINANCIAL')) AS claim_occurrence_date_type_out,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'C', '8CLOSED\\NOFINANCIAL')\n\tIFF(S3P_not_claim_ind = 'C', '8CLOSED\\NOFINANCIAL') AS claim_occurrence_date_type_out_closed,\n\ts3p_claim_created_date,\n\ts3p_claim_updated_date,\n\t'N' AS claim_supplemental_ind,\n\t'N' AS claim_financial_ind,\n\t'N' AS claim_recovery_ind,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', 'Y', 'N')\n\tIFF(S3P_not_claim_ind = 'N', 'Y', 'N') AS claim_notice_only_ind,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\ts3p_claim_created_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsource_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_occurrence_insert_missing_claims\n),\nRTR_OPEN_CLOSED_insert_missing_claims AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\ts3p_claim_occurrence_status_code,\n\tclaim_occurrence_status_code_out,\n\tclaim_occurrence_status_code_out_closed,\n\tclaim_occurrence_date_type_out,\n\tclaim_occurrence_date_type_out_closed,\n\ts3p_claim_created_date,\n\ts3p_claim_updated_date,\n\tclaim_supplemental_ind,\n\tclaim_financial_ind,\n\tclaim_recovery_ind,\n\tclaim_notice_only_ind,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date\n\tFROM EXP_set_values_insert_missing_claims\n),\nRTR_OPEN_CLOSED_insert_missing_claims_INSERT_OPEN AS (SELECT * FROM RTR_OPEN_CLOSED_insert_missing_claims WHERE TRUE),\nRTR_OPEN_CLOSED_insert_missing_claims_INSERT_CLOSED AS (SELECT * FROM RTR_OPEN_CLOSED_insert_missing_claims WHERE s3p_claim_occurrence_status_code = 'C'),\nSEQ_claim_occ_calc_ak_id1 AS (\n\tCREATE SEQUENCE SEQ_claim_occ_calc_ak_id1\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaim_occurrence_calculation_insert_closed_no_fin3 AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id1.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tclaim_occurrence_status_code_out_closed AS CLAIM_OCCURRENCE_STATUS_CODE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out_closed AS CLAIM_OCCURRENCE_DATE_TYPE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tCLAIM_SUPPLEMENTAL_IND, \n\tCLAIM_FINANCIAL_IND, \n\tCLAIM_RECOVERY_IND, \n\tCLAIM_NOTICE_ONLY_IND, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\ts3p_claim_created_date AS EFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM RTR_OPEN_CLOSED_insert_missing_claims_INSERT_CLOSED\n),\nclaim_occurrence_calculation_insert_missing_claims1 AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id1.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tclaim_occurrence_status_code_out AS CLAIM_OCCURRENCE_STATUS_CODE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out AS CLAIM_OCCURRENCE_DATE_TYPE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tCLAIM_SUPPLEMENTAL_IND, \n\tCLAIM_FINANCIAL_IND, \n\tCLAIM_RECOVERY_IND, \n\tCLAIM_NOTICE_ONLY_IND, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM RTR_OPEN_CLOSED_insert_missing_claims_INSERT_OPEN\n),\nSQ_claim_occurrence_check_changed_statuses AS (\n\tSELECT claim_occurrence.claim_occurrence_ak_id, claim_occurrence.source_claim_occurrence_status_code, claim_occurrence.notice_claim_ind, claim_occurrence.s3p_claim_created_date, claim_occurrence.s3p_claim_updated_date, claim_occurrence.source_sys_id \r\n\tFROM\r\n\t claim_occurrence\r\n\tWHERE  \r\n\tclaim_occurrence.claim_occurrence_ak_id IN\r\n\t(SELECT DISTINCT claim_occurrence_ak_id FROM claim_occurrence_calculation where claim_occurrence_date_type \r\n\tin ('1NOTICEONLY', '6OPENEDINERROR', '7OPEN\\NOFINANCIAL', '8CLOSED\\NOFINANCIAL' )) \r\n\tAND claim_occurrence.source_sys_id = 'EXCEED' and claim_occurrence.crrnt_snpsht_flag = 1\n),\nEXP_set_values AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tnotice_claim_ind AS S3P_not_claim_ind,\n\tsource_claim_occurrence_status_code AS s3p_claim_occurrence_status_code,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, IIF(s3p_claim_occurrence_status_code = 'C', 'O',s3p_claim_occurrence_status_code) )\n\tIFF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, IFF(s3p_claim_occurrence_status_code = 'C', 'O', s3p_claim_occurrence_status_code)) AS claim_occurrence_status_code_out,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, s3p_claim_occurrence_status_code)\n\tIFF(S3P_not_claim_ind = 'N', S3P_not_claim_ind, s3p_claim_occurrence_status_code) AS claim_occurrence_status_code_out_closed,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', '1NOTICEONLY', IIF(s3p_claim_occurrence_status_code = 'E', '6OPENEDINERROR', '7OPEN\\NOFINANCIAL'))\n\tIFF(S3P_not_claim_ind = 'N', '1NOTICEONLY', IFF(s3p_claim_occurrence_status_code = 'E', '6OPENEDINERROR', '7OPEN\\NOFINANCIAL')) AS claim_occurrence_date_type_out,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'C', '8CLOSED\\NOFINANCIAL')\n\tIFF(S3P_not_claim_ind = 'C', '8CLOSED\\NOFINANCIAL') AS claim_occurrence_date_type_out_closed,\n\ts3p_claim_created_date,\n\ts3p_claim_updated_date,\n\t'N' AS claim_supplemental_ind,\n\t'N' AS claim_financial_ind,\n\t'N' AS claim_recovery_ind,\n\t-- *INF*: IIF(S3P_not_claim_ind = 'N', 'Y', 'N')\n\tIFF(S3P_not_claim_ind = 'N', 'Y', 'N') AS claim_notice_only_ind,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\ts3p_claim_created_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsource_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_occurrence_check_changed_statuses\n),\nRTR_OPEN_CLOSED AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\ts3p_claim_occurrence_status_code,\n\tclaim_occurrence_status_code_out,\n\tclaim_occurrence_status_code_out_closed,\n\tclaim_occurrence_date_type_out,\n\tclaim_occurrence_date_type_out_closed,\n\ts3p_claim_created_date,\n\ts3p_claim_updated_date,\n\tclaim_supplemental_ind,\n\tclaim_financial_ind,\n\tclaim_recovery_ind,\n\tclaim_notice_only_ind,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date\n\tFROM EXP_set_values\n),\nRTR_OPEN_CLOSED_INSERT_OPEN AS (SELECT * FROM RTR_OPEN_CLOSED WHERE TRUE),\nRTR_OPEN_CLOSED_INSERT_CLOSED AS (SELECT * FROM RTR_OPEN_CLOSED WHERE s3p_claim_occurrence_status_code = 'C'),\nLKP_Claim_occurrence_Calc_Open_No_fin AS (\n\tSELECT\n\tclaim_occurrence_calculation_id,\n\tclaim_occurrence_status_code,\n\tclaim_occurrence_reported_date,\n\tclaim_supplemental_ind,\n\tclaim_financial_ind,\n\tclaim_recovery_ind,\n\tclaim_notice_only_ind,\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_date,\n\tclaim_occurrence_date_type\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_calculation_id,\n\t\t\tclaim_occurrence_status_code,\n\t\t\tclaim_occurrence_reported_date,\n\t\t\tclaim_supplemental_ind,\n\t\t\tclaim_financial_ind,\n\t\t\tclaim_recovery_ind,\n\t\t\tclaim_notice_only_ind,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\tclaim_occurrence_date,\n\t\t\tclaim_occurrence_date_type\n\t\tFROM claim_occurrence_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_occurrence_date,claim_occurrence_date_type ORDER BY claim_occurrence_calculation_id) = 1\n),\nEXP_determine_insert_for_open AS (\n\tSELECT\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_occurrence_ak_id AS claim_occurrence_ak_id1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_occurrence_status_code_out AS claim_occurrence_status_code_out1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_occurrence_date_type_out AS claim_occurrence_date_type_out1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.s3p_claim_created_date AS s3p_claim_created_date1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_supplemental_ind AS claim_supplemental_ind1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_financial_ind AS claim_financial_ind1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_recovery_ind AS claim_recovery_ind1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.claim_notice_only_ind AS claim_notice_only_ind1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.crrnt_snpsht_flag AS crrnt_snpsht_flag1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.audit_id AS audit_id1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.eff_from_date AS eff_from_date1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.eff_to_date AS eff_to_date1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.source_sys_id AS source_sys_id1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.created_date AS created_date1,\n\tRTR_OPEN_CLOSED_INSERT_OPEN.modified_date AS modified_date1,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_calculation_id AS lkp_claim_occurrence_Calc_id,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_status_code AS lkp_claim_occurrence_status_code,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_reported_date AS lkp_claim_occurrence_reported_date,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_supplemental_ind AS lkp_claim_supplemental_ind,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_financial_ind AS lkp_claim_financial_ind,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_recovery_ind AS lkp_claim_recovery_ind,\n\tLKP_Claim_occurrence_Calc_Open_No_fin.claim_notice_only_ind AS lkp_claim_notice_only_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claim_occurrence_Calc_id), 'I',\r\n\t-- IIF(lkp_claim_occurrence_status_code != claim_occurrence_status_code_out1 \r\n\t-- OR lkp_claim_occurrence_reported_date != s3p_claim_created_date1\r\n\t-- OR lkp_claim_supplemental_ind != claim_supplemental_ind1\r\n\t-- OR lkp_claim_financial_ind != claim_financial_ind1\r\n\t-- OR lkp_claim_recovery_ind != claim_recovery_ind1\r\n\t-- OR lkp_claim_notice_only_ind != claim_notice_only_ind1, 'U', 'N'))\n\tIFF(lkp_claim_occurrence_Calc_id IS NULL, 'I', IFF(lkp_claim_occurrence_status_code != claim_occurrence_status_code_out1 OR lkp_claim_occurrence_reported_date != s3p_claim_created_date1 OR lkp_claim_supplemental_ind != claim_supplemental_ind1 OR lkp_claim_financial_ind != claim_financial_ind1 OR lkp_claim_recovery_ind != claim_recovery_ind1 OR lkp_claim_notice_only_ind != claim_notice_only_ind1, 'U', 'N')) AS insert_update_flag\n\tFROM RTR_OPEN_CLOSED_INSERT_OPEN\n\tLEFT JOIN LKP_Claim_occurrence_Calc_Open_No_fin\n\tON LKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_ak_id = RTR_OPEN_CLOSED.claim_occurrence_ak_id1 AND LKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_date = RTR_OPEN_CLOSED.s3p_claim_created_date1 AND LKP_Claim_occurrence_Calc_Open_No_fin.claim_occurrence_date_type = RTR_OPEN_CLOSED.claim_occurrence_date_type_out1\n),\nRTR_insert_update_opens AS (\n\tSELECT\n\tclaim_occurrence_ak_id1 AS claim_occurrence_ak_id,\n\tclaim_occurrence_status_code_out1 AS claim_occurrence_status_code_out,\n\tclaim_occurrence_date_type_out1 AS claim_occurrence_date_type_out,\n\ts3p_claim_created_date1 AS s3p_claim_created_date,\n\tclaim_supplemental_ind1 AS claim_supplemental_ind,\n\tclaim_financial_ind1 AS claim_financial_ind,\n\tclaim_recovery_ind1 AS claim_recovery_ind,\n\tclaim_notice_only_ind1 AS claim_notice_only_ind,\n\tcrrnt_snpsht_flag1 AS crrnt_snpsht_flag,\n\taudit_id1 AS audit_id,\n\teff_from_date1 AS eff_from_date,\n\teff_to_date1 AS eff_to_date,\n\tsource_sys_id1 AS source_sys_id,\n\tcreated_date1 AS created_date,\n\tmodified_date1 AS modified_date,\n\tinsert_update_flag,\n\tlkp_claim_occurrence_Calc_id\n\tFROM EXP_determine_insert_for_open\n),\nRTR_insert_update_opens_Insert AS (SELECT * FROM RTR_insert_update_opens WHERE insert_update_flag = 'I'),\nRTR_insert_update_opens_Update AS (SELECT * FROM RTR_insert_update_opens WHERE insert_update_flag = 'U'),\nUPD_insert_open AS (\n\tSELECT\n\tclaim_occurrence_ak_id AS claim_occurrence_ak_id1, \n\tclaim_occurrence_status_code_out AS claim_occurrence_status_code_out1, \n\tclaim_occurrence_date_type_out AS claim_occurrence_date_type_out1, \n\ts3p_claim_created_date AS s3p_claim_created_date1, \n\tclaim_supplemental_ind AS claim_supplemental_ind1, \n\tclaim_financial_ind AS claim_financial_ind1, \n\tclaim_recovery_ind AS claim_recovery_ind1, \n\tclaim_notice_only_ind AS claim_notice_only_ind1, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag1, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tsource_sys_id AS source_sys_id1, \n\tcreated_date AS created_date1, \n\tmodified_date AS modified_date1, \n\tinsert_update_flag AS insert_update_flag1\n\tFROM RTR_insert_update_opens_Insert\n),\nclaim_occurrence_calculation_Insert_Open_No_fin AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id1.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tclaim_occurrence_ak_id1 AS CLAIM_OCCURRENCE_AK_ID, \n\tclaim_occurrence_status_code_out1 AS CLAIM_OCCURRENCE_STATUS_CODE, \n\ts3p_claim_created_date1 AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out1 AS CLAIM_OCCURRENCE_DATE_TYPE, \n\ts3p_claim_created_date1 AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tclaim_supplemental_ind1 AS CLAIM_SUPPLEMENTAL_IND, \n\tclaim_financial_ind1 AS CLAIM_FINANCIAL_IND, \n\tclaim_recovery_ind1 AS CLAIM_RECOVERY_IND, \n\tclaim_notice_only_ind1 AS CLAIM_NOTICE_ONLY_IND, \n\tcrrnt_snpsht_flag1 AS CRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\teff_from_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tsource_sys_id1 AS SOURCE_SYS_ID, \n\tcreated_date1 AS CREATED_DATE, \n\tmodified_date1 AS MODIFIED_DATE\n\tFROM UPD_insert_open\n),\nUPD_update_open AS (\n\tSELECT\n\tclaim_occurrence_ak_id AS claim_occurrence_ak_id3, \n\tclaim_occurrence_status_code_out AS claim_occurrence_status_code_out3, \n\tclaim_occurrence_date_type_out AS claim_occurrence_date_type_out3, \n\ts3p_claim_created_date AS s3p_claim_created_date3, \n\tclaim_supplemental_ind AS claim_supplemental_ind3, \n\tclaim_financial_ind AS claim_financial_ind3, \n\tclaim_recovery_ind AS claim_recovery_ind3, \n\tclaim_notice_only_ind AS claim_notice_only_ind3, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag3, \n\taudit_id AS audit_id3, \n\teff_from_date AS eff_from_date3, \n\teff_to_date AS eff_to_date3, \n\tsource_sys_id AS source_sys_id3, \n\tcreated_date AS created_date3, \n\tmodified_date AS modified_date3, \n\tinsert_update_flag AS insert_update_flag3, \n\tlkp_claim_occurrence_Calc_id AS lkp_claim_occurrence_Calc_id3\n\tFROM RTR_insert_update_opens_Update\n),\nclaim_occurrence_calculation_Update_Open_No_fin AS (\n\tMERGE INTO claim_occurrence_calculation AS T\n\tUSING UPD_update_open AS S\n\tON T.claim_occurrence_calculation_id = S.lkp_claim_occurrence_Calc_id3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claim_occurrence_status_code = S.claim_occurrence_status_code_out3, T.claim_occurrence_reported_date = S.s3p_claim_created_date3, T.claim_supplemental_ind = S.claim_supplemental_ind3, T.claim_financial_ind = S.claim_financial_ind3, T.claim_recovery_ind = S.claim_recovery_ind3, T.claim_notice_only_ind = S.claim_notice_only_ind3, T.modified_date = S.modified_date3\n),\nLKP_Claim_occurrence_Calc_Closed_No_fin AS (\n\tSELECT\n\tclaim_occurrence_calculation_id,\n\tclaim_occurrence_status_code,\n\tclaim_occurrence_reported_date,\n\tclaim_supplemental_ind,\n\tclaim_financial_ind,\n\tclaim_recovery_ind,\n\tclaim_notice_only_ind,\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_date,\n\tclaim_occurrence_date_type\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_calculation_id,\n\t\t\tclaim_occurrence_status_code,\n\t\t\tclaim_occurrence_reported_date,\n\t\t\tclaim_supplemental_ind,\n\t\t\tclaim_financial_ind,\n\t\t\tclaim_recovery_ind,\n\t\t\tclaim_notice_only_ind,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\tclaim_occurrence_date,\n\t\t\tclaim_occurrence_date_type\n\t\tFROM claim_occurrence_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_occurrence_date,claim_occurrence_date_type ORDER BY claim_occurrence_calculation_id) = 1\n),\nEXP_determine_insert_for_closed AS (\n\tSELECT\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_occurrence_ak_id AS claim_occurrence_ak_id3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_occurrence_status_code_out_closed AS claim_occurrence_status_code_out_closed3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_occurrence_date_type_out_closed AS claim_occurrence_date_type_out_closed3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.s3p_claim_created_date AS s3p_claim_created_date3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.s3p_claim_updated_date AS s3p_claim_updated_date3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_supplemental_ind AS claim_supplemental_ind3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_financial_ind AS claim_financial_ind3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_recovery_ind AS claim_recovery_ind3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.claim_notice_only_ind AS claim_notice_only_ind3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.crrnt_snpsht_flag AS crrnt_snpsht_flag3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.audit_id AS audit_id3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.eff_to_date AS eff_to_date3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.source_sys_id AS source_sys_id3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.created_date AS created_date3,\n\tRTR_OPEN_CLOSED_INSERT_CLOSED.modified_date AS modified_date3,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_calculation_id AS lkp_claim_occurrence_Calc_id,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_status_code AS lkp_claim_occurrence_status_code,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_reported_date AS lkp_claim_occurrence_reported_date,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_supplemental_ind AS lkp_claim_supplemental_ind,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_financial_ind AS lkp_claim_financial_ind,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_recovery_ind AS lkp_claim_recovery_ind,\n\tLKP_Claim_occurrence_Calc_Closed_No_fin.claim_notice_only_ind AS lkp_claim_notice_only_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claim_occurrence_Calc_id), 'I',\r\n\t-- IIF(lkp_claim_occurrence_status_code != claim_occurrence_status_code_out_closed3\r\n\t-- OR lkp_claim_occurrence_reported_date != s3p_claim_created_date3\r\n\t-- OR lkp_claim_supplemental_ind != claim_supplemental_ind3\r\n\t-- OR lkp_claim_financial_ind != claim_financial_ind3\r\n\t-- OR lkp_claim_recovery_ind != claim_recovery_ind3\r\n\t-- OR lkp_claim_notice_only_ind != claim_notice_only_ind3, 'U', 'N'))\n\tIFF(lkp_claim_occurrence_Calc_id IS NULL, 'I', IFF(lkp_claim_occurrence_status_code != claim_occurrence_status_code_out_closed3 OR lkp_claim_occurrence_reported_date != s3p_claim_created_date3 OR lkp_claim_supplemental_ind != claim_supplemental_ind3 OR lkp_claim_financial_ind != claim_financial_ind3 OR lkp_claim_recovery_ind != claim_recovery_ind3 OR lkp_claim_notice_only_ind != claim_notice_only_ind3, 'U', 'N')) AS insert_update_flag\n\tFROM RTR_OPEN_CLOSED_INSERT_CLOSED\n\tLEFT JOIN LKP_Claim_occurrence_Calc_Closed_No_fin\n\tON LKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_ak_id = RTR_OPEN_CLOSED.claim_occurrence_ak_id3 AND LKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_date = RTR_OPEN_CLOSED.s3p_claim_created_date3 AND LKP_Claim_occurrence_Calc_Closed_No_fin.claim_occurrence_date_type = RTR_OPEN_CLOSED.claim_occurrence_date_type_out_closed3\n),\nRTR_insert_update_closed AS (\n\tSELECT\n\tclaim_occurrence_ak_id3 AS claim_occurrence_ak_id,\n\tclaim_occurrence_status_code_out_closed3 AS claim_occurrence_status_code_out,\n\tclaim_occurrence_date_type_out_closed3 AS claim_occurrence_date_type_out,\n\ts3p_claim_created_date3 AS s3p_claim_created_date,\n\ts3p_claim_updated_date3 AS s3p_claim_updated_date,\n\tclaim_supplemental_ind3 AS claim_supplemental_ind,\n\tclaim_financial_ind3 AS claim_financial_ind,\n\tclaim_recovery_ind3 AS claim_recovery_ind,\n\tclaim_notice_only_ind3 AS claim_notice_only_ind,\n\tcrrnt_snpsht_flag3 AS crrnt_snpsht_flag,\n\taudit_id3 AS audit_id,\n\ts3p_claim_created_date3 AS eff_from_date,\n\teff_to_date3 AS eff_to_date,\n\tsource_sys_id3 AS source_sys_id,\n\tcreated_date3 AS created_date,\n\tmodified_date3 AS modified_date,\n\tinsert_update_flag,\n\tlkp_claim_occurrence_Calc_id\n\tFROM EXP_determine_insert_for_closed\n),\nRTR_insert_update_closed_Insert AS (SELECT * FROM RTR_insert_update_closed WHERE insert_update_flag = 'I'),\nRTR_insert_update_closed_Update AS (SELECT * FROM RTR_insert_update_closed WHERE insert_update_flag = 'U'),\nUPD_update_closed_no_fin AS (\n\tSELECT\n\tclaim_occurrence_ak_id AS claim_occurrence_ak_id3, \n\tclaim_occurrence_status_code_out AS claim_occurrence_status_code_out3, \n\tclaim_occurrence_date_type_out AS claim_occurrence_date_type_out3, \n\ts3p_claim_created_date AS s3p_claim_created_date3, \n\ts3p_claim_updated_date AS s3p_claim_updated_date3, \n\tclaim_supplemental_ind AS claim_supplemental_ind3, \n\tclaim_financial_ind AS claim_financial_ind3, \n\tclaim_recovery_ind AS claim_recovery_ind3, \n\tclaim_notice_only_ind AS claim_notice_only_ind3, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag3, \n\taudit_id AS audit_id3, \n\teff_from_date AS eff_from_date3, \n\teff_to_date AS eff_to_date3, \n\tsource_sys_id AS source_sys_id3, \n\tcreated_date AS created_date3, \n\tmodified_date AS modified_date3, \n\tinsert_update_flag AS insert_update_flag3, \n\tlkp_claim_occurrence_Calc_id AS lkp_claim_occurrence_Calc_id3\n\tFROM RTR_insert_update_closed_Update\n),\nclaim_occurrence_calculation_Update_Closed_no_fin AS (\n\tMERGE INTO claim_occurrence_calculation AS T\n\tUSING UPD_update_closed_no_fin AS S\n\tON T.claim_occurrence_calculation_id = S.lkp_claim_occurrence_Calc_id3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claim_occurrence_status_code = S.claim_occurrence_status_code_out3, T.claim_occurrence_reported_date = S.s3p_claim_created_date3, T.claim_supplemental_ind = S.claim_supplemental_ind3, T.claim_financial_ind = S.claim_financial_ind3, T.claim_recovery_ind = S.claim_recovery_ind3, T.claim_notice_only_ind = S.claim_notice_only_ind3, T.modified_date = S.modified_date3\n),\nUPD_insert_closed_no_fin AS (\n\tSELECT\n\tclaim_occurrence_ak_id AS claim_occurrence_ak_id1, \n\tclaim_occurrence_status_code_out AS claim_occurrence_status_code_out1, \n\tclaim_occurrence_date_type_out AS claim_occurrence_date_type_out1, \n\ts3p_claim_created_date AS s3p_claim_created_date1, \n\ts3p_claim_updated_date AS s3p_claim_updated_date1, \n\tclaim_supplemental_ind AS claim_supplemental_ind1, \n\tclaim_financial_ind AS claim_financial_ind1, \n\tclaim_recovery_ind AS claim_recovery_ind1, \n\tclaim_notice_only_ind AS claim_notice_only_ind1, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag1, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tsource_sys_id AS source_sys_id1, \n\tcreated_date AS created_date1, \n\tmodified_date AS modified_date1, \n\tinsert_update_flag AS insert_update_flag1, \n\tlkp_claim_occurrence_Calc_id AS lkp_claim_occurrence_Calc_id1\n\tFROM RTR_insert_update_closed_Insert\n),\nclaim_occurrence_calculation_insert_closed_no_fin AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id1.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tclaim_occurrence_ak_id1 AS CLAIM_OCCURRENCE_AK_ID, \n\tclaim_occurrence_status_code_out1 AS CLAIM_OCCURRENCE_STATUS_CODE, \n\ts3p_claim_created_date1 AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out1 AS CLAIM_OCCURRENCE_DATE_TYPE, \n\ts3p_claim_created_date1 AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tclaim_supplemental_ind1 AS CLAIM_SUPPLEMENTAL_IND, \n\tclaim_financial_ind1 AS CLAIM_FINANCIAL_IND, \n\tclaim_recovery_ind1 AS CLAIM_RECOVERY_IND, \n\tclaim_notice_only_ind1 AS CLAIM_NOTICE_ONLY_IND, \n\tcrrnt_snpsht_flag1 AS CRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\ts3p_claim_created_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tsource_sys_id1 AS SOURCE_SYS_ID, \n\tcreated_date1 AS CREATED_DATE, \n\tmodified_date1 AS MODIFIED_DATE\n\tFROM UPD_insert_closed_no_fin\n),\nSQ_claim_occurrence_openedinerror AS (\n\tSELECT claim_occurrence.claim_occurrence_ak_id, claim_occurrence.source_claim_occurrence_status_code, claim_occurrence.notice_claim_ind, claim_occurrence.s3p_claim_created_date, claim_occurrence.s3p_claim_updated_date, claim_occurrence.source_sys_id \r\n\tFROM\r\n\t claim_occurrence\r\n\tWHERE claim_occurrence_ak_id IN\r\n\t(select claim_occurrence_ak_id from claim_occurrence_calculation group by claim_occurrence_ak_id having count(*) = 1 and MAX(claim_occurrence_date_type) = '7OPEN\\NOFINANCIAL')\r\n\tAND notice_claim_ind != 'N' AND source_claim_occurrence_status_code = 'C'\r\n\tAND claim_occurrence.source_sys_id = 'EXCEED'\n),\nEXP_Values AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tsource_claim_occurrence_status_code AS s3p_claim_occurrence_status_code,\n\tnotice_claim_ind AS s3p_not_claim_ind,\n\ts3p_claim_created_date,\n\ts3p_claim_updated_date,\n\t'N' AS indicators,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t'8CLOSED\\NOFINANCIAL' AS claim_occurrence_date_type_out_closed,\n\tsource_sys_id\n\tFROM SQ_claim_occurrence_openedinerror\n),\nclaim_occurrence_calculation_Insert_Only_Closed_no_fin AS (\n\tINSERT INTO claim_occurrence_calculation\n\t(claim_occurrence_calculation_ak_id, claim_occurrence_ak_id, claim_occurrence_status_code, claim_occurrence_date, claim_occurrence_date_type, claim_occurrence_reported_date, claim_supplemental_ind, claim_financial_ind, claim_recovery_ind, claim_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_claim_occ_calc_ak_id1.NEXTVAL AS CLAIM_OCCURRENCE_CALCULATION_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\ts3p_claim_occurrence_status_code AS CLAIM_OCCURRENCE_STATUS_CODE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_DATE, \n\tclaim_occurrence_date_type_out_closed AS CLAIM_OCCURRENCE_DATE_TYPE, \n\ts3p_claim_created_date AS CLAIM_OCCURRENCE_REPORTED_DATE, \n\tindicators AS CLAIM_SUPPLEMENTAL_IND, \n\tindicators AS CLAIM_FINANCIAL_IND, \n\tindicators AS CLAIM_RECOVERY_IND, \n\tindicators AS CLAIM_NOTICE_ONLY_IND, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\ts3p_claim_created_date AS EFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_Values\n),\nSQ_claim_occurrence_calculation_update_crrnt_snpsht_flag AS (\n\tSELECT a.claim_occurrence_calculation_id, a.claim_occurrence_ak_id, a.eff_from_date, a.eff_to_date, a.source_sys_id \r\n\tFROM\r\n\t claim_occurrence_calculation a WHERE EXISTS\r\n\t(\r\n\tSELECT 1 from @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence_calculation b\r\n\tWHERE b.crrnt_snpsht_flag = 1\r\n\tand a.claim_occurrence_ak_id = b.claim_occurrence_ak_id\r\n\tand a.source_sys_id  = b.source_sys_id \r\n\tGROUP BY b.claim_occurrence_ak_id, b.source_sys_id \r\n\tHAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY a.claim_occurrence_ak_id, a.source_sys_id,  a.eff_from_date  DESC, a.claim_occurrence_calculation_ak_id DESC\r\n\t\r\n\t-- In the order by clause we added claim_occurrence_calculation_ak_id  DESC ,because say a claim has staus order of \r\n\t-- '4REOPEN',\r\n\t-- '5CLOSEDAFTERREOPEN',\r\n\t-- '4REOPEN' on same day for PMS data , then the latest row with '4REOPEN' status should have a crrnt_snpsht_flag value of  1.\r\n\t--PL (7/16/2009): the order by logic was intially based on \"date type\" but, the logic was changed to use claim_occurrence_calculation_ak_id later becasue we started allowing for multiple reopens & closed after reopens on the same day. There used to be a physical AK id constraint that was removed and the order by condition was changed.\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaim_occurrence_calculation_id,\n\tclaim_occurrence_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, claim_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id and source_sys_id = v_PREV_ROW_source_sys_id , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tclaim_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id AND source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_occurrence_ak_id AS v_PREV_ROW_claim_party_occurrence_ak_id,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_Snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claim_occurrence_calculation_update_crrnt_snpsht_flag\n),\nFLT_Claimant_cov_dtl_calc_Upd AS (\n\tSELECT\n\tclaim_occurrence_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Claim_Occurrence_Calc AS (\n\tSELECT\n\tclaim_occurrence_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM FLT_Claimant_cov_dtl_calc_Upd\n),\nclaim_occurrence_calculation_update_crrnt_snpsht_flag AS (\n\tMERGE INTO claim_occurrence_calculation AS T\n\tUSING UPD_Claim_Occurrence_Calc AS S\n\tON T.claim_occurrence_calculation_id = S.claim_occurrence_calculation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_Snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246506"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905523"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604398"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:25"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:03"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}