{
    "name": "m_CLM_DW_LOAD_NurseAssignmentImpact",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseAssignmentImpact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_nurse_assignment_impact_stage AS (\n\tSELECT\n\t\tNurseAssignmentImpactStageId,\n\t\tnurse_assignment_id,\n\t\timpact_type,\n\t\timpact_category,\n\t\tsavings_amount,\n\t\timpact_comment,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM nurse_assignment_impact_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tnurse_assignment_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(nurse_assignment_id))), -1, nurse_assignment_id)\n\tIFF(ltrim(rtrim(nurse_assignment_id)) IS NULL, - 1, nurse_assignment_id) AS o_nurse_assignment_id,\n\timpact_type,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(impact_type),'N/A',\r\n\t-- IS_SPACES(impact_type),'N/A',\r\n\t-- LENGTH(impact_type)=0,'N/A',\r\n\t-- LTRIM(RTRIM(impact_type)))\n\tDECODE(TRUE,\n\timpact_type IS NULL, 'N/A',\n\tIS_SPACES(impact_type), 'N/A',\n\tLENGTH(impact_type) = 0, 'N/A',\n\tLTRIM(RTRIM(impact_type))) AS o_impact_type,\n\timpact_category,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(impact_category),'N/A',\r\n\t-- IS_SPACES(impact_category),'N/A',\r\n\t-- LENGTH(impact_category)=0,'N/A',\r\n\t-- LTRIM(RTRIM(impact_category)))\n\tDECODE(TRUE,\n\timpact_category IS NULL, 'N/A',\n\tIS_SPACES(impact_category), 'N/A',\n\tLENGTH(impact_category) = 0, 'N/A',\n\tLTRIM(RTRIM(impact_category))) AS o_impact_category,\n\tsavings_amount,\n\t-- *INF*: iif(isnull(ltrim(rtrim(savings_amount))),0,savings_amount)\n\tIFF(ltrim(rtrim(savings_amount)) IS NULL, 0, savings_amount) AS o_saving_amount,\n\timpact_comment,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(impact_comment),'N/A',\r\n\t-- IS_SPACES(impact_comment),'N/A',\r\n\t-- LENGTH(impact_comment)=0,'N/A',\r\n\t-- LTRIM(RTRIM(impact_comment)))\n\tDECODE(TRUE,\n\timpact_comment IS NULL, 'N/A',\n\tIS_SPACES(impact_comment), 'N/A',\n\tLENGTH(impact_comment) = 0, 'N/A',\n\tLTRIM(RTRIM(impact_comment))) AS o_impact_comment\n\tFROM SQ_nurse_assignment_impact_stage\n),\nLKP_NurseAssignment AS (\n\tSELECT\n\tNurseAssignmentAkId,\n\tnurse_assignment_id\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseAssignmentAkId as NurseAssignmentAkId, \r\n\t\tN.nurse_assignment_id as nurse_assignment_id\r\n\t\t\r\n\t\tFROM\r\n\t\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignment N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY nurse_assignment_id ORDER BY NurseAssignmentAkId) = 1\n),\nLKP_SupNurseImpact AS (\n\tSELECT\n\tNurseImpactId,\n\tImpactType,\n\tImpactCategory\n\tFROM (\n\t\tSELECT\r\n\t\tS.NurseImpactId as NurseImpactId, \r\n\t\tS.ImpactType as ImpactType, \r\n\t\tS.ImpactCategory as ImpactCategory \r\n\t\t\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.SupNurseImpact S\r\n\t\t\r\n\t\twhere\r\n\t\tS.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ImpactType,ImpactCategory ORDER BY NurseImpactId) = 1\n),\nEXP_Lkp_Default AS (\n\tSELECT\n\tLKP_NurseAssignment.NurseAssignmentAkId,\n\t-- *INF*: iif(isnull(NurseAssignmentAkId), -1, NurseAssignmentAkId)\n\tIFF(NurseAssignmentAkId IS NULL, - 1, NurseAssignmentAkId) AS o_NurseAssignmentAkId,\n\tLKP_SupNurseImpact.NurseImpactId,\n\t-- *INF*: iif(isnull(NurseImpactId), -1,NurseImpactId)\n\tIFF(NurseImpactId IS NULL, - 1, NurseImpactId) AS o_NurseImpactId\n\tFROM \n\tLEFT JOIN LKP_NurseAssignment\n\tON LKP_NurseAssignment.nurse_assignment_id = EXP_Src_Values.o_nurse_assignment_id\n\tLEFT JOIN LKP_SupNurseImpact\n\tON LKP_SupNurseImpact.ImpactType = EXP_Src_Values.o_impact_type AND LKP_SupNurseImpact.ImpactCategory = EXP_Src_Values.o_impact_category\n),\nLKP_NurseAssignmentImpact AS (\n\tSELECT\n\tNurseAssignmentImpactId,\n\tNurseAssignmentImpactAkId,\n\tNurseAssignmentAkId,\n\tNurseImpactId,\n\tSavingsAmount,\n\tComment\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseAssignmentImpactId as NurseAssignmentImpactId, N.NurseAssignmentImpactAkId as NurseAssignmentImpactAkId, N.SavingsAmount as SavingsAmount, N.Comment as Comment, N.NurseAssignmentAkId as NurseAssignmentAkId, N.NurseImpactId as NurseImpactId \r\n\t\t\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentImpact N\r\n\t\t\r\n\t\tWHERE\r\n\t\tCurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseAssignmentAkId,NurseImpactId ORDER BY NurseAssignmentImpactId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseAssignmentImpact.NurseAssignmentImpactId AS Lkp_NurseAssignmentImpactId,\n\tLKP_NurseAssignmentImpact.NurseAssignmentImpactAkId AS Lkp_NurseAssignmentImpactAkId,\n\tLKP_NurseAssignmentImpact.NurseAssignmentAkId AS Lkp_NurseAssignmentAkId,\n\tLKP_NurseAssignmentImpact.NurseImpactId AS Lkp_NurseImpactId,\n\tLKP_NurseAssignmentImpact.SavingsAmount AS Lkp_SavingsAmount,\n\tLKP_NurseAssignmentImpact.Comment AS Lkp_Comment,\n\t-- *INF*: iif(isnull(Lkp_NurseAssignmentImpactId), 'NEW', \r\n\t-- \r\n\t--   iif( \r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_NurseAssignmentAkId)) != ltrim(rtrim(NurseAssignmentAkId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_NurseImpactId)) != ltrim(rtrim(NurseImpactId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_SavingsAmount)) != ltrim(rtrim(SavingsAmount))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t-- ltrim(rtrim(Lkp_Comment)) != ltrim(rtrim(Comment)),\r\n\t-- \r\n\t--    'UPDATE', 'NOCHANGE' )\r\n\t-- \r\n\t--    )\r\n\t-- \n\tIFF(Lkp_NurseAssignmentImpactId IS NULL, 'NEW', IFF(ltrim(rtrim(Lkp_NurseAssignmentAkId)) != ltrim(rtrim(NurseAssignmentAkId)) OR ltrim(rtrim(Lkp_NurseImpactId)) != ltrim(rtrim(NurseImpactId)) OR ltrim(rtrim(Lkp_SavingsAmount)) != ltrim(rtrim(SavingsAmount)) OR ltrim(rtrim(Lkp_Comment)) != ltrim(rtrim(Comment)), 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_ChangedFlag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tsysdate AS CreatedDate,\n\tsysdate AS ModifiedDate,\n\tEXP_Lkp_Default.o_NurseAssignmentAkId AS NurseAssignmentAkId,\n\tEXP_Lkp_Default.o_NurseImpactId AS NurseImpactId,\n\tEXP_Src_Values.o_saving_amount AS SavingsAmount,\n\tEXP_Src_Values.o_impact_comment AS Comment\n\tFROM EXP_Lkp_Default\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseAssignmentImpact\n\tON LKP_NurseAssignmentImpact.NurseAssignmentAkId = EXP_Lkp_Default.o_NurseAssignmentAkId AND LKP_NurseAssignmentImpact.NurseImpactId = EXP_Lkp_Default.o_NurseImpactId\n),\nFIL_Lkp_Records AS (\n\tSELECT\n\tChangedFlag, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemId, \n\tCreatedDate, \n\tModifiedDate, \n\tNurseAssignmentAkId, \n\tNurseImpactId, \n\tSavingsAmount, \n\tComment, \n\tLkp_NurseAssignmentImpactAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseAssignmentImpact AS (\n\tCREATE SEQUENCE SEQ_NurseAssignmentImpact\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_AKid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemId,\n\tCreatedDate,\n\tModifiedDate,\n\tNurseAssignmentAkId,\n\tNurseImpactId,\n\tSavingsAmount,\n\tComment,\n\t-- *INF*: iif(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentImpactAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentImpactAkId) AS NurseAssignmentImpactAkId,\n\tLkp_NurseAssignmentImpactAkId,\n\tSEQ_NurseAssignmentImpact.NEXTVAL\n\tFROM FIL_Lkp_Records\n),\nNurseAssignmentImpact_Insert AS (\n\tINSERT INTO NurseAssignmentImpact\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseAssignmentImpactAkId, NurseAssignmentAkId, NurseImpactId, SavingsAmount, Comment)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSEASSIGNMENTIMPACTAKID, \n\tNURSEASSIGNMENTAKID, \n\tNURSEIMPACTID, \n\tSAVINGSAMOUNT, \n\tCOMMENT\n\tFROM EXP_AKid_Insert_Target\n),\nSQ_NurseAssignmentImpact AS (\n\tSELECT\r\n\tA.NurseAssignmentImpactId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.NurseAssignmentImpactAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentImpact A\r\n\t\r\n\twhere Exists\r\n\t   (\r\n\tSELECT 1 \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentImpact B\r\n\twhere\r\n\tB.CurrentSnapshotFlag = 1\r\n\tAND\r\n\tA.NurseAssignmentImpactAkId = B.NurseAssignmentImpactAkId\r\n\t\r\n\tgroup by \r\n\tB.NurseAssignmentImpactAkId\r\n\t\r\n\thaving \r\n\tcount(*) > 1\r\n\t    )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseAssignmentImpactAkId, \r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseAssignmentImpactId,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: decode(true,\r\n\t-- NurseAssignmentImpactAkId = v_PREV_ROW_NurseAssignmentImpactAkId,\r\n\t-- add_to_date(v_PREV_ROW_EffectiveDate, 'SS', -1),\r\n\t-- orig_ExpirationDate)\n\tdecode(true,\n\tNurseAssignmentImpactAkId = v_PREV_ROW_NurseAssignmentImpactAkId, add_to_date(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseAssignmentImpactAkId AS v_PREV_ROW_NurseAssignmentImpactAkId,\n\tSYSDATE AS ModifiedDate,\n\tNurseAssignmentImpactAkId\n\tFROM SQ_NurseAssignmentImpact\n),\nFIL_FirsrRowAkId AS (\n\tSELECT\n\tNurseAssignmentImpactId, \n\tCurrentSnapshotFlag, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_NurseAssignmentImpact AS (\n\tSELECT\n\tNurseAssignmentImpactId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirsrRowAkId\n),\nNurseAssignmentImpact_Update AS (\n\tMERGE INTO NurseAssignmentImpact AS T\n\tUSING UPD_NurseAssignmentImpact AS S\n\tON T.NurseAssignmentImpactId = S.NurseAssignmentImpactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),\nSQ_NurseAssignmentImpact_Expire AS (\n\tselect  \r\n\tNAI.NurseAssignmentImpactId,\r\n\tNAI.EffectiveDate,\r\n\tNAI.ExpirationDate,\r\n\tNAI.NurseAssignmentAkId\r\n\t\r\n\tfrom\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentImpact NAI,\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.SupNurseImpact SI,\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignment NA,\r\n\tWC_Stage.dbo.nurse_assignment_impact_deleted_stage NAID\r\n\t\r\n\twhere\r\n\tNAI.NurseAssignmentAkId = NA.NurseAssignmentAkId\r\n\tAND\r\n\tSI.NurseImpactId = NAI.NurseImpactId\r\n\tAND\r\n\tNAID.nurse_assignment_id = NA.nurse_assignment_id\r\n\tAND\r\n\tSI.ImpactCategory = NAID.impact_category \r\n\tAND\r\n\tSI.ImpactType = NAID.impact_type\r\n\tAND\r\n\tNAI.CurrentSnapshotFlag = 1\r\n\tAND\r\n\tSI.CurrentSnapshotFlag = 1\r\n\tAND\r\n\tNA.CurrentSnapshotFlag =1\n),\nEXP_Expire AS (\n\tSELECT\n\tNurseAssignmentImpactId,\n\tEffectiveDate,\n\tExpirationDate,\n\tNurseAssignmentAkId,\n\t0 AS CurrentSnapshotFlag,\n\tSYSDATE AS ModifiedDate\n\tFROM SQ_NurseAssignmentImpact_Expire\n),\nFIL_Expire AS (\n\tSELECT\n\tNurseAssignmentImpactId, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM EXP_Expire\n\tWHERE NOT isnull(NurseAssignmentImpactId)\n),\nUPD_Expire AS (\n\tSELECT\n\tNurseAssignmentImpactId, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM FIL_Expire\n),\nNurseAssignmentImpact_Expire1 AS (\n\tMERGE INTO NurseAssignmentImpact AS T\n\tUSING UPD_Expire AS S\n\tON T.NurseAssignmentImpactId = S.NurseAssignmentImpactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246502"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905527"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604457"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:37"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:40"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}