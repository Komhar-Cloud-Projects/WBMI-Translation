{
    "name": "m_CLM_DW_LOAD_Workers_Comp_Claimant_Impairment_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Workers_Comp_Claimant_Impairment_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clmnt_impairment_stage AS (\n\tSELECT\n\t\tclmnt_impairment_stage_id,\n\t\tclaim_nbr,\n\t\tclient_id,\n\t\tseq_nbr,\n\t\tbody_part_code,\n\t\timpair_percentage,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id\n\tFROM clmnt_impairment_stage\n),\nEXP_Workers_Comp_Claimant_Impairment AS (\n\tSELECT\n\tclaim_nbr,\n\tclient_id,\n\tseq_nbr,\n\tbody_part_code,\n\timpair_percentage,\n\tsource_system_id\n\tFROM SQ_clmnt_impairment_stage\n),\nEXP_LKP_Value_Workers_comp_claimant_detila AS (\n\tSELECT\n\tclaim_nbr AS IN_claim_nbr,\n\tclient_id AS IN_client_id,\n\tseq_nbr AS IN_seq_nbr,\n\tbody_part_code AS IN_body_part_code,\n\timpair_percentage AS IN_impair_percentage,\n\tsource_system_id AS IN_source_system_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_claim_nbr))),'N/A',IIF(IS_SPACES(IN_claim_nbr),'N/A',LTRIM(RTRIM(IN_claim_nbr))))\n\tIFF(LTRIM(RTRIM(IN_claim_nbr)) IS NULL, 'N/A', IFF(IS_SPACES(IN_claim_nbr), 'N/A', LTRIM(RTRIM(IN_claim_nbr)))) AS CLAIM_NBR,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_client_id))),'N/A',IIF(IS_SPACES(IN_client_id),'N/A',LTRIM(RTRIM(IN_client_id))))\n\tIFF(LTRIM(RTRIM(IN_client_id)) IS NULL, 'N/A', IFF(IS_SPACES(IN_client_id), 'N/A', LTRIM(RTRIM(IN_client_id)))) AS CLIENT_ID,\n\t-- *INF*: IIF(ISNULL(IN_seq_nbr),0,IN_seq_nbr)\n\tIFF(IN_seq_nbr IS NULL, 0, IN_seq_nbr) AS SEQ_NBR,\n\t-- *INF*: IIF(ISNULL(IN_impair_percentage),0,IN_impair_percentage)\n\tIFF(IN_impair_percentage IS NULL, 0, IN_impair_percentage) AS IMPAIRMENT_PERCENTAGE,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_source_system_id))),'N/A',IIF(IS_SPACES(IN_source_system_id),'N/A',LTRIM(RTRIM(IN_source_system_id))))\n\tIFF(LTRIM(RTRIM(IN_source_system_id)) IS NULL, 'N/A', IFF(IS_SPACES(IN_source_system_id), 'N/A', LTRIM(RTRIM(IN_source_system_id)))) AS SOURCE_SYSTEM_ID,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_body_part_code))),'N/A',IIF(IS_SPACES(IN_body_part_code),'N/A',LTRIM(RTRIM(IN_body_part_code))))\n\tIFF(LTRIM(RTRIM(IN_body_part_code)) IS NULL, 'N/A', IFF(IS_SPACES(IN_body_part_code), 'N/A', LTRIM(RTRIM(IN_body_part_code)))) AS BODY_PART_CODE\n\tFROM EXP_Workers_Comp_Claimant_Impairment\n),\nLKP_Claim_Party_Occurrence_AK_ID1 AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id DESC) = 1\n),\nLKP_Workers_Comp_Claimant_Detail1 AS (\n\tSELECT\n\twc_claimant_det_ak_id,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tA.wc_claimant_det_ak_id as wc_claimant_det_ak_id,  \r\n\t\tA.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_detail A\r\n\t\tWHERE (source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}') AND (CRRNT_SNPSHT_FLAG='1')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY wc_claimant_det_ak_id DESC) = 1\n),\nEXP_Set_LKP_Val AS (\n\tSELECT\n\tEXP_LKP_Value_Workers_comp_claimant_detila.BODY_PART_CODE,\n\tEXP_LKP_Value_Workers_comp_claimant_detila.IMPAIRMENT_PERCENTAGE,\n\tEXP_LKP_Value_Workers_comp_claimant_detila.SEQ_NBR AS SEQ_NUM,\n\tEXP_LKP_Value_Workers_comp_claimant_detila.SOURCE_SYSTEM_ID,\n\tLKP_Workers_Comp_Claimant_Detail1.wc_claimant_det_ak_id AS LKP_wc_claimant_det_ak_id,\n\tLKP_wc_claimant_det_ak_id AS wc_claimant_det_ak_id\n\tFROM EXP_LKP_Value_Workers_comp_claimant_detila\n\tLEFT JOIN LKP_Workers_Comp_Claimant_Detail1\n\tON LKP_Workers_Comp_Claimant_Detail1.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID1.claim_party_occurrence_ak_id\n),\nLKP_IMPAIRMENT AS (\n\tSELECT\n\twc_claimant_impairment_ak_id,\n\twc_claimant_det_ak_id,\n\tlkp_body_part_code,\n\tlkp_impairment_percentage,\n\tIN_wc_claimant_det_ak_id,\n\tIN_seq_num,\n\tseq_num,\n\twc_claimant_impairment_id\n\tFROM (\n\t\tSELECT CPO.wc_claimant_impairment_ak_id as wc_claimant_impairment_ak_id, \r\n\t\tCPO.body_part_code as lkp_body_part_code ,\r\n\t\tCPO.impairment_percentage  as lkp_impairment_percentage,\r\n\t\tCPO.seq_num as seq_num , CPO.wc_claimant_det_ak_id as wc_claimant_det_ak_id,\r\n\t\tCPO.wc_claimant_impairment_id as wc_claimant_impairment_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment CPO  \r\n\t\tWHERE    CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY wc_claimant_det_ak_id,seq_num ORDER BY wc_claimant_impairment_ak_id DESC) = 1\n),\nEXP_DETECT_CHANGES_workers_comp_claimant_detail11 AS (\n\tSELECT\n\tEXP_Set_LKP_Val.BODY_PART_CODE,\n\tEXP_Set_LKP_Val.IMPAIRMENT_PERCENTAGE,\n\tEXP_Set_LKP_Val.SEQ_NUM,\n\t-- *INF*: IIF(ISNULL(wc_claimant_impairment_ak_id),'NEW',\r\n\t-- IIF(LKP_IMPAIRMENT_PERCENTAGE <> IMPAIRMENT_PERCENTAGE OR ltrim(rtrim(LKP_BODY_PART_CODE)) <> ltrim(rtrim(BODY_PART_CODE))  ,'UPDATE',\r\n\t-- 'UPDATE') )\r\n\t-- \r\n\t-- --- All records will be either inserted if new or updated even if the data has not changed as shown above.  This is needed for the last mapping that runs in this WF to set the curr_snpsht_flag = 0 for records that have a different audit id than that of what is currently in this mapping but have the same key (detail_ak_id).  This is how we identify deleted records.\r\n\t-- \r\n\t-- \r\n\t-- ---'NOCHANGE') )\n\tIFF(wc_claimant_impairment_ak_id IS NULL, 'NEW', IFF(LKP_IMPAIRMENT_PERCENTAGE <> IMPAIRMENT_PERCENTAGE OR ltrim(rtrim(LKP_BODY_PART_CODE)) <> ltrim(rtrim(BODY_PART_CODE)), 'UPDATE', 'UPDATE')) AS V_CHANGE_FLAG,\n\tV_CHANGE_FLAG AS CHANGE_FLAG_OP,\n\t'1' AS CRRNT_SNPSHT_FLAG,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t-- *INF*: IIF(V_CHANGE_FLAG='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tTO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\tIFF(V_CHANGE_FLAG = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(TO_CHAR(SYSDATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')) AS EFF_FROM_DATE,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS EFF_TO_DATE,\n\tEXP_Set_LKP_Val.SOURCE_SYSTEM_ID,\n\tSYSDATE AS CREATED_DATE,\n\tSYSDATE AS MODIFIED_DATE,\n\tLKP_IMPAIRMENT.wc_claimant_det_ak_id AS LKP_wc_claimant_det_ak_id,\n\tv_counter + 1 AS v_counter,\n\tLKP_IMPAIRMENT.lkp_body_part_code AS LKP_BODY_PART_CODE,\n\tLKP_IMPAIRMENT.lkp_impairment_percentage AS LKP_IMPAIRMENT_PERCENTAGE,\n\tLKP_IMPAIRMENT.wc_claimant_impairment_ak_id,\n\tEXP_Set_LKP_Val.wc_claimant_det_ak_id,\n\tLKP_IMPAIRMENT.wc_claimant_impairment_id\n\tFROM EXP_Set_LKP_Val\n\tLEFT JOIN LKP_IMPAIRMENT\n\tON LKP_IMPAIRMENT.wc_claimant_det_ak_id = EXP_Set_LKP_Val.wc_claimant_det_ak_id AND LKP_IMPAIRMENT.seq_num = EXP_Set_LKP_Val.SEQ_NUM\n),\nFIL_INSERT_workers_comp_claimant_impairment AS (\n\tSELECT\n\tCHANGE_FLAG_OP, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\twc_claimant_det_ak_id AS LKP_wc_claimant_det_ak_id, \n\twc_claimant_impairment_ak_id, \n\tBODY_PART_CODE, \n\tIMPAIRMENT_PERCENTAGE, \n\tSEQ_NUM\n\tFROM EXP_DETECT_CHANGES_workers_comp_claimant_detail11\n\tWHERE CHANGE_FLAG_OP<>'NOCHANGE'\n),\nSEQ_Workers_Comp_Claiment_Impairment AS (\n\tCREATE SEQUENCE SEQ_Workers_Comp_Claiment_Impairment\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_INSERT1 AS (\n\tSELECT\n\tSEQ_Workers_Comp_Claiment_Impairment.NEXTVAL,\n\tCHANGE_FLAG_OP,\n\tCRRNT_SNPSHT_FLAG,\n\tAUDIT_ID,\n\tEFF_FROM_DATE,\n\tEFF_TO_DATE,\n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID,\n\tCREATED_DATE,\n\tMODIFIED_DATE,\n\twc_claimant_impairment_ak_id AS IN_wc_claimant_impairment_ak_id,\n\t-- *INF*: IIF(CHANGE_FLAG_OP='NEW', NEXTVAL, IN_wc_claimant_impairment_ak_id)\n\tIFF(CHANGE_FLAG_OP = 'NEW', NEXTVAL, IN_wc_claimant_impairment_ak_id) AS WC_CLAIMANT_IMPAIRMENT_AK_ID,\n\tLKP_wc_claimant_det_ak_id,\n\tBODY_PART_CODE,\n\tIMPAIRMENT_PERCENTAGE,\n\tSEQ_NUM\n\tFROM FIL_INSERT_workers_comp_claimant_impairment\n),\nworkers_comp_claimant_impairment AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, wc_claimant_impairment_ak_id, wc_claimant_det_ak_id, body_part_code, impairment_percentage, seq_num)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE AS EFF_FROM_DATE, \n\tEFF_TO_DATE AS EFF_TO_DATE, \n\tSOURCE_SYS_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE AS CREATED_DATE, \n\tMODIFIED_DATE AS MODIFIED_DATE, \n\tWC_CLAIMANT_IMPAIRMENT_AK_ID AS WC_CLAIMANT_IMPAIRMENT_AK_ID, \n\tLKP_wc_claimant_det_ak_id AS WC_CLAIMANT_DET_AK_ID, \n\tBODY_PART_CODE AS BODY_PART_CODE, \n\tIMPAIRMENT_PERCENTAGE AS IMPAIRMENT_PERCENTAGE, \n\tSEQ_NUM AS SEQ_NUM\n\tFROM EXP_INSERT1\n),\nSQ_workers_comp_claimant_impairment AS (\n\tSELECT a.wc_claimant_impairment_id as wc_claimant_impairment_id  , \r\n\ta.wc_claimant_impairment_ak_id  as wc_claimant_impairment_ak_id,\r\n\ta.eff_from_date  as eff_from_date , \r\n\ta.eff_to_date as eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment b\r\n\t\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND b.crrnt_snpsht_flag = 1\r\n\t\t\tAND a.wc_claimant_impairment_ak_id = b.wc_claimant_impairment_ak_id\r\n\t\t\tGROUP BY wc_claimant_impairment_ak_id\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY wc_claimant_impairment_ak_id, eff_from_date  DESC\n),\nEXP_Lag_eff_from_date11 AS (\n\tSELECT\n\twc_claimant_impairment_id,\n\twc_claimant_impairment_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: IIF(wc_claimant_impairment_ak_id = v_PREV_ROW_wc_claimant_det_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),orig_eff_to_date)\n\tIFF(wc_claimant_impairment_ak_id = v_PREV_ROW_wc_claimant_det_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1), orig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\twc_claimant_impairment_ak_id AS v_PREV_ROW_wc_claimant_det_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_workers_comp_claimant_impairment\n),\nFIL_FirstRowInAKGroup1 AS (\n\tSELECT\n\twc_claimant_impairment_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date11\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_workers_comp_claimant_impairment1 AS (\n\tSELECT\n\twc_claimant_impairment_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup1\n),\nworkers_comp_claimant_impairment2 AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment AS T\n\tUSING UPD_workers_comp_claimant_impairment1 AS S\n\tON T.wc_claimant_impairment_id = S.wc_claimant_impairment_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),\nSQ_workers_comp_claimant_impairment2 AS (\n\tSELECT  \r\n\tw.wc_claimant_impairment_id \r\n\tFROM\r\n\t  workers_comp_claimant_impairment w\r\n\tWHERE\r\n\t w.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND w.crrnt_snpsht_flag = 1\r\n\t AND w.audit_id  <>   '@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}' \r\n\tand w.seq_num >\r\n\t (select ISNULL(MAX(aa.seq_num),999)\r\n\t FROM  workers_comp_claimant_impairment aa\r\n\t WHERE  aa.wc_claimant_det_ak_id = w.wc_claimant_det_ak_id\r\n\t AND  aa.source_sys_id = w.source_sys_id\r\n\t AND  aa.crrnt_snpsht_flag = 1\r\n\t AND aa.audit_id =  '@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}')\r\n\t\r\n\t--and  exists( select 'x' from \r\n\t --workers_comp_claimant_impairment ww\r\n\t --Where ww.wc_claimant_det_ak_id = w.wc_claimant_det_ak_id\r\n\t --AND ww.crrnt_snpsht_flag = 1\r\n\t --AND ww.source_sys_id = w.source_sys_id\r\n\t --AND ww.seq_num <> w.seq_num\r\n\t --AND ww.audit_id =   '@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}' )\r\n\t----\n),\nEXP_Set_Defaults AS (\n\tSELECT\n\twc_claimant_impairment_id,\n\t0 AS crrnt_snpsht_flg,\n\tsysdate AS modified_date\n\tFROM SQ_workers_comp_claimant_impairment2\n),\nUPD_Workers_Comp_Claimant_Impairment_Deleted_rec AS (\n\tSELECT\n\twc_claimant_impairment_id, \n\tcrrnt_snpsht_flg, \n\tmodified_date\n\tFROM EXP_Set_Defaults\n),\nworkers_comp_claimant_impairment6 AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_impairment AS T\n\tUSING UPD_Workers_Comp_Claimant_Impairment_Deleted_rec AS S\n\tON T.wc_claimant_impairment_id = S.wc_claimant_impairment_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flg, T.eff_from_date = S.modified_date, T.eff_to_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}