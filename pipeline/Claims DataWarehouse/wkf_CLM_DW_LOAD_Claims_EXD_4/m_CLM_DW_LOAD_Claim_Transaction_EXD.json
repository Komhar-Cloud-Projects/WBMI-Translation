{
    "name": "m_CLM_DW_LOAD_Claim_Transaction_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Transaction_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Clm_Offset_Honor_Stage AS (\n\tSELECT\n\tCOH_DRAFT_NBR\n\tFROM (\n\t\tSELECT \n\t\t\tCOH_DRAFT_NBR\n\t\tFROM CLM_OFFSET_HONOR_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY COH_DRAFT_NBR ORDER BY COH_DRAFT_NBR) = 1\n),\nLKP_Claim_Support_01_Exceed_PMS_Trans_Code AS (\n\tSELECT\n\tcs01_code_des,\n\tcs01_code\n\tFROM (\n\t\tSELECT \r\n\t\tLTRIM(RTRIM(A.cs01_code_des)) as cs01_code_des, \r\n\t\tLTRIM(RTRIM(A.cs01_code)) as cs01_code FROM claim_support_01_stage A\r\n\t\tWHERE A.cs01_table_id = 'R003'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cs01_code ORDER BY cs01_code_des DESC) = 1\n),\nLKP_Sup_Claim_Transaction_Code AS (\n\tSELECT\n\tsup_claim_trans_code_id,\n\ttrans_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_trans_code_id,\n\t\t\ttrans_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_transaction_code\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_code ORDER BY sup_claim_trans_code_id) = 1\n),\nSQ_CLAIM_TRANSACTION_STAGE_INS AS (\n\tSELECT A.CLAIM_TRANSACTION_ID,\r\n\t       A.CTX_CLAIM_NBR,\r\n\t       A.CTX_CLIENT_ID,\r\n\t       A.CTX_OBJECT_TYPE_CD,\r\n\t       A.CTX_OBJECT_SEQ_NBR,\r\n\t       A.CTX_COV_TYPE_CD,\r\n\t       A.CTX_COV_SEQ_NBR,\r\n\t       A.CTX_BUR_CAUSE_LOSS,\r\n\t       A.CTX_FIN_TYPE_CD,\r\n\t       A.CTX_SORT_TS,\r\n\t       A.CTX_TRS_TYPE_CD,\r\n\t       A.CTX_DRAFT_NBR,\r\n\t       A.CTX_UPD_TS,\r\n\t       A.CTX_TRS_CAT_CD,\r\n\t       A.CTX_TRS_AMT,\r\n\t       A.CTX_ENTRY_OPR_ID,\r\n\t       A.CTX_TRS_HST_AMT,\r\n\t       A.CTX_BASE_TRS_TYPE,\r\n\t       A.CTX_OFS_REI_IND,\r\n\t       A.CTX_SINGLE_CHK_IND,\r\n\t       A.CTX_CREATE_TS,\r\n\t       A.CTX_TRANS_REASON\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_TRANSACTION_STAGE A\n),\nEXP_Default1 AS (\n\tSELECT\n\tCLAIM_TRANSACTION_ID,\n\tCTX_CLAIM_NBR,\n\tCTX_CLIENT_ID,\n\tCTX_OBJECT_TYPE_CD,\n\tCTX_OBJECT_SEQ_NBR,\n\tCTX_COV_TYPE_CD,\n\tCTX_COV_SEQ_NBR,\n\tCTX_BUR_CAUSE_LOSS,\n\tCTX_FIN_TYPE_CD,\n\tCTX_SORT_TS,\n\tCTX_TRS_TYPE_CD,\n\tCTX_DRAFT_NBR,\n\tCTX_UPD_TS,\n\tCTX_TRS_CAT_CD,\n\tCTX_TRS_AMT,\n\tCTX_ENTRY_OPR_ID,\n\tCTX_TRS_HST_AMT,\n\tCTX_BASE_TRS_TYPE,\n\tCTX_OFS_REI_IND,\n\tCTX_SINGLE_CHK_IND,\n\tCTX_CREATE_TS,\n\tCTX_TRANS_REASON\n\tFROM SQ_CLAIM_TRANSACTION_STAGE_INS\n),\nEXP_Default AS (\n\tSELECT\n\tCTX_FIN_TYPE_CD,\n\tCTX_TRS_TYPE_CD,\n\t-- *INF*: TO_CHAR(CTX_TRS_TYPE_CD)\n\tTO_CHAR(CTX_TRS_TYPE_CD) AS out_CTX_TRS_TYPE_CD,\n\tCTX_TRS_CAT_CD,\n\t-- *INF*: IIF((ISNULL(CTX_TRS_CAT_CD) OR IS_SPACES(CTX_TRS_CAT_CD)), 'N/A',ltrim(rtrim(CTX_TRS_CAT_CD)))\n\tIFF(( CTX_TRS_CAT_CD IS NULL OR IS_SPACES(CTX_TRS_CAT_CD) ), 'N/A', ltrim(rtrim(CTX_TRS_CAT_CD))) AS OP_CTX_TRS_CAT_CD,\n\tCTX_CREATE_TS AS IN_CTX_CREATE_TS,\n\t-- *INF*: IIF(ISNULL(IN_CTX_CREATE_TS),TO_DATE('1/1/1800','MM/DD/YYYY'),IN_CTX_CREATE_TS)\n\tIFF(IN_CTX_CREATE_TS IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), IN_CTX_CREATE_TS) AS CTX_CREATE_TS\n\tFROM EXP_Default1\n),\nLKP_Sup_Convert_S3p_Claim_Transaction_Code AS (\n\tSELECT\n\tedw_financial_type_code,\n\tedw_trans_code,\n\tedw_trans_ctgry_code,\n\ts3p_financial_type_code,\n\ts3p_trans_code,\n\ts3p_trans_ctgry_code\n\tFROM (\n\t\tSELECT sup_convert_s3p_claim_transaction_code.edw_financial_type_code as edw_financial_type_code, sup_convert_s3p_claim_transaction_code.edw_trans_code as edw_trans_code, sup_convert_s3p_claim_transaction_code.edw_trans_ctgry_code as edw_trans_ctgry_code, sup_convert_s3p_claim_transaction_code.s3p_financial_type_code as s3p_financial_type_code, sup_convert_s3p_claim_transaction_code.s3p_trans_code as s3p_trans_code, sup_convert_s3p_claim_transaction_code.s3p_trans_ctgry_code as s3p_trans_ctgry_code \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_convert_s3p_claim_transaction_code\r\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY s3p_financial_type_code,s3p_trans_code,s3p_trans_ctgry_code ORDER BY edw_financial_type_code) = 1\n),\nEXP_Chk_Null_Lkp AS (\n\tSELECT\n\tLKP_Sup_Convert_S3p_Claim_Transaction_Code.edw_financial_type_code,\n\tLKP_Sup_Convert_S3p_Claim_Transaction_Code.edw_trans_code,\n\tLKP_Sup_Convert_S3p_Claim_Transaction_Code.edw_trans_ctgry_code,\n\tEXP_Default.CTX_FIN_TYPE_CD,\n\tEXP_Default.out_CTX_TRS_TYPE_CD,\n\tEXP_Default.OP_CTX_TRS_CAT_CD,\n\t-- *INF*: IIF(ISNULL(edw_financial_type_code),CTX_FIN_TYPE_CD,edw_financial_type_code)\n\tIFF(edw_financial_type_code IS NULL, CTX_FIN_TYPE_CD, edw_financial_type_code) AS op_edw_financial_type_code,\n\t-- *INF*: IIF(ISNULL(edw_trans_code),out_CTX_TRS_TYPE_CD,edw_trans_code)\n\tIFF(edw_trans_code IS NULL, out_CTX_TRS_TYPE_CD, edw_trans_code) AS op_edw_trans_code,\n\t-- *INF*: IIF(ISNULL(edw_trans_ctgry_code),OP_CTX_TRS_CAT_CD,edw_trans_ctgry_code)\n\tIFF(edw_trans_ctgry_code IS NULL, OP_CTX_TRS_CAT_CD, edw_trans_ctgry_code) AS op_edw_trans_ctgry_code\n\tFROM EXP_Default\n\tLEFT JOIN LKP_Sup_Convert_S3p_Claim_Transaction_Code\n\tON LKP_Sup_Convert_S3p_Claim_Transaction_Code.s3p_financial_type_code = EXP_Default.CTX_FIN_TYPE_CD AND LKP_Sup_Convert_S3p_Claim_Transaction_Code.s3p_trans_code = EXP_Default.out_CTX_TRS_TYPE_CD AND LKP_Sup_Convert_S3p_Claim_Transaction_Code.s3p_trans_ctgry_code = EXP_Default.OP_CTX_TRS_CAT_CD\n),\nLKP_Claim_Draft_Stage AS (\n\tSELECT\n\tDFT_TAX_ID_NBR,\n\tDFT_TAX_ID_TYPE_CD,\n\tDFT_CLAIM_NBR,\n\tDFT_DRAFT_NBR\n\tFROM (\n\t\tSELECT \r\n\t\tCLAIM_DRAFT_STAGE.DFT_TAX_ID_NBR as DFT_TAX_ID_NBR, CLAIM_DRAFT_STAGE.DFT_TAX_ID_TYPE_CD as DFT_TAX_ID_TYPE_CD, CLAIM_DRAFT_STAGE.DFT_CLAIM_NBR as DFT_CLAIM_NBR, \r\n\t\tCLAIM_DRAFT_STAGE.DFT_DRAFT_NBR as DFT_DRAFT_NBR \r\n\t\tFROM \r\n\t\tCLAIM_DRAFT_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DFT_CLAIM_NBR,DFT_DRAFT_NBR ORDER BY DFT_TAX_ID_NBR) = 1\n),\nLKP_Claim_1099_Master_List_connected AS (\n\tSELECT\n\tclaim_master_1099_list_ak_id,\n\ttax_id,\n\tirs_tax_id\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_master_1099_list.claim_master_1099_list_ak_id as claim_master_1099_list_ak_id, \r\n\t\tclaim_master_1099_list.tax_id as tax_id, \r\n\t\tclaim_master_1099_list.irs_tax_id as irs_tax_id \r\n\t\tFROM \r\n\t\tclaim_master_1099_list\r\n\t\twhere \r\n\t\tclaim_master_1099_list.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY irs_tax_id ORDER BY claim_master_1099_list_ak_id) = 1\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\toffset_onset_ind,\n\tpms_pol_lob_code,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code,\r\n\t\tLTRIM(RTRIM(VP.pms_pol_lob_code)) as pms_pol_lob_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO,\r\n\t\tV2.policy VP\r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id AND VP.pol_ak_id=CO.pol_key_ak_id\r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\r\n\t\tAND VP.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nLKP_Claim_Payment AS (\n\tSELECT\n\tclaim_pay_ak_id,\n\tclaim_pay_num,\n\tIN_CTX_DRAFT_NBR\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_pay_ak_id,\n\t\t\tclaim_pay_num,\n\t\t\tIN_CTX_DRAFT_NBR\n\t\tFROM claim_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_ak_id) = 1\n),\nLKP_Clm_Cov_Pkg_Stage AS (\n\tSELECT\n\tCCP_MNL_ENTRY_IND,\n\tCCP_SAR_ID,\n\tCCP_CLAIM_NBR,\n\tCCP_OBJECT_TYPE_CD,\n\tCCP_OBJECT_SEQ_NBR,\n\tCCP_PKG_TYPE_CD,\n\tCCP_PKG_SEQ_NBR\n\tFROM (\n\t\tSELECT \n\t\t\tCCP_MNL_ENTRY_IND,\n\t\t\tCCP_SAR_ID,\n\t\t\tCCP_CLAIM_NBR,\n\t\t\tCCP_OBJECT_TYPE_CD,\n\t\t\tCCP_OBJECT_SEQ_NBR,\n\t\t\tCCP_PKG_TYPE_CD,\n\t\t\tCCP_PKG_SEQ_NBR\n\t\tFROM CLM_COV_PKG_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CCP_CLAIM_NBR,CCP_OBJECT_TYPE_CD,CCP_OBJECT_SEQ_NBR,CCP_PKG_TYPE_CD,CCP_PKG_SEQ_NBR ORDER BY CCP_MNL_ENTRY_IND DESC) = 1\n),\nEXP_Source AS (\n\tSELECT\n\tEXP_Default1.CTX_OBJECT_TYPE_CD,\n\tLKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id,\n\tEXP_Default1.CTX_BUR_CAUSE_LOSS,\n\t-- *INF*: SUBSTR(CTX_BUR_CAUSE_LOSS,1,2)\n\tSUBSTR(CTX_BUR_CAUSE_LOSS, 1, 2) AS V_CAUSE_LOSS,\n\tV_CAUSE_LOSS AS OP_CAUSE_LOSS,\n\t-- *INF*: SUBSTR(CTX_BUR_CAUSE_LOSS,3,1)\n\tSUBSTR(CTX_BUR_CAUSE_LOSS, 3, 1) AS V_RESERVE_CAT,\n\tV_RESERVE_CAT AS OP_RESERVE_CAT,\n\t-- *INF*: IIF(CTX_OBJECT_TYPE_CD = 'WCC' AND SUBSTR(CTX_BUR_CAUSE_LOSS, 1,2) = '06','06','05')\n\tIFF(CTX_OBJECT_TYPE_CD = 'WCC' AND SUBSTR(CTX_BUR_CAUSE_LOSS, 1, 2) = '06', '06', '05') AS TYPE_DISABILITY_OP,\n\tEXP_Default1.CTX_DRAFT_NBR,\n\t-- *INF*: IIF(ISNULL(CTX_DRAFT_NBR) OR IS_SPACES(CTX_DRAFT_NBR) ,'N/A', CTX_DRAFT_NBR)\n\tIFF(CTX_DRAFT_NBR IS NULL OR IS_SPACES(CTX_DRAFT_NBR), 'N/A', CTX_DRAFT_NBR) AS OP_CTX_DRAFT_NBR,\n\t-- *INF*: IIF (NOT ISNULL(:LKP.LKP_CLM_OFFSET_HONOR_STAGE(CTX_DRAFT_NBR)), 'O','N/A')\n\tIFF(NOT LKP_CLM_OFFSET_HONOR_STAGE_CTX_DRAFT_NBR.COH_DRAFT_NBR IS NULL, 'O', 'N/A') AS OP_OFFSET_ONSET_IND,\n\tEXP_Chk_Null_Lkp.op_edw_financial_type_code AS CTX_FIN_TYPE_CD,\n\tEXP_Chk_Null_Lkp.op_edw_trans_code AS CTX_TRS_TYPE_CD,\n\t-- *INF*: RTRIM(LTRIM(TO_CHAR(CTX_TRS_TYPE_CD)))\n\tRTRIM(LTRIM(TO_CHAR(CTX_TRS_TYPE_CD))) AS out_CTX_TRS_TYPE_CD,\n\t-- *INF*: IIF(CTX_TRS_TYPE_CD = 91 OR CTX_TRS_TYPE_CD = 92, 90, CTX_TRS_TYPE_CD)\n\tIFF(CTX_TRS_TYPE_CD = 91 OR CTX_TRS_TYPE_CD = 92, 90, CTX_TRS_TYPE_CD) AS OP_CTX_TRS_TYPE_CD,\n\tEXP_Default1.CTX_SORT_TS,\n\tEXP_Default1.CTX_UPD_TS,\n\t-- *INF*: IIF(ISNULL(CTX_UPD_TS), TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),CTX_UPD_TS)\n\tIFF(CTX_UPD_TS IS NULL, TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), CTX_UPD_TS) AS OP_CTX_UPD_TS,\n\tEXP_Default1.CTX_TRS_AMT,\n\t-- *INF*: IIF(ISNULL(CTX_TRS_AMT),0,CTX_TRS_AMT)\n\tIFF(CTX_TRS_AMT IS NULL, 0, CTX_TRS_AMT) AS OP_CTX_TRS_AMT,\n\tEXP_Default1.CTX_TRS_HST_AMT,\n\t-- *INF*: IIF(ISNULL(CTX_TRS_HST_AMT),0,CTX_TRS_HST_AMT)\n\tIFF(CTX_TRS_HST_AMT IS NULL, 0, CTX_TRS_HST_AMT) AS OP_CTX_TRS_HST_AMT,\n\tEXP_Default1.CTX_TRANS_REASON,\n\t-- *INF*: IIF(ISNULL(CTX_TRANS_REASON) OR IS_SPACES(CTX_TRANS_REASON),'N/A',CTX_TRANS_REASON)\n\tIFF(CTX_TRANS_REASON IS NULL OR IS_SPACES(CTX_TRANS_REASON), 'N/A', CTX_TRANS_REASON) AS OP_CTX_TRANS_REASON,\n\tEXP_Default1.CTX_SINGLE_CHK_IND,\n\t-- *INF*: IIF(ISNULL(CTX_SINGLE_CHK_IND) OR IS_SPACES(CTX_SINGLE_CHK_IND),'N/A',CTX_SINGLE_CHK_IND)\n\tIFF(CTX_SINGLE_CHK_IND IS NULL OR IS_SPACES(CTX_SINGLE_CHK_IND), 'N/A', CTX_SINGLE_CHK_IND) AS OP_CTX_SINGLE_CHK_IND,\n\tEXP_Default1.CTX_OFS_REI_IND,\n\t-- *INF*: IIF(ISNULL(CTX_OFS_REI_IND) OR IS_SPACES(CTX_OFS_REI_IND),'N/A',CTX_OFS_REI_IND)\n\tIFF(CTX_OFS_REI_IND IS NULL OR IS_SPACES(CTX_OFS_REI_IND), 'N/A', CTX_OFS_REI_IND) AS OP_CTX_OFS_REI_IND,\n\tEXP_Default1.CTX_ENTRY_OPR_ID,\n\t-- *INF*: IIF(ISNULL(CTX_ENTRY_OPR_ID) OR IS_SPACES(CTX_ENTRY_OPR_ID),'N/A',CTX_ENTRY_OPR_ID)\n\tIFF(CTX_ENTRY_OPR_ID IS NULL OR IS_SPACES(CTX_ENTRY_OPR_ID), 'N/A', CTX_ENTRY_OPR_ID) AS OP_CTX_ENTRY_OPR_ID,\n\tLKP_Claim_Party_Occurrence_AK_ID.offset_onset_ind AS claim_occurrence_type_code,\n\tclaim_occurrence_ak_id AS CLAIM_AK_ID_VAR,\n\tEXP_Default1.CTX_CLIENT_ID,\n\t-- *INF*: LTRIM(RTRIM(CTX_CLIENT_ID))\r\n\t-- \r\n\t-- ---IIF(NOT ISNULL(CLAIM_AK_ID_VAR), :LKP.LKP_CLAIM_PARTY(LTRIM(RTRIM(CTX_CLIENT_ID))), NULL)\n\tLTRIM(RTRIM(CTX_CLIENT_ID)) AS CLAIM_PARTY_KEY,\n\t-- *INF*: ---IIF(NOT ISNULL(CLAIM_AK_ID_VAR), :LKP.LKP_CLAIM_PARTY(LTRIM(RTRIM(CTX_CLIENT_ID))), NULL)\n\t'' AS PARTY_AK_ID_VAR,\n\t-- *INF*: --IIF((NOT ISNULL(CLAIM_AK_ID_VAR) AND NOT ISNULL(PARTY_AK_ID_VAR)), :LKP.LKP_CLAIM_PARTY_OCCURENCE(CLAIM_AK_ID_VAR, PARTY_AK_ID_VAR), NULL)\n\t'' AS PARTY_OCC_AK_ID_VAR,\n\tEXP_Default1.CTX_OBJECT_SEQ_NBR,\n\tEXP_Default1.CTX_COV_TYPE_CD,\n\tEXP_Default1.CTX_COV_SEQ_NBR,\n\t-- *INF*: ---IIF(NOT ISNULL(PARTY_OCC_AK_ID_VAR),:LKP.LKP_CLAIMANT_COVERAGE_DETAIL(PARTY_OCC_AK_ID_VAR, CTX_OBJECT_TYPE_CD, CTX_OBJECT_SEQ_NBR, CTX_COV_TYPE_CD, CTX_COV_SEQ_NBR, V_CAUSE_LOSS, V_RESERVE_CAT), NULL)\r\n\t-- \r\n\t-- --IIF(NOT ISNULL(PARTY_OCC_AK_ID_VAR),:LKP.LKP_CLAIMANT_COVERAGE_DETAIL(PARTY_OCC_AK_ID_VAR, CTX_OBJECT_TYPE_CD, CTX_OBJECT_SEQ_NBR, CTX_COV_TYPE_CD, CTX_COV_SEQ_NBR), NULL)\n\t'' AS OP_CLAIM_COV_DTL_AK_ID,\n\t1 AS Crrnt_SnapSht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS reprocess_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\tEXP_Default1.CTX_BASE_TRS_TYPE,\n\t-- *INF*: IIF(ISNULL(CTX_BASE_TRS_TYPE) ,'N/A',TO_CHAR(CTX_BASE_TRS_TYPE))\n\tIFF(CTX_BASE_TRS_TYPE IS NULL, 'N/A', TO_CHAR(CTX_BASE_TRS_TYPE)) AS OP_CTX_BASE_TRS_TYPE,\n\tEXP_Chk_Null_Lkp.op_edw_trans_ctgry_code AS CTX_TRS_CAT_CD,\n\t-- *INF*: IIF(ISNULL(CTX_TRS_CAT_CD) OR IS_SPACES(CTX_TRS_CAT_CD),'N/A',CTX_TRS_CAT_CD)\n\tIFF(CTX_TRS_CAT_CD IS NULL OR IS_SPACES(CTX_TRS_CAT_CD), 'N/A', CTX_TRS_CAT_CD) AS OP_CTX_TRS_CAT_CD,\n\tEXP_Default1.CTX_CLAIM_NBR,\n\tLKP_Clm_Cov_Pkg_Stage.CCP_MNL_ENTRY_IND AS IP_CCP_MNL_ENTRY_IND,\n\tLKP_Clm_Cov_Pkg_Stage.CCP_SAR_ID AS IP_CCP_SAR_ID,\n\t-- *INF*: ---:LKP.LKP_CLM_OBJECT_STAGE(CTX_CLAIM_NBR,CTX_OBJECT_TYPE_CD,CTX_OBJECT_SEQ_NBR)\n\t'' AS COB_SAR_ID_VAR,\n\t-- *INF*: IIF(claim_occurrence_type_code = 'WCC','45',IP_CCP_SAR_ID)\r\n\t-- \r\n\t-- \r\n\t-- ----  For Worker Comp Claims we are always hard coding the sar_id to 45 \r\n\t-- \r\n\t-- -- Changed the logic on 08/19/2010\r\n\t-- \r\n\t-- --LTRIM(RTRIM(IIF(IP_CCP_MNL_ENTRY_IND = '1' OR claim_occurrence_type_code = --'COM',IP_CCP_SAR_ID,COB_SAR_ID_VAR)))\n\tIFF(claim_occurrence_type_code = 'WCC', '45', IP_CCP_SAR_ID) AS COVERAGE_SAR_ID_VAR,\n\t-- *INF*: IIF(ISNULL(COVERAGE_SAR_ID_VAR) OR \r\n\t-- IS_SPACES(COVERAGE_SAR_ID_VAR),'N/A',COVERAGE_SAR_ID_VAR)\n\tIFF(COVERAGE_SAR_ID_VAR IS NULL OR IS_SPACES(COVERAGE_SAR_ID_VAR), 'N/A', COVERAGE_SAR_ID_VAR) AS OP_SAR_ID,\n\t'N/A' AS OP_PMS_LOSS_TRANS_CODE,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS OP_NULL_PMS_DATES,\n\tEXP_Default.CTX_TRS_TYPE_CD AS CTX_ORIG_TRS_TYPE_CD,\n\tEXP_Default1.CLAIM_TRANSACTION_ID,\n\tLKP_Claim_Payment.claim_pay_ak_id AS in_claim_pay_ak_id,\n\t-- *INF*: IIF(ISNULL(in_claim_pay_ak_id), -1, in_claim_pay_ak_id)\n\tIFF(in_claim_pay_ak_id IS NULL, - 1, in_claim_pay_ak_id) AS claim_pay_ak_id,\n\t0 AS err_flag,\n\tLKP_Claim_1099_Master_List_connected.irs_tax_id AS IN_LKP_IRS_TAX_ID,\n\tLKP_Claim_1099_Master_List_connected.tax_id AS IN_LKP_TAX_ID,\n\tLKP_Claim_1099_Master_List_connected.claim_master_1099_list_ak_id AS IN_LKP_MASTER_1099_AK_ID,\n\t-- *INF*: iif(isnull(IN_LKP_TAX_ID)  OR length(IN_LKP_TAX_ID)= 0 OR IS_SPACES(IN_LKP_TAX_ID), '000000000',ltrim(rtrim(IN_LKP_TAX_ID)))\n\tIFF(IN_LKP_TAX_ID IS NULL OR length(IN_LKP_TAX_ID) = 0 OR IS_SPACES(IN_LKP_TAX_ID), '000000000', ltrim(rtrim(IN_LKP_TAX_ID))) AS V_TAX_ID,\n\t-- *INF*: iif(isnull(IN_LKP_IRS_TAX_ID)  OR length(IN_LKP_IRS_TAX_ID)= 0 OR IS_SPACES(IN_LKP_IRS_TAX_ID), '000000000',ltrim(rtrim(IN_LKP_IRS_TAX_ID)))\n\tIFF(IN_LKP_IRS_TAX_ID IS NULL OR length(IN_LKP_IRS_TAX_ID) = 0 OR IS_SPACES(IN_LKP_IRS_TAX_ID), '000000000', ltrim(rtrim(IN_LKP_IRS_TAX_ID))) AS v_IRS_TAX_ID,\n\t-- *INF*: IIF(V_TAX_ID='000000000',-1,IIF(ISNULL(IN_LKP_MASTER_1099_AK_ID),-1,IN_LKP_MASTER_1099_AK_ID))\n\tIFF(V_TAX_ID = '000000000', - 1, IFF(IN_LKP_MASTER_1099_AK_ID IS NULL, - 1, IN_LKP_MASTER_1099_AK_ID)) AS V_1099_AK_ID,\n\tV_TAX_ID AS out_tax_id,\n\tV_1099_AK_ID AS out_claim_master_1099_list_ak_id,\n\tEXP_Default.CTX_CREATE_TS,\n\t-- *INF*: (CTX_FIN_TYPE_CD || TO_CHAR(CTX_ORIG_TRS_TYPE_CD) \r\n\t-- || IIF(CTX_TRS_CAT_CD = 'N/A','',CTX_TRS_CAT_CD))\n\t( CTX_FIN_TYPE_CD || TO_CHAR(CTX_ORIG_TRS_TYPE_CD) || IFF(CTX_TRS_CAT_CD = 'N/A', '', CTX_TRS_CAT_CD) ) AS v_Exceed_Trans_Code_to_PMS_Code,\n\t-- *INF*: :LKP.LKP_CLAIM_SUPPORT_01_EXCEED_PMS_TRANS_CODE(LTRIM(RTRIM(\r\n\t-- v_Exceed_Trans_Code_to_PMS_Code)))\r\n\t-- \r\n\t-- \r\n\t-- --- Used the backfeed logic of converting Exceed trans code to pms_trans_code when\r\n\t--  ---transactions backfeed to PMS system. We need transaction code for Loss Master data \n\tLKP_CLAIM_SUPPORT_01_EXCEED_PMS_TRANS_CODE_LTRIM_RTRIM_v_Exceed_Trans_Code_to_PMS_Code.cs01_code_des AS Lkp_Exceed_Trans_Code_to_PMS,\n\t-- *INF*: IIF(ISNULL(Lkp_Exceed_Trans_Code_to_PMS),'N/A',Lkp_Exceed_Trans_Code_to_PMS)\n\tIFF(Lkp_Exceed_Trans_Code_to_PMS IS NULL, 'N/A', Lkp_Exceed_Trans_Code_to_PMS) AS PMS_Trans_Code,\n\t'N/A' AS trans_Offset_Onset_Ind,\n\tLKP_Claim_Party_Occurrence_AK_ID.pms_pol_lob_code\n\tFROM EXP_Chk_Null_Lkp\n\t -- Manually join with EXP_Default\n\t -- Manually join with EXP_Default1\n\tLEFT JOIN LKP_Claim_1099_Master_List_connected\n\tON LKP_Claim_1099_Master_List_connected.irs_tax_id = LKP_Claim_Draft_Stage.DFT_TAX_ID_NBR\n\tLEFT JOIN LKP_Claim_Party_Occurrence_AK_ID\n\tON LKP_Claim_Party_Occurrence_AK_ID.claimant_num = EXP_Default1.CTX_CLAIM_NBR AND LKP_Claim_Party_Occurrence_AK_ID.claim_party_role_code = EXP_Default1.CTX_CLIENT_ID\n\tLEFT JOIN LKP_Claim_Payment\n\tON LKP_Claim_Payment.claim_pay_num = EXP_Default1.CTX_DRAFT_NBR\n\tLEFT JOIN LKP_Clm_Cov_Pkg_Stage\n\tON LKP_Clm_Cov_Pkg_Stage.CCP_CLAIM_NBR = EXP_Default1.CTX_CLAIM_NBR AND LKP_Clm_Cov_Pkg_Stage.CCP_OBJECT_TYPE_CD = EXP_Default1.CTX_OBJECT_TYPE_CD AND LKP_Clm_Cov_Pkg_Stage.CCP_OBJECT_SEQ_NBR = EXP_Default1.CTX_OBJECT_SEQ_NBR AND LKP_Clm_Cov_Pkg_Stage.CCP_PKG_TYPE_CD = EXP_Default1.CTX_COV_TYPE_CD AND LKP_Clm_Cov_Pkg_Stage.CCP_PKG_SEQ_NBR = EXP_Default1.CTX_COV_SEQ_NBR\n\tLEFT JOIN LKP_CLM_OFFSET_HONOR_STAGE LKP_CLM_OFFSET_HONOR_STAGE_CTX_DRAFT_NBR\n\tON LKP_CLM_OFFSET_HONOR_STAGE_CTX_DRAFT_NBR.COH_DRAFT_NBR = CTX_DRAFT_NBR\n\n\tLEFT JOIN LKP_CLAIM_SUPPORT_01_EXCEED_PMS_TRANS_CODE LKP_CLAIM_SUPPORT_01_EXCEED_PMS_TRANS_CODE_LTRIM_RTRIM_v_Exceed_Trans_Code_to_PMS_Code\n\tON LKP_CLAIM_SUPPORT_01_EXCEED_PMS_TRANS_CODE_LTRIM_RTRIM_v_Exceed_Trans_Code_to_PMS_Code.cs01_code = LTRIM(RTRIM(v_Exceed_Trans_Code_to_PMS_Code))\n\n),\nLKP_Claimant_Coverage_Detail_AK_ID AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tmajor_peril_code,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\tcause_of_loss,\n\treserve_ctgry\n\tFROM (\n\t\tSELECT \r\n\t\tA.claimant_cov_det_ak_id as claimant_cov_det_ak_id, \r\n\t\tA.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tA.s3p_object_type_code as s3p_object_type_code, \r\n\t\tA.s3p_object_seq_num as s3p_object_seq_num, \r\n\t\tA.major_peril_code as major_peril_code, \r\n\t\tA.s3p_pkg_seq_num as s3p_pkg_seq_num, \r\n\t\tA.cause_of_loss as cause_of_loss, \r\n\t\tA.reserve_ctgry as reserve_ctgry  \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail A\r\n\t\tWHERE A.crrnt_snpsht_flag = 1 AND source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,s3p_object_type_code,s3p_object_seq_num,major_peril_code,s3p_pkg_seq_num,cause_of_loss,reserve_ctgry ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_Claim_Transaction AS (\n\tSELECT\n\tclaim_trans_id,\n\tsar_id,\n\ttax_id,\n\tclaim_master_1099_list_ak_id,\n\tclaimant_cov_det_ak_id,\n\tcause_of_loss,\n\treserve_ctgry,\n\tfinancial_type_code,\n\ttrans_code,\n\ttrans_date,\n\ttrans_ctgry_code,\n\tdraft_num\n\tFROM (\n\t\tSELECT CT.claim_trans_id AS claim_trans_id,\r\n\t\t       CT.sar_id AS sar_id,\r\n\t\t\t   CT.tax_id as tax_id,\r\n\t\t       CT.claim_master_1099_list_ak_id as claim_master_1099_list_ak_id,\r\n\t\t       CT.claimant_cov_det_ak_id AS claimant_cov_det_ak_id,\r\n\t\t       CT.cause_of_loss AS cause_of_loss,\r\n\t\t       CT.reserve_ctgry AS reserve_ctgry,\r\n\t\t       CT.financial_type_code AS financial_type_code,\r\n\t\t       CASE CT.trans_code\r\n\t\t         WHEN 91 THEN 90\r\n\t\t         WHEN 92 THEN 90\r\n\t\t         ELSE CT.trans_code\r\n\t\t       END  AS trans_code,\r\n\t\t       CT.trans_date  AS trans_date,\r\n\t\t       CT.trans_ctgry_code  AS trans_ctgry_code,\r\n\t\t       CT.draft_num as draft_num\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_transaction CT\r\n\t\tWHERE  CT.crrnt_snpsht_flag = 1\r\n\t\t       AND CT.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t       AND CT.trans_offset_onset_ind in ('N/A','N')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,cause_of_loss,reserve_ctgry,financial_type_code,trans_code,trans_date,trans_ctgry_code,draft_num ORDER BY claim_trans_id DESC) = 1\n),\nLKP_Sup_CauseOfLoss AS (\n\tSELECT\n\tCauseOfLossId,\n\tLineOfBusiness,\n\tMajorPeril,\n\tCauseOfLoss\n\tFROM (\n\t\tSELECT \n\t\t\tCauseOfLossId,\n\t\t\tLineOfBusiness,\n\t\t\tMajorPeril,\n\t\t\tCauseOfLoss\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_CauseOfLoss\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineOfBusiness,MajorPeril,CauseOfLoss ORDER BY CauseOfLossId) = 1\n),\nLKP_Sup_Claim_Financial_Code AS (\n\tSELECT\n\tsup_claim_financial_code_id,\n\tfinancial_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_financial_code_id,\n\t\t\tfinancial_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_financial_code\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY financial_code ORDER BY sup_claim_financial_code_id) = 1\n),\nLKP_Sup_Claim_Reserve_Category AS (\n\tSELECT\n\tsup_claim_reserve_ctgry_id,\n\treserve_ctgry_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_reserve_ctgry_id,\n\t\t\treserve_ctgry_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_reserve_category\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY reserve_ctgry_code ORDER BY sup_claim_reserve_ctgry_id) = 1\n),\nLKP_Sup_Claim_Transaction_Category AS (\n\tSELECT\n\tsup_claim_trans_catetory_id,\n\ttrans_ctgry_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_trans_catetory_id,\n\t\t\ttrans_ctgry_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_transaction_category\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_ctgry_code ORDER BY sup_claim_trans_catetory_id) = 1\n),\nEXP_Values_Eval AS (\n\tSELECT\n\tLKP_Claim_Transaction.claim_trans_id,\n\tLKP_Claim_Transaction.sar_id AS lkp_sar_id,\n\tLKP_Claim_Transaction.tax_id AS lkp_tax_id,\n\tLKP_Claim_Transaction.claim_master_1099_list_ak_id AS lkp_claim_master_1099_list_ak_id,\n\tLKP_Claimant_Coverage_Detail_AK_ID.claimant_cov_det_ak_id AS i_claimant_cov_det_ak_id,\n\t-- *INF*: IIF(ISNULL(i_claimant_cov_det_ak_id),-1,i_claimant_cov_det_ak_id)\n\tIFF(i_claimant_cov_det_ak_id IS NULL, - 1, i_claimant_cov_det_ak_id) AS o_claimant_cov_det_ak_id,\n\tEXP_Source.OP_CAUSE_LOSS,\n\tEXP_Source.OP_RESERVE_CAT,\n\tEXP_Source.TYPE_DISABILITY_OP,\n\tEXP_Source.OP_OFFSET_ONSET_IND,\n\tEXP_Source.CTX_FIN_TYPE_CD,\n\tEXP_Source.CTX_TRS_TYPE_CD,\n\tEXP_Source.CTX_SORT_TS,\n\tEXP_Source.OP_CTX_UPD_TS AS CTX_UPD_TS,\n\tEXP_Source.OP_CTX_BASE_TRS_TYPE AS CTX_BASE_TRS_TYPE,\n\tEXP_Source.OP_CTX_TRS_CAT_CD AS CTX_TRS_CAT_CD,\n\tEXP_Source.OP_CTX_TRS_AMT AS CTX_TRS_AMT,\n\tEXP_Source.OP_CTX_TRS_HST_AMT AS CTX_TRS_HST_AMT,\n\tEXP_Source.OP_CTX_TRANS_REASON AS CTX_TRANS_REASON,\n\tEXP_Source.OP_CTX_DRAFT_NBR AS CTX_DRAFT_NBR,\n\tEXP_Source.OP_CTX_SINGLE_CHK_IND AS CTX_SINGLE_CHK_IND,\n\tEXP_Source.OP_CTX_OFS_REI_IND AS CTX_OFS_REI_IND,\n\tEXP_Source.OP_CTX_ENTRY_OPR_ID AS CTX_ENTRY_OPR_ID,\n\tEXP_Source.Crrnt_SnapSht_Flag,\n\tEXP_Source.AUDIT_ID,\n\tEXP_Source.SOURCE_SYSTEM_ID,\n\tEXP_Source.eff_from_date,\n\tEXP_Source.reprocess_date,\n\tEXP_Source.eff_to_date,\n\tEXP_Source.created_date,\n\tEXP_Source.modified_date,\n\tEXP_Source.OP_SAR_ID,\n\t-- *INF*: IIF(NOT ISNULL(claim_trans_id), IIF(OP_SAR_ID = 'N/A',lkp_sar_id,OP_SAR_ID),OP_SAR_ID)\r\n\t-- \r\n\t-- ---6/10/2011  Added the logic as with updates to Transaction record, some time we may get value of 'N/A' for \r\n\t-- ---OP_SAR_ID so we need to use the old value from lookup (lkp_sar_id).\r\n\t-- \n\tIFF(NOT claim_trans_id IS NULL, IFF(OP_SAR_ID = 'N/A', lkp_sar_id, OP_SAR_ID), OP_SAR_ID) AS SAR_ID_Out,\n\tEXP_Source.OP_PMS_LOSS_TRANS_CODE,\n\tEXP_Source.OP_NULL_PMS_DATES,\n\tEXP_Source.CTX_ORIG_TRS_TYPE_CD,\n\tEXP_Source.CLAIM_TRANSACTION_ID,\n\tEXP_Source.claim_pay_ak_id,\n\tEXP_Source.err_flag,\n\t-- *INF*: IIF(\r\n\t-- \tISNULL(tax_id) or tax_id='000000000',\r\n\t-- \t\tIIF(\r\n\t-- \t\t\t ISNULL(lkp_tax_id) or lkp_tax_id ='000000000',\r\n\t-- \t\t\t\ttax_id,\r\n\t-- \t\t\tlkp_tax_id\r\n\t-- \t\t\t)\r\n\t-- \t\t,tax_id\r\n\t-- \t)\r\n\t-- \r\n\t-- -- If tax_id is valid then overwrite whatever value we have in the lookup.  \r\n\t-- --If not, and the lookup value is valid use the lookup, else use the default tax id value which defaults to '000000000'\n\tIFF(tax_id IS NULL OR tax_id = '000000000', IFF(lkp_tax_id IS NULL OR lkp_tax_id = '000000000', tax_id, lkp_tax_id), tax_id) AS v_tax_id,\n\t-- *INF*: IIF(\r\n\t-- \tisnull(claim_master_1099_list_ak_id) or claim_master_1099_list_ak_id=-1,\t\t\r\n\t-- \t\tIIF( \r\n\t-- \t\t\tisnull(lkp_claim_master_1099_list_ak_id)  or  lkp_claim_master_1099_list_ak_id = -1,\r\n\t-- \t\t\t\tclaim_master_1099_list_ak_id,\r\n\t-- \t\t\tlkp_claim_master_1099_list_ak_id\r\n\t-- \t\t\t)\r\n\t-- \t\t,claim_master_1099_list_ak_id\r\n\t-- \t)\r\n\t-- \r\n\t-- -- if source value is null or -1 use the lookup value if it is not equal to -1, else use the source value which defaults to -1 or a real value.\n\tIFF(claim_master_1099_list_ak_id IS NULL OR claim_master_1099_list_ak_id = - 1, IFF(lkp_claim_master_1099_list_ak_id IS NULL OR lkp_claim_master_1099_list_ak_id = - 1, claim_master_1099_list_ak_id, lkp_claim_master_1099_list_ak_id), claim_master_1099_list_ak_id) AS v_claim_master_1099_list_ak_id,\n\tEXP_Source.out_tax_id AS tax_id,\n\tEXP_Source.out_claim_master_1099_list_ak_id AS claim_master_1099_list_ak_id,\n\tv_tax_id AS tax_id_out,\n\tv_claim_master_1099_list_ak_id AS claim_master_1099_list_ak_id_out,\n\tEXP_Source.CTX_CREATE_TS,\n\tEXP_Source.PMS_Trans_Code,\n\tEXP_Source.trans_Offset_Onset_Ind,\n\tEXP_Source.out_CTX_TRS_TYPE_CD,\n\tLKP_Sup_Claim_Reserve_Category.sup_claim_reserve_ctgry_id AS LKP_sup_claim_reserve_ctgry_id,\n\t-- *INF*: IIF(ISNULL(LKP_sup_claim_reserve_ctgry_id),-1,LKP_sup_claim_reserve_ctgry_id)\n\tIFF(LKP_sup_claim_reserve_ctgry_id IS NULL, - 1, LKP_sup_claim_reserve_ctgry_id) AS o_SupReserveCategoryCodeID,\n\tLKP_Sup_Claim_Financial_Code.sup_claim_financial_code_id AS LKP_sup_claim_financial_code_id,\n\t-- *INF*: IIF(ISNULL(LKP_sup_claim_financial_code_id),-1,LKP_sup_claim_financial_code_id)\n\tIFF(LKP_sup_claim_financial_code_id IS NULL, - 1, LKP_sup_claim_financial_code_id) AS o_FinancialTypeCodeID,\n\t-- *INF*: :LKP.LKP_SUP_CLAIM_TRANSACTION_CODE(LTRIM(RTRIM(TO_CHAR(CTX_ORIG_TRS_TYPE_CD))))\n\tLKP_SUP_CLAIM_TRANSACTION_CODE_LTRIM_RTRIM_TO_CHAR_CTX_ORIG_TRS_TYPE_CD.sup_claim_trans_code_id AS LKP_S3PTransactionCodeID,\n\t-- *INF*: :LKP.LKP_SUP_CLAIM_TRANSACTION_CODE(out_CTX_TRS_TYPE_CD)\n\tLKP_SUP_CLAIM_TRANSACTION_CODE_out_CTX_TRS_TYPE_CD.sup_claim_trans_code_id AS LKP_TransactionCodeID,\n\t-- *INF*: IIF(ISNULL(LKP_S3PTransactionCodeID),-1,LKP_S3PTransactionCodeID)\n\tIFF(LKP_S3PTransactionCodeID IS NULL, - 1, LKP_S3PTransactionCodeID) AS o_S3PTransactionCodeID,\n\t-- *INF*: IIF(ISNULL(LKP_TransactionCodeID),-1,LKP_TransactionCodeID)\n\tIFF(LKP_TransactionCodeID IS NULL, - 1, LKP_TransactionCodeID) AS o_TransactionCodeID,\n\tLKP_Sup_Claim_Transaction_Category.sup_claim_trans_catetory_id AS LKP_sup_claim_trans_catetory_id,\n\t-- *INF*: IIF(ISNULL(LKP_sup_claim_trans_catetory_id),-1,LKP_sup_claim_trans_catetory_id)\n\tIFF(LKP_sup_claim_trans_catetory_id IS NULL, - 1, LKP_sup_claim_trans_catetory_id) AS o_SupTransactionCategoryCodeID,\n\tLKP_Sup_CauseOfLoss.CauseOfLossId AS LKP_CauseOfLossId,\n\t-- *INF*: IIF(ISNULL(LKP_CauseOfLossId),-1,LKP_CauseOfLossId)\n\tIFF(LKP_CauseOfLossId IS NULL, - 1, LKP_CauseOfLossId) AS o_CauseOfLossID,\n\t-1 AS o_PMSTransactionCodeID\n\tFROM EXP_Source\n\tLEFT JOIN LKP_Claim_Transaction\n\tON LKP_Claim_Transaction.claimant_cov_det_ak_id = LKP_Claimant_Coverage_Detail_AK_ID.claimant_cov_det_ak_id AND LKP_Claim_Transaction.cause_of_loss = EXP_Source.OP_CAUSE_LOSS AND LKP_Claim_Transaction.reserve_ctgry = EXP_Source.OP_RESERVE_CAT AND LKP_Claim_Transaction.financial_type_code = EXP_Source.CTX_FIN_TYPE_CD AND LKP_Claim_Transaction.trans_code = EXP_Source.OP_CTX_TRS_TYPE_CD AND LKP_Claim_Transaction.trans_date = EXP_Source.CTX_SORT_TS AND LKP_Claim_Transaction.trans_ctgry_code = EXP_Source.OP_CTX_TRS_CAT_CD AND LKP_Claim_Transaction.draft_num = EXP_Source.OP_CTX_DRAFT_NBR\n\tLEFT JOIN LKP_Claimant_Coverage_Detail_AK_ID\n\tON LKP_Claimant_Coverage_Detail_AK_ID.claim_party_occurrence_ak_id = EXP_Source.claim_party_occurrence_ak_id AND LKP_Claimant_Coverage_Detail_AK_ID.s3p_object_type_code = EXP_Source.CTX_OBJECT_TYPE_CD AND LKP_Claimant_Coverage_Detail_AK_ID.s3p_object_seq_num = EXP_Source.CTX_OBJECT_SEQ_NBR AND LKP_Claimant_Coverage_Detail_AK_ID.major_peril_code = EXP_Source.CTX_COV_TYPE_CD AND LKP_Claimant_Coverage_Detail_AK_ID.s3p_pkg_seq_num = EXP_Source.CTX_COV_SEQ_NBR AND LKP_Claimant_Coverage_Detail_AK_ID.cause_of_loss = EXP_Source.OP_CAUSE_LOSS AND LKP_Claimant_Coverage_Detail_AK_ID.reserve_ctgry = EXP_Source.OP_RESERVE_CAT\n\tLEFT JOIN LKP_Sup_CauseOfLoss\n\tON LKP_Sup_CauseOfLoss.LineOfBusiness = EXP_Source.pms_pol_lob_code AND LKP_Sup_CauseOfLoss.MajorPeril = LKP_Claimant_Coverage_Detail_AK_ID.major_peril_code AND LKP_Sup_CauseOfLoss.CauseOfLoss = EXP_Source.OP_CAUSE_LOSS\n\tLEFT JOIN LKP_Sup_Claim_Financial_Code\n\tON LKP_Sup_Claim_Financial_Code.financial_code = EXP_Source.CTX_FIN_TYPE_CD\n\tLEFT JOIN LKP_Sup_Claim_Reserve_Category\n\tON LKP_Sup_Claim_Reserve_Category.reserve_ctgry_code = EXP_Source.OP_RESERVE_CAT\n\tLEFT JOIN LKP_Sup_Claim_Transaction_Category\n\tON LKP_Sup_Claim_Transaction_Category.trans_ctgry_code = EXP_Source.OP_CTX_TRS_CAT_CD\n\tLEFT JOIN LKP_SUP_CLAIM_TRANSACTION_CODE LKP_SUP_CLAIM_TRANSACTION_CODE_LTRIM_RTRIM_TO_CHAR_CTX_ORIG_TRS_TYPE_CD\n\tON LKP_SUP_CLAIM_TRANSACTION_CODE_LTRIM_RTRIM_TO_CHAR_CTX_ORIG_TRS_TYPE_CD.trans_code = LTRIM(RTRIM(TO_CHAR(CTX_ORIG_TRS_TYPE_CD)))\n\n\tLEFT JOIN LKP_SUP_CLAIM_TRANSACTION_CODE LKP_SUP_CLAIM_TRANSACTION_CODE_out_CTX_TRS_TYPE_CD\n\tON LKP_SUP_CLAIM_TRANSACTION_CODE_out_CTX_TRS_TYPE_CD.trans_code = out_CTX_TRS_TYPE_CD\n\n),\nRTR_Claim_Transaction AS (\n\tSELECT\n\tclaim_trans_id,\n\to_claimant_cov_det_ak_id AS claimant_cov_det_ak_id,\n\tOP_CAUSE_LOSS,\n\tOP_RESERVE_CAT,\n\tTYPE_DISABILITY_OP,\n\tOP_OFFSET_ONSET_IND,\n\tCTX_FIN_TYPE_CD,\n\tCTX_TRS_TYPE_CD,\n\tCTX_SORT_TS,\n\tCTX_UPD_TS,\n\tCTX_BASE_TRS_TYPE,\n\tCTX_TRS_CAT_CD,\n\tCTX_TRS_AMT,\n\tCTX_TRS_HST_AMT,\n\tCTX_TRANS_REASON,\n\tCTX_DRAFT_NBR,\n\tCTX_SINGLE_CHK_IND,\n\tCTX_OFS_REI_IND,\n\tCTX_ENTRY_OPR_ID,\n\tCrrnt_SnapSht_Flag,\n\tAUDIT_ID,\n\tSOURCE_SYSTEM_ID,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date,\n\tSAR_ID_Out AS OP_SAR_ID,\n\tOP_PMS_LOSS_TRANS_CODE,\n\tOP_NULL_PMS_DATES,\n\tCTX_ORIG_TRS_TYPE_CD,\n\tCLAIM_TRANSACTION_ID,\n\treprocess_date,\n\tclaim_pay_ak_id,\n\terr_flag,\n\ttax_id_out AS tax_id,\n\tclaim_master_1099_list_ak_id_out AS claim_master_1099_list_ak_id,\n\tCTX_CREATE_TS,\n\tPMS_Trans_Code,\n\ttrans_Offset_Onset_Ind,\n\to_SupReserveCategoryCodeID AS SupReserveCategoryCodeID,\n\to_FinancialTypeCodeID AS FinancialTypeCodeID,\n\to_S3PTransactionCodeID AS S3PTransactionCodeID,\n\to_TransactionCodeID AS TransactionCodeID,\n\to_SupTransactionCategoryCodeID AS SupTransactionCategoryCodeID,\n\to_CauseOfLossID AS CauseOfLossID,\n\to_PMSTransactionCodeID AS PMSTransactionCodeID\n\tFROM EXP_Values_Eval\n),\nRTR_Claim_Transaction_CLAIM_TXN_UPDATE AS (SELECT * FROM RTR_Claim_Transaction WHERE NOT ISNULL(claim_trans_id)),\nRTR_Claim_Transaction_DEFAULT1 AS (SELECT * FROM RTR_Claim_Transaction WHERE NOT ( (NOT ISNULL(claim_trans_id)) )),\nSEQ_Claim_Transaction AS (\n\tCREATE SEQUENCE SEQ_Claim_Transaction\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaim_transaction_insert AS (\n\tINSERT INTO claim_transaction\n\t(claim_trans_ak_id, claimant_cov_det_ak_id, claim_pay_ak_id, cause_of_loss, reserve_ctgry, type_disability, sar_id, offset_onset_ind, financial_type_code, s3p_trans_code, pms_trans_code, trans_code, trans_date, s3p_updated_date, s3p_to_pms_trans_date, pms_acct_entered_date, trans_base_type_code, trans_ctgry_code, trans_amt, trans_hist_amt, trans_rsn, draft_num, single_check_ind, offset_reissue_ind, reprocess_date, trans_entry_oper_id, wc_stage_pk_id, err_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, tax_id, claim_master_1099_list_ak_id, trans_offset_onset_ind, s3p_created_date, CauseOfLossID, SupReserveCategoryCodeID, FinancialTypeCodeID, S3PTransactionCodeID, PMSTransactionCodeID, TransactionCodeID, SupTransactionCategoryCodeID)\n\tSELECT \n\tSEQ_Claim_Transaction.NEXTVAL AS CLAIM_TRANS_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tCLAIM_PAY_AK_ID, \n\tOP_CAUSE_LOSS AS CAUSE_OF_LOSS, \n\tOP_RESERVE_CAT AS RESERVE_CTGRY, \n\tTYPE_DISABILITY_OP AS TYPE_DISABILITY, \n\tOP_SAR_ID AS SAR_ID, \n\tOP_OFFSET_ONSET_IND AS OFFSET_ONSET_IND, \n\tCTX_FIN_TYPE_CD AS FINANCIAL_TYPE_CODE, \n\tCTX_ORIG_TRS_TYPE_CD AS S3P_TRANS_CODE, \n\tPMS_Trans_Code AS PMS_TRANS_CODE, \n\tCTX_TRS_TYPE_CD AS TRANS_CODE, \n\tCTX_SORT_TS AS TRANS_DATE, \n\tCTX_UPD_TS AS S3P_UPDATED_DATE, \n\tOP_NULL_PMS_DATES AS S3P_TO_PMS_TRANS_DATE, \n\tOP_NULL_PMS_DATES AS PMS_ACCT_ENTERED_DATE, \n\tCTX_BASE_TRS_TYPE AS TRANS_BASE_TYPE_CODE, \n\tCTX_TRS_CAT_CD AS TRANS_CTGRY_CODE, \n\tCTX_TRS_AMT AS TRANS_AMT, \n\tCTX_TRS_HST_AMT AS TRANS_HIST_AMT, \n\tCTX_TRANS_REASON AS TRANS_RSN, \n\tCTX_DRAFT_NBR AS DRAFT_NUM, \n\tCTX_SINGLE_CHK_IND AS SINGLE_CHECK_IND, \n\tCTX_OFS_REI_IND AS OFFSET_REISSUE_IND, \n\tREPROCESS_DATE, \n\tCTX_ENTRY_OPR_ID AS TRANS_ENTRY_OPER_ID, \n\tCLAIM_TRANSACTION_ID AS WC_STAGE_PK_ID, \n\tERR_FLAG, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tTAX_ID, \n\tCLAIM_MASTER_1099_LIST_AK_ID, \n\ttrans_Offset_Onset_Ind AS TRANS_OFFSET_ONSET_IND, \n\tCTX_CREATE_TS AS S3P_CREATED_DATE, \n\tCAUSEOFLOSSID, \n\tSUPRESERVECATEGORYCODEID, \n\tFINANCIALTYPECODEID, \n\tS3PTRANSACTIONCODEID, \n\tPMSTRANSACTIONCODEID, \n\tTRANSACTIONCODEID, \n\tSUPTRANSACTIONCATEGORYCODEID\n\tFROM RTR_Claim_Transaction_DEFAULT1\n),\nUPD_Claim_Transaction AS (\n\tSELECT\n\tclaim_trans_id, \n\tTYPE_DISABILITY_OP AS TYPE_DISABILITY_OP1, \n\tOP_OFFSET_ONSET_IND AS OP_OFFSET_ONSET_IND1, \n\tCTX_UPD_TS AS CTX_UPD_TS1, \n\tCTX_BASE_TRS_TYPE AS CTX_BASE_TRS_TYPE1, \n\tCTX_TRS_CAT_CD AS CTX_TRS_CAT_CD1, \n\tCTX_TRS_AMT AS CTX_TRS_AMT1, \n\tCTX_TRS_HST_AMT AS CTX_TRS_HST_AMT1, \n\tCTX_TRANS_REASON AS CTX_TRANS_REASON1, \n\tCTX_DRAFT_NBR AS CTX_DRAFT_NBR1, \n\tCTX_SINGLE_CHK_IND AS CTX_SINGLE_CHK_IND1, \n\tCTX_OFS_REI_IND AS CTX_OFS_REI_IND1, \n\tCTX_ENTRY_OPR_ID AS CTX_ENTRY_OPR_ID1, \n\tAUDIT_ID AS AUDIT_ID1, \n\tmodified_date AS modified_date1, \n\tOP_SAR_ID AS OP_SAR_ID1, \n\tCLAIM_TRANSACTION_ID AS CLAIM_TRANSACTION_ID1, \n\tCTX_TRS_TYPE_CD AS CTX_TRS_TYPE_CD1, \n\tCTX_ORIG_TRS_TYPE_CD AS CTX_ORIG_TRS_TYPE_CD1, \n\tcreated_date AS created_date1, \n\ttax_id AS tax_id1, \n\tclaim_master_1099_list_ak_id AS claim_master_1099_list_ak_id1, \n\tPMS_Trans_Code AS PMS_Trans_Code1, \n\tSupReserveCategoryCodeID AS SupReserveCategoryCodeID1, \n\tFinancialTypeCodeID AS FinancialTypeCodeID1, \n\tS3PTransactionCodeID AS S3PTransactionCodeID1, \n\tTransactionCodeID AS TransactionCodeID1, \n\tSupTransactionCategoryCodeID AS SupTransactionCategoryCodeID1, \n\tCauseOfLossID AS CauseOfLossID1, \n\tPMSTransactionCodeID AS PMSTransactionCodeID1\n\tFROM RTR_Claim_Transaction_CLAIM_TXN_UPDATE\n),\nclaim_transaction_update AS (\n\tMERGE INTO claim_transaction AS T\n\tUSING UPD_Claim_Transaction AS S\n\tON T.claim_trans_id = S.claim_trans_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.type_disability = S.TYPE_DISABILITY_OP1, T.sar_id = S.OP_SAR_ID1, T.offset_onset_ind = S.OP_OFFSET_ONSET_IND1, T.s3p_trans_code = S.CTX_ORIG_TRS_TYPE_CD1, T.pms_trans_code = S.PMS_Trans_Code1, T.trans_code = S.CTX_TRS_TYPE_CD1, T.s3p_updated_date = S.CTX_UPD_TS1, T.trans_base_type_code = S.CTX_BASE_TRS_TYPE1, T.trans_ctgry_code = S.CTX_TRS_CAT_CD1, T.trans_rsn = S.CTX_TRANS_REASON1, T.single_check_ind = S.CTX_SINGLE_CHK_IND1, T.offset_reissue_ind = S.CTX_OFS_REI_IND1, T.trans_entry_oper_id = S.CTX_ENTRY_OPR_ID1, T.audit_id = S.AUDIT_ID1, T.modified_date = S.modified_date1, T.tax_id = S.tax_id1, T.claim_master_1099_list_ak_id = S.claim_master_1099_list_ak_id1, T.CauseOfLossID = S.CauseOfLossID1, T.SupReserveCategoryCodeID = S.SupReserveCategoryCodeID1, T.FinancialTypeCodeID = S.FinancialTypeCodeID1, T.S3PTransactionCodeID = S.S3PTransactionCodeID1, T.PMSTransactionCodeID = S.PMSTransactionCodeID1, T.TransactionCodeID = S.TransactionCodeID1, T.SupTransactionCategoryCodeID = S.SupTransactionCategoryCodeID1\n),\nSQ_claim_transaction_92 AS (\n\tSELECT CT.claim_trans_id,\r\n\t       CT.claimant_cov_det_ak_id,\r\n\t       CT.cause_of_loss,\r\n\t       CT.reserve_ctgry,\r\n\t       CT.type_disability,\r\n\t       CT.s3p_trans_code,\r\n\t       CT.pms_trans_code,\r\n\t       CT.trans_code\r\n\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_transaction CT\r\n\tWHERE  CT.financial_type_code = 'D'\r\n\t       AND CT.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t       AND CT.s3p_trans_code = '92'\n),\nEXP_Default_1 AS (\n\tSELECT\n\tclaim_trans_id,\n\tclaimant_cov_det_ak_id,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttype_disability,\n\ts3p_trans_code,\n\tpms_trans_code,\n\ttrans_code\n\tFROM SQ_claim_transaction_92\n),\nLKP_Claim_Transaction_EXD_66 AS (\n\tSELECT\n\tclaim_trans_id,\n\tclaim_trans_ak_id,\n\tclaimant_cov_det_ak_id,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttype_disability\n\tFROM (\n\t\tSELECT \r\n\t\t       CT1.claim_trans_id         AS claim_trans_id,\r\n\t\t       CT1.claim_trans_ak_id      AS claim_trans_ak_id,\r\n\t\t       CT1.claimant_cov_det_ak_id AS claimant_cov_det_ak_id,\r\n\t\t       RTRIM(CT1.cause_of_loss)          AS cause_of_loss,\r\n\t\t       RTRIM(CT1.reserve_ctgry)          AS reserve_ctgry,\r\n\t\t       RTRIM(CT1.type_disability)        AS type_disability \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_transaction CT1          \r\n\t\tWHERE CT1.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tAND CT1.pms_trans_code  = '66'\r\n\t\tAND CT1.financial_type_code = 'D'\r\n\t\tAND \r\n\t\t       EXISTS \r\n\t\t                      ( SELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_transaction CT2\r\n\t\t                        WHERE CT2.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t                        AND CT2.pms_trans_code in ('23','22','42')\r\n\t\t                        AND CT2.financial_type_code = 'D'\r\n\t\t                        AND CT2.claimant_cov_det_ak_id = CT1.claimant_cov_det_ak_id)\r\n\t\t\r\n\t\t---- Above rules are mimicing the PMS Logic from Program PMS723.PRD1.SOURCE(WDD0900), paragraph 0217, where it coverts 90 trans code to 92\r\n\t\t---- based on existence of some transcations 23,22,42,66 for Coverage of that claim.\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,cause_of_loss,reserve_ctgry,type_disability ORDER BY claim_trans_id DESC) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tEXP_Default_1.claim_trans_id,\n\tLKP_Claim_Transaction_EXD_66.claim_trans_id AS LKP_claim_trans_id,\n\t-- *INF*: IIF(NOT ISNULL(LKP_claim_trans_id),'92','90')\r\n\t-- \r\n\t-- ---- From the lookup if we get a matching condition like for the combination of Cov_det_ak_id,cause_of_loss,reserve_ctgry there is 92 and 66 then we update the pms_trans_code of EXCEED transaction to 92 otherwise it will be 90\n\tIFF(NOT LKP_claim_trans_id IS NULL, '92', '90') AS New_PMS_trans_code_92,\n\tLKP_Claim_Transaction_EXD_66.claim_trans_ak_id\n\tFROM EXP_Default_1\n\tLEFT JOIN LKP_Claim_Transaction_EXD_66\n\tON LKP_Claim_Transaction_EXD_66.claimant_cov_det_ak_id = EXP_Default_1.claimant_cov_det_ak_id AND LKP_Claim_Transaction_EXD_66.cause_of_loss = EXP_Default_1.cause_of_loss AND LKP_Claim_Transaction_EXD_66.reserve_ctgry = EXP_Default_1.reserve_ctgry AND LKP_Claim_Transaction_EXD_66.type_disability = EXP_Default_1.type_disability\n),\nUPD_Claim_Transaction_EXD AS (\n\tSELECT\n\tclaim_trans_id, \n\tNew_PMS_trans_code_92\n\tFROM EXP_Values\n),\nclaim_transaction_UPD_92 AS (\n\tMERGE INTO claim_transaction AS T\n\tUSING UPD_Claim_Transaction_EXD AS S\n\tON T.claim_trans_id = S.claim_trans_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.pms_trans_code = S.New_PMS_trans_code_92\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}