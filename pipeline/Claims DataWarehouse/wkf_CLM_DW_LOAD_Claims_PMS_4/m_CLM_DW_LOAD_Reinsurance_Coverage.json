{
    "name": "m_CLM_DW_LOAD_Reinsurance_Coverage",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Reinsurance_Coverage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_pifmstr_PIF_4578_stage AS (\n\tSELECT DISTINCT A.pif_symbol, A.pif_policy_number, A.pif_module, A.loss_reins_co_no\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_4578_stage A\r\n\tWHERE loss_part= 8 \r\n\tAND LTRIM(RTRIM(logical_flag)) in ('0','-1')\n),\nEXP_Default AS (\n\tSELECT\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpif_symbol  ||  pif_policy_number  || pif_module AS Pol_Key,\n\tloss_reins_co_no AS in_loss_reins_co_no,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_loss_reins_co_no)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_loss_reins_co_no) AS loss_reins_co_no\n\tFROM SQ_pifmstr_PIF_4578_stage\n),\nLKP_Policy_1 AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nLKP_SupReinsuranceMaster_1 AS (\n\tSELECT\n\tReinsuranceMasterReinsuranceType,\n\tReinsuranceMasterReinsuranceCompanyName,\n\tReinsuranceMasterReinsuranceCompanyNumber\n\tFROM (\n\t\tSELECT \n\t\t\tReinsuranceMasterReinsuranceType,\n\t\t\tReinsuranceMasterReinsuranceCompanyName,\n\t\t\tReinsuranceMasterReinsuranceCompanyNumber\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupReinsuranceMaster\n\t\tWHERE CurrentSnapshotFlag='1' and SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ReinsuranceMasterReinsuranceCompanyNumber ORDER BY ReinsuranceMasterReinsuranceType) = 1\n),\nEXP_Default_Values1 AS (\n\tSELECT\n\tLKP_Policy_1.pol_ak_id AS pol_key_ak_id,\n\tEXP_Default.loss_reins_co_no,\n\tLKP_SupReinsuranceMaster_1.ReinsuranceMasterReinsuranceType AS rcm_reins_type,\n\t-- *INF*: --IIF(ISNULL(rcm_reins_type),'N/A',rcm_reins_type)\r\n\t-- --change for April Release ,  we will not use supReinsuranceMaster table , just hardcode it as 'N/A'\r\n\t-- 'N/A'\n\t'N/A' AS rcm_reins_type_out,\n\t-1 AS SupReinsuranceMasterId_out,\n\tLKP_SupReinsuranceMaster_1.ReinsuranceMasterReinsuranceCompanyName AS rcm_company_name,\n\t-- *INF*: IIF(ISNULL(rcm_company_name),'N/A',rcm_company_name)\n\tIFF(rcm_company_name IS NULL, 'N/A', rcm_company_name) AS rcm_company_name_out\n\tFROM EXP_Default\n\tLEFT JOIN LKP_Policy_1\n\tON LKP_Policy_1.pol_key = EXP_Default.Pol_Key\n\tLEFT JOIN LKP_SupReinsuranceMaster_1\n\tON LKP_SupReinsuranceMaster_1.ReinsuranceMasterReinsuranceCompanyNumber = EXP_Default.loss_reins_co_no\n),\nLKP_reinsurance_coverage_tgt AS (\n\tSELECT\n\treins_cov_id,\n\treins_cov_ak_id,\n\treins_co_name,\n\treins_type,\n\tpol_ak_id,\n\treins_co_num\n\tFROM (\n\t\tSELECT RC.reins_cov_id    AS reins_cov_id,\r\n\t\t       RC.reins_cov_ak_id AS reins_cov_ak_id,\r\n\t\t       RC.reins_co_name   AS reins_co_name,\r\n\t\t       RTRIM(RC.reins_type)      AS reins_type,\r\n\t\t       RC.pol_ak_id       AS pol_ak_id,\r\n\t\t       RTRIM(RC.reins_co_num)    AS reins_co_num\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage RC\r\n\t\tWHERE  crrnt_snpsht_flag = 1 and reins_section_code = 'N/A' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,reins_co_num ORDER BY reins_cov_id DESC) = 1\n),\nEXP_Detect_Existing_Row AS (\n\tSELECT\n\tLKP_reinsurance_coverage_tgt.reins_cov_ak_id AS lkp_reins_cov_ak_id,\n\tLKP_reinsurance_coverage_tgt.reins_cov_id AS lkp_reins_cov_id,\n\tLKP_reinsurance_coverage_tgt.reins_co_name AS lkp_reins_co_name,\n\tLKP_reinsurance_coverage_tgt.reins_type AS lkp_reins_type,\n\tEXP_Default_Values1.pol_key_ak_id,\n\tEXP_Default_Values1.loss_reins_co_no,\n\t-- *INF*: iif(isnull(lkp_reins_cov_id),'NEW',\r\n\t-- \tiif (\r\n\t-- \tltrim(rtrim(lkp_reins_co_name)) <> ltrim(rtrim(rcm_company_name)) or\r\n\t-- \t(ltrim(rtrim(lkp_reins_type))  <> ltrim(rtrim(rcm_reins_type)))\r\n\t--   \t,'UPDATE'\r\n\t-- \t,'NOCHANGE'))\n\tIFF(lkp_reins_cov_id IS NULL, 'NEW', IFF(ltrim(rtrim(lkp_reins_co_name)) <> ltrim(rtrim(rcm_company_name)) OR ( ltrim(rtrim(lkp_reins_type)) <> ltrim(rtrim(rcm_reins_type)) ), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\tv_Changed_Flag AS Changed_Flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t-- *INF*: 1\r\n\t-- ---- Logical Flag of '1' is used to differentiate that this is from PIF_4578 Part 8\n\t1 AS logical_flag,\n\t'N/A' AS Default_NA,\n\t-1 AS Default_sup_id,\n\tloss_reins_co_no AS reins_co_num,\n\trcm_company_name AS reins_co_name,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS reins_eff_date,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS reins_exp_date,\n\tSYSDATE AS reins_enter_date,\n\t-- *INF*: IIF(ISNULL(rcm_reins_type),'N/A',TO_CHAR(rcm_reins_type))\n\tIFF(rcm_reins_type IS NULL, 'N/A', TO_CHAR(rcm_reins_type)) AS reins_type,\n\t0 AS reins_prcnt_prem_ceded,\n\t0 AS reins_prcnt_loss_ceded,\n\t0 AS reins_prcnt_facultative_commssn,\n\t0 AS reins_excess_amt,\n\t0 AS reins_occurrence_lmt,\n\t0 AS reins_agg_lmt,\n\t-1 AS sup_reins_company_name_id,\n\tEXP_Default_Values1.rcm_reins_type_out AS rcm_reins_type,\n\tEXP_Default_Values1.SupReinsuranceMasterId_out AS SupReinsuranceMasterId,\n\tEXP_Default_Values1.rcm_company_name_out AS rcm_company_name\n\tFROM EXP_Default_Values1\n\tLEFT JOIN LKP_reinsurance_coverage_tgt\n\tON LKP_reinsurance_coverage_tgt.pol_ak_id = EXP_Default_Values1.pol_key_ak_id AND LKP_reinsurance_coverage_tgt.reins_co_num = EXP_Default_Values1.loss_reins_co_no\n),\nFIL_Existing_Row AS (\n\tSELECT\n\tlkp_reins_cov_ak_id, \n\tChanged_Flag, \n\tpol_key_ak_id, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tlogical_flag, \n\tDefault_NA, \n\tDefault_sup_id, \n\treins_co_num, \n\treins_co_name, \n\treins_eff_date, \n\treins_exp_date, \n\treins_enter_date, \n\treins_type, \n\treins_prcnt_prem_ceded, \n\treins_prcnt_loss_ceded, \n\treins_prcnt_facultative_commssn, \n\treins_excess_amt, \n\treins_occurrence_lmt, \n\treins_agg_lmt, \n\tsup_reins_company_name_id, \n\tSupReinsuranceMasterId\n\tFROM EXP_Detect_Existing_Row\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_Reins_Cov_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Reins_Cov_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_AK_id AS (\n\tSELECT\n\tlkp_reins_cov_ak_id,\n\tChanged_Flag,\n\tSEQ_Reins_Cov_AK_ID.NEXTVAL,\n\t-- *INF*: IIF(Changed_Flag='NEW',\r\n\t-- NEXTVAL,\r\n\t-- lkp_reins_cov_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, lkp_reins_cov_ak_id) AS reins_cov_ak_id,\n\tpol_key_ak_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tlogical_flag,\n\tDefault_NA,\n\tDefault_sup_id,\n\treins_co_num,\n\treins_co_name,\n\treins_eff_date,\n\treins_exp_date,\n\treins_enter_date,\n\treins_type,\n\treins_prcnt_prem_ceded,\n\treins_prcnt_loss_ceded,\n\treins_prcnt_facultative_commssn,\n\treins_excess_amt,\n\treins_occurrence_lmt,\n\treins_agg_lmt,\n\tsup_reins_company_name_id,\n\tSupReinsuranceMasterId,\n\t'N/A' AS ReinsuranceMethod\n\tFROM FIL_Existing_Row\n),\nreinsurance_coverage_Part_8_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, logical_flag, reins_cov_ak_id, pol_ak_id, reins_ins_line, reins_loc_unit_num, reins_sub_loc_unit_num, reins_risk_unit_grp, reins_risk_unit_grp_seq_num, reins_risk_unit, reins_risk_unit_seq_num, reins_section_code, reins_co_num, reins_co_name, reins_eff_date, reins_exp_date, reins_enter_date, reins_type, reins_prcnt_prem_ceded, reins_prcnt_loss_ceded, reins_prcnt_facultative_commssn, reins_excess_amt, reins_occurrence_lmt, reins_agg_lmt, SupInsuranceLineId, SupRiskUnitId, SupRiskUnitGroupId, ReinsuranceMethod)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tLOGICAL_FLAG, \n\tREINS_COV_AK_ID, \n\tpol_key_ak_id AS POL_AK_ID, \n\tDefault_NA AS REINS_INS_LINE, \n\tDefault_NA AS REINS_LOC_UNIT_NUM, \n\tDefault_NA AS REINS_SUB_LOC_UNIT_NUM, \n\tDefault_NA AS REINS_RISK_UNIT_GRP, \n\tDefault_NA AS REINS_RISK_UNIT_GRP_SEQ_NUM, \n\tDefault_NA AS REINS_RISK_UNIT, \n\tDefault_NA AS REINS_RISK_UNIT_SEQ_NUM, \n\tDefault_NA AS REINS_SECTION_CODE, \n\tREINS_CO_NUM, \n\tREINS_CO_NAME, \n\tREINS_EFF_DATE, \n\tREINS_EXP_DATE, \n\tREINS_ENTER_DATE, \n\tREINS_TYPE, \n\tREINS_PRCNT_PREM_CEDED, \n\tREINS_PRCNT_LOSS_CEDED, \n\tREINS_PRCNT_FACULTATIVE_COMMSSN, \n\tREINS_EXCESS_AMT, \n\tREINS_OCCURRENCE_LMT, \n\tREINS_AGG_LMT, \n\tDefault_sup_id AS SUPINSURANCELINEID, \n\tDefault_sup_id AS SUPRISKUNITID, \n\tDefault_sup_id AS SUPRISKUNITGROUPID, \n\tREINSURANCEMETHOD\n\tFROM EXP_AK_id\n),\nSQ_reinsurance_coverage AS (\n\tSELECT \r\n\t\t A.reins_cov_id,\r\n\t       A.eff_from_date,\r\n\t       A.eff_to_date,\r\n\t       A.source_sys_id,\r\n\t       A.pol_ak_id,\r\n\t       A.reins_ins_line,\r\n\t       A.reins_loc_unit_num,\r\n\t       A.reins_sub_loc_unit_num,\r\n\t       A.reins_risk_unit_grp,\r\n\t       A.reins_risk_unit_grp_seq_num,\r\n\t       A.reins_risk_unit,\r\n\t       A.reins_risk_unit_seq_num,\r\n\t       A.reins_section_code,\r\n\t       A.reins_co_num,\r\n\t       A.reins_eff_date,\r\n\t       A.reins_enter_date\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t      AND a.reins_cov_ak_id = b.reins_cov_ak_id\r\n\t      AND a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.reins_cov_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.reins_cov_ak_id, a.eff_from_date desc\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\treins_cov_id,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\treins_co_num,\n\treins_eff_date,\n\treins_enter_date,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- pol_ak_id = v_PREV_ROW_pol_ak_id1 AND\r\n\t-- reins_ins_line = v_PREV_ROW_reins_ins_line1 AND\r\n\t-- reins_loc_unit_num = v_PREV_ROW_reins_loc_unit_num1 AND\r\n\t-- reins_sub_loc_unit_num = v_PREV_ROW_reins_sub_loc_unit_num1 AND\r\n\t-- reins_risk_unit_grp = v_PREV_ROW_reins_risk_unit_grp1 AND\r\n\t-- reins_risk_unit_grp_seq_num = v_PREV_ROW_reins_risk_unit_grp_seq_num1 AND\r\n\t-- reins_risk_unit = v_PREV_ROW_reins_risk_unit1 AND\r\n\t-- reins_risk_unit_seq_num = v_PREV_ROW_reins_risk_unit_seq_num1 AND\r\n\t-- reins_section_code = v_PREV_ROW_reins_section_code1 AND\r\n\t-- reins_co_num = v_PREV_ROW_reins_co_num1 AND\r\n\t-- reins_eff_date = v_PREV_ROW_reins_eff_date1 AND\r\n\t-- IIF(reins_section_code='N/A', 1=1, reins_enter_date = v_PREV_ROW_reins_enter_date1) AND\r\n\t-- source_sys_id = v_PREV_ROW_source_sys_id1\r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date1,'SS',-1)\r\n\t-- ,orig_eff_to_date)\n\tDECODE(TRUE,\n\tpol_ak_id = v_PREV_ROW_pol_ak_id1 AND reins_ins_line = v_PREV_ROW_reins_ins_line1 AND reins_loc_unit_num = v_PREV_ROW_reins_loc_unit_num1 AND reins_sub_loc_unit_num = v_PREV_ROW_reins_sub_loc_unit_num1 AND reins_risk_unit_grp = v_PREV_ROW_reins_risk_unit_grp1 AND reins_risk_unit_grp_seq_num = v_PREV_ROW_reins_risk_unit_grp_seq_num1 AND reins_risk_unit = v_PREV_ROW_reins_risk_unit1 AND reins_risk_unit_seq_num = v_PREV_ROW_reins_risk_unit_seq_num1 AND reins_section_code = v_PREV_ROW_reins_section_code1 AND reins_co_num = v_PREV_ROW_reins_co_num1 AND reins_eff_date = v_PREV_ROW_reins_eff_date1 AND IFF(reins_section_code = 'N/A', 1 = 1, reins_enter_date = v_PREV_ROW_reins_enter_date1) AND source_sys_id = v_PREV_ROW_source_sys_id1, ADD_TO_DATE(v_PREV_ROW_eff_from_date1, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tpol_ak_id AS v_PREV_ROW_pol_ak_id1,\n\treins_ins_line AS v_PREV_ROW_reins_ins_line1,\n\treins_loc_unit_num AS v_PREV_ROW_reins_loc_unit_num1,\n\treins_sub_loc_unit_num AS v_PREV_ROW_reins_sub_loc_unit_num1,\n\treins_risk_unit_grp AS v_PREV_ROW_reins_risk_unit_grp1,\n\treins_risk_unit_grp_seq_num AS v_PREV_ROW_reins_risk_unit_grp_seq_num1,\n\treins_risk_unit AS v_PREV_ROW_reins_risk_unit1,\n\treins_risk_unit_seq_num AS v_PREV_ROW_reins_risk_unit_seq_num1,\n\treins_section_code AS v_PREV_ROW_reins_section_code1,\n\treins_co_num AS v_PREV_ROW_reins_co_num1,\n\treins_eff_date AS v_PREV_ROW_reins_eff_date1,\n\treins_enter_date AS v_PREV_ROW_reins_enter_date1,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id1,\n\teff_from_date AS v_PREV_ROW_eff_from_date1,\n\t0 AS crrnt_snapshot_flag,\n\tsysdate AS modified_date\n\tFROM SQ_reinsurance_coverage\n),\nFIL_reinsurance_coverage AS (\n\tSELECT\n\treins_cov_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\treins_cov_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM FIL_reinsurance_coverage\n),\nreinsurance_coverage_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage AS T\n\tUSING UPD_Update_Target AS S\n\tON T.reins_cov_id = S.reins_cov_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246504"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905521"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604354"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:13:41"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:19:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "MERGED_SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}