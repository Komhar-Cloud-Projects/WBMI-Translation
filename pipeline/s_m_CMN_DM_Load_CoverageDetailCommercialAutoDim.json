{
    "name": "s_m_CMN_DM_Load_CoverageDetailCommercialAutoDim",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_DM_Load_CoverageDetailCommercialAutoDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CoverageDeductibleValue AS (\n\tSELECT\n\tCoverageDeductibleValue,\n\tPremiumTransactionAKId,\n\tCoverageDeductibleType\n\tFROM (\n\t\tSELECT CD.CoverageDeductibleValue as CoverageDeductibleValue, \r\n\t\tCDB.PremiumTransactionAKId as PremiumTransactionAKId, \r\n\t\tCD.CoverageDeductibleType as CoverageDeductibleType \r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductibleBridge CDB\r\n\t\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductible CD\r\n\t\tON CD.CoverageDeductibleId=CDB.CoverageDeductibleId\r\n\t\twhere '@{pipeline().parameters.SELECTION_START_TS}'<='01/01/1800 01:00:00' OR\r\n\t\texists (select 1 \r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT,\r\n\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\twhere CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID and \r\n\t\tPT.PremiumTransactionAKID=CDB.PremiumTransactionAKId\r\n\t\tand CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKId,CoverageDeductibleType ORDER BY CoverageDeductibleValue) = 1\n),\nLKP_CoverageLimitValue AS (\n\tSELECT\n\tCoverageLimitValue,\n\tPremiumTransactionAKId,\n\tCoverageLimitType\n\tFROM (\n\t\tSELECT CL.CoverageLimitValue as CoverageLimitValue, \r\n\t\tCLB.PremiumTransactionAKId as PremiumTransactionAKId, \r\n\t\tCL.CoverageLimitType as CoverageLimitType \r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB\r\n\t\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL\r\n\t\tON CL.CoverageLimitId=CLB.CoverageLimitId\r\n\t\twhere '@{pipeline().parameters.SELECTION_START_TS}'<='01/01/1800 01:00:00' OR\r\n\t\texists (select 1 \r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT,\r\n\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\twhere CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID and \r\n\t\tPT.PremiumTransactionAKID=CLB.PremiumTransactionAKId\r\n\t\tand CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t)\r\n\t\torder by CLB.PremiumTransactionAKId,CL.CoverageLimitType,CLB.CreatedDate desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKId,CoverageLimitType ORDER BY CoverageLimitValue) = 1\n),\nSQ_CoverageDetailCommercialAuto AS (\n\tselect CDD.CoverageDetailDimId AS CoverageDetailDimId,\r\n\tCDD.EffectiveDate AS EffectiveDate,\r\n\tCDD.ExpirationDate AS ExpirationDate,\r\n\tCDD.CoverageGuid AS CoverageGuid,\r\n\tCDCA.SourceSystemID AS SourceSystemID,\r\n\tCDCA.VehicleGroupCode AS VehicleType,\r\n\tCDCA.RadiusOfOperation AS RadiusOfOperation,\r\n\tCDCA.SecondaryVehicleType AS SecondaryVehicleType,\r\n\tRC.CoverageType AS CoverageType,\r\n\tCDCA.UsedInDumpingIndicator AS UsedInDumpingIndicator,\r\n\tPT.PremiumTransactionAKID,\r\n\tCDCA.VehicleYear,\r\n\tCDCA.StatedAmount,\r\n\tCDCA.CostNew,\r\n\tCDCA.VehicleDeleteDate,\r\n\tCDCA.CompositeRatedFlag,\r\n\tSC.MajorPerilCode,\r\n\tCDCA.VehicleTypeSize,\r\n\tCDCA.BusinessUseClass,\r\n\tCDCA.SecondaryClass,\r\n\tCDCA.FleetType,\r\n\tCDCA.SecondaryClassGroup,\r\n\tCDCA.VIN,\r\n\tCDCA.VehicleNumber,\r\n\tCDCA.CoordinationOfBenefits, \r\n\tCDCA.MedicalExpensesOption, \r\n\tCDCA.CoveredByWorkersCompensationFlag,\r\n\tCDCA.HistoricVehicleIndicator\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\tJOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\tON CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID\r\n\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CDCA\r\n\tON CDCA.PremiumTransactionID=CDD.EDWPremiumTransactionPKId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton PT.RatingCoverageAKId=RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton PT.StatisticalCoverageAKId=SC.StatisticalCoverageAKId and SC.CurrentSnapshotFlag=1\r\n\twhere CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND CDD.CoverageDetailDimId % 3 = 0\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\n\t\n\tUNION ALL\n\tselect CDD.CoverageDetailDimId AS CoverageDetailDimId,\r\n\tCDD.EffectiveDate AS EffectiveDate,\r\n\tCDD.ExpirationDate AS ExpirationDate,\r\n\tCDD.CoverageGuid AS CoverageGuid,\r\n\tCDCA.SourceSystemID AS SourceSystemID,\r\n\tCDCA.VehicleGroupCode AS VehicleType,\r\n\tCDCA.RadiusOfOperation AS RadiusOfOperation,\r\n\tCDCA.SecondaryVehicleType AS SecondaryVehicleType,\r\n\tRC.CoverageType AS CoverageType,\r\n\tCDCA.UsedInDumpingIndicator AS UsedInDumpingIndicator,\r\n\tPT.PremiumTransactionAKID,\r\n\tCDCA.VehicleYear,\r\n\tCDCA.StatedAmount,\r\n\tCDCA.CostNew,\r\n\tCDCA.VehicleDeleteDate,\r\n\tCDCA.CompositeRatedFlag,\r\n\tSC.MajorPerilCode,\r\n\tCDCA.VehicleTypeSize,\r\n\tCDCA.BusinessUseClass,\r\n\tCDCA.SecondaryClass,\r\n\tCDCA.FleetType,\r\n\tCDCA.SecondaryClassGroup,\r\n\tCDCA.VIN,\r\n\tCDCA.VehicleNumber,\r\n\tCDCA.CoordinationOfBenefits, \r\n\tCDCA.MedicalExpensesOption, \r\n\tCDCA.CoveredByWorkersCompensationFlag,\r\n\tCDCA.HistoricVehicleIndicator\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\tJOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\tON CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID\r\n\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CDCA\r\n\tON CDCA.PremiumTransactionID=CDD.EDWPremiumTransactionPKId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton PT.RatingCoverageAKId=RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton PT.StatisticalCoverageAKId=SC.StatisticalCoverageAKId and SC.CurrentSnapshotFlag=1\r\n\twhere CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND CDD.CoverageDetailDimId % 3 = 1\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\n\t\n\tUNION ALL\n\tselect CDD.CoverageDetailDimId AS CoverageDetailDimId,\r\n\tCDD.EffectiveDate AS EffectiveDate,\r\n\tCDD.ExpirationDate AS ExpirationDate,\r\n\tCDD.CoverageGuid AS CoverageGuid,\r\n\tCDCA.SourceSystemID AS SourceSystemID,\r\n\tCDCA.VehicleGroupCode AS VehicleType,\r\n\tCDCA.RadiusOfOperation AS RadiusOfOperation,\r\n\tCDCA.SecondaryVehicleType AS SecondaryVehicleType,\r\n\tRC.CoverageType AS CoverageType,\r\n\tCDCA.UsedInDumpingIndicator AS UsedInDumpingIndicator,\r\n\tPT.PremiumTransactionAKID,\r\n\tCDCA.VehicleYear,\r\n\tCDCA.StatedAmount,\r\n\tCDCA.CostNew,\r\n\tCDCA.VehicleDeleteDate,\r\n\tCDCA.CompositeRatedFlag,\r\n\tSC.MajorPerilCode,\r\n\tCDCA.VehicleTypeSize,\r\n\tCDCA.BusinessUseClass,\r\n\tCDCA.SecondaryClass,\r\n\tCDCA.FleetType,\r\n\tCDCA.SecondaryClassGroup,\r\n\tCDCA.VIN,\r\n\tCDCA.VehicleNumber,\r\n\tCDCA.CoordinationOfBenefits, \r\n\tCDCA.MedicalExpensesOption, \r\n\tCDCA.CoveredByWorkersCompensationFlag,\r\n\tCDCA.HistoricVehicleIndicator\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\tJOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\tON CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID\r\n\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CDCA\r\n\tON CDCA.PremiumTransactionID=CDD.EDWPremiumTransactionPKId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton PT.RatingCoverageAKId=RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton PT.StatisticalCoverageAKId=SC.StatisticalCoverageAKId and SC.CurrentSnapshotFlag=1\r\n\twhere CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND CDD.CoverageDetailDimId % 3 = 2\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\n),\nEXP_MetaData AS (\n\tSELECT\n\tCoverageDetailDimId AS i_CoverageDetailDimId,\n\tEffectiveDate AS i_EffectiveDate,\n\tExpirationDate AS i_ExpirationDate,\n\tCoverageGuid AS i_CoverageGuid,\n\tSourceSystemID AS i_SourceSystemID,\n\tVehicleType AS i_VehicleType,\n\tRadiusOfOperation AS i_RadiusOfOperation,\n\tSecondaryVehicleType AS i_SecondaryVehicleType,\n\tCoverageType AS i_CoverageType,\n\tUsedInDumpingIndicator AS i_UsedInDumpingIndicator,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tMajorPerilCode,\n\tVehicleTypeSize AS i_VehicleTypeSize,\n\tCompositeRatedFlag AS i_CompositeRatedFlag,\n\tBusinessUseClass AS i_BusinessUseClass,\n\tSecondaryClass AS i_SecondaryClass,\n\tFleetType AS i_FleetType,\n\tSecondaryClassGroup AS i_SecondaryClassGroup,\n\tVIN AS i_VIN,\n\tVehicleNumber AS i_VehicleNumber,\n\tCoordinationOfBenefits AS i_CoordinationOfBenefits,\n\tMedicalExpensesOption AS i_MedicalExpensesOption,\n\tCoveredByWorkersCompensationFlag AS i_CoveredByWorkersCompensationFlag,\n\tHistoricVehicleIndicator AS i_HistoricVehicleIndicator,\n\t-- *INF*: IIF(i_CompositeRatedFlag='T',1,0)\n\tIFF(i_CompositeRatedFlag = 'T', 1, 0) AS o_CompositeRatedFlag,\n\ti_CoverageDetailDimId AS o_CoverageDetailDimId,\n\ti_EffectiveDate AS o_EffectiveDate,\n\ti_ExpirationDate AS o_ExpirationDate,\n\t-- *INF*: RTRIM(LTRIM(i_CoverageGuid))\n\tRTRIM(LTRIM(i_CoverageGuid)) AS o_CoverageGuid,\n\t-- *INF*: RTRIM(LTRIM(i_VehicleType))\n\tRTRIM(LTRIM(i_VehicleType)) AS o_VehicleType,\n\t-- *INF*: RTRIM(LTRIM(i_RadiusOfOperation))\n\tRTRIM(LTRIM(i_RadiusOfOperation)) AS o_RadiusOfOperation,\n\t-- *INF*: RTRIM(LTRIM(i_SecondaryVehicleType))\n\tRTRIM(LTRIM(i_SecondaryVehicleType)) AS o_SecondaryVehicleType,\n\t-- *INF*: RTRIM(LTRIM(i_UsedInDumpingIndicator))\n\tRTRIM(LTRIM(i_UsedInDumpingIndicator)) AS o_UsedInDumpingIndicator,\n\t-- *INF*: RTRIM(LTRIM(i_SourceSystemID))\n\tRTRIM(LTRIM(i_SourceSystemID)) AS o_SourceSystemID,\n\t-- *INF*: RTRIM(LTRIM(i_CoverageType))\n\tRTRIM(LTRIM(i_CoverageType)) AS o_CoverageType,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionAKId,\n\t-- *INF*: iif(isnull(i_VehicleTypeSize) or length(i_VehicleTypeSize)=0,'N/A',i_VehicleTypeSize)\n\tIFF(i_VehicleTypeSize IS NULL OR length(i_VehicleTypeSize) = 0, 'N/A', i_VehicleTypeSize) AS o_VehicleTypeSize,\n\t-- *INF*: iif(isnull(i_BusinessUseClass) or length(i_BusinessUseClass)=0,'N/A',i_BusinessUseClass)\n\tIFF(i_BusinessUseClass IS NULL OR length(i_BusinessUseClass) = 0, 'N/A', i_BusinessUseClass) AS o_BusinessUseClass,\n\t-- *INF*: iif(isnull(i_SecondaryClass) or length(i_SecondaryClass)=0,'N/A',i_SecondaryClass)\n\tIFF(i_SecondaryClass IS NULL OR length(i_SecondaryClass) = 0, 'N/A', i_SecondaryClass) AS o_SecondaryClass,\n\t-- *INF*: iif(isnull(i_FleetType) or length(i_FleetType)=0,'N/A',i_FleetType)\n\tIFF(i_FleetType IS NULL OR length(i_FleetType) = 0, 'N/A', i_FleetType) AS o_FleetType,\n\t-- *INF*: iif(isnull(i_SecondaryClassGroup) or length(i_SecondaryClassGroup)=0,'N/A',i_SecondaryClassGroup)\n\tIFF(i_SecondaryClassGroup IS NULL OR length(i_SecondaryClassGroup) = 0, 'N/A', i_SecondaryClassGroup) AS o_SecondaryClassGroup,\n\ti_VIN AS o_VIN,\n\ti_VehicleNumber AS o_VehicleNumber,\n\t-- *INF*: RTRIM(LTRIM(i_CoordinationOfBenefits))\n\tRTRIM(LTRIM(i_CoordinationOfBenefits)) AS o_CoordinationOfBenefits,\n\t-- *INF*: RTRIM(LTRIM(i_MedicalExpensesOption))\n\tRTRIM(LTRIM(i_MedicalExpensesOption)) AS o_MedicalExpensesOption,\n\t-- *INF*: IIF(i_CoveredByWorkersCompensationFlag = 'T',1,0)\n\tIFF(i_CoveredByWorkersCompensationFlag = 'T', 1, 0) AS o_CoveredByWorkersCompensationFlag,\n\t-- *INF*: IIF(ISNULL(i_HistoricVehicleIndicator),0,IIF(i_HistoricVehicleIndicator= 'T',1,0))\n\tIFF(i_HistoricVehicleIndicator IS NULL, 0, IFF(i_HistoricVehicleIndicator = 'T', 1, 0)) AS o_HistoricVehicleIndicator\n\tFROM SQ_CoverageDetailCommercialAuto\n),\nEXP_Business_Logic AS (\n\tSELECT\n\to_CoverageDetailDimId AS CoverageDetailDimId,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_CoverageGuid AS CoverageGuid,\n\to_VehicleType AS VehicleType,\n\to_RadiusOfOperation AS RadiusOfOperation,\n\to_SecondaryVehicleType AS SecondaryVehicleType,\n\to_SourceSystemID AS i_SourceSystemID,\n\to_CoverageType AS i_CoverageType,\n\to_PremiumTransactionAKId AS i_PremiumTransactionAKId,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'CombinedSingleLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_CombinedSingleLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_CombinedSingleLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'MedicalPaymentLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalPaymentLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_MedicalPaymentLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'MedicalLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_MedicalLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'UninsuredMotoristSingleLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UninsuredMotoristSingleLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_UninsuredMotoristSingleLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'UnderinsuredMotoristSingleLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UnderinsuredMotoristSingleLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_UnderinsuredMotoristSingleLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'ValueEstimate')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_ValueEstimate.CoverageLimitValue AS v_raw_CoverageLimitValue_ValueEstimate,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'Value')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_Value.CoverageLimitValue AS v_raw_CoverageLimitValue_Value,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_PersonalInjuryProtectionLimit,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionLimitWithStacking')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithStacking.CoverageLimitValue AS v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionLimitWithoutStacking')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithoutStacking.CoverageLimitValue AS v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionBasicLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionBasicLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\n\t-- *INF*: :LKP.LKP_COVERAGELIMITVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionExcessLimit')\n\tLKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionExcessLimit.CoverageLimitValue AS v_raw_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'ComprehensiveDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_ComprehensiveDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'Standard')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Standard.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_Standard,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'GlassBuyBack')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_GlassBuyBack.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_GlassBuyBack,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'CollisionDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CollisionDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_CollisionDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'Limited')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Limited.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_Limited,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'PropertyDamage')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PropertyDamage.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_PropertyDamage,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'CSL')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CSL.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_CSL,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'PersonalInjuryProtectionDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_PersonalInjuryProtectionDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'ManagedCareDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ManagedCareDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValue_ManagedCareDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'ComprehensiveFullGlassCoverageDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveFullGlassCoverageDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValuee_ComprehensiveFullGlassCoverageDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'LimitedCollisionDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_LimitedCollisionDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValuee_LimitedCollisionDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'BroadenedCollisionDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_BroadenedCollisionDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValuee_BroadenedCollisionDeductible,\n\t-- *INF*: :LKP.LKP_COVERAGEDEDUCTIBLEVALUE(i_PremiumTransactionAKId, 'SingleLimitDeductible')\n\tLKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_SingleLimitDeductible.CoverageDeductibleValue AS v_raw_CoverageDeductibleValuee_SingleLimitDeductible,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_CombinedSingleLimit), 'N/A', v_raw_CoverageLimitValue_CombinedSingleLimit)\n\tIFF(v_raw_CoverageLimitValue_CombinedSingleLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_CombinedSingleLimit) AS v_CoverageLimitValue_CombinedSingleLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_MedicalPaymentLimit), 'N/A', v_raw_CoverageLimitValue_MedicalPaymentLimit)\n\tIFF(v_raw_CoverageLimitValue_MedicalPaymentLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_MedicalPaymentLimit) AS v_CoverageLimitValue_MedicalPaymentLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_MedicalLimit), 'N/A', v_raw_CoverageLimitValue_MedicalLimit)\n\tIFF(v_raw_CoverageLimitValue_MedicalLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_MedicalLimit) AS v_CoverageLimitValue_MedicalLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_UninsuredMotoristSingleLimit), 'N/A', v_raw_CoverageLimitValue_UninsuredMotoristSingleLimit)\n\tIFF(v_raw_CoverageLimitValue_UninsuredMotoristSingleLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_UninsuredMotoristSingleLimit) AS v_CoverageLimitValue_UninsuredMotoristSingleLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_UnderinsuredMotoristSingleLimit), 'N/A', v_raw_CoverageLimitValue_UnderinsuredMotoristSingleLimit)\n\tIFF(v_raw_CoverageLimitValue_UnderinsuredMotoristSingleLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_UnderinsuredMotoristSingleLimit) AS v_CoverageLimitValue_UnderinsuredMotoristSingleLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_ValueEstimate), 'N/A', v_raw_CoverageLimitValue_ValueEstimate)\n\tIFF(v_raw_CoverageLimitValue_ValueEstimate IS NULL, 'N/A', v_raw_CoverageLimitValue_ValueEstimate) AS v_CoverageLimitValue_ValueEstimate,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_Value), 'N/A', v_raw_CoverageLimitValue_Value)\n\tIFF(v_raw_CoverageLimitValue_Value IS NULL, 'N/A', v_raw_CoverageLimitValue_Value) AS v_CoverageLimitValue_Value,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimit), 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimit)\n\tIFF(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimit IS NULL, 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimit) AS v_CoverageLimitValue_PersonalInjuryProtectionLimit,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking), 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking)\n\tIFF(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking IS NULL, 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking) AS v_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking), 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking)\n\tIFF(v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking IS NULL, 'N/A', v_raw_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking) AS v_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_PersonaInjuryProtectionBasicLimt), 'N/A', v_raw_CoverageLimitValue_PersonaInjuryProtectionBasicLimt)\n\tIFF(v_raw_CoverageLimitValue_PersonaInjuryProtectionBasicLimt IS NULL, 'N/A', v_raw_CoverageLimitValue_PersonaInjuryProtectionBasicLimt) AS v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageLimitValue_PersonaInjuryProtectionExcessLimt), 'N/A', v_raw_CoverageLimitValue_PersonaInjuryProtectionExcessLimt)\n\tIFF(v_raw_CoverageLimitValue_PersonaInjuryProtectionExcessLimt IS NULL, 'N/A', v_raw_CoverageLimitValue_PersonaInjuryProtectionExcessLimt) AS v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_ComprehensiveDeductible), 'N/A', v_raw_CoverageDeductibleValue_ComprehensiveDeductible)\n\tIFF(v_raw_CoverageDeductibleValue_ComprehensiveDeductible IS NULL, 'N/A', v_raw_CoverageDeductibleValue_ComprehensiveDeductible) AS v_CoverageDeductibleValue_ComprehensiveDeductible,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_Standard), 'N/A', v_raw_CoverageDeductibleValue_Standard)\n\tIFF(v_raw_CoverageDeductibleValue_Standard IS NULL, 'N/A', v_raw_CoverageDeductibleValue_Standard) AS v_CoverageDeductibleValue_Standard,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_GlassBuyBack), 'N/A', v_raw_CoverageDeductibleValue_GlassBuyBack)\n\tIFF(v_raw_CoverageDeductibleValue_GlassBuyBack IS NULL, 'N/A', v_raw_CoverageDeductibleValue_GlassBuyBack) AS v_CoverageDeductibleValue_GlassBuyBack,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_CollisionDeductible), 'N/A', v_raw_CoverageDeductibleValue_CollisionDeductible)\n\tIFF(v_raw_CoverageDeductibleValue_CollisionDeductible IS NULL, 'N/A', v_raw_CoverageDeductibleValue_CollisionDeductible) AS v_CoverageDeductibleValue_CollisionDeductible,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_Limited), 'N/A', v_raw_CoverageDeductibleValue_Limited)\n\tIFF(v_raw_CoverageDeductibleValue_Limited IS NULL, 'N/A', v_raw_CoverageDeductibleValue_Limited) AS v_CoverageDeductibleValue_Limited,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_PropertyDamage), 'N/A', v_raw_CoverageDeductibleValue_PropertyDamage)\n\tIFF(v_raw_CoverageDeductibleValue_PropertyDamage IS NULL, 'N/A', v_raw_CoverageDeductibleValue_PropertyDamage) AS v_CoverageDeductibleValue_PropertyDamage,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_CSL), 'N/A', v_raw_CoverageDeductibleValue_CSL)\n\tIFF(v_raw_CoverageDeductibleValue_CSL IS NULL, 'N/A', v_raw_CoverageDeductibleValue_CSL) AS v_CoverageDeductibleValue_CSL,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_PersonalInjuryProtectionDeductible), 'N/A', v_raw_CoverageDeductibleValue_PersonalInjuryProtectionDeductible)\n\tIFF(v_raw_CoverageDeductibleValue_PersonalInjuryProtectionDeductible IS NULL, 'N/A', v_raw_CoverageDeductibleValue_PersonalInjuryProtectionDeductible) AS v_CoverageDeductibleValue_PersonalInjuryProtectionDeuctible,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValue_ManagedCareDeductible), 'N/A', v_raw_CoverageDeductibleValue_ManagedCareDeductible)\n\tIFF(v_raw_CoverageDeductibleValue_ManagedCareDeductible IS NULL, 'N/A', v_raw_CoverageDeductibleValue_ManagedCareDeductible) AS v_CoverageDeductibleValue_ManagedCareDeductible,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tMajorPerilCode,\n\to_CompositeRatedFlag AS CompositeRatedFlag,\n\tv_CoverageLimitValue_CombinedSingleLimit AS o_CombinedSingleLimit,\n\t'N/A' AS o_BodilyInjurySplitLimit,\n\t'N/A' AS o_PhysicalDamageSplitLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageLimitValue_MedicalPaymentLimit,\r\n\t-- i_SourceSystemID='DCT',\r\n\t-- v_CoverageLimitValue_MedicalLimit,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageLimitValue_MedicalPaymentLimit,\n\t\ti_SourceSystemID = 'DCT', v_CoverageLimitValue_MedicalLimit,\n\t\t'N/A') AS o_MedicalPaymentLimit,\n\t-- *INF*: IIF(\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageLimitValue_UninsuredMotoristSingleLimit,\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'PMS', v_CoverageLimitValue_UninsuredMotoristSingleLimit, 'N/A') AS o_UninsuredMotoristSingleLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageLimitValue_UnderinsuredMotoristSingleLimit,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='UIM',\r\n\t-- IIF(v_CoverageLimitValue_ValueEstimate='N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageLimitValue_UnderinsuredMotoristSingleLimit,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'UIM', IFF(v_CoverageLimitValue_ValueEstimate = 'N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate),\n\t\t'N/A') AS o_UnderinsuredMotoristSingleLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS' AND MajorPerilCode='130' ,\r\n\t-- DECODE(TRUE,\r\n\t-- v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt<>'N/A',v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\r\n\t-- 'N/A'),\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- DECODE(TRUE,\r\n\t-- v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt<>'N/A',v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\r\n\t-- 'N/A'),\r\n\t-- 'N/A'\r\n\t-- ) \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --Removed on 05-16-2014\r\n\t-- --DECODE(TRUE,\r\n\t-- --i_SourceSystemID='PMS',\r\n\t-- --DECODE(TRUE,\r\n\t-- --v_CoverageLimitValue_PersonalInjuryProtectionLimit<>'N/A',v_CoverageLimitValue_PersonalInjuryProtectionLimit,\r\n\t-- --v_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking<>'N/A',v_CoverageLimitValue_PersonalInjuryProtectionLimitWithStacking,\r\n\t-- --v_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking<>'N/A',v_CoverageLimitValue_PersonalInjuryProtectionLimitWithoutStacking,\r\n\t-- --'N/A'),\r\n\t-- --i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- --IIF(v_CoverageLimitValue_ValueEstimate='N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate),\r\n\t-- --'N/A'\r\n\t-- --) \n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS' AND MajorPerilCode = '130', DECODE(TRUE,\n\t\tv_CoverageLimitValue_PersonaInjuryProtectionBasicLimt <> 'N/A', v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\n\t\t'N/A'),\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'PIP', DECODE(TRUE,\n\t\tv_CoverageLimitValue_PersonaInjuryProtectionBasicLimt <> 'N/A', v_CoverageLimitValue_PersonaInjuryProtectionBasicLimt,\n\t\t'N/A'),\n\t\t'N/A') AS o_PersonalInjuryProtectionLimit,\n\t'N/A' AS o_PhysicalDamageLiabilityDeductible,\n\t-- *INF*: IIF(ISNULL(v_raw_CoverageDeductibleValuee_SingleLimitDeductible),'N/A',v_raw_CoverageDeductibleValuee_SingleLimitDeductible)\n\tIFF(v_raw_CoverageDeductibleValuee_SingleLimitDeductible IS NULL, 'N/A', v_raw_CoverageDeductibleValuee_SingleLimitDeductible) AS o_SingleLimitDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageDeductibleValue_ComprehensiveDeductible,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='OTC',\r\n\t-- v_CoverageDeductibleValue_Standard,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageDeductibleValue_ComprehensiveDeductible,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'OTC', v_CoverageDeductibleValue_Standard,\n\t\t'N/A') AS o_ComprehensiveDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='Collision',\r\n\t-- v_CoverageDeductibleValue_GlassBuyBack,\r\n\t-- i_SourceSystemID='PMS' AND NOT ISNULL(v_raw_CoverageDeductibleValuee_ComprehensiveFullGlassCoverageDeductible),v_raw_CoverageDeductibleValuee_ComprehensiveFullGlassCoverageDeductible,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'Collision', v_CoverageDeductibleValue_GlassBuyBack,\n\t\ti_SourceSystemID = 'PMS' AND NOT v_raw_CoverageDeductibleValuee_ComprehensiveFullGlassCoverageDeductible IS NULL, v_raw_CoverageDeductibleValuee_ComprehensiveFullGlassCoverageDeductible,\n\t\t'N/A') AS o_ComprehensiveFullGlassCoverageDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageDeductibleValue_CollisionDeductible,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='Collision',\r\n\t--  DECODE(TRUE,\r\n\t--  v_CoverageDeductibleValue_Standard<>'N/A',\r\n\t--  v_CoverageDeductibleValue_Standard,\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack<>'N/A',\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack,\r\n\t--  v_CoverageDeductibleValue_Limited),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageDeductibleValue_CollisionDeductible,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'Collision', DECODE(TRUE,\n\t\tv_CoverageDeductibleValue_Standard <> 'N/A', v_CoverageDeductibleValue_Standard,\n\t\tv_CoverageDeductibleValue_GlassBuyBack <> 'N/A', v_CoverageDeductibleValue_GlassBuyBack,\n\t\tv_CoverageDeductibleValue_Limited),\n\t\t'N/A') AS o_CollisionDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='Collision',\r\n\t--  DECODE(TRUE,\r\n\t--  v_CoverageDeductibleValue_Standard<>'N/A',\r\n\t--  v_CoverageDeductibleValue_Standard,\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack<>'N/A',\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack,\r\n\t--  v_CoverageDeductibleValue_Limited),\r\n\t-- i_SourceSystemID='PMS' AND  NOT ISNULL(v_raw_CoverageDeductibleValuee_LimitedCollisionDeductible),v_raw_CoverageDeductibleValuee_LimitedCollisionDeductible,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'Collision', DECODE(TRUE,\n\t\tv_CoverageDeductibleValue_Standard <> 'N/A', v_CoverageDeductibleValue_Standard,\n\t\tv_CoverageDeductibleValue_GlassBuyBack <> 'N/A', v_CoverageDeductibleValue_GlassBuyBack,\n\t\tv_CoverageDeductibleValue_Limited),\n\t\ti_SourceSystemID = 'PMS' AND NOT v_raw_CoverageDeductibleValuee_LimitedCollisionDeductible IS NULL, v_raw_CoverageDeductibleValuee_LimitedCollisionDeductible,\n\t\t'N/A') AS o_LimitedCollisionDeductible,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='DriveOtherCarLiability',\r\n\t-- IIF(v_CoverageDeductibleValue_PropertyDamage='N/A', v_CoverageDeductibleValue_CSL, v_CoverageDeductibleValue_PropertyDamage),\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'DriveOtherCarLiability', IFF(v_CoverageDeductibleValue_PropertyDamage = 'N/A', v_CoverageDeductibleValue_CSL, v_CoverageDeductibleValue_PropertyDamage), 'N/A') AS o_PropertyDamageLiabilityDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS' AND NOT ISNULL(v_raw_CoverageDeductibleValuee_BroadenedCollisionDeductible),\r\n\t-- v_raw_CoverageDeductibleValuee_BroadenedCollisionDeductible,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='Collision',\r\n\t--  DECODE(TRUE,\r\n\t--  v_CoverageDeductibleValue_Standard<>'N/A',\r\n\t--  v_CoverageDeductibleValue_Standard,\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack<>'N/A',\r\n\t--  v_CoverageDeductibleValue_GlassBuyBack,\r\n\t--  v_CoverageDeductibleValue_Limited),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS' AND NOT v_raw_CoverageDeductibleValuee_BroadenedCollisionDeductible IS NULL, v_raw_CoverageDeductibleValuee_BroadenedCollisionDeductible,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'Collision', DECODE(TRUE,\n\t\tv_CoverageDeductibleValue_Standard <> 'N/A', v_CoverageDeductibleValue_Standard,\n\t\tv_CoverageDeductibleValue_GlassBuyBack <> 'N/A', v_CoverageDeductibleValue_GlassBuyBack,\n\t\tv_CoverageDeductibleValue_Limited),\n\t\t'N/A') AS o_BroadenedCollisionDeductible,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='UMBI',\r\n\t-- IIF(v_CoverageLimitValue_ValueEstimate='N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate),\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'UMBI', IFF(v_CoverageLimitValue_ValueEstimate = 'N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate), 'N/A') AS o_UnderinsuredMotoristBodilyInjuryLimit,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='UIMPD',\r\n\t-- v_CoverageLimitValue_ValueEstimate,\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'UIMPD', v_CoverageLimitValue_ValueEstimate, 'N/A') AS o_UnderinsuredMotoristPropertyDamageLimit,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='UMBI',\r\n\t-- IIF(v_CoverageLimitValue_ValueEstimate='N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate),\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'UMBI', IFF(v_CoverageLimitValue_ValueEstimate = 'N/A', v_CoverageLimitValue_Value, v_CoverageLimitValue_ValueEstimate), 'N/A') AS o_UninsuredMotoristBodilyInjuryLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageLimitValue_UninsuredMotoristSingleLimit,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='UMPD',\r\n\t-- v_CoverageLimitValue_ValueEstimate,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageLimitValue_UninsuredMotoristSingleLimit,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'UMPD', v_CoverageLimitValue_ValueEstimate,\n\t\t'N/A') AS o_UninsuredMotoristPropertyDamageLimit,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='UMPD',\r\n\t-- v_CoverageDeductibleValue_Standard,\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'UMPD', v_CoverageDeductibleValue_Standard, 'N/A') AS o_UninsuredMotoristPropertyDamageDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageLimitValue_PersonalInjuryProtectionLimit,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='PropertyProtection',\r\n\t-- v_CoverageLimitValue_ValueEstimate,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageLimitValue_PersonalInjuryProtectionLimit,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'PropertyProtection', v_CoverageLimitValue_ValueEstimate,\n\t\t'N/A') AS o_PropertyProtectionLimit,\n\t'N/A' AS o_PersonalInjuryProtectionWithoutStackingLimit,\n\t'N/A' AS o_PersonalInjuryProtectionWithStackingLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',\r\n\t-- v_CoverageDeductibleValue_PersonalInjuryProtectionDeuctible,\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- IIF(v_CoverageDeductibleValue_Standard='N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS', v_CoverageDeductibleValue_PersonalInjuryProtectionDeuctible,\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'PIP', IFF(v_CoverageDeductibleValue_Standard = 'N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard),\n\t\t'N/A') AS o_PersonalInjuryProtectionDeductible,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- IIF(v_CoverageDeductibleValue_Standard='N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard),\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'PIP', IFF(v_CoverageDeductibleValue_Standard = 'N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard), 'N/A') AS o_PersonalInjuryProtectionWithoutStackingDeductible,\n\t-- *INF*: IIF(i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- IIF(v_CoverageDeductibleValue_Standard='N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard),\r\n\t-- 'N/A'\r\n\t-- )\n\tIFF(i_SourceSystemID = 'DCT' AND i_CoverageType = 'PIP', IFF(v_CoverageDeductibleValue_Standard = 'N/A', v_CoverageDeductibleValue_ManagedCareDeductible, v_CoverageDeductibleValue_Standard), 'N/A') AS o_PersonalInjuryProtectionWithStackingDeductible,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS' AND MajorPerilCode='130' ,\r\n\t-- DECODE(TRUE,\r\n\t-- v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt<>'N/A',v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\r\n\t-- 'N/A'),\r\n\t-- i_SourceSystemID='DCT' AND i_CoverageType='PIP',\r\n\t-- DECODE(TRUE,\r\n\t-- v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt<>'N/A',v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\r\n\t-- 'N/A'),\r\n\t-- 'N/A'\r\n\t-- ) \n\tDECODE(TRUE,\n\t\ti_SourceSystemID = 'PMS' AND MajorPerilCode = '130', DECODE(TRUE,\n\t\tv_CoverageLimitValue_PersonaInjuryProtectionExcessLimt <> 'N/A', v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\n\t\t'N/A'),\n\t\ti_SourceSystemID = 'DCT' AND i_CoverageType = 'PIP', DECODE(TRUE,\n\t\tv_CoverageLimitValue_PersonaInjuryProtectionExcessLimt <> 'N/A', v_CoverageLimitValue_PersonaInjuryProtectionExcessLimt,\n\t\t'N/A'),\n\t\t'N/A') AS o_PersonalInjuryProtectionExcessLimit,\n\to_UsedInDumpingIndicator AS UsedInDumpingIndicator,\n\to_VehicleTypeSize AS VehicleTypeSize,\n\to_BusinessUseClass AS BusinessUseClass,\n\to_SecondaryClass AS SecondaryClass,\n\to_FleetType AS FleetType,\n\to_SecondaryClassGroup AS SecondaryClassGroup,\n\to_VIN AS VIN,\n\to_VehicleNumber AS VehicleNumber,\n\to_CoordinationOfBenefits AS CoordinationOfBenefits,\n\to_MedicalExpensesOption AS MedicalExpensesOption,\n\to_CoveredByWorkersCompensationFlag AS CoveredByWorkersCompensationFlag,\n\to_HistoricVehicleIndicator AS HistoricVehicleIndicator\n\tFROM EXP_MetaData\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_CombinedSingleLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_CombinedSingleLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_CombinedSingleLimit.CoverageLimitType = 'CombinedSingleLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalPaymentLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalPaymentLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalPaymentLimit.CoverageLimitType = 'MedicalPaymentLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_MedicalLimit.CoverageLimitType = 'MedicalLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UninsuredMotoristSingleLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UninsuredMotoristSingleLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UninsuredMotoristSingleLimit.CoverageLimitType = 'UninsuredMotoristSingleLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UnderinsuredMotoristSingleLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UnderinsuredMotoristSingleLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_UnderinsuredMotoristSingleLimit.CoverageLimitType = 'UnderinsuredMotoristSingleLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_ValueEstimate\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_ValueEstimate.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_ValueEstimate.CoverageLimitType = 'ValueEstimate'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_Value\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_Value.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_Value.CoverageLimitType = 'Value'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimit.CoverageLimitType = 'PersonalInjuryProtectionLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithStacking\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithStacking.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithStacking.CoverageLimitType = 'PersonalInjuryProtectionLimitWithStacking'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithoutStacking\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithoutStacking.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionLimitWithoutStacking.CoverageLimitType = 'PersonalInjuryProtectionLimitWithoutStacking'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionBasicLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionBasicLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionBasicLimit.CoverageLimitType = 'PersonalInjuryProtectionBasicLimit'\n\n\tLEFT JOIN LKP_COVERAGELIMITVALUE LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionExcessLimit\n\tON LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionExcessLimit.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGELIMITVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionExcessLimit.CoverageLimitType = 'PersonalInjuryProtectionExcessLimit'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveDeductible.CoverageDeductibleType = 'ComprehensiveDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Standard\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Standard.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Standard.CoverageDeductibleType = 'Standard'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_GlassBuyBack\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_GlassBuyBack.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_GlassBuyBack.CoverageDeductibleType = 'GlassBuyBack'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CollisionDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CollisionDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CollisionDeductible.CoverageDeductibleType = 'CollisionDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Limited\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Limited.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_Limited.CoverageDeductibleType = 'Limited'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PropertyDamage\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PropertyDamage.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PropertyDamage.CoverageDeductibleType = 'PropertyDamage'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CSL\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CSL.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_CSL.CoverageDeductibleType = 'CSL'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_PersonalInjuryProtectionDeductible.CoverageDeductibleType = 'PersonalInjuryProtectionDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ManagedCareDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ManagedCareDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ManagedCareDeductible.CoverageDeductibleType = 'ManagedCareDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveFullGlassCoverageDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveFullGlassCoverageDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_ComprehensiveFullGlassCoverageDeductible.CoverageDeductibleType = 'ComprehensiveFullGlassCoverageDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_LimitedCollisionDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_LimitedCollisionDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_LimitedCollisionDeductible.CoverageDeductibleType = 'LimitedCollisionDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_BroadenedCollisionDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_BroadenedCollisionDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_BroadenedCollisionDeductible.CoverageDeductibleType = 'BroadenedCollisionDeductible'\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLEVALUE LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_SingleLimitDeductible\n\tON LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_SingleLimitDeductible.PremiumTransactionAKId = i_PremiumTransactionAKId\n\tAND LKP_COVERAGEDEDUCTIBLEVALUE_i_PremiumTransactionAKId_SingleLimitDeductible.CoverageDeductibleType = 'SingleLimitDeductible'\n\n),\nLKP_CoverageDetailCommercialAutoDim AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tCoverageGuid,\n\tVehicleGroupCode,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tCombinedSingleLimit,\n\tBodilyInjurySplitLimit,\n\tPhysicalDamageSplitLimit,\n\tMedicalPaymentLimit,\n\tUninsuredMotoristSingleLimit,\n\tUnderinsuredMotoristSingleLimit,\n\tPersonalInjuryProtectionLimit,\n\tPhysicalDamageLiabilityDeductible,\n\tSingleLimitDeductible,\n\tComprehensiveDeductible,\n\tComprehensiveFullGlassCoverageDeductible,\n\tCollisionDeductible,\n\tLimitedCollisionDeductible,\n\tPropertyDamageLiabilityDeductible,\n\tBroadenedCollisionDeductible,\n\tUnderinsuredMotoristBodilyInjuryLimit,\n\tUnderinsuredMotoristPropertyDamageLimit,\n\tUninsuredMotoristBodilyInjuryLimit,\n\tUninsuredMotoristPropertyDamageLimit,\n\tUninsuredMotoristPropertyDamageDeductible,\n\tPropertyProtectionLimit,\n\tPersonalInjuryProtectionDeductible,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tCompositeRatedFlag,\n\tPersonalInjuryProtectionExcessLimit,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tVIN,\n\tVehicleNumber,\n\tCoordinationOfBenefits,\n\tCoveredByWorkersCompensationFlag,\n\tMedicalExpensesOption,\n\tHistoricVehicleIndicator,\n\ti_CoverageDetailDimId\n\tFROM (\n\t\tSELECT CDCAD.CoverageGuid as CoverageGuid, CDCAD.VehicleGroupCode as VehicleGroupCode, CDCAD.RadiusOfOperation as RadiusOfOperation, CDCAD.SecondaryVehicleType as SecondaryVehicleType, CDCAD.CombinedSingleLimit as CombinedSingleLimit, CDCAD.BodilyInjurySplitLimit as BodilyInjurySplitLimit, CDCAD.PhysicalDamageSplitLimit as PhysicalDamageSplitLimit, CDCAD.MedicalPaymentLimit as MedicalPaymentLimit, CDCAD.UninsuredMotoristSingleLimit as UninsuredMotoristSingleLimit, CDCAD.UnderinsuredMotoristSingleLimit as UnderinsuredMotoristSingleLimit, CDCAD.PersonalInjuryProtectionLimit as PersonalInjuryProtectionLimit, CDCAD.PhysicalDamageLiabilityDeductible as PhysicalDamageLiabilityDeductible, CDCAD.SingleLimitDeductible as SingleLimitDeductible, CDCAD.ComprehensiveDeductible as ComprehensiveDeductible, CDCAD.ComprehensiveFullGlassCoverageDeductible as ComprehensiveFullGlassCoverageDeductible, CDCAD.CollisionDeductible as CollisionDeductible, CDCAD.LimitedCollisionDeductible as LimitedCollisionDeductible, CDCAD.PropertyDamageLiabilityDeductible as PropertyDamageLiabilityDeductible, CDCAD.BroadenedCollisionDeductible as BroadenedCollisionDeductible, CDCAD.UnderinsuredMotoristBodilyInjuryLimit as UnderinsuredMotoristBodilyInjuryLimit, CDCAD.UnderinsuredMotoristPropertyDamageLimit as UnderinsuredMotoristPropertyDamageLimit, CDCAD.UninsuredMotoristBodilyInjuryLimit as UninsuredMotoristBodilyInjuryLimit, CDCAD.UninsuredMotoristPropertyDamageLimit as UninsuredMotoristPropertyDamageLimit, CDCAD.UninsuredMotoristPropertyDamageDeductible as UninsuredMotoristPropertyDamageDeductible, CDCAD.PropertyProtectionLimit as PropertyProtectionLimit, CDCAD.PersonalInjuryProtectionDeductible as PersonalInjuryProtectionDeductible, CDCAD.UsedInDumpingIndicator as UsedInDumpingIndicator, CDCAD.VehicleYear as VehicleYear, CDCAD.StatedAmount as StatedAmount, CDCAD.CostNew as CostNew, CDCAD.VehicleDeleteDate as VehicleDeleteDate, CDCAD.CompositeRatedFlag as CompositeRatedFlag, CDCAD.PersonalInjuryProtectionExcessLimit as PersonalInjuryProtectionExcessLimit, CDCAD.VehicleTypeSize as VehicleTypeSize, CDCAD.BusinessUseClass as BusinessUseClass, CDCAD.SecondaryClass as SecondaryClass, CDCAD.FleetType as FleetType, CDCAD.SecondaryClassGroup as SecondaryClassGroup, CDCAD.VIN as VIN, CDCAD.VehicleNumber as VehicleNumber, CDCAD.CoordinationOfBenefits as CoordinationOfBenefits, CDCAD.CoveredByWorkersCompensationFlag as CoveredByWorkersCompensationFlag, CDCAD.MedicalExpensesOption as MedicalExpensesOption, CDCAD.CoverageDetailDimId as CoverageDetailDimId, CDCAD.HistoricVehicleIndicator as HistoricVehicleIndicator\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialAutoDim CDCAD\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\tON CDCAD.CoverageDetailDimId = CDD.CoverageDetailDimId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CDCA\r\n\t\tON CDCA.PremiumTransactionID=CDD.EDWPremiumTransactionPKId\r\n\t\tWHERE CDD.modifeddate > '@{pipeline().parameters.SELECTION_START_TS}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageDetailDimId ORDER BY CoverageDetailDimId) = 1\n),\nEXP_Tgt AS (\n\tSELECT\n\tEXP_Business_Logic.CoverageDetailDimId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tEXP_Business_Logic.EffectiveDate,\n\tEXP_Business_Logic.ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Business_Logic.CoverageGuid,\n\tEXP_Business_Logic.VehicleType,\n\tEXP_Business_Logic.RadiusOfOperation,\n\tEXP_Business_Logic.SecondaryVehicleType,\n\tEXP_Business_Logic.o_CombinedSingleLimit AS CombinedSingleLimit,\n\tEXP_Business_Logic.o_BodilyInjurySplitLimit AS BodilyInjurySplitLimit,\n\tEXP_Business_Logic.o_PhysicalDamageSplitLimit AS PhysicalDamageSplitLimit,\n\tEXP_Business_Logic.o_MedicalPaymentLimit AS MedicalPaymentLimit,\n\tEXP_Business_Logic.o_UninsuredMotoristSingleLimit AS UninsuredMotoristSingleLimit,\n\tEXP_Business_Logic.o_UnderinsuredMotoristSingleLimit AS UnderinsuredMotoristSingleLimit,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionLimit AS PersonalInjuryProtectionLimit,\n\tEXP_Business_Logic.o_PhysicalDamageLiabilityDeductible AS PhysicalDamageLiabilityDeductible,\n\tEXP_Business_Logic.o_SingleLimitDeductible AS SingleLimitDeductible,\n\tEXP_Business_Logic.o_ComprehensiveDeductible AS ComprehensiveDeductible,\n\tEXP_Business_Logic.o_ComprehensiveFullGlassCoverageDeductible AS ComprehensiveFullGlassCoverageDeductible,\n\tEXP_Business_Logic.o_CollisionDeductible AS CollisionDeductible,\n\tEXP_Business_Logic.o_LimitedCollisionDeductible AS LimitedCollisionDeductible,\n\tEXP_Business_Logic.o_PropertyDamageLiabilityDeductible AS PropertyDamageLiabilityDeductible,\n\tEXP_Business_Logic.o_BroadenedCollisionDeductible AS BroadenedCollisionDeductible,\n\tEXP_Business_Logic.o_UnderinsuredMotoristBodilyInjuryLimit AS UnderinsuredMotoristBodilyInjuryLimit,\n\tEXP_Business_Logic.o_UnderinsuredMotoristPropertyDamageLimit AS UnderinsuredMotoristPropertyDamageLimit,\n\tEXP_Business_Logic.o_UninsuredMotoristBodilyInjuryLimit AS UninsuredMotoristBodilyInjuryLimit,\n\tEXP_Business_Logic.o_UninsuredMotoristPropertyDamageLimit AS UninsuredMotoristPropertyDamageLimit,\n\tEXP_Business_Logic.o_UninsuredMotoristPropertyDamageDeductible AS UninsuredMotoristPropertyDamageDeductible,\n\tEXP_Business_Logic.o_PropertyProtectionLimit AS PropertyProtectionLimit,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionWithoutStackingLimit AS PersonalInjuryProtectionWithoutStackingLimit,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionWithStackingLimit AS PersonalInjuryProtectionWithStackingLimit,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionDeductible AS PersonalInjuryProtectionDeductible,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionWithoutStackingDeductible AS PersonalInjuryProtectionWithoutStackingDeductible,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionWithStackingDeductible AS PersonalInjuryProtectionWithStackingDeductible,\n\tEXP_Business_Logic.o_PersonalInjuryProtectionExcessLimit AS PersonalInjuryProtectionExcessLimit,\n\tEXP_Business_Logic.UsedInDumpingIndicator,\n\tLKP_CoverageDetailCommercialAutoDim.CoverageDetailDimId AS LKP_CoverageDetailDimId,\n\tEXP_Business_Logic.VehicleTypeSize,\n\tEXP_Business_Logic.BusinessUseClass,\n\tEXP_Business_Logic.SecondaryClass,\n\tEXP_Business_Logic.FleetType,\n\tEXP_Business_Logic.SecondaryClassGroup,\n\tEXP_Business_Logic.VehicleYear,\n\tEXP_Business_Logic.StatedAmount,\n\tEXP_Business_Logic.CostNew,\n\tEXP_Business_Logic.VehicleDeleteDate,\n\tEXP_Business_Logic.CompositeRatedFlag,\n\t-- *INF*: IIF(ISNULL(LKP_CoverageDetailDimId),'NEW',\r\n\t-- IIF(lkp_CoverageGuid=CoverageGuid and\r\n\t-- lkp_VehicleGroupCode=VehicleType\r\n\t-- and \r\n\t-- lkp_RadiusOfOperation=RadiusOfOperation and \r\n\t-- lkp_SecondaryVehicleType=SecondaryVehicleType and \r\n\t-- lkp_CombinedSingleLimit=CombinedSingleLimit and \r\n\t-- lkp_BodilyInjurySplitLimit=BodilyInjurySplitLimit and \r\n\t-- lkp_PhysicalDamageSplitLimit=PhysicalDamageSplitLimit and \r\n\t-- lkp_MedicalPaymentLimit=MedicalPaymentLimit and \r\n\t-- lkp_UninsuredMotoristSingleLimit=UninsuredMotoristSingleLimit and \r\n\t-- lkp_UnderinsuredMotoristSingleLimit=UnderinsuredMotoristSingleLimit and \r\n\t-- lkp_PersonalInjuryProtectionLimit=PersonalInjuryProtectionLimit and \r\n\t-- lkp_PhysicalDamageLiabilityDeductible=PhysicalDamageLiabilityDeductible and \r\n\t-- lkp_SingleLimitDeductible=SingleLimitDeductible and \r\n\t-- lkp_ComprehensiveDeductible=ComprehensiveDeductible and \r\n\t-- lkp_ComprehensiveFullGlassCoverageDeductible=ComprehensiveFullGlassCoverageDeductible and \r\n\t-- lkp_CollisionDeductible=CollisionDeductible and \r\n\t-- lkp_LimitedCollisionDeductible=LimitedCollisionDeductible and \r\n\t-- lkp_PropertyDamageLiabilityDeductible=PropertyDamageLiabilityDeductible and \r\n\t-- lkp_BroadenedCollisionDeductible=BroadenedCollisionDeductible and \r\n\t-- lkp_UnderinsuredMotoristBodilyInjuryLimit=UnderinsuredMotoristBodilyInjuryLimit and \r\n\t-- lkp_UnderinsuredMotoristPropertyDamageLimit=UnderinsuredMotoristPropertyDamageLimit and \r\n\t-- lkp_UninsuredMotoristBodilyInjuryLimit=UninsuredMotoristBodilyInjuryLimit and \r\n\t-- lkp_UninsuredMotoristPropertyDamageLimit=UninsuredMotoristPropertyDamageLimit and \r\n\t-- lkp_UninsuredMotoristPropertyDamageDeductible=UninsuredMotoristPropertyDamageDeductible and \r\n\t-- lkp_PropertyProtectionLimit=PropertyProtectionLimit and \r\n\t-- lkp_PersonalInjuryProtectionDeductible=PersonalInjuryProtectionDeductible and \r\n\t-- lkp_UsedInDumpingIndicator=UsedInDumpingIndicator and \r\n\t-- lkp_VehicleYear=VehicleYear and \r\n\t-- lkp_StatedAmount=StatedAmount and \r\n\t-- lkp_CostNew=CostNew and \r\n\t-- lkp_VehicleDeleteDate=VehicleDeleteDate and \r\n\t-- iif(lkp_CompositeRatedFlag='T',1,0)=CompositeRatedFlag and \r\n\t-- lkp_PersonalInjuryProtectionExcessLimit=PersonalInjuryProtectionExcessLimit and \r\n\t-- lkp_VehicleTypeSize=VehicleTypeSize and \r\n\t-- lkp_BusinessUseClass=BusinessUseClass and \r\n\t-- lkp_SecondaryClass=SecondaryClass and \r\n\t-- lkp_FleetType=FleetType and \r\n\t-- lkp_SecondaryClassGroup=SecondaryClassGroup and \r\n\t-- lkp_VIN=VIN and \r\n\t-- lkp_VehicleNumber=VehicleNumber and \r\n\t-- lkp_CoordinationOfBenefits=CoordinationOfBenefits and \r\n\t-- iif(\r\n\t-- lkp_CoveredByWorkersCompensationFlag='T',1,0)=CoveredByWorkersCompensationFlag and \r\n\t-- lkp_MedicalExpensesOption=MedicalExpensesOption and\r\n\t-- lkp_HistoricVehicleIndicator=HistoricVehicleIndicator\r\n\t--  \r\n\t-- ,'UNCHANGED','UPDATE'))\n\tIFF(LKP_CoverageDetailDimId IS NULL, 'NEW', IFF(lkp_CoverageGuid = CoverageGuid AND lkp_VehicleGroupCode = VehicleType AND lkp_RadiusOfOperation = RadiusOfOperation AND lkp_SecondaryVehicleType = SecondaryVehicleType AND lkp_CombinedSingleLimit = CombinedSingleLimit AND lkp_BodilyInjurySplitLimit = BodilyInjurySplitLimit AND lkp_PhysicalDamageSplitLimit = PhysicalDamageSplitLimit AND lkp_MedicalPaymentLimit = MedicalPaymentLimit AND lkp_UninsuredMotoristSingleLimit = UninsuredMotoristSingleLimit AND lkp_UnderinsuredMotoristSingleLimit = UnderinsuredMotoristSingleLimit AND lkp_PersonalInjuryProtectionLimit = PersonalInjuryProtectionLimit AND lkp_PhysicalDamageLiabilityDeductible = PhysicalDamageLiabilityDeductible AND lkp_SingleLimitDeductible = SingleLimitDeductible AND lkp_ComprehensiveDeductible = ComprehensiveDeductible AND lkp_ComprehensiveFullGlassCoverageDeductible = ComprehensiveFullGlassCoverageDeductible AND lkp_CollisionDeductible = CollisionDeductible AND lkp_LimitedCollisionDeductible = LimitedCollisionDeductible AND lkp_PropertyDamageLiabilityDeductible = PropertyDamageLiabilityDeductible AND lkp_BroadenedCollisionDeductible = BroadenedCollisionDeductible AND lkp_UnderinsuredMotoristBodilyInjuryLimit = UnderinsuredMotoristBodilyInjuryLimit AND lkp_UnderinsuredMotoristPropertyDamageLimit = UnderinsuredMotoristPropertyDamageLimit AND lkp_UninsuredMotoristBodilyInjuryLimit = UninsuredMotoristBodilyInjuryLimit AND lkp_UninsuredMotoristPropertyDamageLimit = UninsuredMotoristPropertyDamageLimit AND lkp_UninsuredMotoristPropertyDamageDeductible = UninsuredMotoristPropertyDamageDeductible AND lkp_PropertyProtectionLimit = PropertyProtectionLimit AND lkp_PersonalInjuryProtectionDeductible = PersonalInjuryProtectionDeductible AND lkp_UsedInDumpingIndicator = UsedInDumpingIndicator AND lkp_VehicleYear = VehicleYear AND lkp_StatedAmount = StatedAmount AND lkp_CostNew = CostNew AND lkp_VehicleDeleteDate = VehicleDeleteDate AND IFF(lkp_CompositeRatedFlag = 'T', 1, 0) = CompositeRatedFlag AND lkp_PersonalInjuryProtectionExcessLimit = PersonalInjuryProtectionExcessLimit AND lkp_VehicleTypeSize = VehicleTypeSize AND lkp_BusinessUseClass = BusinessUseClass AND lkp_SecondaryClass = SecondaryClass AND lkp_FleetType = FleetType AND lkp_SecondaryClassGroup = SecondaryClassGroup AND lkp_VIN = VIN AND lkp_VehicleNumber = VehicleNumber AND lkp_CoordinationOfBenefits = CoordinationOfBenefits AND IFF(lkp_CoveredByWorkersCompensationFlag = 'T', 1, 0) = CoveredByWorkersCompensationFlag AND lkp_MedicalExpensesOption = MedicalExpensesOption AND lkp_HistoricVehicleIndicator = HistoricVehicleIndicator, 'UNCHANGED', 'UPDATE')) AS ChangeFlag,\n\tEXP_Business_Logic.VIN,\n\tEXP_Business_Logic.VehicleNumber,\n\tEXP_Business_Logic.CoordinationOfBenefits,\n\tEXP_Business_Logic.MedicalExpensesOption,\n\tEXP_Business_Logic.CoveredByWorkersCompensationFlag,\n\tEXP_Business_Logic.HistoricVehicleIndicator,\n\tLKP_CoverageDetailCommercialAutoDim.CoverageGuid AS lkp_CoverageGuid,\n\tLKP_CoverageDetailCommercialAutoDim.VehicleGroupCode AS lkp_VehicleGroupCode,\n\tLKP_CoverageDetailCommercialAutoDim.RadiusOfOperation AS lkp_RadiusOfOperation,\n\tLKP_CoverageDetailCommercialAutoDim.SecondaryVehicleType AS lkp_SecondaryVehicleType,\n\tLKP_CoverageDetailCommercialAutoDim.CombinedSingleLimit AS lkp_CombinedSingleLimit,\n\tLKP_CoverageDetailCommercialAutoDim.BodilyInjurySplitLimit AS lkp_BodilyInjurySplitLimit,\n\tLKP_CoverageDetailCommercialAutoDim.PhysicalDamageSplitLimit AS lkp_PhysicalDamageSplitLimit,\n\tLKP_CoverageDetailCommercialAutoDim.MedicalPaymentLimit AS lkp_MedicalPaymentLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UninsuredMotoristSingleLimit AS lkp_UninsuredMotoristSingleLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UnderinsuredMotoristSingleLimit AS lkp_UnderinsuredMotoristSingleLimit,\n\tLKP_CoverageDetailCommercialAutoDim.PersonalInjuryProtectionLimit AS lkp_PersonalInjuryProtectionLimit,\n\tLKP_CoverageDetailCommercialAutoDim.PhysicalDamageLiabilityDeductible AS lkp_PhysicalDamageLiabilityDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.SingleLimitDeductible AS lkp_SingleLimitDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.ComprehensiveDeductible AS lkp_ComprehensiveDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.ComprehensiveFullGlassCoverageDeductible AS lkp_ComprehensiveFullGlassCoverageDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.CollisionDeductible AS lkp_CollisionDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.LimitedCollisionDeductible AS lkp_LimitedCollisionDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.PropertyDamageLiabilityDeductible AS lkp_PropertyDamageLiabilityDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.BroadenedCollisionDeductible AS lkp_BroadenedCollisionDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.UnderinsuredMotoristBodilyInjuryLimit AS lkp_UnderinsuredMotoristBodilyInjuryLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UnderinsuredMotoristPropertyDamageLimit AS lkp_UnderinsuredMotoristPropertyDamageLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UninsuredMotoristBodilyInjuryLimit AS lkp_UninsuredMotoristBodilyInjuryLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UninsuredMotoristPropertyDamageLimit AS lkp_UninsuredMotoristPropertyDamageLimit,\n\tLKP_CoverageDetailCommercialAutoDim.UninsuredMotoristPropertyDamageDeductible AS lkp_UninsuredMotoristPropertyDamageDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.PropertyProtectionLimit AS lkp_PropertyProtectionLimit,\n\tLKP_CoverageDetailCommercialAutoDim.PersonalInjuryProtectionDeductible AS lkp_PersonalInjuryProtectionDeductible,\n\tLKP_CoverageDetailCommercialAutoDim.UsedInDumpingIndicator AS lkp_UsedInDumpingIndicator,\n\tLKP_CoverageDetailCommercialAutoDim.VehicleYear AS lkp_VehicleYear,\n\tLKP_CoverageDetailCommercialAutoDim.StatedAmount AS lkp_StatedAmount,\n\tLKP_CoverageDetailCommercialAutoDim.CostNew AS lkp_CostNew,\n\tLKP_CoverageDetailCommercialAutoDim.VehicleDeleteDate AS lkp_VehicleDeleteDate,\n\tLKP_CoverageDetailCommercialAutoDim.CompositeRatedFlag AS lkp_CompositeRatedFlag,\n\tLKP_CoverageDetailCommercialAutoDim.PersonalInjuryProtectionExcessLimit AS lkp_PersonalInjuryProtectionExcessLimit,\n\tLKP_CoverageDetailCommercialAutoDim.VehicleTypeSize AS lkp_VehicleTypeSize,\n\tLKP_CoverageDetailCommercialAutoDim.BusinessUseClass AS lkp_BusinessUseClass,\n\tLKP_CoverageDetailCommercialAutoDim.SecondaryClass AS lkp_SecondaryClass,\n\tLKP_CoverageDetailCommercialAutoDim.FleetType AS lkp_FleetType,\n\tLKP_CoverageDetailCommercialAutoDim.SecondaryClassGroup AS lkp_SecondaryClassGroup,\n\tLKP_CoverageDetailCommercialAutoDim.VIN AS lkp_VIN,\n\tLKP_CoverageDetailCommercialAutoDim.VehicleNumber AS lkp_VehicleNumber,\n\tLKP_CoverageDetailCommercialAutoDim.CoordinationOfBenefits AS lkp_CoordinationOfBenefits,\n\tLKP_CoverageDetailCommercialAutoDim.CoveredByWorkersCompensationFlag AS lkp_CoveredByWorkersCompensationFlag,\n\tLKP_CoverageDetailCommercialAutoDim.MedicalExpensesOption AS lkp_MedicalExpensesOption,\n\tLKP_CoverageDetailCommercialAutoDim.HistoricVehicleIndicator AS lkp_HistoricVehicleIndicator\n\tFROM EXP_Business_Logic\n\tLEFT JOIN LKP_CoverageDetailCommercialAutoDim\n\tON LKP_CoverageDetailCommercialAutoDim.CoverageDetailDimId = EXP_Business_Logic.CoverageDetailDimId\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreatedDate,\n\tModifiedDate,\n\tCoverageGuid,\n\tVehicleType,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tCombinedSingleLimit,\n\tBodilyInjurySplitLimit,\n\tPhysicalDamageSplitLimit,\n\tMedicalPaymentLimit,\n\tUninsuredMotoristSingleLimit,\n\tUnderinsuredMotoristSingleLimit,\n\tPersonalInjuryProtectionLimit,\n\tPhysicalDamageLiabilityDeductible,\n\tSingleLimitDeductible,\n\tComprehensiveDeductible,\n\tComprehensiveFullGlassCoverageDeductible,\n\tCollisionDeductible,\n\tLimitedCollisionDeductible,\n\tPropertyDamageLiabilityDeductible,\n\tBroadenedCollisionDeductible,\n\tUnderinsuredMotoristBodilyInjuryLimit,\n\tUnderinsuredMotoristPropertyDamageLimit,\n\tUninsuredMotoristBodilyInjuryLimit,\n\tUninsuredMotoristPropertyDamageLimit,\n\tUninsuredMotoristPropertyDamageDeductible,\n\tPropertyProtectionLimit,\n\tPersonalInjuryProtectionWithoutStackingLimit,\n\tPersonalInjuryProtectionWithStackingLimit,\n\tPersonalInjuryProtectionDeductible,\n\tPersonalInjuryProtectionWithoutStackingDeductible,\n\tPersonalInjuryProtectionWithStackingDeductible,\n\tPersonalInjuryProtectionExcessLimit,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tCompositeRatedFlag,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tChangeFlag,\n\tVIN,\n\tVehicleNumber,\n\tCoordinationOfBenefits,\n\tCoveredByWorkersCompensationFlag,\n\tMedicalExpensesOption,\n\tHistoricVehicleIndicator\n\tFROM EXP_Tgt\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='NEW'),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='UPDATE'),\nCoverageDetailCommercialAutoDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialAutoDim\n\t(CoverageDetailDimId, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, CoverageGuid, VehicleGroupCode, RadiusOfOperation, SecondaryVehicleType, CombinedSingleLimit, BodilyInjurySplitLimit, PhysicalDamageSplitLimit, MedicalPaymentLimit, UninsuredMotoristSingleLimit, UnderinsuredMotoristSingleLimit, PersonalInjuryProtectionLimit, PhysicalDamageLiabilityDeductible, SingleLimitDeductible, ComprehensiveDeductible, ComprehensiveFullGlassCoverageDeductible, CollisionDeductible, LimitedCollisionDeductible, PropertyDamageLiabilityDeductible, BroadenedCollisionDeductible, UnderinsuredMotoristBodilyInjuryLimit, UnderinsuredMotoristPropertyDamageLimit, UninsuredMotoristBodilyInjuryLimit, UninsuredMotoristPropertyDamageLimit, UninsuredMotoristPropertyDamageDeductible, PropertyProtectionLimit, PersonalInjuryProtectionDeductible, UsedInDumpingIndicator, VehicleYear, StatedAmount, CostNew, VehicleDeleteDate, CompositeRatedFlag, PersonalInjuryProtectionExcessLimit, VehicleTypeSize, BusinessUseClass, SecondaryClass, FleetType, SecondaryClassGroup, VIN, VehicleNumber, CoordinationOfBenefits, CoveredByWorkersCompensationFlag, MedicalExpensesOption, HistoricVehicleIndicator)\n\tSELECT \n\tCOVERAGEDETAILDIMID, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGEGUID, \n\tVehicleType AS VEHICLEGROUPCODE, \n\tRADIUSOFOPERATION, \n\tSECONDARYVEHICLETYPE, \n\tCOMBINEDSINGLELIMIT, \n\tBODILYINJURYSPLITLIMIT, \n\tPHYSICALDAMAGESPLITLIMIT, \n\tMEDICALPAYMENTLIMIT, \n\tUNINSUREDMOTORISTSINGLELIMIT, \n\tUNDERINSUREDMOTORISTSINGLELIMIT, \n\tPERSONALINJURYPROTECTIONLIMIT, \n\tPHYSICALDAMAGELIABILITYDEDUCTIBLE, \n\tSINGLELIMITDEDUCTIBLE, \n\tCOMPREHENSIVEDEDUCTIBLE, \n\tCOMPREHENSIVEFULLGLASSCOVERAGEDEDUCTIBLE, \n\tCOLLISIONDEDUCTIBLE, \n\tLIMITEDCOLLISIONDEDUCTIBLE, \n\tPROPERTYDAMAGELIABILITYDEDUCTIBLE, \n\tBROADENEDCOLLISIONDEDUCTIBLE, \n\tUNDERINSUREDMOTORISTBODILYINJURYLIMIT, \n\tUNDERINSUREDMOTORISTPROPERTYDAMAGELIMIT, \n\tUNINSUREDMOTORISTBODILYINJURYLIMIT, \n\tUNINSUREDMOTORISTPROPERTYDAMAGELIMIT, \n\tUNINSUREDMOTORISTPROPERTYDAMAGEDEDUCTIBLE, \n\tPROPERTYPROTECTIONLIMIT, \n\tPERSONALINJURYPROTECTIONDEDUCTIBLE, \n\tUSEDINDUMPINGINDICATOR, \n\tVEHICLEYEAR, \n\tSTATEDAMOUNT, \n\tCOSTNEW, \n\tVEHICLEDELETEDATE, \n\tCOMPOSITERATEDFLAG, \n\tPERSONALINJURYPROTECTIONEXCESSLIMIT, \n\tVEHICLETYPESIZE, \n\tBUSINESSUSECLASS, \n\tSECONDARYCLASS, \n\tFLEETTYPE, \n\tSECONDARYCLASSGROUP, \n\tVIN, \n\tVEHICLENUMBER, \n\tCOORDINATIONOFBENEFITS, \n\tCOVEREDBYWORKERSCOMPENSATIONFLAG, \n\tMEDICALEXPENSESOPTION, \n\tHISTORICVEHICLEINDICATOR\n\tFROM RTR_INSERT_UPDATE_INSERT\n),\nUPD_Exists AS (\n\tSELECT\n\tCoverageDetailDimId AS CoverageDetailDimId3, \n\tAuditID AS AuditID3, \n\tEffectiveDate AS EffectiveDate3, \n\tExpirationDate AS ExpirationDate3, \n\tModifiedDate AS ModifiedDate3, \n\tCoverageGuid AS CoverageGuid3, \n\tVehicleType AS VehicleType3, \n\tRadiusOfOperation AS RadiusOfOperation3, \n\tSecondaryVehicleType AS SecondaryVehicleType3, \n\tCombinedSingleLimit AS CombinedSingleLimit3, \n\tBodilyInjurySplitLimit AS BodilyInjurySplitLimit3, \n\tPhysicalDamageSplitLimit AS PhysicalDamageSplitLimit3, \n\tMedicalPaymentLimit AS MedicalPaymentLimit3, \n\tUninsuredMotoristSingleLimit AS UninsuredMotoristSingleLimit3, \n\tUnderinsuredMotoristSingleLimit AS UnderinsuredMotoristSingleLimit3, \n\tPersonalInjuryProtectionLimit AS PersonalInjuryProtectionLimit3, \n\tPhysicalDamageLiabilityDeductible AS PhysicalDamageLiabilityDeductible3, \n\tSingleLimitDeductible AS SingleLimitDeductible3, \n\tComprehensiveDeductible AS ComprehensiveDeductible3, \n\tComprehensiveFullGlassCoverageDeductible AS ComprehensiveFullGlassCoverageDeductible3, \n\tCollisionDeductible AS CollisionDeductible3, \n\tLimitedCollisionDeductible AS LimitedCollisionDeductible3, \n\tPropertyDamageLiabilityDeductible AS PropertyDamageLiabilityDeductible3, \n\tBroadenedCollisionDeductible AS BroadenedCollisionDeductible3, \n\tUnderinsuredMotoristBodilyInjuryLimit AS UnderinsuredMotoristBodilyInjuryLimit3, \n\tUnderinsuredMotoristPropertyDamageLimit AS UnderinsuredMotoristPropertyDamageLimit3, \n\tUninsuredMotoristBodilyInjuryLimit AS UninsuredMotoristBodilyInjuryLimit3, \n\tUninsuredMotoristPropertyDamageLimit AS UninsuredMotoristPropertyDamageLimit3, \n\tUninsuredMotoristPropertyDamageDeductible AS UninsuredMotoristPropertyDamageDeductible3, \n\tPropertyProtectionLimit AS PropertyProtectionLimit3, \n\tPersonalInjuryProtectionWithoutStackingLimit AS PersonalInjuryProtectionWithoutStackingLimit3, \n\tPersonalInjuryProtectionWithStackingLimit AS PersonalInjuryProtectionWithStackingLimit3, \n\tPersonalInjuryProtectionDeductible AS PersonalInjuryProtectionDeductible3, \n\tPersonalInjuryProtectionWithoutStackingDeductible AS PersonalInjuryProtectionWithoutStackingDeductible3, \n\tPersonalInjuryProtectionWithStackingDeductible AS PersonalInjuryProtectionWithStackingDeductible3, \n\tPersonalInjuryProtectionExcessLimit AS PersonalInjuryProtectionExcessLimit3, \n\tUsedInDumpingIndicator AS UsedInDumpingIndicator3, \n\tVehicleYear AS VehicleYear3, \n\tStatedAmount AS StatedAmount3, \n\tCostNew AS CostNew3, \n\tVehicleDeleteDate AS VehicleDeleteDate3, \n\tCompositeRatedFlag AS CompositeRatedFlag3, \n\tVehicleTypeSize AS VehicleTypeSize3, \n\tBusinessUseClass AS BusinessUseClass3, \n\tSecondaryClass AS SecondaryClass3, \n\tFleetType AS FleetType3, \n\tSecondaryClassGroup AS SecondaryClassGroup3, \n\tVIN AS VIN3, \n\tVehicleNumber AS VehicleNumber3, \n\tCoordinationOfBenefits AS CoordinationOfBenefits3, \n\tCoveredByWorkersCompensationFlag AS CoveredByWorkersCompensationFlag3, \n\tMedicalExpensesOption AS MedicalExpensesOption3, \n\tHistoricVehicleIndicator AS HistoricVehicleIndicator3\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nCoverageDetailCommercialAutoDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialAutoDim AS T\n\tUSING UPD_Exists AS S\n\tON \n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CoverageDetailDimId = S.CoverageDetailDimId3, T.AuditID = S.AuditID3, T.EffectiveDate = S.EffectiveDate3, T.ExpirationDate = S.ExpirationDate3, T.ModifiedDate = S.ModifiedDate3, T.CoverageGuid = S.CoverageGuid3, T.VehicleGroupCode = S.VehicleType3, T.RadiusOfOperation = S.RadiusOfOperation3, T.SecondaryVehicleType = S.SecondaryVehicleType3, T.CombinedSingleLimit = S.CombinedSingleLimit3, T.BodilyInjurySplitLimit = S.BodilyInjurySplitLimit3, T.PhysicalDamageSplitLimit = S.PhysicalDamageSplitLimit3, T.MedicalPaymentLimit = S.MedicalPaymentLimit3, T.UninsuredMotoristSingleLimit = S.UninsuredMotoristSingleLimit3, T.UnderinsuredMotoristSingleLimit = S.UnderinsuredMotoristSingleLimit3, T.PersonalInjuryProtectionLimit = S.PersonalInjuryProtectionLimit3, T.PhysicalDamageLiabilityDeductible = S.PhysicalDamageLiabilityDeductible3, T.SingleLimitDeductible = S.SingleLimitDeductible3, T.ComprehensiveDeductible = S.ComprehensiveDeductible3, T.ComprehensiveFullGlassCoverageDeductible = S.ComprehensiveFullGlassCoverageDeductible3, T.CollisionDeductible = S.CollisionDeductible3, T.LimitedCollisionDeductible = S.LimitedCollisionDeductible3, T.PropertyDamageLiabilityDeductible = S.PropertyDamageLiabilityDeductible3, T.BroadenedCollisionDeductible = S.BroadenedCollisionDeductible3, T.UnderinsuredMotoristBodilyInjuryLimit = S.UnderinsuredMotoristBodilyInjuryLimit3, T.UnderinsuredMotoristPropertyDamageLimit = S.UnderinsuredMotoristPropertyDamageLimit3, T.UninsuredMotoristBodilyInjuryLimit = S.UninsuredMotoristBodilyInjuryLimit3, T.UninsuredMotoristPropertyDamageLimit = S.UninsuredMotoristPropertyDamageLimit3, T.UninsuredMotoristPropertyDamageDeductible = S.UninsuredMotoristPropertyDamageDeductible3, T.PropertyProtectionLimit = S.PropertyProtectionLimit3, T.PersonalInjuryProtectionDeductible = S.PersonalInjuryProtectionDeductible3, T.UsedInDumpingIndicator = S.UsedInDumpingIndicator3, T.VehicleYear = S.VehicleYear3, T.StatedAmount = S.StatedAmount3, T.CostNew = S.CostNew3, T.VehicleDeleteDate = S.VehicleDeleteDate3, T.CompositeRatedFlag = S.CompositeRatedFlag3, T.PersonalInjuryProtectionExcessLimit = S.PersonalInjuryProtectionExcessLimit3, T.VehicleTypeSize = S.VehicleTypeSize3, T.BusinessUseClass = S.BusinessUseClass3, T.SecondaryClass = S.SecondaryClass3, T.FleetType = S.FleetType3, T.SecondaryClassGroup = S.SecondaryClassGroup3, T.VIN = S.VIN3, T.VehicleNumber = S.VehicleNumber3, T.CoordinationOfBenefits = S.CoordinationOfBenefits3, T.CoveredByWorkersCompensationFlag = S.CoveredByWorkersCompensationFlag3, T.MedicalExpensesOption = S.MedicalExpensesOption3, T.HistoricVehicleIndicator = S.HistoricVehicleIndicator3\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246503"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905513"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604120"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:14:33"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:30:27"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Data_Mart"
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "folder": {
            "name": "Common DataMart/"
        },
        "annotations": []
    }
}