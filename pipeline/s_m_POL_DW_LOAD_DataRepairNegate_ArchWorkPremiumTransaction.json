{
    "name": "s_m_POL_DW_LOAD_DataRepairNegate_ArchWorkPremiumTransaction",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_DataRepairNegate_ArchWorkPremiumTransa_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkPremiumTransactionDataRepairNegate AS (\n\tselect Max(B.WorkPremiumTransactionId) as WorkPremiumTransactionId, NewNegatePremiumTransactionAKID as PremiumTransactionAKId,Max(PremiumTransactionStageId) as PremiumTransactionStageId , Max(A.CreatedDate) as CreatedDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransactionDataRepairNegate A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchWorkPremiumTransaction B\r\n\ton A.OriginalPremiumTransactionAKID=B.PremiumTransactionAKId and B.SourceSystemID='DCT'\r\n\tgroup by NewNegatePremiumTransactionAKID\n),\nEXP_METADATA AS (\n\tSELECT\n\t-- *INF*: --v_WorkPremiumTransactionID+1\r\n\t-- --Removed as we figured WorkPremiumTransactionID shouldn't be assigned, but rather come from the source\n\t'' AS v_WorkPremiumTransactionID,\n\tWorkPremiumTransactionId AS WorkPremiumTransactionID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tCreatedDate,\n\tPremiumTransactionAKId,\n\tPremiumTransactionStageId\n\tFROM SQ_WorkPremiumTransactionDataRepairNegate\n),\nArchWorkPremiumTransaction AS (\n\tINSERT INTO ArchWorkPremiumTransaction\n\t(WorkPremiumTransactionId, AuditID, SourceSystemID, CreatedDate, PremiumTransactionAKId, PremiumTransactionStageId)\n\tSELECT \n\tWorkPremiumTransactionID AS WORKPREMIUMTRANSACTIONID, \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tPREMIUMTRANSACTIONAKID, \n\tPREMIUMTRANSACTIONSTAGEID\n\tFROM EXP_METADATA\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "216690"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "881000"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7484951"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "06/27/2023 12:02:14"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "07/04/2023 10:58:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}