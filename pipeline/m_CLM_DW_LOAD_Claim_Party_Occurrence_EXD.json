{
    "name": "m_CLM_DW_LOAD_Claim_Party_Occurrence_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Party_Occurrence_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Claim_Occurrence_id AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT claim_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, claim_occurrence.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM claim_occurrence\r\n\t\tWHERE source_sys_id = 'EXCEED' AND crrnt_snpsht_flag = '1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_Claimant_num AS (\n\tSELECT\n\tccn_claimant_nbr,\n\tccn_claim_nbr,\n\tccn_client_id\n\tFROM (\n\t\tSELECT \n\t\t\tccn_claimant_nbr,\n\t\t\tccn_claim_nbr,\n\t\t\tccn_client_id\n\t\tFROM claim_claimant_nbr_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ccn_claim_nbr,ccn_client_id ORDER BY ccn_claimant_nbr) = 1\n),\nLKP_Claim_Party_ak_id AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party.claim_party_ak_id as claim_party_ak_id, \r\n\t\tclaim_party.claim_party_key as claim_party_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party\r\n\t\tWHERE crrnt_snpsht_flag  =1 and source_sys_id ='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id) = 1\n),\nLKP_CLAIM_CASE_AK_ID AS (\n\tSELECT\n\tclaim_case_ak_id,\n\tclaim_case_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_case.claim_case_ak_id as claim_case_ak_id, \r\n\t\tclaim_case.claim_case_key as claim_case_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case \r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_key ORDER BY claim_case_ak_id) = 1\n),\nLKP_Claim_Occurrence_Key AS (\n\tSELECT\n\tclaim_occurrence_key,\n\tclaim_occurrence_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tLTRIM(RTRIM(claim_occurrence.claim_occurrence_key)) as claim_occurrence_key, \r\n\t\tclaim_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id ORDER BY claim_occurrence_key) = 1\n),\nLKP_Claim_Party_Key AS (\n\tSELECT\n\tclaim_party_key,\n\tclaim_party_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party.claim_party_key as claim_party_key, \r\n\t\tclaim_party.claim_party_ak_id as claim_party_ak_id \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party, @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence \r\n\t\tWHERE \r\n\t\tclaim_party.claim_party_ak_id  = claim_party_occurrence.claim_party_ak_id\r\n\t\tAND claim_party.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND claim_party.crrnt_snpsht_flag = 1\r\n\t\tAND claim_party_occurrence.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND claim_party_occurrence.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_ak_id ORDER BY claim_party_key) = 1\n),\nSQ_CLAIM_OBJECT_CLT_STAGE AS (\n\tSELECT DISTINCT\r\n\tCLAIM_OBJECT_CLT_STAGE.CCT_CLAIM_NBR, \r\n\tCLAIM_OBJECT_CLT_STAGE.CCT_CLIENT_ID, \r\n\tCLAIM_OBJECT_CLT_STAGE.CCT_CLIENT_ROLE_CD \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_CLT_STAGE\r\n\tWHERE (CLAIM_OBJECT_CLT_STAGE.CCT_CREATE_TS > =  DATEADD(DD, @{pipeline().parameters.NO_OF_DAYS} ,'@{pipeline().parameters.SELECTION_START_TS}') OR\r\n\tCLAIM_OBJECT_CLT_STAGE.CCT_UPD_TS > =  DATEADD(DD, @{pipeline().parameters.NO_OF_DAYS} ,'@{pipeline().parameters.SELECTION_START_TS}'))\n),\nEXP_Values_Claim_Party_Occurrence AS (\n\tSELECT\n\tCCT_CLAIM_NBR,\n\tCCT_CLIENT_ID,\n\tCCT_CLIENT_ROLE_CD\n\tFROM SQ_CLAIM_OBJECT_CLT_STAGE\n),\nEXP_LKP_Values_Claim_Party_Occurrence AS (\n\tSELECT\n\tCCT_CLAIM_NBR,\n\tCCT_CLIENT_ID,\n\t-- *INF*: LTRIM(RTRIM(CCT_CLIENT_ID))\n\tLTRIM(RTRIM(CCT_CLIENT_ID)) AS v_CCT_CLIENT_ID,\n\tCCT_CLIENT_ROLE_CD AS In_CCT_CLIENT_ROLE_CD,\n\t-- *INF*: LTRIM(RTRIM(In_CCT_CLIENT_ROLE_CD))\n\tLTRIM(RTRIM(In_CCT_CLIENT_ROLE_CD)) AS Out_CCT_CLIENT_ROLE_CD,\n\t-- *INF*: :LKP.LKP_Claim_Occurrence_id(CCT_CLAIM_NBR)\n\tLKP_CLAIM_OCCURRENCE_ID_CCT_CLAIM_NBR.claim_occurrence_ak_id AS claim_occurrence_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_PARTY_AK_ID(v_CCT_CLIENT_ID)\n\tLKP_CLAIM_PARTY_AK_ID_v_CCT_CLIENT_ID.claim_party_ak_id AS claim_party_ak_id,\n\t-- *INF*: CCT_CLAIM_NBR|| '//'||CCT_CLIENT_ID\n\tCCT_CLAIM_NBR || '//' || CCT_CLIENT_ID AS Claim_Case_key,\n\t-- *INF*: :LKP.LKP_CLAIM_CASE_AK_ID(Claim_Case_key)\n\tLKP_CLAIM_CASE_AK_ID_Claim_Case_key.claim_case_ak_id AS v_claim_case_ak_id,\n\t-- *INF*: IIF(ISNULL(v_claim_case_ak_id),-1,v_claim_case_ak_id)\n\tIFF(v_claim_case_ak_id IS NULL, - 1, v_claim_case_ak_id) AS claim_case_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIMANT_NUM(CCT_CLAIM_NBR,CCT_CLIENT_ID)\n\tLKP_CLAIMANT_NUM_CCT_CLAIM_NBR_CCT_CLIENT_ID.ccn_claimant_nbr AS v_claimant_num,\n\t-- *INF*: IIF(NOT ISNULL(v_claimant_num) AND In_CCT_CLIENT_ROLE_CD ='CLMT' , v_claimant_num,'N/A')\n\tIFF(NOT v_claimant_num IS NULL AND In_CCT_CLIENT_ROLE_CD = 'CLMT', v_claimant_num, 'N/A') AS out_Claimant_num,\n\t'N/A' AS OFFSET_ONSET_IND,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\t1 AS CRRNT_SNPSHT_FLAG\n\tFROM EXP_Values_Claim_Party_Occurrence\n\tLEFT JOIN LKP_CLAIM_OCCURRENCE_ID LKP_CLAIM_OCCURRENCE_ID_CCT_CLAIM_NBR\n\tON LKP_CLAIM_OCCURRENCE_ID_CCT_CLAIM_NBR.claim_occurrence_key = CCT_CLAIM_NBR\n\n\tLEFT JOIN LKP_CLAIM_PARTY_AK_ID LKP_CLAIM_PARTY_AK_ID_v_CCT_CLIENT_ID\n\tON LKP_CLAIM_PARTY_AK_ID_v_CCT_CLIENT_ID.claim_party_key = v_CCT_CLIENT_ID\n\n\tLEFT JOIN LKP_CLAIM_CASE_AK_ID LKP_CLAIM_CASE_AK_ID_Claim_Case_key\n\tON LKP_CLAIM_CASE_AK_ID_Claim_Case_key.claim_case_key = Claim_Case_key\n\n\tLEFT JOIN LKP_CLAIMANT_NUM LKP_CLAIMANT_NUM_CCT_CLAIM_NBR_CCT_CLIENT_ID\n\tON LKP_CLAIMANT_NUM_CCT_CLAIM_NBR_CCT_CLIENT_ID.ccn_claim_nbr = CCT_CLAIM_NBR\n\tAND LKP_CLAIMANT_NUM_CCT_CLAIM_NBR_CCT_CLIENT_ID.ccn_client_id = CCT_CLIENT_ID\n\n),\nLKP_Claim_Party_Occurrence AS (\n\tSELECT\n\tclaim_party_occurrence_id,\n\tclaim_party_occurrence_ak_id,\n\tclaim_party_role_code,\n\tclaim_occurrence_ak_id,\n\tclaim_party_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_party_occurrence_id as claim_party_occurrence_id, \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\ta.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\tltrim(rtrim(a.claim_party_role_code)) as claim_party_role_code, \r\n\t\ta.claim_party_ak_id as claim_party_ak_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence a\r\n\t\tWHERE \r\n\t\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_party_role_code,claim_party_ak_id ORDER BY claim_party_occurrence_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_LKP_Values_Claim_Party_Occurrence.claim_occurrence_ak_id,\n\tEXP_LKP_Values_Claim_Party_Occurrence.Out_CCT_CLIENT_ROLE_CD AS CCT_CLIENT_ROLE_CD,\n\tEXP_LKP_Values_Claim_Party_Occurrence.claim_party_ak_id,\n\tEXP_LKP_Values_Claim_Party_Occurrence.claim_case_ak_id,\n\tLKP_Claim_Party_Occurrence.claim_party_occurrence_id AS lkp_claim_party_occurrence_id,\n\tLKP_Claim_Party_Occurrence.claim_party_occurrence_ak_id AS lkp_claim_party_occurrence_ak_id,\n\tLKP_Claim_Party_Occurrence.claim_party_role_code AS lkp_claim_party_role_code,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\n\tTO_DATE('1/1/1800', 'MM/DD/YYYY') AS denial_date,\n\t0 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t-- *INF*: iif(isnull(lkp_claim_party_occurrence_id), 'NEW', 'NOCHANGE')\n\tIFF(lkp_claim_party_occurrence_id IS NULL, 'NEW', 'NOCHANGE') AS v_changed_flag,\n\tv_changed_flag AS Changed_Flag,\n\tEXP_LKP_Values_Claim_Party_Occurrence.OFFSET_ONSET_IND AS offset_onset_ind,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(v_changed_flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tEXP_LKP_Values_Claim_Party_Occurrence.SOURCE_SYSTEM_ID AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\tEXP_LKP_Values_Claim_Party_Occurrence.out_Claimant_num\n\tFROM EXP_LKP_Values_Claim_Party_Occurrence\n\tLEFT JOIN LKP_Claim_Party_Occurrence\n\tON LKP_Claim_Party_Occurrence.claim_occurrence_ak_id = EXP_LKP_Values_Claim_Party_Occurrence.claim_occurrence_ak_id AND LKP_Claim_Party_Occurrence.claim_party_role_code = EXP_LKP_Values_Claim_Party_Occurrence.Out_CCT_CLIENT_ROLE_CD AND LKP_Claim_Party_Occurrence.claim_party_ak_id = EXP_LKP_Values_Claim_Party_Occurrence.claim_party_ak_id\n),\nFIL_Insert_Party_Occurrence AS (\n\tSELECT\n\tlkp_claim_party_occurrence_ak_id, \n\tclaim_occurrence_ak_id, \n\tCCT_CLIENT_ROLE_CD, \n\tclaim_party_ak_id, \n\tclaim_case_ak_id, \n\tdenial_date, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\tChanged_Flag, \n\toffset_onset_ind, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tout_Claimant_num AS out_claimant_num\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_claim_party_occurrence AS (\n\tCREATE SEQUENCE SEQ_claim_party_occurrence\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tSEQ_claim_party_occurrence.NEXTVAL,\n\tlkp_claim_party_occurrence_ak_id,\n\t-- *INF*: IIF(Changed_Flag='NEW', NEXTVAL, lkp_claim_party_occurrence_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, lkp_claim_party_occurrence_ak_id) AS claim_party_occurrence_ak_id,\n\tclaim_occurrence_ak_id,\n\tCCT_CLIENT_ROLE_CD,\n\tclaim_party_ak_id,\n\tclaim_case_ak_id,\n\tdenial_date,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\tChanged_Flag,\n\toffset_onset_ind,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tout_claimant_num\n\tFROM FIL_Insert_Party_Occurrence\n),\nclaim_party_occurrence_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\n\t(claim_party_occurrence_ak_id, claim_occurrence_ak_id, claim_party_ak_id, claim_case_ak_id, claim_party_role_code, claimant_num, denial_date, offset_onset_ind, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tCLAIM_PARTY_AK_ID, \n\tCLAIM_CASE_AK_ID, \n\tCCT_CLIENT_ROLE_CD AS CLAIM_PARTY_ROLE_CODE, \n\tout_claimant_num AS CLAIMANT_NUM, \n\tDENIAL_DATE, \n\tOFFSET_ONSET_IND, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_Determine_AK\n),\nSQ_claim_party_occurrence AS (\n\tSELECT \r\n\ta.claim_party_occurrence_id, \r\n\ta.claim_occurrence_ak_id, \r\n\ta.claim_party_role_code,\r\n\ta.claim_party_ak_id, \r\n\ta.denial_date, \r\n\ta.crrnt_snpsht_flag, \r\n\ta.audit_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date, \r\n\ta.source_sys_id, \r\n\ta.created_date, \r\n\ta.modified_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND \r\n\t EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence b\r\n\t\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND \r\n\tb.crrnt_snpsht_flag = '1'\r\n\t\t\tAND a.claim_occurrence_ak_id =  b.claim_occurrence_ak_id\r\n\t\t\tAND a.claim_party_role_code = b.claim_party_role_code\r\n\t\t\tAND a.claim_party_ak_id = b.claim_party_ak_id\r\n\t\t\tGROUP BY claim_occurrence_ak_id, claim_party_role_code, claim_party_ak_id \r\n\t\t\tHAVING COUNT(*) > 1) \r\n\tORDER BY claim_occurrence_ak_id, claim_party_role_code, claim_party_ak_id, eff_from_date  DESC\n),\nEXP_expire_eff_from_date AS (\n\tSELECT\n\tclaim_party_occurrence_id,\n\tclaim_occurrence_ak_id AS claim_occurrence_id,\n\tclaim_party_role_code,\n\tclaim_party_ak_id AS claim_party_id,\n\t-- *INF*: to_char(claim_occurrence_id)||to_char(claim_party_role_code)||to_char(claim_party_id)\n\tto_char(claim_occurrence_id) || to_char(claim_party_role_code) || to_char(claim_party_id) AS v_claim_party_occurrence_key,\n\tdenial_date,\n\tcrrnt_snpsht_flag,\n\t0 AS new_crrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tv_claim_party_occurrence_key = v_prev_row_claim_party_occurrence_key, ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),\r\n\t-- \teff_to_date)\n\tDECODE(TRUE,\n\tv_claim_party_occurrence_key = v_prev_row_claim_party_occurrence_key, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\teff_to_date) AS v_new_eff_to_Date,\n\teff_from_date AS v_prev_row_eff_from_date,\n\t-- *INF*: to_char(claim_occurrence_id)||to_char(claim_party_role_code)||to_char(claim_party_id)\n\tto_char(claim_occurrence_id) || to_char(claim_party_role_code) || to_char(claim_party_id) AS v_prev_row_claim_party_occurrence_key,\n\tv_new_eff_to_Date AS new_eff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tsysdate AS new_modified_date\n\tFROM SQ_claim_party_occurrence\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tnew_crrnt_snpsht_flag, \n\teff_to_date, \n\tnew_eff_to_date, \n\tnew_modified_date\n\tFROM EXP_expire_eff_from_date\n\tWHERE eff_to_date<>new_eff_to_date\n),\nUPD_claim_party_occurrence AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tnew_crrnt_snpsht_flag, \n\tnew_eff_to_date, \n\tnew_modified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nclaim_party_occurrence_Update AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\n\t(claim_party_occurrence_id, crrnt_snpsht_flag, eff_to_date, modified_date)\n\tSELECT \n\tCLAIM_PARTY_OCCURRENCE_ID, \n\tnew_crrnt_snpsht_flag AS CRRNT_SNPSHT_FLAG, \n\tnew_eff_to_date AS EFF_TO_DATE, \n\tnew_modified_date AS MODIFIED_DATE\n\tFROM UPD_claim_party_occurrence\n),\nSQ_claim_party_occurrence_Update_Claim_Case_Ak_id AS (\n\tSELECT claim_party_occurrence.claim_party_occurrence_id, claim_party_occurrence.claim_party_occurrence_ak_id, claim_party_occurrence.claim_occurrence_ak_id, claim_party_occurrence.claim_party_ak_id, claim_party_occurrence.claim_case_ak_id \r\n\tFROM\r\n\t claim_party_occurrence \r\n\tWHERE\r\n\t claim_party_occurrence.claim_case_ak_id = -1 \r\n\tAND claim_party_occurrence.crrnt_snpsht_flag = 1\r\n\tAND claim_party_occurrence.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n),\nEXP_Evaluate AS (\n\tSELECT\n\tclaim_party_occurrence_id,\n\tclaim_party_occurrence_ak_id,\n\tclaim_occurrence_ak_id,\n\tclaim_party_ak_id,\n\tclaim_case_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_PARTY_KEY(claim_party_ak_id)\n\tLKP_CLAIM_PARTY_KEY_claim_party_ak_id.claim_party_key AS v_claim_party_key,\n\t-- *INF*: :LKP.LKP_CLAIM_OCCURRENCE_KEY(claim_occurrence_ak_id)\n\tLKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id.claim_occurrence_key AS v_claim_occurrence_key,\n\t-- *INF*: LTRIM(RTRIM(v_claim_occurrence_key|| '//'||v_claim_party_key))\n\tLTRIM(RTRIM(v_claim_occurrence_key || '//' || v_claim_party_key)) AS v_Claim_Case_Key,\n\t-- *INF*: :LKP.LKP_CLAIM_CASE_AK_ID(v_Claim_Case_Key)\n\tLKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_ak_id AS v_Claim_Case_Ak_id,\n\t-- *INF*: IIF(ISNULL(v_Claim_Case_Ak_id),-1,v_Claim_Case_Ak_id)\n\tIFF(v_Claim_Case_Ak_id IS NULL, - 1, v_Claim_Case_Ak_id) AS Out_Claim_Case_Ak_id\n\tFROM SQ_claim_party_occurrence_Update_Claim_Case_Ak_id\n\tLEFT JOIN LKP_CLAIM_PARTY_KEY LKP_CLAIM_PARTY_KEY_claim_party_ak_id\n\tON LKP_CLAIM_PARTY_KEY_claim_party_ak_id.claim_party_ak_id = claim_party_ak_id\n\n\tLEFT JOIN LKP_CLAIM_OCCURRENCE_KEY LKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id\n\tON LKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id.claim_occurrence_ak_id = claim_occurrence_ak_id\n\n\tLEFT JOIN LKP_CLAIM_CASE_AK_ID LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key\n\tON LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_key = v_Claim_Case_Key\n\n),\nFIL_Claim_Case_Ak_id AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tOut_Claim_Case_Ak_id\n\tFROM EXP_Evaluate\n\tWHERE Out_Claim_Case_Ak_id != -1\n),\nUPD_Claim_Case_Ak_id_Update AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tOut_Claim_Case_Ak_id\n\tFROM FIL_Claim_Case_Ak_id\n),\nclaim_party_occurrence_Update_Claim_Case_Ak_id AS (\n\tMERGE INTO claim_party_occurrence AS T\n\tUSING UPD_Claim_Case_Ak_id_Update AS S\n\tON T.claim_party_occurrence_id = S.claim_party_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claim_case_ak_id = S.Out_Claim_Case_Ak_id\n),\nSQ_claim_party_occurrence_UPD_Claimant_Num AS (\n\tSELECT claim_party_occurrence.claim_party_occurrence_id, claim_party_occurrence.claim_occurrence_ak_id, claim_party_occurrence.claim_party_ak_id, claim_party_occurrence.claimant_num\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\r\n\tWHERE  claim_party_role_code = 'CLMT' AND claimant_num = 'N/A' \r\n\tAND source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tAND crrnt_snpsht_flag = 1\n),\nEXP_Lkp_values AS (\n\tSELECT\n\tclaim_party_occurrence_id,\n\tclaim_occurrence_ak_id,\n\tclaim_party_ak_id,\n\tclaimant_num,\n\t-- *INF*: :LKP.LKP_CLAIM_OCCURRENCE_KEY(claim_occurrence_ak_id)\n\tLKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id.claim_occurrence_key AS v_Claim_Occurrence_Key,\n\t-- *INF*: :LKP.LKP_CLAIM_PARTY_KEY(claim_party_ak_id)\n\tLKP_CLAIM_PARTY_KEY_claim_party_ak_id.claim_party_key AS v_Claim_Party_Key,\n\t-- *INF*: :LKP.LKP_CLAIMANT_NUM(v_Claim_Occurrence_Key,v_Claim_Party_Key)\n\tLKP_CLAIMANT_NUM_v_Claim_Occurrence_Key_v_Claim_Party_Key.ccn_claimant_nbr AS v_claimant_num,\n\t-- *INF*: IIF(ISNULL(v_claimant_num),'N/A',v_claimant_num)\n\tIFF(v_claimant_num IS NULL, 'N/A', v_claimant_num) AS Out_Claimant_num,\n\tSYSDATE AS Modified_date\n\tFROM SQ_claim_party_occurrence_UPD_Claimant_Num\n\tLEFT JOIN LKP_CLAIM_OCCURRENCE_KEY LKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id\n\tON LKP_CLAIM_OCCURRENCE_KEY_claim_occurrence_ak_id.claim_occurrence_ak_id = claim_occurrence_ak_id\n\n\tLEFT JOIN LKP_CLAIM_PARTY_KEY LKP_CLAIM_PARTY_KEY_claim_party_ak_id\n\tON LKP_CLAIM_PARTY_KEY_claim_party_ak_id.claim_party_ak_id = claim_party_ak_id\n\n\tLEFT JOIN LKP_CLAIMANT_NUM LKP_CLAIMANT_NUM_v_Claim_Occurrence_Key_v_Claim_Party_Key\n\tON LKP_CLAIMANT_NUM_v_Claim_Occurrence_Key_v_Claim_Party_Key.ccn_claim_nbr = v_Claim_Occurrence_Key\n\tAND LKP_CLAIMANT_NUM_v_Claim_Occurrence_Key_v_Claim_Party_Key.ccn_client_id = v_Claim_Party_Key\n\n),\nUPD_Claimant_num AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tOut_Claimant_num, \n\tModified_date\n\tFROM EXP_Lkp_values\n),\nclaim_party_occurrence_UPD_Claimant_num AS (\n\tMERGE INTO claim_party_occurrence AS T\n\tUSING UPD_Claimant_num AS S\n\tON T.claim_party_occurrence_id = S.claim_party_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claimant_num = S.Out_Claimant_num, T.modified_date = S.Modified_date\n),\nSQ_ClaimClientStage AS (\n\tSELECT ccs.PREFERRED_CONTACT_METHOD,\r\n\t\tcpo.claim_party_occurrence_id, \r\n\t\tcpo.preferred_contact_method AS preferred_contact_method_target\r\n\tFROM dbo.ClaimClientStage ccs \r\n\tJOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_occurrence co ON ccs.CCI_CLAIM_NBR = co.claim_occurrence_key \r\n\t\tAND co.crrnt_snpsht_flag = 1\r\n\tJOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_party cp ON ccs.CCI_CLIENT_ID = cp.claim_party_key \r\n\t\tAND cp.crrnt_snpsht_flag = 1\r\n\tJOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_party_occurrence cpo ON cpo.claim_occurrence_ak_id = co.claim_occurrence_ak_id \r\n\t\tAND cpo.claim_party_ak_id = cp.claim_party_ak_id \r\n\t\tAND cpo.source_sys_id = 'EXCEED' \r\n\t\tAND cpo.crrnt_snpsht_flag = 1\n),\nEXP_SQ AS (\n\tSELECT\n\tPREFERRED_CONTACT_METHOD,\n\tclaim_party_occurrence_id,\n\tpreferred_contact_method_target,\n\t-- *INF*: UPPER(:UDF.DEFAULT_VALUE_FOR_STRINGS(PREFERRED_CONTACT_METHOD))\n\tUPPER(:UDF.DEFAULT_VALUE_FOR_STRINGS(PREFERRED_CONTACT_METHOD)) AS o_PREFERRED_CONTACT_METHOD\n\tFROM SQ_ClaimClientStage\n),\nLKP_PreferredContactMethod AS (\n\tSELECT\n\tPreferredContactMethodDescription,\n\tPreferredContactMethodCode\n\tFROM (\n\t\tSELECT \n\t\t\tPreferredContactMethodDescription,\n\t\t\tPreferredContactMethodCode\n\t\tFROM SupClaimPreferredContactMethod\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PreferredContactMethodCode ORDER BY PreferredContactMethodDescription) = 1\n),\nEXP_Derive_PreferredContactMethod_Description AS (\n\tSELECT\n\tEXP_SQ.claim_party_occurrence_id,\n\tEXP_SQ.preferred_contact_method_target,\n\tLKP_PreferredContactMethod.PreferredContactMethodDescription AS lkp_PreferredContactMethodDescription,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(lkp_PreferredContactMethodDescription)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(lkp_PreferredContactMethodDescription) AS o_PreferredContactMethodDescription,\n\t-- *INF*: IIF((NOT ISNULL(claim_party_occurrence_id)) AND \r\n\t-- preferred_contact_method_target <> lkp_PreferredContactMethodDescription, \r\n\t-- 'UPDATE', \r\n\t-- 'NOACTION')\n\tIFF(( NOT claim_party_occurrence_id IS NULL ) AND preferred_contact_method_target <> lkp_PreferredContactMethodDescription, 'UPDATE', 'NOACTION') AS o_Action,\n\tSYSDATE AS modified_date\n\tFROM EXP_SQ\n\tLEFT JOIN LKP_PreferredContactMethod\n\tON LKP_PreferredContactMethod.PreferredContactMethodCode = EXP_SQ.o_PREFERRED_CONTACT_METHOD\n),\nFIL_UpdateRequired AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\to_PreferredContactMethodDescription AS PreferredContactMethodDescription, \n\to_Action, \n\tmodified_date\n\tFROM EXP_Derive_PreferredContactMethod_Description\n\tWHERE o_Action='UPDATE'\n),\nUPDTRANS AS (\n\tSELECT\n\tclaim_party_occurrence_id, \n\tPreferredContactMethodDescription, \n\tmodified_date\n\tFROM FIL_UpdateRequired\n),\nclaim_party_occurrence_UPD_ContactMethod AS (\n\tMERGE INTO claim_party_occurrence AS T\n\tUSING UPDTRANS AS S\n\tON T.claim_party_occurrence_id = S.claim_party_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.modified_date = S.modified_date, T.preferred_contact_method = S.PreferredContactMethodDescription\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_DAYS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DB_NAME_EDW": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}