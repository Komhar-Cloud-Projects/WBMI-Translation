{
    "name": "m_POL_BillingODS_DM_Report_OutOfBalancing_Monthly",
    "properties": {
        "activities": [
            {
                "name": "m_POL_BillingODS_DM_Report_OutOfBalancing_Monthly",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_BillingODS_Commission AS (\n\tSELECT PT.PolicyReference,\r\n\tPT.PolicyTermEffectiveDate,\r\n\tPT.PolicyTermExpirationDate, \r\n\tCONVERT(decimal(19,2),SUM(CA.AuthorizedAmount)) AS Commission,\r\n\tmax(A.AccountReference) as AccountReference\r\n\tFROM dbo.DCBILCommissionAuthorization CA\r\n\tINNER JOIN dbo.DCBILPolicyTerm PT ON CA.PolicyTermId = PT.PolicyTermID \r\n\tINNER JOIN dbo.DCBILAccount A ON CA.AccountId=A.AccountId\r\n\tWHERE CA.TransactionTypeCode != 'WriteOffReversal'\r\n\tAND CA.TransactionTypeCode != 'WriteOff'\r\n\tAND CA.AuthorizationTypeCode = 'AUTO'\r\n\tAND CAST(CA.AuthorizationDateTime as date) between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\tAND PT.PolicyIssueSystemCode = 'DCT'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BILLINGODS_COMM}\r\n\tGROUP BY PT.PolicyReference, PT.PolicyTermEffectiveDate, PT.PolicyTermExpirationDate\n),\nSQ_DM_Commission AS (\n\tSELECT C.pol_num,\r\n\tC.pol_eff_date,\r\n\tC.pol_exp_date,\r\n\tCONVERT(decimal(19,2),sum(PremiumMasterAgencyDirectWrittenCommission)) as PremiumMasterAgencyDirectWrittenCommission\r\n\tFROM dbo.PremiumMasterFact A\r\n\tINNER JOIN dbo.calendar_dim B\r\n\tON A.PremiumMasterRunDateID = B.Clndr_id\r\n\tINNER JOIN dbo.policy_dim C\r\n\tON C.Pol_dim_id = A.policyDimId and C.pol_sym='000'\r\n\tWHERE B.clndr_date between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DM_COMM}\r\n\tGROUP BY C.pol_num, C.pol_eff_date, C.pol_exp_date\n),\nJNR_Commission AS (SELECT\n\tSQ_BillingODS_Commission.PolicyReference, \n\tSQ_BillingODS_Commission.PolicyTermEffectiveDate, \n\tSQ_BillingODS_Commission.PolicyTermExpirationDate, \n\tSQ_BillingODS_Commission.Commission, \n\tSQ_BillingODS_Commission.AccountReference, \n\tSQ_DM_Commission.pol_num, \n\tSQ_DM_Commission.pol_eff_date, \n\tSQ_DM_Commission.pol_exp_date, \n\tSQ_DM_Commission.PremiumMasterAgencyDirectWrittenCommission\n\tFROM SQ_BillingODS_Commission\n\tFULL OUTER JOIN SQ_DM_Commission\n\tON SQ_DM_Commission.pol_num = SQ_BillingODS_Commission.PolicyReference AND SQ_DM_Commission.pol_eff_date = SQ_BillingODS_Commission.PolicyTermEffectiveDate AND SQ_DM_Commission.pol_exp_date = SQ_BillingODS_Commission.PolicyTermExpirationDate\n),\nFIL_Commission AS (\n\tSELECT\n\tPolicyReference, \n\tPolicyTermEffectiveDate, \n\tPolicyTermExpirationDate, \n\tCommission, \n\tAccountReference, \n\tpol_num, \n\tpol_eff_date, \n\tpol_exp_date, \n\tPremiumMasterAgencyDirectWrittenCommission\n\tFROM JNR_Commission\n\tWHERE (\r\nCommission<>PremiumMasterAgencyDirectWrittenCommission OR ISNULL(PolicyReference) OR ISNULL(pol_num)\r\n) AND  NOT (\r\n(ISNULL(Commission) AND PremiumMasterAgencyDirectWrittenCommission=0)\r\n OR \r\n(Commission=0 AND ISNULL(PremiumMasterAgencyDirectWrittenCommission))\r\n)\n),\nEXP_Commission AS (\n\tSELECT\n\tPolicyReference AS i_PolicyReference,\n\tPolicyTermEffectiveDate AS i_PolicyTermEffectiveDate,\n\tPolicyTermExpirationDate AS i_PolicyTermExpirationDate,\n\tCommission AS i_Commission,\n\tAccountReference AS i_AccountReference,\n\tpol_num AS i_pol_num,\n\tpol_eff_date AS i_pol_eff_date,\n\tpol_exp_date AS i_pol_exp_date,\n\tPremiumMasterAgencyDirectWrittenCommission AS i_PremiumMasterAgencyDirectWrittenCommission,\n\t-- *INF*: ADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH})\n\tADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH}) AS v_PreviousMonthDate,\n\t-- *INF*: TO_CHAR(v_PreviousMonthDate, 'Mon YYYY')\n\tTO_CHAR(v_PreviousMonthDate, 'Mon YYYY') AS o_YearMonth,\n\t-- *INF*: IIF(ISNULL(i_PolicyReference), i_pol_num, i_PolicyReference)\n\tIFF(i_PolicyReference IS NULL, i_pol_num, i_PolicyReference) AS o_PolicyNumber,\n\ti_PolicyTermEffectiveDate AS o_SourceEffectiveDate,\n\ti_pol_eff_date AS o_TargetEffectiveDate,\n\t'Validate that $ Commission between BillingODS and DM match for month end reporting.' AS o_ComparisonType,\n\ti_Commission AS o_Amount_From_BillingODS,\n\ti_PremiumMasterAgencyDirectWrittenCommission AS o_Amount_From_DM,\n\ti_AccountReference AS o_BillingAcountNumber\n\tFROM FIL_Commission\n),\nSQ_BillingODS_DWP AS (\n\tSELECT PT.PolicyReference ,\r\n\tPT.PolicyTermEffectiveDate,\r\n\tPT.PolicyTermExpirationDate,\r\n\tCONVERT(DECIMAL(19, 2), COALESCE(SUM(BI.OriginalTransactionAmount - BI.TransferredAmount), 0)) AS DWP,\r\n\tmax(A.AccountReference) as AccountReference\r\n\tFROM dbo.DCBILBillItem BI\r\n\tINNER JOIN dbo.DCBILPolicyTerm PT ON BI.PolicyTermId = PT.PolicyTermId\r\n\tINNER JOIN dbo.DCBILAccount A ON BI.AccountId=A.AccountId\r\n\tWHERE (Case when BI.ItemEffectiveDate>BI.TransactionDate then BI.ItemEffectiveDate else BI.TransactionDate end) between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\tAND BI.ReceivableTypeCode = 'PREM'\r\n\tAND PT.PolicyIssueSystemCode = 'DCT'\r\n\tAND COALESCE(BI.OriginalTransactionAmount - BI.TransferredAmount, 0) <> 0\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BILLINGODS_DWP}\r\n\tGROUP BY PT.PolicyReference\r\n\t, PT.PolicyTermEffectiveDate\r\n\t, PT.PolicyTermExpirationDate\n),\nSQ_DM_DWP AS (\n\tSELECT B.pol_num, \r\n\tB.pol_eff_date, \r\n\tB.pol_exp_date,\r\n\tCONVERT(decimal(19,2), sum(A.PremiumMasterDirectWrittenPremium)) AS PremiumMasterDirectWrittenPremium\r\n\tFROM dbo.PremiumMasterFact A\r\n\tINNER JOIN dbo.policy_dim B ON A.PolicyDimId = B.Pol_dim_id and B.pol_sym='000'\r\n\tINNER JOIN dbo.calendar_dim C ON A.PremiumMasterRunDateID = C.clndr_id\r\n\tWHERE C.CalendarDate between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DM_DWP}\r\n\tGROUP BY B.pol_num, B.pol_eff_date, B.pol_exp_date\n),\nJNR_DWP AS (SELECT\n\tSQ_BillingODS_DWP.PolicyReference, \n\tSQ_BillingODS_DWP.PolicyTermEffectiveDate, \n\tSQ_BillingODS_DWP.PolicyTermExpirationDate, \n\tSQ_BillingODS_DWP.DWP, \n\tSQ_BillingODS_DWP.AccountReference, \n\tSQ_DM_DWP.pol_num, \n\tSQ_DM_DWP.pol_eff_date, \n\tSQ_DM_DWP.pol_exp_date, \n\tSQ_DM_DWP.PremiumMasterDirectWrittenPremium\n\tFROM SQ_BillingODS_DWP\n\tFULL OUTER JOIN SQ_DM_DWP\n\tON SQ_DM_DWP.pol_num = SQ_BillingODS_DWP.PolicyReference AND SQ_DM_DWP.pol_eff_date = SQ_BillingODS_DWP.PolicyTermEffectiveDate AND SQ_DM_DWP.pol_exp_date = SQ_BillingODS_DWP.PolicyTermExpirationDate\n),\nFIL_DWP AS (\n\tSELECT\n\tPolicyReference, \n\tPolicyTermEffectiveDate, \n\tPolicyTermExpirationDate, \n\tDWP, \n\tAccountReference, \n\tpol_num, \n\tpol_eff_date, \n\tpol_exp_date, \n\tPremiumMasterDirectWrittenPremium\n\tFROM JNR_DWP\n\tWHERE (\r\nDWP<>PremiumMasterDirectWrittenPremium OR ISNULL(PolicyReference) OR ISNULL(pol_num)\r\n) AND  \r\n NOT (\r\n(ISNULL(DWP) AND PremiumMasterDirectWrittenPremium=0)\r\n OR \r\n(DWP=0 AND ISNULL(PremiumMasterDirectWrittenPremium))\r\n)\n),\nEXP_DWP AS (\n\tSELECT\n\tPolicyReference AS i_PolicyReference,\n\tPolicyTermEffectiveDate AS i_PolicyTermEffectiveDate,\n\tPolicyTermExpirationDate AS i_PolicyTermExpirationDate,\n\tDWP AS i_DWP,\n\tAccountReference AS i_AccountReference,\n\tpol_num AS i_pol_num,\n\tpol_eff_date AS i_pol_eff_date,\n\tpol_exp_date AS i_pol_exp_date,\n\tPremiumMasterDirectWrittenPremium AS i_PremiumMasterDirectWrittenPremium,\n\t-- *INF*: ADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH})\n\tADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH}) AS v_PreviousMonthDate,\n\t-- *INF*: TO_CHAR(v_PreviousMonthDate, 'Mon YYYY')\n\tTO_CHAR(v_PreviousMonthDate, 'Mon YYYY') AS o_YearMonth,\n\t-- *INF*: IIF(ISNULL(i_PolicyReference), i_pol_num, i_PolicyReference)\n\tIFF(i_PolicyReference IS NULL, i_pol_num, i_PolicyReference) AS o_PolicyNumber,\n\ti_PolicyTermEffectiveDate AS o_SourceEffectiveDate,\n\ti_pol_eff_date AS o_TargetEffectiveDate,\n\t'Validate that $ DWP between BillingODS and DM match for month end reporting.' AS o_ComparisonType,\n\ti_DWP AS o_Amount_From_BillingODS,\n\ti_PremiumMasterDirectWrittenPremium AS o_Amount_From_DM,\n\ti_AccountReference AS o_BillingAccountNumber\n\tFROM FIL_DWP\n),\nSQ_BillingODS_PassThrough AS (\n\tSELECT PT.PolicyReference,\r\n\tPT.PolicyTermEffectiveDate,\r\n\tPT.PolicyTermExpirationDate,\r\n\tCONVERT(DECIMAL(19, 2), COALESCE(SUM(BI.OriginalTransactionAmount - BI.TransferredAmount), 0)) AS PassThroughAmount,\r\n\tmax(A.AccountReference) as AccountReference\r\n\tFROM dbo.DCBILBillItem BI\r\n\tINNER JOIN dbo.DCBILPolicyTerm PT ON BI.PolicyTermId = PT.PolicyTermId\r\n\tINNER JOIN dbo.DCBILAccount A ON BI.AccountId=A.AccountId\r\n\tWHERE BI.ReceivableTypeCode = 'TAX'\r\n\tAND PT.PolicyIssueSystemCode = 'DCT'\r\n\tAND (Case when BI.ItemEffectiveDate>BI.TransactionDate then BI.ItemEffectiveDate else BI.TransactionDate end) between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BILLINGODS_PASS}\r\n\tGROUP BY PT.PolicyReference\r\n\t, PT.PolicyTermEffectiveDate\r\n\t, PT.PolicyTermExpirationDate\n),\nSQ_DM_PassThrough AS (\n\tSELECT B.pol_num,\r\n\tB.pol_eff_date,\r\n\tB.pol_exp_date,\r\n\tCONVERT(decimal(19,2), sum(PassThroughChargeTransactionAmount)) AS PassThroughChargeTransactionAmount\r\n\tFROM dbo.PassThroughChargeTransactionFact A\r\n\tINNER JOIN dbo.policy_dim B ON A.PolicyDimId = B.Pol_dim_id AND B.pol_sym='000'\r\n\tINNER JOIN dbo.calendar_dim C ON A.PassThroughChargeTransactionBookedDateId = C.clndr_id\r\n\tWHERE C.CalendarDate between DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+DATEDIFF(MONTH,0,getdate()),0) and DATEADD(S,-1,DATEADD(MONTH,@{pipeline().parameters.NO_OF_MONTH}+1+DATEDIFF(MONTH,0,getdate()),0))\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DM_PASS}\r\n\tGROUP BY B.pol_num, B.pol_eff_date, B.pol_exp_date\n),\nJNR_PassThrough AS (SELECT\n\tSQ_BillingODS_PassThrough.PolicyReference, \n\tSQ_BillingODS_PassThrough.PolicyTermEffectiveDate, \n\tSQ_BillingODS_PassThrough.PolicyTermExpirationDate, \n\tSQ_BillingODS_PassThrough.PassThroughAmount, \n\tSQ_BillingODS_PassThrough.AccountReference, \n\tSQ_DM_PassThrough.pol_num, \n\tSQ_DM_PassThrough.pol_eff_date, \n\tSQ_DM_PassThrough.pol_exp_date, \n\tSQ_DM_PassThrough.PassThroughChargeTransactionAmount\n\tFROM SQ_BillingODS_PassThrough\n\tFULL OUTER JOIN SQ_DM_PassThrough\n\tON SQ_DM_PassThrough.pol_num = SQ_BillingODS_PassThrough.PolicyReference AND SQ_DM_PassThrough.pol_eff_date = SQ_BillingODS_PassThrough.PolicyTermEffectiveDate AND SQ_DM_PassThrough.pol_exp_date = SQ_BillingODS_PassThrough.PolicyTermExpirationDate\n),\nFIL_PassThrough AS (\n\tSELECT\n\tPolicyReference, \n\tPolicyTermEffectiveDate, \n\tPolicyTermExpirationDate, \n\tPassThroughAmount, \n\tAccountReference, \n\tpol_num, \n\tpol_eff_date, \n\tpol_exp_date, \n\tPassThroughChargeTransactionAmount\n\tFROM JNR_PassThrough\n\tWHERE (\r\nPassThroughAmount<>PassThroughChargeTransactionAmount OR ISNULL(PolicyReference) OR ISNULL(pol_num)\r\n) AND  NOT (\r\n(ISNULL(PassThroughAmount) AND PassThroughChargeTransactionAmount=0)\r\n OR \r\n(PassThroughAmount=0 AND ISNULL(PassThroughChargeTransactionAmount))\r\n)\n),\nEXP_PassThrough AS (\n\tSELECT\n\tPolicyReference AS i_PolicyReference,\n\tPolicyTermEffectiveDate AS i_PolicyTermEffectiveDate,\n\tPolicyTermExpirationDate AS i_PolicyTermExpirationDate,\n\tPassThroughAmount AS i_PassThroughAmount,\n\tAccountReference AS i_AccountReference,\n\tpol_num AS i_pol_num,\n\tpol_eff_date AS i_pol_eff_date,\n\tpol_exp_date AS i_pol_exp_date,\n\tPassThroughChargeTransactionAmount AS i_PassThroughChargeTransactionAmount,\n\t-- *INF*: ADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH})\n\tADD_TO_DATE(SESSSTARTTIME, 'MM', @{pipeline().parameters.NUMOFMONTH}) AS v_PreviousMonthDate,\n\t-- *INF*: TO_CHAR(v_PreviousMonthDate, 'Mon YYYY')\n\tTO_CHAR(v_PreviousMonthDate, 'Mon YYYY') AS o_YearMonth,\n\t-- *INF*: IIF(ISNULL(i_PolicyReference), i_pol_num, i_PolicyReference)\n\tIFF(i_PolicyReference IS NULL, i_pol_num, i_PolicyReference) AS o_PolicyNumber,\n\ti_PolicyTermEffectiveDate AS o_SourceEffectiveDate,\n\ti_pol_eff_date AS o_TargetEffectiveDate,\n\t'Validate that $ Pass Through between BillingODS and DM match for month end reporting.' AS o_ComparisonType,\n\ti_PassThroughAmount AS o_Amount_From_BillingODS,\n\ti_PassThroughChargeTransactionAmount AS o_Amount_From_DM,\n\ti_AccountReference AS o_BillingAccountNumber\n\tFROM FIL_PassThrough\n),\nUnion AS (\n\tSELECT o_YearMonth AS YearMonth, o_PolicyNumber AS PolicyNumber, o_SourceEffectiveDate AS SourceEffectiveDate, o_TargetEffectiveDate AS TargetEffectiveDate, o_ComparisonType AS ComparisonType, o_Amount_From_BillingODS AS Amount_From_BillingODS, o_Amount_From_DM AS Amount_From_DM, o_BillingAccountNumber AS BillingAccountNumber\n\tFROM EXP_DWP\n\tUNION\n\tSELECT o_YearMonth AS YearMonth, o_PolicyNumber AS PolicyNumber, o_SourceEffectiveDate AS SourceEffectiveDate, o_TargetEffectiveDate AS TargetEffectiveDate, o_ComparisonType AS ComparisonType, o_Amount_From_BillingODS AS Amount_From_BillingODS, o_Amount_From_DM AS Amount_From_DM, o_BillingAccountNumber AS BillingAccountNumber\n\tFROM EXP_PassThrough\n\tUNION\n\tSELECT o_YearMonth AS YearMonth, o_PolicyNumber AS PolicyNumber, o_SourceEffectiveDate AS SourceEffectiveDate, o_TargetEffectiveDate AS TargetEffectiveDate, o_ComparisonType AS ComparisonType, o_Amount_From_BillingODS AS Amount_From_BillingODS, o_Amount_From_DM AS Amount_From_DM, o_BillingAcountNumber AS BillingAccountNumber\n\tFROM EXP_Commission\n),\nEXP_FileName AS (\n\tSELECT\n\tPolicyNumber AS i_PolicyNumber,\n\tSourceEffectiveDate,\n\tTargetEffectiveDate,\n\tComparisonType,\n\tAmount_From_BillingODS,\n\tAmount_From_DM,\n\tBillingAccountNumber AS i_BillingAccountNumber,\n\t-- *INF*: IIF(ISNULL(Amount_From_BillingODS), 0, Amount_From_BillingODS)\n\tIFF(Amount_From_BillingODS IS NULL, 0, Amount_From_BillingODS) AS v_Amount_From_BillingODS,\n\t-- *INF*: IIF(ISNULL(Amount_From_DM), 0, Amount_From_DM)\n\tIFF(Amount_From_DM IS NULL, 0, Amount_From_DM) AS v_Amount_From_DM,\n\t-- *INF*: CHR(39) || i_BillingAccountNumber\n\tCHR(39) || i_BillingAccountNumber AS o_BillingAccountNumber,\n\t-- *INF*: IIF(SUBSTR(i_PolicyNumber, 1, 1)='0', CHR(39) || i_PolicyNumber, i_PolicyNumber)\n\tIFF(SUBSTR(i_PolicyNumber, 1, 1) = '0', CHR(39) || i_PolicyNumber, i_PolicyNumber) AS o_PolicyNumber,\n\tv_Amount_From_BillingODS - v_Amount_From_DM AS o_Difference\n\tFROM Union\n),\nLKP_wbmi_checkout AS (\n\tSELECT\n\tWBMIChecksAndBalancingRuleID,\n\tWBMIBalancingRuleDescription\n\tFROM (\n\t\tSELECT \n\t\t\tWBMIChecksAndBalancingRuleID,\n\t\t\tWBMIBalancingRuleDescription\n\t\tFROM WBMIChecksAndBalancingRule\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WBMIBalancingRuleDescription ORDER BY WBMIChecksAndBalancingRuleID) = 1\n),\nTGT_BillingODS_DM_OutOfBalancing_Report AS (\n\tINSERT INTO BillingODS_DM_OutOfBalancing_Report\n\t(RuleId, RuleDescription, BillingAccountNumber, Policy, BillingODSAmount, DataMartAmount, Difference, BillingODSEffectiveDate, DataMartEffectiveDate)\n\tSELECT \n\tLKP_wbmi_checkout.WBMIChecksAndBalancingRuleID AS RULEID, \n\tEXP_FileName.ComparisonType AS RULEDESCRIPTION, \n\tEXP_FileName.o_BillingAccountNumber AS BILLINGACCOUNTNUMBER, \n\tEXP_FileName.o_PolicyNumber AS POLICY, \n\tEXP_FileName.Amount_From_BillingODS AS BILLINGODSAMOUNT, \n\tEXP_FileName.Amount_From_DM AS DATAMARTAMOUNT, \n\tEXP_FileName.o_Difference AS DIFFERENCE, \n\tEXP_FileName.SourceEffectiveDate AS BILLINGODSEFFECTIVEDATE, \n\tEXP_FileName.TargetEffectiveDate AS DATAMARTEFFECTIVEDATE\n\tFROM EXP_FileName\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "NO_OF_MONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BILLINGODS_COMM": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DM_COMM": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUMOFMONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BILLINGODS_DWP": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DM_DWP": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BILLINGODS_PASS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DM_PASS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}