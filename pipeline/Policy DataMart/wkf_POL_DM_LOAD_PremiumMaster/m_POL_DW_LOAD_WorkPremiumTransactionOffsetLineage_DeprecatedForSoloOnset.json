{
    "name": "m_POL_DW_LOAD_WorkPremiumTransactionOffsetLineage_DeprecatedForSoloOnset",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkPremiumTransactionOffsetLineage_De_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkPremiumTransactionOnsetOffsetPreProcessing AS (\n\tselect \r\n\tLineage.PolicyKey,\r\n\tLineage.RatingCoverageAKID,\r\n\tLineage.PremiumTransactionID,\r\n\tLineage.PremiumTransactionAKID,\r\n\tLineage.PreviousPremiumTransactionID,\r\n\tLineage.PreviousPremiumTransactionAKID\r\n\tfrom \r\n\t(select \r\n\tdeprecatedOnset.PolicyKey,\r\n\tdeprecatedOnset.RatingCoverageAKID,\r\n\tdeprecatedOnset.PremiumTransactionID,\r\n\tdeprecatedOnset.PremiumTransactionAKID,\r\n\tonset.PremiumTransactionID as PreviousPremiumTransactionID,\r\n\tonset.PremiumTransactionAKID as PreviousPremiumTransactionAKID,\r\n\tROW_NUMBER() OVER (PARTITION BY deprecatedOnset.PremiumTransactionAKID ORDER BY onset.WorkPremiumTransactionOnsetOffsetPreProcessingId DESC) AS RowNum\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransactionOnsetOffsetPreProcessing deprecatedOnset WITH (NOLOCK)\r\n\t\r\n\t  INNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransactionOnsetOffsetPreProcessing onset on\r\n\t  onset.OffsetOnsetCode IN ('N/A', 'Onset')\r\n\t  AND onset.PolicyKey = deprecatedOnset.PolicyKey\r\n\t  AND onset.RatingCoverageAKID = deprecatedOnset.RatingCoverageAKID\r\n\t  AND onset.WorkPremiumTransactionOnsetOffsetPreProcessingId < deprecatedOnset.WorkPremiumTransactionOnsetOffsetPreProcessingId\r\n\t  -- The onset occurred before the Deprecated\r\n\t  AND (\r\n\t   onset.DCTTransactionSequence < deprecatedOnset.DCTTransactionSequence\r\n\t   OR (\r\n\t    onset.DCTTransactionSequence = deprecatedOnset.DCTTransactionSequence\r\n\t    AND onset.DCTTransactionIndex < deprecatedOnset.DCTTransactionIndex\r\n\t    )\r\n\t   )\r\n\t  -- This Deprecated row deprecates this onset\r\n\t  AND deprecatedOnset.DCTTransactionGuid = onset.DCTTransactionGuid\r\n\t  -- This onset came in without an Offset\r\n\t  AND NOT EXISTS (SELECT 1\r\n\t   FROM dbo.WorkPremiumTransactionOnsetOffsetPreProcessing offset WITH (NOLOCK)\r\n\t   WHERE offset.OffsetOnsetCode = 'Offset'\r\n\t   AND onset.PolicyKey = offset.PolicyKey\r\n\t   AND onset.RatingCoverageAKID = offset.RatingCoverageAKID\r\n\t   AND onset.DCTCoverageId = offset.DCTCoverageId\r\n\t   )\r\n\t   \r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction ptDepOnset on\r\n\t   deprecatedOnset.PremiumTransactionID = ptDepOnset.PremiumTransactionID\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction ptOnset on\r\n\t   onset.PremiumTransactionID = ptOnset.PremiumTransactionID   \r\n\t   AND ptDepOnset.PremiumTransactionAmount = (ptOnset.PremiumTransactionAmount * - 1.0)\r\n\twhere deprecatedOnset.OffsetOnsetCode = 'Deprecated' \r\n\t @{pipeline().parameters.INCREMENTALLOADFILTER}\r\n\t) Lineage\r\n\tWHERE Lineage.RowNum = 1\n),\nLKP_WorkPremiumTransactionOffsetLineage AS (\n\tSELECT\n\tWorkPremiumTransactionOffsetLineageId,\n\tPremiumTransactionID,\n\tin_PremiumTransactionID\n\tFROM (\n\t\tSELECT \n\t\t\tWorkPremiumTransactionOffsetLineageId,\n\t\t\tPremiumTransactionID,\n\t\t\tin_PremiumTransactionID\n\t\tFROM WorkPremiumTransactionOffsetLineage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY WorkPremiumTransactionOffsetLineageId) = 1\n),\nEXP_Pass_Value AS (\n\tSELECT\n\tLKP_WorkPremiumTransactionOffsetLineage.WorkPremiumTransactionOffsetLineageId,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PolicyKey,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.RatingCoverageAKID,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PremiumTransactionID,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PremiumTransactionAKID,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PreviousPremiumTransactionID,\n\tSQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PreviousPremiumTransactionAKID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t'1' AS UpdateAttributeFlag,\n\t-- *INF*: IIF ( ISNULL(WorkPremiumTransactionOffsetLineageId ), 'Insert','Update')\n\tIFF(WorkPremiumTransactionOffsetLineageId IS NULL, 'Insert', 'Update') AS o_flag\n\tFROM SQ_WorkPremiumTransactionOnsetOffsetPreProcessing\n\tLEFT JOIN LKP_WorkPremiumTransactionOffsetLineage\n\tON LKP_WorkPremiumTransactionOffsetLineage.PremiumTransactionID = SQ_WorkPremiumTransactionOnsetOffsetPreProcessing.PremiumTransactionID\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tWorkPremiumTransactionOffsetLineageId,\n\tPolicyKey,\n\tRatingCoverageAKID,\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tPreviousPremiumTransactionID,\n\tPreviousPremiumTransactionAKID,\n\tAuditID,\n\tCreatedDate,\n\tModifiedDate,\n\tUpdateAttributeFlag,\n\to_flag\n\tFROM EXP_Pass_Value\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE o_flag='Insert'),\nRTR_Insert_Update_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE o_flag='Update'),\nUPD_WorkPremiumTransactionOffsetLineage AS (\n\tSELECT\n\tWorkPremiumTransactionOffsetLineageId AS WorkPremiumTransactionOffsetLineageId3, \n\tPolicyKey AS PolicyKey3, \n\tRatingCoverageAKID AS RatingCoverageAKID3, \n\tPremiumTransactionID AS PremiumTransactionID3, \n\tPremiumTransactionAKID AS PremiumTransactionAKID3, \n\tPreviousPremiumTransactionID AS PreviousPremiumTransactionID3, \n\tPreviousPremiumTransactionAKID AS PreviousPremiumTransactionAKID3, \n\tModifiedDate AS ModifiedDate3, \n\tUpdateAttributeFlag AS UpdateAttributeFlag3\n\tFROM RTR_Insert_Update_UPDATE\n),\nWorkPremiumTransactionOffsetLineage_Upd AS (\n\tMERGE INTO WorkPremiumTransactionOffsetLineage AS T\n\tUSING UPD_WorkPremiumTransactionOffsetLineage AS S\n\tON T.WorkPremiumTransactionOffsetLineageId = S.WorkPremiumTransactionOffsetLineageId3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate3, T.PolicyKey = S.PolicyKey3, T.RatingCoverageAKID = S.RatingCoverageAKID3, T.PremiumTransactionID = S.PremiumTransactionID3, T.PremiumTransactionAKID = S.PremiumTransactionAKID3, T.PreviousPremiumTransactionID = S.PreviousPremiumTransactionID3, T.PreviousPremiumTransactionAKID = S.PreviousPremiumTransactionAKID3, T.UpdateAttributeFlag = S.UpdateAttributeFlag3\n),\nWorkPremiumTransactionOffsetLineage_Ins AS (\n\tINSERT INTO WorkPremiumTransactionOffsetLineage\n\t(AuditID, CreatedDate, ModifiedDate, PolicyKey, RatingCoverageAKID, PremiumTransactionID, PremiumTransactionAKID, PreviousPremiumTransactionID, PreviousPremiumTransactionAKID, UpdateAttributeFlag)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\tRATINGCOVERAGEAKID, \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONAKID, \n\tPREVIOUSPREMIUMTRANSACTIONID, \n\tPREVIOUSPREMIUMTRANSACTIONAKID, \n\tUPDATEATTRIBUTEFLAG\n\tFROM RTR_Insert_Update_INSERT\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244793"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893107"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542399"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 06:20:48"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 11:17:11"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "DATAMART_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Data_Mart"
            },
            "INCREMENTALLOADFILTER": {
                "type": "string",
                "defaultValue": "AND EXISTS (SELECT 1 FROM $$SOURCE_TABLE_OWNER.PremiumMasterCalculation PMC1 WITH (NOLOCK) WHERE PMC1.PremiumTransactionAKID = ptDepOnset.PremiumTransactionAKID and PMC1.SourceSystemID='DCT' and PMC1.PremiumMasterRunDate=DATEADD(ss,-1,cast(DATEADD(DD,1,EOMONTH(DATEADD(MM,-1,GETDATE()))) as DATETIME)))"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}