{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBCFRiskStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBCFRiskStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_CF_Risk AS (\n\tWITH cte_WBCFRisk(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CF_RiskId, \r\n\tX.WB_CF_RiskId, \r\n\tX.SessionId, \r\n\tX.PurePremium, \r\n\tX.OriginalPackageModifier, \r\n\tX.CurrentFiledRatesBG1, \r\n\tX.CurrentFiledRatesBG2, \r\n\tX.CurrentFiledRatesAllOther, \r\n\tX.ExpiringRatesBG1, \r\n\tX.ExpiringRatesBG2, \r\n\tX.ExpiringRatesAllOther, \r\n\tX.DifferenceBG1, \r\n\tX.DifferenceBG2, \r\n\tX.DifferenceAllOther, \r\n\tX.AdjustmentBG1, \r\n\tX.One, \r\n\tX.AdjustmentBG2, \r\n\tX.AdjustmentAllOther, \r\n\tX.Selected, \r\n\tX.LastExpiringRatesBG1, \r\n\tX.LastExpiringRatesBG2, \r\n\tX.LastExpiringRatesAllOther, \r\n\tX.Year1Adj, \r\n\tX.Year2Adj, \r\n\tX.Year3Adj, \r\n\tX.Year1AdjBG2, \r\n\tX.Year2AdjBG2, \r\n\tX.Year3AdjBG2, \r\n\tX.Year1AdjAllOther, \r\n\tX.Year2AdjAllOther, \r\n\tX.Year3AdjAllOther, \r\n\tX.ExpiringRatesCaption, \r\n\tX.CurrentFiledRatesCaption, \r\n\tX.DifferenceCaption, \r\n\tX.AdjustmentFactorCaption, \r\n\tX.HeaderExpiringRates, \r\n\tX.HeaderCurrentFiledRates, \r\n\tX.HeaderDifference, \r\n\tX.HeaderAdjustmentFactor, \r\n\tX.RiskID, \r\n\tX.BuildingID \r\n\tFROM\r\n\tWB_CF_Risk X\r\n\tinner join\r\n\tcte_WBCFRisk Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tCF_RiskId,\n\tWB_CF_RiskId,\n\tSessionId,\n\tPurePremium,\n\tOriginalPackageModifier,\n\tCurrentFiledRatesBG1,\n\tCurrentFiledRatesBG2,\n\tCurrentFiledRatesAllOther,\n\tExpiringRatesBG1,\n\tExpiringRatesBG2,\n\tExpiringRatesAllOther,\n\tDifferenceBG1,\n\tDifferenceBG2,\n\tDifferenceAllOther,\n\tAdjustmentBG1,\n\tOne,\n\tAdjustmentBG2,\n\tAdjustmentAllOther,\n\tSelected AS i_Selected,\n\t-- *INF*: DECODE(i_Selected, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_Selected,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_Selected,\n\tLastExpiringRatesBG1,\n\tLastExpiringRatesBG2,\n\tLastExpiringRatesAllOther,\n\tYear1Adj,\n\tYear2Adj,\n\tYear3Adj,\n\tYear1AdjBG2,\n\tYear2AdjBG2,\n\tYear3AdjBG2,\n\tYear1AdjAllOther,\n\tYear2AdjAllOther,\n\tYear3AdjAllOther,\n\tExpiringRatesCaption,\n\tCurrentFiledRatesCaption,\n\tDifferenceCaption,\n\tAdjustmentFactorCaption,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tHeaderExpiringRates,\n\tHeaderCurrentFiledRates,\n\tHeaderDifference,\n\tHeaderAdjustmentFactor,\n\tRiskID,\n\tBuildingID\n\tFROM SQ_WB_CF_Risk\n),\nWBCFRiskStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCFRiskStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCFRiskStage\n\t(ExtractDate, SourceSystemId, CF_RiskId, WB_CF_RiskId, SessionId, PurePremium, OriginalPackageModifier, CurrentFiledRatesBG1, CurrentFiledRatesBG2, CurrentFiledRatesAllOther, Selected, ExpiringRatesBG1, ExpiringRatesBG2, ExpiringRatesAllOther, DifferenceBG1, DifferenceBG2, DifferenceAllOther, AdjustmentBG1, One, AdjustmentBG2, AdjustmentAllOther, LastExpiringRatesBG1, LastExpiringRatesBG2, LastExpiringRatesAllOther, Year1Adj, Year2Adj, Year3Adj, Year1AdjBG2, Year2AdjBG2, Year3AdjBG2, Year1AdjAllOther, Year2AdjAllOther, Year3AdjAllOther, ExpiringRatesCaption, CurrentFiledRatesCaption, DifferenceCaption, AdjustmentFactorCaption, HeaderExpiringRates, HeaderCurrentFiledRates, HeaderDifference, HeaderAdjustmentFactor, RiskID, BuildingID)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCF_RISKID, \n\tWB_CF_RISKID, \n\tSESSIONID, \n\tPUREPREMIUM, \n\tORIGINALPACKAGEMODIFIER, \n\tCURRENTFILEDRATESBG1, \n\tCURRENTFILEDRATESBG2, \n\tCURRENTFILEDRATESALLOTHER, \n\to_Selected AS SELECTED, \n\tEXPIRINGRATESBG1, \n\tEXPIRINGRATESBG2, \n\tEXPIRINGRATESALLOTHER, \n\tDIFFERENCEBG1, \n\tDIFFERENCEBG2, \n\tDIFFERENCEALLOTHER, \n\tADJUSTMENTBG1, \n\tONE, \n\tADJUSTMENTBG2, \n\tADJUSTMENTALLOTHER, \n\tLASTEXPIRINGRATESBG1, \n\tLASTEXPIRINGRATESBG2, \n\tLASTEXPIRINGRATESALLOTHER, \n\tYEAR1ADJ, \n\tYEAR2ADJ, \n\tYEAR3ADJ, \n\tYEAR1ADJBG2, \n\tYEAR2ADJBG2, \n\tYEAR3ADJBG2, \n\tYEAR1ADJALLOTHER, \n\tYEAR2ADJALLOTHER, \n\tYEAR3ADJALLOTHER, \n\tEXPIRINGRATESCAPTION, \n\tCURRENTFILEDRATESCAPTION, \n\tDIFFERENCECAPTION, \n\tADJUSTMENTFACTORCAPTION, \n\tHEADEREXPIRINGRATES, \n\tHEADERCURRENTFILEDRATES, \n\tHEADERDIFFERENCE, \n\tHEADERADJUSTMENTFACTOR, \n\tRISKID, \n\tBUILDINGID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}