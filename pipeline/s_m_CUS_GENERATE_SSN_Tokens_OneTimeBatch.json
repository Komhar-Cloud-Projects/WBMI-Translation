{
    "name": "s_m_CUS_GENERATE_SSN_Tokens_OneTimeBatch",
    "properties": {
        "activities": [
            {
                "name": "m_CUS_GENERATE_SSN_Tokens_OneTimeBatch",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nExceed_Claim_Customer AS (\n\tSELECT DISTINCT Exceed_Claim_Customer.Tax_Ssn_Id \r\n\tFROM\r\n\t Exceed_Claim_Customer\n),\nEXP_Exceed_Claim_Customer AS (\n\tSELECT\n\tTax_Ssn_Id\n\tFROM Exceed_Claim_Customer\n),\nPMS_ADJUSTER_MASTER_STAGE AS (\n\tSELECT Distinct PMS_ADJUSTER_MASTER_STAGE.ADNM_TAXID_SSN \r\n\tFROM\r\n\t PMS_ADJUSTER_MASTER_STAGE\n),\nEXP_PMS_ADJUSTER_MASTER_STAGE AS (\n\tSELECT\n\tADNM_TAXID_SSN\n\tFROM PMS_ADJUSTER_MASTER_STAGE\n),\nPms_Claim_Customer AS (\n\tSELECT Distinct Pms_Claim_Customer.Tax_Ssn_Id \r\n\tFROM\r\n\t Pms_Claim_Customer\n),\nEXP_Pms_Claim_Customer AS (\n\tSELECT\n\tTax_Ssn_Id\n\tFROM Pms_Claim_Customer\n),\npif_42gj_stage AS (\n\tSELECT DISTINCT pif_42gj_stage.ipfc4j_id_number \r\n\tFROM\r\n\t pif_42gj_stage\n),\nEXP_pif_42gj_stage AS (\n\tSELECT\n\tipfc4j_id_number\n\tFROM pif_42gj_stage\n),\nUnion AS (\n\tSELECT Tax_Ssn_Id\n\tFROM EXP_Exceed_Claim_Customer\n\tUNION\n\tSELECT ADNM_TAXID_SSN AS Tax_Ssn_Id\n\tFROM EXP_PMS_ADJUSTER_MASTER_STAGE\n\tUNION\n\tSELECT Tax_Ssn_Id\n\tFROM EXP_Pms_Claim_Customer\n\tUNION\n\tSELECT ipfc4j_id_number AS Tax_Ssn_Id\n\tFROM EXP_pif_42gj_stage\n),\nEXP_Value AS (\n\tSELECT\n\tTax_Ssn_Id AS i_taxid_ssn,\n\t-- *INF*: IIF(REG_MATCH(i_taxid_ssn,'[\\da-zA-Z]+'),'FALSE',(LTRIM(RTRIM(i_taxid_ssn))))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --(LTRIM(RTRIM(i_taxid_ssn)))\n\tIFF(REGEXP_LIKE(i_taxid_ssn, '[\\da-zA-Z]+'), 'FALSE', (LTRIM(RTRIM(i_taxid_ssn)))) AS o_taxid_ssn\n\tFROM Union\n),\nmplt_SSN_Check AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_SSN_FEIN_TAXID AS (\n\t\tSELECT\n\t\tIN_id AS id,\n\t\tIN_ssn_fein_id AS ssn_fein_taxid,\n\t\t-- *INF*: LTRIM(RTRIM(ssn_fein_taxid))\n\t\tLTRIM(RTRIM(ssn_fein_taxid)) AS V_ssn_fein_taxid,\n\t\t-- *INF*: IIF( SUBSTR(V_ssn_fein_taxid,3,1)='-' OR  (SUBSTR(V_ssn_fein_taxid,1,3)='000' AND (LENGTH(V_ssn_fein_taxid)=9 ) ) OR SUBSTR(V_ssn_fein_taxid,2,1)='-'  OR   (TO_INTEGER(SUBSTR(V_ssn_fein_taxid,1,3))>=750 AND (LENGTH(V_ssn_fein_taxid)=9 ) )OR ISNULL(V_ssn_fein_taxid) OR (V_ssn_fein_taxid='N/A')   OR REG_MATCH(V_ssn_fein_taxid,'[*]*') OR(REG_MATCH(V_ssn_fein_taxid,'[\\da-zA-Z]+') AND (LENGTH(V_ssn_fein_taxid)=11 OR LENGTH(V_ssn_fein_taxid)=10) )\r\n\t\t--  OR ((SUBSTR(V_ssn_fein_taxid,4,1)='-')  AND  (LENGTH(V_ssn_fein_taxid) != 11 )) OR (LENGTH(V_ssn_fein_taxid)<=6 ) OR  (LENGTH(V_ssn_fein_taxid)>11 ) ,'FEIN','NONFEIN')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(\n\t\t    SUBSTR(V_ssn_fein_taxid, 3, 1) = '-'\n\t\t    or (SUBSTR(V_ssn_fein_taxid, 1, 3) = '000'\n\t\t    and (LENGTH(V_ssn_fein_taxid) = 9))\n\t\t    or SUBSTR(V_ssn_fein_taxid, 2, 1) = '-'\n\t\t    or (CAST(SUBSTR(V_ssn_fein_taxid, 1, 3) AS INTEGER) >= 750\n\t\t    and (LENGTH(V_ssn_fein_taxid) = 9))\n\t\t    or V_ssn_fein_taxid IS NULL\n\t\t    or (V_ssn_fein_taxid = 'N/A')\n\t\t    or REGEXP_LIKE(V_ssn_fein_taxid, '[*]*')\n\t\t    or (REGEXP_LIKE(V_ssn_fein_taxid, '[\\da-zA-Z]+')\n\t\t    and (LENGTH(V_ssn_fein_taxid) = 11\n\t\t    or LENGTH(V_ssn_fein_taxid) = 10))\n\t\t    or ((SUBSTR(V_ssn_fein_taxid, 4, 1) = '-')\n\t\t    and (LENGTH(V_ssn_fein_taxid) != 11))\n\t\t    or (LENGTH(V_ssn_fein_taxid) <= 6)\n\t\t    or (LENGTH(V_ssn_fein_taxid) > 11),\n\t\t    'FEIN',\n\t\t    'NONFEIN'\n\t\t) AS V_flag,\n\t\tV_flag AS flag,\n\t\t-- *INF*: IIF(LENGTH(V_ssn_fein_taxid)>=7 AND LENGTH(V_ssn_fein_taxid)<=8,LPAD(V_ssn_fein_taxid,9,'0'),V_ssn_fein_taxid)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(\n\t\t    LENGTH(V_ssn_fein_taxid) >= 7 AND LENGTH(V_ssn_fein_taxid) <= 8,\n\t\t    LPAD(V_ssn_fein_taxid, 9, '0'),\n\t\t    V_ssn_fein_taxid\n\t\t) AS V_taxid,\n\t\t-- *INF*: IIF(REG_MATCH(V_taxid,'[0-9-]*') ,V_taxid,'X')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(REGEXP_LIKE(V_taxid, '[0-9-]*'), V_taxid, 'X') AS V_valid_taxid,\n\t\tV_valid_taxid AS flag_TaxId,\n\t\t-- *INF*: IIF(LENGTH(V_valid_taxid)=9  AND (REG_MATCH(V_valid_taxid,'^[0-9]*$'))  ,(SUBSTR(V_valid_taxid, 1, 3) ||'-'||SUBSTR(V_valid_taxid, 4, 2)||'-'||SUBSTR(V_valid_taxid, 6, 4)) ,V_valid_taxid)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(\n\t\t    LENGTH(V_valid_taxid) = 9 AND (REGEXP_LIKE(V_valid_taxid, '^[0-9]*$')),\n\t\t    (SUBSTR(V_valid_taxid, 1, 3) || '-' || SUBSTR(V_valid_taxid, 4, 2) || '-' || SUBSTR(V_valid_taxid, 6, 4)),\n\t\t    V_valid_taxid\n\t\t) AS OUT_taxid\n\t\tFROM INPUT\n\t),\n\tRTR_SSN_FEIN_TAXID AS (\n\t\tSELECT\n\t\tid,\n\t\tflag,\n\t\tssn_fein_taxid AS fein_taxid,\n\t\tOUT_taxid AS ssn,\n\t\tflag_TaxId\n\t\tFROM EXP_SSN_FEIN_TAXID\n\t),\n\tRTR_SSN_FEIN_TAXID_FEIN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag = 'FEIN'),\n\tRTR_SSN_FEIN_TAXID_SSN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag='NONFEIN'  AND flag_TaxId != 'X'),\n\tAGGTRANS AS (\n\t\tSELECT\n\t\tid AS Id,\n\t\tssn AS SSN\n\t\tFROM RTR_SSN_FEIN_TAXID_SSN\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Id ORDER BY NULL) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tId AS OUT_id, \n\t\tSSN AS OUT_valid_ssn\n\t\tFROM AGGTRANS\n\t),\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tOUT_id AS o_ID,\n\tOUT_valid_ssn AS taxid_ssn\n\tFROM mplt_SSN_Check\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY o_ID, taxid_ssn ORDER BY NULL) = 1\n),\nClaims_OneTime_Conversion_Batch_File AS (\n\tINSERT INTO TEST_File\n\t(ID, SSN_TOKENS)\n\tSELECT \n\to_ID AS ID, \n\ttaxid_ssn AS SSN_TOKENS\n\tFROM AGG_Remove_Duplicates\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "HistoricalDataUpdate/"
        },
        "annotations": []
    }
}