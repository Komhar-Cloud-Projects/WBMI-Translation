{
    "name": "s_m_POL_DW_LOAD_PremiumTransaction_DCT_Negate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PremiumTransaction_DCT_Negate",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction AS (\n\n------------ PRE SQL ----------\n@{pipeline().parameters.SOURCE_PRE_SQL}\n----------------------\n\n\n\tWITH CTE_PTransMaxLoadSequence as \r\n\t(\r\n\tSELECT Pol.pol_ak_id,RC.CoverageGUID AS CoverageGUID,\r\n\t       PT.PremiumTransactionHashKey as PremiumTransactionHashKey,\r\n\t       MAX(PT.PremiumLoadSequence)       AS PremiumLoadSequence,\r\n\t       W.PolicyKey as PolicyKey,\r\n\t       Max(W.IterationId) as IterationID,\r\n\t       Max(W.CreatedDate) as CreatedDate\r\n\tFROM  dbo.PremiumTransaction PT INNER JOIN  dbo.RatingCoverage RC ON RC.RatingCoverageAKID = PT.RatingCoverageAKId      \r\n\tAND RC.EffectiveDate = PT.EffectiveDate AND PT.SourceSystemID='DCT' AND PT.ReasonAmendedCode not in ('CWO','Claw Back') \r\n\tINNER JOIN  dbo.PolicyCoverage PC      \r\n\tON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID AND PC.SourceSystemID='DCT'      \r\n\tAND PC.CurrentSnapshotFlag = 1   \r\n\tINNER JOIN  dbo.RiskLocation RL \r\n\tON PC.RiskLocationAKID = RL.RiskLocationAKID AND RL.SourceSystemID='DCT'   \r\n\tAND RL.CurrentSnapshotFlag = 1   \r\n\tINNER JOIN  V2.policy pol    \r\n\tON pol.pol_ak_id = RL.PolicyAKID AND pol.source_sys_id='DCT'\r\n\tAND pol.crrnt_snpsht_flag = 1 \r\n\tINNER JOIN StrategicProfitCenter spc on spc.StrategicProfitCenterAKId = pol.StrategicProfitCenterAKId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTDataRepairPolicy W ON W.PolicyKey = pol.pol_key \r\n\tAND spc.StrategicProfitCenterAbbreviation <> 'WB - PL' \r\n\tAND W.createddate > '@{pipeline().parameters.SELECTION_START_TS}' \r\n\tWHERE  PT.SourceSystemID='DCT' \r\n\tGROUP BY Pol.pol_ak_id,RC.CoverageGUID,PT.PremiumTransactionHashKey, W.PolicyKey),\r\n\t\r\n\tCTE_PTransID as \r\n\t(\r\n\tSELECT distinct PT.PremiumTransactionID,CTE.PolicyKey,CTE.IterationId,CTE.CreatedDate as CreatedDate\r\n\tFROM dbo.PremiumTransaction pt\r\n\tINNER JOIN dbo.RatingCoverage rc\r\n\tON rc.RatingCoverageAKID = pt.RatingCoverageAKId\r\n\tAND rc.EffectiveDate = pt.EffectiveDate \r\n\tAND pt.SourceSystemID='DCT' AND PT.ReasonAmendedCode not in ('CWO','Claw Back') AND NegateRestateCode <> 'Negate'\r\n\tINNER JOIN CTE_PTransMaxLoadSequence CTE ON CTE.CoverageGUID = rc.CoverageGUID AND CTE.PremiumTransactionHashKey = pt.PremiumTransactionHashKey AND CTE.PremiumLoadSequence = pt.PremiumLoadSequence\r\n\tWHERE  pt.SourceSystemID = 'DCT' AND CTE.createddate > '@{pipeline().parameters.SELECTION_START_TS}' )\r\n\t\r\n\t\r\n\tSELECT PT.PremiumTransactionID,\r\n\t       PT.EffectiveDate,\r\n\t       pt.ExpirationDate,\r\n\t       pt.SourceSystemID,\r\n\t       pt.LogicalIndicator,\r\n\t       pt.PremiumTransactionHashKey,\r\n\t       pt.PremiumLoadSequence,\r\n\t       pt.DuplicateSequence,\r\n\t       pt.PremiumTransactionAKID,\r\n\t       pt.ReinsuranceCoverageAKID,\r\n\t       pt.StatisticalCoverageAKID,\r\n\t       pt.PremiumTransactionKey,\r\n\t       pt.PMSFunctionCode,\r\n\t       pt.PremiumTransactionCode,\r\n\t       pt.PremiumTransactionEnteredDate,\r\n\t       pt.PremiumTransactionEffectiveDate,\r\n\t       pt.PremiumTransactionExpirationDate,\r\n\t       pt.PremiumTransactionBookedDate,\r\n\t       pt.PremiumTransactionAmount,\r\n\t       pt.FullTermPremium,\r\n\t       pt.PremiumType,\r\n\t       pt.ReasonAmendedCode,\r\n\t       pt.OffsetOnsetCode,\r\n\t       pt.SupPremiumTransactionCodeId,\r\n\t       pt.RatingCoverageAKId,\r\n\t       pt.DeductibleAmount,\r\n\t       pt.ExperienceModificationFactor,\r\n\t       pt.ExperienceModificationEffectiveDate,\r\n\t       pt.PackageModificationAdjustmentFactor,\r\n\t       pt.PackageModificationAdjustmentGroupCode,\r\n\t       pt.IncreasedLimitFactor,\r\n\t       pt.IncreasedLimitGroupCode,\r\n\t       pt.YearBuilt,\r\n\t       pt.AgencyActualCommissionRate,\r\n\t       pt.BaseRate,\r\n\t       pt.ConstructionCode,\r\n\t       pt.StateRatingEffectiveDate,\r\n\t       pt.IndividualRiskPremiumModification,\r\n\t       pt.WindCoverageFlag,\r\n\t       pt.DeductibleBasis,\r\n\t       pt.ExposureBasis,\r\n\t       pt.TransactionCreatedUserId,\r\n\t       pt.ServiceCentreName,\r\n\t       pt.Exposure,\r\n\t       pt.NumberOfEmployee,\r\n\t       pt.WrittenExposure,\r\n\t       pt.DeclaredEventFlag,\r\n\t       CTE.PolicyKey,\r\n\t       CTE.IterationId,\r\n\t       CTE.CreatedDate as CreatedDate\r\n\tfrom dbo.PremiumTransaction PT \r\n\tinner join CTE_PTransID CTE\r\n\ton CTE.PremiumTransactionID=PT.PremiumTransactionID\r\n\tAND pt.SourceSystemID='DCT' AND PT.ReasonAmendedCode not in ('CWO','Claw Back') AND NegateRestateCode <> 'Negate'\r\n\tORDER BY PT.PremiumTransactionID\n),\nEXP_Default AS (\n\tSELECT\n\tPremiumTransactionID,\n\t'1' AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tLogicalIndicator,\n\t'0' AS LogicalDeleteFlag,\n\tPremiumTransactionHashKey,\n\tPremiumLoadSequence,\n\tDuplicateSequence,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionKey,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tOffsetOnsetCode,\n\tSupPremiumTransactionCodeId,\n\tRatingCoverageAKId,\n\tDeductibleAmount,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPackageModificationAdjustmentFactor,\n\tPackageModificationAdjustmentGroupCode,\n\tIncreasedLimitFactor,\n\tIncreasedLimitGroupCode,\n\tYearBuilt,\n\tAgencyActualCommissionRate,\n\tBaseRate,\n\tConstructionCode,\n\tStateRatingEffectiveDate,\n\tIndividualRiskPremiumModification,\n\tWindCoverageFlag,\n\t-- *INF*: TO_INTEGER(WindCoverageFlag)\n\tCAST(WindCoverageFlag AS INTEGER) AS o_WindCoverageFlag,\n\tDeductibleBasis,\n\tExposureBasis,\n\tTransactionCreatedUserId,\n\tServiceCentreName,\n\tExposure,\n\tNumberOfEmployee,\n\tWrittenExposure,\n\tDeclaredEventFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- DeclaredEventFlag = 'T',1,\r\n\t-- DeclaredEventFlag ='F',0,\r\n\t-- ISNULL(DeclaredEventFlag),0\r\n\t-- )\n\tDECODE(TRUE,\n\t\tDeclaredEventFlag = 'T', 1,\n\t\tDeclaredEventFlag = 'F', 0,\n\t\tDeclaredEventFlag IS NULL, 0\n\t) AS O_DeclaredEventFlag,\n\tPolicyKey,\n\tIterationId,\n\tWCreatedDate\n\tFROM SQ_PremiumTransaction\n),\nSEQ_PremiumTransactionAKID AS (\n\tCREATE SEQUENCE SEQ_PremiumTransactionAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_OffsetAttributes AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tLogicalIndicator,\n\tLogicalDeleteFlag,\n\tPremiumTransactionHashKey,\n\tIterationId AS PremiumLoadSequence,\n\tPremiumLoadSequence+1 AS o_PremiumLoadSequence,\n\tDuplicateSequence,\n\tSEQ_PremiumTransactionAKID.NEXTVAL AS PremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionKey,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tWCreatedDate,\n\tPremiumTransactionExpirationDate,\n\t-- *INF*: TRUNC(WCreatedDate,'MM')\n\tCAST(TRUNC(WCreatedDate, 'MONTH') AS TIMESTAMP_NTZ(0)) AS PremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\t-1 * PremiumTransactionAmount AS o_PremiumTransactionAmount,\n\tFullTermPremium,\n\t-1 * FullTermPremium AS O_FullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tOffsetOnsetCode,\n\t-- *INF*: --IIF(INSTR(OffsetOnsetCode,'Negate'),OffsetOnsetCode, OffsetOnsetCode  ||  '-Negate')\r\n\t-- --OffsetOnsetCode  ||  '-Negate'\n\t'' AS o_OffsetOnsetCode,\n\tSupPremiumTransactionCodeId,\n\tRatingCoverageAKId,\n\tDeductibleAmount,\n\tExperienceModificationFactor,\n\tExperienceModificationEffectiveDate,\n\tPackageModificationAdjustmentFactor,\n\tPackageModificationAdjustmentGroupCode,\n\tIncreasedLimitFactor,\n\tIncreasedLimitGroupCode,\n\tYearBuilt,\n\tAgencyActualCommissionRate,\n\tBaseRate,\n\tConstructionCode,\n\tStateRatingEffectiveDate,\n\tIndividualRiskPremiumModification,\n\to_WindCoverageFlag AS WindCoverageFlag,\n\tDeductibleBasis,\n\tExposureBasis,\n\tTransactionCreatedUserId,\n\tServiceCentreName,\n\tExposure,\n\tNumberOfEmployee,\n\tWrittenExposure,\n\t-- *INF*: 0\r\n\t-- --WrittenExposure *  - 1\r\n\t-- --after deprecated offset is solved, this code can be uncommented to replace the default of zero\n\t0 AS o_WrittenExposure,\n\tO_DeclaredEventFlag AS DeclaredEventFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tPremiumTransactionID AS OriginalPremiumTransactionID,\n\tPremiumTransactionAKID AS OriginalPremiumTransactionAKID,\n\t'Negate' AS NegateRestateCode,\n\t-1 AS NewNegatePremiumTransactionID\n\tFROM EXP_Default\n),\nLKP_PremiumTransaction AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionHashKey,\n\tPremiumLoadSequence,\n\tNegateRestateCode\n\tFROM (\n\t\tSELECT PT.PremiumTransactionID      AS PremiumTransactionID,\r\n\t\t       PT.PremiumTransactionHashKey AS PremiumTransactionHashKey,\r\n\t\t       PT.PremiumLoadSequence       AS PremiumLoadSequence,\r\n\t\t       PT.NegateRestateCode           AS NegateRestateCode\r\n\t\tFROM   dbo.PremiumTransactiON pt\r\n\t\t       INNER JOIN dbo.RatingCoverage rc\r\n\t\t               ON rc.RatingCoverageAKID = pt.RatingCoverageAKId\r\n\t\t                  AND rc.EffectiveDate = pt.EffectiveDate\r\n\t\t       INNER JOIN dbo.PolicyCoverage pc\r\n\t\t               ON pc.PolicyCoverageAKID = rc.PolicyCoverageAKID\r\n\t\t                  AND pc.CurrentSnapshotFlag = 1\r\n\t\t       INNER JOIN dbo.RiskLocatiON rl\r\n\t\t               ON pc.RiskLocatiONAKID = rl.RiskLocatiONAKID\r\n\t\t                  AND rl.CurrentSnapshotFlag = 1\r\n\t\t       INNER JOIN V2.policy pol\r\n\t\t               ON pol.pol_ak_id = pc.PolicyAKID\r\n\t\t                  AND pol.crrnt_snpsht_flag = 1\r\n\t\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.dbo.WorkDCTDataRepairPolicy W\r\n\t\t               ON W.PolicyKey = pol.pol_key AND W.CreatedDate > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tWHERE  pt.SourceSystemID = 'DCT' AND PT.NegateRestateCode = 'Negate'\r\n\t\tORDER BY PT.CreatedDate --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionHashKey,PremiumLoadSequence,NegateRestateCode ORDER BY PremiumTransactionID DESC) = 1\n),\nRTR_Insert AS (\n\tSELECT\n\tLKP_PremiumTransaction.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tEXP_OffsetAttributes.CurrentSnapshotFlag,\n\tEXP_OffsetAttributes.EffectiveDate,\n\tEXP_OffsetAttributes.ExpirationDate,\n\tEXP_OffsetAttributes.SourceSystemID,\n\tEXP_OffsetAttributes.CreatedDate,\n\tEXP_OffsetAttributes.LogicalIndicator,\n\tEXP_OffsetAttributes.LogicalDeleteFlag,\n\tEXP_OffsetAttributes.PremiumTransactionHashKey,\n\tEXP_OffsetAttributes.o_PremiumLoadSequence AS PremiumLoadSequence,\n\tEXP_OffsetAttributes.DuplicateSequence,\n\tEXP_OffsetAttributes.PremiumTransactionAKID AS PremiumTransactionAKID1,\n\tEXP_OffsetAttributes.ReinsuranceCoverageAKID,\n\tEXP_OffsetAttributes.StatisticalCoverageAKID,\n\tEXP_OffsetAttributes.PremiumTransactionKey,\n\tEXP_OffsetAttributes.PMSFunctionCode,\n\tEXP_OffsetAttributes.PremiumTransactionCode,\n\tEXP_OffsetAttributes.PremiumTransactionEnteredDate,\n\tEXP_OffsetAttributes.PremiumTransactionEffectiveDate,\n\tEXP_OffsetAttributes.PremiumTransactionExpirationDate,\n\tEXP_OffsetAttributes.PremiumTransactionBookedDate,\n\tEXP_OffsetAttributes.o_PremiumTransactionAmount AS PremiumTransactionAmount,\n\tEXP_OffsetAttributes.O_FullTermPremium AS FullTermPremium,\n\tEXP_OffsetAttributes.PremiumType,\n\tEXP_OffsetAttributes.ReasonAmendedCode,\n\tEXP_OffsetAttributes.OffsetOnsetCode,\n\tEXP_OffsetAttributes.SupPremiumTransactionCodeId,\n\tEXP_OffsetAttributes.RatingCoverageAKId,\n\tEXP_OffsetAttributes.DeductibleAmount,\n\tEXP_OffsetAttributes.ExperienceModificationFactor,\n\tEXP_OffsetAttributes.ExperienceModificationEffectiveDate,\n\tEXP_OffsetAttributes.PackageModificationAdjustmentFactor,\n\tEXP_OffsetAttributes.PackageModificationAdjustmentGroupCode,\n\tEXP_OffsetAttributes.IncreasedLimitFactor,\n\tEXP_OffsetAttributes.IncreasedLimitGroupCode,\n\tEXP_OffsetAttributes.YearBuilt,\n\tEXP_OffsetAttributes.AgencyActualCommissionRate,\n\tEXP_OffsetAttributes.BaseRate,\n\tEXP_OffsetAttributes.ConstructionCode,\n\tEXP_OffsetAttributes.StateRatingEffectiveDate,\n\tEXP_OffsetAttributes.IndividualRiskPremiumModification,\n\tEXP_OffsetAttributes.WindCoverageFlag,\n\tEXP_OffsetAttributes.DeductibleBasis,\n\tEXP_OffsetAttributes.ExposureBasis,\n\tEXP_OffsetAttributes.TransactionCreatedUserId,\n\tEXP_OffsetAttributes.ServiceCentreName,\n\tEXP_OffsetAttributes.Exposure,\n\tEXP_OffsetAttributes.NumberOfEmployee,\n\tEXP_OffsetAttributes.o_WrittenExposure AS WrittenExposure,\n\tEXP_OffsetAttributes.DeclaredEventFlag,\n\tEXP_OffsetAttributes.AuditID,\n\tEXP_OffsetAttributes.OriginalPremiumTransactionID,\n\tEXP_OffsetAttributes.OriginalPremiumTransactionAKID,\n\tEXP_OffsetAttributes.NegateRestateCode,\n\tEXP_OffsetAttributes.NewNegatePremiumTransactionID\n\tFROM EXP_OffsetAttributes\n\tLEFT JOIN LKP_PremiumTransaction\n\tON LKP_PremiumTransaction.PremiumTransactionHashKey = EXP_OffsetAttributes.PremiumTransactionHashKey AND LKP_PremiumTransaction.PremiumLoadSequence = EXP_OffsetAttributes.o_PremiumLoadSequence AND LKP_PremiumTransaction.NegateRestateCode = EXP_OffsetAttributes.NegateRestateCode\n),\nRTR_Insert_Insert AS (SELECT * FROM RTR_Insert WHERE ISNULL(lkp_PremiumTransactionID)),\nTGT_PremiumTransaction_Negate_Insert AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n\tINSERT INTO PremiumTransaction\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, LogicalDeleteFlag, PremiumTransactionHashKey, PremiumLoadSequence, DuplicateSequence, PremiumTransactionAKID, ReinsuranceCoverageAKID, StatisticalCoverageAKID, PremiumTransactionKey, PMSFunctionCode, PremiumTransactionCode, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, PremiumTransactionBookedDate, PremiumTransactionAmount, FullTermPremium, PremiumType, ReasonAmendedCode, OffsetOnsetCode, SupPremiumTransactionCodeId, RatingCoverageAKId, DeductibleAmount, ExperienceModificationFactor, ExperienceModificationEffectiveDate, PackageModificationAdjustmentFactor, PackageModificationAdjustmentGroupCode, IncreasedLimitFactor, IncreasedLimitGroupCode, YearBuilt, AgencyActualCommissionRate, BaseRate, ConstructionCode, StateRatingEffectiveDate, IndividualRiskPremiumModification, WindCoverageFlag, DeductibleBasis, ExposureBasis, TransactionCreatedUserId, ServiceCentreName, Exposure, NumberOfEmployee, NegateRestateCode, WrittenExposure, DeclaredEventFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tCreatedDate AS MODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tLOGICALDELETEFLAG, \n\tPREMIUMTRANSACTIONHASHKEY, \n\tPREMIUMLOADSEQUENCE, \n\tDUPLICATESEQUENCE, \n\tPREMIUMTRANSACTIONAKID, \n\tREINSURANCECOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPREMIUMTRANSACTIONKEY, \n\tPMSFUNCTIONCODE, \n\tPREMIUMTRANSACTIONCODE, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONEXPIRATIONDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tPREMIUMTRANSACTIONAMOUNT, \n\tFULLTERMPREMIUM, \n\tPREMIUMTYPE, \n\tREASONAMENDEDCODE, \n\tOFFSETONSETCODE, \n\tSUPPREMIUMTRANSACTIONCODEID, \n\tRATINGCOVERAGEAKID, \n\tDEDUCTIBLEAMOUNT, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tEXPERIENCEMODIFICATIONEFFECTIVEDATE, \n\tPACKAGEMODIFICATIONADJUSTMENTFACTOR, \n\tPACKAGEMODIFICATIONADJUSTMENTGROUPCODE, \n\tINCREASEDLIMITFACTOR, \n\tINCREASEDLIMITGROUPCODE, \n\tYEARBUILT, \n\tAGENCYACTUALCOMMISSIONRATE, \n\tBASERATE, \n\tCONSTRUCTIONCODE, \n\tSTATERATINGEFFECTIVEDATE, \n\tINDIVIDUALRISKPREMIUMMODIFICATION, \n\tWINDCOVERAGEFLAG, \n\tDEDUCTIBLEBASIS, \n\tEXPOSUREBASIS, \n\tTRANSACTIONCREATEDUSERID, \n\tSERVICECENTRENAME, \n\tEXPOSURE, \n\tNUMBEROFEMPLOYEE, \n\tNEGATERESTATECODE, \n\tWRITTENEXPOSURE, \n\tDECLAREDEVENTFLAG\n\tFROM RTR_Insert_Insert\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'dbo', @TableName = 'PREMIUMTRANSACTION', @IndexWildcard = 'AK1PremiumTransaction'\n\t-------------------------------\n\n\n),\nWorkPremiumTransactionDataRepairNegate AS (\n\tTRUNCATE TABLE WorkPremiumTransactionDataRepairNegate;\n\tINSERT INTO WorkPremiumTransactionDataRepairNegate\n\t(SourceSystemId, CreatedDate, CreatedUserID, OriginalPremiumTransactionID, OriginalPremiumTransactionAKID, NewNegatePremiumTransactionID, NewNegatePremiumTransactionAKID, AuditId)\n\tSELECT \n\tSourceSystemID AS SOURCESYSTEMID, \n\tCREATEDDATE, \n\tSourceSystemID AS CREATEDUSERID, \n\tORIGINALPREMIUMTRANSACTIONID, \n\tORIGINALPREMIUMTRANSACTIONAKID, \n\tNEWNEGATEPREMIUMTRANSACTIONID, \n\tPremiumTransactionAKID AS NEWNEGATEPREMIUMTRANSACTIONAKID, \n\tAuditID AS AUDITID\n\tFROM RTR_Insert_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "216690"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "881000"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7484934"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "06/27/2023 12:02:14"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "07/04/2023 10:58:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_PRE_SQL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}