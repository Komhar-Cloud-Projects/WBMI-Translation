{
    "name": "m_CLM_DW_Load_Claim_Total_Loss_submit_history_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_Load_Claim_Total_Loss_submit_history_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clm_tot_loss_hist_stage AS (\n\tSELECT\n\t\tclm_tot_loss_hist_stage_id,\n\t\ttch_claim_nbr,\n\t\ttch_client_id,\n\t\tobject_type_cd,\n\t\tobject_seq_nbr,\n\t\tcov_type_cd,\n\t\tcov_seq_nbr,\n\t\tbur_cause_loss,\n\t\tseq_nbr,\n\t\tadd_uuid,\n\t\tvehicle_vin,\n\t\tadd_action,\n\t\tadd_action_ts AS add_actionts,\n\t\tloss_date,\n\t\tloss_owner,\n\t\tnew_owner,\n\t\tcreate_ts,\n\t\tcreate_user_id,\n\t\tupdate_ts,\n\t\tupdate_user_id,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id\n\tFROM clm_tot_loss_hist_stage\n),\nEXP_source_anchor AS (\n\tSELECT\n\ttch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr)))\n\tIFF(LTRIM(RTRIM(tch_claim_nbr)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_claim_nbr))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr))) AS tch_claim_nbr_out,\n\ttch_client_id,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_client_id))) OR LENGTH(LTRIM(RTRIM(tch_client_id))) = 0, 'N/A', LTRIM(RTRIM(tch_client_id)))\n\tIFF(LTRIM(RTRIM(tch_client_id)) IS NULL OR LENGTH(LTRIM(RTRIM(tch_client_id))) = 0, 'N/A', LTRIM(RTRIM(tch_client_id))) AS tch_client_id_out,\n\tobject_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(object_type_cd))) OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd)))\n\tIFF(LTRIM(RTRIM(object_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(object_type_cd))) = 0, 'N/A', LTRIM(RTRIM(object_type_cd))) AS object_type_cd_out,\n\tobject_seq_nbr,\n\tcov_type_cd,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(cov_type_cd))) OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd)))\n\tIFF(LTRIM(RTRIM(cov_type_cd)) IS NULL OR LENGTH(LTRIM(RTRIM(cov_type_cd))) = 0, 'N/A', LTRIM(RTRIM(cov_type_cd))) AS cov_type_cd_out,\n\tcov_seq_nbr,\n\tbur_cause_loss,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(bur_cause_loss))) OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A',  SUBSTR(bur_cause_loss, 1,2))\n\tIFF(LTRIM(RTRIM(bur_cause_loss)) IS NULL OR LENGTH(LTRIM(RTRIM(bur_cause_loss))) = 0, 'N/A', SUBSTR(bur_cause_loss, 1, 2)) AS bur_cause_loss_out,\n\t-- *INF*: IIF(ISNULL(bur_cause_loss) OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3,1))\n\tIFF(bur_cause_loss IS NULL OR IS_SPACES(bur_cause_loss), 'N/A', SUBSTR(bur_cause_loss, 3, 1)) AS reserve_category_out,\n\tseq_nbr,\n\tadd_uuid,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(add_uuid))) OR LENGTH(LTRIM(RTRIM(add_uuid))) = 0, 'N/A', LTRIM(RTRIM(add_uuid)))\n\tIFF(LTRIM(RTRIM(add_uuid)) IS NULL OR LENGTH(LTRIM(RTRIM(add_uuid))) = 0, 'N/A', LTRIM(RTRIM(add_uuid))) AS add_uuid_out,\n\tvehicle_vin,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(vehicle_vin))) OR LENGTH(LTRIM(RTRIM(vehicle_vin))) = 0, 'N/A', LTRIM(RTRIM(vehicle_vin)))\n\tIFF(LTRIM(RTRIM(vehicle_vin)) IS NULL OR LENGTH(LTRIM(RTRIM(vehicle_vin))) = 0, 'N/A', LTRIM(RTRIM(vehicle_vin))) AS vehicle_vin_out,\n\tadd_action,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(add_action))) OR LENGTH(LTRIM(RTRIM(add_action))) = 0, 'N/A', LTRIM(RTRIM(add_action))) \n\tIFF(LTRIM(RTRIM(add_action)) IS NULL OR LENGTH(LTRIM(RTRIM(add_action))) = 0, 'N/A', LTRIM(RTRIM(add_action))) AS add_action_out,\n\tadd_actionts,\n\t-- *INF*: IIF(ISNULL(add_actionts), to_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), add_actionts)\n\tIFF(add_actionts IS NULL, to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), add_actionts) AS add_actionts_out,\n\tloss_date,\n\t-- *INF*: IIF(ISNULL(loss_date), to_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), loss_date)\n\tIFF(loss_date IS NULL, to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), loss_date) AS loss_date_out,\n\tloss_owner,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(loss_owner))) OR LENGTH(LTRIM(RTRIM(loss_owner))), 'N/A', LTRIM(RTRIM(loss_owner)))\n\tIFF(LTRIM(RTRIM(loss_owner)) IS NULL OR LENGTH(LTRIM(RTRIM(loss_owner))), 'N/A', LTRIM(RTRIM(loss_owner))) AS loss_owner_out,\n\tnew_owner,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(new_owner))) OR LENGTH(LTRIM(RTRIM(new_owner))), 'N/A', LTRIM(RTRIM(new_owner)))\n\tIFF(LTRIM(RTRIM(new_owner)) IS NULL OR LENGTH(LTRIM(RTRIM(new_owner))), 'N/A', LTRIM(RTRIM(new_owner))) AS new_owner_out,\n\tcreate_ts,\n\tcreate_user_id,\n\tupdate_ts,\n\tupdate_user_id,\n\textract_date,\n\tas_of_date,\n\trecord_count,\n\tsource_system_id\n\tFROM SQ_clm_tot_loss_hist_stage\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\toffset_onset_ind,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nLKP_claimant_coverage_detail AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\ts3p_ins_line_code,\n\ts3p_unit_type_code,\n\ts3p_wc_class_descript,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\treserve_ctgry,\n\tcause_of_loss,\n\tclaimant_cov_eff_date,\n\tclaimant_cov_exp_date,\n\trisk_type_ind,\n\ts3p_unit_descript,\n\tspec_pers_prop_use_code,\n\tpkg_ded_amt,\n\tpkg_lmt_amt,\n\tmanual_entry_ind,\n\tunit_veh_registration_state_code,\n\tunit_veh_stated_amt,\n\tunit_dam_descript,\n\tunit_veh_yr,\n\tunit_veh_make,\n\tunit_vin_num,\n\tCoverageGUID,\n\tpms_type_bureau_code,\n\tIN_claim_party_occurrence_ak_id,\n\tIN_COB_OBJECT_TYPE_CD,\n\tIN_COB_OBJECT_SEQ_NBR,\n\tIN_MAJOR_PERIL_CODE1,\n\tIN_s3p_PKG_SEQ_NUM1,\n\tIN_cause_of_loss_out,\n\tIN_reserve_ctgry_out\n\tFROM (\n\t\tSELECT a.claimant_cov_det_ak_id as claimant_cov_det_ak_id,\r\n\t\tLTRIM(RTRIM(a.s3p_ins_line_code)) as s3p_ins_line_code, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_type_code)) as s3p_unit_type_code, \r\n\t\tLTRIM(RTRIM(a.s3p_wc_class_descript)) as s3p_wc_class_descript, \r\n\t\tLTRIM(RTRIM(a.loc_unit_num)) as loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.sub_loc_unit_num)) as sub_loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.ins_line)) as ins_line, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp)) as risk_unit_grp, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num, \r\n\t\tLTRIM(RTRIM(a.risk_unit)) as risk_unit, \r\n\t\tLTRIM(RTRIM(a.risk_unit_seq_num)) as risk_unit_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_seq)) as major_peril_seq, \r\n\t\ta.claimant_cov_eff_date as claimant_cov_eff_date, \r\n\t\ta.claimant_cov_exp_date as claimant_cov_exp_date, \r\n\t\tLTRIM(RTRIM(a.risk_type_ind)) as risk_type_ind, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_descript)) as s3p_unit_descript, \r\n\t\tLTRIM(RTRIM(a.spec_pers_prop_use_code)) as spec_pers_prop_use_code, \r\n\t\ta.pkg_ded_amt as pkg_ded_amt, \r\n\t\ta.pkg_lmt_amt as pkg_lmt_amt, \r\n\t\tLTRIM(RTRIM(a.manual_entry_ind)) as manual_entry_ind,\r\n\t\tLTRIM(RTRIM(a.unit_veh_registration_state_code)) as unit_veh_registration_state_code, \r\n\t\ta.unit_veh_stated_amt as unit_veh_stated_amt, \r\n\t\tLTRIM(RTRIM(a.unit_dam_descript)) as unit_dam_descript, \r\n\t\ta.unit_veh_yr as unit_veh_yr, \r\n\t\tLTRIM(RTRIM(a.unit_veh_make)) as unit_veh_make, \r\n\t\tLTRIM(RTRIM(a.unit_vin_num)) as unit_vin_num, \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(a.s3p_object_type_code)) as s3p_object_type_code, \r\n\t\ta.s3p_object_seq_num as s3p_object_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_code)) as major_peril_code, \r\n\t\ta.s3p_pkg_seq_num as s3p_pkg_seq_num, \r\n\t\ta.cause_of_loss as cause_of_loss, \r\n\t\ta.reserve_ctgry as reserve_ctgry,\r\n\t\ta.CoverageGUID as CoverageGUID, \r\n\t\tLTRIM(RTRIM(a.pms_type_bureau_code)) as pms_type_bureau_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,s3p_object_type_code,s3p_object_seq_num,major_peril_code,s3p_pkg_seq_num,cause_of_loss,reserve_ctgry ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_claim_total_loss AS (\n\tSELECT\n\tclaim_total_loss_ak_id,\n\tclaimant_cov_det_ak_id,\n\tclaim_total_loss_seq_num,\n\tvin_num,\n\tveh_yr,\n\tveh_make,\n\tveh_model,\n\ttotal_loss_date,\n\tloss_owner,\n\tnew_owner,\n\towner_retained_ind,\n\tpay_retained_amt,\n\tloss_acv,\n\tsale_tax,\n\ttitle_fee,\n\tregistration_fee,\n\tsalvage_ded,\n\tsalvage_amt\n\tFROM (\n\t\tSELECT a.claim_total_loss_ak_id as claim_total_loss_ak_id, \r\n\t\ta.vin_num as vin_num, \r\n\t\ta.veh_yr as veh_yr, \r\n\t\ta.veh_make as veh_make, \r\n\t\ta.veh_model as veh_model, \r\n\t\ta.total_loss_date as total_loss_date, \r\n\t\ta.loss_owner as loss_owner, \r\n\t\ta.new_owner as new_owner, \r\n\t\ta.owner_retained_ind as owner_retained_ind, \r\n\t\ta.pay_retained_amt as pay_retained_amt, \r\n\t\ta.loss_acv as loss_acv, \r\n\t\ta.sale_tax as sale_tax, \r\n\t\ta.title_fee as title_fee, \r\n\t\ta.registration_fee as registration_fee, \r\n\t\ta.salvage_ded as salvage_ded, \r\n\t\ta.salvage_amt as salvage_amt, \r\n\t\ta.claimant_cov_det_ak_id as claimant_cov_det_ak_id, \r\n\t\ta.claim_total_loss_seq_num as claim_total_loss_seq_num \r\n\t\tFROM claim_total_loss a\r\n\t\tWHERE a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,claim_total_loss_seq_num ORDER BY claim_total_loss_ak_id) = 1\n),\nEXP_gather_values AS (\n\tSELECT\n\tEXP_source_anchor.vehicle_vin_out,\n\tLKP_claim_total_loss.claim_total_loss_ak_id,\n\tEXP_source_anchor.add_action_out,\n\tEXP_source_anchor.loss_date_out,\n\tEXP_source_anchor.loss_owner_out,\n\tEXP_source_anchor.new_owner_out,\n\tEXP_source_anchor.add_actionts_out\n\tFROM EXP_source_anchor\n\tLEFT JOIN LKP_claim_total_loss\n\tON LKP_claim_total_loss.claimant_cov_det_ak_id = LKP_claimant_coverage_detail.claimant_cov_det_ak_id AND LKP_claim_total_loss.claim_total_loss_seq_num = EXP_source_anchor.seq_nbr\n),\nLKP_claim_total_loss_submit_history AS (\n\tSELECT\n\tclaim_total_loss_submit_hist_ak_id,\n\tclaim_total_loss_ak_id,\n\tsubmit_to_vendor_action,\n\tvin_num,\n\ttotal_loss_date,\n\tloss_owner,\n\tnew_owner,\n\tsubmit_to_vendor_date\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_total_loss_submit_hist_ak_id,\n\t\t\tclaim_total_loss_ak_id,\n\t\t\tsubmit_to_vendor_action,\n\t\t\tvin_num,\n\t\t\ttotal_loss_date,\n\t\t\tloss_owner,\n\t\t\tnew_owner,\n\t\t\tsubmit_to_vendor_date\n\t\tFROM claim_total_loss_submit_history\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_total_loss_ak_id,submit_to_vendor_date ORDER BY claim_total_loss_submit_hist_ak_id) = 1\n),\nEXP_gather_old_values AS (\n\tSELECT\n\tLKP_claim_total_loss_submit_history.claim_total_loss_submit_hist_ak_id AS old_claim_total_loss_submit_hist_ak_id,\n\tLKP_claim_total_loss_submit_history.claim_total_loss_ak_id AS old_claim_total_loss_ak_id,\n\tLKP_claim_total_loss_submit_history.submit_to_vendor_action AS old_submit_to_vendor_action,\n\tLKP_claim_total_loss_submit_history.vin_num AS old_vin_num,\n\tLKP_claim_total_loss_submit_history.total_loss_date AS old_total_loss_date,\n\tLKP_claim_total_loss_submit_history.loss_owner AS old_loss_owner,\n\tLKP_claim_total_loss_submit_history.new_owner AS old_new_owner,\n\t-- *INF*: iif(isnull(old_claim_total_loss_ak_id)\r\n\t-- , 'NEW'\r\n\t-- , IIF(old_submit_to_vendor_action != add_action_out\r\n\t-- OR old_vin_num !=  vehicle_vin_out\r\n\t-- OR old_total_loss_date != loss_date_out\r\n\t-- OR old_loss_owner != loss_owner_out\r\n\t-- OR old_new_owner != new_owner_out\r\n\t-- ,'UPDATE'\r\n\t-- ,'NOCHANGE')\r\n\t-- )\r\n\t-- \n\tIFF(old_claim_total_loss_ak_id IS NULL, 'NEW', IFF(old_submit_to_vendor_action != add_action_out OR old_vin_num != vehicle_vin_out OR old_total_loss_date != loss_date_out OR old_loss_owner != loss_owner_out OR old_new_owner != new_owner_out, 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\tEXP_gather_values.vehicle_vin_out,\n\tEXP_gather_values.add_action_out,\n\tEXP_gather_values.loss_date_out,\n\tEXP_gather_values.loss_owner_out,\n\tEXP_gather_values.new_owner_out,\n\tEXP_gather_values.add_actionts_out,\n\tEXP_gather_values.claim_total_loss_ak_id\n\tFROM EXP_gather_values\n\tLEFT JOIN LKP_claim_total_loss_submit_history\n\tON LKP_claim_total_loss_submit_history.claim_total_loss_ak_id = EXP_gather_values.claim_total_loss_ak_id AND LKP_claim_total_loss_submit_history.submit_to_vendor_date = EXP_gather_values.add_actionts_out\n),\nFIL_insert_rows AS (\n\tSELECT\n\told_claim_total_loss_submit_hist_ak_id, \n\tchanged_flag, \n\tvehicle_vin_out, \n\tadd_action_out, \n\tloss_date_out, \n\tloss_owner_out, \n\tnew_owner_out, \n\tadd_actionts_out, \n\tclaim_total_loss_ak_id\n\tFROM EXP_gather_old_values\n\tWHERE changed_flag = 'NEW' OR changed_flag = 'UPDATE'\n),\nSEQ_claim_total_loss_submit_hist_ak_id AS (\n\tCREATE SEQUENCE SEQ_claim_total_loss_submit_hist_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_determine_AK AS (\n\tSELECT\n\told_claim_total_loss_submit_hist_ak_id,\n\tSEQ_claim_total_loss_submit_hist_ak_id.NEXTVAL,\n\tchanged_flag,\n\t-- *INF*: IIF(ISNULL(old_claim_total_loss_submit_hist_ak_id), NEXTVAL, old_claim_total_loss_submit_hist_ak_id)\n\tIFF(old_claim_total_loss_submit_hist_ak_id IS NULL, NEXTVAL, old_claim_total_loss_submit_hist_ak_id) AS claim_total_loss_submit_hist_ak_id_out,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_system_id,\n\tSYSDATE AS created_modified_date,\n\tvehicle_vin_out,\n\tadd_action_out,\n\tloss_date_out,\n\tloss_owner_out,\n\tnew_owner_out,\n\tadd_actionts_out,\n\tclaim_total_loss_ak_id\n\tFROM FIL_insert_rows\n),\nclaim_total_loss_submit_history AS (\n\tINSERT INTO claim_total_loss_submit_history\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_total_loss_submit_hist_ak_id, claim_total_loss_ak_id, submit_to_vendor_date, submit_to_vendor_action, vin_num, total_loss_date, loss_owner, new_owner)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tsource_system_id AS SOURCE_SYS_ID, \n\tcreated_modified_date AS CREATED_DATE, \n\tcreated_modified_date AS MODIFIED_DATE, \n\tclaim_total_loss_submit_hist_ak_id_out AS CLAIM_TOTAL_LOSS_SUBMIT_HIST_AK_ID, \n\tCLAIM_TOTAL_LOSS_AK_ID, \n\tadd_actionts_out AS SUBMIT_TO_VENDOR_DATE, \n\tadd_action_out AS SUBMIT_TO_VENDOR_ACTION, \n\tvehicle_vin_out AS VIN_NUM, \n\tloss_date_out AS TOTAL_LOSS_DATE, \n\tloss_owner_out AS LOSS_OWNER, \n\tnew_owner_out AS NEW_OWNER\n\tFROM EXP_determine_AK\n),\nSQ_claim_total_loss_submit_history AS (\n\tSELECT a.claim_total_loss_submit_hist_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date, \r\n\ta.source_sys_id, \r\n\ta.claim_total_loss_submit_hist_ak_id, \r\n\ta.claim_total_loss_ak_id \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_total_loss_submit_history a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND\r\n\tEXISTS(SELECT 1\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_total_loss_submit_history b\r\n\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND \r\n\t\tb.crrnt_snpsht_flag = '1'\r\n\t\tAND a.claim_total_loss_submit_hist_ak_id = b.claim_total_loss_submit_hist_ak_id\r\n\t\tAND a.claim_total_loss_ak_id = b.claim_total_loss_ak_id\r\n\t\tAND a.submit_to_vendor_date = b.submit_to_vendor_date\r\n\t\tGROUP BY claim_total_loss_submit_hist_ak_id, claim_total_loss_ak_id, submit_to_vendor_date\r\n\t\tHAVING count(*) > 1)\r\n\tORDER BY claim_total_loss_submit_hist_ak_id, claim_total_loss_ak_id, submit_to_vendor_date, eff_from_date  DESC\n),\nEXP_expire_rows AS (\n\tSELECT\n\tclaim_total_loss_submit_hist_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tclaim_total_loss_submit_hist_ak_id,\n\tclaim_total_loss_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_total_loss_submit_hist_ak_id = v_prev_row_claim_total_loss_ak_id AND claim_total_loss_ak_id = v_prev_row_claimant_cov_det_ak_id, ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),\r\n\t-- \teff_to_date)\n\tDECODE(TRUE,\n\tclaim_total_loss_submit_hist_ak_id = v_prev_row_claim_total_loss_ak_id AND claim_total_loss_ak_id = v_prev_row_claimant_cov_det_ak_id, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\teff_to_date) AS v_new_eff_to_date,\n\tv_new_eff_to_date AS new_eff_to_date,\n\t0 AS new_crrnt_snpsht_flag,\n\tclaim_total_loss_submit_hist_ak_id AS v_prev_row_claim_total_loss_ak_id,\n\tclaim_total_loss_ak_id AS v_prev_row_claimant_cov_det_ak_id,\n\teff_from_date AS v_prev_row_eff_from_date,\n\tsysdate AS new_modified_Date\n\tFROM SQ_claim_total_loss_submit_history\n),\nFIL_first_row_in_ak_group AS (\n\tSELECT\n\tclaim_total_loss_submit_hist_id, \n\teff_to_date, \n\tclaim_total_loss_submit_hist_ak_id, \n\tclaim_total_loss_ak_id, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_Date\n\tFROM EXP_expire_rows\n\tWHERE eff_to_date <> new_eff_to_date\n),\nUPD_claim_total_loss_submit_history AS (\n\tSELECT\n\tclaim_total_loss_submit_hist_id, \n\tnew_eff_to_date, \n\tnew_crrnt_snpsht_flag, \n\tnew_modified_Date\n\tFROM FIL_first_row_in_ak_group\n),\nclaim_total_loss_submit_history_update AS (\n\tMERGE INTO claim_total_loss_submit_history AS T\n\tUSING UPD_claim_total_loss_submit_history AS S\n\tON T.claim_total_loss_submit_hist_id = S.claim_total_loss_submit_hist_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.new_crrnt_snpsht_flag, T.eff_to_date = S.new_eff_to_date, T.modified_date = S.new_modified_Date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}