{
    "name": "s_m_CLM_DW_LOAD_Claim_Representative_Occurrence_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Representative_Occurrence_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLAIM_OCCURRENCE AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\t   claim_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\t   claim_occurrence.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM \r\n\t\t   claim_occurrence\r\n\t\tWHERE\r\n\t\t   source_sys_id = '@{pipeline().parameters.SOURCE_SYS_ID}' AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_Claim_Rep_AK_id AS (\n\tSELECT\n\tclaim_rep_ak_id,\n\tclaim_rep_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_rep_ak_id as claim_rep_ak_id\r\n\t\t, ltrim(rtrim(a.claim_rep_key)) as claim_rep_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tand a.source_sys_id\t = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_key ORDER BY claim_rep_ak_id) = 1\n),\nLKP_Claim_Rep_Office_Code AS (\n\tSELECT\n\thandling_office_code,\n\tclaim_rep_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.handling_office_code)) as handling_office_code\r\n\t\t, a.claim_rep_ak_id as claim_rep_ak_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tand a.source_sys_id\t = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_ak_id ORDER BY handling_office_code) = 1\n),\nLKP_Claim_Rep_Dept_Code AS (\n\tSELECT\n\tdept_name,\n\tclaim_rep_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.dept_name)) as dept_name\r\n\t\t, a.claim_rep_ak_id as claim_rep_ak_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tand a.source_sys_id\t = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_ak_id ORDER BY dept_name) = 1\n),\nLKP_Claim_Rep_Dvsn_Code AS (\n\tSELECT\n\tdvsn_code,\n\tclaim_rep_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.dvsn_code)) as dvsn_code\r\n\t\t,a.claim_rep_ak_id as claim_rep_ak_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tand a.source_sys_id\t = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_ak_id ORDER BY dvsn_code) = 1\n),\nSQ_CLAIM_ADJUSTER_STAGE AS (\n\tSELECT \r\n\tltrim(rtrim(CAI_CLAIM_NBR))\r\n\t,ltrim(rtrim(CAI_CLM_HDL_ID))\r\n\t,ltrim(rtrim(CAI_ADJ_ROLE_CD))\r\n\t,CAI_DATE_ASSIGNED\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_ADJUSTER_STAGE\n),\nEXP_Claim_Adjuster_Stage AS (\n\tSELECT\n\tCAI_CLAIM_NBR,\n\t-- *INF*: IIF(IS_SPACES(CAI_CLAIM_NBR) OR ISNULL(CAI_CLAIM_NBR)\r\n\t-- ,'N/A'\r\n\t-- ,CAI_CLAIM_NBR)\n\tIFF(\n\t    LENGTH(CAI_CLAIM_NBR)>0 AND TRIM(CAI_CLAIM_NBR)='' OR CAI_CLAIM_NBR IS NULL, 'N/A',\n\t    CAI_CLAIM_NBR\n\t) AS out_CAI_CLAIM_NBR,\n\tCAI_CLM_HDL_ID,\n\t-- *INF*: IIF(IS_SPACES(CAI_CLM_HDL_ID) OR ISNULL(CAI_CLM_HDL_ID)\r\n\t-- ,'N/A'\r\n\t-- ,CAI_CLM_HDL_ID)\n\tIFF(\n\t    LENGTH(CAI_CLM_HDL_ID)>0 AND TRIM(CAI_CLM_HDL_ID)='' OR CAI_CLM_HDL_ID IS NULL, 'N/A',\n\t    CAI_CLM_HDL_ID\n\t) AS out_CAI_CLM_HDL_ID,\n\tCAI_ADJ_ROLE_CD,\n\t-- *INF*: IIF(IS_SPACES(CAI_ADJ_ROLE_CD) OR ISNULL(CAI_ADJ_ROLE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,CAI_ADJ_ROLE_CD)\n\tIFF(\n\t    LENGTH(CAI_ADJ_ROLE_CD)>0 AND TRIM(CAI_ADJ_ROLE_CD)='' OR CAI_ADJ_ROLE_CD IS NULL, 'N/A',\n\t    CAI_ADJ_ROLE_CD\n\t) AS out_CAI_ADJ_ROLE_CD,\n\tCAI_DATE_ASSIGNED\n\tFROM SQ_CLAIM_ADJUSTER_STAGE\n),\nLKP_Claim_Occurrence_EDW AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT\r\n\t\ta.claim_occurrence_ak_id as claim_occurrence_ak_id\r\n\t\t,ltrim(rtrim(a.claim_occurrence_key)) as claim_occurrence_key\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence a\r\n\t\twhere  a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_Claim_Rep_Occurrence_EDW AS (\n\tSELECT\n\tclaim_rep_occurrence_ak_id,\n\tclaim_rep_ak_id,\n\tclaim_assigned_date,\n\tclaim_occurrence_ak_id,\n\tclaim_rep_role_code\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_rep_occurrence_ak_id as claim_rep_occurrence_ak_id\r\n\t\t, a.claim_assigned_date as claim_assigned_date\r\n\t\t, a.claim_occurrence_ak_id as claim_occurrence_ak_id\r\n\t\t, a.claim_rep_ak_id as claim_rep_ak_id\r\n\t\t, a.claim_rep_role_code as claim_rep_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence a\r\n\t\twhere \r\n\t\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.claim_rep_occurrence_id in (select max(b.claim_rep_occurrence_id)\r\n\t\t\t                                                                   from @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence b\r\n\t\t                                                                         where b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and b.crrnt_snpsht_flag = 1\r\n\t\t                                                                         group by b.claim_rep_ak_id, b.claim_occurrence_ak_id,b.claim_rep_role_code)\r\n\t\torder by a.claim_rep_ak_id, a.claim_occurrence_ak_id, a.claim_rep_role_code --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,claim_rep_role_code ORDER BY claim_rep_occurrence_ak_id) = 1\n),\nExp_Determine_Hierarchy_Existing_Rep AS (\n\tSELECT\n\tclaim_rep_ak_id AS old_claim_rep_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_OFFICE_CODE(old_claim_rep_ak_id)\n\tLKP_CLAIM_REP_OFFICE_CODE_old_claim_rep_ak_id.handling_office_code AS old_handling_office_code,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_DEPT_CODE(old_claim_rep_ak_id)\n\tLKP_CLAIM_REP_DEPT_CODE_old_claim_rep_ak_id.dept_name AS old_dept_name,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_DVSN_CODE(old_claim_rep_ak_id)\n\tLKP_CLAIM_REP_DVSN_CODE_old_claim_rep_ak_id.dvsn_code AS old_dvsn_code\n\tFROM LKP_Claim_Rep_Occurrence_EDW\n\tLEFT JOIN LKP_CLAIM_REP_OFFICE_CODE LKP_CLAIM_REP_OFFICE_CODE_old_claim_rep_ak_id\n\tON LKP_CLAIM_REP_OFFICE_CODE_old_claim_rep_ak_id.claim_rep_ak_id = old_claim_rep_ak_id\n\n\tLEFT JOIN LKP_CLAIM_REP_DEPT_CODE LKP_CLAIM_REP_DEPT_CODE_old_claim_rep_ak_id\n\tON LKP_CLAIM_REP_DEPT_CODE_old_claim_rep_ak_id.claim_rep_ak_id = old_claim_rep_ak_id\n\n\tLEFT JOIN LKP_CLAIM_REP_DVSN_CODE LKP_CLAIM_REP_DVSN_CODE_old_claim_rep_ak_id\n\tON LKP_CLAIM_REP_DVSN_CODE_old_claim_rep_ak_id.claim_rep_ak_id = old_claim_rep_ak_id\n\n),\nExp_Determine_Hierarchy_Incoming_Rep AS (\n\tSELECT\n\tout_CAI_CLM_HDL_ID AS claim_rep_key,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_AK_ID(claim_rep_key)\n\tLKP_CLAIM_REP_AK_ID_claim_rep_key.claim_rep_ak_id AS lkp_claim_rep_ak_id,\n\tlkp_claim_rep_ak_id AS new_claim_rep_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_OFFICE_CODE(lkp_claim_rep_ak_id)\n\tLKP_CLAIM_REP_OFFICE_CODE_lkp_claim_rep_ak_id.handling_office_code AS new_handling_office_code,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_DEPT_CODE(lkp_claim_rep_ak_id)\n\tLKP_CLAIM_REP_DEPT_CODE_lkp_claim_rep_ak_id.dept_name AS new_dept_name,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_DVSN_CODE(lkp_claim_rep_ak_id)\n\tLKP_CLAIM_REP_DVSN_CODE_lkp_claim_rep_ak_id.dvsn_code AS new_dvsn_code\n\tFROM EXP_Claim_Adjuster_Stage\n\tLEFT JOIN LKP_CLAIM_REP_AK_ID LKP_CLAIM_REP_AK_ID_claim_rep_key\n\tON LKP_CLAIM_REP_AK_ID_claim_rep_key.claim_rep_key = claim_rep_key\n\n\tLEFT JOIN LKP_CLAIM_REP_OFFICE_CODE LKP_CLAIM_REP_OFFICE_CODE_lkp_claim_rep_ak_id\n\tON LKP_CLAIM_REP_OFFICE_CODE_lkp_claim_rep_ak_id.claim_rep_ak_id = lkp_claim_rep_ak_id\n\n\tLEFT JOIN LKP_CLAIM_REP_DEPT_CODE LKP_CLAIM_REP_DEPT_CODE_lkp_claim_rep_ak_id\n\tON LKP_CLAIM_REP_DEPT_CODE_lkp_claim_rep_ak_id.claim_rep_ak_id = lkp_claim_rep_ak_id\n\n\tLEFT JOIN LKP_CLAIM_REP_DVSN_CODE LKP_CLAIM_REP_DVSN_CODE_lkp_claim_rep_ak_id\n\tON LKP_CLAIM_REP_DVSN_CODE_lkp_claim_rep_ak_id.claim_rep_ak_id = lkp_claim_rep_ak_id\n\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Claim_Rep_Occurrence_EDW.claim_rep_occurrence_ak_id,\n\tLKP_Claim_Rep_Occurrence_EDW.claim_rep_ak_id AS old_claim_rep_ak_id,\n\tLKP_Claim_Rep_Occurrence_EDW.claim_assigned_date AS old_claim_assigned_date,\n\tExp_Determine_Hierarchy_Incoming_Rep.new_claim_rep_ak_id,\n\tExp_Determine_Hierarchy_Incoming_Rep.new_handling_office_code,\n\tExp_Determine_Hierarchy_Incoming_Rep.new_dept_name,\n\tExp_Determine_Hierarchy_Incoming_Rep.new_dvsn_code,\n\tExp_Determine_Hierarchy_Existing_Rep.old_handling_office_code,\n\tExp_Determine_Hierarchy_Existing_Rep.old_dept_name,\n\tExp_Determine_Hierarchy_Existing_Rep.old_dvsn_code,\n\tLKP_Claim_Occurrence_EDW.claim_occurrence_ak_id,\n\t-- *INF*: IIF(ISNULL(claim_rep_occurrence_ak_id)\r\n\t-- , 'NEW'\r\n\t-- ,  IIF(old_claim_assigned_date != CAI_DATE_ASSIGNED or new_claim_rep_ak_id != old_claim_rep_ak_id\r\n\t-- , 'UPDATE'\r\n\t-- , 'NOCHANGE'))\n\tIFF(\n\t    claim_rep_occurrence_ak_id IS NULL, 'NEW',\n\t    IFF(\n\t        old_claim_assigned_date != CAI_DATE_ASSIGNED\n\t    or new_claim_rep_ak_id != old_claim_rep_ak_id,\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_changed_flag,\n\t-- *INF*: iif(isnull(claim_rep_occurrence_ak_id)\r\n\t--    ,0\r\n\t--    ,iif((new_claim_rep_ak_id != old_claim_rep_ak_id)\r\n\t--        ,2\r\n\t--        ,0\r\n\t--        )\r\n\t--    )\n\tIFF(\n\t    claim_rep_occurrence_ak_id IS NULL, 0,\n\t    IFF(\n\t        (new_claim_rep_ak_id != old_claim_rep_ak_id), 2, 0\n\t    )\n\t) AS transferred_claim_adjuster_lvl_ind,\n\t-- *INF*: iif(isnull(claim_rep_occurrence_ak_id)\r\n\t--    ,0\r\n\t--    ,iif((new_claim_rep_ak_id != old_claim_rep_ak_id) and (new_handling_office_code != old_handling_office_code)\r\n\t--        ,2\r\n\t--        ,0\r\n\t--        )\r\n\t--    )\n\tIFF(\n\t    claim_rep_occurrence_ak_id IS NULL, 0,\n\t    IFF(\n\t        (new_claim_rep_ak_id != old_claim_rep_ak_id)\n\t        and (new_handling_office_code != old_handling_office_code),\n\t        2,\n\t        0\n\t    )\n\t) AS transferred_claim_handling_office_lvl_ind,\n\t-- *INF*: iif(isnull(claim_rep_occurrence_ak_id)\r\n\t--    ,0\r\n\t--    ,iif((new_claim_rep_ak_id != old_claim_rep_ak_id) and (new_dept_name != old_dept_name)\r\n\t--        ,2\r\n\t--        ,0\r\n\t--        )\r\n\t--    ) \n\tIFF(\n\t    claim_rep_occurrence_ak_id IS NULL, 0,\n\t    IFF(\n\t        (new_claim_rep_ak_id != old_claim_rep_ak_id)\n\t    and (new_dept_name != old_dept_name), 2,\n\t        0\n\t    )\n\t) AS transferred_claim_dept_lvl_ind,\n\t-- *INF*: iif(isnull(claim_rep_occurrence_ak_id)\r\n\t--    ,0\r\n\t--    ,iif((new_claim_rep_ak_id != old_claim_rep_ak_id) and (new_dvsn_code != old_dvsn_code)\r\n\t--        ,2\r\n\t--        ,0\r\n\t--        )\r\n\t--    )\n\tIFF(\n\t    claim_rep_occurrence_ak_id IS NULL, 0,\n\t    IFF(\n\t        (new_claim_rep_ak_id != old_claim_rep_ak_id)\n\t    and (new_dvsn_code != old_dvsn_code), 2,\n\t        0\n\t    )\n\t) AS transferred_claim_dvsn_lvl_ind,\n\tEXP_Claim_Adjuster_Stage.CAI_DATE_ASSIGNED,\n\tEXP_Claim_Adjuster_Stage.out_CAI_ADJ_ROLE_CD AS CAI_ADJ_ROLE_CD,\n\t0 AS logical_flag,\n\t1 AS Crrnt_SnapSht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\t-- *INF*: iif(v_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(\n\t    v_changed_flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tv_changed_flag AS changed_flag,\n\tsysdate AS created_date,\n\tsysdate AS modified_date\n\tFROM EXP_Claim_Adjuster_Stage\n\t -- Manually join with Exp_Determine_Hierarchy_Existing_Rep\n\t -- Manually join with Exp_Determine_Hierarchy_Incoming_Rep\n\tLEFT JOIN LKP_Claim_Occurrence_EDW\n\tON LKP_Claim_Occurrence_EDW.claim_occurrence_key = EXP_Claim_Adjuster_Stage.out_CAI_CLAIM_NBR\n\tLEFT JOIN LKP_Claim_Rep_Occurrence_EDW\n\tON LKP_Claim_Rep_Occurrence_EDW.claim_occurrence_ak_id = LKP_Claim_Occurrence_EDW.claim_occurrence_ak_id AND LKP_Claim_Rep_Occurrence_EDW.claim_rep_role_code = EXP_Claim_Adjuster_Stage.out_CAI_ADJ_ROLE_CD\n),\nFIL_Insert AS (\n\tSELECT\n\tclaim_rep_occurrence_ak_id, \n\tnew_claim_rep_ak_id, \n\tclaim_occurrence_ak_id, \n\ttransferred_claim_adjuster_lvl_ind, \n\ttransferred_claim_handling_office_lvl_ind, \n\ttransferred_claim_dept_lvl_ind, \n\ttransferred_claim_dvsn_lvl_ind, \n\tCAI_DATE_ASSIGNED, \n\tCAI_ADJ_ROLE_CD, \n\tlogical_flag, \n\tCrrnt_SnapSht_Flag, \n\tAUDIT_ID, \n\tSOURCE_SYSTEM_ID, \n\teff_from_date, \n\teff_to_date, \n\tchanged_flag, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW' or changed_flag='UPDATE'\n),\nSEQ_Claim_Rep_Occurrence_AK AS (\n\tCREATE SEQUENCE SEQ_Claim_Rep_Occurrence_AK\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_TRANS_Determine_AK AS (\n\tSELECT\n\tclaim_rep_occurrence_ak_id,\n\tSEQ_Claim_Rep_Occurrence_AK.NEXTVAL,\n\t-- *INF*: iif(isnull(claim_rep_occurrence_ak_id)\r\n\t-- ,NEXTVAL\r\n\t-- ,claim_rep_occurrence_ak_id)\n\tIFF(claim_rep_occurrence_ak_id IS NULL, NEXTVAL, claim_rep_occurrence_ak_id) AS out_claim_rep_occurrence_ak_id,\n\tnew_claim_rep_ak_id,\n\tclaim_occurrence_ak_id,\n\ttransferred_claim_adjuster_lvl_ind,\n\ttransferred_claim_handling_office_lvl_ind,\n\ttransferred_claim_dept_lvl_ind,\n\ttransferred_claim_dvsn_lvl_ind,\n\tCAI_DATE_ASSIGNED,\n\tCAI_ADJ_ROLE_CD,\n\tlogical_flag,\n\tCrrnt_SnapSht_Flag,\n\tAUDIT_ID,\n\tSOURCE_SYSTEM_ID,\n\teff_from_date,\n\teff_to_date,\n\tchanged_flag,\n\tcreated_date,\n\tmodified_date\n\tFROM FIL_Insert\n),\nclaim_representative_occurrence_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence\n\t(claim_rep_occurrence_ak_id, claim_rep_ak_id, claim_occurrence_ak_id, claim_assigned_date, claim_rep_role_code, transferred_claim_adjuster_lvl_ind, transferred_claim_handling_office_lvl_ind, transferred_claim_dept_lvl_ind, transferred_claim_dvsn_lvl_ind, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tout_claim_rep_occurrence_ak_id AS CLAIM_REP_OCCURRENCE_AK_ID, \n\tnew_claim_rep_ak_id AS CLAIM_REP_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tCAI_DATE_ASSIGNED AS CLAIM_ASSIGNED_DATE, \n\tCAI_ADJ_ROLE_CD AS CLAIM_REP_ROLE_CODE, \n\tTRANSFERRED_CLAIM_ADJUSTER_LVL_IND, \n\tTRANSFERRED_CLAIM_HANDLING_OFFICE_LVL_IND, \n\tTRANSFERRED_CLAIM_DEPT_LVL_IND, \n\tTRANSFERRED_CLAIM_DVSN_LVL_IND, \n\tLOGICAL_FLAG, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_TRANS_Determine_AK\n),\nSQ_clm_case_manage_stage AS (\n\tSELECT  DISTINCT clm_case_manage_stage.tch_claim_nbr, clm_case_manage_stage.prim_lit_handler \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_case_manage_stage\n),\nEXP_default AS (\n\tSELECT\n\ttch_claim_nbr,\n\tprim_lit_handler,\n\t-- *INF*: :LKP.LKP_CLAIM_OCCURRENCE(tch_claim_nbr)\n\tLKP_CLAIM_OCCURRENCE_tch_claim_nbr.claim_occurrence_ak_id AS v_claim_occurrence_ak_id,\n\tv_claim_occurrence_ak_id AS claim_occurrence_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_REP_AK_ID(prim_lit_handler)\n\tLKP_CLAIM_REP_AK_ID_prim_lit_handler.claim_rep_ak_id AS v_claim_rep_ak_id,\n\tv_claim_rep_ak_id AS claim_rep_ak_id,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS claim_assigned_date,\n\t'PLH' AS claim_rep_role_code,\n\t0 AS transferred_claim_adjuster_lvl_ind,\n\t0 AS transferred_claim_handling_office_lvl_ind,\n\t0 AS transferred_claim_dept_lvl_ind,\n\t0 AS transferred_claim_dvsn_lvl_ind,\n\t0 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM SQ_clm_case_manage_stage\n\tLEFT JOIN LKP_CLAIM_OCCURRENCE LKP_CLAIM_OCCURRENCE_tch_claim_nbr\n\tON LKP_CLAIM_OCCURRENCE_tch_claim_nbr.claim_occurrence_key = tch_claim_nbr\n\n\tLEFT JOIN LKP_CLAIM_REP_AK_ID LKP_CLAIM_REP_AK_ID_prim_lit_handler\n\tON LKP_CLAIM_REP_AK_ID_prim_lit_handler.claim_rep_key = prim_lit_handler\n\n),\nFIL_Claim_Rep_ak_id AS (\n\tSELECT\n\tclaim_occurrence_ak_id, \n\tclaim_rep_ak_id, \n\tclaim_assigned_date, \n\tclaim_rep_role_code, \n\ttransferred_claim_adjuster_lvl_ind, \n\ttransferred_claim_handling_office_lvl_ind, \n\ttransferred_claim_dept_lvl_ind, \n\ttransferred_claim_dvsn_lvl_ind, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_default\n\tWHERE IIF(ISNULL(claim_rep_ak_id),FALSE,TRUE)\n),\nLKP_Claim_Rep_Occ_id AS (\n\tSELECT\n\tclaim_rep_occurrence_id,\n\tclaim_rep_ak_id,\n\tclaim_occurrence_ak_id\n\tFROM (\n\t\tSELECT claim_representative_occurrence.claim_rep_occurrence_id as claim_rep_occurrence_id, \r\n\t\tclaim_representative_occurrence.claim_rep_ak_id as claim_rep_ak_id, \r\n\t\tclaim_representative_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence\r\n\t\tWHERE claim_rep_role_code = 'PLH'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_ak_id,claim_occurrence_ak_id ORDER BY claim_rep_occurrence_id DESC) = 1\n),\nFIL_Claim_Rep_Occurrence_id AS (\n\tSELECT\n\tLKP_Claim_Rep_Occ_id.claim_rep_occurrence_id, \n\tFIL_Claim_Rep_ak_id.claim_occurrence_ak_id, \n\tFIL_Claim_Rep_ak_id.claim_rep_ak_id, \n\tFIL_Claim_Rep_ak_id.claim_assigned_date, \n\tFIL_Claim_Rep_ak_id.claim_rep_role_code, \n\tFIL_Claim_Rep_ak_id.transferred_claim_adjuster_lvl_ind, \n\tFIL_Claim_Rep_ak_id.transferred_claim_handling_office_lvl_ind, \n\tFIL_Claim_Rep_ak_id.transferred_claim_dept_lvl_ind, \n\tFIL_Claim_Rep_ak_id.transferred_claim_dvsn_lvl_ind, \n\tFIL_Claim_Rep_ak_id.logical_flag, \n\tFIL_Claim_Rep_ak_id.crrnt_snpsht_flag, \n\tFIL_Claim_Rep_ak_id.audit_id, \n\tFIL_Claim_Rep_ak_id.eff_from_date, \n\tFIL_Claim_Rep_ak_id.eff_to_date, \n\tFIL_Claim_Rep_ak_id.source_sys_id, \n\tFIL_Claim_Rep_ak_id.created_date, \n\tFIL_Claim_Rep_ak_id.modified_date\n\tFROM FIL_Claim_Rep_ak_id\n\tLEFT JOIN LKP_Claim_Rep_Occ_id\n\tON LKP_Claim_Rep_Occ_id.claim_rep_ak_id = FIL_Claim_Rep_ak_id.claim_rep_ak_id AND LKP_Claim_Rep_Occ_id.claim_occurrence_ak_id = FIL_Claim_Rep_ak_id.claim_occurrence_ak_id\n\tWHERE ISNULL(claim_rep_occurrence_id)\n),\nclaim_representative_occurrence_insert_PLH AS (\n\tINSERT INTO claim_representative_occurrence\n\t(claim_rep_occurrence_ak_id, claim_rep_ak_id, claim_occurrence_ak_id, claim_assigned_date, claim_rep_role_code, transferred_claim_adjuster_lvl_ind, transferred_claim_handling_office_lvl_ind, transferred_claim_dept_lvl_ind, transferred_claim_dvsn_lvl_ind, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Claim_Rep_Occurrence_AK.NEXTVAL AS CLAIM_REP_OCCURRENCE_AK_ID, \n\tCLAIM_REP_AK_ID, \n\tCLAIM_OCCURRENCE_AK_ID, \n\tCLAIM_ASSIGNED_DATE, \n\tCLAIM_REP_ROLE_CODE, \n\tTRANSFERRED_CLAIM_ADJUSTER_LVL_IND, \n\tTRANSFERRED_CLAIM_HANDLING_OFFICE_LVL_IND, \n\tTRANSFERRED_CLAIM_DEPT_LVL_IND, \n\tTRANSFERRED_CLAIM_DVSN_LVL_IND, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM FIL_Claim_Rep_Occurrence_id\n),\nSQ_claim_representative_occurrence AS (\n\tSELECT \r\n\ta.claim_rep_occurrence_id\r\n\t, a.claim_rep_ak_id\r\n\t, a.claim_occurrence_ak_id\r\n\t, a.claim_rep_role_code\r\n\t, a.transferred_claim_adjuster_lvl_ind\r\n\t, a.transferred_claim_handling_office_lvl_ind\r\n\t, a.transferred_claim_dept_lvl_ind\r\n\t, a.transferred_claim_dvsn_lvl_ind\r\n\t, a.eff_from_date\r\n\t, a.eff_to_date\r\n\t, a.source_sys_id \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t\t and a.claim_rep_occurrence_ak_id = b.claim_rep_occurrence_ak_id\r\n\t\tGROUP BY b.claim_rep_occurrence_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY  a.claim_rep_occurrence_ak_id,a.eff_from_date  DESC\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of crrnt_snpsht_flag = 1 and AK ID\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK ID and eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Claim_Rep_Occurrence_Expire_Row AS (\n\tSELECT\n\tclaim_rep_occurrence_id,\n\tclaim_rep_ak_id,\n\tclaim_occurrence_ak_id,\n\tclaim_rep_role_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\ttransferred_claim_adjuster_lvl_ind,\n\ttransferred_claim_handling_office_lvl_ind,\n\ttransferred_claim_dept_lvl_ind,\n\ttransferred_claim_dvsn_lvl_ind,\n\t-- *INF*: DECODE (TRUE, claim_occurrence_ak_id = v_PREV_ROW_claim_occurrence_id \r\n\t-- and\r\n\t-- claim_rep_role_code = v_PREV_ROW_claim_rep_role_code\r\n\t-- and \r\n\t-- source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    claim_occurrence_ak_id = v_PREV_ROW_claim_occurrence_id and claim_rep_role_code = v_PREV_ROW_claim_rep_role_code and source_sys_id = v_PREV_ROW_source_sys_id, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tclaim_rep_ak_id AS v_PREV_ROW_claim_rep_id,\n\tclaim_occurrence_ak_id AS v_PREV_ROW_claim_occurrence_id,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\tclaim_rep_role_code AS v_PREV_ROW_claim_rep_role_code,\n\t-- *INF*: iif(v_PREV_ROW_transferred_claim_adjuster_lvl_ind='2' and transferred_claim_adjuster_lvl_ind='0'\r\n\t--    ,'1'\r\n\t--    ,iif(v_PREV_ROW_transferred_claim_adjuster_lvl_ind='2' and transferred_claim_adjuster_lvl_ind='2'\r\n\t--        ,'3'\r\n\t--        ,transferred_claim_adjuster_lvl_ind)\r\n\t--    )\n\tIFF(\n\t    v_PREV_ROW_transferred_claim_adjuster_lvl_ind = '2'\n\t    and transferred_claim_adjuster_lvl_ind = '0',\n\t    '1',\n\t    IFF(\n\t        v_PREV_ROW_transferred_claim_adjuster_lvl_ind = '2'\n\t        and transferred_claim_adjuster_lvl_ind = '2',\n\t        '3',\n\t        transferred_claim_adjuster_lvl_ind\n\t    )\n\t) AS v_transferred_claim_adjuster_lvl_ind,\n\tv_transferred_claim_adjuster_lvl_ind AS out_transferred_claim_adjuster_lvl_ind,\n\t-- *INF*: iif(v_PREV_ROW_transferred_claim_handling_office_lvl_ind='2' and transferred_claim_handling_office_lvl_ind='0'\r\n\t--    ,'1'\r\n\t--    ,iif(v_PREV_ROW_transferred_claim_handling_office_lvl_ind='2' and transferred_claim_handling_office_lvl_ind='2'\r\n\t--        ,'3'\r\n\t--        ,transferred_claim_handling_office_lvl_ind)\r\n\t--    )\n\tIFF(\n\t    v_PREV_ROW_transferred_claim_handling_office_lvl_ind = '2'\n\t    and transferred_claim_handling_office_lvl_ind = '0',\n\t    '1',\n\t    IFF(\n\t        v_PREV_ROW_transferred_claim_handling_office_lvl_ind = '2'\n\t        and transferred_claim_handling_office_lvl_ind = '2',\n\t        '3',\n\t        transferred_claim_handling_office_lvl_ind\n\t    )\n\t) AS v_transferred_claim_handling_office_lvl_ind,\n\tv_transferred_claim_handling_office_lvl_ind AS out_transferred_claim_handling_office_lvl_ind,\n\t-- *INF*: iif(v_PREV_ROW_transferred_claim_dept_lvl_ind='2' and transferred_claim_dept_lvl_ind='0'\r\n\t--    ,'1'\r\n\t--    ,iif(v_PREV_ROW_transferred_claim_dept_lvl_ind='2' and transferred_claim_dept_lvl_ind='2'\r\n\t--        ,'3'\r\n\t--        ,transferred_claim_dept_lvl_ind)\r\n\t--    )\n\tIFF(\n\t    v_PREV_ROW_transferred_claim_dept_lvl_ind = '2' and transferred_claim_dept_lvl_ind = '0',\n\t    '1',\n\t    IFF(\n\t        v_PREV_ROW_transferred_claim_dept_lvl_ind = '2'\n\t    and transferred_claim_dept_lvl_ind = '2',\n\t        '3',\n\t        transferred_claim_dept_lvl_ind\n\t    )\n\t) AS v_transferred_claim_dept_lvl_ind,\n\tv_transferred_claim_dept_lvl_ind AS out_transferred_claim_dept_lvl_ind,\n\t-- *INF*: iif(v_PREV_ROW_transferred_claim_dvsn_lvl_ind='2' and transferred_claim_dvsn_lvl_ind='0'\r\n\t--    ,'1'\r\n\t--    ,iif(v_PREV_ROW_transferred_claim_dvsn_lvl_ind='2' and transferred_claim_dvsn_lvl_ind='2'\r\n\t--        ,'3'\r\n\t--        ,transferred_claim_dvsn_lvl_ind)\r\n\t--    )\n\tIFF(\n\t    v_PREV_ROW_transferred_claim_dvsn_lvl_ind = '2' and transferred_claim_dvsn_lvl_ind = '0',\n\t    '1',\n\t    IFF(\n\t        v_PREV_ROW_transferred_claim_dvsn_lvl_ind = '2'\n\t    and transferred_claim_dvsn_lvl_ind = '2',\n\t        '3',\n\t        transferred_claim_dvsn_lvl_ind\n\t    )\n\t) AS v_transferred_claim_dvsn_lvl_ind,\n\tv_transferred_claim_dvsn_lvl_ind AS out_transferred_claim_dvsn_lvl_ind,\n\ttransferred_claim_adjuster_lvl_ind AS v_PREV_ROW_transferred_claim_adjuster_lvl_ind,\n\ttransferred_claim_handling_office_lvl_ind AS v_PREV_ROW_transferred_claim_handling_office_lvl_ind,\n\ttransferred_claim_dept_lvl_ind AS v_PREV_ROW_transferred_claim_dept_lvl_ind,\n\ttransferred_claim_dvsn_lvl_ind AS v_PREV_ROW_transferred_claim_dvsn_lvl_ind,\n\t0 AS crrnt_Snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claim_representative_occurrence\n),\nFIL_Claim_Rep_Occurrence_Upd AS (\n\tSELECT\n\tclaim_rep_occurrence_id, \n\tout_transferred_claim_adjuster_lvl_ind, \n\tout_transferred_claim_handling_office_lvl_ind, \n\tout_transferred_claim_dept_lvl_ind, \n\tout_transferred_claim_dvsn_lvl_ind, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM EXP_Claim_Rep_Occurrence_Expire_Row\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Claim_Rep_Occurrence AS (\n\tSELECT\n\tclaim_rep_occurrence_id, \n\tout_transferred_claim_adjuster_lvl_ind, \n\tout_transferred_claim_handling_office_lvl_ind, \n\tout_transferred_claim_dept_lvl_ind, \n\tout_transferred_claim_dvsn_lvl_ind, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM FIL_Claim_Rep_Occurrence_Upd\n),\nclaim_representative_occurrence_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_occurrence AS T\n\tUSING UPD_Claim_Rep_Occurrence AS S\n\tON T.claim_rep_occurrence_id = S.claim_rep_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.transferred_claim_adjuster_lvl_ind = S.out_transferred_claim_adjuster_lvl_ind, T.transferred_claim_handling_office_lvl_ind = S.out_transferred_claim_handling_office_lvl_ind, T.transferred_claim_dept_lvl_ind = S.out_transferred_claim_dept_lvl_ind, T.transferred_claim_dvsn_lvl_ind = S.out_transferred_claim_dvsn_lvl_ind, T.crrnt_snpsht_flag = S.crrnt_Snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_SYS_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}