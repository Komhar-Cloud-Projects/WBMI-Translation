{
    "name": "s_m_CLM_BALANCE_STAGE_EDW_Claim_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_BALANCE_STAGE_EDW_Claim_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_ARCH_PIF_4578_STAGE AS (\n\tSELECT COUNT(*) as pif_4578_stage_id,\r\n\t\t\t\t(pif_symbol + pif_policy_number + pif_module +\r\n\t                \t(CASE LEN(CONVERT(varchar(2), loss_month)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_month) \r\n\t                     \tELSE CONVERT(varchar(2), loss_month) END) +\r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_day)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_day) \r\n\t                     \tELSE CONVERT(varchar(2), loss_day) END) + CONVERT(varchar(4), loss_year)+\r\n\t\t\t\tloss_occurence) as loss_rec_length, \r\n\t\t\t\tSUM(loss_paid_or_resv_amt) as loss_location_number \r\n\tFROM @{pipeline().parameters.DB_NAME_STAGE}.dbo.pif_4578_stage_temp\r\n\t\t\t\tWHERE logical_flag = 0 --No Dummy Transactions\r\n\t\t\t  \tAND loss_part = '7'  --No Reinsurrance\r\n\tGROUP BY \t(pif_symbol + pif_policy_number + pif_module + \r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_month)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_month) \r\n\t                     \tELSE CONVERT(varchar(2), loss_month) END)+\r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_day)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_day) \r\n\t                     \tELSE CONVERT(varchar(2), loss_day) END) + CONVERT(varchar(4), loss_year)+\r\n\t\t\t\tloss_occurence)\r\n\t\r\n\t\r\n\t---- 8/23/2011 Modified the Source Qualifier Query to use pif_4578_stage_temp table instead of arch_pif_4578_stage table.\n),\nSQ_EDW_TABLES_Balance_Transaction AS (\n\tSELECT claim_occurrence.claim_occurrence_key as EDW_CO_key,\r\n\t\t\tCOUNT(*) as EDW_COUNT_of_Transactions,\r\n\t\t\tSUM(trans_amt) as EDW_SUM_Trans_Amt\r\n\tFROM @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_transaction as claim_transaction\r\n\t\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claimant_coverage_detail as claimant_coverage_detail ON\r\n\tclaim_transaction.claimant_cov_det_ak_id = claimant_coverage_detail.claimant_cov_det_ak_id\r\n\t\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_party_occurrence as claim_party_occurrence ON\r\n\tclaimant_coverage_detail.claim_party_occurrence_ak_id = claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_occurrence as claim_occurrence ON\r\n\tclaim_party_occurrence.claim_occurrence_ak_id = claim_occurrence.claim_occurrence_ak_id\r\n\t\t\tWHERE claim_transaction.crrnt_snpsht_flag = 1\r\n\t\t\tAND claimant_coverage_detail.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_party_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_transaction.audit_id <= @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} \r\n\t            AND claim_transaction.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t            AND trans_date > '1998-01-01'\r\n\tGROUP BY claim_occurrence_key\n),\nJNR_EDW_ARCHIVE AS (SELECT\n\tSQ_EDW_TABLES_Balance_Transaction.EDW_claim_occurrence_key, \n\tSQ_EDW_TABLES_Balance_Transaction.EDW_COUNT_of_Transactions, \n\tSQ_EDW_TABLES_Balance_Transaction.EDW_SUM_Trans_Amt, \n\tSQ_ARCH_PIF_4578_STAGE.pif_4578_stage_id AS ARCH_COUNT_of_Transactions, \n\tSQ_ARCH_PIF_4578_STAGE.loss_rec_length AS ARCH_claim_occurrence_key, \n\tSQ_ARCH_PIF_4578_STAGE.loss_location_number AS ARCH_SUM_Trans_Amt\n\tFROM SQ_EDW_TABLES_Balance_Transaction\n\tRIGHT OUTER JOIN SQ_ARCH_PIF_4578_STAGE\n\tON SQ_ARCH_PIF_4578_STAGE.loss_rec_length = SQ_EDW_TABLES_Balance_Transaction.EDW_claim_occurrence_key\n),\nEXP_Evaluate AS (\n\tSELECT\n\tEDW_claim_occurrence_key,\n\tEDW_COUNT_of_Transactions,\n\tEDW_SUM_Trans_Amt,\n\tARCH_COUNT_of_Transactions,\n\tARCH_claim_occurrence_key,\n\tARCH_SUM_Trans_Amt,\n\t-- *INF*: IIF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt,'Y','N')\n\tIFF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt, 'Y', 'N') AS v_Balance_Amount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- EDW_SUM_Trans_Amt <> ARCH_SUM_Trans_Amt , -1,\r\n\t-- EDW_SUM_Trans_Amt = ARCH_SUM_Trans_Amt \r\n\t--    AND EDW_COUNT_of_Transactions != ARCH_COUNT_of_Transactions, -2,\r\n\t-- 0)\r\n\t-- \r\n\t-- \r\n\t--  ---- (-1,-2) is used to identify the PMS claims that are not balancing either by amount or no. of transactions.\r\n\t--  ---- (-3,-4) is used to identify EXCEED claims that are not balancing either by amount or no. of transactions.\r\n\t-- \r\n\t-- \r\n\t-- ---  IIF(v_Balance_Amount = 'Y', 1, -1)\r\n\t-- \r\n\t-- \n\tDECODE(TRUE,\n\t\tEDW_SUM_Trans_Amt <> ARCH_SUM_Trans_Amt, - 1,\n\t\tEDW_SUM_Trans_Amt = ARCH_SUM_Trans_Amt AND EDW_COUNT_of_Transactions != ARCH_COUNT_of_Transactions, - 2,\n\t\t0) AS err_flag_change,\n\terr_flag_change AS out_err_flag_bal_txn\n\tFROM JNR_EDW_ARCHIVE\n),\nFIL_Err_Flag AS (\n\tSELECT\n\tEDW_claim_occurrence_key, \n\tout_err_flag_bal_txn\n\tFROM EXP_Evaluate\n\tWHERE TRUE\n),\nLKP_Claim_Occurrence_id AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_occurrence_id as claim_occurrence_id, \r\n\t\ta.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM claim_occurrence a\r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_id) = 1\n),\nUPD_Claim_Occurrence_Err_Flag_bal_txn AS (\n\tSELECT\n\tLKP_Claim_Occurrence_id.claim_occurrence_id, \n\tFIL_Err_Flag.out_err_flag_bal_txn\n\tFROM FIL_Err_Flag\n\tLEFT JOIN LKP_Claim_Occurrence_id\n\tON LKP_Claim_Occurrence_id.claim_occurrence_key = FIL_Err_Flag.EDW_claim_occurrence_key\n),\nclaim_occurrence_update_err_flag_bal_txn AS (\n\tMERGE INTO claim_occurrence AS T\n\tUSING UPD_Claim_Occurrence_Err_Flag_bal_txn AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.err_flag_bal_txn = S.out_err_flag_bal_txn\n),\nSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn AS (\n\tSELECT COUNT(*) as pif_4578_stage_id,\r\n\t\t\t\t(pif_symbol + pif_policy_number + pif_module +\r\n\t                \t(CASE LEN(CONVERT(varchar(2), loss_month)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_month) \r\n\t                     \tELSE CONVERT(varchar(2), loss_month) END) +\r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_day)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_day) \r\n\t                     \tELSE CONVERT(varchar(2), loss_day) END) + CONVERT(varchar(4), loss_year)+\r\n\t\t\t\tloss_occurence) as loss_rec_length, \r\n\t\t\t\tSUM(loss_paid_or_resv_amt) as loss_location_number \r\n\tFROM @{pipeline().parameters.DB_NAME_STAGE}.dbo.pif_4578_stage_temp\r\n\t\t\t\tWHERE logical_flag in ('0','-1') --No Dummy Transactions\r\n\t\t\t  \t AND loss_part = '8' --Reinsurrance\r\n\tGROUP BY \t(pif_symbol + pif_policy_number + pif_module + \r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_month)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_month) \r\n\t                     \tELSE CONVERT(varchar(2), loss_month) END)+\r\n\t\t\t\t(CASE LEN(CONVERT(varchar(2), loss_day)) WHEN 1 THEN '0' + CONVERT(varchar(2), loss_day) \r\n\t                     \tELSE CONVERT(varchar(2), loss_day) END) + CONVERT(varchar(4), loss_year)+\r\n\t\t\t\tloss_occurence)\r\n\t\r\n\t\r\n\t---- 8/23/2011 Modified the Source Qualifier Query to use pif_4578_stage_temp table instead of arch_pif_4578_stage table.\n),\nSQ_EDW_TABLES_Bal_Reins_Txn AS (\n\tSELECT claim_occurrence.claim_occurrence_key AS EDW_CO_key,\r\n\t       Count(*)                              AS EDW_COUNT_of_Reins_Transactions,\r\n\t       Sum(claim_reins_trans_amt)            AS EDW_SUM_Reins_Trans_Amt\r\n\tFROM   @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_reinsurance_transaction AS claim_reinsurance_transaction\r\n\t       INNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claimant_coverage_detail AS claimant_coverage_detail\r\n\t         ON claim_reinsurance_transaction.claimant_cov_det_ak_id = claimant_coverage_detail.claimant_cov_det_ak_id\r\n\t       INNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_party_occurrence AS claim_party_occurrence\r\n\t         ON claimant_coverage_detail.claim_party_occurrence_ak_id = claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t       INNER JOIN @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_occurrence AS claim_occurrence\r\n\t         ON claim_party_occurrence.claim_occurrence_ak_id = claim_occurrence.claim_occurrence_ak_id\r\n\tWHERE  claim_reinsurance_transaction.crrnt_snpsht_flag = 1\r\n\t       AND claimant_coverage_detail.crrnt_snpsht_flag = 1\r\n\t       AND claim_party_occurrence.crrnt_snpsht_flag = 1\r\n\t       AND claim_occurrence.crrnt_snpsht_flag = 1\r\n\t       AND claim_reinsurance_transaction.audit_id <= @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t       AND claim_reinsurance_transaction.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tGROUP  BY claim_occurrence_key\n),\nJNR_EDW_ARCHIVE_Bal_Reins_Txn AS (SELECT\n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_claim_occurrence_key, \n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_COUNT_of_Reins_Transactions, \n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_SUM_Reins_Trans_Amt, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.pif_4578_stage_id AS ARCH_COUNT_of_Reins_Transactions, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_rec_length AS ARCH_claim_occurrence_key, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_location_number AS ARCH_SUM_Reins_Trans_Amt\n\tFROM SQ_EDW_TABLES_Bal_Reins_Txn\n\tRIGHT OUTER JOIN SQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn\n\tON SQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_rec_length = SQ_EDW_TABLES_Bal_Reins_Txn.EDW_claim_occurrence_key\n),\nEXP_Evaluate_Bal_Reins_Txn AS (\n\tSELECT\n\tEDW_claim_occurrence_key,\n\tEDW_COUNT_of_Reins_Transactions,\n\tEDW_SUM_Reins_Trans_Amt,\n\tARCH_COUNT_of_Reins_Transactions,\n\tARCH_claim_occurrence_key,\n\tARCH_SUM_Reins_Trans_Amt,\n\t-- *INF*: IIF(ARCH_SUM_Reins_Trans_Amt = EDW_SUM_Reins_Trans_Amt,'Y','N')\n\tIFF(ARCH_SUM_Reins_Trans_Amt = EDW_SUM_Reins_Trans_Amt, 'Y', 'N') AS v_Balance_Amount,\n\t-- *INF*: IIF(v_Balance_Amount = 'Y', 1, -1)\n\tIFF(v_Balance_Amount = 'Y', 1, - 1) AS err_flag_change,\n\terr_flag_change AS out_err_flag_reins_txn\n\tFROM JNR_EDW_ARCHIVE_Bal_Reins_Txn\n),\nFIL_Err_Flag_Bal_Reins_Txn AS (\n\tSELECT\n\tEDW_claim_occurrence_key, \n\tout_err_flag_reins_txn\n\tFROM EXP_Evaluate_Bal_Reins_Txn\n\tWHERE TRUE\n),\nLKP_Claim_Occurrence_id_reins AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_occurrence_id as claim_occurrence_id, \r\n\t\ta.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM claim_occurrence a\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_id) = 1\n),\nUPD_Claim_Occurrence_Err_Flag_reins_txn AS (\n\tSELECT\n\tLKP_Claim_Occurrence_id_reins.claim_occurrence_id, \n\tFIL_Err_Flag_Bal_Reins_Txn.out_err_flag_reins_txn\n\tFROM FIL_Err_Flag_Bal_Reins_Txn\n\tLEFT JOIN LKP_Claim_Occurrence_id_reins\n\tON LKP_Claim_Occurrence_id_reins.claim_occurrence_key = FIL_Err_Flag_Bal_Reins_Txn.EDW_claim_occurrence_key\n),\nclaim_occurrence_update_err_flag_bal_reins AS (\n\tMERGE INTO claim_occurrence AS T\n\tUSING UPD_Claim_Occurrence_Err_Flag_reins_txn AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.err_flag_bal_reins = S.out_err_flag_reins_txn\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246504"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905521"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604328"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:13:41"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:19:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "DB_NAME_STAGE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DB_NAME_EDW": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}