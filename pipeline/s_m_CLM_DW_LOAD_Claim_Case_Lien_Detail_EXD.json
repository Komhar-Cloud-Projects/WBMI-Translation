{
    "name": "s_m_CLM_DW_LOAD_Claim_Case_Lien_Detail_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Case_Lien_Detail_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_LIEN_CLIENT_NAME AS (\n\tSELECT\n\tclaim_party_full_name,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party.claim_party_full_name as claim_party_full_name, \r\n\t\tclaim_party.claim_party_key as claim_party_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party\r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_full_name) = 1\n),\nLKP_CLAIM_CASE_AK_ID AS (\n\tSELECT\n\tclaim_case_ak_id,\n\tclaim_case_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_case.claim_case_ak_id as claim_case_ak_id, \r\n\t\tclaim_case.claim_case_key as claim_case_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case \r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_key ORDER BY claim_case_ak_id) = 1\n),\nSQ_CLM_LIEN_DETAILS_STAGE AS (\n\tSELECT \r\n\tcld.tch_claim_nbr, cld.tch_client_id, cld.lien_client_id, cld.lien_role, cld.lien_amt \r\n\tFROM\r\n\t  @{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_lien_details_stage cld\n),\nEXP_VALIDATE AS (\n\tSELECT\n\ttch_claim_nbr3 AS tch_claim_nbr_cld,\n\ttch_client_id3 AS tch_client_id_cld,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr_cld))) OR IS_SPACES(LTRIM(RTRIM(tch_claim_nbr_cld))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr_cld)))=0,'N/A',LTRIM(RTRIM(tch_claim_nbr_cld)))\r\n\t--                                                                                 \n\tIFF(LTRIM(RTRIM(tch_claim_nbr_cld)) IS NULL OR IS_SPACES(LTRIM(RTRIM(tch_claim_nbr_cld))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr_cld))) = 0, 'N/A', LTRIM(RTRIM(tch_claim_nbr_cld))) AS v_tch_claim_nbr,\n\tv_tch_claim_nbr AS tch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_client_id_cld))) OR IS_SPACES(LTRIM(RTRIM(tch_client_id_cld))) OR LENGTH(LTRIM(RTRIM(tch_client_id_cld)))=0,'N/A',LTRIM(RTRIM(tch_client_id_cld)))\r\n\t--                                                                            \n\tIFF(LTRIM(RTRIM(tch_client_id_cld)) IS NULL OR IS_SPACES(LTRIM(RTRIM(tch_client_id_cld))) OR LENGTH(LTRIM(RTRIM(tch_client_id_cld))) = 0, 'N/A', LTRIM(RTRIM(tch_client_id_cld))) AS v_tch_client_id,\n\tv_tch_client_id AS tch_client_id,\n\t-- *INF*: v_tch_claim_nbr || '//'||v_tch_client_id\n\tv_tch_claim_nbr || '//' || v_tch_client_id AS CLAIM_CASE_KEY,\n\tCLAIM_CASE_KEY AS Out_Claim_Case_key,\n\t-- *INF*: :LKP.LKP_CLAIM_CASE_AK_ID(CLAIM_CASE_KEY)\n\tLKP_CLAIM_CASE_AK_ID_CLAIM_CASE_KEY.claim_case_ak_id AS v_claim_case_ak_id,\n\tv_claim_case_ak_id AS claim_case_ak_id,\n\tlien_client_id AS IN_lien_client_id,\n\t-- *INF*: :LKP.LKP_LIEN_CLIENT_NAME(IN_lien_client_id)\n\tLKP_LIEN_CLIENT_NAME_IN_lien_client_id.claim_party_full_name AS v_lien_client,\n\t-- *INF*: IIF(ISNULL(v_lien_client),'N/A',v_lien_client)\n\tIFF(v_lien_client IS NULL, 'N/A', v_lien_client) AS lien_client,\n\tlien_role AS IN_lien_role,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_lien_role))) OR IS_SPACES(LTRIM(RTRIM(IN_lien_role))) OR LENGTH(LTRIM(RTRIM(IN_lien_role)))=0,'N/A',LTRIM(RTRIM(IN_lien_role)))\n\tIFF(LTRIM(RTRIM(IN_lien_role)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_lien_role))) OR LENGTH(LTRIM(RTRIM(IN_lien_role))) = 0, 'N/A', LTRIM(RTRIM(IN_lien_role))) AS lien_role,\n\tlien_amt AS IN_lien_amt,\n\t-- *INF*: IIF(ISNULL(IN_lien_amt) ,0,IN_lien_amt)\n\tIFF(IN_lien_amt IS NULL, 0, IN_lien_amt) AS lien_amt\n\tFROM SQ_CLM_LIEN_DETAILS_STAGE\n\tLEFT JOIN LKP_CLAIM_CASE_AK_ID LKP_CLAIM_CASE_AK_ID_CLAIM_CASE_KEY\n\tON LKP_CLAIM_CASE_AK_ID_CLAIM_CASE_KEY.claim_case_key = CLAIM_CASE_KEY\n\n\tLEFT JOIN LKP_LIEN_CLIENT_NAME LKP_LIEN_CLIENT_NAME_IN_lien_client_id\n\tON LKP_LIEN_CLIENT_NAME_IN_lien_client_id.claim_party_key = IN_lien_client_id\n\n),\nLKP_CLAIM_CASE_LIEN_DETAILS AS (\n\tSELECT\n\tclaim_case_lien_det_id,\n\tclaim_case_lien_det_ak_id,\n\tclaim_case_ak_id,\n\tlien_client,\n\tlien_client_role_code,\n\tlien_amt\n\tFROM (\n\t\tSELECT \r\n\t\tA.claim_case_lien_det_id as claim_case_lien_det_id, \r\n\t\tA.claim_case_lien_det_ak_id as claim_case_lien_det_ak_id, \r\n\t\tA.lien_client as lien_client, \r\n\t\tA.lien_client_role_code as lien_client_role_code, \r\n\t\tA.lien_amt as lien_amt, \r\n\t\tA.claim_case_ak_id as claim_case_ak_id \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_lien_detail A\r\n\t\tWHERE A.crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_ak_id,lien_client,lien_client_role_code ORDER BY claim_case_lien_det_id) = 1\n),\nEXP_DETECT_CHANGES AS (\n\tSELECT\n\tEXP_VALIDATE.claim_case_ak_id,\n\tEXP_VALIDATE.Out_Claim_Case_key,\n\tEXP_VALIDATE.lien_client,\n\tEXP_VALIDATE.lien_role,\n\tEXP_VALIDATE.lien_amt,\n\tLKP_CLAIM_CASE_LIEN_DETAILS.claim_case_lien_det_id AS old_claim_case_lien_det_id,\n\tLKP_CLAIM_CASE_LIEN_DETAILS.claim_case_lien_det_ak_id AS old_claim_case_lien_det_ak_id,\n\tLKP_CLAIM_CASE_LIEN_DETAILS.lien_client AS old_lien_client,\n\tLKP_CLAIM_CASE_LIEN_DETAILS.lien_client_role_code AS old_lien_client_role_code,\n\tLKP_CLAIM_CASE_LIEN_DETAILS.lien_amt AS old_lien_amt,\n\t-- *INF*: IIF(ISNULL(old_claim_case_lien_det_id),'NEW',\r\n\t--      IIF(lien_amt <> old_lien_amt,'UPDATE','NOCHANGE'))\r\n\t-- \n\tIFF(old_claim_case_lien_det_id IS NULL, 'NEW', IFF(lien_amt <> old_lien_amt, 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(v_changed_flag='NEW',TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(v_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM EXP_VALIDATE\n\tLEFT JOIN LKP_CLAIM_CASE_LIEN_DETAILS\n\tON LKP_CLAIM_CASE_LIEN_DETAILS.claim_case_ak_id = EXP_VALIDATE.claim_case_ak_id AND LKP_CLAIM_CASE_LIEN_DETAILS.lien_client = EXP_VALIDATE.lien_client AND LKP_CLAIM_CASE_LIEN_DETAILS.lien_client_role_code = EXP_VALIDATE.lien_role\n),\nFIL_INSERT AS (\n\tSELECT\n\told_claim_case_lien_det_ak_id, \n\tOut_Claim_Case_key, \n\tclaim_case_ak_id, \n\tlien_client, \n\tlien_role, \n\tlien_amt, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_DETECT_CHANGES\n\tWHERE changed_flag='NEW' OR changed_flag='UPDATE'\n),\nSEQ_Claim_Case_Lien_Det_ak_id AS (\n\tCREATE SEQUENCE SEQ_Claim_Case_Lien_Det_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\told_claim_case_lien_det_ak_id,\n\t-- *INF*: IIF(changed_flag ='NEW',NEXTVAL,old_claim_case_lien_det_ak_id)\n\tIFF(changed_flag = 'NEW', NEXTVAL, old_claim_case_lien_det_ak_id) AS claim_case_lien_det_ak_id,\n\tOut_Claim_Case_key,\n\tclaim_case_ak_id,\n\tlien_client,\n\tlien_role,\n\tlien_amt,\n\tchanged_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tSEQ_Claim_Case_Lien_Det_ak_id.NEXTVAL\n\tFROM FIL_INSERT\n),\nclaim_case_lien_detail_insert AS (\n\tINSERT INTO claim_case_lien_detail\n\t(claim_case_lien_det_ak_id, claim_case_ak_id, claim_case_key, lien_client, lien_client_role_code, lien_amt, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tCLAIM_CASE_LIEN_DET_AK_ID, \n\tCLAIM_CASE_AK_ID, \n\tOut_Claim_Case_key AS CLAIM_CASE_KEY, \n\tLIEN_CLIENT, \n\tlien_role AS LIEN_CLIENT_ROLE_CODE, \n\tLIEN_AMT, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_Determine_AK\n),\nSQ_claim_case_lien_detail AS (\n\tSELECT \r\n\ta.claim_case_lien_det_id, \r\n\ta.claim_case_ak_id, \r\n\ta.lien_client, \r\n\ta.lien_client_role_code, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_lien_detail a\r\n\tWHERE \r\n\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND\r\n\tEXISTS(SELECT 1 \r\n\t                 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_lien_detail b\r\n\t                 WHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\r\n\t                 AND a.claim_case_ak_id = b.claim_case_ak_id\r\n\t                 AND a.lien_client = b.lien_client\r\n\t                 AND a.lien_client_role_code =b.lien_client_role_code\r\n\t \t           GROUP BY b.claim_case_ak_id,b.lien_client,b.lien_client_role_code\r\n\t\t\t     HAVING COUNT(*) >1) \r\n\tORDER BY a.claim_case_ak_id, a.lien_client, a.lien_client_role_code,  a.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_case_lien_det_id,\n\tclaim_case_ak_id,\n\tlien_client,\n\tlien_client_role_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,claim_case_ak_id=v_prev_row_claim_case_ak_id \r\n\t-- and lien_client = v_prev_row_lien_client \r\n\t-- and lien_client_role_code = v_prev_row_lien_client_role_code ,ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\tclaim_case_ak_id = v_prev_row_claim_case_ak_id AND lien_client = v_prev_row_lien_client AND lien_client_role_code = v_prev_row_lien_client_role_code, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_case_ak_id AS v_prev_row_claim_case_ak_id,\n\tlien_client AS v_prev_row_lien_client,\n\tlien_client_role_code AS v_prev_row_lien_client_role_code,\n\teff_from_date AS v_prev_row_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_case_lien_detail\n),\nFIL_First_Row_InAKGroup AS (\n\tSELECT\n\tclaim_case_lien_det_id AS claim_case_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <>eff_to_date\n),\nUPD_Claim_Case_Lien_Details AS (\n\tSELECT\n\tclaim_case_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_First_Row_InAKGroup\n),\nclaim_case_lien_detail_update AS (\n\tMERGE INTO claim_case_lien_detail AS T\n\tUSING UPD_Claim_Case_Lien_Details AS S\n\tON T.claim_case_lien_det_id = S.claim_case_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}