{
    "name": "m_POL_DW_LOAD_CoverageDetailCommercialUmbrella_DCT_Negate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailCommercialUmbrella_DCT_N_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CoverageDetailCommercialUmbrella AS (\n\tSELECT CDCU.PremiumTransactionID,\r\n\t       CDCU.CoverageGuid,\r\n\t       CDCU.UmbrellaCoverageScope,\r\n\t       CDCU.RetroactiveDate,\r\n\t       CDCU.UmbrellaLayer,\r\n\t       PT.PremiumTransactionID\r\n\tFROM   dbo.CoverageDetailCommercialUmbrella CDCU\r\n\t       INNER JOIN WorkPremiumTransactionDataRepairNegate WPTDRN\r\n\t               ON CDCU.PremiumTransactionID = WPTDRN.OriginalPremiumTransactionID\r\n\t       INNER JOIN dbo.PremiumTransaction PT\r\n\t               ON PT.PremiumTransactionAKID = WPTDRN.NewNegatePremiumTransactionAKID         \r\n\tAND PT.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND CDCU.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n),\nExp_CoverageDetailCommercialUmbrella AS (\n\tSELECT\n\tPremiumTransactionID AS Old_PremiumTransactionID,\n\tCoverageGuid,\n\tUmbrellaCoverageScope,\n\tRetroactiveDate,\n\tUmbrellaLayer,\n\tNewNegatePremiumTransactionID\n\tFROM SQ_CoverageDetailCommercialUmbrella\n),\nEXP_DefaultValue AS (\n\tSELECT\n\tCoverageGuid AS i_CoverageGuid,\n\tRetroactiveDate AS i_RetroActiveDate,\n\tUmbrellaCoverageScope,\n\tUmbrellaLayer,\n\tNewNegatePremiumTransactionID,\n\tNewNegatePremiumTransactionID AS o_PremiumTransactionID,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\ti_CoverageGuid AS o_CoverageGuid,\n\t-- *INF*: IIF(ISNULL(i_RetroActiveDate), TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS'), i_RetroActiveDate)\n\tIFF(i_RetroActiveDate IS NULL, TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'), i_RetroActiveDate) AS o_RetroActiveDate\n\tFROM Exp_CoverageDetailCommercialUmbrella\n),\nLKP_CoverageDetailCommercialUmbrella AS (\n\tSELECT\n\tPremiumTransactionID,\n\tCoverageGuid,\n\tUmbrellaCoverageScope,\n\tRetroActiveDate,\n\tUmbrellaLayer\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tCoverageGuid,\n\t\t\tUmbrellaCoverageScope,\n\t\t\tRetroActiveDate,\n\t\t\tUmbrellaLayer\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialUmbrella\n\t\tWHERE SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nEXP_DetectChange AS (\n\tSELECT\n\tLKP_CoverageDetailCommercialUmbrella.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailCommercialUmbrella.CoverageGuid AS lkp_CoverageGuid,\n\tLKP_CoverageDetailCommercialUmbrella.UmbrellaCoverageScope AS lkp_UmbrellaCoverageScope,\n\tLKP_CoverageDetailCommercialUmbrella.RetroActiveDate AS lkp_RetroActiveDate,\n\tLKP_CoverageDetailCommercialUmbrella.UmbrellaLayer AS lkp_UmbrellaLayer,\n\tEXP_DefaultValue.o_PremiumTransactionID AS PremiumTransactionID,\n\tEXP_DefaultValue.o_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\tEXP_DefaultValue.o_AuditID AS AuditID,\n\tEXP_DefaultValue.o_EffectiveDate AS EffectiveDate,\n\tEXP_DefaultValue.o_ExpirationDate AS ExpirationDate,\n\tEXP_DefaultValue.o_SourceSystemID AS SourceSystemID,\n\tEXP_DefaultValue.o_CreatedDate AS CreatedDate,\n\tEXP_DefaultValue.o_ModifiedDate AS ModifiedDate,\n\tEXP_DefaultValue.o_CoverageGuid AS CoverageGuid,\n\tEXP_DefaultValue.o_RetroActiveDate AS RetroActiveDate,\n\tEXP_DefaultValue.UmbrellaCoverageScope,\n\tEXP_DefaultValue.UmbrellaLayer,\n\t-- *INF*: IIF(ISNULL(lkp_PremiumTransactionID), 'NEW',  'UPDATE') \r\n\t-- \n\tIFF(lkp_PremiumTransactionID IS NULL, 'NEW', 'UPDATE') AS v_ChangeFlag,\n\tv_ChangeFlag AS o_ChangeFlag\n\tFROM EXP_DefaultValue\n\tLEFT JOIN LKP_CoverageDetailCommercialUmbrella\n\tON LKP_CoverageDetailCommercialUmbrella.PremiumTransactionID = EXP_DefaultValue.o_PremiumTransactionID\n),\nRTR_InsertElseUpdate AS (\n\tSELECT\n\tlkp_PremiumTransactionID,\n\tPremiumTransactionID,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tCoverageGuid,\n\tUmbrellaCoverageScope,\n\tRetroActiveDate,\n\to_ChangeFlag AS ChangeFlag,\n\tRetroActiveDate AS RetroActiveDate4,\n\tUmbrellaLayer\n\tFROM EXP_DetectChange\n),\nRTR_InsertElseUpdate_INSERT AS (SELECT * FROM RTR_InsertElseUpdate WHERE ChangeFlag='NEW'),\nRTR_InsertElseUpdate_UPDATE AS (SELECT * FROM RTR_InsertElseUpdate WHERE ChangeFlag='UPDATE'),\nTGT_CoverageDetailCommercialUmbrella_Insert AS (\n\tINSERT INTO CoverageDetailCommercialUmbrella\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, UmbrellaCoverageScope, RetroactiveDate, UmbrellaLayer)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGEGUID, \n\tUMBRELLACOVERAGESCOPE, \n\tRetroActiveDate AS RETROACTIVEDATE, \n\tUMBRELLALAYER\n\tFROM RTR_InsertElseUpdate_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "216690"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "881000"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7484960"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "06/27/2023 12:02:14"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "07/04/2023 10:58:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}