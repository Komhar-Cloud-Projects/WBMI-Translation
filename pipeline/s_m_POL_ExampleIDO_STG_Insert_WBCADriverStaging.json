{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBCADriverStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBCADriverStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_to_WB_CA_Driver AS (\n\tWITH cte_WBCADriver(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CA_DriverId, \r\n\tX.WB_CA_DriverId, \r\n\tX.SessionId, \r\n\tX.DateOfBirth, \r\n\tX.Name, \r\n\tX.MiddleInitial, \r\n\tX.LastName, \r\n\tX.Gender, \r\n\tX.MaritalStatus, \r\n\tX.ExcludeDriver, \r\n\tX.WatchDriver, \r\n\tX.PermanentDriver, \r\n\tX.SelectForMVR, \r\n\tX.TaskFlagCAMVRViolationCategoryNotFound, \r\n\tX.TaskFlagCAMVRViolationCategoryNotFoundEARS, \r\n\tX.MVRDate, \r\n\tX.MVRStatus \r\n\tFROM\r\n\tWB_CA_Driver X \r\n\tinner join\r\n\tcte_WBCADriver Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_handle AS (\n\tSELECT\n\tCA_DriverId AS i_CA_DriverId,\n\tWB_CA_DriverId AS i_WB_CA_DriverId,\n\tSessionId AS i_SessionId,\n\tDateOfBirth AS i_DateOfBirth,\n\tName AS i_Name,\n\tMiddleInitial AS i_MiddleInitial,\n\tLastName AS i_LastName,\n\tGender AS i_Gender,\n\tMaritalStatus AS i_MaritalStatus,\n\tExcludeDriver AS i_ExcludeDriver,\n\tWatchDriver AS i_WatchDriver,\n\tPermanentDriver AS i_PermanentDriver,\n\tSelectForMVR AS i_SelectForMVR,\n\tTaskFlagCAMVRViolationCategoryNotFound AS i_TaskFlagCAMVRViolationCategoryNotFound,\n\tTaskFlagCAMVRViolationCategoryNotFoundEARS AS i_TaskFlagCAMVRViolationCategoryNotFoundEARS,\n\tMVRDate AS i_MVRDate,\n\tMVRStatus AS i_MVRStatus,\n\tsysdate AS o_Exctracdate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemid,\n\ti_CA_DriverId AS o_CA_DriverId,\n\ti_WB_CA_DriverId AS o_WB_CA_DriverId,\n\ti_SessionId AS o_SessionId,\n\ti_DateOfBirth AS o_DateOfBirth,\n\ti_Name AS o_Name,\n\ti_MiddleInitial AS o_MiddleInitial,\n\ti_LastName AS o_LastName,\n\ti_Gender AS o_Gender,\n\ti_MaritalStatus AS o_MaritalStatus,\n\ti_ExcludeDriver AS o_ExcludeDriver,\n\t-- *INF*: decode(i_WatchDriver,'T',1,'F',0,NULL)\n\tdecode(\n\t    i_WatchDriver,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_WatchDriver,\n\t-- *INF*: decode(i_PermanentDriver,'T',1,'F',0,NULL)\n\tdecode(\n\t    i_PermanentDriver,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_PermanentDriver,\n\t-- *INF*: decode(i_SelectForMVR,'T',1,'F',0,NULL)\n\tdecode(\n\t    i_SelectForMVR,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_SelectForMVR,\n\t-- *INF*: decode(i_TaskFlagCAMVRViolationCategoryNotFound,'T',1,'F',0,NULL)\n\tdecode(\n\t    i_TaskFlagCAMVRViolationCategoryNotFound,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_TaskFlagCAMVRViolationCategoryNotFound,\n\t-- *INF*: DECODE(i_TaskFlagCAMVRViolationCategoryNotFoundEARS,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_TaskFlagCAMVRViolationCategoryNotFoundEARS,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_TaskFlagCAMVRViolationCategoryNotFoundEARS,\n\ti_MVRDate AS o_MVRDate,\n\ti_MVRStatus AS o_MVRStatus\n\tFROM SQ_to_WB_CA_Driver\n),\nWBCADriverStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCADriverStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCADriverStaging\n\t(ExtractDate, SourceSystemId, CA_DriverId, WB_CA_DriverId, SessionId, DateOfBirth, Name, MiddleInitial, LastName, Gender, MaritalStatus, ExcludeDriver, WatchDriver, PermanentDriver, SelectForMVR, TaskFlagCAMVRViolationCategoryNotFound, TaskFlagCAMVRViolationCategoryNotFoundEARS, MVRDate, MVRStatus)\n\tSELECT \n\to_Exctracdate AS EXTRACTDATE, \n\to_SourceSystemid AS SOURCESYSTEMID, \n\to_CA_DriverId AS CA_DRIVERID, \n\to_WB_CA_DriverId AS WB_CA_DRIVERID, \n\to_SessionId AS SESSIONID, \n\to_DateOfBirth AS DATEOFBIRTH, \n\to_Name AS NAME, \n\to_MiddleInitial AS MIDDLEINITIAL, \n\to_LastName AS LASTNAME, \n\to_Gender AS GENDER, \n\to_MaritalStatus AS MARITALSTATUS, \n\to_ExcludeDriver AS EXCLUDEDRIVER, \n\to_WatchDriver AS WATCHDRIVER, \n\to_PermanentDriver AS PERMANENTDRIVER, \n\to_SelectForMVR AS SELECTFORMVR, \n\to_TaskFlagCAMVRViolationCategoryNotFound AS TASKFLAGCAMVRVIOLATIONCATEGORYNOTFOUND, \n\to_TaskFlagCAMVRViolationCategoryNotFoundEARS AS TASKFLAGCAMVRVIOLATIONCATEGORYNOTFOUNDEARS, \n\to_MVRDate AS MVRDATE, \n\to_MVRStatus AS MVRSTATUS\n\tFROM EXP_handle\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}