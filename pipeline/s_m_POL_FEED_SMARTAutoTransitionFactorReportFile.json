{
    "name": "s_m_POL_FEED_SMARTAutoTransitionFactorReportFile",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_SMARTAutoTransitionFactorReportFile",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CA_Stage_Data AS (\n\tDeclare @Date as date\r\n\tset @Date = convert(date,EOMONTH(getdate(),@{pipeline().parameters.NO_OF_MONTHS}));\r\n\t\r\n\tWITH CTE_SessionID AS\t\r\n\t(select distinct T.SessionId as SessionId, L.LineId,T.TransactionDate as TransactionDate, T.Charge as PolicyPremium,T.IssuedUserName as CreatedUser from @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCTransactionStaging T with (NOLOCK)  \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCLineStaging L with (NOLOCK) on L.SessionId=T.SessionId and L.AuditId=T.AuditId \r\n\t\t\t\t\t\t\t\tand T.State='Committed' and T.Type in ('Renew','Reissue','Rewrite') and L.Type='CommercialAuto' and T.ExtractDate > @Date ) \r\n\t\r\n\tSelect Distinct\r\n\tP.PolicyNumber\r\n\t,W.PolicyVersionFormatted\r\n\t,T.TransactionDate\r\n\t,T.CreatedUser as TransactionCommittedUserId\r\n\t,isnull(CL.CompositeRating,0) as CompositeRating\r\n\t,M.Type as ModifierType\r\n\t,M.Scope as ModifierScope\r\n\t,M.Value as ModifierValue\r\n\t,CAL.Number as LocationNumber\r\n\t,T.PolicyPremium as PolicyPremium\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCPolicyStaging P with (nolock)\r\n\tinner join CTE_SessionID T with (nolock) on T.SessionId=P.SessionId \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchWBPolicyStaging W with (nolock) on T.SessionId=W.SessionId and P.PolicyId=W.PolicyId and P.AuditId=W.AuditId \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCModifierStaging M with (nolock) on M.SessionId=T.SessionId and M.ExtractDate > @Date\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCCALocationStaging CAL with (nolock) on T.SessionId=CAL.SessionId and CAL.CA_LocationId=M.ObjectId and M.ObjectName='DC_CA_Location' and M.AuditId=CAL.AuditId\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCCALineStaging CL with (nolock) on CL.LineId=T.LineId and CL.SessionId=T.SessionId \r\n\twhere \r\n\tM.ObjectName='DC_CA_Location' and \r\n\tM.Type='ScheduledMod'\r\n\tand M.Scope in ('AutoTransitionLiability','AutoTransitionPhysicalDamage','Liability','PhysicalDamage')\r\n\tand (M.Value<>'0' and M.Value<>'1' and M.Value is not null)\r\n\tand P.ExtractDate > @Date \r\n\t@{pipeline().parameters.WHERE_CLAUSE_CA}\r\n\tORDER BY P.PolicyNumber, W.PolicyVersionFormatted, CAL.Number\n),\nEXP_CA_CleanModifiersData AS (\n\tSELECT\n\tPolicyNumber AS in_PolicyNumber,\n\tPolicyVersionFormatted AS in_PolicyVersionFormatted,\n\tTransactionDate AS in_TransactionDate,\n\tTransactionCommittedUserId AS in_TransactionCommittedUserId,\n\tCompositeRating AS in_CompositeRating,\n\tModifierType AS in_ModifierType,\n\tModifierScope AS in_ModifierScope,\n\tModifierValue AS in_ModifierValue,\n\tLocationNumber AS in_LocationNumber,\n\tPolicyPremium AS in_PolicyPremium,\n\t-- *INF*: LTRIM(RTRIM(in_PolicyNumber)) ||  LPAD(LTRIM(RTRIM(in_PolicyVersionFormatted)),2,'0')\n\tLTRIM(RTRIM(in_PolicyNumber)) || LPAD(LTRIM(RTRIM(in_PolicyVersionFormatted)), 2, '0') AS o_PolicyKey,\n\t-- *INF*: IIF(ISNULL(in_PolicyPremium),0,in_PolicyPremium)\n\tIFF(in_PolicyPremium IS NULL, 0, in_PolicyPremium) AS o_PolicyPremium,\n\t-- *INF*: IIF(ISNULL(in_LocationNumber)=1,'0001',LPAD(LTRIM(RTRIM(TO_CHAR(in_LocationNumber))),4,'0'))\n\tIFF(\n\t    in_LocationNumber IS NULL = 1, '0001',\n\t    LPAD(LTRIM(RTRIM(TO_CHAR(in_LocationNumber))), 4, '0')\n\t) AS o_LocationNumber,\n\t-- *INF*: TO_CHAR(in_TransactionDate,'MM-DD-YYYY')\n\tTO_CHAR(in_TransactionDate, 'MM-DD-YYYY') AS o_TransactionDate,\n\t-- *INF*: IIF( LTRIM(RTRIM(in_TransactionCommittedUserId))='' OR ISNULL(LTRIM(RTRIM(in_TransactionCommittedUserId))),'N/A',\r\n\t-- IIF(INSTR(in_TransactionCommittedUserId,'\\')<>0,\r\n\t-- SUBSTR(in_TransactionCommittedUserId, INSTR(in_TransactionCommittedUserId,'\\')+1, LENGTH(in_TransactionCommittedUserId)),\r\n\t-- in_TransactionCommittedUserId\r\n\t-- )\r\n\t-- )\n\tIFF(\n\t    LTRIM(RTRIM(in_TransactionCommittedUserId)) = ''\n\t    or LTRIM(RTRIM(in_TransactionCommittedUserId)) IS NULL,\n\t    'N/A',\n\t    IFF(\n\t        REGEXP_INSTR(in_TransactionCommittedUserId, '\\') <> 0,\n\t        SUBSTR(in_TransactionCommittedUserId, REGEXP_INSTR(in_TransactionCommittedUserId, '\\') + 1, LENGTH(in_TransactionCommittedUserId)),\n\t        in_TransactionCommittedUserId\n\t    )\n\t) AS o_TransactionCommittedUserId,\n\t-- *INF*: IIF(in_CompositeRating='T','1','0')\n\tIFF(in_CompositeRating = 'T', '1', '0') AS o_CompositeRating,\n\t-- *INF*: LOWER(in_ModifierType)\n\tLOWER(in_ModifierType) AS o_ModifierType,\n\t-- *INF*: LOWER(in_ModifierScope)\n\tLOWER(in_ModifierScope) AS o_ModifierScope,\n\t-- *INF*: IIF(IN(in_ModifierScope ,'AutoTransitionLiability','AutoTransitionPhysicalDamage')=1, (1+((TO_DECIMAL(in_ModifierValue))/100)), TO_DECIMAL(in_ModifierValue)\r\n\t-- )\n\tIFF(\n\t    in_ModifierScope IN ('AutoTransitionLiability','AutoTransitionPhysicalDamage') = 1,\n\t    (1 + ((CAST(in_ModifierValue AS FLOAT)) / 100)),\n\t    CAST(in_ModifierValue AS FLOAT)\n\t) AS o_ModifierValue\n\tFROM SQ_CA_Stage_Data\n),\nAGG_Get_Mod_ForPolicy_Location AS (\n\tSELECT\n\to_PolicyKey AS PolicyKey,\n\to_LocationNumber AS LocationNumber,\n\to_PolicyPremium AS in_PolicyPremium,\n\to_TransactionDate AS in_TransactionDate,\n\to_TransactionCommittedUserId AS in_TransactionCommittedUserId,\n\to_CompositeRating AS in_CompositeRating,\n\to_ModifierType AS in_ModifierType,\n\to_ModifierScope AS in_ModifierScope,\n\to_ModifierValue AS in_ModifierValue,\n\t-- *INF*: MAX(in_TransactionDate)\n\tMAX(in_TransactionDate) AS o_TransactionDate,\n\t-- *INF*: MAX(in_TransactionCommittedUserId)\n\tMAX(in_TransactionCommittedUserId) AS o_TransactionCommittedUserId,\n\t-- *INF*: MAX(in_CompositeRating)\n\tMAX(in_CompositeRating) AS o_CompositeRating,\n\t-- *INF*: MAX(in_PolicyPremium)\n\tMAX(in_PolicyPremium) AS o_PolicyPremium,\n\t-- *INF*: MAX(\r\n\t-- IIF(in_ModifierType='scheduledmod' and in_ModifierScope='physicaldamage',in_ModifierValue\r\n\t-- )\r\n\t-- )\n\tMAX(\n\t    IFF(\n\t        in_ModifierType = 'scheduledmod' and in_ModifierScope = 'physicaldamage',\n\t        in_ModifierValue\n\t    )) AS o_PhysicalDamageModifier,\n\t-- *INF*: MAX(\r\n\t-- IIF(in_ModifierType='scheduledmod' and in_ModifierScope='autotransitionphysicaldamage',in_ModifierValue\r\n\t-- )\r\n\t-- )\n\tMAX(\n\t    IFF(\n\t        in_ModifierType = 'scheduledmod' and in_ModifierScope = 'autotransitionphysicaldamage',\n\t        in_ModifierValue\n\t    )) AS o_TransitionPhysicalDamageModifier,\n\t-- *INF*: MAX(\r\n\t-- IIF(in_ModifierType='scheduledmod' and in_ModifierScope='liability',in_ModifierValue\r\n\t-- )\r\n\t-- )\n\tMAX(\n\t    IFF(\n\t        in_ModifierType = 'scheduledmod' and in_ModifierScope = 'liability',\n\t        in_ModifierValue\n\t    )) AS o_LiabilityModifier,\n\t-- *INF*: MAX(\r\n\t-- IIF(in_ModifierType='scheduledmod' and in_ModifierScope='autotransitionliability',in_ModifierValue\r\n\t-- )\r\n\t-- )\n\tMAX(\n\t    IFF(\n\t        in_ModifierType = 'scheduledmod' and in_ModifierScope = 'autotransitionliability',\n\t        in_ModifierValue\n\t    )) AS o_TransitionLiabilityModifier\n\tFROM EXP_CA_CleanModifiersData\n\tGROUP BY PolicyKey, LocationNumber\n),\nFIL_RemoveCARowsWithoutTransitionModifier AS (\n\tSELECT\n\tPolicyKey, \n\tLocationNumber, \n\to_TransactionDate AS TransactionDate, \n\to_TransactionCommittedUserId AS TransactionCommittedUserId, \n\to_CompositeRating AS CompositeRating, \n\to_PolicyPremium AS PolicyPremium, \n\to_PhysicalDamageModifier AS PhysicalDamageModifier, \n\to_TransitionPhysicalDamageModifier AS TransitionPhysicalDamageModifier, \n\to_LiabilityModifier AS LiabilityModifier, \n\to_TransitionLiabilityModifier AS TransitionLiabilityModifier\n\tFROM AGG_Get_Mod_ForPolicy_Location\n\tWHERE IIF(\r\n(NOT ISNULL(TransitionPhysicalDamageModifier) AND TransitionPhysicalDamageModifier<>1 AND TransitionPhysicalDamageModifier<>0) \r\nOR\r\n(NOT ISNULL(TransitionLiabilityModifier) AND TransitionLiabilityModifier<>1 AND TransitionLiabilityModifier<>0), TRUE, FALSE\r\n)\n),\nSQ_CA_RPT_EDM_Data AS (\n\tDeclare @Date as date\r\n\tset @Date = convert(date,EOMONTH(getdate(),@{pipeline().parameters.NO_OF_MONTHS})) \r\n\t\r\n\tSelect  distinct\r\n\t P.pol_key as PolicyKey\r\n\t,PO.PolicyOfferingDescription as PolicyOffering\r\n\t,P.pol_exp_date as PolicyExpirationDate\r\n\t,RL.LocationUnitNumber\r\n\t,PTRM.ScheduleModifiedFactor\r\n\t,PTRM.ExperienceModifiedFactor\r\n\t,SUM(PT.PremiumTransactionAmount) OVER (PARTITION BY P.pol_ak_id, PC.InsuranceLine) as DirectWrittenPremiumbyInsuranceLine\r\n\t,P.sup_bus_class_code_id\r\n\t,P.AgencyAKId\r\n\t,P.state_of_domicile_code\r\n\t,P.ProgramAKId\r\n\t,P.UnderwritingAssociateAKId\r\n\t,P.pol_ak_id as PolicyAkId\r\n\t,PC.InsuranceLine\r\n\t,CC.cust_num as CustomerNumber\r\n\t,CC.name as FirstNamedInsured\r\n\t,SPC.StrategicProfitCenterAbbreviation as StrategicProfitCenterAbbreviation\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL with (nolock) on RL.PolicyAKID=P.pol_ak_id and RL.CurrentSnapshotFlag=1 and P.crrnt_snpsht_flag=1 and P.source_sys_id='DCT'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) on RL.RiskLocationAKID=PC.RiskLocationAKID and PC.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) on RC.PolicyCoverageAKID=PC.PolicyCoverageAKID \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) on PT.RatingCoverageAKId=RC.RatingCoverageAKID and PT.EffectiveDate=RC.EffectiveDate\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionRatingModifier PTRM with (nolock) on PTRM.PremiumTransactionID=PT.PremiumTransactionID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering PO with (nolock) on PO.PolicyOfferingAKId=P.PolicyOfferingAKId and PO.CurrentSnapshotFlag=1\r\n\tinner join VWContractCustomer CC with (nolock) on CC.contract_cust_ak_id=P.contract_cust_ak_id and CC.crrnt_snpsht_flag=1 \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC with (nolock) on SPC.StrategicProfitCenterAKId=P.StrategicProfitCenterAKId \r\n\twhere PT.PremiumTransactionCode in ('Renew','Reissue','Rewrite','Restart')\r\n\tand PT.PremiumTransactionAmount <> 0\r\n\tand  (PO.PolicyOfferingAbbreviation='CPP' OR (PO.PolicyOfferingAbbreviation='SMART' and PC.InsuranceLine='CommercialAuto') )\r\n\tand PT.CreatedDate > @Date\r\n\t@{pipeline().parameters.WHERE_CLAUSE_RPT_EDM_CA}\r\n\torder by  P.pol_key, RL.LocationUnitNumber\n),\nJNR_CPP_SMART_Auto_TransMod AS (SELECT\n\tSQ_CA_RPT_EDM_Data.PolicyKey, \n\tSQ_CA_RPT_EDM_Data.PolicyOffering, \n\tSQ_CA_RPT_EDM_Data.PolicyExpirationDate, \n\tSQ_CA_RPT_EDM_Data.LocationUnitNumber, \n\tSQ_CA_RPT_EDM_Data.ScheduleModifiedFactor, \n\tSQ_CA_RPT_EDM_Data.ExperienceModifiedFactor, \n\tSQ_CA_RPT_EDM_Data.DirectWrittenPremiumbyInsuranceLine, \n\tSQ_CA_RPT_EDM_Data.CustomerNumber, \n\tSQ_CA_RPT_EDM_Data.FirstNamedInsured, \n\tSQ_CA_RPT_EDM_Data.sup_bus_class_code_id, \n\tSQ_CA_RPT_EDM_Data.AgencyAKId, \n\tSQ_CA_RPT_EDM_Data.state_of_domicile_code, \n\tSQ_CA_RPT_EDM_Data.ProgramAKId, \n\tSQ_CA_RPT_EDM_Data.UnderwritingAssociateAKId, \n\tSQ_CA_RPT_EDM_Data.PolicyAkId, \n\tSQ_CA_RPT_EDM_Data.InsuranceLine, \n\tSQ_CA_RPT_EDM_Data.StrategicProfitCenterAbbreviation, \n\tFIL_RemoveCARowsWithoutTransitionModifier.PolicyKey AS PolicyKey_Stage, \n\tFIL_RemoveCARowsWithoutTransitionModifier.LocationNumber AS LocationNumber_Stage, \n\tFIL_RemoveCARowsWithoutTransitionModifier.TransactionDate, \n\tFIL_RemoveCARowsWithoutTransitionModifier.TransactionCommittedUserId, \n\tFIL_RemoveCARowsWithoutTransitionModifier.CompositeRating, \n\tFIL_RemoveCARowsWithoutTransitionModifier.PhysicalDamageModifier, \n\tFIL_RemoveCARowsWithoutTransitionModifier.TransitionPhysicalDamageModifier, \n\tFIL_RemoveCARowsWithoutTransitionModifier.LiabilityModifier, \n\tFIL_RemoveCARowsWithoutTransitionModifier.TransitionLiabilityModifier, \n\tFIL_RemoveCARowsWithoutTransitionModifier.PolicyPremium\n\tFROM SQ_CA_RPT_EDM_Data\n\tINNER JOIN FIL_RemoveCARowsWithoutTransitionModifier\n\tON FIL_RemoveCARowsWithoutTransitionModifier.PolicyKey = SQ_CA_RPT_EDM_Data.PolicyKey AND FIL_RemoveCARowsWithoutTransitionModifier.LocationNumber = SQ_CA_RPT_EDM_Data.LocationUnitNumber\n),\nEXP_Derive_AutoModifiers AS (\n\tSELECT\n\tFirstNamedInsured,\n\tPolicyKey,\n\tPolicyOffering,\n\tLocationUnitNumber,\n\tExperienceModifiedFactor,\n\tDirectWrittenPremiumbyInsuranceLine,\n\tsup_bus_class_code_id,\n\tAgencyAKId,\n\tstate_of_domicile_code,\n\tProgramAKId,\n\tUnderwritingAssociateAKId,\n\tPolicyAkId,\n\tInsuranceLine,\n\tTransactionDate,\n\tTransactionCommittedUserId,\n\tCompositeRating,\n\tPolicyPremium AS PolicyDirectWrittenPremium,\n\tStrategicProfitCenterAbbreviation,\n\tCustomerNumber AS in_CustomerNumber,\n\tPolicyExpirationDate AS in_PolicyExpirationDate,\n\tScheduleModifiedFactor AS in_ScheduleModifiedFactor,\n\tPhysicalDamageModifier AS in_PhysicalDamageModifier,\n\tTransitionPhysicalDamageModifier AS in_TransitionPhysicalDamageModifier,\n\tLiabilityModifier AS in_LiabilityModifier,\n\tTransitionLiabilityModifier AS in_TransitionLiabilityModifier,\n\t-- *INF*: IIF(ISNULL(in_CustomerNumber),'N/A', CHR(39)||in_CustomerNumber) ||CHR(39)\n\tIFF(in_CustomerNumber IS NULL, 'N/A', CHR(39) || in_CustomerNumber) || CHR(39) AS o_CustomerNumber,\n\t-- *INF*: TO_CHAR(in_PolicyExpirationDate,'MM-DD-YYYY')\n\tTO_CHAR(in_PolicyExpirationDate, 'MM-DD-YYYY') AS o_PolicyExpirationDate,\n\t-- *INF*: IIF(InsuranceLine='CommercialAuto', 0,in_ScheduleModifiedFactor)\n\tIFF(InsuranceLine = 'CommercialAuto', 0, in_ScheduleModifiedFactor) AS o_ScheduleModifiedFactor,\n\t0 AS o_SMARTTransition,\n\t-- *INF*: IIF(InsuranceLine='CommercialAuto' \r\n\t-- AND NOT ISNULL(in_TransitionPhysicalDamageModifier) AND NOT ISNULL(in_PhysicalDamageModifier)\r\n\t-- AND in_TransitionPhysicalDamageModifier<>0\r\n\t-- ,(1+(in_PhysicalDamageModifier-in_TransitionPhysicalDamageModifier)), 0)\n\tIFF(\n\t    InsuranceLine = 'CommercialAuto'\n\t    and in_TransitionPhysicalDamageModifier IS NULL\n\t    and in_PhysicalDamageModifier IS NULL\n\t    and in_TransitionPhysicalDamageModifier NOT NOT <> 0,\n\t    (1 + (in_PhysicalDamageModifier - in_TransitionPhysicalDamageModifier)),\n\t    0\n\t) AS o_AutoPhysicalDamage,\n\t-- *INF*: IIF(InsuranceLine='CommercialAuto', in_TransitionPhysicalDamageModifier, 0)\r\n\t-- \n\tIFF(InsuranceLine = 'CommercialAuto', in_TransitionPhysicalDamageModifier, 0) AS o_AutoPhysicalDamageTransition,\n\t-- *INF*: IIF(InsuranceLine='CommercialAuto' \r\n\t-- AND NOT ISNULL(in_TransitionLiabilityModifier) AND NOT ISNULL(in_LiabilityModifier) AND in_TransitionLiabilityModifier<>0\r\n\t-- ,(1+(in_LiabilityModifier-in_TransitionLiabilityModifier)), 0)\n\tIFF(\n\t    InsuranceLine = 'CommercialAuto'\n\t    and in_TransitionLiabilityModifier IS NULL\n\t    and in_LiabilityModifier IS NULL\n\t    and in_TransitionLiabilityModifier NOT NOT <> 0,\n\t    (1 + (in_LiabilityModifier - in_TransitionLiabilityModifier)),\n\t    0\n\t) AS o_AutoLiability,\n\t-- *INF*: IIF(InsuranceLine='CommercialAuto', in_TransitionLiabilityModifier, 0)\n\tIFF(InsuranceLine = 'CommercialAuto', in_TransitionLiabilityModifier, 0) AS o_AutoLiabilityTransition\n\tFROM JNR_CPP_SMART_Auto_TransMod\n),\nSQ_SMART_Stage_Data AS (\n\tDeclare @Date as date\r\n\tset @Date = convert(date,EOMONTH(getdate(),@{pipeline().parameters.NO_OF_MONTHS})); \r\n\t\r\n\tWITH CTE_SessionID AS (select distinct T.SessionId as SessionId, T.TransactionDate as TransactionDate, T.Charge as PolicyPremium,T.IssuedUserName as CreatedUser \r\n\t\t\t\t\t\t\t from @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCTransactionStaging T with (NOLOCK) \r\n\t\t\t\t\t\t     inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCLineStaging L with (NOLOCK) on L.SessionId=T.SessionId and L.AuditId=T.AuditId \r\n\t\t\t\t\t\t\t and T.State='Committed' and T.Type in ('Renew','Reissue','Rewrite') and L.Type='BusinessOwners' and T.ExtractDate > @Date) \r\n\t\r\n\tSelect distinct P.PolicyNumber as PolicyNumber\r\n\t,W.PolicyVersionFormatted as PolicyVersionFormatted\r\n\t,T.PolicyPremium as PolicyPremium\r\n\t,BPL.Number as LocationNumber\r\n\t,T.TransactionDate as TransactionDate\r\n\t,T.CreatedUser as TransactionCommittedUserId\r\n\t,(1+(CAST(M.Value as NUMERIC)/100) ) as SMARTTransitionModifier\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.archDCPolicyStaging P with (nolock)\r\n\tinner join CTE_SessionID T with (Nolock) on T.SessionId=P.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchWBPolicyStaging W with (nolock) on P.PolicyId=W.PolicyId and P.SessionId=W.SessionId and P.AuditId=W.AuditId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCModifierStaging M with (nolock) on M.SessionId=T.SessionId \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchDCBPLocationStage BPL WITH (NOLOCK) on T.SessionId=BPL.SessionId and BPL.BPLocationId=M.ObjectId and M.ObjectName='DC_BP_Location' and M.AuditId=BPL.AuditId\r\n\twhere \r\n\tM.ObjectName='DC_BP_Location' \r\n\tand M.Type='LocationIRPMTransitionValue'\r\n\tand M.Scope is null\r\n\t--and (M.Value<>'0' and M.Value<>'1' and M.Value is not null)\r\n\tand P.ExtractDate > @Date and M.ExtractDate > @Date \r\n\t@{pipeline().parameters.WHERE_CLAUSE_SMART}\r\n\tORDER BY P.PolicyNumber, W.PolicyVersionFormatted, BPL.Number\n),\nEXP_SMART_CleanTransitionModifierdata AS (\n\tSELECT\n\tPolicyNumber AS in_PolicyNumber,\n\tPolicyVersionFormatted AS in_PolicyVersionFormatted,\n\tPolicyPremium AS in_PolicyPremium,\n\tLocationNumber AS in_LocationNumber,\n\tTransactionDate AS in_TransactionDate,\n\tTransactionCommittedUserId AS in_TransactionCommittedUserId,\n\tSMARTTransitionModifier AS in_SMARTTransitionModifier,\n\t-- *INF*: LTRIM(RTRIM(in_PolicyNumber)) ||  LPAD(LTRIM(RTRIM(in_PolicyVersionFormatted)),2,'0')\n\tLTRIM(RTRIM(in_PolicyNumber)) || LPAD(LTRIM(RTRIM(in_PolicyVersionFormatted)), 2, '0') AS o_PolicyKey,\n\t-- *INF*: IIF(ISNULL(in_PolicyPremium),0,in_PolicyPremium)\n\tIFF(in_PolicyPremium IS NULL, 0, in_PolicyPremium) AS o_PolicyPremium,\n\t-- *INF*: TO_CHAR(in_TransactionDate,'MM-DD-YYYY')\n\tTO_CHAR(in_TransactionDate, 'MM-DD-YYYY') AS o_TransactionDate,\n\t-- *INF*: IIF( LTRIM(RTRIM(in_TransactionCommittedUserId))='' OR ISNULL(LTRIM(RTRIM(in_TransactionCommittedUserId))),'N/A',\r\n\t-- IIF(INSTR(in_TransactionCommittedUserId,'\\')<>0,\r\n\t-- SUBSTR(in_TransactionCommittedUserId, INSTR(in_TransactionCommittedUserId,'\\')+1, LENGTH(in_TransactionCommittedUserId)),\r\n\t-- in_TransactionCommittedUserId\r\n\t-- )\r\n\t-- )\n\tIFF(\n\t    LTRIM(RTRIM(in_TransactionCommittedUserId)) = ''\n\t    or LTRIM(RTRIM(in_TransactionCommittedUserId)) IS NULL,\n\t    'N/A',\n\t    IFF(\n\t        REGEXP_INSTR(in_TransactionCommittedUserId, '\\') <> 0,\n\t        SUBSTR(in_TransactionCommittedUserId, REGEXP_INSTR(in_TransactionCommittedUserId, '\\') + 1, LENGTH(in_TransactionCommittedUserId)),\n\t        in_TransactionCommittedUserId\n\t    )\n\t) AS o_TransactionCommittedUserId,\n\t-- *INF*: IIF(ISNULL(in_LocationNumber)=1,'0001',LPAD(LTRIM(RTRIM(TO_CHAR(in_LocationNumber))),4,'0'))\n\tIFF(\n\t    in_LocationNumber IS NULL = 1, '0001',\n\t    LPAD(LTRIM(RTRIM(TO_CHAR(in_LocationNumber))), 4, '0')\n\t) AS o_LocationNumber,\n\t-- *INF*: IIF(ISNULL(in_SMARTTransitionModifier) OR LTRIM(RTRIM(in_SMARTTransitionModifier))='',1,TO_DECIMAL(in_SMARTTransitionModifier) )\n\tIFF(\n\t    in_SMARTTransitionModifier IS NULL OR LTRIM(RTRIM(in_SMARTTransitionModifier)) = '', 1,\n\t    CAST(in_SMARTTransitionModifier AS FLOAT)\n\t) AS o_SMARTTransitionModifier\n\tFROM SQ_SMART_Stage_Data\n),\nJNR_ToGetSMARTAutoPolicesWithTransition AS (SELECT\n\tFIL_RemoveCARowsWithoutTransitionModifier.PolicyKey AS PolicyKey_CA, \n\tEXP_SMART_CleanTransitionModifierdata.o_PolicyKey AS PolicyKey_SMART, \n\tEXP_SMART_CleanTransitionModifierdata.o_PolicyPremium AS PolicyPremium, \n\tEXP_SMART_CleanTransitionModifierdata.o_TransactionDate AS TransactionDate, \n\tEXP_SMART_CleanTransitionModifierdata.o_TransactionCommittedUserId AS TransactionCommittedUserId, \n\tEXP_SMART_CleanTransitionModifierdata.o_LocationNumber AS LocationNumber, \n\tEXP_SMART_CleanTransitionModifierdata.o_SMARTTransitionModifier AS SMARTTransitionModifier\n\tFROM EXP_SMART_CleanTransitionModifierdata\n\tLEFT OUTER JOIN FIL_RemoveCARowsWithoutTransitionModifier\n\tON FIL_RemoveCARowsWithoutTransitionModifier.PolicyKey = EXP_SMART_CleanTransitionModifierdata.o_PolicyKey\n),\nFIL_SMARTEligiblePolicesWithTransition AS (\n\tSELECT\n\tPolicyKey_CA, \n\tPolicyKey_SMART, \n\tPolicyPremium, \n\tTransactionDate, \n\tTransactionCommittedUserId, \n\tLocationNumber, \n\tSMARTTransitionModifier\n\tFROM JNR_ToGetSMARTAutoPolicesWithTransition\n\tWHERE IIF(\r\nISNULL(PolicyKey_CA) AND (SMARTTransitionModifier=1 OR SMARTTransitionModifier=0 ),FALSE,TRUE\r\n)\n),\nSQ_SMART_RPT_EDM_Data AS (\n\tDeclare @Date as date\r\n\tset @Date = convert(date,EOMONTH(getdate(),@{pipeline().parameters.NO_OF_MONTHS})) \r\n\t\r\n\tSelect  distinct\r\n\t P.pol_key as PolicyKey\r\n\t,PO.PolicyOfferingDescription as PolicyOffering\r\n\t,P.pol_exp_date as PolicyExpirationDate\r\n\t,RL.LocationUnitNumber\r\n\t,PTRM.ScheduleModifiedFactor\r\n\t,PTRM.ExperienceModifiedFactor\r\n\t,SUM(PT.PremiumTransactionAmount) OVER (PARTITION BY P.pol_ak_id, PC.InsuranceLine) as DirectWrittenPremiumbyInsuranceLine\r\n\t,P.sup_bus_class_code_id\r\n\t,P.AgencyAKId\r\n\t,P.state_of_domicile_code\r\n\t,P.ProgramAKId\r\n\t,P.UnderwritingAssociateAKId\r\n\t,P.pol_ak_id as PolicyAkId\r\n\t,PC.InsuranceLine\r\n\t,CC.cust_num as CustomerNumber\r\n\t,CC.name as FirstNamedInsured\r\n\t,SPC.StrategicProfitCenterAbbreviation as StrategicProfitCenterAbbreviation \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL with (nolock) on RL.PolicyAKID=P.pol_ak_id and RL.CurrentSnapshotFlag=1 and P.crrnt_snpsht_flag=1 and P.source_sys_id='DCT'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) on RL.RiskLocationAKID=PC.RiskLocationAKID and PC.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) on RC.PolicyCoverageAKID=PC.PolicyCoverageAKID \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) on PT.RatingCoverageAKId=RC.RatingCoverageAKID and PT.EffectiveDate=RC.EffectiveDate\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionRatingModifier PTRM with (nolock) on PTRM.PremiumTransactionID=PT.PremiumTransactionID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering PO with (nolock) on PO.PolicyOfferingAKId=P.PolicyOfferingAKId and PO.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.VWContractCustomer CC with (nolock) on CC.contract_cust_ak_id=P.contract_cust_ak_id and CC.crrnt_snpsht_flag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC with (nolock) on SPC.StrategicProfitCenterAKId=P.StrategicProfitCenterAKId \r\n\twhere PT.PremiumTransactionCode in ('Renew','Reissue','Rewrite')\r\n\tand PT.PremiumTransactionAmount <> 0\r\n\tand  PO.PolicyOfferingAbbreviation='SMART' and PC.InsuranceLine <> 'CommercialAuto'\r\n\tand PT.CreatedDate > @Date\r\n\t@{pipeline().parameters.WHERE_CLAUSE_RPT_EDM_SMART}\r\n\torder by  P.pol_key, RL.LocationUnitNumber\n),\nJNR_SMART_TransMod AS (SELECT\n\tSQ_SMART_RPT_EDM_Data.PolicyKey, \n\tSQ_SMART_RPT_EDM_Data.PolicyOffering, \n\tSQ_SMART_RPT_EDM_Data.PolicyExpirationDate, \n\tSQ_SMART_RPT_EDM_Data.LocationUnitNumber, \n\tSQ_SMART_RPT_EDM_Data.ScheduleModifiedFactor, \n\tSQ_SMART_RPT_EDM_Data.ExperienceModifiedFactor, \n\tSQ_SMART_RPT_EDM_Data.DirectWrittenPremiumbyInsuranceLine, \n\tSQ_SMART_RPT_EDM_Data.CustomerNumber, \n\tSQ_SMART_RPT_EDM_Data.FirstNamedInsured, \n\tSQ_SMART_RPT_EDM_Data.sup_bus_class_code_id, \n\tSQ_SMART_RPT_EDM_Data.AgencyAKId, \n\tSQ_SMART_RPT_EDM_Data.state_of_domicile_code, \n\tSQ_SMART_RPT_EDM_Data.ProgramAKId, \n\tSQ_SMART_RPT_EDM_Data.UnderwritingAssociateAKId, \n\tSQ_SMART_RPT_EDM_Data.PolicyAkId, \n\tSQ_SMART_RPT_EDM_Data.InsuranceLine, \n\tSQ_SMART_RPT_EDM_Data.StrategicProfitCenterAbbreviation, \n\tFIL_SMARTEligiblePolicesWithTransition.PolicyKey_SMART AS PolicyKey_Stage, \n\tFIL_SMARTEligiblePolicesWithTransition.PolicyPremium, \n\tFIL_SMARTEligiblePolicesWithTransition.TransactionDate, \n\tFIL_SMARTEligiblePolicesWithTransition.TransactionCommittedUserId, \n\tFIL_SMARTEligiblePolicesWithTransition.LocationNumber AS LocationNumber_Stage, \n\tFIL_SMARTEligiblePolicesWithTransition.SMARTTransitionModifier\n\tFROM SQ_SMART_RPT_EDM_Data\n\tINNER JOIN FIL_SMARTEligiblePolicesWithTransition\n\tON FIL_SMARTEligiblePolicesWithTransition.PolicyKey_SMART = SQ_SMART_RPT_EDM_Data.PolicyKey AND FIL_SMARTEligiblePolicesWithTransition.LocationNumber = SQ_SMART_RPT_EDM_Data.LocationUnitNumber\n),\nEXP_Tns_SMARTTransitionModifiers AS (\n\tSELECT\n\tFirstNamedInsured,\n\tPolicyKey,\n\tPolicyOffering,\n\tPolicyExpirationDate AS in_PolicyExpirationDate,\n\tLocationUnitNumber,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\tDirectWrittenPremiumbyInsuranceLine,\n\tsup_bus_class_code_id,\n\tAgencyAKId,\n\tstate_of_domicile_code,\n\tProgramAKId,\n\tUnderwritingAssociateAKId,\n\tPolicyAkId,\n\tInsuranceLine,\n\tTransactionDate,\n\tTransactionCommittedUserId,\n\t'0' AS CompositeRating,\n\tPolicyPremium AS PolicyDirectWrittenPremium,\n\tStrategicProfitCenterAbbreviation,\n\tCustomerNumber AS in_CustomerNumber,\n\tSMARTTransitionModifier AS in_SMARTTransitionModifier,\n\t-- *INF*: IIF(ISNULL(in_CustomerNumber),'N/A',CHR(39) || in_CustomerNumber)||CHR(39)\n\tIFF(in_CustomerNumber IS NULL, 'N/A', CHR(39) || in_CustomerNumber) || CHR(39) AS o_CustomerNumber,\n\t-- *INF*: TO_CHAR(in_PolicyExpirationDate,'MM-DD-YYYY')\n\tTO_CHAR(in_PolicyExpirationDate, 'MM-DD-YYYY') AS o_PolicyExpirationDate,\n\tin_SMARTTransitionModifier AS o_SMARTTransition,\n\t0 AS o_AutoPhysicalDamage,\n\t0 AS o_AutoPhysicalDamageTransition,\n\t0 AS o_AutoLiability,\n\t0 AS o_AutoLiabilityTransition\n\tFROM JNR_SMART_TransMod\n),\nUN_SMART_Auto_Data AS (\n\tSELECT o_CustomerNumber AS CustomerNumber, FirstNamedInsured, PolicyKey, PolicyOffering, o_PolicyExpirationDate AS PolicyExpirationDate, LocationUnitNumber, o_ScheduleModifiedFactor AS ScheduleModifiedFactor, ExperienceModifiedFactor, DirectWrittenPremiumbyInsuranceLine, sup_bus_class_code_id, AgencyAKId, state_of_domicile_code, ProgramAKId, UnderwritingAssociateAKId, InsuranceLine, TransactionDate, TransactionCommittedUserId, CompositeRating, PolicyDirectWrittenPremium, StrategicProfitCenterAbbreviation, o_SMARTTransition AS SMARTTransition, o_AutoPhysicalDamage AS AutoPhysicalDamage, o_AutoPhysicalDamageTransition AS AutoPhysicalDamageTransition, o_AutoLiability AS AutoLiability, o_AutoLiabilityTransition AS AutoLiabilityTransition\n\tFROM EXP_Derive_AutoModifiers\n\tUNION\n\tSELECT o_CustomerNumber AS CustomerNumber, FirstNamedInsured, PolicyKey, PolicyOffering, o_PolicyExpirationDate AS PolicyExpirationDate, LocationUnitNumber, ScheduleModifiedFactor, ExperienceModifiedFactor, DirectWrittenPremiumbyInsuranceLine, sup_bus_class_code_id, AgencyAKId, state_of_domicile_code, ProgramAKId, UnderwritingAssociateAKId, InsuranceLine, TransactionDate, TransactionCommittedUserId, CompositeRating, PolicyDirectWrittenPremium, StrategicProfitCenterAbbreviation, o_SMARTTransition AS SMARTTransition, o_AutoPhysicalDamage AS AutoPhysicalDamage, o_AutoPhysicalDamageTransition AS AutoPhysicalDamageTransition, o_AutoLiability AS AutoLiability, o_AutoLiabilityTransition AS AutoLiabilityTransition\n\tFROM EXP_Tns_SMARTTransitionModifiers\n),\nLKP_Agency AS (\n\tSELECT\n\tAgencyCode,\n\tDoingBusinessAsName,\n\tin_AgencyAKID,\n\tAgencyAKID\n\tFROM (\n\t\tselect A.AgencyAKID as AgencyAKID , A.AgencyCode as AgencyCode,A.DoingBusinessAsName as DoingBusinessAsName from @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Agency A where A.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyAKID ORDER BY AgencyCode) = 1\n),\nLKP_BCCCode AS (\n\tSELECT\n\tsup_bus_class_code_id,\n\tStandardBusinessClassCode\n\tFROM (\n\t\tselect sup_bus_class_code_id as sup_bus_class_code_id, StandardBusinessClassCode as StandardBusinessClassCode from @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_business_classification_code\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY sup_bus_class_code_id ORDER BY sup_bus_class_code_id DESC) = 1\n),\nLKP_Program AS (\n\tSELECT\n\tProgramDescription,\n\tProgramAKId\n\tFROM (\n\t\tselect PR.ProgramAKId as ProgramAKId, PR.ProgramDescription as ProgramDescription from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Program PR  where PR.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramAKId ORDER BY ProgramDescription DESC) = 1\n),\nLKP_StateCode AS (\n\tSELECT\n\tstate_abbrev,\n\tPrimaryRatingState\n\tFROM (\n\t\tselect S.state_abbrev as state_abbrev, S.state_code as PrimaryRatingState\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_state S\r\n\t\twhere S.crrnt_snpsht_flag=1 and S.source_sys_id='EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_abbrev ORDER BY state_abbrev DESC) = 1\n),\nLKP_UnderwritingAssociate AS (\n\tSELECT\n\tUnderwritingAssociateAKID,\n\tUnderwritingRegionCodeDescription\n\tFROM (\n\t\tselect UWA.UnderwritingAssociateAKID as UnderwritingAssociateAKID, UR.UnderwritingRegionCodeDescription as UnderwritingRegionCodeDescription from @{pipeline().parameters.SOURCE_TABLE_OWNER}.UnderwritingAssociate UWA with (nolock) \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.UnderwritingRegion UR with (nolock) on UR.UnderwritingManagerAKID=UWA.UnderwritingManagerAKID and UR.CurrentSnapshotFlag=1 and UWA.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UnderwritingAssociateAKID ORDER BY UnderwritingAssociateAKID) = 1\n),\nEXP_GetLookupData AS (\n\tSELECT\n\tUN_SMART_Auto_Data.CustomerNumber,\n\tUN_SMART_Auto_Data.FirstNamedInsured,\n\tUN_SMART_Auto_Data.PolicyKey,\n\tUN_SMART_Auto_Data.PolicyOffering,\n\tUN_SMART_Auto_Data.PolicyExpirationDate,\n\tUN_SMART_Auto_Data.LocationUnitNumber,\n\tUN_SMART_Auto_Data.ScheduleModifiedFactor,\n\tUN_SMART_Auto_Data.ExperienceModifiedFactor,\n\tUN_SMART_Auto_Data.DirectWrittenPremiumbyInsuranceLine,\n\tUN_SMART_Auto_Data.InsuranceLine,\n\tUN_SMART_Auto_Data.TransactionDate,\n\tUN_SMART_Auto_Data.TransactionCommittedUserId,\n\tUN_SMART_Auto_Data.CompositeRating,\n\tUN_SMART_Auto_Data.PolicyDirectWrittenPremium,\n\tUN_SMART_Auto_Data.StrategicProfitCenterAbbreviation,\n\tUN_SMART_Auto_Data.SMARTTransition,\n\tUN_SMART_Auto_Data.AutoPhysicalDamage,\n\tUN_SMART_Auto_Data.AutoPhysicalDamageTransition,\n\tUN_SMART_Auto_Data.AutoLiability,\n\tUN_SMART_Auto_Data.AutoLiabilityTransition,\n\tLKP_Program.ProgramDescription AS lkp_Program,\n\tLKP_Agency.AgencyCode AS lkp_AgencyCode,\n\tLKP_Agency.DoingBusinessAsName AS lkp_DoingBusinessAsName,\n\tLKP_UnderwritingAssociate.UnderwritingRegionCodeDescription AS lkp_UnderwritingRegionCode,\n\tLKP_StateCode.PrimaryRatingState AS lkp_PrimaryRatingState,\n\tLKP_BCCCode.StandardBusinessClassCode AS lkp_StandardBusinessClassCode,\n\t-- *INF*: IIF(ISNULL(lkp_Program),'N/A', lkp_Program)\n\tIFF(lkp_Program IS NULL, 'N/A', lkp_Program) AS o_Program,\n\t-- *INF*: SUBSTR(PolicyKey,1,7) || '-' || SUBSTR(PolicyKey,8,2)\n\tSUBSTR(PolicyKey, 1, 7) || '-' || SUBSTR(PolicyKey, 8, 2) AS o_PolicyKey,\n\t-- *INF*: IIF(ISNULL(lkp_AgencyCode),'N/A',lkp_AgencyCode)\n\tIFF(lkp_AgencyCode IS NULL, 'N/A', lkp_AgencyCode) AS o_AgencyCode,\n\t-- *INF*: IIF(ISNULL(lkp_DoingBusinessAsName),'N/A',lkp_DoingBusinessAsName)\n\tIFF(lkp_DoingBusinessAsName IS NULL, 'N/A', lkp_DoingBusinessAsName) AS o_AgencyName,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingRegionCode),'N/A',lkp_UnderwritingRegionCode)\n\tIFF(lkp_UnderwritingRegionCode IS NULL, 'N/A', lkp_UnderwritingRegionCode) AS o_UnderwritingRegion,\n\t-- *INF*: IIF(ISNULL(lkp_PrimaryRatingState),'N/A',lkp_PrimaryRatingState)\n\tIFF(lkp_PrimaryRatingState IS NULL, 'N/A', lkp_PrimaryRatingState) AS o_PrimaryRatingState,\n\t-- *INF*: IIF(ISNULL(lkp_StandardBusinessClassCode) or lkp_StandardBusinessClassCode='N/A' ,'N/A',  lkp_StandardBusinessClassCode)\n\tIFF(\n\t    lkp_StandardBusinessClassCode IS NULL or lkp_StandardBusinessClassCode = 'N/A', 'N/A',\n\t    lkp_StandardBusinessClassCode\n\t) AS o_BusinessClassificationCode\n\tFROM UN_SMART_Auto_Data\n\tLEFT JOIN LKP_Agency\n\tON LKP_Agency.AgencyAKID = UN_SMART_Auto_Data.AgencyAKId\n\tLEFT JOIN LKP_BCCCode\n\tON LKP_BCCCode.sup_bus_class_code_id = UN_SMART_Auto_Data.sup_bus_class_code_id\n\tLEFT JOIN LKP_Program\n\tON LKP_Program.ProgramAKId = UN_SMART_Auto_Data.ProgramAKId\n\tLEFT JOIN LKP_StateCode\n\tON LKP_StateCode.state_abbrev = UN_SMART_Auto_Data.state_of_domicile_code\n\tLEFT JOIN LKP_UnderwritingAssociate\n\tON LKP_UnderwritingAssociate.UnderwritingAssociateAKID = UN_SMART_Auto_Data.UnderwritingAssociateAKId\n),\nSRT_SMARTAutoTransitionFactor AS (\n\tSELECT\n\tStrategicProfitCenterAbbreviation, \n\to_UnderwritingRegion AS UnderwritingRegion, \n\tPolicyOffering, \n\tCustomerNumber, \n\to_PolicyKey AS PolicyKey, \n\tTransactionCommittedUserId, \n\tFirstNamedInsured, \n\tInsuranceLine, \n\to_Program AS Program, \n\tLocationUnitNumber AS LocationNumber, \n\tExperienceModifiedFactor AS ExperienceModificationFactor, \n\tScheduleModifiedFactor AS ScheduledModificationFactor, \n\tSMARTTransition, \n\tAutoPhysicalDamage, \n\tAutoPhysicalDamageTransition, \n\tAutoLiability, \n\tAutoLiabilityTransition, \n\to_PrimaryRatingState AS PrimaryRatingState, \n\to_BusinessClassificationCode AS BusinessClassificationCode, \n\tPolicyExpirationDate, \n\tTransactionDate AS TransactionCommittedDate, \n\tPolicyDirectWrittenPremium, \n\tDirectWrittenPremiumbyInsuranceLine, \n\to_AgencyCode AS AgencyCode, \n\to_AgencyName AS AgencyName, \n\tCompositeRating AS CompositeRatingIndicator\n\tFROM EXP_GetLookupData\n\tORDER BY PolicyOffering ASC, PolicyKey ASC, InsuranceLine ASC, LocationNumber ASC, ExperienceModificationFactor ASC, ScheduledModificationFactor ASC, SMARTTransition ASC, AutoPhysicalDamage ASC, AutoPhysicalDamageTransition ASC, AutoLiability ASC, AutoLiabilityTransition ASC\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tStrategicProfitCenterAbbreviation,\n\tUnderwritingRegion,\n\tPolicyOffering,\n\tCustomerNumber,\n\tPolicyKey,\n\tTransactionCommittedUserId,\n\tFirstNamedInsured,\n\tInsuranceLine,\n\tProgram,\n\tLocationNumber,\n\tExperienceModificationFactor,\n\tScheduledModificationFactor,\n\tSMARTTransition,\n\tAutoPhysicalDamage,\n\tAutoPhysicalDamageTransition,\n\tAutoLiability,\n\tAutoLiabilityTransition,\n\tPrimaryRatingState,\n\tBusinessClassificationCode,\n\tPolicyExpirationDate,\n\tTransactionCommittedDate,\n\tPolicyDirectWrittenPremium,\n\tDirectWrittenPremiumbyInsuranceLine,\n\tAgencyCode,\n\tAgencyName,\n\tCompositeRatingIndicator\n\tFROM SRT_SMARTAutoTransitionFactor\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOffering, PolicyKey, InsuranceLine, LocationNumber, ExperienceModificationFactor, ScheduledModificationFactor, SMARTTransition, AutoPhysicalDamage, AutoPhysicalDamageTransition, AutoLiability, AutoLiabilityTransition ORDER BY NULL) = 1\n),\nEXP_TargetPassthrough AS (\n\tSELECT\n\tStrategicProfitCenterAbbreviation,\n\tUnderwritingRegion,\n\tTransactionCommittedUserId,\n\tCustomerNumber,\n\tFirstNamedInsured,\n\tPolicyOffering,\n\tProgram,\n\tInsuranceLine,\n\tPolicyKey,\n\tLocationNumber,\n\tExperienceModificationFactor,\n\tScheduledModificationFactor,\n\tSMARTTransition,\n\tAutoLiability,\n\tAutoLiabilityTransition,\n\tAutoPhysicalDamage,\n\tAutoPhysicalDamageTransition,\n\tPrimaryRatingState,\n\tBusinessClassificationCode,\n\tPolicyExpirationDate,\n\tTransactionCommittedDate,\n\tPolicyDirectWrittenPremium,\n\tDirectWrittenPremiumbyInsuranceLine,\n\tAgencyCode,\n\tAgencyName,\n\tCompositeRatingIndicator,\n\t-- *INF*: SETMAXVARIABLE(@{pipeline().parameters.FILENAME},'TransitionFactorReport_'||TO_CHAR(ADD_TO_DATE(SYSDATE,'MONTH',-1),'MON YYYY')||'.csv')\n\tSETMAXVARIABLE(@{pipeline().parameters.FILENAME}, 'TransitionFactorReport_' || TO_CHAR(DATEADD(MONTH,- 1,CURRENT_TIMESTAMP), 'MON YYYY') || '.csv') AS FileName_MappingVariable,\n\t-- *INF*: 'TransitionFactorReport_'||TO_CHAR(ADD_TO_DATE(SYSDATE,'MONTH',-1),'MON YYYY')||'.csv'\n\t'TransitionFactorReport_' || TO_CHAR(DATEADD(MONTH,- 1,CURRENT_TIMESTAMP), 'MON YYYY') || '.csv' AS FileName\n\tFROM AGG_RemoveDuplicates\n),\nSMARTAutoTransitionFactorReportFile AS (\n\tINSERT INTO SMARTAutoTransitionFactorReportFile\n\t(StrategicProfitCenter, UnderwritingRegion, TransactionCommittedUserId, CustomerNumber, FirstNamedInsured, PolicyOffering, Program, InsuranceLine, PolicyKey, LocationNumber, ExperienceModificationFactor, ScheduledModificationFactor, SMARTTransition, AutoLiabilityScheduleModExclTransition, AutoLiabilityTransition, AutoPhysicalDamageScheduleModExclTransition, AutoPhysicalDamageTransition, PrimaryRatingState, BusinessClassificationCode, PolicyExpirationDate, TransactionCommittedDate, PolicyDirectWrittenPremium, DirectWrittenPremiumbyInsuranceLine, AgencyCode, AgencyName, CompositeRatingIndicator, FileName)\n\tSELECT \n\tStrategicProfitCenterAbbreviation AS STRATEGICPROFITCENTER, \n\tUNDERWRITINGREGION, \n\tTRANSACTIONCOMMITTEDUSERID, \n\tCUSTOMERNUMBER, \n\tFIRSTNAMEDINSURED, \n\tPOLICYOFFERING, \n\tPROGRAM, \n\tINSURANCELINE, \n\tPOLICYKEY, \n\tLOCATIONNUMBER, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tSCHEDULEDMODIFICATIONFACTOR, \n\tSMARTTRANSITION, \n\tAutoLiability AS AUTOLIABILITYSCHEDULEMODEXCLTRANSITION, \n\tAUTOLIABILITYTRANSITION, \n\tAutoPhysicalDamage AS AUTOPHYSICALDAMAGESCHEDULEMODEXCLTRANSITION, \n\tAUTOPHYSICALDAMAGETRANSITION, \n\tPRIMARYRATINGSTATE, \n\tBUSINESSCLASSIFICATIONCODE, \n\tPOLICYEXPIRATIONDATE, \n\tTRANSACTIONCOMMITTEDDATE, \n\tPOLICYDIRECTWRITTENPREMIUM, \n\tDIRECTWRITTENPREMIUMBYINSURANCELINE, \n\tAGENCYCODE, \n\tAGENCYNAME, \n\tCOMPOSITERATINGINDICATOR, \n\tFILENAME\n\tFROM EXP_TargetPassthrough\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_CA": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_RPT_EDM_CA": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_SMART": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_RPT_EDM_SMART": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "FILENAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}