{
    "name": "s_m_QTE_Load_QuoteTransactionFact",
    "properties": {
        "activities": [
            {
                "name": "m_QTE_Load_QuoteTransactionFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_calendar_dim_clndr_yr AS (\n\tSELECT\n\tclndr_yr,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_yr,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_yr) = 1\n),\nLKP_calendar_dim_clndr_id AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_Quote AS (\n\tSELECT\n\t\tQuote.QuoteId,\n\t\tQuoteTransaction.QuoteTransactionId,\n\t\tQuote.QuoteAKId,\n\t\tQuote.QuoteKey,\n\t\tQuote.AgencyAKId,\n\t\tQuote.QuoteNumber,\n\t\tQuote.BusinessClassCode,\n\t\tQuote.InternalExternalIndicator,\n\t\tQuote.RiskState,\n\t\tQuote.QuoteEffectiveDate,\n\t\tQuote.ProgramAKId,\n\t\tQuoteTransaction.WrittenPremium,\n\t\tQuote.CurrentSnapshotFlag,\n\t\tQuote.QuoteStatusCode,\n\t\tQuote.UnderwritingAssociateAKId,\n\t\tQuote.AgencyEmployeeAKId,\n\t\tQuote.StatusDate,\n\t\tQuote.QuoteCreatedDate,\n\t\tQuote.EstimatedQuotePremium,\n\t\tEnterpriseGroup.EnterpriseGroupCode,\n\t\tInsuranceReferenceLegalEntity.InsuranceReferenceLegalEntityCode,\n\t\tStrategicProfitCenter.StrategicProfitCenterCode,\n\t\tInsuranceSegment.InsuranceSegmentCode,\n\t\tPolicyOffering.PolicyOfferingCode,\n\t\tProduct.ProductCode,\n\t\tInsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessCode,\n\t\tQuoteTransaction.RiskGradeCode\n\tFROM Quote\n\tINNER JOIN QuoteTransaction\n\tINNER JOIN InsuranceReferenceLegalEntity\n\tINNER JOIN InsuranceSegment\n\tINNER JOIN PolicyOffering\n\tINNER JOIN Product\n\tINNER JOIN StrategicProfitCenter\n\tINNER JOIN EnterpriseGroup\n\tINNER JOIN InsuranceReferenceLineOfBusiness\n\tON {\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.QuoteTransaction \r\n\ton Quote.QuoteAKId = QuoteTransaction.QuoteAKId\r\n\tand Quote.StatusDate=QuoteTransaction.StatusDate\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering\r\n\ton PolicyOffering.PolicyOfferingAKId=Quote.PolicyOfferingAKId and PolicyOffering.CurrentSnapshotFlag=1\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter\r\n\ton StrategicProfitCenter.StrategicProfitCenterAKId=Quote.StrategicProfitCenterAKId  and StrategicProfitCenter.CurrentSnapshotFlag=1\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment\r\n\ton InsuranceSegment.InsuranceSegmentAKId=Quote.InsuranceSegmentAKId and InsuranceSegment.CurrentSnapshotFlag=1\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.EnterpriseGroup\r\n\ton EnterpriseGroup.EnterpriseGroupId=StrategicProfitCenter.EnterpriseGroupId\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLegalEntity\r\n\ton InsuranceReferenceLegalEntity.InsuranceReferenceLegalEntityId=StrategicProfitCenter.InsuranceReferenceLegalEntityId\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness\r\n\ton InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessAKId=QuoteTransaction.InsuranceReferenceLineOfBusinessAKId and InsuranceReferenceLineOfBusiness.CurrentSnapshotFlag=1\r\n\tleft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.Product\r\n\ton Product.ProductAKId=QuoteTransaction.ProductAKId and Product.CurrentSnapshotFlag=1\r\n\t}\n\tWHERE Quote.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}' @{pipeline().parameters.WHERE_CLAUSE}\n),\nLKP_AgencyDim AS (\n\tSELECT\n\ti_AgencyAKId,\n\tAgencyDimID,\n\tAgencyCode,\n\tEDWAgencyAKID\n\tFROM (\n\t\tSELECT \n\t\t\ti_AgencyAKId,\n\t\t\tAgencyDimID,\n\t\t\tAgencyCode,\n\t\t\tEDWAgencyAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V3}.AgencyDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID ORDER BY i_AgencyAKId) = 1\n),\nLKP_AgencyEmployeeDim AS (\n\tSELECT\n\ti_AgencyEmployeeAKID,\n\tAgencyEmployeeDimID,\n\tEDWAgencyEmployeeAKID\n\tFROM (\n\t\tSELECT \n\t\t\ti_AgencyEmployeeAKID,\n\t\t\tAgencyEmployeeDimID,\n\t\t\tEDWAgencyEmployeeAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.AgencyEmployeeDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyEmployeeAKID ORDER BY i_AgencyEmployeeAKID) = 1\n),\nLKP_BusinessClassDim AS (\n\tSELECT\n\ti_BusinessClassCode,\n\tBusinessClassDimId,\n\tBusinessClassCode\n\tFROM (\n\t\tSELECT \n\t\t\ti_BusinessClassCode,\n\t\t\tBusinessClassDimId,\n\t\t\tBusinessClassCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.BusinessClassDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BusinessClassCode ORDER BY i_BusinessClassCode) = 1\n),\nLKP_ClosedQuoteDim AS (\n\tSELECT\n\tClosedQuoteDimId,\n\tEDWQuotePKId\n\tFROM (\n\t\tSELECT \n\t\t\tClosedQuoteDimId,\n\t\t\tEDWQuotePKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ClosedQuoteDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuotePKId ORDER BY ClosedQuoteDimId) = 1\n),\nLKP_DeclinedQuoteDim AS (\n\tSELECT\n\tDeclinedQuoteDimId,\n\tEDWQuotePKId\n\tFROM (\n\t\tSELECT \n\t\t\tDeclinedQuoteDimId,\n\t\t\tEDWQuotePKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.DeclinedQuoteDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuotePKId ORDER BY DeclinedQuoteDimId) = 1\n),\nEXP_Default_ProductCode_LineOfBusinessCode AS (\n\tSELECT\n\tProductCode AS i_ProductCode,\n\tInsuranceReferenceLineOfBusinessCode AS i_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: IIF(ISNULL(i_ProductCode), '000', i_ProductCode)\n\tIFF(i_ProductCode IS NULL, '000', i_ProductCode) AS o_ProductCode,\n\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLineOfBusinessCode), '000', i_InsuranceReferenceLineOfBusinessCode)\n\tIFF(i_InsuranceReferenceLineOfBusinessCode IS NULL, '000', i_InsuranceReferenceLineOfBusinessCode) AS o_InsuranceReferenceLineOfBusinessCode,\n\t'1' AS o_RatingPlanCode\n\tFROM SQ_Quote\n),\nLKP_InsuranceReferenceDim AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tEnterpriseGroupCode,\n\tInsuranceReferenceLegalEntityCode,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode,\n\tProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRatingPlanCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceDimId,\n\t\t\tEnterpriseGroupCode,\n\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tPolicyOfferingCode,\n\t\t\tProductCode,\n\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\tRatingPlanCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EnterpriseGroupCode,InsuranceReferenceLegalEntityCode,StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode,ProductCode,InsuranceReferenceLineOfBusinessCode,RatingPlanCode ORDER BY InsuranceReferenceDimId) = 1\n),\nLKP_PartyRoleInAgreement AS (\n\tSELECT\n\tPartyAkId,\n\tQuoteAkId\n\tFROM (\n\t\tSELECT \n\t\t\tPartyAkId,\n\t\t\tQuoteAkId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PartyRoleInAgreement\n\t\tWHERE CurrentSnapshotFlag = 1 and partyroleinagreementtypecode='Prospect'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAkId ORDER BY PartyAkId) = 1\n),\nLKP_PartyDim AS (\n\tSELECT\n\tPartyDimID,\n\tPartyNumber,\n\ti_PartyAkId,\n\tEDWPartyAKID\n\tFROM (\n\t\tSELECT \n\t\t\tPartyDimID,\n\t\t\tPartyNumber,\n\t\t\ti_PartyAkId,\n\t\t\tEDWPartyAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPartyAKID ORDER BY PartyDimID) = 1\n),\nLKP_Program AS (\n\tSELECT\n\ti_ProgramAKId,\n\tProgramAKId,\n\tProgramCode\n\tFROM (\n\t\tSELECT \n\t\t\ti_ProgramAKId,\n\t\t\tProgramAKId,\n\t\t\tProgramCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Program\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramAKId ORDER BY i_ProgramAKId) = 1\n),\nLKP_ProgramDim AS (\n\tSELECT\n\ti_ProgramCode,\n\tProgramDimId,\n\tProgramCode\n\tFROM (\n\t\tSELECT \n\t\t\ti_ProgramCode,\n\t\t\tProgramDimId,\n\t\t\tProgramCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ProgramDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramCode ORDER BY i_ProgramCode) = 1\n),\nLKP_QuoteDim AS (\n\tSELECT\n\tQuoteDimId,\n\tReleasedQuoteFlag,\n\tEDWQuoteAKId\n\tFROM (\n\t\tSELECT QuoteDimId as QuoteDimId,\r\n\t\tCONVERT(VARCHAR(1),ReleasedQuoteFlag) as ReleasedQuoteFlag,\r\n\t\tEDWQuoteAKId as EDWQuoteAKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteDim\r\n\t\tWHERE EXISTS (\r\n\t\tSELECT 1 FROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=QuoteDim.EDWQuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}' )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuoteAKId ORDER BY QuoteDimId) = 1\n),\nLKP_QuoteStatusDim AS (\n\tSELECT\n\tQuoteStatusDimId,\n\tQuoteStatusCode\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteStatusDimId,\n\t\t\tQuoteStatusCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteStatusDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteStatusCode ORDER BY QuoteStatusDimId) = 1\n),\nLKP_StateDim AS (\n\tSELECT\n\tStateDimID,\n\tStateAbbreviation\n\tFROM (\n\t\tSELECT \n\t\t\tStateDimID,\n\t\t\tStateAbbreviation\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.StateDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateAbbreviation ORDER BY StateDimID) = 1\n),\nLKP_UnderwritingDivisionDim AS (\n\tSELECT\n\tUnderwritingDivisionDimID,\n\tEDWUnderwritingAssociateAKID\n\tFROM (\n\t\tSELECT \n\t\t\tUnderwritingDivisionDimID,\n\t\t\tEDWUnderwritingAssociateAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.UnderwritingDivisionDim\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWUnderwritingAssociateAKID ORDER BY UnderwritingDivisionDimID) = 1\n),\nEXP_GatherAllPorts AS (\n\tSELECT\n\tLKP_QuoteStatusDim.QuoteStatusDimId AS lkp_QuoteStatusDimId,\n\tLKP_StateDim.StateDimID AS lkp_StateDimID,\n\tLKP_PartyDim.PartyDimID AS lkp_PartyDimID,\n\tLKP_PartyDim.PartyNumber AS lkp_PartyNumber,\n\tLKP_AgencyDim.AgencyDimID AS lkp_AgencyDimID,\n\tLKP_AgencyEmployeeDim.AgencyEmployeeDimID AS lkp_AgencyEmployeeDimID,\n\tLKP_ProgramDim.ProgramDimId AS lkp_ProgramDimId,\n\tLKP_DeclinedQuoteDim.DeclinedQuoteDimId AS lkp_DeclinedQuoteDimId,\n\tLKP_ClosedQuoteDim.ClosedQuoteDimId AS lkp_ClosedQuoteDimId,\n\tLKP_BusinessClassDim.BusinessClassDimId AS lkp_BusinessClassDimId,\n\tLKP_InsuranceReferenceDim.InsuranceReferenceDimId AS lkp_InsuranceReferenceDimId,\n\tLKP_UnderwritingDivisionDim.UnderwritingDivisionDimID AS lkp_UnderwritingDivisionDimID,\n\tLKP_QuoteDim.QuoteDimId AS lkp_QuoteDimId,\n\tLKP_QuoteDim.ReleasedQuoteFlag AS lkp_ReleasedQuoteFlag,\n\tSQ_Quote.QuoteTransactionId AS i_QuoteTransactionId,\n\tSQ_Quote.QuoteKey,\n\tSQ_Quote.QuoteNumber AS i_QuoteNumber,\n\tSQ_Quote.CurrentSnapshotFlag AS i_CurrentSnapshotFlag,\n\tSQ_Quote.QuoteStatusCode AS i_QuoteStatusCode,\n\tSQ_Quote.InternalExternalIndicator AS i_InternalExternalIndicator,\n\tSQ_Quote.QuoteEffectiveDate AS i_QuoteEffectiveDate,\n\tSQ_Quote.WrittenPremium AS i_WrittenPremium,\n\tSQ_Quote.StatusDate,\n\tSQ_Quote.QuoteCreatedDate AS i_StatusCreatedDate,\n\tSQ_Quote.EstimatedQuotePremium AS i_EstimatedQuotePremium,\n\tSQ_Quote.RiskGradeCode AS i_RiskGrade,\n\tSQ_Quote.QuoteId,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_QuoteStatusCode='Initialized Quote',0,\r\n\t-- --IN(i_QuoteStatusCode,'Declined','Closed')=1 AND lkp_ReleasedQuoteFlag='0',0,\r\n\t-- i_WrittenPremium)\n\tDECODE(TRUE,\n\ti_QuoteStatusCode = 'Initialized Quote', 0,\n\ti_WrittenPremium) AS v_WrittenPremium,\n\t-- *INF*: IIF(NOT ISNULL(i_QuoteTransactionId),i_QuoteTransactionId,-1)\n\tIFF(NOT i_QuoteTransactionId IS NULL, i_QuoteTransactionId, - 1) AS QuoteTransactionId,\n\t-- *INF*: IIF(i_CurrentSnapshotFlag='T','1','0')\n\tIFF(i_CurrentSnapshotFlag = 'T', '1', '0') AS CurrentSnapshotFlag,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(StatusDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))), -1, :LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(StatusDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')))\n\tIFF(LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_StatusDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id IS NULL, - 1, LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_StatusDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id) AS QuoteStatusDateID,\n\t-- *INF*: IIF( ISNULL(:LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(i_StatusCreatedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))), -1, :LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(i_StatusCreatedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')))\n\tIFF(LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_StatusCreatedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id IS NULL, - 1, LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_StatusCreatedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id) AS QuoteCreatedDateID,\n\t-- *INF*: IIF( ISNULL(:LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(i_QuoteEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))), -1, :LKP.LKP_CALENDAR_DIM_CLNDR_ID(TO_DATE(TO_CHAR(i_QuoteEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')))\n\tIFF(LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_QuoteEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id IS NULL, - 1, LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_QuoteEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id) AS QuoteEffectiveDateID,\n\t-- *INF*: IIF( ISNULL(lkp_QuoteStatusDimId), -1, lkp_QuoteStatusDimId)\n\tIFF(lkp_QuoteStatusDimId IS NULL, - 1, lkp_QuoteStatusDimId) AS QuoteStatusDimID,\n\t-- *INF*: IIF( ISNULL(lkp_StateDimID), -1, lkp_StateDimID)\n\tIFF(lkp_StateDimID IS NULL, - 1, lkp_StateDimID) AS RiskStateDimID,\n\t-- *INF*: IIF( ISNULL(lkp_PartyDimID), -1, lkp_PartyDimID)\n\tIFF(lkp_PartyDimID IS NULL, - 1, lkp_PartyDimID) AS PartyDimID,\n\t-- *INF*: IIF( ISNULL(lkp_AgencyDimID), -1, lkp_AgencyDimID)\n\tIFF(lkp_AgencyDimID IS NULL, - 1, lkp_AgencyDimID) AS AgencyDimID,\n\t-- *INF*: IIF( ISNULL(lkp_AgencyEmployeeDimID), -1, lkp_AgencyEmployeeDimID)\n\tIFF(lkp_AgencyEmployeeDimID IS NULL, - 1, lkp_AgencyEmployeeDimID) AS AgencyEmployeeDimID,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingDivisionDimID), -1,lkp_UnderwritingDivisionDimID)\n\tIFF(lkp_UnderwritingDivisionDimID IS NULL, - 1, lkp_UnderwritingDivisionDimID) AS UnderwritingDivisionDimID,\n\t-- *INF*: IIF( ISNULL(lkp_ProgramDimId), -1 , lkp_ProgramDimId)\n\tIFF(lkp_ProgramDimId IS NULL, - 1, lkp_ProgramDimId) AS ProgramDimId,\n\t-- *INF*: IIF( ISNULL(lkp_DeclinedQuoteDimId), -1, lkp_DeclinedQuoteDimId)\n\tIFF(lkp_DeclinedQuoteDimId IS NULL, - 1, lkp_DeclinedQuoteDimId) AS DeclinedQuoteDimId,\n\t-- *INF*: IIF( ISNULL(lkp_BusinessClassDimId), -1, lkp_BusinessClassDimId)\n\tIFF(lkp_BusinessClassDimId IS NULL, - 1, lkp_BusinessClassDimId) AS BusinessClassDimId,\n\t-- *INF*: IIF( ISNULL(lkp_InsuranceReferenceDimId), -1, lkp_InsuranceReferenceDimId)\n\tIFF(lkp_InsuranceReferenceDimId IS NULL, - 1, lkp_InsuranceReferenceDimId) AS InsuranceReferenceDimId,\n\t-- *INF*: IIF(i_InternalExternalIndicator =  'External', 1, 0)\n\tIFF(i_InternalExternalIndicator = 'External', 1, 0) AS ExternalQuoteIndicator,\n\t-- *INF*: IIF( ISNULL(v_WrittenPremium), 0, v_WrittenPremium)\n\tIFF(v_WrittenPremium IS NULL, 0, v_WrittenPremium) AS WrittenPremium,\n\t-- *INF*: IIF(ISNULL(i_RiskGrade), 'N/A', i_RiskGrade)\n\tIFF(i_RiskGrade IS NULL, 'N/A', i_RiskGrade) AS RiskGrade,\n\t-- *INF*: IIF(NOT ISNULL(lkp_QuoteDimId),lkp_QuoteDimId)\n\tIFF(NOT lkp_QuoteDimId IS NULL, lkp_QuoteDimId) AS QuoteDimId,\n\ti_QuoteNumber AS QuoteCounter,\n\t-- *INF*: IIF(NOT ISNULL(lkp_PartyNumber),lkp_PartyNumber,'N/A')\n\tIFF(NOT lkp_PartyNumber IS NULL, lkp_PartyNumber, 'N/A') AS CustomerCounter,\n\t-- *INF*: IIF( ISNULL(i_EstimatedQuotePremium), 0, i_EstimatedQuotePremium)\n\tIFF(i_EstimatedQuotePremium IS NULL, 0, i_EstimatedQuotePremium) AS EstimatedQuotePremium,\n\t-- *INF*: IIF( ISNULL(lkp_ClosedQuoteDimId), -1, lkp_ClosedQuoteDimId)\n\tIFF(lkp_ClosedQuoteDimId IS NULL, - 1, lkp_ClosedQuoteDimId) AS ClosedQuoteDimId\n\tFROM SQ_Quote\n\tLEFT JOIN LKP_AgencyDim\n\tON LKP_AgencyDim.EDWAgencyAKID = SQ_Quote.AgencyAKId\n\tLEFT JOIN LKP_AgencyEmployeeDim\n\tON LKP_AgencyEmployeeDim.EDWAgencyEmployeeAKID = SQ_Quote.AgencyEmployeeAKId\n\tLEFT JOIN LKP_BusinessClassDim\n\tON LKP_BusinessClassDim.BusinessClassCode = SQ_Quote.BusinessClassCode\n\tLEFT JOIN LKP_ClosedQuoteDim\n\tON LKP_ClosedQuoteDim.EDWQuotePKId = SQ_Quote.QuoteId\n\tLEFT JOIN LKP_DeclinedQuoteDim\n\tON LKP_DeclinedQuoteDim.EDWQuotePKId = SQ_Quote.QuoteId\n\tLEFT JOIN LKP_InsuranceReferenceDim\n\tON LKP_InsuranceReferenceDim.EnterpriseGroupCode = SQ_Quote.EnterpriseGroupCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLegalEntityCode = SQ_Quote.InsuranceReferenceLegalEntityCode AND LKP_InsuranceReferenceDim.StrategicProfitCenterCode = SQ_Quote.StrategicProfitCenterCode AND LKP_InsuranceReferenceDim.InsuranceSegmentCode = SQ_Quote.InsuranceSegmentCode AND LKP_InsuranceReferenceDim.PolicyOfferingCode = SQ_Quote.PolicyOfferingCode AND LKP_InsuranceReferenceDim.ProductCode = EXP_Default_ProductCode_LineOfBusinessCode.o_ProductCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode = EXP_Default_ProductCode_LineOfBusinessCode.o_InsuranceReferenceLineOfBusinessCode AND LKP_InsuranceReferenceDim.RatingPlanCode = EXP_Default_ProductCode_LineOfBusinessCode.o_RatingPlanCode\n\tLEFT JOIN LKP_PartyDim\n\tON LKP_PartyDim.EDWPartyAKID = LKP_PartyRoleInAgreement.PartyAkId\n\tLEFT JOIN LKP_ProgramDim\n\tON LKP_ProgramDim.ProgramCode = LKP_Program.ProgramCode\n\tLEFT JOIN LKP_QuoteDim\n\tON LKP_QuoteDim.EDWQuoteAKId = SQ_Quote.QuoteAKId\n\tLEFT JOIN LKP_QuoteStatusDim\n\tON LKP_QuoteStatusDim.QuoteStatusCode = SQ_Quote.QuoteStatusCode\n\tLEFT JOIN LKP_StateDim\n\tON LKP_StateDim.StateAbbreviation = SQ_Quote.RiskState\n\tLEFT JOIN LKP_UnderwritingDivisionDim\n\tON LKP_UnderwritingDivisionDim.EDWUnderwritingAssociateAKID = SQ_Quote.UnderwritingAssociateAKId\n\tLEFT JOIN LKP_CALENDAR_DIM_CLNDR_ID LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_StatusDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_StatusDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(StatusDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDAR_DIM_CLNDR_ID LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_StatusCreatedDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_StatusCreatedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(i_StatusCreatedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDAR_DIM_CLNDR_ID LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_QuoteEffectiveDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDAR_DIM_CLNDR_ID_TO_DATE_TO_CHAR_i_QuoteEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(i_QuoteEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n),\nLKP_FirstBound AS (\n\tSELECT\n\tQuoteKey,\n\tStatusDate\n\tFROM (\n\t\tSelect \r\n\t\tb.QuoteKey as QuoteKey,\r\n\t\tb.StatusDate as StatusDate\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote b\r\n\t\twhere b.QuoteStatusCode='Bound'\r\n\t\tand exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteKey=b.QuoteKey\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote c\r\n\t\twhere c.QuoteKey=b.QuoteKey\r\n\t\tand c.StatusDate>b.StatusDate\r\n\t\tand c.QuoteStatusCode='Bound')\r\n\t\torder by b.StatusDate,b.QuoteKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatusDate,QuoteKey ORDER BY QuoteKey) = 1\n),\nLKP_FirstReleaseQuote AS (\n\tSELECT\n\tQuoteKey,\n\tStatusDate\n\tFROM (\n\t\tSelect \r\n\t\tb.QuoteKey as QuoteKey,\r\n\t\tb.StatusDate as StatusDate\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote b\r\n\t\twhere b.QuoteStatusCode='Released Quote'\r\n\t\tand exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteKey=b.QuoteKey\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote c\r\n\t\twhere c.QuoteKey=b.QuoteKey\r\n\t\tand c.StatusDate>b.StatusDate\r\n\t\tand c.QuoteStatusCode='Released Quote')\r\n\t\torder by b.StatusDate,b.QuoteKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatusDate,QuoteKey ORDER BY QuoteKey) = 1\n),\nLKP_QuoteTransactionFact AS (\n\tSELECT\n\tQuoteTransactionFactId,\n\tCurrentSnapshotFlag,\n\tEDWQuotePKId,\n\tEDWQuoteTransactionPKId\n\tFROM (\n\t\tSELECT a.QuoteTransactionFactId as QuoteTransactionFactId,\r\n\t\tconvert(varchar(1),a.CurrentSnapshotFlag) as CurrentSnapshotFlag,\r\n\t\ta.EDWQuotePKId as EDWQuotePKId,\r\n\t\ta.EDWQuoteTransactionPKId as EDWQuoteTransactionPKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteTransactionFact a\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote c\r\n\t\twhere c.QuoteNumber=a.QuoteCounter\r\n\t\tand c.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\torder by a.EDWQuotePKId,a.EDWQuoteTransactionPKId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuotePKId,EDWQuoteTransactionPKId ORDER BY QuoteTransactionFactId) = 1\n),\nEXP_InsertUpdate AS (\n\tSELECT\n\tLKP_QuoteTransactionFact.QuoteTransactionFactId AS lkp_QuoteTransactionFactId,\n\tLKP_QuoteTransactionFact.CurrentSnapshotFlag AS lkp_CurrentSnapshotFlag,\n\tLKP_FirstBound.QuoteKey AS lkp_FirstBound,\n\tLKP_FirstReleaseQuote.QuoteKey AS lkp_FirstReleasedQuote,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- lkp_CurrentSnapshotFlag='1' AND CurrentSnapshotFlag='0' AND ISNULL(lkp_FirstBound) AND ISNULL(lkp_FirstReleasedQuote),'Delete',\r\n\t-- CurrentSnapshotFlag='0' AND ISNULL(lkp_FirstBound) AND ISNULL(lkp_FirstReleasedQuote),'Ignore',\r\n\t-- ISNULL(lkp_QuoteTransactionFactId),'Insert',\r\n\t-- 'Ignore')\n\tDECODE(TRUE,\n\tlkp_CurrentSnapshotFlag = '1' AND CurrentSnapshotFlag = '0' AND lkp_FirstBound IS NULL AND lkp_FirstReleasedQuote IS NULL, 'Delete',\n\tCurrentSnapshotFlag = '0' AND lkp_FirstBound IS NULL AND lkp_FirstReleasedQuote IS NULL, 'Ignore',\n\tlkp_QuoteTransactionFactId IS NULL, 'Insert',\n\t'Ignore') AS InsertUpdate,\n\tlkp_QuoteTransactionFactId AS QuoteTransactionFactId,\n\tEXP_GatherAllPorts.QuoteId AS EDWQuotePKId,\n\tEXP_GatherAllPorts.QuoteTransactionId AS EDWQuoteTransactionPKId,\n\tEXP_GatherAllPorts.CurrentSnapshotFlag,\n\t-- *INF*: IIF(ISNULL(lkp_FirstBound),'0','1')\n\tIFF(lkp_FirstBound IS NULL, '0', '1') AS FirstBoundFlag,\n\tEXP_GatherAllPorts.QuoteStatusDateID,\n\tEXP_GatherAllPorts.QuoteCreatedDateID,\n\tEXP_GatherAllPorts.QuoteEffectiveDateID,\n\tEXP_GatherAllPorts.QuoteStatusDimID,\n\tEXP_GatherAllPorts.RiskStateDimID,\n\tEXP_GatherAllPorts.PartyDimID,\n\tEXP_GatherAllPorts.AgencyDimID,\n\tEXP_GatherAllPorts.AgencyEmployeeDimID,\n\tEXP_GatherAllPorts.UnderwritingDivisionDimID,\n\tEXP_GatherAllPorts.ProgramDimId,\n\tEXP_GatherAllPorts.DeclinedQuoteDimId,\n\tEXP_GatherAllPorts.BusinessClassDimId,\n\tEXP_GatherAllPorts.InsuranceReferenceDimId,\n\tEXP_GatherAllPorts.ExternalQuoteIndicator,\n\tEXP_GatherAllPorts.WrittenPremium AS QuoteTransactionPremium,\n\tEXP_GatherAllPorts.RiskGrade,\n\tEXP_GatherAllPorts.QuoteDimId,\n\tEXP_GatherAllPorts.QuoteCounter,\n\tEXP_GatherAllPorts.CustomerCounter,\n\tEXP_GatherAllPorts.EstimatedQuotePremium,\n\tEXP_GatherAllPorts.ClosedQuoteDimId,\n\t-- *INF*: IIF(ISNULL(lkp_FirstReleasedQuote),'0','1')\n\tIFF(lkp_FirstReleasedQuote IS NULL, '0', '1') AS FirstReleasedQuoteFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId\n\tFROM EXP_GatherAllPorts\n\tLEFT JOIN LKP_FirstBound\n\tON LKP_FirstBound.StatusDate = EXP_GatherAllPorts.StatusDate AND LKP_FirstBound.QuoteKey = EXP_GatherAllPorts.QuoteKey\n\tLEFT JOIN LKP_FirstReleaseQuote\n\tON LKP_FirstReleaseQuote.StatusDate = EXP_GatherAllPorts.StatusDate AND LKP_FirstReleaseQuote.QuoteKey = EXP_GatherAllPorts.QuoteKey\n\tLEFT JOIN LKP_QuoteTransactionFact\n\tON LKP_QuoteTransactionFact.EDWQuotePKId = EXP_GatherAllPorts.QuoteId AND LKP_QuoteTransactionFact.EDWQuoteTransactionPKId = EXP_GatherAllPorts.QuoteTransactionId\n),\nRTR_InsertUPdate AS (\n\tSELECT\n\tInsertUpdate,\n\tQuoteTransactionFactId,\n\tEDWQuotePKId,\n\tEDWQuoteTransactionPKId,\n\tCurrentSnapshotFlag,\n\tFirstBoundFlag,\n\tQuoteStatusDateID,\n\tQuoteCreatedDateID,\n\tQuoteEffectiveDateID,\n\tQuoteStatusDimID,\n\tRiskStateDimID,\n\tPartyDimID,\n\tAgencyDimID,\n\tAgencyEmployeeDimID,\n\tUnderwritingDivisionDimID,\n\tProgramDimId,\n\tDeclinedQuoteDimId,\n\tBusinessClassDimId,\n\tInsuranceReferenceDimId,\n\tExternalQuoteIndicator,\n\tQuoteTransactionPremium,\n\tRiskGrade,\n\tQuoteDimId,\n\to_AuditId AS AuditId,\n\tQuoteCounter,\n\tCustomerCounter,\n\tFirstReleasedQuoteFlag,\n\tEstimatedQuotePremium,\n\tClosedQuoteDimId\n\tFROM EXP_InsertUpdate\n),\nRTR_InsertUPdate_Insert AS (SELECT * FROM RTR_InsertUPdate WHERE InsertUpdate = 'Insert'),\nRTR_InsertUPdate_Delete AS (SELECT * FROM RTR_InsertUPdate WHERE InsertUpdate = 'Delete'),\nUPD_QuoteTransactionFact_Delete AS (\n\tSELECT\n\tQuoteTransactionFactId\n\tFROM RTR_InsertUPdate_Delete\n),\nTGT_QuoteTransactionFact_Delete AS (\n\tDELETE FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteTransactionFact\n\tWHERE (QuoteTransactionFactId) IN (SELECT  QUOTETRANSACTIONFACTID FROM UPD_QuoteTransactionFact_Delete)\n),\nUPD_QuoteTransactionFact_Insert AS (\n\tSELECT\n\tEDWQuotePKId, \n\tEDWQuoteTransactionPKId, \n\tCurrentSnapshotFlag, \n\tFirstBoundFlag, \n\tQuoteStatusDateID, \n\tQuoteCreatedDateID, \n\tQuoteEffectiveDateID, \n\tQuoteStatusDimID, \n\tRiskStateDimID, \n\tPartyDimID, \n\tAgencyDimID, \n\tAgencyEmployeeDimID, \n\tUnderwritingDivisionDimID, \n\tProgramDimId, \n\tDeclinedQuoteDimId, \n\tBusinessClassDimId, \n\tInsuranceReferenceDimId, \n\tExternalQuoteIndicator, \n\tQuoteTransactionPremium, \n\tAuditId, \n\tRiskGrade, \n\tQuoteDimId, \n\tQuoteCounter, \n\tCustomerCounter, \n\tFirstReleasedQuoteFlag, \n\tEstimatedQuotePremium, \n\tClosedQuoteDimId\n\tFROM RTR_InsertUPdate_Insert\n),\nTGT_QuoteTransactionFact_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteTransactionFact\n\t(EDWQuotePKId, EDWQuoteTransactionPKId, CurrentSnapshotFlag, FirstBoundFlag, QuoteStatusDateId, QuoteCreatedDateId, QuoteEffectiveDateId, QuoteStatusDimId, RiskStateDimId, PartyDimId, AgencyDimId, AgencyEmployeeDimId, UnderwritingDivisionDimId, ProgramDimId, DeclinedQuoteDimId, BusinessClassDimId, InsuranceReferenceDimId, ExternalQuoteIndicator, QuoteTransactionPremium, AuditId, RiskGradeCode, QuoteDimId, QuoteCounter, CustomerCounter, FirstReleasedQuoteFlag, EstimatedQuotePremium, ClosedQuoteDimId)\n\tSELECT \n\tEDWQUOTEPKID, \n\tEDWQUOTETRANSACTIONPKID, \n\tCURRENTSNAPSHOTFLAG, \n\tFIRSTBOUNDFLAG, \n\tQuoteStatusDateID AS QUOTESTATUSDATEID, \n\tQuoteCreatedDateID AS QUOTECREATEDDATEID, \n\tQuoteEffectiveDateID AS QUOTEEFFECTIVEDATEID, \n\tQuoteStatusDimID AS QUOTESTATUSDIMID, \n\tRiskStateDimID AS RISKSTATEDIMID, \n\tPartyDimID AS PARTYDIMID, \n\tAgencyDimID AS AGENCYDIMID, \n\tAgencyEmployeeDimID AS AGENCYEMPLOYEEDIMID, \n\tUnderwritingDivisionDimID AS UNDERWRITINGDIVISIONDIMID, \n\tPROGRAMDIMID, \n\tDECLINEDQUOTEDIMID, \n\tBUSINESSCLASSDIMID, \n\tINSURANCEREFERENCEDIMID, \n\tEXTERNALQUOTEINDICATOR, \n\tQUOTETRANSACTIONPREMIUM, \n\tAUDITID, \n\tRiskGrade AS RISKGRADECODE, \n\tQUOTEDIMID, \n\tQUOTECOUNTER, \n\tCUSTOMERCOUNTER, \n\tFIRSTRELEASEDQUOTEFLAG, \n\tESTIMATEDQUOTEPREMIUM, \n\tCLOSEDQUOTEDIMID\n\tFROM UPD_QuoteTransactionFact_Insert\n\n\t------------ POST SQL ----------\n\tUpdate a set a.CurrentSnapshotFlag=b.CurrentSnapshotFlag\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteTransactionFact a\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote b\r\n\ton a.EDWQuotePKId=b.QuoteId\r\n\tand a.CurrentSnapshotFlag<>b.CurrentSnapshotFlag\n\t-------------------------------\n\n\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246496"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905496"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603419"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:46:53"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:06:25"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Data_Mart"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Quote DataMart/"
        },
        "annotations": []
    }
}