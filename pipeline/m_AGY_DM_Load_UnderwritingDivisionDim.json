{
    "name": "m_AGY_DM_Load_UnderwritingDivisionDim",
    "properties": {
        "activities": [
            {
                "name": "m_AGY_DM_Load_UnderwritingDivisionDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_UnderwritingAssociate AS (\n\tSELECT\n\t\tUnderwritingAssociateID,\n\t\tCurrentSnapshotFlag,\n\t\tUnderwritingAssociateAKID,\n\t\tUnderwritingManagerAKID,\n\t\tWestBendAssociateID,\n\t\tAssociateRole,\n\t\tUnderwriterCode,\n\t\tDisplayName,\n\t\tLastName,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tSuffix,\n\t\tEmailAddress\n\tFROM UnderwritingAssociate\n\tWHERE CurrentSnapshotFlag = 1\n),\nLKP_UWManager AS (\n\tSELECT\n\tUnderwritingManagerID,\n\tWestBendAssociateID,\n\tUnderwriterManagerCode,\n\tDisplayName,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tSuffix,\n\tEmailAddress,\n\tUnderwritingManagerAKID\n\tFROM (\n\t\tSELECT \n\t\t\tUnderwritingManagerID,\n\t\t\tWestBendAssociateID,\n\t\t\tUnderwriterManagerCode,\n\t\t\tDisplayName,\n\t\t\tLastName,\n\t\t\tFirstName,\n\t\t\tMiddleName,\n\t\t\tSuffix,\n\t\t\tEmailAddress,\n\t\t\tUnderwritingManagerAKID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.UnderwritingManager\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UnderwritingManagerAKID ORDER BY UnderwritingManagerID) = 1\n),\nLKP_UnderwritingRegion AS (\n\tSELECT\n\tUnderwritingRegionID,\n\tUnderwritingRegionAKID,\n\tUnderwritingRegionCode,\n\tUnderwritingRegionCodeDescription,\n\tUnderwritingManagerAKID\n\tFROM (\n\t\tSELECT \n\t\t\tUnderwritingRegionID,\n\t\t\tUnderwritingRegionAKID,\n\t\t\tUnderwritingRegionCode,\n\t\t\tUnderwritingRegionCodeDescription,\n\t\t\tUnderwritingManagerAKID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.UnderwritingRegion\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UnderwritingManagerAKID ORDER BY UnderwritingRegionID) = 1\n),\nEXP_CleanupUWDivisionDetails AS (\n\tSELECT\n\tLKP_UWManager.UnderwritingManagerID AS lkp_UnderwritingManagerPKID,\n\tLKP_UWManager.WestBendAssociateID AS lkp_UnderwriterManagerWestBendAssociateID,\n\tLKP_UWManager.UnderwriterManagerCode AS lkp_UnderwriterManagerCode,\n\tLKP_UWManager.DisplayName AS lkp_UnderwriterManagerDisplayName,\n\tLKP_UWManager.LastName AS lkp_UnderwriterManagerLastName,\n\tLKP_UWManager.FirstName AS lkp_UnderwriterManagerFirstName,\n\tLKP_UWManager.MiddleName AS lkp_UnderwriterManagerMiddleName,\n\tLKP_UWManager.Suffix AS lkp_UnderwriterManagerSuffix,\n\tLKP_UWManager.EmailAddress AS lkp_UnderwriterManagerEmailAddress,\n\tLKP_UnderwritingRegion.UnderwritingRegionID AS lkp_UnderwritingRegionPKID,\n\tLKP_UnderwritingRegion.UnderwritingRegionAKID AS lkp_UnderwritingRegionAKID,\n\tLKP_UnderwritingRegion.UnderwritingRegionCode AS lkp_UnderwritingRegionCode,\n\tLKP_UnderwritingRegion.UnderwritingRegionCodeDescription AS lkp_UnderwritingRegionCodeDescription,\n\tSQ_UnderwritingAssociate.UnderwritingAssociateID AS i_UnderwritingAssociatePKID,\n\tSQ_UnderwritingAssociate.CurrentSnapshotFlag AS i_CurrentSnapshotFlag,\n\tSQ_UnderwritingAssociate.UnderwritingAssociateAKID AS i_UnderwritingAssociateAKID,\n\tSQ_UnderwritingAssociate.UnderwritingManagerAKID AS i_UnderwritingManagerAKID,\n\tSQ_UnderwritingAssociate.WestBendAssociateID AS i_UnderwriterWestBendAssociateID,\n\tSQ_UnderwritingAssociate.AssociateRole AS i_UnderwriterAssociateRole,\n\tSQ_UnderwritingAssociate.UnderwriterCode AS i_UnderwriterCode,\n\tSQ_UnderwritingAssociate.DisplayName AS i_UnderwriterDisplayName,\n\tSQ_UnderwritingAssociate.LastName AS i_UnderwriterLastName,\n\tSQ_UnderwritingAssociate.FirstName AS i_UnderwriterFirstName,\n\tSQ_UnderwritingAssociate.MiddleName AS i_UnderwriterMiddleName,\n\tSQ_UnderwritingAssociate.Suffix AS i_UnderwriterSuffix,\n\tSQ_UnderwritingAssociate.EmailAddress AS i_UnderwriterEmailAddress,\n\ti_UnderwritingAssociatePKID AS o_UnderwritingAssociatePKID,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingManagerPKID), -1,lkp_UnderwritingManagerPKID)\n\tIFF(lkp_UnderwritingManagerPKID IS NULL, - 1, lkp_UnderwritingManagerPKID) AS o_UnderwritingManagerPKID,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingRegionPKID)  OR  i_UnderwritingManagerAKID = -1, -1, lkp_UnderwritingRegionPKID)\n\tIFF(lkp_UnderwritingRegionPKID IS NULL OR i_UnderwritingManagerAKID = - 1, - 1, lkp_UnderwritingRegionPKID) AS o_UnderwritingRegionPKID,\n\ti_UnderwritingAssociateAKID AS o_UnderwritingAssociateAKID,\n\ti_UnderwritingManagerAKID AS o_UnderwritingManagerAKID,\n\t-- *INF*: IIF(ISNULL( lkp_UnderwritingRegionAKID)  OR  i_UnderwritingManagerAKID = -1, -1, lkp_UnderwritingRegionAKID)\n\tIFF(lkp_UnderwritingRegionAKID IS NULL OR i_UnderwritingManagerAKID = - 1, - 1, lkp_UnderwritingRegionAKID) AS o_UnderwritingRegionAKID,\n\ti_UnderwriterWestBendAssociateID AS o_UnderwriterWestBendAssociateID,\n\ti_UnderwriterCode AS o_UnderwriterCode,\n\ti_UnderwriterDisplayName AS o_UnderwriterDisplayName,\n\ti_UnderwriterLastName AS o_UnderwriterLastName,\n\ti_UnderwriterFirstName AS o_UnderwriterFirstName,\n\ti_UnderwriterMiddleName AS o_UnderwriterMiddleName,\n\ti_UnderwriterSuffix AS o_UnderwriterSuffix,\n\ti_UnderwriterEmailAddress AS o_UnderwriterEmailAddress,\n\ti_UnderwriterAssociateRole AS o_UnderwriterAssociateRole,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerWestBendAssociateID  ), 'N/A', lkp_UnderwriterManagerWestBendAssociateID  )\n\tIFF(lkp_UnderwriterManagerWestBendAssociateID IS NULL, 'N/A', lkp_UnderwriterManagerWestBendAssociateID) AS o_UnderwriterManagerWestBendAssociateID,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerCode  ), 'N/A', lkp_UnderwriterManagerCode  )\n\tIFF(lkp_UnderwriterManagerCode IS NULL, 'N/A', lkp_UnderwriterManagerCode) AS o_UnderwriterManagerCode,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerDisplayName ), 'N/A', lkp_UnderwriterManagerDisplayName )\n\tIFF(lkp_UnderwriterManagerDisplayName IS NULL, 'N/A', lkp_UnderwriterManagerDisplayName) AS o_UnderwriterManagerDisplayName,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerLastName), 'N/A', lkp_UnderwriterManagerLastName)\n\tIFF(lkp_UnderwriterManagerLastName IS NULL, 'N/A', lkp_UnderwriterManagerLastName) AS o_UnderwriterManagerLastName,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerFirstName), 'N/A', lkp_UnderwriterManagerFirstName)\n\tIFF(lkp_UnderwriterManagerFirstName IS NULL, 'N/A', lkp_UnderwriterManagerFirstName) AS o_UnderwriterManagerFirstName,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerMiddleName), 'N/A', lkp_UnderwriterManagerMiddleName)\n\tIFF(lkp_UnderwriterManagerMiddleName IS NULL, 'N/A', lkp_UnderwriterManagerMiddleName) AS o_UnderwriterManagerMiddleName,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerSuffix), 'N/A', lkp_UnderwriterManagerSuffix)\n\tIFF(lkp_UnderwriterManagerSuffix IS NULL, 'N/A', lkp_UnderwriterManagerSuffix) AS o_UnderwriterManagerSuffix,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwriterManagerEmailAddress), 'N/A', lkp_UnderwriterManagerEmailAddress )\n\tIFF(lkp_UnderwriterManagerEmailAddress IS NULL, 'N/A', lkp_UnderwriterManagerEmailAddress) AS o_UnderwriterManagerEmailAddress,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingRegionCode)  OR  i_UnderwritingManagerAKID = -1, 'N/A', lkp_UnderwritingRegionCode)\n\tIFF(lkp_UnderwritingRegionCode IS NULL OR i_UnderwritingManagerAKID = - 1, 'N/A', lkp_UnderwritingRegionCode) AS o_UnderwritingRegionCode,\n\t-- *INF*: IIF(ISNULL(lkp_UnderwritingRegionCodeDescription)  OR  i_UnderwritingManagerAKID = -1, 'N/A', lkp_UnderwritingRegionCodeDescription)\n\tIFF(lkp_UnderwritingRegionCodeDescription IS NULL OR i_UnderwritingManagerAKID = - 1, 'N/A', lkp_UnderwritingRegionCodeDescription) AS o_UnderwritingRegionCodeDescription\n\tFROM SQ_UnderwritingAssociate\n\tLEFT JOIN LKP_UWManager\n\tON LKP_UWManager.UnderwritingManagerAKID = SQ_UnderwritingAssociate.UnderwritingManagerAKID\n\tLEFT JOIN LKP_UnderwritingRegion\n\tON LKP_UnderwritingRegion.UnderwritingManagerAKID = SQ_UnderwritingAssociate.UnderwritingManagerAKID\n),\nLKP_Existing AS (\n\tSELECT\n\tUnderwritingDivisionDimID,\n\tUnderwritingDivisionDimHashKey,\n\tEDWUnderwritingAssociatePKID,\n\tEDWUnderwritingManagerPKID,\n\tEDWUnderwritingRegionPKID,\n\tEDWUnderwritingAssociateAKID\n\tFROM (\n\t\tSELECT \n\t\t\tUnderwritingDivisionDimID,\n\t\t\tUnderwritingDivisionDimHashKey,\n\t\t\tEDWUnderwritingAssociatePKID,\n\t\t\tEDWUnderwritingManagerPKID,\n\t\t\tEDWUnderwritingRegionPKID,\n\t\t\tEDWUnderwritingAssociateAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.UnderwritingDivisionDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWUnderwritingAssociateAKID ORDER BY UnderwritingDivisionDimID) = 1\n),\nEXP_CheckForChange AS (\n\tSELECT\n\tLKP_Existing.UnderwritingDivisionDimID AS lkp_ExistingUnderwritingDivisionDimID,\n\tLKP_Existing.UnderwritingDivisionDimHashKey AS lkp_ExistingHashKey,\n\tLKP_Existing.EDWUnderwritingAssociatePKID AS lkp_EDWUnderwritingAssociatePKID,\n\tLKP_Existing.EDWUnderwritingManagerPKID AS lkp_EDWUnderwritingManagerPKID,\n\tLKP_Existing.EDWUnderwritingRegionPKID AS lkp_EDWUnderwritingRegionPKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingAssociatePKID AS i_UnderwritingAssociatePKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingManagerPKID AS i_UnderwritingManagerPKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingRegionPKID AS i_UnderwritingRegionPKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingAssociateAKID AS i_UnderwritingAssociateAKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingManagerAKID AS i_UnderwritingManagerAKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingRegionAKID AS i_UnderwritingRegionAKID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterWestBendAssociateID AS i_UnderwriterWestBendAssociateID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterCode AS i_UnderwriterCode,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterDisplayName AS i_UnderwriterDisplayName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterLastName AS i_UnderwriterLastName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterFirstName AS i_UnderwriterFirstName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterMiddleName AS i_UnderwriterMiddleName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterSuffix AS i_UnderwriterSuffix,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterEmailAddress AS i_UnderwriterEmailAddress,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterAssociateRole AS i_UnderwriterAssociateRole,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerWestBendAssociateID AS i_UnderwriterManagerWestBendAssociateID,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerCode AS i_UnderwriterManagerCode,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerDisplayName AS i_UnderwriterManagerDisplayName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerLastName AS i_UnderwriterManagerLastName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerFirstName AS i_UnderwriterManagerFirstName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerMiddleName AS i_UnderwriterManagerMiddleName,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerSuffix AS i_UnderwriterManagerSuffix,\n\tEXP_CleanupUWDivisionDetails.o_UnderwriterManagerEmailAddress AS i_UnderwriterManagerEmailAddress,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingRegionCode AS i_UnderwritingRegionCode,\n\tEXP_CleanupUWDivisionDetails.o_UnderwritingRegionCodeDescription AS i_UnderwritingRegionCodeDescription,\n\t-- *INF*: MD5(i_UnderwriterCode || '&' || TO_CHAR(i_UnderwriterWestBendAssociateID)|| '&' || i_UnderwriterAssociateRole|| '&' || TO_CHAR(  i_UnderwriterManagerWestBendAssociateID)|| '&' || i_UnderwriterManagerCode|| '&' || i_UnderwritingRegionCode)\n\tMD5(i_UnderwriterCode || '&' || TO_CHAR(i_UnderwriterWestBendAssociateID) || '&' || i_UnderwriterAssociateRole || '&' || TO_CHAR(i_UnderwriterManagerWestBendAssociateID) || '&' || i_UnderwriterManagerCode || '&' || i_UnderwritingRegionCode) AS v_New_HashKey,\n\t-- *INF*: DECODE(true,\r\n\t-- lkp_EDWUnderwritingAssociatePKID <> i_UnderwritingAssociatePKID, 'Y',\r\n\t-- lkp_EDWUnderwritingManagerPKID <> i_UnderwritingManagerPKID, 'Y',\r\n\t-- lkp_EDWUnderwritingRegionPKID <> i_UnderwritingRegionPKID, 'Y',\r\n\t-- 'N')\n\tDECODE(true,\n\tlkp_EDWUnderwritingAssociatePKID <> i_UnderwritingAssociatePKID, 'Y',\n\tlkp_EDWUnderwritingManagerPKID <> i_UnderwritingManagerPKID, 'Y',\n\tlkp_EDWUnderwritingRegionPKID <> i_UnderwritingRegionPKID, 'Y',\n\t'N') AS v_ChangeToEDWRecord,\n\t-- *INF*: DECODE(true,\r\n\t-- ISNULL(lkp_ExistingHashKey), 'Insert',\r\n\t-- (lkp_ExistingHashKey = v_New_HashKey) and (v_ChangeToEDWRecord = 'N'), 'Ignore',\r\n\t-- (lkp_ExistingHashKey <> v_New_HashKey) or (v_ChangeToEDWRecord = 'Y'), 'Update',\r\n\t-- 'Ignore')\r\n\t-- \r\n\t-- -- If the existing record is not found based on the AKID, it's always an insert\r\n\t-- -- If there are no changes, we ignore the record\r\n\t-- -- If one of the type 2 attributes changed, we expire the old record (also inserts a new record, see router)\r\n\t-- -- If there was no change to the type 2 attributes AND there was a change to the PKID in the EDW then we update the record.  Important to have the logic comparing the hash keys, otherwise we might attempt to update records where we are already expiring and inserting a new record.\r\n\t-- \t\n\tDECODE(true,\n\tlkp_ExistingHashKey IS NULL, 'Insert',\n\t( lkp_ExistingHashKey = v_New_HashKey ) AND ( v_ChangeToEDWRecord = 'N' ), 'Ignore',\n\t( lkp_ExistingHashKey <> v_New_HashKey ) OR ( v_ChangeToEDWRecord = 'Y' ), 'Update',\n\t'Ignore') AS v_InsertUpdateOrIgnore,\n\tlkp_ExistingUnderwritingDivisionDimID AS o_ExistingUnderwritingDivisionDimID,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 01:00:00.000', 'YYYY-MM-DD HH24:MI:SS.MS')\r\n\t-- \n\tTO_DATE('1800-01-01 01:00:00.000', 'YYYY-MM-DD HH24:MI:SS.MS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.MS')\r\n\t-- \n\tTO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.MS') AS o_ExpirationDate,\n\tSYSDATE AS o_CurrentDate,\n\tv_New_HashKey AS o_New_HashKey,\n\tv_InsertUpdateOrIgnore AS o_InsertUpdateOrIgnore\n\tFROM EXP_CleanupUWDivisionDetails\n\tLEFT JOIN LKP_Existing\n\tON LKP_Existing.EDWUnderwritingAssociateAKID = EXP_CleanupUWDivisionDetails.o_UnderwritingAssociateAKID\n),\nRTR_InsertUpdateOrExpire AS (\n\tSELECT\n\tlkp_ExistingUnderwritingDivisionDimID AS existingUnderwritingDivisionDimID,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_CurrentDate AS CurrentDate,\n\to_New_HashKey AS UnderwritingDivisionDimHashKey,\n\ti_UnderwritingAssociatePKID AS EDWUnderwritingAssociatePKID,\n\ti_UnderwritingManagerPKID AS EDWUnderwritingManagerPKID,\n\ti_UnderwritingRegionPKID AS EDWUnderwritingRegionPKID,\n\ti_UnderwritingAssociateAKID AS EDWUnderwritingAssociateAKID,\n\ti_UnderwritingManagerAKID AS EDWUnderwritingManagerAKID,\n\ti_UnderwritingRegionAKID AS EDWUnderwritingRegionAKID,\n\ti_UnderwriterWestBendAssociateID AS UnderwriterWestBendAssociateID,\n\ti_UnderwriterCode AS UnderwriterCode,\n\ti_UnderwriterDisplayName AS UnderwriterDisplayName,\n\ti_UnderwriterLastName AS UnderwriterLastName,\n\ti_UnderwriterFirstName AS UnderwriterFirstName,\n\ti_UnderwriterMiddleName AS UnderwriterMiddleName,\n\ti_UnderwriterSuffix AS UnderwriterSuffix,\n\ti_UnderwriterEmailAddress AS UnderwriterEmailAddress,\n\ti_UnderwriterAssociateRole AS AssociateRole,\n\ti_UnderwriterManagerWestBendAssociateID AS UnderwriterManagerWestBendAssociateID,\n\ti_UnderwriterManagerCode AS UnderwriterManagerCode,\n\ti_UnderwriterManagerDisplayName AS UnderwriterManagerDisplayName,\n\ti_UnderwriterManagerLastName AS UnderwriterManagerLastName,\n\ti_UnderwriterManagerFirstName AS UnderwriterManagerFirstName,\n\ti_UnderwriterManagerMiddleName AS UnderwriterManagerMiddleName,\n\ti_UnderwriterManagerSuffix AS UnderwriterManagerSuffix,\n\ti_UnderwriterManagerEmailAddress AS UnderwriterManagerEmailAddress,\n\ti_UnderwritingRegionCode AS UnderwritingRegionCode,\n\ti_UnderwritingRegionCodeDescription AS UnderwritingRegionCodeDescription,\n\to_InsertUpdateOrIgnore AS InsertUpdateOrIgnore\n\tFROM EXP_CheckForChange\n),\nRTR_InsertUpdateOrExpire_Insert AS (SELECT * FROM RTR_InsertUpdateOrExpire WHERE InsertUpdateOrIgnore = 'Insert'),\nRTR_InsertUpdateOrExpire_Update AS (SELECT * FROM RTR_InsertUpdateOrExpire WHERE InsertUpdateOrIgnore = 'Update'),\nUPD_UpdateExisting AS (\n\tSELECT\n\texistingUnderwritingDivisionDimID AS UnderwritingDivisionDimID, \n\tCurrentDate, \n\tUnderwritingDivisionDimHashKey, \n\tEDWUnderwritingAssociatePKID, \n\tEDWUnderwritingManagerPKID, \n\tEDWUnderwritingRegionPKID, \n\tEDWUnderwritingAssociateAKID, \n\tEDWUnderwritingManagerAKID, \n\tEDWUnderwritingRegionAKID, \n\tUnderwriterWestBendAssociateID, \n\tUnderwriterCode, \n\tUnderwriterDisplayName, \n\tUnderwriterLastName, \n\tUnderwriterFirstName, \n\tUnderwriterMiddleName, \n\tUnderwriterSuffix, \n\tUnderwriterEmailAddress, \n\tAssociateRole, \n\tUnderwriterManagerWestBendAssociateID, \n\tUnderwriterManagerCode, \n\tUnderwriterManagerDisplayName, \n\tUnderwriterManagerLastName, \n\tUnderwriterManagerFirstName, \n\tUnderwriterManagerMiddleName, \n\tUnderwriterManagerSuffix, \n\tUnderwriterManagerEmailAddress, \n\tUnderwritingRegionCode, \n\tUnderwritingRegionCodeDescription\n\tFROM RTR_InsertUpdateOrExpire_Update\n),\nTGT_UnderwritingDivisionDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.UnderwritingDivisionDim AS T\n\tUSING UPD_UpdateExisting AS S\n\tON T.UnderwritingDivisionDimID = S.UnderwritingDivisionDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.CurrentDate, T.UnderwritingDivisionDimHashKey = S.UnderwritingDivisionDimHashKey, T.EDWUnderwritingAssociatePKID = S.EDWUnderwritingAssociatePKID, T.EDWUnderwritingManagerPKID = S.EDWUnderwritingManagerPKID, T.EDWUnderwritingRegionPKID = S.EDWUnderwritingRegionPKID, T.EDWUnderwritingAssociateAKID = S.EDWUnderwritingAssociateAKID, T.EDWUnderwritingManagerAKID = S.EDWUnderwritingManagerAKID, T.EDWUnderwritingRegionAKID = S.EDWUnderwritingRegionAKID, T.UnderwriterWestBendAssociateID = S.UnderwriterWestBendAssociateID, T.UnderwriterCode = S.UnderwriterCode, T.UnderwriterDisplayName = S.UnderwriterDisplayName, T.UnderwriterLastName = S.UnderwriterLastName, T.UnderwriterFirstName = S.UnderwriterFirstName, T.UnderwriterMiddleName = S.UnderwriterMiddleName, T.UnderwriterSuffix = S.UnderwriterSuffix, T.UnderwriterEmailAddress = S.UnderwriterEmailAddress, T.AssociateRole = S.AssociateRole, T.UnderwriterManagerWestBendAssociateID = S.UnderwriterManagerWestBendAssociateID, T.UnderwriterManagerCode = S.UnderwriterManagerCode, T.UnderwriterManagerDisplayName = S.UnderwriterManagerDisplayName, T.UnderwriterManagerLastName = S.UnderwriterManagerLastName, T.UnderwriterManagerFirstName = S.UnderwriterManagerFirstName, T.UnderwriterManagerMiddleName = S.UnderwriterManagerMiddleName, T.UnderwriterManagerSuffix = S.UnderwriterManagerSuffix, T.UnderwriterManagerEmailAddress = S.UnderwriterManagerEmailAddress, T.UnderwritingRegionCode = S.UnderwritingRegionCode, T.UnderwritingRegionCodeDescription = S.UnderwritingRegionCodeDescription\n),\nUPD_InsertNew AS (\n\tSELECT\n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCurrentDate, \n\tUnderwritingDivisionDimHashKey, \n\tEDWUnderwritingAssociatePKID, \n\tEDWUnderwritingManagerPKID, \n\tEDWUnderwritingRegionPKID, \n\tEDWUnderwritingAssociateAKID, \n\tEDWUnderwritingManagerAKID, \n\tEDWUnderwritingRegionAKID, \n\tUnderwriterWestBendAssociateID, \n\tUnderwriterCode, \n\tUnderwriterDisplayName, \n\tUnderwriterLastName, \n\tUnderwriterFirstName, \n\tUnderwriterMiddleName, \n\tUnderwriterSuffix, \n\tUnderwriterEmailAddress, \n\tAssociateRole, \n\tUnderwriterManagerWestBendAssociateID, \n\tUnderwriterManagerCode, \n\tUnderwriterManagerDisplayName, \n\tUnderwriterManagerLastName, \n\tUnderwriterManagerFirstName, \n\tUnderwriterManagerMiddleName, \n\tUnderwriterManagerSuffix, \n\tUnderwriterManagerEmailAddress, \n\tUnderwritingRegionCode, \n\tUnderwritingRegionCodeDescription\n\tFROM RTR_InsertUpdateOrExpire_Insert\n),\nTGT_UnderwritingDivisionDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.UnderwritingDivisionDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, UnderwritingDivisionDimHashKey, EDWUnderwritingAssociatePKID, EDWUnderwritingManagerPKID, EDWUnderwritingRegionPKID, EDWUnderwritingAssociateAKID, EDWUnderwritingManagerAKID, EDWUnderwritingRegionAKID, UnderwriterWestBendAssociateID, UnderwriterCode, UnderwriterDisplayName, UnderwriterLastName, UnderwriterFirstName, UnderwriterMiddleName, UnderwriterSuffix, UnderwriterEmailAddress, AssociateRole, UnderwriterManagerWestBendAssociateID, UnderwriterManagerCode, UnderwriterManagerDisplayName, UnderwriterManagerLastName, UnderwriterManagerFirstName, UnderwriterManagerMiddleName, UnderwriterManagerSuffix, UnderwriterManagerEmailAddress, UnderwritingRegionCode, UnderwritingRegionCodeDescription)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCurrentDate AS CREATEDDATE, \n\tCurrentDate AS MODIFIEDDATE, \n\tUNDERWRITINGDIVISIONDIMHASHKEY, \n\tEDWUNDERWRITINGASSOCIATEPKID, \n\tEDWUNDERWRITINGMANAGERPKID, \n\tEDWUNDERWRITINGREGIONPKID, \n\tEDWUNDERWRITINGASSOCIATEAKID, \n\tEDWUNDERWRITINGMANAGERAKID, \n\tEDWUNDERWRITINGREGIONAKID, \n\tUNDERWRITERWESTBENDASSOCIATEID, \n\tUNDERWRITERCODE, \n\tUNDERWRITERDISPLAYNAME, \n\tUNDERWRITERLASTNAME, \n\tUNDERWRITERFIRSTNAME, \n\tUNDERWRITERMIDDLENAME, \n\tUNDERWRITERSUFFIX, \n\tUNDERWRITEREMAILADDRESS, \n\tASSOCIATEROLE, \n\tUNDERWRITERMANAGERWESTBENDASSOCIATEID, \n\tUNDERWRITERMANAGERCODE, \n\tUNDERWRITERMANAGERDISPLAYNAME, \n\tUNDERWRITERMANAGERLASTNAME, \n\tUNDERWRITERMANAGERFIRSTNAME, \n\tUNDERWRITERMANAGERMIDDLENAME, \n\tUNDERWRITERMANAGERSUFFIX, \n\tUNDERWRITERMANAGEREMAILADDRESS, \n\tUNDERWRITINGREGIONCODE, \n\tUNDERWRITINGREGIONCODEDESCRIPTION\n\tFROM UPD_InsertNew\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246490"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905471"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603201"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:20:50"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:20:23"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCESYSTEMID": {
                "type": "string",
                "defaultValue": "AgencyODS"
            }
        },
        "folder": {
            "name": "Agency DataMart/"
        },
        "annotations": []
    }
}