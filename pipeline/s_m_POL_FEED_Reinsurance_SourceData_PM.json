{
    "name": "s_m_POL_FEED_Reinsurance_SourceData_PM",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Reinsurance_SourceData_PM",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Existing_PolicyCovers AS (\n\tSELECT\n\tASLCoversKey\n\tFROM (\n\t\tselect A.ASLCoversKey as ASLCoversKey\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy A\r\n\t\tinner join\r\n\t\t(\r\n\t\tselect PolicyKey,max(case when DocumntType='N' then SourceSequenceNumber else 0 end) max_SourceSequenceNumber\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\tgroup by PolicyKey) B\r\n\t\ton A.PolicyKey=B.PolicyKey\r\n\t\tand A.SourceSequenceNumber>B.max_SourceSequenceNumber\r\n\t\tgroup by A.ASLCoversKey\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ASLCoversKey ORDER BY ASLCoversKey DESC) = 1\n),\nLKP_TransCode AS (\n\tSELECT\n\tTargetAttributeValue,\n\tSourceAttributeValue\n\tFROM (\n\t\tselect SourceAttributeValue as SourceAttributeValue,\r\n\t\tTargetAttributeValue as TargetAttributeValue from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceLookup\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SourceAttributeValue ORDER BY TargetAttributeValue DESC) = 1\n),\nLKP_SupReinsuranceUmbrellaLayer AS (\n\tSELECT\n\tReinsuranceUmbrellaLayer,\n\tStrategicProfitCenterAbbreviation,\n\tSourceUmbrellaLayerStart,\n\tSourceUmbrellaLayerEnd,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tReinsuranceUmbrellaLayer,\n\t\t\tStrategicProfitCenterAbbreviation,\n\t\t\tSourceUmbrellaLayerStart,\n\t\t\tSourceUmbrellaLayerEnd,\n\t\t\tEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM SapiensReinsuranceUmbrellaLayer\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAbbreviation,SourceUmbrellaLayerStart,SourceUmbrellaLayerEnd,EffectiveDate,ExpirationDate ORDER BY ReinsuranceUmbrellaLayer DESC) = 1\n),\nLKP_Tgt AS (\n\tSELECT\n\tOutPut,\n\tASLCoversKey\n\tFROM (\n\t\tselect A.ASLCoversKey as ASLCoversKey,\r\n\t\tconvert(varchar,max(case when A.entryprocess='DAILY' then 0 when  A.SourceSequenceNumber<=B.max_SourceSequenceNumber then 0 else A.EndorsementNumber end))+'|'+convert(varchar,max(A.TransactionNumber))+'|' as OutPut\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy A\r\n\t\tinner join\r\n\t\t(\r\n\t\tselect PolicyKey,max(case when DocumntType='N' then SourceSequenceNumber else 0 end) max_SourceSequenceNumber\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\tgroup by PolicyKey) B\r\n\t\ton A.PolicyKey=B.PolicyKey\r\n\t\t--and A.SourceSequenceNumber>B.max_SourceSequenceNumber\r\n\t\tgroup by A.ASLCoversKey\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ASLCoversKey ORDER BY OutPut DESC) = 1\n),\nLKP_Get_Max_Sapiens_SourceSequenceNumber AS (\n\tSELECT\n\tSource_Seq_Num,\n\tID\n\tFROM (\n\t\tSELECT MAX(A.SourceSequenceNumber) AS Source_Seq_Num,\r\n\t\t\t1 AS ID\r\n\t\tFROM (\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaimRestate\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaimRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicyRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicyRestate\t) A\r\n\t\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY Source_Seq_Num DESC) = 1\n),\nSQ_PremiumMasterFact AS (\n\tDeclare @Date1 as datetime,\r\n\t                 @Date2 as datetime\r\n\tSet @Date1=dateadd(dd,-1,dateadd(MM,-@{pipeline().parameters.NO_OF_MONTHS},dateadd(mm,Datediff(mm,0,getdate()),0)))\r\n\tSet @Date2=case when '@{pipeline().parameters.PMSESSIONNAME}' like '%Restate%' or '@{pipeline().parameters.PMSESSIONNAME}' like '%Historical%' then '2001-01-31 00:00:00'  else dateadd(MM,-@{pipeline().parameters.NO_OF_MONTHS}-1,dateadd(mm,Datediff(mm,0,getdate()),0)) end\r\n\t\r\n\tselect Pol_Sym,Pol_key,\r\n\tPremiumTransactionCode,PremiumTypeCode,\r\n\tAccounting_Date,PersonalUmbrellaLayer2Premium,PersonalUmbrellaLayer1Premium,\r\n\tPremiumMasterDirectWrittenPremium,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,\r\n\tCASE \r\n\t\t\tWHEN asl_code = '220' then '220'\r\n\t\t\tELSE CASE WHEN sub_asl_code = 'N/A' THEN NULL ELSE sub_asl_code END\r\n\t\tEND AS SubASLCode,\r\n\tstate_of_domicile_code,\r\n\tEndorsement_Start_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEDWPremiumMasterCalculationPKID,\r\n\tUmbrellaLayer,\r\n\tPolicy_Issue_Date,\r\n\tPolicy_Start_Date,\r\n\tPolicy_End_Date,\r\n\tRatingPlanAbbreviation,\r\n\tName\r\n\tfrom\r\n\t(\r\n\tselect Pol_Sym,Pol_key,\r\n\tPremiumTransactionCode,PremiumTypeCode,\r\n\tAccounting_Date,PersonalUmbrellaLayer2Premium,PersonalUmbrellaLayer1Premium,\r\n\tPremiumMasterDirectWrittenPremium,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,sub_asl_code,state_of_domicile_code,\r\n\tEndorsement_Start_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEDWPremiumMasterCalculationPKID,\r\n\tUmbrellaLayer,\r\n\tmin(Policy_Issue_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code)  Policy_Issue_Date,\r\n\tmin(Policy_Start_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code) Policy_Start_Date,\r\n\tmax(Policy_End_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code) Policy_End_Date,\r\n\tRatingPlanAbbreviation,\r\n\tName\r\n\tfrom \r\n\t(select P.Pol_Sym,P.Pol_key,\r\n\tPTT.PremiumTransactionCode,PTT.PremiumTypeCode,\r\n\tRD.clndr_date Accounting_Date,\r\n\tcase when P.Pol_Sym<>'000' and IRD.StrategicProfitCenterAbbreviation='WB - PL' and IRD.ProductCode='890' then PM.PremiumMasterCededWrittenPremium else 0.0 end PersonalUmbrellaLayer2Premium,\r\n\tcase when P.Pol_Sym<>'000' and IRD.StrategicProfitCenterAbbreviation='WB - PL' and IRD.ProductCode='890' then PM.PremiumMasterDirectWrittenPremium-PM.PremiumMasterCededWrittenPremium else 0.0 end PersonalUmbrellaLayer1Premium,\r\n\tPM.PremiumMasterDirectWrittenPremium,\r\n\tIRD.ProductCode,\r\n\treplace(CASE WHEN IRD.StrategicProfitCenterAbbreviation = 'Argent' THEN 'A' ELSE IRD.StrategicProfitCenterAbbreviation END,' ','') StrategicProfitCenterAbbreviation,IRD.AccountingProductCode,\r\n\tIRD.InsuranceReferenceLineOfBusinessCode,\r\n\tASL.asl_code,\r\n\tCASE \r\n\t\tWHEN ASL.asl_code = '220' then '220'\r\n\t\tELSE CASE WHEN ASL.sub_asl_code = 'N/A' THEN NULL ELSE ASL.sub_asl_code END\r\n\tEND AS sub_asl_code,\r\n\tcase when IRD.InsuranceReferenceLineOfBusinessCode in ('590','812') then RL.StateProvinceCode else P.state_of_domicile_code end state_of_domicile_code,\r\n\tEFD.clndr_date Endorsement_Start_Date,\r\n\tETD.clndr_date Endorsement_Issue_Date,\r\n\tPM.EDWPremiumMasterCalculationPKID,\r\n\tISNULL(CUD.UmbrellaLayer,0) UmbrellaLayer,\r\n\tETD.clndr_date Policy_Issue_Date\r\n\t,EFD.clndr_date Policy_Start_Date\r\n\t,EXD.clndr_date Policy_End_Date,ISNULL(IRD.RatingPlanAbbreviation,'NULL') RatingPlanAbbreviation,ISNULL(CCD.Name,'NULL') Name\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PM\r\n\tinner JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim P\r\n\tON PM.PolicyDimID=P.pol_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionTypeDim PTT\r\n\ton PM.PremiumTransactionTypeDimID=PTT.PremiumTransactionTypeDimID\r\n\tInner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim RD\r\n\ton PM.PremiumMasterRunDateID=RD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim EFD\r\n\ton PM.PremiumMasterCoverageEffectiveDateID=EFD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim ETD\r\n\ton PM.PremiumTransactionEnteredDateID=ETD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim IRD\r\n\ton PM.InsuranceReferenceDimID=IRD.InsuranceReferenceDimId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton PM.AnnualStatementLineDimID=ASL.asl_dim_id\r\n\tLeft join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrellaDim CUD\r\n\ton PM.CoverageDetailDimId=CUD.CoverageDetailDimId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim EXD\r\n\ton PM.PremiumMasterCoverageExpirationDateID=EXD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim CCD\r\n\ton PM.ContractCustomerDimID=CCD.contract_cust_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocationDim RL\r\n\ton PM.RiskLocationDimID=RL.RiskLocationDimID\r\n\t--where (PM.PremiumMasterDirectWrittenPremium<>0.0 or PM.PremiumMasterCededWrittenPremium<>0.0)\r\n\t@{pipeline().parameters.WHERE}\r\n\t) A ) A \r\n\tWhere A.Accounting_Date between @Date2 and @Date1\r\n\tand case when Pol_Sym<>'000' and StrategicProfitCenterAbbreviation='WB-PL' and ProductCode='890' then 1 when PremiumTypeCode='D' then 1 else 0 end=1\r\n\tOrder By  Pol_key,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,\r\n\tsub_asl_code,\r\n\tstate_of_domicile_code,\r\n\tPolicy_Issue_Date,\r\n\tPolicy_Start_Date,\r\n\tPolicy_End_Date,\r\n\tAccounting_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEndorsement_Start_Date,\r\n\tEDWPremiumMasterCalculationPKID\n),\nEXP_Src_DataCollect AS (\n\tSELECT\n\tPol_Sym,\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer2Premium,\n\tPersonalUmbrellaLayer1Premium,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\t-- *INF*: DECODE (TRUE,\r\n\t-- asl_code = '220',sub_asl_code,\r\n\t-- asl_code = '440',sub_asl_code,\r\n\t-- asl_code = '500',sub_asl_code,\r\n\t-- Policy_Start_Date >= TO_DATE('2020-01-01','YYYY-MM-DD'),sub_asl_code,\r\n\t-- pol_key = 'A08302003',sub_asl_code,\r\n\t-- pol_key = 'NSP134447200',sub_asl_code,\r\n\t-- pol_key = 'NAQ196857501',sub_asl_code,\r\n\t-- pol_key = 'A24779000',sub_asl_code,\r\n\t-- NULL)\r\n\t-- --all policies newer than 1/1/2020, asl codes of 220, 440, 500 and the above select policies\n\tDECODE(\n\t    TRUE,\n\t    asl_code = '220', sub_asl_code,\n\t    asl_code = '440', sub_asl_code,\n\t    asl_code = '500', sub_asl_code,\n\t    Policy_Start_Date >= TO_TIMESTAMP('2020-01-01', 'YYYY-MM-DD'), sub_asl_code,\n\t    pol_key = 'A08302003', sub_asl_code,\n\t    pol_key = 'NSP134447200', sub_asl_code,\n\t    pol_key = 'NAQ196857501', sub_asl_code,\n\t    pol_key = 'A24779000', sub_asl_code,\n\t    NULL\n\t) AS o_sub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\t2 AS PersonalUmbrellaLayer2,\n\t1 AS PersonalUmbrellaLayer1,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\t-- *INF*: IIF(Pol_Sym<>'000' and StrategicProfitCenterAbbreviation='WB-PL' and ProductCode='890','Y','N')\n\tIFF(\n\t    Pol_Sym <> '000' and StrategicProfitCenterAbbreviation = 'WB-PL' and ProductCode = '890',\n\t    'Y',\n\t    'N'\n\t) AS Split_Flag\n\tFROM SQ_PremiumMasterFact\n),\nRTR_PLSplit AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer2Premium,\n\tPersonalUmbrellaLayer1Premium,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\to_sub_asl_code AS sub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tPersonalUmbrellaLayer2,\n\tPersonalUmbrellaLayer1,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\tSplit_Flag\n\tFROM EXP_Src_DataCollect\n),\nRTR_PLSplit_PersonalLinesUmbrella AS (SELECT * FROM RTR_PLSplit WHERE Split_Flag='Y'),\nRTR_PLSplit_CommercialLines AS (SELECT * FROM RTR_PLSplit WHERE Split_Flag='N'),\nEXP_CLines_DataCollect AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM RTR_PLSplit_CommercialLines\n),\nEXP_PLines_DataCollect AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer1Premium,\n\tPersonalUmbrellaLayer2Premium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tPersonalUmbrellaLayer AS PersonalUmbrellaLayer1,\n\tPersonalUmbrellaLayer2,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM RTR_PLSplit_PersonalLinesUmbrella\n),\nNRM_Covert_Columns_Rows AS (\n),\nFIL_Drop_Zero_Premiums AS (\n\tSELECT\n\tPol_Key, \n\tPremiumTransactionCode, \n\tPremiumTypeCode, \n\tAccountingDate, \n\tMonthlyDirectWrittenPremium, \n\tProductCode, \n\tStrategicProfitCenterAbbrevation, \n\tAccountingProductCode, \n\tInsuranceReferenceLineCode, \n\tasl_code, \n\tsub_asl_code, \n\tstate_of_domicile_code, \n\tEndorsement_Start_Date, \n\tEndorsement_Issue_Date, \n\tEDWPremiumMasterCalculationPKID, \n\tUmbrellaLayer, \n\tPolicy_Issue_Date, \n\tPolicy_Start_Date, \n\tPolicy_End_Date, \n\tRatingPlanAbbrevation, \n\tname\n\tFROM NRM_Covert_Columns_Rows\n\tWHERE MonthlyDirectWrittenPremium<>0.0\n),\nUN_PLines_CLines AS (\n\tSELECT Pol_Key AS pol_key, PremiumTransactionCode, PremiumTypeCode, AccountingDate AS Accounting_Date, MonthlyDirectWrittenPremium AS MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbrevation AS StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineCode AS InsuranceReferenceLineOfBusinessCode, asl_code, sub_asl_code, state_of_domicile_code, Endorsement_Start_Date, Endorsement_Issue_Date, EDWPremiumMasterCalculationPKID, UmbrellaLayer, Policy_Issue_Date, Policy_Start_Date, Policy_End_Date, RatingPlanAbbrevation AS RatingPlanAbbreviation, name\n\tFROM FIL_Drop_Zero_Premiums\n\tUNION\n\tSELECT pol_key, PremiumTransactionCode, PremiumTypeCode, Accounting_Date, MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineOfBusinessCode, asl_code, sub_asl_code, state_of_domicile_code, Endorsement_Start_Date, Endorsement_Issue_Date, EDWPremiumMasterCalculationPKID, UmbrellaLayer, Policy_Issue_Date, Policy_Start_Date, Policy_End_Date, RatingPlanAbbreviation, name\n\tFROM EXP_CLines_DataCollect\n),\nEXP_Get_Umbrella AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\t-- *INF*: IIF(Endorsement_Start_Date>Policy_End_Date,Policy_End_Date,Endorsement_Start_Date)\n\tIFF(Endorsement_Start_Date > Policy_End_Date, Policy_End_Date, Endorsement_Start_Date) AS O_Endorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\t-- *INF*: IIF(Endorsement_Issue_Date>Policy_End_Date,Policy_End_Date,Endorsement_Issue_Date)\n\tIFF(Endorsement_Issue_Date > Policy_End_Date, Policy_End_Date, Endorsement_Issue_Date) AS O_Endorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SUPREINSURANCEUMBRELLALAYER(StrategicProfitCenterAbbreviation,UmbrellaLayer,Endorsement_Start_Date)),0,:LKP.LKP_SUPREINSURANCEUMBRELLALAYER(StrategicProfitCenterAbbreviation,UmbrellaLayer,Endorsement_Start_Date))\n\tIFF(\n\t    LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date.ReinsuranceUmbrellaLayer IS NULL,\n\t    0,\n\t    LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date.ReinsuranceUmbrellaLayer\n\t) AS ReinsuranceUmbrellaLayer\n\tFROM UN_PLines_CLines\n\tLEFT JOIN LKP_SUPREINSURANCEUMBRELLALAYER LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date\n\tON LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date.StrategicProfitCenterAbbreviation = StrategicProfitCenterAbbreviation\n\tAND LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date.SourceUmbrellaLayerStart = UmbrellaLayer\n\tAND LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_Endorsement_Start_Date.SourceUmbrellaLayerEnd = Endorsement_Start_Date\n\n),\nSRT_Get_Order_Prior_Current_RecordComparison AS (\n\tSELECT\n\tpol_key, \n\tPremiumTransactionCode, \n\tPremiumTypeCode, \n\tMonthlyTotalDirectWrittenPremium, \n\tProductCode, \n\tStrategicProfitCenterAbbreviation, \n\tAccountingProductCode, \n\tInsuranceReferenceLineOfBusinessCode, \n\tasl_code, \n\tsub_asl_code, \n\tstate_of_domicile_code, \n\tReinsuranceUmbrellaLayer, \n\tUmbrellaLayer, \n\tPolicy_Issue_Date, \n\tPolicy_Start_Date, \n\tPolicy_End_Date, \n\tAccounting_Date, \n\tO_Endorsement_Issue_Date AS Endorsement_Issue_Date, \n\tO_Endorsement_Start_Date AS Endorsement_Start_Date, \n\tEDWPremiumMasterCalculationPKID, \n\tRatingPlanAbbreviation, \n\tname\n\tFROM EXP_Get_Umbrella\n\tORDER BY pol_key ASC, ProductCode ASC, StrategicProfitCenterAbbreviation ASC, AccountingProductCode ASC, InsuranceReferenceLineOfBusinessCode ASC, asl_code ASC, sub_asl_code ASC, state_of_domicile_code ASC, ReinsuranceUmbrellaLayer ASC, Policy_Issue_Date ASC, Policy_Start_Date ASC, Policy_End_Date ASC, Accounting_Date ASC, Endorsement_Issue_Date ASC, Endorsement_Start_Date ASC, EDWPremiumMasterCalculationPKID ASC\n),\nEXP_HashKey AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\t-- *INF*: :LKP.LKP_TRANSCODE(PremiumTransactionCode)\n\tLKP_TRANSCODE_PremiumTransactionCode.TargetAttributeValue AS v_DocumentType,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tReinsuranceUmbrellaLayer AS ReinsuranceUmbrellalayer,\n\t-- *INF*: IIF(MonthlyTotalDirectWrittenPremium<0,'0','1')\n\tIFF(MonthlyTotalDirectWrittenPremium < 0, '0', '1') AS Sign_Flag,\n\t-- *INF*: MD5(pol_key||'|'||ProductCode||'|'||StrategicProfitCenterAbbreviation||'|'||AccountingProductCode||'|'||InsuranceReferenceLineOfBusinessCode||'|'||asl_code||'|'||sub_asl_code||'|'||state_of_domicile_code||'|'||to_char(ReinsuranceUmbrellalayer))\n\tMD5(pol_key || '|' || ProductCode || '|' || StrategicProfitCenterAbbreviation || '|' || AccountingProductCode || '|' || InsuranceReferenceLineOfBusinessCode || '|' || asl_code || '|' || sub_asl_code || '|' || state_of_domicile_code || '|' || to_char(ReinsuranceUmbrellalayer)) AS v_CoversKey,\n\t-- *INF*: md5(to_char(Policy_Start_Date,'YYYYMMDD')||'|'||to_char(Policy_End_Date,'YYYYMMDD'))\n\tmd5(to_char(Policy_Start_Date, 'YYYYMMDD') || '|' || to_char(Policy_End_Date, 'YYYYMMDD')) AS v_CoversDateKey,\n\t-- *INF*: MD5(TO_CHAR(Endorsement_Start_Date,'YYYYYMMDD')||'|'||TO_CHAR(Endorsement_Issue_Date,'YYYYYMMDD'))\n\tMD5(TO_CHAR(Endorsement_Start_Date, 'YYYYYMMDD') || '|' || TO_CHAR(Endorsement_Issue_Date, 'YYYYYMMDD')) AS v_DateKey,\n\tv_CoversKey AS CoversKey,\n\tv_CoversDateKey AS CoversDateKey,\n\tv_DateKey AS DateKey,\n\t-- *INF*: IIF(v_CoversKey=v_PriorCoversKey and v_CoversDateKey=v_PriorCoversDateKey ,IIF(v_DateKey=v_PriorDateKey and Accounting_Date=v_Prior_Accounting_Date,v_Count,v_Count+1),1)\n\tIFF(\n\t    v_CoversKey = v_PriorCoversKey and v_CoversDateKey = v_PriorCoversDateKey,\n\t    IFF(\n\t        v_DateKey = v_PriorDateKey\n\t    and Accounting_Date = v_Prior_Accounting_Date, v_Count,\n\t        v_Count + 1\n\t    ),\n\t    1\n\t) AS v_Count,\n\t-- *INF*: IIF(isnull(:LKP.LKP_EXISTING_POLICYCOVERS(v_CoversKey)),IIF(v_CoversKey=v_PriorCoversKey AND v_CoversDateKey=v_PriorCoversDateKey,IIF(v_DateKey=v_PriorDateKey and v_Count=1 and Accounting_Date=v_Prior_Accounting_Date,IIF(v_DocumentType=v_Prior_Original_DocType,v_Prior_DocType,v_DocumentType),IIF(in(v_DocumentType,'A','C'),v_DocumentType,'E')),'P'),IIF(in(v_DocumentType,'A','C'),v_DocumentType,'E'))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(in(v_DocumentType,'A','C'),v_DocumentType,'E'),'P'),IIF(in(v_DocumentType,'A','C'),v_DocumentType,'E'))\r\n\t-- \r\n\t-- \r\n\t-- --IIF(isnull(LKP_ExistingPolicyIssueDate),IIF(CoversKey=v_PriorCoversKey AND v_CoversDateKey=v_PriorCoversDateKey,'E',v_DocumentType))\n\tIFF(\n\t    LKP_EXISTING_POLICYCOVERS_v_CoversKey.ASLCoversKey IS NULL,\n\t    IFF(\n\t        v_CoversKey = v_PriorCoversKey\n\t    and v_CoversDateKey = v_PriorCoversDateKey,\n\t        IFF(\n\t            v_DateKey = v_PriorDateKey\n\t            and v_Count = 1\n\t            and Accounting_Date = v_Prior_Accounting_Date,\n\t            IFF(\n\t                v_DocumentType = v_Prior_Original_DocType, v_Prior_DocType,\n\t                v_DocumentType\n\t            ),\n\t            IFF(\n\t                v_DocumentType IN ('A','C'), v_DocumentType, 'E'\n\t            )\n\t        ),\n\t        'P'\n\t    ),\n\t    IFF(\n\t        v_DocumentType IN ('A','C'), v_DocumentType, 'E'\n\t    )\n\t) AS v_DocType,\n\tv_DocType AS DocType,\n\tv_DocumentType AS v_Prior_Original_DocType,\n\tv_DocType AS v_Prior_DocType,\n\t-- *INF*: Decode(v_DocType,'P','1','E','3','C','2','A','4')\n\tDecode(\n\t    v_DocType,\n\t    'P', '1',\n\t    'E', '3',\n\t    'C', '2',\n\t    'A', '4'\n\t) AS DocTypeOrder,\n\tv_CoversKey AS v_PriorCoversKey,\n\tv_CoversDateKey AS v_PriorCoversDateKey,\n\tv_DateKey AS v_PriorDateKey,\n\tAccounting_Date AS v_Prior_Accounting_Date,\n\tv_pol_key,\n\tReinsuranceUmbrellalayer AS O_ReinsuranceUmbrellalayer,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM SRT_Get_Order_Prior_Current_RecordComparison\n\tLEFT JOIN LKP_TRANSCODE LKP_TRANSCODE_PremiumTransactionCode\n\tON LKP_TRANSCODE_PremiumTransactionCode.SourceAttributeValue = PremiumTransactionCode\n\n\tLEFT JOIN LKP_EXISTING_POLICYCOVERS LKP_EXISTING_POLICYCOVERS_v_CoversKey\n\tON LKP_EXISTING_POLICYCOVERS_v_CoversKey.ASLCoversKey = v_CoversKey\n\n),\nSRT_Original_Transaction_Sequence AS (\n\tSELECT\n\tpol_key, \n\tMonthlyTotalDirectWrittenPremium, \n\tProductCode, \n\tStrategicProfitCenterAbbreviation, \n\tAccountingProductCode, \n\tInsuranceReferenceLineOfBusinessCode, \n\tasl_code, \n\tsub_asl_code, \n\tstate_of_domicile_code, \n\tO_ReinsuranceUmbrellalayer AS ReinsuranceUmbrellalayer, \n\tPolicy_Issue_Date, \n\tPolicy_Start_Date, \n\tPolicy_End_Date, \n\tAccounting_Date, \n\tEndorsement_Issue_Date, \n\tEndorsement_Start_Date, \n\tDocTypeOrder, \n\tSign_Flag, \n\tEDWPremiumMasterCalculationPKID, \n\tCoversKey, \n\tCoversDateKey, \n\tDateKey, \n\tDocType, \n\tRatingPlanAbbreviation, \n\tname\n\tFROM EXP_HashKey\n\tORDER BY pol_key ASC, ProductCode ASC, StrategicProfitCenterAbbreviation ASC, AccountingProductCode ASC, InsuranceReferenceLineOfBusinessCode ASC, asl_code ASC, sub_asl_code ASC, state_of_domicile_code ASC, ReinsuranceUmbrellalayer ASC, Policy_Issue_Date ASC, Policy_Start_Date ASC, Policy_End_Date ASC, Accounting_Date ASC, Endorsement_Issue_Date ASC, Endorsement_Start_Date ASC, DocTypeOrder ASC, Sign_Flag ASC\n),\nEXP_TGT_Data_Collect AS (\n\tSELECT\n\tpol_key,\n\tDocType,\n\t-- *INF*: IIF(DocType='A','E',DocType)\n\tIFF(DocType = 'A', 'E', DocType) AS v_DocType,\n\tv_DocType AS O_Doc_Type,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tPolicy_Issue_Date,\n\tCoversKey,\n\tCoversDateKey,\n\tDateKey,\n\tSign_Flag,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_TGT(CoversKey)),'0|0|',:LKP.LKP_TGT(CoversKey))\n\tIFF(LKP_TGT_CoversKey.OutPut IS NULL, '0|0|', LKP_TGT_CoversKey.OutPut) AS v_LKP_TgtValue,\n\t-- *INF*: TO_BIGINT(substr(v_LKP_TgtValue,1,INSTR(v_LKP_TgtValue,'|',1,1)-1))\n\tCAST(substr(v_LKP_TgtValue, 1, REGEXP_INSTR(v_LKP_TgtValue, '|', 1, 1) - 1) AS BIGINT) AS v_lkp_Endorsement_No,\n\t-- *INF*: TO_BIGINT(substr(v_LKP_TgtValue,INSTR(v_LKP_TgtValue,'|',1,1)+1,INSTR(v_LKP_TgtValue,'|',1,2)-INSTR(v_LKP_TgtValue,'|',1,1)))\n\tCAST(substr(v_LKP_TgtValue, REGEXP_INSTR(v_LKP_TgtValue, '|', 1, 1) + 1, REGEXP_INSTR(v_LKP_TgtValue, '|', 1, 2) - REGEXP_INSTR(v_LKP_TgtValue, '|', 1, 1)) AS BIGINT) AS v_lkp_Tran_No,\n\t-- *INF*: iif(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey and DateKey=v_PriorDateKey and v_DocType=v_PriorDocType and Accounting_Date=v_Priror_Accounting_Date and Sign_Flag=v_PriorSign_Flag,'0','1')\n\tIFF(\n\t    CoversKey = v_Prior_CoversKey\n\t    and CoversDateKey = v_PriorCoversDateKey\n\t    and DateKey = v_PriorDateKey\n\t    and v_DocType = v_PriorDocType\n\t    and Accounting_Date = v_Priror_Accounting_Date\n\t    and Sign_Flag = v_PriorSign_Flag,\n\t    '0',\n\t    '1'\n\t) AS v_Flag,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER(1)),0,:LKP.LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER(1))\n\tIFF(\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num IS NULL, 0,\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num\n\t) AS v_lkp_Source_Seq_Num,\n\t-- *INF*: IIF(v_Flag='1',v_count+1,v_count)\n\tIFF(v_Flag = '1', v_count + 1, v_count) AS v_count,\n\t-- *INF*: IIF(v_Flag='1',v_lkp_Source_Seq_Num+v_count,v_Source_Seq_Num)\n\tIFF(v_Flag = '1', v_lkp_Source_Seq_Num + v_count, v_Source_Seq_Num) AS v_Source_Seq_Num,\n\tv_Source_Seq_Num AS Source_Seq_Num,\n\t-- *INF*: IIF(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey ,IIF(DateKey=v_PriorDateKey and v_DocType=v_PriorDocType and Accounting_Date=v_Priror_Accounting_Date and Sign_Flag=v_PriorSign_Flag,v_Counter,v_Counter+1),1)\n\tIFF(\n\t    CoversKey = v_Prior_CoversKey and CoversDateKey = v_PriorCoversDateKey,\n\t    IFF(\n\t        DateKey = v_PriorDateKey\n\t        and v_DocType = v_PriorDocType\n\t        and Accounting_Date = v_Priror_Accounting_Date\n\t        and Sign_Flag = v_PriorSign_Flag,\n\t        v_Counter,\n\t        v_Counter + 1\n\t    ),\n\t    1\n\t) AS v_Counter,\n\t-- *INF*: IIF(v_Flag='1',\r\n\t-- IIF(v_lkp_Tran_No=0,IIF(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey ,IIF(DateKey=v_PriorDateKey and v_DocType=v_PriorDocType and Accounting_Date=v_Priror_Accounting_Date and Sign_Flag=v_PriorSign_Flag,v_Tran_No,IIF(v_Counter=1,2,v_Tran_No+1)),2),v_lkp_Tran_No+v_Counter),v_Tran_No)\r\n\t-- \r\n\t-- \r\n\t-- --IIF(v_Flag='1',IIF(pol_key=v_pol_key,IIF(v_lkp_Tran_No=0,v_Tran_No+1,IIF(pol_key=v_pol_key,v_Tran_No+1,v_lkp_Tran_No+1)),IIF(v_lkp_Tran_No=0,2,IIF(pol_key=v_pol_key,v_Tran_No+1,v_lkp_Tran_No+1))),v_Tran_No)\r\n\t-- \r\n\t-- --IIF(pol_key=v_pol_key,IIF(v_Flag='1',))\r\n\t-- \r\n\t-- --IIF(v_Flag='1',IIF(pol_key=v_pol_key,IIF(v_lkp_Tran_No=0,v_Tran_No+1,v_lkp_Tran_No+1),IIF(v_lkp_Tran_No=0,2,v_lkp_Tran_No+1)),v_Tran_No)\r\n\t-- \r\n\t-- \r\n\t-- --IIF(v_Flag='1',IIF(v_lkp_Tran_No=0,IIF(pol_key=v_pol_key,v_Tran_No+1,2),v_lkp_Tran_No+1),v_Tran_No)\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_Flag = '1',\n\t    IFF(\n\t        v_lkp_Tran_No = 0,\n\t        IFF(\n\t            CoversKey = v_Prior_CoversKey\n\t        and CoversDateKey = v_PriorCoversDateKey,\n\t            IFF(\n\t                DateKey = v_PriorDateKey\n\t                and v_DocType = v_PriorDocType\n\t                and Accounting_Date = v_Priror_Accounting_Date\n\t                and Sign_Flag = v_PriorSign_Flag,\n\t                v_Tran_No,\n\t                IFF(\n\t                    v_Counter = 1, 2, v_Tran_No + 1\n\t                )\n\t            ),\n\t            2\n\t        ),\n\t        v_lkp_Tran_No + v_Counter\n\t    ),\n\t    v_Tran_No\n\t) AS v_Tran_No,\n\tv_Tran_No AS Tran_No,\n\t-- *INF*: IIF(v_DocType='E',\r\n\t-- IIF(v_Flag='1',IIF(v_lkp_Endorsement_No=0,IIF(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey ,IIF(DateKey=v_PriorDateKey and v_DocType=v_PriorDocType and Accounting_Date=v_Priror_Accounting_Date and Sign_Flag=v_PriorSign_Flag,v_Endorsement_No,v_PreviousEndorsement_No+1),1),v_lkp_Endorsement_No+1),v_Endorsement_No),0)\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_DocType = 'E',\n\t    IFF(\n\t        v_Flag = '1',\n\t        IFF(\n\t            v_lkp_Endorsement_No = 0,\n\t            IFF(\n\t                CoversKey = v_Prior_CoversKey\n\t            and CoversDateKey = v_PriorCoversDateKey,\n\t                IFF(\n\t                    DateKey = v_PriorDateKey\n\t                    and v_DocType = v_PriorDocType\n\t                    and Accounting_Date = v_Priror_Accounting_Date\n\t                    and Sign_Flag = v_PriorSign_Flag,\n\t                    v_Endorsement_No,\n\t                    v_PreviousEndorsement_No + 1\n\t                ),\n\t                1\n\t            ),\n\t            v_lkp_Endorsement_No + 1\n\t        ),\n\t        v_Endorsement_No\n\t    ),\n\t    0\n\t) AS v_Endorsement_No,\n\t-- *INF*: IIF(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey,Greatest(v_Endorsement_No,v_PreviousEndorsement_No),0)\n\tIFF(\n\t    CoversKey = v_Prior_CoversKey and CoversDateKey = v_PriorCoversDateKey,\n\t    Greatest(v_Endorsement_No, v_PreviousEndorsement_No),\n\t    0\n\t) AS v_PreviousEndorsement_No,\n\tv_Endorsement_No AS Endorsement_No,\n\t-- *INF*: ''\r\n\t-- \r\n\t-- --IIF(v_Flag='1',\r\n\t-- --IIF(NOT ISNULL(LKP_OutPut) and v_LKP_Document_Type='E',IIF(v_Endorsement_Start_Date<v_LKP_Endorsement_Start_Date,'OSE',''),IIF(CoversKey=v_Prior_CoversKey and CoversDateKey=v_PriorCoversDateKey ,IIF(v_Endorsement_Start_Date<v_Prior_Endorsement_Start_Date,'OSE',''),'')),'')\r\n\t-- \n\t'' AS OSE_Flag,\n\tpol_key AS v_pol_key,\n\tCoversKey AS v_Prior_CoversKey,\n\tCoversDateKey AS v_PriorCoversDateKey,\n\tDateKey AS v_PriorDateKey,\n\tv_DocType AS v_PriorDocType,\n\tEndorsement_Start_Date AS v_Prior_Endorsement_Start_Date,\n\tAccounting_Date AS v_Priror_Accounting_Date,\n\tSign_Flag AS v_PriorSign_Flag,\n\tCoversKey AS ASLCoversKey,\n\tCoversDateKey AS ASLCoversDateKey,\n\tEDWPremiumMasterCalculationPKID,\n\tReinsuranceUmbrellalayer,\n\tCURRENT_TIMESTAMP AS CreatedDate,\n\tCURRENT_TIMESTAMP AS ModifiedDate,\n\t'MONTHLY' AS EntryProcess,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM SRT_Original_Transaction_Sequence\n\tLEFT JOIN LKP_TGT LKP_TGT_CoversKey\n\tON LKP_TGT_CoversKey.ASLCoversKey = CoversKey\n\n\tLEFT JOIN LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1\n\tON LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.ID = 1\n\n),\nSapiensReinsurancePolicy AS (\n\tTRUNCATE TABLE SapiensReinsurancePolicy;\n\tINSERT INTO SapiensReinsurancePolicy\n\t(AuditId, CreatedDate, ModifiedDate, PolicyKey, DocumntType, AccountingDate, MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineOfBusinessCode, ASLCode, SubASLCode, PrimaryStateCode, CoverageEffectiveDate, CoverageExpirationDate, EndorsementStartDate, EndorsementIssueDate, PolicyIssueDate, SourceSequenceNumber, TransactionNumber, EndorsementNumber, ASLCoversKey, DateKey, PremiumMasterCalculationPKId, ReinsuranceUmbrellaLayer, OSECode, EntryProcess, RatingPlanAbbreviation, FirstNameIsured)\n\tSELECT \n\tAuditid AS AUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tpol_key AS POLICYKEY, \n\tO_Doc_Type AS DOCUMNTTYPE, \n\tAccounting_Date AS ACCOUNTINGDATE, \n\tMONTHLYTOTALDIRECTWRITTENPREMIUM, \n\tPRODUCTCODE, \n\tSTRATEGICPROFITCENTERABBREVIATION, \n\tACCOUNTINGPRODUCTCODE, \n\tINSURANCEREFERENCELINEOFBUSINESSCODE, \n\tasl_code AS ASLCODE, \n\tsub_asl_code AS SUBASLCODE, \n\tstate_of_domicile_code AS PRIMARYSTATECODE, \n\tPolicy_Start_Date AS COVERAGEEFFECTIVEDATE, \n\tPolicy_End_Date AS COVERAGEEXPIRATIONDATE, \n\tEndorsement_Start_Date AS ENDORSEMENTSTARTDATE, \n\tEndorsement_Issue_Date AS ENDORSEMENTISSUEDATE, \n\tPolicy_Issue_Date AS POLICYISSUEDATE, \n\tSource_Seq_Num AS SOURCESEQUENCENUMBER, \n\tTran_No AS TRANSACTIONNUMBER, \n\tEndorsement_No AS ENDORSEMENTNUMBER, \n\tASLCOVERSKEY, \n\tASLCoversDateKey AS DATEKEY, \n\tEDWPremiumMasterCalculationPKID AS PREMIUMMASTERCALCULATIONPKID, \n\tReinsuranceUmbrellalayer AS REINSURANCEUMBRELLALAYER, \n\tOSE_Flag AS OSECODE, \n\tENTRYPROCESS, \n\tRATINGPLANABBREVIATION, \n\tname AS FIRSTNAMEISURED\n\tFROM EXP_TGT_Data_Collect\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PMSESSIONNAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}