{
    "name": "s_m_POL_DW_LOAD_RiskLocation_DCT_PL",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_RiskLocation_DCT_PL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkPLLocation AS (\n\tselect distinct P.PolicySymbol,\r\n\tP.PolicyNumber,\r\n\tP.PolicyVersion,\r\n\tsubstring(REPLACE(Addresskey,P.Policykey+'||',''),1,charindex('|',REPLACE(Addresskey,P.Policykey+'||','') ,1)-1) Locationid,\r\n\tISNULL(L.StreetAddressLine1,'N/A') StreetAddressLine1,\r\n\tISNULL(L.CityName,'N/A') CityName,\r\n\tISNULL(L.CountyName,'N/A') CountyName,\r\n\tISNULL(L.StateUspsCode,'N/A') StateUspsCode,\r\n\tISNULL(L.TerritoryCode,'N/A') TerritoryCode,\r\n\tISNULL(L.PostalCode,'N/A') PostalCode\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLLocation L\r\n\ton P.PolicyKey=L.PolicyKey\r\n\tand P.StartDate=L.StartDate\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\ton P.PolicyKey=C.PolicyKey\r\n\tand P.StartDate=C.StartDate\r\n\tand L.AddressKey=C.RiskAddressKey\r\n\tand not exists(select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P2 where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\tUNION\r\n\t\r\n\tselect distinct P.PolicySymbol,\r\n\tP.PolicyNumber,\r\n\tP.PolicyVersion,\r\n\t'' Locationid,\r\n\tISNULL(PT.StreetAddressLine1,'N/A') StreetAddressLine1,\r\n\tISNULL(PT.CityName,'N/A') CityName,\r\n\tISNULL(PT.CountyName,'N/A') CountyName,\r\n\tISNULL(PT.StateName,'N/A') StateUspsCode,\r\n\t'N/A' TerritoryCode,\r\n\tISNULL(PT.PostalCode,'N/A') PostalCode\r\n\tfrom \r\n\t(select *,case when AddressType='Insured MailingAddress' then 1 else 2 end Customer_Record\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty \r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')) PT\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P\r\n\ton PT.PolicyKey=P.PolicyKey\r\n\tand PT.StartDate=P.StartDate\r\n\tand not exists(select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P2 where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\r\n\tinner join (select PolicyKey,StartDate,max(case when AddressType='Insured MailingAddress' then 1 else 2 end) Customer_Record\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty P\r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')\r\n\tgroup by PolicyKey,StartDate) B\r\n\ton PT.Policykey=B.POlicykey\r\n\tand PT.StartDate=B.STartDate\r\n\tand PT.Customer_Record=B.Customer_Record\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Src_DataCollect AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\t-- *INF*: PolicyNumber || IIF(ISNULL(ltrim(rtrim(PolicyVersion))) or Length(ltrim(rtrim(PolicyVersion)))=0 or IS_SPACES(PolicyVersion),'00',PolicyVersion)\n\tPolicyNumber || IFF(ltrim(rtrim(PolicyVersion)) IS NULL OR Length(ltrim(rtrim(PolicyVersion))) = 0 OR IS_SPACES(PolicyVersion), '00', PolicyVersion) AS v_PolicyKey,\n\tv_PolicyKey AS o_Policykey,\n\tLocationid,\n\t'0000' AS v_LocationNumber,\n\tv_LocationNumber AS o_LocationNumber,\n\tv_PolicyKey || '|' || Locationid || '|' ||v_LocationNumber AS o_RiskLocationKey,\n\tStreetAddressLine1,\n\tCityName,\n\tCountyName,\n\tStateUspsCode,\n\tTerritoryCode,\n\tPostalCode,\n\t'N/A' AS o_TaxLocation,\n\t'N/A' AS o_TaxCode,\n\t'N/A' AS o_ISOFireProtectCity,\n\t'N/A' AS o_IntrastateRiskID\n\tFROM SQ_WorkPLLocation\n),\nLKP_RiskLocation AS (\n\tSELECT\n\tRiskLocationAKID,\n\tRiskLocationKey,\n\tLocationIndicator,\n\tTaxLocation,\n\tsup_state_id,\n\tTaxCode,\n\tRiskLocationHashKey,\n\tIntrastateRiskId,\n\tISOFireProtectCity,\n\tLocationUnitNumber,\n\tRiskTerritory\n\tFROM (\n\t\tSELECT \n\t\t\tRiskLocationAKID,\n\t\t\tRiskLocationKey,\n\t\t\tLocationIndicator,\n\t\t\tTaxLocation,\n\t\t\tsup_state_id,\n\t\t\tTaxCode,\n\t\t\tRiskLocationHashKey,\n\t\t\tIntrastateRiskId,\n\t\t\tISOFireProtectCity,\n\t\t\tLocationUnitNumber,\n\t\t\tRiskTerritory\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand\r\n\t\tPolicyAKId in (\r\n\t\tselect pol_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy WCT\r\n\t\twhere WCT.PolicyNumber=pol.pol_num\r\n\t\tand ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod)\r\n\t\tand pol.crrnt_snpsht_flag=1)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey ORDER BY RiskLocationAKID) = 1\n),\nLKP_SupState AS (\n\tSELECT\n\tsup_state_id,\n\tstate_abbrev,\n\tstate_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_state_id,\n\t\t\tstate_abbrev,\n\t\t\tstate_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id = 'EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY sup_state_id) = 1\n),\nLKP_policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy WCT\r\n\t\twhere WCT.PolicyNumber=pol_num\r\n\t\tand ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol_mod)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_RiskLocation.RiskLocationAKID AS lkp_RiskLocationAKID,\n\tLKP_RiskLocation.LocationIndicator AS lkp_LocationIndicator,\n\tLKP_RiskLocation.TaxLocation AS lkp_TaxLocation,\n\tLKP_RiskLocation.sup_state_id AS lkp_sup_state_id,\n\tLKP_RiskLocation.TaxCode AS lkp_KYTaxCode,\n\tLKP_RiskLocation.RiskLocationHashKey AS lkp_RiskLocationHashKey,\n\tLKP_RiskLocation.IntrastateRiskId AS lkp_IntrastateRiskId,\n\tLKP_RiskLocation.ISOFireProtectCity AS lkp_ISOFireProtectCity,\n\tLKP_RiskLocation.LocationUnitNumber AS lkp_LocationUnitNumber,\n\tLKP_RiskLocation.RiskTerritory AS lkp_RiskTerritory,\n\tLKP_RiskLocation.RiskLocationKey AS lkp_RiskLocationKey,\n\tLKP_SupState.sup_state_id AS i_sup_state_id,\n\tLKP_SupState.state_abbrev AS i_state_abbrev,\n\t0 AS v_LogicalIndicator,\n\tEXP_Src_DataCollect.o_RiskLocationKey AS i_RiskLocationKey,\n\tEXP_Src_DataCollect.o_LocationNumber AS i_LocationUnitNumber,\n\t'N' AS v_LocationIndicator,\n\tEXP_Src_DataCollect.TerritoryCode AS i_RiskTerritory,\n\tEXP_Src_DataCollect.PostalCode AS i_ZipPostalCode,\n\tEXP_Src_DataCollect.o_TaxLocation AS i_TaxLocation,\n\tEXP_Src_DataCollect.CityName AS i_RatingCity,\n\tEXP_Src_DataCollect.CountyName AS i_RatingCounty,\n\tEXP_Src_DataCollect.o_TaxCode AS i_TaxCode,\n\tEXP_Src_DataCollect.StreetAddressLine1 AS i_Address1,\n\tEXP_Src_DataCollect.o_ISOFireProtectCity AS i_ISOFireProtectCity,\n\t-- *INF*: IIF(i_state_abbrev='12' and NOT ISNULL(i_ISOFireProtectCity),i_ISOFireProtectCity,'N/A')\n\tIFF(i_state_abbrev = '12' AND NOT i_ISOFireProtectCity IS NULL, i_ISOFireProtectCity, 'N/A') AS v_ISOFireProtectCity,\n\t-- *INF*: IIF(ISNULL(i_state_abbrev), 'N/A', i_state_abbrev)\n\tIFF(i_state_abbrev IS NULL, 'N/A', i_state_abbrev) AS v_StateProvinceCode,\n\t-- *INF*: MD5(i_Address1||i_RatingCity||v_StateProvinceCode||i_ZipPostalCode)\n\tMD5(i_Address1 || i_RatingCity || v_StateProvinceCode || i_ZipPostalCode) AS v_RiskLocationHashKey,\n\t-- *INF*:   IIF(ISNULL(lkp_RiskLocationAKID), 'NEW', \r\n\t-- IIF(\r\n\t-- LTRIM(RTRIM(lkp_LocationIndicator)) != LTRIM(RTRIM(v_LocationIndicator)) OR LTRIM(RTRIM(lkp_LocationUnitNumber)) != LTRIM(RTRIM(i_LocationUnitNumber)) OR LTRIM(RTRIM(lkp_RiskTerritory)) != LTRIM(RTRIM(i_RiskTerritory)) OR\r\n\t-- LTRIM(RTRIM(lkp_TaxLocation)) != LTRIM(RTRIM(i_TaxLocation)) OR lkp_sup_state_id != i_sup_state_id OR LTRIM(RTRIM(lkp_KYTaxCode)) != LTRIM(RTRIM(i_TaxCode)) OR LTRIM(RTRIM(lkp_RiskLocationHashKey)) != LTRIM(RTRIM(v_RiskLocationHashKey))  OR LTRIM(RTRIM(lkp_IntrastateRiskId)) != LTRIM(RTRIM(IntrastateRiskID)) OR LTRIM(RTRIM(lkp_ISOFireProtectCity)) != LTRIM(RTRIM(v_ISOFireProtectCity)) ,\r\n\t-- 'UPDATE', 'NOCHANGE'))\n\tIFF(lkp_RiskLocationAKID IS NULL, 'NEW', IFF(LTRIM(RTRIM(lkp_LocationIndicator)) != LTRIM(RTRIM(v_LocationIndicator)) OR LTRIM(RTRIM(lkp_LocationUnitNumber)) != LTRIM(RTRIM(i_LocationUnitNumber)) OR LTRIM(RTRIM(lkp_RiskTerritory)) != LTRIM(RTRIM(i_RiskTerritory)) OR LTRIM(RTRIM(lkp_TaxLocation)) != LTRIM(RTRIM(i_TaxLocation)) OR lkp_sup_state_id != i_sup_state_id OR LTRIM(RTRIM(lkp_KYTaxCode)) != LTRIM(RTRIM(i_TaxCode)) OR LTRIM(RTRIM(lkp_RiskLocationHashKey)) != LTRIM(RTRIM(v_RiskLocationHashKey)) OR LTRIM(RTRIM(lkp_IntrastateRiskId)) != LTRIM(RTRIM(IntrastateRiskID)) OR LTRIM(RTRIM(lkp_ISOFireProtectCity)) != LTRIM(RTRIM(v_ISOFireProtectCity)), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\tv_Changed_Flag AS o_Changed_Flag,\n\tlkp_RiskLocationAKID AS o_RiskLocationAKID,\n\tv_LogicalIndicator AS o_LogicalIndicator,\n\tLKP_policy.pol_ak_id AS lkp_PolicyAKID,\n\t-- *INF*: IIF(ISNULL(lkp_PolicyAKID),-1,lkp_PolicyAKID)\n\tIFF(lkp_PolicyAKID IS NULL, - 1, lkp_PolicyAKID) AS o_PolicyAkid,\n\t-- *INF*: IIF(ISNULL(lkp_RiskLocationAKID),i_RiskLocationKey,lkp_RiskLocationKey)\n\tIFF(lkp_RiskLocationAKID IS NULL, i_RiskLocationKey, lkp_RiskLocationKey) AS o_RiskLocationKey,\n\ti_LocationUnitNumber AS o_LocationUnitNumber,\n\tv_LocationIndicator AS o_LocationIndicator,\n\ti_RiskTerritory AS o_RiskTerritory,\n\tv_StateProvinceCode AS o_StateProvinceCode,\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\ti_TaxLocation AS o_TaxLocation,\n\ti_sup_state_id AS o_sup_state_id,\n\ti_RatingCity AS o_RatingCity,\n\ti_RatingCounty AS o_RatingCounty,\n\ti_TaxCode AS o_TaxCode,\n\tv_RiskLocationHashKey AS o_RiskLocationHashKey,\n\ti_Address1 AS o_Address1,\n\tv_ISOFireProtectCity AS o_ISOFireProtectCity,\n\tEXP_Src_DataCollect.o_IntrastateRiskID AS IntrastateRiskID\n\tFROM EXP_Src_DataCollect\n\tLEFT JOIN LKP_RiskLocation\n\tON LKP_RiskLocation.RiskLocationKey = EXP_Src_DataCollect.o_RiskLocationKey\n\tLEFT JOIN LKP_SupState\n\tON LKP_SupState.state_code = EXP_Src_DataCollect.StateUspsCode\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_Src_DataCollect.o_Policykey\n),\nFIL_Insert AS (\n\tSELECT\n\to_Changed_Flag AS Changed_Flag, \n\to_RiskLocationAKID AS RiskLocationAKID, \n\to_LogicalIndicator AS LogicalIndicator, \n\to_PolicyAkid AS PolicyAKID, \n\to_RiskLocationKey AS RiskLocationKey, \n\to_LocationUnitNumber AS LocationUnitNumber, \n\to_LocationIndicator AS LocationIndicator, \n\to_RiskTerritory AS RiskTerritory, \n\to_StateProvinceCode AS StateProvinceCode, \n\to_ZipPostalCode AS ZipPostalCode, \n\to_TaxLocation AS TaxLocation, \n\to_sup_state_id AS sup_state_id, \n\to_RatingCity AS RatingCity, \n\to_RatingCounty AS RatingCounty, \n\to_TaxCode AS TaxCode, \n\to_RiskLocationHashKey AS RiskLocationHashKey, \n\to_Address1 AS Address1, \n\tIntrastateRiskID, \n\to_ISOFireProtectCity AS ISOFireProtectCity\n\tFROM EXP_Detect_Changes\n\tWHERE (Changed_Flag='NEW' OR Changed_Flag='UPDATE')\n),\nSEQ_RiskLocationAKID AS (\n\tCREATE SEQUENCE SEQ_RiskLocationAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tSEQ_RiskLocationAKID.NEXTVAL,\n\tChanged_Flag AS i_Changed_Flag,\n\tRiskLocationAKID AS i_RiskLocationAKID,\n\tLogicalIndicator,\n\tPolicyAKID,\n\tRiskLocationKey,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tRiskTerritory,\n\tStateProvinceCode,\n\tZipPostalCode,\n\tTaxLocation,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tTaxCode,\n\t-- *INF*: IIF(i_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(i_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS v_EffectiveDate,\n\tRiskLocationHashKey,\n\tAddress1,\n\tIntrastateRiskID,\n\tISOFireProtectCity,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tv_EffectiveDate AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t-- *INF*: IIF(ISNULL(i_RiskLocationAKID),NEXTVAL,i_RiskLocationAKID)\n\tIFF(i_RiskLocationAKID IS NULL, NEXTVAL, i_RiskLocationAKID) AS RiskLocationAKID,\n\t'N/A' AS o_ISOFireProtectCounty\n\tFROM FIL_Insert\n),\nTgt_RiskLocation_Insert AS (\n\tINSERT INTO RiskLocation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RiskLocationAKID, PolicyAKID, RiskLocationKey, LocationUnitNumber, LocationIndicator, RiskTerritory, StateProvinceCode, ZipPostalCode, TaxLocation, sup_state_id, RatingCity, RatingCounty, TaxCode, RiskLocationHashKey, StreetAddress, ISOFireProtectCity, ISOFireProtectCounty, IntrastateRiskId)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tRISKLOCATIONAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONKEY, \n\tLOCATIONUNITNUMBER, \n\tLOCATIONINDICATOR, \n\tRISKTERRITORY, \n\tSTATEPROVINCECODE, \n\tZIPPOSTALCODE, \n\tTAXLOCATION, \n\tSUP_STATE_ID, \n\tRATINGCITY, \n\tRATINGCOUNTY, \n\tTAXCODE, \n\tRISKLOCATIONHASHKEY, \n\tAddress1 AS STREETADDRESS, \n\tISOFIREPROTECTCITY, \n\to_ISOFireProtectCounty AS ISOFIREPROTECTCOUNTY, \n\tIntrastateRiskID AS INTRASTATERISKID\n\tFROM EXP_Detemine_AK_ID\n),\nSQ_RiskLocation AS (\n\tSELECT \r\n\t\tRiskLocationID,\r\n\t\tEffectiveDate, \r\n\t\tExpirationDate,\r\n\t\tRiskLocationAKID\r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation a\r\n\tWHERE   EXISTS\r\n\t\t (SELECT 1\r\n\t\t FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation b \r\n\t\t   WHERE CurrentSnapshotFlag = 1 and SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t    and a.RiskLocationAKID = b.RiskLocationAKID\r\n\tGROUP BY  RiskLocationAKID  HAVING count(*) > 1)\r\n\tAND SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tORDER BY  RiskLocationAKID ,EffectiveDate  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tRiskLocationID,\n\tEffectiveDate AS i_eff_from_date,\n\tExpirationDate AS orig_eff_to_date,\n\tRiskLocationAKID AS i_RiskLocationAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_RiskLocationAKID = v_PrevRiskLocationAKID ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_RiskLocationAKID = v_PrevRiskLocationAKID, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\ti_RiskLocationAKID AS v_PrevRiskLocationAKID,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_RiskLocation\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tRiskLocationID, \n\torig_eff_to_date, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_RiskLocation AS (\n\tSELECT\n\tRiskLocationID, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTgt_RiskLocation_Update AS (\n\tMERGE INTO RiskLocation AS T\n\tUSING UPD_RiskLocation AS S\n\tON T.RiskLocationID = S.RiskLocationID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.crrnt_snpsht_flag, T.ExpirationDate = S.eff_to_date, T.ModifiedDate = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905512"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604107"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:12:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:29:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}