{
    "name": "s_m_CLM_DM_LOAD_Claim_Party_Dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Claim_Party_Dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_claim_party AS (\n\tSELECT \r\n\tCP.claim_party_id, \r\n\tCP.claim_party_ak_id, \r\n\tCP.claim_party_key, \r\n\tCP.claim_party_full_name, \r\n\tCP.claim_party_first_name, \r\n\tCP.claim_party_last_name, \r\n\tCP.claim_party_mid_name, \r\n\tCP.claim_party_name_prfx, \r\n\tCP.claim_party_name_sfx, \r\n\tCP.claim_party_addr, \r\n\tCP.claim_party_city, \r\n\tCP.claim_party_county, \r\n\tCP.claim_party_state, \r\n\tCP.claim_party_zip, \r\n\tCP.addr_type, \r\n\tCP.tax_ssn_id, CP.tax_fed_id, \r\n\tCP.claim_party_birthdate, \r\n\tCP.claim_party_gndr, \r\n\tCP.eff_from_date \r\n\tFROM\r\n\t claim_party CP\r\n\tWHERE CP.created_date >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_default AS (\n\tSELECT\n\tclaim_party_id,\n\tclaim_party_ak_id,\n\tclaim_party_key,\n\tclaim_party_full_name,\n\tclaim_party_first_name,\n\tclaim_party_last_name,\n\tclaim_party_mid_name,\n\tclaim_party_name_prfx,\n\tclaim_party_name_sfx,\n\tclaim_party_addr,\n\tclaim_party_city,\n\tclaim_party_county,\n\tclaim_party_state,\n\tclaim_party_zip,\n\taddr_type,\n\ttax_ssn_id,\n\ttax_fed_id,\n\tclaim_party_birthdate,\n\tclaim_party_gndr,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\teff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_party\n),\nLKP_Claim_Party_Dim AS (\n\tSELECT\n\tclaim_party_dim_id,\n\tedw_claim_party_pk_id\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_party_dim_id,\n\t\t\tedw_claim_party_pk_id\n\t\tFROM claim_party_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_party_pk_id ORDER BY claim_party_dim_id) = 1\n),\nRTR_insert_update AS (\n\tSELECT\n\tLKP_Claim_Party_Dim.claim_party_dim_id,\n\tEXP_default.claim_party_id AS edw_claim_party_pk_id,\n\tEXP_default.claim_party_ak_id AS edw_claim_party_ak_id,\n\tEXP_default.claim_party_key,\n\tEXP_default.claim_party_full_name,\n\tEXP_default.claim_party_first_name,\n\tEXP_default.claim_party_last_name,\n\tEXP_default.claim_party_mid_name,\n\tEXP_default.claim_party_name_prfx,\n\tEXP_default.claim_party_name_sfx,\n\tEXP_default.claim_party_addr,\n\tEXP_default.claim_party_city,\n\tEXP_default.claim_party_county,\n\tEXP_default.claim_party_state,\n\tEXP_default.claim_party_zip,\n\tEXP_default.addr_type,\n\tEXP_default.tax_ssn_id,\n\tEXP_default.tax_fed_id,\n\tEXP_default.claim_party_birthdate,\n\tEXP_default.claim_party_gndr,\n\tEXP_default.crrnt_snpsht_flag,\n\tEXP_default.audit_id,\n\tEXP_default.eff_from_date,\n\tEXP_default.eff_to_date,\n\tEXP_default.created_date,\n\tEXP_default.modified_date\n\tFROM EXP_default\n\tLEFT JOIN LKP_Claim_Party_Dim\n\tON LKP_Claim_Party_Dim.edw_claim_party_pk_id = EXP_default.claim_party_id\n),\nRTR_insert_update_INSERT AS (SELECT * FROM RTR_insert_update WHERE ISNULL(claim_party_dim_id)),\nRTR_insert_update_DEFAULT1 AS (SELECT * FROM RTR_insert_update WHERE NOT ( (ISNULL(claim_party_dim_id)) )),\nUPD_insert AS (\n\tSELECT\n\tedw_claim_party_pk_id AS edw_claim_party_pk_id1, \n\tedw_claim_party_ak_id AS edw_claim_party_ak_id1, \n\tclaim_party_key AS claim_party_key1, \n\taddr_type AS addr_type1, \n\tclaim_party_zip AS claim_party_zip1, \n\tclaim_party_state AS claim_party_state1, \n\tclaim_party_county AS claim_party_county1, \n\tclaim_party_city AS claim_party_city1, \n\tclaim_party_addr AS claim_party_addr1, \n\tclaim_party_full_name AS claim_party_full_name1, \n\tclaim_party_first_name AS claim_party_first_name1, \n\tclaim_party_last_name AS claim_party_last_name1, \n\tclaim_party_mid_name AS claim_party_mid_name1, \n\tclaim_party_name_prfx AS claim_party_name_prfx1, \n\tclaim_party_name_sfx AS claim_party_name_sfx1, \n\ttax_ssn_id AS tax_ssn_id1, \n\ttax_fed_id AS tax_fed_id1, \n\tclaim_party_birthdate AS claim_party_birthdate1, \n\tclaim_party_gndr AS claim_party_gndr1, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag1, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tcreated_date AS created_date1, \n\tmodified_date AS modified_date1\n\tFROM RTR_insert_update_INSERT\n),\nclaim_party_dim_insert AS (\n\tINSERT INTO claim_party_dim\n\t(edw_claim_party_pk_id, edw_claim_party_ak_id, claim_party_key, addr_type, claim_party_zip, claim_party_state, claim_party_county, claim_party_city, claim_party_addr, claim_party_full_name, claim_party_first_name, claim_party_last_name, claim_party_mid_name, claim_party_name_prfx, claim_party_name_sfx, tax_ssn_id, tax_fed_id, claim_party_birthdate, claim_party_gndr, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date)\n\tSELECT \n\tedw_claim_party_pk_id1 AS EDW_CLAIM_PARTY_PK_ID, \n\tedw_claim_party_ak_id1 AS EDW_CLAIM_PARTY_AK_ID, \n\tclaim_party_key1 AS CLAIM_PARTY_KEY, \n\taddr_type1 AS ADDR_TYPE, \n\tclaim_party_zip1 AS CLAIM_PARTY_ZIP, \n\tclaim_party_state1 AS CLAIM_PARTY_STATE, \n\tclaim_party_county1 AS CLAIM_PARTY_COUNTY, \n\tclaim_party_city1 AS CLAIM_PARTY_CITY, \n\tclaim_party_addr1 AS CLAIM_PARTY_ADDR, \n\tclaim_party_full_name1 AS CLAIM_PARTY_FULL_NAME, \n\tclaim_party_first_name1 AS CLAIM_PARTY_FIRST_NAME, \n\tclaim_party_last_name1 AS CLAIM_PARTY_LAST_NAME, \n\tclaim_party_mid_name1 AS CLAIM_PARTY_MID_NAME, \n\tclaim_party_name_prfx1 AS CLAIM_PARTY_NAME_PRFX, \n\tclaim_party_name_sfx1 AS CLAIM_PARTY_NAME_SFX, \n\ttax_ssn_id1 AS TAX_SSN_ID, \n\ttax_fed_id1 AS TAX_FED_ID, \n\tclaim_party_birthdate1 AS CLAIM_PARTY_BIRTHDATE, \n\tclaim_party_gndr1 AS CLAIM_PARTY_GNDR, \n\tcrrnt_snpsht_flag1 AS CRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\teff_from_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tcreated_date1 AS CREATED_DATE, \n\tmodified_date1 AS MODIFIED_DATE\n\tFROM UPD_insert\n),\nUPD_update AS (\n\tSELECT\n\tclaim_party_dim_id AS claim_party_dim_id2, \n\tedw_claim_party_pk_id AS edw_claim_party_pk_id2, \n\tedw_claim_party_ak_id AS edw_claim_party_ak_id2, \n\tclaim_party_key AS claim_party_key2, \n\taddr_type AS addr_type2, \n\tclaim_party_zip AS claim_party_zip2, \n\tclaim_party_state AS claim_party_state2, \n\tclaim_party_county AS claim_party_county2, \n\tclaim_party_city AS claim_party_city2, \n\tclaim_party_addr AS claim_party_addr2, \n\tclaim_party_full_name AS claim_party_full_name2, \n\tclaim_party_first_name AS claim_party_first_name2, \n\tclaim_party_last_name AS claim_party_last_name2, \n\tclaim_party_mid_name AS claim_party_mid_name2, \n\tclaim_party_name_prfx AS claim_party_name_prfx2, \n\tclaim_party_name_sfx AS claim_party_name_sfx2, \n\ttax_ssn_id AS tax_ssn_id2, \n\ttax_fed_id AS tax_fed_id2, \n\tclaim_party_birthdate AS claim_party_birthdate2, \n\tclaim_party_gndr AS claim_party_gndr2, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag2, \n\taudit_id AS audit_id2, \n\teff_from_date AS eff_from_date2, \n\teff_to_date AS eff_to_date2, \n\tcreated_date AS created_date2, \n\tmodified_date AS modified_date2\n\tFROM RTR_insert_update_DEFAULT1\n),\nclaim_party_dim_update AS (\n\tMERGE INTO claim_party_dim AS T\n\tUSING UPD_update AS S\n\tON T.claim_party_dim_id = S.claim_party_dim_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.edw_claim_party_pk_id = S.edw_claim_party_pk_id2, T.edw_claim_party_ak_id = S.edw_claim_party_ak_id2, T.claim_party_key = S.claim_party_key2, T.addr_type = S.addr_type2, T.claim_party_zip = S.claim_party_zip2, T.claim_party_state = S.claim_party_state2, T.claim_party_county = S.claim_party_county2, T.claim_party_city = S.claim_party_city2, T.claim_party_addr = S.claim_party_addr2, T.claim_party_full_name = S.claim_party_full_name2, T.claim_party_first_name = S.claim_party_first_name2, T.claim_party_last_name = S.claim_party_last_name2, T.claim_party_mid_name = S.claim_party_mid_name2, T.claim_party_name_prfx = S.claim_party_name_prfx2, T.claim_party_name_sfx = S.claim_party_name_sfx2, T.tax_ssn_id = S.tax_ssn_id2, T.tax_fed_id = S.tax_fed_id2, T.claim_party_birthdate = S.claim_party_birthdate2, T.claim_party_gndr = S.claim_party_gndr2, T.crrnt_snpsht_flag = S.crrnt_snpsht_flag2, T.audit_id = S.audit_id2, T.eff_from_date = S.eff_from_date2, T.eff_to_date = S.eff_to_date2, T.created_date = S.created_date2, T.modified_date = S.modified_date2\n),\nSQ_claim_party_dim AS (\n\tSELECT \r\n\tA.CLAIM_PARTY_DIM_ID, A.EDW_CLAIM_PARTY_AK_ID, A.EFF_FROM_DATE, A.EFF_TO_DATE \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.CLAIM_PARTY_DIM A\r\n\tWHERE \r\n\tEXISTS\r\n\t(\r\n\tSELECT  1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CLAIM_PARTY_DIM B\r\n\tWHERE CRRNT_SNPSHT_FLAG = 1 AND \r\n\tA.EDW_CLAIM_PARTY_AK_ID =B.EDW_CLAIM_PARTY_AK_ID\r\n\tGROUP BY B.EDW_CLAIM_PARTY_AK_ID HAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY A.EDW_CLAIM_PARTY_AK_ID,A.EFF_FROM_DATE DESC\n),\nEXP_Lag_eff_from_date1 AS (\n\tSELECT\n\tclaim_party_dim_id,\n\tedw_claim_party_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tedw_claim_party_ak_id = v_PREV_ROW_claim_party_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\t\tedw_claim_party_ak_id = v_PREV_ROW_claim_party_ak_id, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t\torig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tedw_claim_party_ak_id AS v_PREV_ROW_claim_party_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_claim_party_dim\n),\nFILTRANS AS (\n\tSELECT\n\tclaim_party_dim_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date1\n\tWHERE orig_eff_to_date <> eff_to_date\n),\nUPD_EFF_TO_DATE AS (\n\tSELECT\n\tclaim_party_dim_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FILTRANS\n),\nclaim_party_dim_expire AS (\n\tMERGE INTO claim_party_dim AS T\n\tUSING UPD_EFF_TO_DATE AS S\n\tON T.claim_party_dim_id = S.claim_party_dim_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246509"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905529"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604496"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:45"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:48"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}