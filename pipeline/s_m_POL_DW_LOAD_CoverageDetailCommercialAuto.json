{
    "name": "s_m_POL_DW_LOAD_CoverageDetailCommercialAuto",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailCommercialAuto",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CoverageLimit AS (\n\tSELECT\n\tCoverageLimitType,\n\tPremiumTransactionAKID\n\tFROM (\n\t\tSELECT\r\n\t\tCoverageLimit.CoverageLimitType AS CoverageLimitType,\r\n\t\tCoverageLimitBridge.PremiumTransactionAKID AS PremiumTransactionAKID\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageLimit\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageLimitBridge\r\n\t\tON CoverageLimit.CoverageLimitID=CoverageLimitBridge.CoverageLimitID\r\n\t\tWHERE CoverageLimit.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand CoverageLimit.CoverageLimitType IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit')\r\n\t\tORDER BY PremiumTransactionAKID--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKID ORDER BY CoverageLimitType) = 1\n),\nLKP_FiveColumns AS (\n\tSELECT\n\tlkp_result,\n\tClassCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT ClassCode as ClassCode,\r\n\t\tRatingStateCode as RatingStateCode,\r\n\t\tVehicleTypeSize+'@1'\r\n\t\t       +BusinessUseClass+'@2'\r\n\t\t\t   +SecondaryClass+'@3'\r\n\t\t\t   +FleetType+'@4'\r\n\t\t\t   +SecondaryClassGroup+'@5'\r\n\t\t         +RadiusOfOperation+'@6'\r\n\t\t      as lkp_result\r\n\t\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationCommercialAuto\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,RatingStateCode ORDER BY lkp_result) = 1\n),\nSQ_PMS AS (\n\tSELECT b.pif_4514_stage_id\r\n\t      ,b.sar_major_peril\r\n\t      ,b.sar_code_4\r\n\t\t,a.VehicleClassCode\r\n\t\t,ISNULL(a.VehicleWeight,0) AS VehicleWeight\r\n\t\t,ISNULL(a.VehicleWeight2,0) AS VehicleWeight2\r\n\t\t,a.YearMake\r\n\t\t,a.StatedAmount\r\n\t      ,a.CostNew\r\n\t      ,b.sar_state\r\n\t,a.LastChangeDateCentury\r\n\t,a.LastChangeDateYear\r\n\t,a.LastChangeDateMonth\r\n\t,a.LastChangeDateDay\r\n\t,a.VehicleDeletedIndicator\r\n\t,LTRIM(RTRIM(sar_class_1_4)) + LTRIM(RTRIM(sar_class_5_6)) as ClassCode\r\n\t,LTRIM(sar_exp_month)+'/'+LTRIM(sar_exp_day)+'/'+LTRIM(sar_exp_year) as PremiumTransactionExpirationDate,\r\n\ta.CostNew7\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Pif350Stage a\r\n\tRIGHT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_4514_stage b ON a.PifSymbol = b.pif_symbol\r\n\t\tAND a.PifPolicyNumber = b.pif_policy_number\r\n\t\tAND a.PifModule = b.pif_module\r\n\t\tAND a.STATE = b.sar_state\r\n\t\tAND a.territory = b.sar_loc_prov_territory\r\n\t\tAND a.vehicleclasscode = ltrim(rtrim(b.sar_class_1_4 + b.sar_class_5_6))\r\n\t\tAND a.zippostalcode = b.sar_zip_postal_code\r\n\tAND RIGHT('00'+Convert(varchar,a.UnitNum),3)=b.sar_unit\r\n\tWHERE b.sar_type_bureau IN ('AL','AN','AP') AND b.sar_insurance_line IN ('CA','','GA')\n),\nEXP_MetaData AS (\n\tSELECT\n\tpif_4514_stage_id AS i_pif_4514_stage_id,\n\tsar_major_peril AS i_sar_major_peril,\n\tsar_code_4 AS i_sar_code_4,\n\tVehicleClassCode AS i_VehicleClassCode,\n\tVehicleWeight AS i_VehicleWeight,\n\tVehicleWeight2 AS i_VehicleWeight2,\n\tYearMake AS i_YearMake,\n\tStatedAmount AS i_StatedAmount,\n\tCosetNew AS i_CostNew,\n\tCostNew7 AS i_CostNew7,\n\tLastChangeDateCentury AS i_LastChangeDateCentury,\n\tLastChangeDateYear AS i_LastChangeDateYear,\n\tLastChangeDateMonth AS i_LastChangeDateMonth,\n\tLastchangeDateDay AS i_LastchangeDateDay,\n\tVehicleDeletedIndicator AS i_VehicleDeletedIndicator,\n\tsar_state AS i_sar_state,\n\tClassCode AS i_ClassCode,\n\tPremiumTransactionExpirationDate AS i_PremiumTransactionExpirationDate,\n\t-- *INF*: TO_DATE(i_PremiumTransactionExpirationDate,'MM/DD/YYYY')\n\tTO_DATE(i_PremiumTransactionExpirationDate, 'MM/DD/YYYY') AS v_PTExpDate,\n\t-- *INF*: DECODE(true,\r\n\t-- NOT ISNULL(:LKP.LKP_FiveColumns(i_ClassCode,i_sar_state)),:LKP.LKP_FiveColumns(i_ClassCode,i_sar_state),\r\n\t-- NOT ISNULL(:LKP.LKP_FiveColumns(i_ClassCode,'99')),:LKP.LKP_FiveColumns(i_ClassCode,'99'),\r\n\t-- 'N/A')\n\tDECODE(true,\n\t\tNOT LKP_FIVECOLUMNS_i_ClassCode_i_sar_state.lkp_result IS NULL, LKP_FIVECOLUMNS_i_ClassCode_i_sar_state.lkp_result,\n\t\tNOT LKP_FIVECOLUMNS_i_ClassCode_99.lkp_result IS NULL, LKP_FIVECOLUMNS_i_ClassCode_99.lkp_result,\n\t\t'N/A') AS v_lkp_result,\n\ti_pif_4514_stage_id AS o_pif_4514_stage_id,\n\t-- *INF*: RTRIM(LTRIM(i_VehicleClassCode))\n\tRTRIM(LTRIM(i_VehicleClassCode)) AS o_VehicleClassCode,\n\ti_VehicleWeight AS o_VehicleWeight,\n\ti_VehicleWeight2 AS o_VehicleWeight2,\n\t-- *INF*: IIF(ISNULL(i_CostNew7),i_CostNew,i_CostNew7)\n\tIFF(i_CostNew7 IS NULL, i_CostNew, i_CostNew7) AS v_CostNew,\n\t-- *INF*: --- Logic applied to use CostNew7 field if it is not Null else use CostNew field\r\n\t-- IIF(ISNULL(v_CostNew),0,v_CostNew)\n\tIFF(v_CostNew IS NULL, 0, v_CostNew) AS o_CostNew,\n\t-- *INF*: IIF(IS_DATE(i_LastChangeDateMonth||'/'||i_LastchangeDateDay||'/'||i_LastChangeDateCentury||i_LastChangeDateYear,'MM/DD/YYYY'),\r\n\t-- TO_DATE(i_LastChangeDateMonth||'/'||i_LastchangeDateDay||'/'||i_LastChangeDateCentury||i_LastChangeDateYear,'MM/DD/YYYY'),\r\n\t-- TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))\n\tIFF(IS_DATE(i_LastChangeDateMonth || '/' || i_LastchangeDateDay || '/' || i_LastChangeDateCentury || i_LastChangeDateYear, 'MM/DD/YYYY'), TO_DATE(i_LastChangeDateMonth || '/' || i_LastchangeDateDay || '/' || i_LastChangeDateCentury || i_LastChangeDateYear, 'MM/DD/YYYY'), TO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS')) AS v_VehicleDeleteDate,\n\t-- *INF*: IIF(i_VehicleDeletedIndicator='D',v_VehicleDeleteDate,TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'))\n\tIFF(i_VehicleDeletedIndicator = 'D', v_VehicleDeleteDate, TO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS')) AS o_VehicleDeleteDate,\n\t-- *INF*: LTRIM(RTRIM(i_sar_major_peril))\n\tLTRIM(RTRIM(i_sar_major_peril)) AS o_sar_major_peril,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(i_sar_code_4)),1,1)\n\tSUBSTR(LTRIM(RTRIM(i_sar_code_4)), 1, 1) AS o_sar_code_4_1,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_state)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_state) AS o_sar_state,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@5')+2,instr(v_lkp_result,'@6')-instr(v_lkp_result,'@5')-2)\n\tSUBSTR(v_lkp_result, instr(v_lkp_result, '@5') + 2, instr(v_lkp_result, '@6') - instr(v_lkp_result, '@5') - 2) AS o_RadiusOfOperation,\n\t-- *INF*: SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1)\n\tSUBSTR(v_lkp_result, 1, instr(v_lkp_result, '@1') - 1) AS o_VehicleTypeSize,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2)\n\tSUBSTR(v_lkp_result, instr(v_lkp_result, '@1') + 2, instr(v_lkp_result, '@2') - instr(v_lkp_result, '@1') - 2) AS o_BusinessUseClass,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@2')+2,instr(v_lkp_result,'@3')-instr(v_lkp_result,'@2')-2)\n\tSUBSTR(v_lkp_result, instr(v_lkp_result, '@2') + 2, instr(v_lkp_result, '@3') - instr(v_lkp_result, '@2') - 2) AS o_SecondaryClass,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@3')+2,instr(v_lkp_result,'@4')-instr(v_lkp_result,'@3')-2)\n\tSUBSTR(v_lkp_result, instr(v_lkp_result, '@3') + 2, instr(v_lkp_result, '@4') - instr(v_lkp_result, '@3') - 2) AS o_FleetType,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@4')+2,instr(v_lkp_result,'@5')-instr(v_lkp_result,'@4')-2)\n\tSUBSTR(v_lkp_result, instr(v_lkp_result, '@4') + 2, instr(v_lkp_result, '@5') - instr(v_lkp_result, '@4') - 2) AS o_SecondaryClassGroup\n\tFROM SQ_PMS\n\tLEFT JOIN LKP_FIVECOLUMNS LKP_FIVECOLUMNS_i_ClassCode_i_sar_state\n\tON LKP_FIVECOLUMNS_i_ClassCode_i_sar_state.ClassCode = i_ClassCode\n\tAND LKP_FIVECOLUMNS_i_ClassCode_i_sar_state.RatingStateCode = i_sar_state\n\n\tLEFT JOIN LKP_FIVECOLUMNS LKP_FIVECOLUMNS_i_ClassCode_99\n\tON LKP_FIVECOLUMNS_i_ClassCode_99.ClassCode = i_ClassCode\n\tAND LKP_FIVECOLUMNS_i_ClassCode_99.RatingStateCode = '99'\n\n),\nLKP_WorkPremiumTransacion_StatisticalCoverageHashKey AS (\n\tSELECT\n\tStatisticalCoverageHashKey,\n\tPremiumTransactionStageId\n\tFROM (\n\t\tselect MAX(t1.StatisticalCoverageHashKey) AS StatisticalCoverageHashKey,PremiumTransactionStageId AS PremiumTransactionStageId from (select SC.StatisticalCoverageHashKey AS StatisticalCoverageHashKey,WPT.PremiumTransactionStageId AS PremiumTransactionStageId from @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT ON SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID AND SC.CurrentSnapshotFlag=1 AND PT.CurrentSnapshotFlag=1 AND SC.SourceSystemID='PMS'\r\n\t\tAND PT.SourceSystemID='PMS' INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransaction WPT ON PT.PremiumTransactionAKID=WPT.PremiumTransactionAKID          AND WPT.SourceSystemID='PMS')t1 group by t1.PremiumTransactionStageId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionStageId ORDER BY StatisticalCoverageHashKey) = 1\n),\nLKP_WorkPremiumTransaction_PremiumTransactionID AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionStageId\n\tFROM (\n\t\tselect \r\n\t\tMAX(t1.PremiumTransactionID) AS PremiumTransactionID,\r\n\t\tMAX(t1.PremiumTransactionAKID) AS PremiumTransactionAKID,\r\n\t\tPremiumTransactionStageId AS PremiumTransactionStageId\r\n\t\tfrom (\r\n\t\tselect PT.PremiumTransactionID AS PremiumTransactionID,PT.PremiumTransactionAKID,WPT.PremiumTransactionStageId AS PremiumTransactionStageId\r\n\t\t  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\t  INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransaction WPT\r\n\t\t  ON PT.PremiumTransactionAKID = WPT.PremiumTransactionAKId AND PT.CurrentSnapshotFlag=1 AND PT.SourceSystemID='PMS' AND WPT.SourceSystemID='PMS')t1\r\n\t\t  group by t1.PremiumTransactionStageId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionStageId ORDER BY PremiumTransactionID) = 1\n),\nFIL_NULL_PremiumTransactionID AS (\n\tSELECT\n\tLKP_WorkPremiumTransaction_PremiumTransactionID.PremiumTransactionID, \n\tLKP_WorkPremiumTransacion_StatisticalCoverageHashKey.StatisticalCoverageHashKey, \n\tEXP_MetaData.o_VehicleClassCode AS VehicleClassCode, \n\tEXP_MetaData.o_VehicleWeight AS VehicleWeight, \n\tEXP_MetaData.o_VehicleWeight2 AS VehicleWeight2, \n\tEXP_MetaData.o_CostNew AS CostNew, \n\tEXP_MetaData.o_VehicleDeleteDate AS VehicleDeleteDate, \n\tLKP_WorkPremiumTransaction_PremiumTransactionID.PremiumTransactionAKID, \n\tEXP_MetaData.o_sar_major_peril AS sar_major_peril, \n\tEXP_MetaData.o_sar_code_4_1 AS sar_code_4_1, \n\tEXP_MetaData.o_sar_state AS sar_state, \n\tEXP_MetaData.o_RadiusOfOperation AS RadiusOfOperation, \n\tEXP_MetaData.o_VehicleTypeSize AS VehicleTypeSize, \n\tEXP_MetaData.o_BusinessUseClass AS BusinessUseClass, \n\tEXP_MetaData.o_SecondaryClass AS SecondaryClass, \n\tEXP_MetaData.o_FleetType AS FleetType, \n\tEXP_MetaData.o_SecondaryClassGroup AS SecondaryClassGroup\n\tFROM EXP_MetaData\n\tLEFT JOIN LKP_WorkPremiumTransacion_StatisticalCoverageHashKey\n\tON LKP_WorkPremiumTransacion_StatisticalCoverageHashKey.PremiumTransactionStageId = EXP_MetaData.o_pif_4514_stage_id\n\tLEFT JOIN LKP_WorkPremiumTransaction_PremiumTransactionID\n\tON LKP_WorkPremiumTransaction_PremiumTransactionID.PremiumTransactionStageId = EXP_MetaData.o_pif_4514_stage_id\n\tWHERE NOT ISNULL(PremiumTransactionID)\n),\nEXP_CoverageDetailCommercialAuto AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tStatisticalCoverageHashKey AS i_StatisticalCoverageHashKey,\n\tVehicleClassCode AS i_VehicleClassCode,\n\tVehicleWeight AS i_VehicleWeight,\n\tVehicleWeight2 AS i_VehicleWeight2,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tsar_major_peril AS i_sar_major_peril,\n\tsar_code_4_1 AS i_sar_code_4_1,\n\tsar_state AS i_sar_state,\n\tVehicleTypeSize AS i_CommercialAutoVehicleTypeSize,\n\tBusinessUseClass AS i_CommercialAutoBusinessUseClass,\n\tSecondaryClass AS i_SecondaryClass,\n\tFleetType AS i_FleetType,\n\tSecondaryClassGroup AS i_SecondaryClassGroup,\n\tYearMake,\n\tStatedAmount,\n\t-- *INF*: TO_DECIMAL(TO_CHAR(i_VehicleWeight) || TO_CHAR(i_VehicleWeight2))\n\tTO_DECIMAL(TO_CHAR(i_VehicleWeight) || TO_CHAR(i_VehicleWeight2)) AS v_VehicleWeight,\n\t-- *INF*: SUBSTR(i_VehicleClassCode,1,3)\n\tSUBSTR(i_VehicleClassCode, 1, 3) AS v_VehicleClassCode_1_3,\n\t-- *INF*: SUBSTR(i_VehicleClassCode,1,4)\n\tSUBSTR(i_VehicleClassCode, 1, 4) AS v_VehicleClassCode_1_4,\n\t-- *INF*: SUBSTR(i_VehicleClassCode,4,2)\n\tSUBSTR(i_VehicleClassCode, 4, 2) AS v_VehicleClassCode_4_5,\n\t-- *INF*: SUBSTR(i_VehicleClassCode,3,1)\n\tSUBSTR(i_VehicleClassCode, 3, 1) AS v_VehicleClassCode_3_1,\n\t-- *INF*: :LKP.LKP_COVERAGELIMIT(i_PremiumTransactionAKID)\n\tLKP_COVERAGELIMIT_i_PremiumTransactionAKID.CoverageLimitType AS v_CoverageLimitType,\n\tCostNew,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: IIF(ISNULL(i_StatisticalCoverageHashKey),'N/A',i_StatisticalCoverageHashKey)\n\tIFF(i_StatisticalCoverageHashKey IS NULL, 'N/A', i_StatisticalCoverageHashKey) AS o_StatisticalCoverageHashKey,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_VehicleClassCode_1_3  >=  '011' AND v_VehicleClassCode_1_3 <=  '236' AND v_VehicleWeight <= 10000,'Light Trucks',\r\n\t-- v_VehicleClassCode_1_3  >=  '011' AND v_VehicleClassCode_1_3 <=  '236' AND v_VehicleWeight >= 10001 AND v_VehicleWeight <= 20000,'Medium Trucks',\r\n\t-- v_VehicleClassCode_1_3 >= '311' AND v_VehicleClassCode_1_3 <= '366','Heavy Trucks',\r\n\t-- v_VehicleClassCode_1_3 >= '401' AND v_VehicleClassCode_1_3 <= '506' AND v_VehicleWeight > 45000,'Extra Heavy Trucks',\r\n\t-- v_VehicleClassCode_1_3 >= '401' AND v_VehicleClassCode_1_3 <= '506' AND v_VehicleWeight < 45000,'Extra Heavy Truck Tractors',\r\n\t-- v_VehicleClassCode_1_3 >= '671' AND v_VehicleClassCode_1_3 <= '676','Semitrailers',\r\n\t-- v_VehicleClassCode_1_3 >= '681' AND v_VehicleClassCode_1_3 <= '686','Trailers',\r\n\t-- v_VehicleClassCode_1_3 >= '691' AND v_VehicleClassCode_1_3 <= '696','ServiceUtilityTrailers',\r\n\t-- v_VehicleClassCode_1_3='707','GarageKeepers',\r\n\t-- \r\n\t-- in(v_VehicleClassCode_1_4, '6601','6602','6603','6604','6610','6611','6614','6619','6620', '6670','6671','7040','7059','7060','7070','7072','7219','7480','7721' ,'7800','7802','7804','7852','7909','7912','7919','7923','7929','7960','7961','7962','7963','7964','7970','7971','7985','7986','7993','7996','8001','8002','9020','9450','9461','9462','9463','9625','9771','9999','9920','73998'),'Special Class',\r\n\t-- \r\n\t-- in(v_VehicleClassCode_1_4, '7399', '7908', '7911', '7915', '7922','7926','7927'),'PrivatePassenger',\r\n\t-- \r\n\t-- v_VehicleClassCode_1_4 = '7398','Fleet',\r\n\t-- v_VehicleClassCode_1_4 = '7391','All Other NonFleet',\r\n\t-- v_VehicleClassCode_1_4 = '7381','NO <5 Yrs-Not Work',\r\n\t-- v_VehicleClassCode_1_4 = '7382','NO <5 Yrs-Less 15',\r\n\t-- v_VehicleClassCode_1_4 = '7383','NO <5 Yrs-More 15',\r\n\t-- v_VehicleClassCode_1_4 = '7386','Not Owner-Not Work',\r\n\t-- v_VehicleClassCode_1_4 = '7387','Not Owner-Less 15',\r\n\t-- v_VehicleClassCode_1_4 = '7388','Not Owner-More 15',\r\n\t-- v_VehicleClassCode_1_4 = '7392','Owner-Not Work',\r\n\t-- v_VehicleClassCode_1_4 = '7393','Owner-Less 15',\r\n\t-- v_VehicleClassCode_1_4 = '7394','Owner-More 15',\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\tv_VehicleClassCode_1_3 >= '011' AND v_VehicleClassCode_1_3 <= '236' AND v_VehicleWeight <= 10000, 'Light Trucks',\n\t\tv_VehicleClassCode_1_3 >= '011' AND v_VehicleClassCode_1_3 <= '236' AND v_VehicleWeight >= 10001 AND v_VehicleWeight <= 20000, 'Medium Trucks',\n\t\tv_VehicleClassCode_1_3 >= '311' AND v_VehicleClassCode_1_3 <= '366', 'Heavy Trucks',\n\t\tv_VehicleClassCode_1_3 >= '401' AND v_VehicleClassCode_1_3 <= '506' AND v_VehicleWeight > 45000, 'Extra Heavy Trucks',\n\t\tv_VehicleClassCode_1_3 >= '401' AND v_VehicleClassCode_1_3 <= '506' AND v_VehicleWeight < 45000, 'Extra Heavy Truck Tractors',\n\t\tv_VehicleClassCode_1_3 >= '671' AND v_VehicleClassCode_1_3 <= '676', 'Semitrailers',\n\t\tv_VehicleClassCode_1_3 >= '681' AND v_VehicleClassCode_1_3 <= '686', 'Trailers',\n\t\tv_VehicleClassCode_1_3 >= '691' AND v_VehicleClassCode_1_3 <= '696', 'ServiceUtilityTrailers',\n\t\tv_VehicleClassCode_1_3 = '707', 'GarageKeepers',\n\t\tin(v_VehicleClassCode_1_4, '6601', '6602', '6603', '6604', '6610', '6611', '6614', '6619', '6620', '6670', '6671', '7040', '7059', '7060', '7070', '7072', '7219', '7480', '7721', '7800', '7802', '7804', '7852', '7909', '7912', '7919', '7923', '7929', '7960', '7961', '7962', '7963', '7964', '7970', '7971', '7985', '7986', '7993', '7996', '8001', '8002', '9020', '9450', '9461', '9462', '9463', '9625', '9771', '9999', '9920', '73998'), 'Special Class',\n\t\tin(v_VehicleClassCode_1_4, '7399', '7908', '7911', '7915', '7922', '7926', '7927'), 'PrivatePassenger',\n\t\tv_VehicleClassCode_1_4 = '7398', 'Fleet',\n\t\tv_VehicleClassCode_1_4 = '7391', 'All Other NonFleet',\n\t\tv_VehicleClassCode_1_4 = '7381', 'NO <5 Yrs-Not Work',\n\t\tv_VehicleClassCode_1_4 = '7382', 'NO <5 Yrs-Less 15',\n\t\tv_VehicleClassCode_1_4 = '7383', 'NO <5 Yrs-More 15',\n\t\tv_VehicleClassCode_1_4 = '7386', 'Not Owner-Not Work',\n\t\tv_VehicleClassCode_1_4 = '7387', 'Not Owner-Less 15',\n\t\tv_VehicleClassCode_1_4 = '7388', 'Not Owner-More 15',\n\t\tv_VehicleClassCode_1_4 = '7392', 'Owner-Not Work',\n\t\tv_VehicleClassCode_1_4 = '7393', 'Owner-Less 15',\n\t\tv_VehicleClassCode_1_4 = '7394', 'Owner-More 15',\n\t\t'N/A') AS o_VehicleType,\n\t-- *INF*: IIF(LENGTH(i_RadiusOfOperation)>0,i_RadiusOfOperation,'N/A')\n\tIFF(LENGTH(i_RadiusOfOperation) > 0, i_RadiusOfOperation, 'N/A') AS o_RadiusOfOperation,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(v_VehicleClassCode_4_5,'02','03','21','22','23','24','25','26','27','28','29'),'Truckers',\r\n\t-- IN(v_VehicleClassCode_4_5,'31','32','33','34','35','36','37','38','39'),'Food Delivery',\r\n\t-- IN(v_VehicleClassCode_4_5,'41','42','43','44','45','46','47','48','49'),'Special Delivery',\r\n\t-- IN(v_VehicleClassCode_4_5,'51','52','53','54','55','56','57','58','59'),'Waste',\r\n\t-- IN(v_VehicleClassCode_4_5,'61','62','63','64','65','66','67','68','69'),'Farmers',\r\n\t-- IN(v_VehicleClassCode_4_5,'71','72','73','74','75','76','77','78','79'),'Dump/Transit',\r\n\t-- IN(v_VehicleClassCode_4_5,'81','82','83','84','85','86','87','88','89'),'Contractors',\r\n\t-- IN(v_VehicleClassCode_4_5,'93','94','95','96','97'),'Van/Bus',\r\n\t-- v_VehicleClassCode_4_5 = '91','Logging',\r\n\t-- IN(v_VehicleClassCode_4_5,'92','98','99'),'Other',\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\t\tIN(v_VehicleClassCode_4_5, '02', '03', '21', '22', '23', '24', '25', '26', '27', '28', '29'), 'Truckers',\n\t\tIN(v_VehicleClassCode_4_5, '31', '32', '33', '34', '35', '36', '37', '38', '39'), 'Food Delivery',\n\t\tIN(v_VehicleClassCode_4_5, '41', '42', '43', '44', '45', '46', '47', '48', '49'), 'Special Delivery',\n\t\tIN(v_VehicleClassCode_4_5, '51', '52', '53', '54', '55', '56', '57', '58', '59'), 'Waste',\n\t\tIN(v_VehicleClassCode_4_5, '61', '62', '63', '64', '65', '66', '67', '68', '69'), 'Farmers',\n\t\tIN(v_VehicleClassCode_4_5, '71', '72', '73', '74', '75', '76', '77', '78', '79'), 'Dump/Transit',\n\t\tIN(v_VehicleClassCode_4_5, '81', '82', '83', '84', '85', '86', '87', '88', '89'), 'Contractors',\n\t\tIN(v_VehicleClassCode_4_5, '93', '94', '95', '96', '97'), 'Van/Bus',\n\t\tv_VehicleClassCode_4_5 = '91', 'Logging',\n\t\tIN(v_VehicleClassCode_4_5, '92', '98', '99'), 'Other',\n\t\t'N/A') AS o_SecondaryVehicleType,\n\t-- *INF*: IIF(IN(v_VehicleClassCode_4_5,'71','72','73','74','75','76','77','78','79'),'1','0')\n\tIFF(IN(v_VehicleClassCode_4_5, '71', '72', '73', '74', '75', '76', '77', '78', '79'), '1', '0') AS o_UsedInDumpingIndicator,\n\tVehicleDeleteDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_sar_state='16' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1='1','671',\r\n\t-- i_sar_state='16' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1='1','672',\r\n\t-- i_sar_state='16' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1='0','681',\r\n\t-- i_sar_state='16' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1='0','682',\r\n\t-- i_sar_state='15' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1='0','681',\r\n\t-- i_sar_state='15' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1='0','682',\r\n\t-- i_sar_state='22' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionBasicLimit' AND IN(i_sar_code_4_1,'1','3'),'671',\r\n\t-- i_sar_state='22' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1='0','681',\r\n\t-- i_sar_state='22' AND i_sar_major_peril='130' AND v_CoverageLimitType='PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1='0','695',\r\n\t-- i_sar_state='21' AND i_sar_major_peril='130' AND IN(i_sar_code_4_1,'1','3'),'671',\r\n\t-- i_sar_state='21' AND i_sar_major_peril='130' AND i_sar_code_4_1='0','681',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_sar_state = '16' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1 = '1', '671',\n\t\ti_sar_state = '16' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1 = '1', '672',\n\t\ti_sar_state = '16' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1 = '0', '681',\n\t\ti_sar_state = '16' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1 = '0', '682',\n\t\ti_sar_state = '15' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1 = '0', '681',\n\t\ti_sar_state = '15' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1 = '0', '682',\n\t\ti_sar_state = '22' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionBasicLimit' AND IN(i_sar_code_4_1, '1', '3'), '671',\n\t\ti_sar_state = '22' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionBasicLimit' AND i_sar_code_4_1 = '0', '681',\n\t\ti_sar_state = '22' AND i_sar_major_peril = '130' AND v_CoverageLimitType = 'PersonalInjuryProtectionExcessLimit' AND i_sar_code_4_1 = '0', '695',\n\t\ti_sar_state = '21' AND i_sar_major_peril = '130' AND IN(i_sar_code_4_1, '1', '3'), '671',\n\t\ti_sar_state = '21' AND i_sar_major_peril = '130' AND i_sar_code_4_1 = '0', '681',\n\t\t'N/A') AS o_PIPBureaucoverageCode,\n\t-- *INF*: IIF(LENGTH(i_CommercialAutoVehicleTypeSize)>0,i_CommercialAutoVehicleTypeSize,'N/A')\n\tIFF(LENGTH(i_CommercialAutoVehicleTypeSize) > 0, i_CommercialAutoVehicleTypeSize, 'N/A') AS o_CommercialAutoVehicleTypeSize,\n\t-- *INF*: IIF(LENGTH(i_CommercialAutoBusinessUseClass)>0,i_CommercialAutoBusinessUseClass,'N/A')\n\tIFF(LENGTH(i_CommercialAutoBusinessUseClass) > 0, i_CommercialAutoBusinessUseClass, 'N/A') AS o_CommercialAutoBusinessUseClass,\n\t-- *INF*: IIF(LENGTH(i_SecondaryClass)>0,i_SecondaryClass,'N/A')\n\tIFF(LENGTH(i_SecondaryClass) > 0, i_SecondaryClass, 'N/A') AS o_SecondaryClass,\n\t-- *INF*: IIF(LENGTH(i_FleetType)>0,i_FleetType,'N/A')\n\tIFF(LENGTH(i_FleetType) > 0, i_FleetType, 'N/A') AS o_FleetType,\n\t-- *INF*: IIF(LENGTH(i_SecondaryClassGroup)>0,i_SecondaryClassGroup,'N/A')\r\n\t-- \n\tIFF(LENGTH(i_SecondaryClassGroup) > 0, i_SecondaryClassGroup, 'N/A') AS o_SecondaryClassGroup\n\tFROM FIL_NULL_PremiumTransactionID\n\tLEFT JOIN LKP_COVERAGELIMIT LKP_COVERAGELIMIT_i_PremiumTransactionAKID\n\tON LKP_COVERAGELIMIT_i_PremiumTransactionAKID.PremiumTransactionAKID = i_PremiumTransactionAKID\n\n),\nLKP_CoverageDetailCommercialAuto AS (\n\tSELECT\n\tPremiumTransactionID,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tCoverageGuid,\n\tVehicleGroupCode,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tVIN,\n\tVehicleMake,\n\tVehicleModel,\n\tVehicleNumber,\n\tCompositeRatedFlag,\n\tTerminalZoneCode,\n\tVehicleType,\n\tPIPBureauCoverageCode,\n\tRetroactiveDate,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tIncludeUIM,\n\tCoordinationOfBenefits,\n\tMedicalExpensesOption,\n\tCoveredByWorkersCompensationFlag\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tCurrentSnapshotFlag,\n\t\t\tAuditID,\n\t\t\tEffectiveDate,\n\t\t\tExpirationDate,\n\t\t\tSourceSystemID,\n\t\t\tCreatedDate,\n\t\t\tModifiedDate,\n\t\t\tCoverageGuid,\n\t\t\tVehicleGroupCode,\n\t\t\tRadiusOfOperation,\n\t\t\tSecondaryVehicleType,\n\t\t\tUsedInDumpingIndicator,\n\t\t\tVehicleYear,\n\t\t\tStatedAmount,\n\t\t\tCostNew,\n\t\t\tVehicleDeleteDate,\n\t\t\tVIN,\n\t\t\tVehicleMake,\n\t\t\tVehicleModel,\n\t\t\tVehicleNumber,\n\t\t\tCompositeRatedFlag,\n\t\t\tTerminalZoneCode,\n\t\t\tVehicleType,\n\t\t\tPIPBureauCoverageCode,\n\t\t\tRetroactiveDate,\n\t\t\tVehicleTypeSize,\n\t\t\tBusinessUseClass,\n\t\t\tSecondaryClass,\n\t\t\tFleetType,\n\t\t\tSecondaryClassGroup,\n\t\t\tIncludeUIM,\n\t\t\tCoordinationOfBenefits,\n\t\t\tMedicalExpensesOption,\n\t\t\tCoveredByWorkersCompensationFlag\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialAuto\n\t\tWHERE SourceSystemID='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_CoverageDetailCommercialAuto.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailCommercialAuto.VehicleGroupCode AS lkp_VehicleType,\n\tLKP_CoverageDetailCommercialAuto.RadiusOfOperation AS lkp_RadiusOfOperation,\n\tLKP_CoverageDetailCommercialAuto.SecondaryVehicleType AS lkp_SecondaryVehicleType,\n\tLKP_CoverageDetailCommercialAuto.UsedInDumpingIndicator AS lkp_UsedInDumpingIndicator,\n\tLKP_CoverageDetailCommercialAuto.VehicleYear AS lkp_VehicleYear,\n\tLKP_CoverageDetailCommercialAuto.StatedAmount AS lkp_StatedAmount,\n\tLKP_CoverageDetailCommercialAuto.CostNew AS lkp_CostNew,\n\tLKP_CoverageDetailCommercialAuto.VehicleDeleteDate AS lkp_VehicleDeleteDate,\n\tLKP_CoverageDetailCommercialAuto.VIN AS lkp_VIN,\n\t-- *INF*: IIF(ISNULL(lkp_VIN), 'TBD', lkp_VIN)\n\tIFF(lkp_VIN IS NULL, 'TBD', lkp_VIN) AS v_lkp_VIN,\n\tLKP_CoverageDetailCommercialAuto.VehicleMake AS lkp_VehicleMake,\n\t-- *INF*: IIF(ISNULL(lkp_VehicleMake), 'TBD', lkp_VehicleMake)\n\tIFF(lkp_VehicleMake IS NULL, 'TBD', lkp_VehicleMake) AS v_lkp_VehicleMake,\n\tLKP_CoverageDetailCommercialAuto.VehicleModel AS lkp_VehicleModel,\n\t-- *INF*: IIF(ISNULL(lkp_VehicleModel), 'TBD', lkp_VehicleModel)\n\tIFF(lkp_VehicleModel IS NULL, 'TBD', lkp_VehicleModel) AS v_lkp_VehicleModel,\n\tLKP_CoverageDetailCommercialAuto.VehicleNumber AS lkp_VehicleNumber,\n\t-- *INF*: IIF(ISNULL(lkp_VehicleNumber), -1, lkp_VehicleNumber)\n\tIFF(lkp_VehicleNumber IS NULL, - 1, lkp_VehicleNumber) AS v_lkp_VehicleNumber,\n\tLKP_CoverageDetailCommercialAuto.PIPBureauCoverageCode AS lkp_PIPBureaucoverageCode,\n\tLKP_CoverageDetailCommercialAuto.VehicleTypeSize AS lkp_CommercialAutoVehicleTypeSize,\n\tLKP_CoverageDetailCommercialAuto.BusinessUseClass AS lkp_CommercialAutoBusinessUseClass,\n\tLKP_CoverageDetailCommercialAuto.SecondaryClass AS lkp_SecondaryClass,\n\tLKP_CoverageDetailCommercialAuto.FleetType AS lkp_FleetType,\n\tLKP_CoverageDetailCommercialAuto.SecondaryClassGroup AS lkp_SecondaryClassGroup,\n\tLKP_CoverageDetailCommercialAuto.IncludeUIM AS lkp_IncludeUIM,\n\tLKP_CoverageDetailCommercialAuto.CoordinationOfBenefits AS lkp_CoordinationOfBenefits,\n\tLKP_CoverageDetailCommercialAuto.MedicalExpensesOption AS lkp_MedicalExpensesOption,\n\tLKP_CoverageDetailCommercialAuto.CoveredByWorkersCompensationFlag AS lkp_CoveredByWorkersCompensationFlag,\n\t-- *INF*: IIF(ISNULL(lkp_PIPBureaucoverageCode),'N/A',lkp_PIPBureaucoverageCode)\n\tIFF(lkp_PIPBureaucoverageCode IS NULL, 'N/A', lkp_PIPBureaucoverageCode) AS v_lkp_PIPBureaucoverageCode,\n\tEXP_CoverageDetailCommercialAuto.CostNew AS i_CostNew,\n\tEXP_CoverageDetailCommercialAuto.o_PremiumTransactionID AS i_PremiumTransactionID,\n\tEXP_CoverageDetailCommercialAuto.o_StatisticalCoverageHashKey AS i_StatisticalCoverageHashKey,\n\tEXP_CoverageDetailCommercialAuto.o_VehicleType AS i_VehicleType,\n\tEXP_CoverageDetailCommercialAuto.o_RadiusOfOperation AS i_RadiusOfOperation,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryVehicleType AS i_SecondaryVehicleType,\n\tEXP_CoverageDetailCommercialAuto.o_UsedInDumpingIndicator AS i_UsedInDumpingIndicator,\n\tEXP_CoverageDetailCommercialAuto.YearMake AS i_YearMake,\n\tEXP_CoverageDetailCommercialAuto.StatedAmount AS i_StatedAmount,\n\tEXP_CoverageDetailCommercialAuto.VehicleDeleteDate AS i_VehicleDeleteDate,\n\tEXP_CoverageDetailCommercialAuto.o_PIPBureaucoverageCode AS i_PIPBureaucoverageCode,\n\tEXP_CoverageDetailCommercialAuto.o_CommercialAutoVehicleTypeSize AS i_CommercialAutoVehicleTypeSize,\n\tEXP_CoverageDetailCommercialAuto.o_CommercialAutoBusinessUseClass AS i_CommercialAutoBusinessUseClass,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryClass AS i_SecondaryClass,\n\tEXP_CoverageDetailCommercialAuto.o_FleetType AS i_FleetType,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryClassGroup AS i_SecondaryClassGroup,\n\t-- *INF*: RTRIM(LTRIM(lkp_VehicleType))\n\tRTRIM(LTRIM(lkp_VehicleType)) AS v_lkp_VehicleType,\n\t-- *INF*: RTRIM(LTRIM(lkp_RadiusOfOperation))\n\tRTRIM(LTRIM(lkp_RadiusOfOperation)) AS v_lkp_RadiusOfOperation,\n\t-- *INF*: RTRIM(LTRIM(lkp_SecondaryVehicleType))\n\tRTRIM(LTRIM(lkp_SecondaryVehicleType)) AS v_lkp_SecondaryVehicleType,\n\t-- *INF*: IIF(RTRIM(LTRIM(lkp_UsedInDumpingIndicator))='T','1','0')\n\tIFF(RTRIM(LTRIM(lkp_UsedInDumpingIndicator)) = 'T', '1', '0') AS v_lkp_UsedInDumpingIndicator,\n\t-- *INF*: SUBSTR('0000' || IIF(ISNULL(i_YearMake), '0000', TO_CHAR(i_YearMake)), -4, 4)\n\tSUBSTR('0000' || IFF(i_YearMake IS NULL, '0000', TO_CHAR(i_YearMake)), - 4, 4) AS v_YearMake,\n\t-- *INF*: IIF(ISNULL(i_StatedAmount), '0', TO_CHAR(i_StatedAmount))\n\tIFF(i_StatedAmount IS NULL, '0', TO_CHAR(i_StatedAmount)) AS v_StatedAmount,\n\t'N/A' AS v_VIN,\n\tv_VIN AS o_VIN,\n\t'N/A' AS v_VehicleMake,\n\tv_VehicleMake AS o_VehicleMake,\n\t'N/A' AS v_VehicleModel,\n\tv_VehicleModel AS o_VehicleModel,\n\t0 AS v_VehicleNumber,\n\tv_VehicleNumber AS o_VehicleNumber,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\ti_StatisticalCoverageHashKey AS o_StatisticalCoverageHashKey,\n\ti_VehicleType AS o_VehicleGroupCode,\n\ti_RadiusOfOperation AS o_RadiusOfOperation,\n\ti_SecondaryVehicleType AS o_SecondaryVehicleType,\n\ti_UsedInDumpingIndicator AS o_UsedInDumpingIndicator,\n\tv_YearMake AS o_YearMake,\n\tv_StatedAmount AS o_StatedAmount,\n\ti_CostNew AS o_CostNew,\n\ti_VehicleDeleteDate AS o_VehicleDeleteDate,\n\t0 AS o_CompositeRatedFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_PremiumTransactionID),\r\n\t-- 'NEW',\r\n\t-- v_lkp_VehicleType != i_VehicleType OR v_lkp_RadiusOfOperation !=i_RadiusOfOperation OR v_lkp_SecondaryVehicleType != i_SecondaryVehicleType OR v_lkp_UsedInDumpingIndicator  != i_UsedInDumpingIndicator OR v_YearMake != lkp_VehicleYear OR v_StatedAmount != lkp_StatedAmount \r\n\t-- OR lkp_CostNew != i_CostNew\r\n\t-- OR lkp_VehicleDeleteDate != i_VehicleDeleteDate\r\n\t-- OR v_lkp_VIN != v_VIN\r\n\t-- OR v_lkp_VehicleMake != v_VehicleMake\r\n\t-- OR v_lkp_VehicleModel != v_VehicleModel\r\n\t-- OR v_lkp_VehicleNumber != v_VehicleNumber\r\n\t-- OR v_lkp_PIPBureaucoverageCode<>i_PIPBureaucoverageCode\r\n\t-- OR lkp_CommercialAutoVehicleTypeSize<>i_CommercialAutoVehicleTypeSize\r\n\t-- OR lkp_CommercialAutoBusinessUseClass<>i_CommercialAutoBusinessUseClass\r\n\t-- OR lkp_SecondaryClass<>i_SecondaryClass\r\n\t-- OR lkp_FleetType<>i_FleetType\r\n\t-- OR lkp_SecondaryClassGroup<>i_SecondaryClassGroup\r\n\t-- OR lkp_IncludeUIM<>v_IncludeUIM,\r\n\t-- 'UPDATE',\r\n\t-- 'NOCHANGE')\n\tDECODE(TRUE,\n\t\tlkp_PremiumTransactionID IS NULL, 'NEW',\n\t\tv_lkp_VehicleType != i_VehicleType OR v_lkp_RadiusOfOperation != i_RadiusOfOperation OR v_lkp_SecondaryVehicleType != i_SecondaryVehicleType OR v_lkp_UsedInDumpingIndicator != i_UsedInDumpingIndicator OR v_YearMake != lkp_VehicleYear OR v_StatedAmount != lkp_StatedAmount OR lkp_CostNew != i_CostNew OR lkp_VehicleDeleteDate != i_VehicleDeleteDate OR v_lkp_VIN != v_VIN OR v_lkp_VehicleMake != v_VehicleMake OR v_lkp_VehicleModel != v_VehicleModel OR v_lkp_VehicleNumber != v_VehicleNumber OR v_lkp_PIPBureaucoverageCode <> i_PIPBureaucoverageCode OR lkp_CommercialAutoVehicleTypeSize <> i_CommercialAutoVehicleTypeSize OR lkp_CommercialAutoBusinessUseClass <> i_CommercialAutoBusinessUseClass OR lkp_SecondaryClass <> i_SecondaryClass OR lkp_FleetType <> i_FleetType OR lkp_SecondaryClassGroup <> i_SecondaryClassGroup OR lkp_IncludeUIM <> v_IncludeUIM, 'UPDATE',\n\t\t'NOCHANGE') AS o_ChangeFlag,\n\t'N/A' AS o_TerminalZoneCode,\n\t'N/A' AS o_VehicleType,\n\ti_PIPBureaucoverageCode AS o_PIPBureaucoverageCode,\n\ti_CommercialAutoVehicleTypeSize AS o_CommercialAutoVehicleTypeSize,\n\ti_CommercialAutoBusinessUseClass AS o_CommercialAutoBusinessUseClass,\n\ti_SecondaryClass AS o_SecondaryClass,\n\ti_FleetType AS o_FleetType,\n\ti_SecondaryClassGroup AS o_SecondaryClassGroup,\n\t'N/A' AS v_IncludeUIM,\n\tv_IncludeUIM AS o_IncludeUIM,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AS RetroactiveDate,\n\t'N/A' AS o_CoordinationOfBenefits,\n\t'N/A' AS o_MedicalExpensesOption,\n\t0 AS o_CoveredByWorkersCompensationFlag,\n\t'N/A' AS o_SubjectToNoFault,\n\t-1 AS o_AdditionalLimitKS,\n\t-1 AS o_AdditionalLimitKY,\n\t-1 AS o_AdditionalLimitMN,\n\t'N/A' AS o_RatingZoneCode,\n\t0 AS o_ReplacementCost,\n\t0 AS o_FullGlassIndicator,\n\t0 AS o_HistoricVehicleIndicator\n\tFROM EXP_CoverageDetailCommercialAuto\n\tLEFT JOIN LKP_CoverageDetailCommercialAuto\n\tON LKP_CoverageDetailCommercialAuto.PremiumTransactionID = EXP_CoverageDetailCommercialAuto.o_PremiumTransactionID\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\to_PremiumTransactionID AS PremiumTransactionID,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_StatisticalCoverageHashKey AS StatisticalCoverageHashKey,\n\to_VehicleGroupCode AS VehicleGroupCode,\n\to_RadiusOfOperation AS RadiusOfOperation,\n\to_SecondaryVehicleType AS SecondaryVehicleType,\n\to_UsedInDumpingIndicator AS UsedInDumpingIndicator,\n\to_YearMake AS YearMake,\n\to_StatedAmount AS StatedAmount,\n\to_CostNew AS CostNew,\n\to_VehicleDeleteDate AS VehicleDeleteDate,\n\to_ChangeFlag AS ChangeFlag,\n\to_VIN,\n\to_VehicleMake,\n\to_VehicleModel,\n\to_VehicleNumber,\n\to_CompositeRatedFlag,\n\to_TerminalZoneCode,\n\to_VehicleType AS VehicleType,\n\to_PIPBureaucoverageCode AS PIPBureaucoverageCode,\n\to_CommercialAutoVehicleTypeSize AS CommercialAutoVehicleTypeSize,\n\to_CommercialAutoBusinessUseClass AS CommercialAutoBusinessUseClass,\n\to_SecondaryClass AS SecondaryClass,\n\to_FleetType AS FleetType,\n\to_SecondaryClassGroup AS SecondaryClassGroup,\n\to_IncludeUIM AS IncludeUIM,\n\tRetroactiveDate,\n\to_CoordinationOfBenefits,\n\to_MedicalExpensesOption,\n\to_CoveredByWorkersCompensationFlag,\n\to_SubjectToNoFault,\n\to_AdditionalLimitKS,\n\to_AdditionalLimitKY,\n\to_AdditionalLimitMN,\n\to_RatingZoneCode,\n\to_ReplacementCost,\n\to_FullGlassIndicator,\n\to_HistoricVehicleIndicator\n\tFROM EXP_DetectChanges\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='NEW'),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='UPDATE'),\nUPD_Exists AS (\n\tSELECT\n\tPremiumTransactionID, \n\tModifiedDate, \n\tStatisticalCoverageHashKey, \n\tVehicleGroupCode, \n\tRadiusOfOperation, \n\tSecondaryVehicleType, \n\tUsedInDumpingIndicator, \n\tYearMake, \n\tStatedAmount, \n\tCostNew, \n\tVehicleDeleteDate, \n\to_VIN AS VIN, \n\to_VehicleMake AS VehicleMake, \n\to_VehicleModel AS VehicleModel, \n\to_VehicleNumber AS VehicleNumber, \n\to_CompositeRatedFlag AS CompositeRatedFlag, \n\to_TerminalZoneCode AS TerminalZoneCode, \n\tVehicleType, \n\tPIPBureaucoverageCode, \n\tCommercialAutoVehicleTypeSize, \n\tCommercialAutoBusinessUseClass, \n\tSecondaryClass, \n\tFleetType, \n\tSecondaryClassGroup, \n\tRetroactiveDate AS RetroactiveDate1, \n\tIncludeUIM AS IncludeUIM3, \n\to_CoordinationOfBenefits AS o_CoordinationOfBenefits3, \n\to_MedicalExpensesOption AS o_MedicalExpensesOption3, \n\to_CoveredByWorkersCompensationFlag AS o_CoveredByWorkersCompensationFlag3, \n\to_SubjectToNoFault AS o_SubjectToNoFault3, \n\to_AdditionalLimitKS AS o_AdditionalLimitKS3, \n\to_AdditionalLimitKY AS o_AdditionalLimitKY3, \n\to_AdditionalLimitMN AS o_AdditionalLimitMN3, \n\to_RatingZoneCode AS o_RatingZoneCode3, \n\to_ReplacementCost AS o_ReplacementCost3, \n\to_FullGlassIndicator AS o_FullGlassIndicator3, \n\to_HistoricVehicleIndicator AS o_HistoricVehicleIndicator3\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nCoverageDetailCommercialAuto_UPDATE AS (\n\tMERGE INTO CoverageDetailCommercialAuto AS T\n\tUSING UPD_Exists AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CoverageGuid = S.StatisticalCoverageHashKey, T.VehicleGroupCode = S.VehicleGroupCode, T.RadiusOfOperation = S.RadiusOfOperation, T.SecondaryVehicleType = S.SecondaryVehicleType, T.UsedInDumpingIndicator = S.UsedInDumpingIndicator, T.VehicleYear = S.YearMake, T.StatedAmount = S.StatedAmount, T.CostNew = S.CostNew, T.VehicleDeleteDate = S.VehicleDeleteDate, T.VIN = S.VIN, T.VehicleMake = S.VehicleMake, T.VehicleModel = S.VehicleModel, T.VehicleNumber = S.VehicleNumber, T.CompositeRatedFlag = S.CompositeRatedFlag, T.TerminalZoneCode = S.TerminalZoneCode, T.VehicleType = S.VehicleType, T.PIPBureauCoverageCode = S.PIPBureaucoverageCode, T.RetroactiveDate = S.RetroactiveDate1, T.VehicleTypeSize = S.CommercialAutoVehicleTypeSize, T.BusinessUseClass = S.CommercialAutoBusinessUseClass, T.SecondaryClass = S.SecondaryClass, T.FleetType = S.FleetType, T.SecondaryClassGroup = S.SecondaryClassGroup, T.IncludeUIM = S.IncludeUIM3, T.CoordinationOfBenefits = S.o_CoordinationOfBenefits3, T.MedicalExpensesOption = S.o_MedicalExpensesOption3, T.CoveredByWorkersCompensationFlag = S.o_CoveredByWorkersCompensationFlag3, T.SubjectToNoFault = S.o_SubjectToNoFault3, T.AdditionalLimitKS = S.o_AdditionalLimitKS3, T.AdditionalLimitKY = S.o_AdditionalLimitKY3, T.AdditionalLimitMN = S.o_AdditionalLimitMN3, T.RatingZoneCode = S.o_RatingZoneCode3, T.ReplacementCost = S.o_ReplacementCost3, T.FullGlassIndicator = S.o_FullGlassIndicator3, T.HistoricVehicleIndicator = S.o_HistoricVehicleIndicator3\n),\nCoverageDetailCommercialAuto_INSERT AS (\n\tINSERT INTO CoverageDetailCommercialAuto\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, VehicleGroupCode, RadiusOfOperation, SecondaryVehicleType, UsedInDumpingIndicator, VehicleYear, StatedAmount, CostNew, VehicleDeleteDate, VIN, VehicleMake, VehicleModel, VehicleNumber, CompositeRatedFlag, TerminalZoneCode, VehicleType, PIPBureauCoverageCode, RetroactiveDate, VehicleTypeSize, BusinessUseClass, SecondaryClass, FleetType, SecondaryClassGroup, IncludeUIM, CoordinationOfBenefits, MedicalExpensesOption, CoveredByWorkersCompensationFlag, SubjectToNoFault, AdditionalLimitKS, AdditionalLimitKY, AdditionalLimitMN, RatingZoneCode, ReplacementCost, FullGlassIndicator, HistoricVehicleIndicator)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tStatisticalCoverageHashKey AS COVERAGEGUID, \n\tVEHICLEGROUPCODE, \n\tRADIUSOFOPERATION, \n\tSECONDARYVEHICLETYPE, \n\tUSEDINDUMPINGINDICATOR, \n\tYearMake AS VEHICLEYEAR, \n\tSTATEDAMOUNT, \n\tCOSTNEW, \n\tVEHICLEDELETEDATE, \n\to_VIN AS VIN, \n\to_VehicleMake AS VEHICLEMAKE, \n\to_VehicleModel AS VEHICLEMODEL, \n\to_VehicleNumber AS VEHICLENUMBER, \n\to_CompositeRatedFlag AS COMPOSITERATEDFLAG, \n\to_TerminalZoneCode AS TERMINALZONECODE, \n\tVEHICLETYPE, \n\tPIPBureaucoverageCode AS PIPBUREAUCOVERAGECODE, \n\tRETROACTIVEDATE, \n\tCommercialAutoVehicleTypeSize AS VEHICLETYPESIZE, \n\tCommercialAutoBusinessUseClass AS BUSINESSUSECLASS, \n\tSECONDARYCLASS, \n\tFLEETTYPE, \n\tSECONDARYCLASSGROUP, \n\tINCLUDEUIM, \n\to_CoordinationOfBenefits AS COORDINATIONOFBENEFITS, \n\to_MedicalExpensesOption AS MEDICALEXPENSESOPTION, \n\to_CoveredByWorkersCompensationFlag AS COVEREDBYWORKERSCOMPENSATIONFLAG, \n\to_SubjectToNoFault AS SUBJECTTONOFAULT, \n\to_AdditionalLimitKS AS ADDITIONALLIMITKS, \n\to_AdditionalLimitKY AS ADDITIONALLIMITKY, \n\to_AdditionalLimitMN AS ADDITIONALLIMITMN, \n\to_RatingZoneCode AS RATINGZONECODE, \n\to_ReplacementCost AS REPLACEMENTCOST, \n\to_FullGlassIndicator AS FULLGLASSINDICATOR, \n\to_HistoricVehicleIndicator AS HISTORICVEHICLEINDICATOR\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}