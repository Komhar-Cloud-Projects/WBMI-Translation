{
    "name": "s_m_CLM_NCCI_Extract_Update_Claim_Death_PTD_Data",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_NCCI_Extract_Update_Claim_Death_PTD_Data",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Get_WC_Medical_Data_NCCI AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\tco.claim_occurrence_dim_id,\r\n\t       pol.pol_dim_id,\r\n\t       clmt.claimant_dim_id,\r\n\t       SUM(loss_trans.direct_loss_paid_excluding_recoveries)     AS Total_Paid_Medical_Amount,\r\n\t       SUM(loss_trans.direct_loss_incurred_excluding_recoveries) AS Incurred_Medical_Amount_Total\r\n\tFROM   dbo.work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\t       INNER JOIN claim_occurrence_dim co WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\t       INNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\t       INNER JOIN policy_dim pol WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\t       INNER JOIN claim_loss_transaction_fact loss_trans WITH (NOLOCK)\r\n\t         ON co.claim_occurrence_dim_id = loss_trans.claim_occurrence_dim_id\r\n\t            AND clmt.claimant_dim_id = loss_trans.claimant_dim_id\r\n\t            AND loss_trans.pol_dim_id = pol.pol_dim_id\r\n\t       INNER JOIN claimant_coverage_dim clmt_cov WITH (NOLOCK)\r\n\t         ON loss_trans.claimant_cov_dim_id = clmt_cov.claimant_cov_dim_id\r\n\t       INNER JOIN claim_payment_category_type_dim ctgry_dim WITH (NOLOCK)\r\n\t         ON loss_trans.claim_pay_ctgry_type_dim_id = ctgry_dim.claim_pay_ctgry_type_dim_id\r\n\tWHERE  ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+1), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) --start selection date\r\n\t       AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -@{pipeline().parameters.NUMBER_OF_MONTHS}, CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) --end selection date\r\n\t       AND ctgry_dim.claim_pay_ctgry_lump_sum_ind <> 'Y'\r\n\t       AND clmt.crrnt_snpsht_flag = 1\r\n\t       AND pol.crrnt_snpsht_flag = 1\r\n\t       AND co.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.cause_of_loss = '06' -- for medical claims\r\n\tGROUP  BY ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\tco.claim_occurrence_dim_id,\r\n\t          clmt.claimant_dim_id,\r\n\t          pol.pol_dim_id\n),\nEXP_Get_Source_Data2 AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tclaim_occurrence_dim_id,\n\tpol_dim_id,\n\tclaimant_dim_id,\n\tdirect_loss_paid_excluding_recoveries AS Total_Paid_Medical_Amount,\n\t-- *INF*: iif(isnull(Total_Paid_Medical_Amount)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Total_Paid_Medical_Amount,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    Total_Paid_Medical_Amount IS NULL, '000000000',\n\t    lpad(to_char(CAST(Total_Paid_Medical_Amount AS INTEGER)), 9, '0')\n\t) AS o_Total_Paid_Medical_Amount,\n\tdirect_loss_incurred_excluding_recoveries AS Incurred_Medical_Amount_Total,\n\t-- *INF*: iif(isnull(Incurred_Medical_Amount_Total)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Incurred_Medical_Amount_Total,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    Incurred_Medical_Amount_Total IS NULL, '000000000',\n\t    lpad(to_char(CAST(Incurred_Medical_Amount_Total AS INTEGER)), 9, '0')\n\t) AS o_Incurred_Medical_Amount_Total\n\tFROM SQ_Get_WC_Medical_Data_NCCI\n),\nSQ_Get_NCCI_Extract_Data AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t       Ltrim(Rtrim(co.source_claim_occurrence_status_code)),\r\n\t       co.source_claim_rpted_date,\r\n\t       Ltrim(Rtrim(co.loss_loc_state)),\r\n\t       co.claim_loss_date,\r\n\t       Ltrim(Rtrim(co.claim_num)),\r\n\t       Ltrim(Rtrim(co.wc_cat_code)),\r\n\t\t   ltrim(rtrim(pol.pol_sym)) as pol_sym,\r\n\t       Ltrim(Rtrim(pol.pol_key)),\r\n\t       pol.pol_eff_date,\r\n\t       Ltrim(Rtrim(clmt.claimant_status_type)),\r\n\t       clmt.claimant_close_date,\r\n\t       clmt.claimant_closed_after_reopen_date,\r\n\t       Ltrim(Rtrim(clmt.claimant_full_name)),\r\n\t       clmt.claimant_birthdate,\r\n\t       Ltrim(Rtrim(clmt.claimant_gndr)),\r\n\t       Ltrim(Rtrim(clmt.jurisdiction_state_code)),\r\n\t       clmt.hired_date,\r\n\t       clmt.avg_wkly_wage,\r\n\t       Ltrim(Rtrim(clmt.body_part_code)),\r\n\t       Ltrim(Rtrim(clmt.nature_inj_code)),\r\n\t       Ltrim(Rtrim(clmt.cause_inj_code)),\r\n\t       clmt.death_date,\r\n\t       clmt.return_to_work_date,\r\n\t       Ltrim(Rtrim(clmt.controverted_case_code)),\r\n\t       Ltrim(Rtrim(clmt.act_status_code)),\r\n\t       Ltrim(Rtrim(clmt.wc_claimant_num)),\r\n\t       Ltrim(Rtrim(clmt.type_of_loss_code)),\r\n\t       Ltrim(Rtrim(clmt.pre_inj_avg_wkly_wage_code)),\r\n\t       clmt.post_inj_wkly_wage_amt,\r\n\t       clmt.impairment_disability_percentage,\r\n\t       Ltrim(Rtrim(clmt.impairment_disability_percentage_basis_code)),\r\n\t       clmt.max_med_improvement_date,\r\n\t       Ltrim(Rtrim(clmt.med_extinguishment_ind)),\r\n\t       Ltrim(Rtrim(clmt.crrnt_work_status)),\r\n\t       max(ltrim(rtrim(clm_trans_dim.trans_ctgry_code))),\r\n\t       SUM(loss_trans.direct_loss_incurred_excluding_recoveries) AS Incurred_Indemnity_Amount_Total,\r\n\t       SUM(loss_trans.direct_subrogation_incurred)               AS direct_subrogation_incurred,\r\n\t       SUM(loss_trans.direct_other_recovery_loss_incurred)       AS direct_other_recovery_loss_incurred,\r\n\t       ltrim(rtrim(ctgry_dim.claim_pay_ctgry_type)),\r\n\t       ltrim(rtrim(clmt_cov.cause_of_loss)),\r\n\t\t   ltrim(rtrim(COVDET.ClassCode)) as classcode\r\n\tFROM   dbo.work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\tINNER JOIN claim_occurrence_dim co WITH (NOLOCK)\r\n\tON ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\tINNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\tON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\tINNER JOIN policy_dim pol WITH (NOLOCK)\r\n\tON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\tINNER JOIN claim_loss_transaction_fact loss_trans WITH (NOLOCK)\r\n\tON co.claim_occurrence_dim_id = loss_trans.claim_occurrence_dim_id\r\n\tAND clmt.claimant_dim_id = loss_trans.claimant_dim_id\r\n\tAND pol.pol_dim_id = loss_trans.pol_dim_id\r\n\tINNER JOIN CoverageDetailDim COVDET WITH (NOLOCK)\r\n\tON loss_trans.CoverageDetailDimId = COVDET.CoverageDetailDimId\r\n\tINNER JOIN claimant_coverage_dim clmt_cov WITH (NOLOCK)\r\n\tON loss_trans.claimant_cov_dim_id = clmt_cov.claimant_cov_dim_id\r\n\tLEFT OUTER JOIN claim_payment_category_type_dim ctgry_dim WITH (NOLOCK)\r\n\tON loss_trans.claim_pay_ctgry_type_dim_id = ctgry_dim.claim_pay_ctgry_type_dim_id\r\n\tLEFT OUTER JOIN (SELECT *\r\n\tFROM   claim_transaction_type_dim\r\n\tWHERE  trans_ctgry_code = 'SI') clm_trans_dim\r\n\tON loss_trans.claim_trans_type_dim_id = clm_trans_dim.claim_trans_type_dim_id\r\n\tleft outer join loss_master_dim lmd \r\n\ton loss_trans.loss_master_dim_id=lmd.loss_master_dim_id and lmd.crrnt_snpsht_flag=1\r\n\tWHERE  ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+1), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) --start selection date\r\n\t       AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -@{pipeline().parameters.NUMBER_OF_MONTHS}, CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) --end selection date\r\n\t       AND clmt.crrnt_snpsht_flag = 1\r\n\t       AND pol.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.MajorPerilCode = '032' -- for WC claims\r\n\t       AND clmt_cov.cause_of_loss in ('05','06')\r\n\t\r\n\tGROUP  BY ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t          co.claim_occurrence_dim_id,\r\n\t          Ltrim(Rtrim(co.source_claim_occurrence_status_code)),\r\n\t          co.source_claim_rpted_date,\r\n\t          Ltrim(Rtrim(co.loss_loc_state)),\r\n\t          co.claim_loss_date,\r\n\t          Ltrim(Rtrim(co.wc_cat_code)),\r\n\t          Ltrim(Rtrim(co.claim_num)),\r\n\t          pol.pol_dim_id,\r\n\t\t\t  ltrim(rtrim(pol.pol_sym)),\r\n\t\t\t  Ltrim(Rtrim(pol.pol_key)),\r\n\t          pol.pol_eff_date,\r\n\t          clmt.claimant_dim_id,\r\n\t          Ltrim(Rtrim(clmt.claimant_status_type)),\r\n\t          clmt.claimant_close_date,\r\n\t          clmt.claimant_closed_after_reopen_date,\r\n\t          Ltrim(Rtrim(clmt.claimant_full_name)),\r\n\t          clmt.claimant_birthdate,\r\n\t          Ltrim(Rtrim(clmt.claimant_gndr)),\r\n\t          Ltrim(Rtrim(clmt.jurisdiction_state_code)),\r\n\t          clmt.hired_date,\r\n\t          clmt.avg_wkly_wage,\r\n\t          Ltrim(Rtrim(clmt.body_part_code)),\r\n\t          Ltrim(Rtrim(clmt.nature_inj_code)),\r\n\t          Ltrim(Rtrim(clmt.cause_inj_code)),\r\n\t          clmt.return_to_work_date,\r\n\t          Ltrim(Rtrim(clmt.controverted_case_code)),\r\n\t          Ltrim(Rtrim(clmt.wc_claimant_num)),\r\n\t          Ltrim(Rtrim(clmt.type_of_loss_code)),\r\n\t          Ltrim(Rtrim(clmt.pre_inj_avg_wkly_wage_code)),\r\n\t          clmt.post_inj_wkly_wage_amt,\r\n\t          clmt.impairment_disability_percentage,\r\n\t          Ltrim(Rtrim(clmt.impairment_disability_percentage_basis_code)),\r\n\t          Ltrim(Rtrim(clmt.med_extinguishment_ind)),\r\n\t          Ltrim(Rtrim(clmt.crrnt_work_status)),\r\n\t          clmt.max_med_improvement_date,\r\n\t          ctgry_dim.claim_pay_ctgry_type,\r\n\t          clmt.death_date,\r\n\t          clmt.act_status_code,\r\n\t          clmt_cov.cause_of_loss,\r\n\t\t\t  ltrim(rtrim(COVDET.ClassCode))\n),\nmplt_CLM_NCCI_Extract_WC_Death_PTD AS (WITH\n\tLKP_Get_State_Code_NCCI AS (\n\t\tSELECT\n\t\tstate_abbrev,\n\t\tstate_code\n\t\tFROM (\n\t\t\tSELECT state_sup.state_abbrev as state_abbrev, ltrim(rtrim(state_sup.state_code)) as state_code FROM state_sup\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY state_abbrev) = 1\n\t),\n\tMplt_Death_PTD_Input AS (\n\t\t\n\t),\n\tAgg_Find_Death_PTD_Claims AS (\n\t\tSELECT\n\t\tclaim_occ_ak_id_OR_ncci_rpt_ext_id,\n\t\tsource_claim_occurrence_status_code,\n\t\tsource_claim_rpted_date,\n\t\tloss_loc_state,\n\t\tclaim_loss_date,\n\t\tclaim_num,\n\t\twc_cat_code,\n\t\tclasscode,\n\t\tedw_pol_ak_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tedw_claim_party_occurrence_ak_id,\n\t\tclaimant_status_type,\n\t\tclaimant_close_date,\n\t\tclaimant_closed_after_reopen_date,\n\t\tclaimant_full_name,\n\t\tclaimant_birthdate,\n\t\tclaimant_gndr,\n\t\tjurisdiction_state_code,\n\t\thired_date,\n\t\tavg_wkly_wage,\n\t\tbody_part_code,\n\t\tnature_inj_code,\n\t\tcause_inj_code,\n\t\tdeath_date,\n\t\t-- *INF*: min(death_date)\n\t\tmin(death_date) AS o_death_date,\n\t\treturn_to_work_date,\n\t\tcontroverted_case_code,\n\t\tact_status_code,\n\t\t-- *INF*: min(act_status_code,act_status_code = 'DE' OR act_status_code = 'PT')\n\t\tmin(act_status_code, act_status_code = 'DE' OR act_status_code = 'PT') AS o_act_status_code,\n\t\twc_claimant_num,\n\t\ttype_of_loss_code,\n\t\tpre_inj_avg_wkly_wage_code,\n\t\tpost_inj_wkly_wage_amt,\n\t\timpairment_disability_percentage,\n\t\timpairment_disability_percentage_basis_code,\n\t\tmax_med_improvement_date,\n\t\tmed_extinguishment_ind,\n\t\tcrrnt_work_status,\n\t\ttrans_ctgry_code,\n\t\t-- *INF*: max(trans_ctgry_code)\r\n\t\t-- \r\n\t\t-- --we are trying to find if there is a trans_ctgry_code = 'SI'\n\t\tmax(trans_ctgry_code) AS o_trans_ctgry_code,\n\t\tdirect_loss_incurred_excluding_recoveries,\n\t\t-- *INF*: sum(direct_loss_incurred_excluding_recoveries,cause_of_loss = '05')\n\t\tsum(direct_loss_incurred_excluding_recoveries, cause_of_loss = '05') AS o_Incurred_Indemnity_Amount_Total,\n\t\tdirect_subrogation_incurred,\n\t\t-- *INF*: sum(direct_subrogation_incurred)\n\t\tsum(direct_subrogation_incurred) AS o_direct_subrogation_incurred,\n\t\tdirect_other_recovery_loss_incurred,\n\t\t-- *INF*: sum(direct_other_recovery_loss_incurred)\n\t\tsum(direct_other_recovery_loss_incurred) AS o_direct_other_recovery_loss_incurred,\n\t\tclaim_pay_ctgry_type,\n\t\t-- *INF*: min(claim_pay_ctgry_type,claim_pay_ctgry_type = 'DT' OR claim_pay_ctgry_type =  'PT')\n\t\tmin(claim_pay_ctgry_type, claim_pay_ctgry_type = 'DT' OR claim_pay_ctgry_type = 'PT') AS o_claim_pay_ctgry_type,\n\t\tcause_of_loss,\n\t\t-- *INF*: min(cause_of_loss)\n\t\tmin(cause_of_loss) AS o_cause_of_loss,\n\t\tpol_sym\n\t\tFROM Mplt_Death_PTD_Input\n\t\tGROUP BY claim_occ_ak_id_OR_ncci_rpt_ext_id, edw_pol_ak_id, edw_claim_party_occurrence_ak_id\n\t),\n\tEXP_Calculate_Valuation_Levels AS (\n\t\tSELECT\n\t\tsource_claim_rpted_date AS Input_Date,\n\t\t-- *INF*: to_integer(date_diff(sysdate,Input_Date,'mm'),true)\r\n\t\t-- \r\n\t\t-- --date_diff function will calculate the differnce upto 2 decimal places. For the purpose of deriving valuation level codes, we don't want decimal places. Part of the fix for DDRR-65\n\t\tCAST(DATEDIFF(mm,CURRENT_TIMESTAMP,Input_Date) AS INTEGER) AS Difference_Months,\n\t\t-- *INF*: decode(true,\r\n\t\t-- Difference_Months <=19,'018',\r\n\t\t-- Difference_Months <=31,'030',\r\n\t\t-- Difference_Months <=43,'042',\r\n\t\t-- Difference_Months <=55,'054',\r\n\t\t-- Difference_Months <=67,'066',\r\n\t\t-- Difference_Months <=79,'078',\r\n\t\t-- Difference_Months <=91,'090',\r\n\t\t-- Difference_Months <=103,'102',\r\n\t\t-- Difference_Months <=115,'114',\r\n\t\t-- Difference_Months <=127,'126',\r\n\t\t-- Difference_Months <=139,'138',\r\n\t\t-- '999')\r\n\t\t-- \r\n\t\t-- --'999' is dummy coz we don't need to send claims after 138 months (last valuation)\n\t\tdecode(\n\t\t    true,\n\t\t    Difference_Months <= 19, '018',\n\t\t    Difference_Months <= 31, '030',\n\t\t    Difference_Months <= 43, '042',\n\t\t    Difference_Months <= 55, '054',\n\t\t    Difference_Months <= 67, '066',\n\t\t    Difference_Months <= 79, '078',\n\t\t    Difference_Months <= 91, '090',\n\t\t    Difference_Months <= 103, '102',\n\t\t    Difference_Months <= 115, '114',\n\t\t    Difference_Months <= 127, '126',\n\t\t    Difference_Months <= 139, '138',\n\t\t    '999'\n\t\t) AS Valuation_Level_Code\n\t\tFROM Agg_Find_Death_PTD_Claims\n\t),\n\tFilter_Death_PTD_Claims AS (\n\t\tSELECT\n\t\tAgg_Find_Death_PTD_Claims.claim_occ_ak_id_OR_ncci_rpt_ext_id, \n\t\tAgg_Find_Death_PTD_Claims.source_claim_occurrence_status_code, \n\t\tAgg_Find_Death_PTD_Claims.source_claim_rpted_date, \n\t\tAgg_Find_Death_PTD_Claims.loss_loc_state, \n\t\tAgg_Find_Death_PTD_Claims.claim_loss_date, \n\t\tAgg_Find_Death_PTD_Claims.claim_num, \n\t\tAgg_Find_Death_PTD_Claims.wc_cat_code, \n\t\tAgg_Find_Death_PTD_Claims.classcode, \n\t\tAgg_Find_Death_PTD_Claims.edw_pol_ak_id, \n\t\tAgg_Find_Death_PTD_Claims.pol_key, \n\t\tAgg_Find_Death_PTD_Claims.pol_eff_date, \n\t\tAgg_Find_Death_PTD_Claims.edw_claim_party_occurrence_ak_id, \n\t\tAgg_Find_Death_PTD_Claims.claimant_status_type, \n\t\tAgg_Find_Death_PTD_Claims.claimant_close_date, \n\t\tAgg_Find_Death_PTD_Claims.claimant_closed_after_reopen_date, \n\t\tAgg_Find_Death_PTD_Claims.claimant_full_name, \n\t\tAgg_Find_Death_PTD_Claims.claimant_birthdate, \n\t\tAgg_Find_Death_PTD_Claims.claimant_gndr, \n\t\tAgg_Find_Death_PTD_Claims.jurisdiction_state_code, \n\t\tAgg_Find_Death_PTD_Claims.hired_date, \n\t\tAgg_Find_Death_PTD_Claims.avg_wkly_wage, \n\t\tAgg_Find_Death_PTD_Claims.body_part_code, \n\t\tAgg_Find_Death_PTD_Claims.nature_inj_code, \n\t\tAgg_Find_Death_PTD_Claims.cause_inj_code, \n\t\tAgg_Find_Death_PTD_Claims.o_death_date AS death_date, \n\t\tAgg_Find_Death_PTD_Claims.return_to_work_date, \n\t\tAgg_Find_Death_PTD_Claims.controverted_case_code, \n\t\tAgg_Find_Death_PTD_Claims.o_act_status_code AS act_status_code, \n\t\tAgg_Find_Death_PTD_Claims.wc_claimant_num, \n\t\tAgg_Find_Death_PTD_Claims.type_of_loss_code, \n\t\tAgg_Find_Death_PTD_Claims.pre_inj_avg_wkly_wage_code, \n\t\tAgg_Find_Death_PTD_Claims.post_inj_wkly_wage_amt, \n\t\tAgg_Find_Death_PTD_Claims.impairment_disability_percentage, \n\t\tAgg_Find_Death_PTD_Claims.impairment_disability_percentage_basis_code, \n\t\tAgg_Find_Death_PTD_Claims.max_med_improvement_date, \n\t\tAgg_Find_Death_PTD_Claims.med_extinguishment_ind, \n\t\tAgg_Find_Death_PTD_Claims.crrnt_work_status, \n\t\tAgg_Find_Death_PTD_Claims.o_trans_ctgry_code AS trans_ctgry_code, \n\t\tAgg_Find_Death_PTD_Claims.o_Incurred_Indemnity_Amount_Total AS Incurred_Indemnity_Amount_Total, \n\t\tAgg_Find_Death_PTD_Claims.o_direct_subrogation_incurred AS direct_subrogation_incurred, \n\t\tAgg_Find_Death_PTD_Claims.o_direct_other_recovery_loss_incurred AS direct_other_recovery_loss_incurred, \n\t\tAgg_Find_Death_PTD_Claims.o_claim_pay_ctgry_type AS claim_pay_ctgry_type, \n\t\tEXP_Calculate_Valuation_Levels.Valuation_Level_Code, \n\t\tAgg_Find_Death_PTD_Claims.o_cause_of_loss AS cause_of_loss, \n\t\tAgg_Find_Death_PTD_Claims.pol_sym\n\t\tFROM Agg_Find_Death_PTD_Claims\n\t\t -- Manually join with EXP_Calculate_Valuation_Levels\n\t\tWHERE (claim_pay_ctgry_type =  'DT' or claim_pay_ctgry_type =  'PT' \r\n\tOR death_date <> to_date('01/01/1800','mm/dd/yyyy')\r\n\tOR act_status_code = 'DE'  or act_status_code = 'PT')\r\n\tand Incurred_Indemnity_Amount_Total> 0\r\n\tand cause_of_loss = '05'\r\n\t\r\n\t--Death claim and reserves are needed\n\t),\n\tEXP_Get_Source_Data AS (\n\t\tSELECT\n\t\tclaim_occ_ak_id_OR_ncci_rpt_ext_id,\n\t\tsource_claim_occurrence_status_code,\n\t\tsource_claim_rpted_date,\n\t\t-- *INF*: to_char(source_claim_rpted_date,'YYYYMMDD')\n\t\tto_char(source_claim_rpted_date, 'YYYYMMDD') AS o_source_claim_rpted_date,\n\t\tloss_loc_state,\n\t\t-- *INF*: :LKP.LKP_Get_State_Code_NCCI(loss_loc_state)\n\t\tLKP_GET_STATE_CODE_NCCI_loss_loc_state.state_abbrev AS o_loss_loc_state,\n\t\tclaim_loss_date,\n\t\t-- *INF*: to_char(claim_loss_date,'YYYYMMDD')\n\t\tto_char(claim_loss_date, 'YYYYMMDD') AS o_claim_loss_date,\n\t\tclaim_num,\n\t\twc_cat_code,\n\t\t-- *INF*: iif(wc_cat_code < '11' or wc_cat_code = 'N/A'\r\n\t\t-- ,'N'\r\n\t\t-- ,'Y')\r\n\t\t-- \r\n\t\t-- --iif(wc_cat_code = 'N/A'\r\n\t\t-- --,'N'\r\n\t\t-- --,'Y')\r\n\t\t-- \r\n\t\t-- --Changes made by Vikas Sood on 08/04/2011 for DDRR-71. Extraordinary loss indicator will be set to Y only when wc_cat_code >--=11\n\t\tIFF(wc_cat_code < '11' or wc_cat_code = 'N/A', 'N', 'Y') AS o_wc_cat_code,\n\t\tedw_pol_ak_id,\n\t\tpol_sym,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\t-- *INF*: to_char(pol_eff_date,'yyyymmdd')\n\t\tto_char(pol_eff_date, 'yyyymmdd') AS o_pol_eff_date,\n\t\tedw_claim_party_occurrence_ak_id,\n\t\tclaimant_status_type,\n\t\tclaimant_close_date,\n\t\tclaimant_closed_after_reopen_date,\n\t\t-- *INF*: iif(source_claim_occurrence_status_code = 'O'\r\n\t\t--      ,iif(claimant_status_type = 'OPEN' or claimant_status_type = 'REOPEN' or claimant_status_type = 'N/A'\r\n\t\t-- \t\t,'0'\r\n\t\t-- \t\t,'1')\r\n\t\t-- \t,'1')\n\t\tIFF(\n\t\t    source_claim_occurrence_status_code = 'O',\n\t\t    IFF(\n\t\t        claimant_status_type = 'OPEN'\n\t\t        or claimant_status_type = 'REOPEN'\n\t\t        or claimant_status_type = 'N/A',\n\t\t        '0',\n\t\t        '1'\n\t\t    ),\n\t\t    '1'\n\t\t) AS v_claim_status_code,\n\t\t-- *INF*: iif(v_claim_status_code = '1'\r\n\t\t--     ,iif(claimant_closed_after_reopen_date = to_date('18000101','YYYYMMDD')\r\n\t\t-- \t\t,to_char(claimant_close_date,'YYYYMMDD')\r\n\t\t--             ,to_char(claimant_closed_after_reopen_date,'YYYYMMDD')\r\n\t\t-- )\r\n\t\t--     ,'00000000')\r\n\t\t-- \r\n\t\t-- --Report the most recent date as of loss valuation that claim was closed only if Claim Status Code is reported as 1 Closed.\r\n\t\t-- -- Zero-fill if the Claim Status Code  is 0Open. \r\n\t\t-- \n\t\tIFF(\n\t\t    v_claim_status_code = '1',\n\t\t    IFF(\n\t\t        claimant_closed_after_reopen_date = TO_TIMESTAMP('18000101', 'YYYYMMDD'),\n\t\t        to_char(claimant_close_date, 'YYYYMMDD'),\n\t\t        to_char(claimant_closed_after_reopen_date, 'YYYYMMDD')\n\t\t    ),\n\t\t    '00000000'\n\t\t) AS o_claimant_close_date,\n\t\tclaimant_full_name,\n\t\tclaimant_birthdate,\n\t\tclaimant_gndr,\n\t\tjurisdiction_state_code,\n\t\t-- *INF*: :LKP.LKP_Get_State_Code_NCCI(jurisdiction_state_code)\n\t\tLKP_GET_STATE_CODE_NCCI_jurisdiction_state_code.state_abbrev AS jurisdiction_state_code_converted,\n\t\thired_date,\n\t\t-- *INF*: iif(hired_date = to_date('01/01/1800','MM/DD/YYYY')\r\n\t\t-- ,'00000000'\r\n\t\t-- ,to_char(hired_date,'YYYYMMDD'))\n\t\tIFF(\n\t\t    hired_date = TO_TIMESTAMP('01/01/1800', 'MM/DD/YYYY'), '00000000',\n\t\t    to_char(hired_date, 'YYYYMMDD')\n\t\t) AS o_hired_date,\n\t\tavg_wkly_wage,\n\t\t-- *INF*: iif(isnull(avg_wkly_wage)\r\n\t\t--      ,'00000'\r\n\t\t--      ,iif(avg_wkly_wage > 99999\r\n\t\t--           ,'99999'\r\n\t\t--         ,lpad(to_char(to_integer(avg_wkly_wage)),5,'0')\r\n\t\t-- )\r\n\t\t-- )\r\n\t\t-- \n\t\tIFF(\n\t\t    avg_wkly_wage IS NULL, '00000',\n\t\t    IFF(\n\t\t        avg_wkly_wage > 99999, '99999',\n\t\t        lpad(to_char(CAST(avg_wkly_wage AS INTEGER)), 5, '0')\n\t\t    )\n\t\t) AS o_avg_wkly_wage,\n\t\tbody_part_code,\n\t\tnature_inj_code,\n\t\tcause_inj_code,\n\t\treturn_to_work_date,\n\t\t-- *INF*: iif(upper(crrnt_work_status) = 'RESTRICTIONS WITHOUT WAGE LOSS' OR upper(crrnt_work_status) = 'FULL DUTY'\r\n\t\t-- \t,'Y'\r\n\t\t-- \t,iif(upper(crrnt_work_status) = 'RESTRICTIONS WITH WAGE LOSS' \r\n\t\t-- \t\t,'N'\r\n\t\t-- \t\t,iif(upper(crrnt_work_status) = 'TOTALLY DISABLED'\r\n\t\t-- \t\t\t,' '\r\n\t\t--     \t\t     )\r\n\t\t-- \t)\r\n\t\t-- )\n\t\tIFF(\n\t\t    upper(crrnt_work_status) = 'RESTRICTIONS WITHOUT WAGE LOSS'\n\t\t    or upper(crrnt_work_status) = 'FULL DUTY',\n\t\t    'Y',\n\t\t    IFF(\n\t\t        upper(crrnt_work_status) = 'RESTRICTIONS WITH WAGE LOSS', 'N',\n\t\t        IFF(\n\t\t            upper(crrnt_work_status) = 'TOTALLY DISABLED', ' '\n\t\t        )\n\t\t    )\n\t\t) AS v_ret_to_work_rate_of_pay_ind,\n\t\t-- *INF*: iif(to_char(return_to_work_date,'YYYYMMDD')  !=  '18000101' AND v_ret_to_work_rate_of_pay_ind='Y'\r\n\t\t-- ,to_char(return_to_work_date,'YYYYMMDD')\r\n\t\t-- ,'00000000')\n\t\tIFF(\n\t\t    to_char(return_to_work_date, 'YYYYMMDD') != '18000101' AND v_ret_to_work_rate_of_pay_ind = 'Y',\n\t\t    to_char(return_to_work_date, 'YYYYMMDD'),\n\t\t    '00000000'\n\t\t) AS v_return_to_work_date,\n\t\t-- *INF*: v_return_to_work_date\r\n\t\t-- \r\n\t\t-- --iif(to_char(return_to_work_date,'YYYYMMDD')  !=  '18000101' AND (v_claim_status_code = '0' or  v_claim_status_code = '1')\r\n\t\t-- --,to_char(return_to_work_date,'YYYYMMDD')\r\n\t\t-- --,'00000000')\r\n\t\t-- \r\n\t\t-- --iif(to_char(return_to_work_date,'YYYYMMDD')  !=  '18000101' AND (v_claim_status_code = '0' or  v_claim_status_code = '1' OR v_claim_status_code = '5')\r\n\t\t-- --,to_char(return_to_work_date,'YYYYMMDD')\r\n\t\t-- --,'00000000')\r\n\t\t-- \r\n\t\t-- --changes made by Vikas Sood on 08/01/2011 to remove v_claim_status_code = '5' from IIF condition as if the claim is medical only, we don't report retrun to work date. DDRR-70 was created to address this\n\t\tv_return_to_work_date AS o_return_to_work_date,\n\t\tcontroverted_case_code,\n\t\t-- *INF*: iif(controverted_case_code = 'N/A'\r\n\t\t-- ,' '\r\n\t\t-- ,controverted_case_code)\n\t\tIFF(controverted_case_code = 'N/A', ' ', controverted_case_code) AS o_controverted_case_code,\n\t\twc_claimant_num,\n\t\ttype_of_loss_code,\n\t\t-- *INF*: iif(type_of_loss_code = 'N/A'\r\n\t\t-- ,'00'\r\n\t\t-- ,type_of_loss_code)\n\t\tIFF(type_of_loss_code = 'N/A', '00', type_of_loss_code) AS o_type_of_loss_code,\n\t\tpre_inj_avg_wkly_wage_code AS pre_injury_avg_wkly_wage_code,\n\t\t-- *INF*: iif(pre_injury_avg_wkly_wage_code = 'N/A'\r\n\t\t-- ,'1'\r\n\t\t-- ,ltrim(pre_injury_avg_wkly_wage_code,'0'))\n\t\tIFF(pre_injury_avg_wkly_wage_code = 'N/A', '1', ltrim(pre_injury_avg_wkly_wage_code, '0')) AS o_pre_injury_avg_wkly_wage_code,\n\t\tpost_inj_wkly_wage_amt,\n\t\t-- *INF*: iif(isnull(post_inj_wkly_wage_amt)\r\n\t\t-- ,'000000000'\r\n\t\t-- ,lpad(to_char(ceil(post_inj_wkly_wage_amt)),9,'0')\r\n\t\t-- )\n\t\tIFF(\n\t\t    post_inj_wkly_wage_amt IS NULL, '000000000',\n\t\t    lpad(to_char(ceil(post_inj_wkly_wage_amt)), 9, '0')\n\t\t) AS o_post_inj_wkly_wage_amt,\n\t\timpairment_disability_percentage,\n\t\t-- *INF*: iif(isnull(impairment_disability_percentage)\r\n\t\t-- ,'000'\r\n\t\t-- ,lpad(to_char(ceil(impairment_disability_percentage)),3,'0')\r\n\t\t-- )\n\t\tIFF(\n\t\t    impairment_disability_percentage IS NULL, '000',\n\t\t    lpad(to_char(ceil(impairment_disability_percentage)), 3, '0')\n\t\t) AS o_impairment_disability_percentage,\n\t\timpairment_disability_percentage_basis_code,\n\t\tmax_med_improvement_date,\n\t\tmed_extinguishment_ind,\n\t\t-- *INF*: iif(med_extinguishment_ind = 'N/A'\r\n\t\t-- ,' '\r\n\t\t-- ,med_extinguishment_ind)\r\n\t\t-- \n\t\tIFF(med_extinguishment_ind = 'N/A', ' ', med_extinguishment_ind) AS o_med_extinguishment_ind,\n\t\tcrrnt_work_status,\n\t\tv_ret_to_work_rate_of_pay_ind AS ret_to_work_rate_of_pay_ind,\n\t\t-- *INF*: IIF(ISNULL(max_med_improvement_date) OR to_char(max_med_improvement_date,'YYYYMMDD') = '18000101'\r\n\t\t-- ,'00000000'\r\n\t\t-- ,to_char(max_med_improvement_date,'YYYYMMDD')\r\n\t\t-- )\n\t\tIFF(\n\t\t    max_med_improvement_date IS NULL OR to_char(max_med_improvement_date, 'YYYYMMDD') = '18000101',\n\t\t    '00000000',\n\t\t    to_char(max_med_improvement_date, 'YYYYMMDD')\n\t\t) AS o_max_med_improvement_date,\n\t\ttrans_ctgry_code,\n\t\tIncurred_Indemnity_Amount_Total,\n\t\t-- *INF*: iif(isnull(Incurred_Indemnity_Amount_Total)\r\n\t\t-- ,'000000000'\r\n\t\t-- ,lpad(to_char(to_integer(Incurred_Indemnity_Amount_Total)),9,'0')\r\n\t\t-- )\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(\n\t\t    Incurred_Indemnity_Amount_Total IS NULL, '000000000',\n\t\t    lpad(to_char(CAST(Incurred_Indemnity_Amount_Total AS INTEGER)), 9, '0')\n\t\t) AS o_Incurred_Indemnity_Amount_Total,\n\t\tdirect_subrogation_incurred,\n\t\tdirect_other_recovery_loss_incurred,\n\t\tv_claim_status_code AS o_claim_status_code,\n\t\t-- *INF*: iif(direct_subrogation_incurred = 0\r\n\t\t--      ,iif(direct_other_recovery_loss_incurred = 0 \r\n\t\t--           ,'01'\r\n\t\t--           ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code = 'SI'\r\n\t\t--                ,'02'\r\n\t\t--               ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code <> 'SI'\r\n\t\t--                     ,'01'\r\n\t\t--                     ,'01'))\r\n\t\t--           )\r\n\t\t--     ,iif(direct_other_recovery_loss_incurred = 0 --and trans_ctgry_code = 'SI'\r\n\t\t--           ,'03'\r\n\t\t--         ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code = 'SI'\r\n\t\t--           ,'04'\r\n\t\t--           ,'01')\r\n\t\t--         )\r\n\t\t-- )\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --if no recovery exists (i.e. no subrogation recovery and no other recovery for second injury fund, populate 01, if no subrogation recovery exists but SI recovery exists, populate 02,populate 03 when subrogation recovery exists but no other type of recovery exists (whether it is SI or not) and populate 04 when subrogation recovery exists as well SI recovery exists.\n\t\tIFF(\n\t\t    direct_subrogation_incurred = 0,\n\t\t    IFF(\n\t\t        direct_other_recovery_loss_incurred = 0, '01',\n\t\t        IFF(\n\t\t            direct_other_recovery_loss_incurred < 0\n\t\t        and trans_ctgry_code = 'SI', '02',\n\t\t            IFF(\n\t\t                direct_other_recovery_loss_incurred < 0\n\t\t            and trans_ctgry_code <> 'SI',\n\t\t                '01',\n\t\t                '01'\n\t\t            )\n\t\t        )\n\t\t    ),\n\t\t    IFF(\n\t\t        direct_other_recovery_loss_incurred = 0, '03',\n\t\t        IFF(\n\t\t            direct_other_recovery_loss_incurred < 0\n\t\t        and trans_ctgry_code = 'SI', '04',\n\t\t            '01'\n\t\t        )\n\t\t    )\n\t\t) AS Loss_Condition_Code,\n\t\tValuation_Level_Code,\n\t\t-- *INF*: iif(v_claim_status_code = '0'\r\n\t\t-- ,'Y'\r\n\t\t-- ,'O')\r\n\t\t-- \r\n\t\t-- --status 'O' refers to one time transmission only. So any closed claims will be reported one time only\n\t\tIFF(v_claim_status_code = '0', 'Y', 'O') AS trans_status,\n\t\tclasscode AS Classcode\n\t\tFROM Filter_Death_PTD_Claims\n\t\tLEFT JOIN LKP_GET_STATE_CODE_NCCI LKP_GET_STATE_CODE_NCCI_loss_loc_state\n\t\tON LKP_GET_STATE_CODE_NCCI_loss_loc_state.state_code = loss_loc_state\n\t\n\t\tLEFT JOIN LKP_GET_STATE_CODE_NCCI LKP_GET_STATE_CODE_NCCI_jurisdiction_state_code\n\t\tON LKP_GET_STATE_CODE_NCCI_jurisdiction_state_code.state_code = jurisdiction_state_code\n\t\n\t),\n\tMplt_Death_PTD_Output AS (\n\t\tSELECT\n\t\tclaim_occ_ak_id_OR_ncci_rpt_ext_id, \n\t\to_source_claim_rpted_date AS source_claim_rpted_date, \n\t\to_loss_loc_state AS loss_loc_state, \n\t\to_claim_loss_date AS claim_loss_date, \n\t\tclaim_num, \n\t\to_wc_cat_code AS wc_cat_code, \n\t\tClasscode, \n\t\tedw_pol_ak_id, \n\t\tpol_key, \n\t\to_pol_eff_date AS pol_eff_date, \n\t\tedw_claim_party_occurrence_ak_id, \n\t\to_claimant_close_date AS claimant_close_date, \n\t\tclaimant_full_name, \n\t\tclaimant_birthdate, \n\t\tclaimant_gndr, \n\t\tjurisdiction_state_code_converted, \n\t\to_hired_date AS hired_date, \n\t\to_avg_wkly_wage AS avg_wkly_wage, \n\t\tbody_part_code, \n\t\tnature_inj_code, \n\t\tcause_inj_code, \n\t\to_return_to_work_date AS return_to_work_date, \n\t\to_controverted_case_code AS controverted_case_code, \n\t\twc_claimant_num, \n\t\to_type_of_loss_code AS type_of_loss_code, \n\t\to_pre_injury_avg_wkly_wage_code AS pre_injury_avg_wkly_wage_code, \n\t\to_post_inj_wkly_wage_amt AS post_inj_wkly_wage_amt, \n\t\to_impairment_disability_percentage AS impairment_disability_percentage, \n\t\timpairment_disability_percentage_basis_code, \n\t\to_med_extinguishment_ind AS med_extinguishment_ind, \n\t\tret_to_work_rate_of_pay_ind, \n\t\to_max_med_improvement_date AS max_med_improvement_date, \n\t\to_Incurred_Indemnity_Amount_Total AS Incurred_Indemnity_Amount_Total, \n\t\to_claim_status_code AS claim_status_code, \n\t\tLoss_Condition_Code, \n\t\tValuation_Level_Code, \n\t\ttrans_status, \n\t\tpol_sym\n\t\tFROM EXP_Get_Source_Data\n\t),\n),\nJNR_Join_Medical_Data_With_Indemnity_Claims AS (SELECT\n\tEXP_Get_Source_Data2.work_claim_ncci_rpt_extract_id AS work_claim_ncci_rpt_extract_id1, \n\tEXP_Get_Source_Data2.claim_occurrence_dim_id, \n\tEXP_Get_Source_Data2.pol_dim_id, \n\tEXP_Get_Source_Data2.claimant_dim_id, \n\tEXP_Get_Source_Data2.o_Total_Paid_Medical_Amount AS Total_Paid_Medical_Amount, \n\tEXP_Get_Source_Data2.o_Incurred_Medical_Amount_Total AS Incurred_Medical_Amount_Total, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claim_occ_ak_id_OR_ncci_rpt_ext_id1 AS work_claim_ncci_rpt_extract_id, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.source_claim_rpted_date1 AS source_claim_rpted_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.loss_loc_state1 AS loss_loc_state, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claim_loss_date1 AS claim_loss_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claim_num1 AS claim_num, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.wc_cat_code1 AS wc_cat_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.Classcode1 AS risk_unit, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.pol_key1 AS pol_key, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.pol_eff_date1 AS pol_eff_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claimant_close_date1 AS claimant_close_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claimant_full_name1 AS claimant_full_name, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claimant_birthdate1 AS claimant_birthdate, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claimant_gndr1 AS claimant_gndr, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.jurisdiction_state_code_converted AS jurisdiction_state_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.hired_date1 AS hired_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.avg_wkly_wage1 AS avg_wkly_wage, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.body_part_code1 AS body_part_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.nature_inj_code1 AS nature_inj_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.cause_inj_code1 AS cause_inj_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.return_to_work_date1 AS return_to_work_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.controverted_case_code1 AS controverted_case_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.wc_claimant_num1 AS wc_claimant_num, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.type_of_loss_code1 AS type_of_loss_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.pre_injury_avg_wkly_wage_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.post_inj_wkly_wage_amt1 AS post_inj_wkly_wage_amt, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.impairment_disability_percentage1 AS impairment_disability_percentage, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.impairment_disability_percentage_basis_code1 AS impairment_disability_percentage_basis_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.med_extinguishment_ind1 AS med_extinguishment_ind, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.ret_to_work_rate_of_pay_ind, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.max_med_improvement_date1 AS max_med_improvement_date, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.Incurred_Indemnity_Amount_Total, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.claim_status_code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.Loss_Condition_Code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.Valuation_Level_Code, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.pol_sym1, \n\tmplt_CLM_NCCI_Extract_WC_Death_PTD.Classcode1\n\tFROM EXP_Get_Source_Data2\n\tRIGHT OUTER JOIN mplt_CLM_NCCI_Extract_WC_Death_PTD\n\tON mplt_CLM_NCCI_Extract_WC_Death_PTD.claim_occ_ak_id_OR_ncci_rpt_ext_id1 = EXP_Get_Source_Data2.work_claim_ncci_rpt_extract_id\n),\nEXP_NCCI_Target AS (\n\tSELECT\n\t-- *INF*: '1'\r\n\t-- \r\n\t-- --hardcoded as per specs\n\t'1' AS record_type_code,\n\t-- *INF*: '17124'\r\n\t-- --hardcoded as per specs\n\t'17124' AS carrier_code,\n\t-- *INF*: ' '\r\n\t-- --hardcoded as per specs\n\t' ' AS future_use3,\n\tValuation_Level_Code AS valuation_level_code,\n\t' ' AS replacement_report_code,\n\t' ' AS future_use9,\n\t' ' AS future_use21,\n\t'01' AS type_of_claim,\n\t' ' AS future_use45,\n\t' ' AS future_use76,\n\t' ' AS future_use78,\n\t' ' AS future_use84,\n\t' ' AS Future_use,\n\twork_claim_ncci_rpt_extract_id,\n\tpol_key,\n\tpol_eff_date,\n\tclaim_num,\n\tjurisdiction_state_code,\n\tloss_loc_state,\n\tclaim_loss_date,\n\tsource_claim_rpted_date,\n\trisk_unit,\n\ttype_of_loss_code,\n\tclaimant_gndr,\n\t-- *INF*: decode(true,\r\n\t-- claimant_gndr = 'M','1',\r\n\t-- claimant_gndr = 'F','2',\r\n\t-- '3')\r\n\t-- \n\tdecode(\n\t    true,\n\t    claimant_gndr = 'M', '1',\n\t    claimant_gndr = 'F', '2',\n\t    '3'\n\t) AS o_claimant_gndr,\n\tclaimant_birthdate,\n\t-- *INF*: iif(TO_CHAR(GET_DATE_PART(claimant_birthdate,'YYYY')) = '9999'\r\n\t-- ,'0000'\r\n\t-- ,TO_CHAR(GET_DATE_PART(claimant_birthdate,'YYYY')))\n\tIFF(\n\t    TO_CHAR(DATE_PART(claimant_birthdate, 'YYYY')) = '9999', '0000',\n\t    TO_CHAR(DATE_PART(claimant_birthdate, 'YYYY'))\n\t) AS birth_yr,\n\thired_date,\n\t-- *INF*: SUBSTR(hired_date,1,4)\n\tSUBSTR(hired_date, 1, 4) AS hired_yr,\n\tavg_wkly_wage,\n\tpre_injury_avg_wkly_wage_code,\n\tbody_part_code,\n\tnature_inj_code,\n\tcause_inj_code,\n\tclaim_status_code,\n\tclaimant_close_date,\n\tIncurred_Indemnity_Amount_Total,\n\tTotal_Paid_Medical_Amount,\n\t-- *INF*: iif(isnull(Total_Paid_Medical_Amount)\r\n\t-- ,'000000000'\r\n\t-- ,Total_Paid_Medical_Amount)\n\tIFF(Total_Paid_Medical_Amount IS NULL, '000000000', Total_Paid_Medical_Amount) AS o_Total_Paid_Medical_Amount,\n\tIncurred_Medical_Amount_Total,\n\t-- *INF*: iif(isnull(Incurred_Medical_Amount_Total)\r\n\t-- ,'000000000'\r\n\t-- ,Incurred_Medical_Amount_Total)\n\tIFF(Incurred_Medical_Amount_Total IS NULL, '000000000', Incurred_Medical_Amount_Total) AS o_Incurred_Medical_Amount_Total,\n\twc_cat_code,\n\treturn_to_work_date,\n\t-- *INF*: iif(claim_status_code = '5' ,'00000000' ,return_to_work_date)\n\tIFF(claim_status_code = '5', '00000000', return_to_work_date) AS v_return_to_work_date,\n\tv_return_to_work_date AS o_return_to_work_date,\n\tcontroverted_case_code,\n\twc_claimant_num,\n\tpost_inj_wkly_wage_amt,\n\timpairment_disability_percentage,\n\timpairment_disability_percentage_basis_code,\n\t-- *INF*: iif(impairment_disability_percentage_basis_code = 'N/A'\r\n\t-- ,'0'\r\n\t-- ,impairment_disability_percentage_basis_code)\n\tIFF(\n\t    impairment_disability_percentage_basis_code = 'N/A', '0',\n\t    impairment_disability_percentage_basis_code\n\t) AS o_impairment_disability_percentage_basis_code,\n\tmed_extinguishment_ind,\n\tret_to_work_rate_of_pay_ind,\n\t-- *INF*: iif(v_return_to_work_date = '00000000',\r\n\t-- ' ',ret_to_work_rate_of_pay_ind)\r\n\t-- \r\n\t-- --changes made by VS on 08/22/2011\n\tIFF(v_return_to_work_date = '00000000', ' ', ret_to_work_rate_of_pay_ind) AS o_ret_to_work_rate_of_pay_ind,\n\tmax_med_improvement_date,\n\tLoss_Condition_Code,\n\tsysdate AS create_date,\n\t'00000' AS prev_carrier_code,\n\t'00000000' AS prev_policy_eff_date,\n\t'00000000' AS Prev_reported_to_insurer_date,\n\tpol_sym1 AS pol_sym,\n\tClasscode1 AS Classcode,\n\t-- *INF*: IIF(pol_sym = '000',Classcode,SUBSTR(LTRIM(RTRIM(Classcode)),1,4))\n\tIFF(pol_sym = '000', Classcode, SUBSTR(LTRIM(RTRIM(Classcode)), 1, 4)) AS V_classcode,\n\tV_classcode AS O_classcode\n\tFROM JNR_Join_Medical_Data_With_Indemnity_Claims\n),\nUpd_Target AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id, \n\tedw_claim_party_occurrence_ak_id AS claimant_dim_id1, \n\tedw_pol_ak_id AS pol_dim_id1, \n\tedw_claim_occurrence_ak_id AS claim_occurrence_dim_id1, \n\tpol_key, \n\tpol_eff_date, \n\tclaim_num, \n\tjurisdiction_state_code, \n\tloss_loc_state, \n\tclaim_loss_date, \n\tsource_claim_rpted_date, \n\trisk_unit, \n\ttype_of_loss_code, \n\to_claimant_gndr AS claimant_gndr, \n\tbirth_yr, \n\thired_yr, \n\tavg_wkly_wage, \n\tpre_injury_avg_wkly_wage_code, \n\tbody_part_code, \n\tnature_inj_code, \n\tcause_inj_code, \n\tclaim_status_code, \n\tclaimant_close_date, \n\tIncurred_Indemnity_Amount_Total, \n\to_Total_Paid_Medical_Amount, \n\to_Incurred_Medical_Amount_Total, \n\twc_cat_code, \n\to_return_to_work_date AS return_to_work_date, \n\tcontroverted_case_code, \n\twc_claimant_num, \n\tpost_inj_wkly_wage_amt, \n\timpairment_disability_percentage, \n\to_impairment_disability_percentage_basis_code AS impairment_disability_percentage_basis_code, \n\tmed_extinguishment_ind, \n\to_ret_to_work_rate_of_pay_ind AS ret_to_work_rate_of_pay_ind, \n\tmax_med_improvement_date, \n\tLoss_Condition_Code, \n\tcreate_date, \n\tO_classcode\n\tFROM EXP_NCCI_Target\n),\nwork_claim_ncci_report_extract AS (\n\tMERGE INTO work_claim_ncci_report_extract AS T\n\tUSING Upd_Target AS S\n\tON T.work_claim_ncci_rpt_extract_id = S.work_claim_ncci_rpt_extract_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.pol_num_id = S.pol_key, T.pol_eff_date = S.pol_eff_date, T.claim_num_id = S.wc_claimant_num, T.jurisdiction_state = S.jurisdiction_state_code, T.acc_state = S.loss_loc_state, T.acc_date = S.claim_loss_date, T.reported_to_insr_date = S.source_claim_rpted_date, T.class_code = S.O_classcode, T.type_of_loss = S.type_of_loss_code, T.type_of_recovery = S.Loss_Condition_Code, T.claimant_gndr_code = S.claimant_gndr, T.birth_yr = S.birth_yr, T.hire_yr = S.hired_yr, T.preinjury_avg_weeky_wage_amt = S.avg_wkly_wage, T.method_of_determining_preinjury_avg_wkly_wage_code = S.pre_injury_avg_wkly_wage_code, T.part_of_body_code = S.body_part_code, T.nature_of_inj = S.nature_inj_code, T.cause_of_inj = S.cause_inj_code, T.claim_status_code = S.claim_status_code, T.closing_date = S.claimant_close_date, T.incurred_indemnity_amt_total = S.Incurred_Indemnity_Amount_Total, T.incurred_med_amt_total = S.o_Incurred_Medical_Amount_Total, T.total_paid_med_amt = S.o_Total_Paid_Medical_Amount, T.post_inj_wkly_wage_amt = S.post_inj_wkly_wage_amt, T.impairment_disability_percentage = S.impairment_disability_percentage, T.impairment_percentage_basis_code = S.impairment_disability_percentage_basis_code, T.max_med_improvement_date = S.max_med_improvement_date, T.controverted_disputed_case_ind = S.controverted_case_code, T.med_extinguishment_ind = S.med_extinguishment_ind, T.return_to_work_date = S.return_to_work_date, T.return_to_work_rate_of_pay_ind = S.ret_to_work_rate_of_pay_ind, T.extraordinary_loss_event_claim_ind = S.wc_cat_code\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NUMBER_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/ClaimDataServices/"
        },
        "annotations": []
    }
}