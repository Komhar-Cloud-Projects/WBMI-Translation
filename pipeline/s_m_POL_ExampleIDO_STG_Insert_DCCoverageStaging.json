{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCoverageStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCoverageStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_Coverage AS (\n\tSELECT\tX.ObjectId, \r\n\t\t\tX.ObjectName, \r\n\t\t\tX.CoverageId, \r\n\t\t\tX.SessionId, \r\n\t\t\tX.Id, \r\n\t\t\tX.Type, \r\n\t\t\tX.BaseRate, \r\n\t\t\tX.BasePremium, \r\n\t\t\tX.Premium, \r\n\t\t\tX.Change, \r\n\t\t\tX.Written, \r\n\t\t\tX.Prior, \r\n\t\t\tX.PriorTerm, \r\n\t\t\tX.CancelPremium, \r\n\t\t\tX.ExposureBasis, \r\n\t\t\tX.FullEarnedIndicator, \r\n\t\t\tX.LossCostModifier, \r\n\t\t\tX.PremiumFE, \r\n\t\t\tX.Deleted, \r\n\t\t\tX.Indicator \r\n\tFROM\r\n\t\t\tDC_Coverage X WITH(nolock)\r\n\t        INNER JOIN wbexampledata.dbo.wb_edwdataloadincrementalsessions Y WITH(\r\n\t                  nolock)\r\n\t               ON X.SessionId = Y.SessionId \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tObjectId,\n\tObjectName,\n\tCoverageId,\n\tSessionId,\n\tId,\n\tType,\n\tBaseRate,\n\tBasePremium,\n\tPremium,\n\tChange,\n\tWritten,\n\tPrior,\n\tPriorTerm,\n\tCancelPremium,\n\tExposureBasis,\n\tFullEarnedIndicator,\n\tLossCostModifier,\n\tPremiumFE,\n\tDeleted AS i_Deleted,\n\tIndicator AS i_Indicator,\n\t-- *INF*: DECODE(i_Deleted, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    i_Deleted,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_Deleted,\n\t-- *INF*: DECODE(i_Indicator, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    i_Indicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_Indicator,\n\t-- *INF*: DECODE(ExposureBasis, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    ExposureBasis,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExposureBasis,\n\t-- *INF*: DECODE(FullEarnedIndicator, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    FullEarnedIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_FullEarnedIndicator,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_Coverage\n),\nDCCoverageStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCoverageStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCoverageStaging\n\t(ObjectId, ObjectName, CoverageId, SessionId, Id, Type, BaseRate, BasePremium, Premium, Change, Written, Prior, PriorTerm, CancelPremium, ExposureBasis, FullEarnedIndicator, LossCostModifier, PremiumFE, ExtractDate, SourceSystemId, Deleted, Indicator)\n\tSELECT \n\tOBJECTID, \n\tOBJECTNAME, \n\tCOVERAGEID, \n\tSESSIONID, \n\tID, \n\tTYPE, \n\tBASERATE, \n\tBASEPREMIUM, \n\tPREMIUM, \n\tCHANGE, \n\tWRITTEN, \n\tPRIOR, \n\tPRIORTERM, \n\tCANCELPREMIUM, \n\to_ExposureBasis AS EXPOSUREBASIS, \n\to_FullEarnedIndicator AS FULLEARNEDINDICATOR, \n\tLOSSCOSTMODIFIER, \n\tPREMIUMFE, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\to_Deleted AS DELETED, \n\to_Indicator AS INDICATOR\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}