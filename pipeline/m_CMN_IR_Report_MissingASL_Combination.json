{
    "name": "m_CMN_IR_Report_MissingASL_Combination",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_IR_Report_MissingASL_Combination",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_RatingCoverage AS (\n\tSELECT DISTINCT RC.RiskType, RC.CoverageType, RC.CoverageVersion, RC.PerilGroup, RC.SubCoverageTypeCode, PC.InsuranceLine, ISNULL(SIL.StandardInsuranceLineCode,'N/A') StandardInsuranceLineCode, ISNULL(SIL.StandardInsuranceLineDescription,'N/A') StandardInsuranceLineDescription\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\tINNER JOIN\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\tON RC.PolicyCoverageAKId=PC.PolicyCoverageAKId\r\n\tLEFT JOIN\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL\r\n\tON SIL.ins_line_code=PC.InsuranceLine\r\n\tAND source_sys_id='DCT'\r\n\tAND crrnt_snpsht_flag=1\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_FormatValues AS (\n\tSELECT\n\tStandardInsuranceLineCode AS lkp_StandardInsuranceLineCode,\n\tStandardInsuranceLineDescription AS lkp_StandardInsuranceLineDescription,\n\tInsuranceLine AS i_LineType,\n\tCoverageType AS i_CoverageType,\n\tSubCoverageTypeCode AS i_SubCoverageType,\n\tRiskType AS i_RiskType,\n\tCoverageVersion AS i_CoverageVersion,\n\tPerilGroup AS i_PerilGroup,\n\t-- *INF*: IIF(IsNull(lkp_StandardInsuranceLineCode),'Line Not Found.  Source Line: ' || i_LineType, lkp_StandardInsuranceLineCode)\n\tIFF(lkp_StandardInsuranceLineCode IS NULL, 'Line Not Found.  Source Line: ' || i_LineType, lkp_StandardInsuranceLineCode) AS o_InsuranceLineCode,\n\t-- *INF*: IIF(IsNull(lkp_StandardInsuranceLineDescription), 'No Description Found For Line', lkp_StandardInsuranceLineDescription)\n\tIFF(lkp_StandardInsuranceLineDescription IS NULL, 'No Description Found For Line', lkp_StandardInsuranceLineDescription) AS o_InsuranceLineDescription,\n\t-- *INF*: IIF(IsNull(i_CoverageType) or IS_SPACES(i_CoverageType), 'N/A', rtrim(ltrim(i_CoverageType)))\n\tIFF(i_CoverageType IS NULL OR IS_SPACES(i_CoverageType), 'N/A', rtrim(ltrim(i_CoverageType))) AS o_CoverageType,\n\t-- *INF*: IIF(IsNull(i_SubCoverageType) or IS_SPACES(i_SubCoverageType), 'N/A', rtrim(ltrim(i_SubCoverageType)))\r\n\t-- \n\tIFF(i_SubCoverageType IS NULL OR IS_SPACES(i_SubCoverageType), 'N/A', rtrim(ltrim(i_SubCoverageType))) AS o_SubCoverageType,\n\t-- *INF*: IIF(IsNull(i_RiskType) or IS_SPACES(i_RiskType), 'N/A', rtrim(ltrim(i_RiskType)))\n\tIFF(i_RiskType IS NULL OR IS_SPACES(i_RiskType), 'N/A', rtrim(ltrim(i_RiskType))) AS o_RiskType,\n\t-- *INF*: IIF(IsNull(i_CoverageVersion) or IS_SPACES(i_CoverageVersion), 'N/A', rtrim(ltrim(i_CoverageVersion)))\r\n\t-- \n\tIFF(i_CoverageVersion IS NULL OR IS_SPACES(i_CoverageVersion), 'N/A', rtrim(ltrim(i_CoverageVersion))) AS o_CoverageVersion,\n\t-- *INF*: IIF(IsNull(i_PerilGroup) or IS_SPACES(i_PerilGroup), 'N/A', rtrim(ltrim(i_PerilGroup)))\r\n\t-- \n\tIFF(i_PerilGroup IS NULL OR IS_SPACES(i_PerilGroup), 'N/A', rtrim(ltrim(i_PerilGroup))) AS o_PerilGroup\n\tFROM SQ_RatingCoverage\n),\nAgg_Distinct AS (\n\tSELECT\n\to_InsuranceLineCode AS InsuranceLineCode, \n\to_InsuranceLineDescription AS InsuranceLineDescription, \n\to_CoverageType AS CoverageType, \n\to_SubCoverageType AS SubCoverageType, \n\to_RiskType AS RiskType, \n\to_CoverageVersion AS CoverageVersion, \n\to_PerilGroup AS PerilGroup\n\tFROM EXP_FormatValues\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode, InsuranceLineDescription, CoverageType, SubCoverageType, RiskType, CoverageVersion, PerilGroup ORDER BY NULL) = 1\n),\nLKP_SystemCoverage_IR AS (\n\tSELECT\n\tPmsRiskUnitGroupCode,\n\tPmsRiskUnitGroupDescription,\n\tPmsRiskUnitCode,\n\tPmsRiskUnitDescription,\n\tPmsMajorPerilCode,\n\tPmsMajorPerilDescription,\n\tPmsProductTypeCode,\n\tSystemCoverageId,\n\tConformedCoverageId,\n\tInsuranceLineCode,\n\tDctCoverageTypeCode,\n\tDctSubCoverageTypeCode,\n\tDctRiskTypeCode,\n\tDctCoverageVersion,\n\tDctPerilGroup\n\tFROM (\n\t\tSELECT \n\t\t\tPmsRiskUnitGroupCode,\n\t\t\tPmsRiskUnitGroupDescription,\n\t\t\tPmsRiskUnitCode,\n\t\t\tPmsRiskUnitDescription,\n\t\t\tPmsMajorPerilCode,\n\t\t\tPmsMajorPerilDescription,\n\t\t\tPmsProductTypeCode,\n\t\t\tSystemCoverageId,\n\t\t\tConformedCoverageId,\n\t\t\tInsuranceLineCode,\n\t\t\tDctCoverageTypeCode,\n\t\t\tDctSubCoverageTypeCode,\n\t\t\tDctRiskTypeCode,\n\t\t\tDctCoverageVersion,\n\t\t\tDctPerilGroup\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SystemCoverage\n\t\tWHERE SourceSystemId = 'DCT'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctCoverageTypeCode,DctSubCoverageTypeCode,DctRiskTypeCode,DctCoverageVersion,DctPerilGroup ORDER BY PmsRiskUnitGroupCode) = 1\n),\nLKP_CombinedConformedCoverage AS (\n\tSELECT\n\tConformedCoverageId,\n\tCoverageCode,\n\tCoverageDescription,\n\tCoverageGroupCode,\n\tCoverageGroupDescription,\n\tCoverageSummaryCode,\n\tCoverageSummaryDescription,\n\tRatedCoverageCode,\n\tRatedCoverageDescription\n\tFROM (\n\t\tSELECT CoverageCode as CoverageCode,\r\n\t\t       CoverageDescription as CoverageDescription,\r\n\t\t       CoverageGroupCode as CoverageGroupCode,\r\n\t\t       CoverageGroupDescription as CoverageGroupDescription,\r\n\t\t       CoverageSummaryCode as CoverageSummaryCode,\r\n\t\t       CoverageSummaryDescription as CoverageSummaryDescription,\r\n\t\t       ConformedCoverageId as ConformedCoverageId,\r\n\t\t\t   RatedCoverageCode as RatedCoverageCode, \r\n\t\t\t   RatedCoverageDescription as RatedCoverageDescription\r\n\t\tFROM   dbo.CONFORMEDCOVERAGE B\r\n\t\t       INNER JOIN dbo.COVERAGEGROUP C\r\n\t\t         ON B.CoverageGroupId = C.CoverageGroupId\r\n\t\t       INNER JOIN dbo.COVERAGESUMMARY D\r\n\t\t         ON C.CoverageSummaryId = D.CoverageSummaryId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ConformedCoverageId ORDER BY ConformedCoverageId) = 1\n),\nEXP_CheckForNew AS (\n\tSELECT\n\tLKP_SystemCoverage_IR.SystemCoverageId AS lkp_SystemCoverageId,\n\tLKP_CombinedConformedCoverage.ConformedCoverageId AS lkp_ConformedCoverageId,\n\t'NULL' AS NullValue,\n\tAgg_Distinct.InsuranceLineCode,\n\tAgg_Distinct.InsuranceLineDescription,\n\tAgg_Distinct.CoverageType,\n\tAgg_Distinct.SubCoverageType,\n\tAgg_Distinct.RiskType,\n\tAgg_Distinct.CoverageVersion,\n\tAgg_Distinct.PerilGroup,\n\tLKP_CombinedConformedCoverage.CoverageCode,\n\tLKP_CombinedConformedCoverage.CoverageDescription,\n\tLKP_CombinedConformedCoverage.CoverageGroupCode,\n\tLKP_CombinedConformedCoverage.CoverageGroupDescription,\n\tLKP_CombinedConformedCoverage.CoverageSummaryCode,\n\tLKP_CombinedConformedCoverage.CoverageSummaryDescription,\n\tLKP_SystemCoverage_IR.PmsRiskUnitGroupCode,\n\tLKP_SystemCoverage_IR.PmsRiskUnitGroupDescription,\n\tLKP_SystemCoverage_IR.PmsRiskUnitCode,\n\tLKP_SystemCoverage_IR.PmsRiskUnitDescription,\n\tLKP_SystemCoverage_IR.PmsMajorPerilCode,\n\tLKP_SystemCoverage_IR.PmsMajorPerilDescription,\n\tLKP_SystemCoverage_IR.PmsProductTypeCode,\n\tLKP_CombinedConformedCoverage.RatedCoverageCode,\n\tLKP_CombinedConformedCoverage.RatedCoverageDescription\n\tFROM Agg_Distinct\n\tLEFT JOIN LKP_CombinedConformedCoverage\n\tON LKP_CombinedConformedCoverage.ConformedCoverageId = LKP_SystemCoverage_IR.ConformedCoverageId\n\tLEFT JOIN LKP_SystemCoverage_IR\n\tON LKP_SystemCoverage_IR.InsuranceLineCode = Agg_Distinct.InsuranceLineCode AND LKP_SystemCoverage_IR.DctCoverageTypeCode = Agg_Distinct.CoverageType AND LKP_SystemCoverage_IR.DctSubCoverageTypeCode = Agg_Distinct.SubCoverageType AND LKP_SystemCoverage_IR.DctRiskTypeCode = Agg_Distinct.RiskType AND LKP_SystemCoverage_IR.DctCoverageVersion = Agg_Distinct.CoverageVersion AND LKP_SystemCoverage_IR.DctPerilGroup = Agg_Distinct.PerilGroup\n),\nFIL_UNK AS (\n\tSELECT\n\tNullValue AS ASLCode, \n\tNullValue AS ASLCodeDescription, \n\tNullValue AS SubASLCode, \n\tNullValue AS SubASLCodeDescription, \n\tNullValue AS NonSubASLCode, \n\tNullValue AS NonSubASLCodeDescription, \n\tInsuranceLineCode, \n\tInsuranceLineDescription, \n\tCoverageCode, \n\tCoverageDescription, \n\tCoverageGroupCode, \n\tCoverageGroupDescription, \n\tCoverageSummaryCode, \n\tCoverageSummaryDescription, \n\tRiskType AS DctRiskTypeCode, \n\tCoverageType AS DctCoverageTypeCode, \n\tPmsRiskUnitGroupCode, \n\tPmsRiskUnitGroupDescription, \n\tPmsRiskUnitCode, \n\tPmsRiskUnitDescription, \n\tPmsMajorPerilCode, \n\tPmsMajorPerilDescription, \n\tPmsProductTypeCode, \n\tPerilGroup AS DctPerilGroup, \n\tSubCoverageType AS DctSubCoverageTypeCode, \n\tCoverageVersion AS DctCoverageVersion, \n\tRatedCoverageCode, \n\tRatedCoverageDescription\n\tFROM EXP_CheckForNew\n\tWHERE @{pipeline().parameters.FILTER_CONDITION}\n),\nMissingASLCoverageCombinations AS (\n\tINSERT INTO MissingASLCoverageCombinations\n\t(ASLCode, ASLCodeDescription, SubASLCode, SubASLCodeDescription, NonSubASLCode, NonSubASLCodeDescription, InsuranceLineCode, InsuranceLineDescription, RatedCoverageCode, RatedCoverageDescription, CoverageCode, CoverageDescription, CoverageGroupCode, CoverageGroupDescription, CoverageSummaryCode, CoverageSummaryDescription, DctRiskTypeCode, DctCoverageTypeCode, PmsRiskUnitGroupCode, PmsRiskUnitGroupDescription, PmsRiskUnitCode, PmsRiskUnitDescription, PmsMajorPerilCode, PmsMajorPerilDescription, PmsProductTypeCode, DctPerilGroup, DctSubCoverageTypeCode, DctCoverageVersion)\n\tSELECT \n\tASLCODE, \n\tASLCODEDESCRIPTION, \n\tSUBASLCODE, \n\tSUBASLCODEDESCRIPTION, \n\tNONSUBASLCODE, \n\tNONSUBASLCODEDESCRIPTION, \n\tINSURANCELINECODE, \n\tINSURANCELINEDESCRIPTION, \n\tRATEDCOVERAGECODE, \n\tRATEDCOVERAGEDESCRIPTION, \n\tCOVERAGECODE, \n\tCOVERAGEDESCRIPTION, \n\tCOVERAGEGROUPCODE, \n\tCOVERAGEGROUPDESCRIPTION, \n\tCOVERAGESUMMARYCODE, \n\tCOVERAGESUMMARYDESCRIPTION, \n\tDCTRISKTYPECODE, \n\tDCTCOVERAGETYPECODE, \n\tPMSRISKUNITGROUPCODE, \n\tPMSRISKUNITGROUPDESCRIPTION, \n\tPMSRISKUNITCODE, \n\tPMSRISKUNITDESCRIPTION, \n\tPMSMAJORPERILCODE, \n\tPMSMAJORPERILDESCRIPTION, \n\tPMSPRODUCTTYPECODE, \n\tDCTPERILGROUP, \n\tDCTSUBCOVERAGETYPECODE, \n\tDCTCOVERAGEVERSION\n\tFROM FIL_UNK\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "where RC.AnnualStatementLineCode ='N/A'"
            },
            "FILTER_CONDITION": {
                "type": "string",
                "defaultValue": "CoverageCode<>'UNK'"
            },
            "OUTPUTFILENAME": {
                "type": "string",
                "defaultValue": "$PMSourceFileDir\\Coverage\\SRC_DCTASLCoverageMissingCombinations.csv"
            },
            "PMSUCCESSEMAILUSER": {
                "type": "string",
                "defaultValue": "UBollu@wbmi.com;DIntegration@wbmi.com;dgovernance@wbmi.com;GBinversie@WBMI.com ; dricke-smith@wbmi.com"
            },
            "EMAIL_SUBJECT": {
                "type": "string",
                "defaultValue": "Missing ASL combinations"
            }
        },
        "folder": {
            "name": "Common DataWarehouse/"
        },
        "annotations": []
    }
}