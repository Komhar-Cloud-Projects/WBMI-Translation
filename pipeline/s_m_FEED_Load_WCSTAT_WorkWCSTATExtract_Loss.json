{
	"name": "s_m_FEED_Load_WCSTAT_WorkWCSTATExtract_Loss",
	"properties": {
		"activities": [
			{
				"name": "m_FEED_Load_WCSTAT_WorkWCSTATExtract_Loss",
				"type": "Script",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "ls_SNOWFLAKE_WBMI",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "WITH\nLKP_MultiStatePolicy AS (\n\tSELECT\n\tPolicyAKId\n\tFROM (\n\t\tselect PolicyAKId as PolicyAKId\r\n\t\tfrom (\r\n\t\tSELECT distinct RL.PolicyAKId, RL.StateProvinceCode \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton RL.RiskLocationAKID = PC.RiskLocationAKID and RL.CurrentSnapshotFlag = 1\r\n\t\tand PC.CurrentSnapshotFlag  = 1\r\n\t\t)src\r\n\t\tgroup by PolicyAKId having count(*)>1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKId ORDER BY PolicyAKId) = 1\n),\nLKP_sup_state AS (\n\tSELECT\n\tstate_abbrev,\n\tstate_code\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(state_code)) as state_code,\r\n\t\tLTRIM(RTRIM(state_abbrev)) as state_abbrev \r\n\t\tFROM sup_state\r\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY state_abbrev) = 1\n),\nlkp_ClaimNumber AS (\n\tSELECT\n\tTypeOfRecoveryCode,\n\tClaim_Number,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tselect distinct RTRIM(Claim_Number) as Claim_Number, ,claim_party_occurrence_ak_id as claim_party_occurrence_ak_id,\r\n\t\tTypeOfRecoveryCode as TypeOfRecoveryCode \r\n\t\tfrom (\r\n\t\tSELECT (CASE WHEN rtrim(ltrim(co.s3p_claim_num)) ='N/A' THEN (RIGHT('000'+CAST((DATEDIFF(d, DATEADD(yy, DATEDIFF(yy,0,co.claim_loss_date),0),co.claim_loss_date)+1) AS VARCHAR),3)+co.claim_occurrence_num+cpo.claimant_num) ELSE co.s3p_claim_num END) AS Claim_Number,\r\n\t\tMAX(case when (cttd.pms_trans_code in ('81','82','83','84','85','86','87','88','89')) AND cltf.direct_subrogation_paid <> 0  then '03' else '01' end) AS TypeOfRecoveryCode\r\n\t\t,cpo.claim_party_occurrence_ak_id\r\n\t\tFROM claim_loss_transaction_fact cltf\r\n\t\tinner join claimant_coverage_dim  ccdim on ccdim.claimant_cov_dim_id = cltf.claimant_cov_dim_id\r\n\t\tINNER JOIN loss_master_fact LMF ON LMF.claimant_cov_dim_id=ccdim.claimant_cov_dim_id\r\n\t\tinner join claim_transaction_type_dim  cttd on cltf.claim_trans_type_dim_id =cttd.claim_trans_type_dim_id and trans_kind_code = 'D' \r\n\t\tinner join calendar_dim c on cltf.claim_trans_date_id=c.clndr_id\r\n\t\tinner join  @{pipeline().parameters.SOURCE_DATABASE_NAME_IL}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail  ccd\r\n\t\ton ccdim.edw_claimant_cov_det_ak_id =ccd.claimant_cov_det_ak_id  and ccd.crrnt_snpsht_flag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_IL}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence   cpo\r\n\t\tON ccd.claim_party_occurrence_ak_id=cpo.claim_party_occurrence_ak_id \r\n\t\tAND cpo.crrnt_snpsht_flag=1 AND ccd.crrnt_snpsht_flag = 1\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_IL}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence co\r\n\t\tON cpo.claim_occurrence_ak_id=co.claim_occurrence_ak_id \r\n\t\tAND co.crrnt_snpsht_flag=1 \r\n\t\tWHERE c.clndr_date <DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\r\n\t\tGROUP BY (CASE WHEN rtrim(ltrim(co.s3p_claim_num)) ='N/A' THEN (RIGHT('000'+CAST((DATEDIFF(d, DATEADD(yy, DATEDIFF(yy,0,co.claim_loss_date),0),co.claim_loss_date)+1) AS VARCHAR),3)+co.claim_occurrence_num+cpo.claimant_num) ELSE co.s3p_claim_num END)\r\n\t\t,cpo.claim_party_occurrence_ak_id\r\n\t\tHAVING MAX(case when (cttd.pms_trans_code in ('81','82','83','84','85','86','87','88','89')) AND cltf.direct_subrogation_paid <> 0  then '03' else '01' end) ='03'\r\n\t\t) t\r\n\t\torder by Claim_Number, claim_party_occurrence_ak_id,TypeOfRecoveryCode\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Claim_Number,claim_party_occurrence_ak_id ORDER BY TypeOfRecoveryCode) = 1\n),\nLKP_PremiumTransaction_pol_ak_id AS (\n\tSELECT\n\tpol_ak_id\n\tFROM (\n\t\tSELECT DISTINCT P.pol_ak_id AS pol_ak_id\r\n\t\t   from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID\r\n\t\tand SC.CurrentSnapshotFlag=1 and  PT.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\t\tand PC.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tand RL.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\t\ton P.pol_ak_id=RL.PolicyAKID \r\n\t\tand P.crrnt_snpsht_flag=1 \r\n\t\t\r\n\t\twhere SC.SourceSystemID='PMS'  \r\n\t\tand PC.TypeBureauCode in ('WC','WP','WorkersCompensation')  and  PT.PremiumType='D'   and PT.ReasonAmendedCode != 'CWO'\r\n\t\tand DATEDIFF(MM,P.pol_eff_date, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0) )  > 18\r\n\t\tand PT.PremiumTransactionBookedDate>=DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0)\r\n\t\tand PT.PremiumTransactionBookedDate<DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT DISTINCT  P.pol_ak_id AS pol_ak_id\r\n\t\t   from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton RC.RatingCoverageAKID=PT.RatingCoverageAKId\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate and PT.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\tand PC.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tand RL.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\t\ton P.pol_ak_id=RL.PolicyAKID \r\n\t\tand P.crrnt_snpsht_flag=1 \r\n\t\t\r\n\t\twhere RC.SourceSystemID='DCT' and PC.TypeBureauCode in ('WC','WP','WorkersCompensation')  and PT.PremiumType='D'\r\n\t\tand PT.ReasonAmendedCode NOT IN ('CWO','Claw Back')\r\n\t\tand DATEDIFF(MM,P.pol_eff_date, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0) )  > 18\r\n\t\tand PT.PremiumTransactionBookedDate>=DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0)\r\n\t\tand PT.PremiumTransactionBookedDate<DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}+1, 0)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id ORDER BY pol_ak_id) = 1\n),\nLKP_SupWorkersCompensationPremiumModifierClass AS (\n\tSELECT\n\tSupWorkersCompensationPremiumModifierClassId,\n\tClassCode,\n\tStateCode,\n\tin_ClassCode,\n\tin_StateCode\n\tFROM (\n\t\tSELECT \n\t\t\tSupWorkersCompensationPremiumModifierClassId,\n\t\t\tClassCode,\n\t\t\tStateCode,\n\t\t\tin_ClassCode,\n\t\t\tin_StateCode\n\t\tFROM SupWorkersCompensationPremiumModifierClass\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,StateCode ORDER BY SupWorkersCompensationPremiumModifierClassId) = 1\n),\nSEQTRANS AS (\n\tCREATE SEQUENCE SEQTRANS\n\tSTART = 0\n\tINCREMENT = 1;\n),\nSQ_WorkWCSTATLoss AS (\n\tSELECT\n\t\tWorkWCSTATLossId AS WorkWCStatLossID,\n\t\tAuditId AS AuditID,\n\t\tCreatedDate AS Createddate,\n\t\tModifiedDate,\n\t\tTypeBureauCode,\n\t\tPolicyNumber AS pol_num,\n\t\tPolicyModulus AS pol_mod,\n\t\tPolicySymbol AS pol_sym,\n\t\tStateProvinceCode,\n\t\tPolicyEffectiveDate AS pol_eff_date,\n\t\tPolicyExpiryDate AS pol_exp_date,\n\t\tPolicyCancellationDate AS pol_cancellation_date,\n\t\tPolicyCancellationIndicator AS pol_cancellation_ind,\n\t\tWCInterStateRiskId,\n\t\tFederalTaxId AS fed_tax_id,\n\t\tPolicyTerm AS pol_term,\n\t\tInsuranceSegmentAbbreviation,\n\t\tCustomerRole AS cust_role,\n\t\tName AS name,\n\t\tAddressLine1 AS addr_line_1,\n\t\tCityName AS city_name,\n\t\tStateProvCodeContractCustomerAddress AS state_prov_code_Contract_Customer_Address,\n\t\tZipPostalCode AS zip_postal_code,\n\t\tExposure,\n\t\tClassCode AS class_code,\n\t\tClaimLossDate AS claim_loss_date,\n\t\tClaimOccurrenceNumber AS claim_occurrence_num,\n\t\tS3pClaimNumber AS s3p_claim_num,\n\t\tClaimantStatusType AS claimant_status_type,\n\t\tClaimCatCode AS claim_cat_code,\n\t\tLossLocationState AS loss_loc_state,\n\t\tPolicyAKId AS pol_ak_id,\n\t\tLossCondition AS loss_condition,\n\t\tManagedCareOrganisationType AS managed_care_org_type,\n\t\tClaimPayCategoryLumpSumInd AS claim_pay_ctgry_lump_sum_ind,\n\t\tEstimatedAuditCode,\n\t\tAuditStatus,\n\t\tClaimPayCategoryType AS claim_pay_ctgry_type,\n\t\tPaidIndemnityAmount,\n\t\tPaidMedicalAmount,\n\t\tDeductibleReimbursementAmount,\n\t\tPaidAllocatedLossAdjustmentExpenseAmount,\n\t\tIncurredAllocatedLossAdjustmentExpenseAmount,\n\t\tIncurredIndemnityAmount,\n\t\tIncurredMedicalAmount,\n\t\tClaimantNum AS claimant_num,\n\t\tJurisdictionStateCode AS jurisdiction_state_code,\n\t\tClaimPartyOccurrenceAKId AS claim_party_occurrence_ak_id,\n\t\tTypeOfRecoveryCode,\n\t\tTypeOfLossCode AS type_of_loss_code,\n\t\tBodyPartCode AS body_part_code,\n\t\tNatureOfInjCode AS nature_of_inj_code,\n\t\tCauseInjCode AS cause_inj_code,\n\t\tClaimRelationshipKey,\n\t\tSuitHowClaimClosed,\n\t\tOccupationDescription,\n\t\tWeeklyWageAmount,\n\t\tEmployerAttorneyFees\n\tFROM WorkWCSTATLoss\n\tWHERE AuditId=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Loss AS (\n\tSELECT\n\tWorkWCStatLossID,\n\tAuditID AS AuditId,\n\tCreateddate AS CreatedDate,\n\tModifiedDate,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tpol_num AS i_pol_num,\n\tpol_mod AS i_pol_mod,\n\tpol_sym AS i_pol_sym,\n\tStateProvinceCode AS i_StateProvinceCode_RiskLocation,\n\tpol_eff_date AS i_pol_eff_date,\n\tpol_exp_date AS i_pol_exp_date,\n\tpol_cancellation_date AS i_pol_cancellation_date,\n\tpol_cancellation_ind AS i_pol_cancellation_ind,\n\tWCInterStateRiskId AS i_WCInterStateRiskId,\n\tfed_tax_id AS i_fed_tax_id,\n\tpol_term AS i_pol_term,\n\tInsuranceSegmentAbbreviation AS i_InsuranceSegmentAbbreviation,\n\tcust_role AS i_cust_role,\n\tname AS i_name,\n\taddr_line_1 AS i_addr_line_1,\n\tcity_name AS i_city_name,\n\tstate_prov_code_Contract_Customer_Address AS i_state_prov_code_Contract_Customer_Address,\n\tzip_postal_code AS i_zip_postal_code,\n\tExposure AS i_Exposure,\n\tclass_code AS i_class_code,\n\tclaim_loss_date AS i_claim_loss_date,\n\tclaim_occurrence_num AS i_claim_occurrence_num,\n\ts3p_claim_num AS i_s3p_claim_num,\n\tclaimant_status_type,\n\tclaim_cat_code AS i_claim_cat_code,\n\tloss_loc_state AS i_loss_loc_state,\n\tpol_ak_id AS i_pol_ak_id,\n\tloss_condition AS i_loss_condition,\n\tmanaged_care_org_type AS i_managed_care_org_type,\n\tclaim_pay_ctgry_lump_sum_ind AS i_claim_pay_ctgry_lump_sum_ind,\n\tEstimatedAuditCode AS i_EstimatedAuditCode,\n\tAuditStatus AS i_AuditStatus,\n\tclaim_pay_ctgry_type AS i_claim_pay_ctgry_type,\n\tPaidIndemnityAmount AS i_PaidIndemnityAmount,\n\tPaidMedicalAmount AS i_PaidMedicalAmount,\n\tDeductibleReimbursementAmount AS i_DeductibleReimbursementAmount,\n\tPaidAllocatedLossAdjustmentExpenseAmount AS i_PaidAllocatedLossAdjustmentExpenseAmount,\n\tIncurredAllocatedLossAdjustmentExpenseAmount AS i_IncurredAllocatedLossAdjustmentExpenseAmount,\n\tIncurredIndemnityAmount AS i_IncurredIndemnityAmount,\n\tIncurredMedicalAmount AS i_IncurredMedicalAmount,\n\tclaimant_num AS i_claimant_num,\n\tjurisdiction_state_code AS i_jurisdiction_state_code,\n\tclaim_party_occurrence_ak_id,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_addr_line_1))='N/A', '', LTRIM(RTRIM(i_addr_line_1)))\n\tIFF(LTRIM(RTRIM(i_addr_line_1)) = 'N/A', '', LTRIM(RTRIM(i_addr_line_1))) AS v_addr_line_1,\n\tTypeOfRecoveryCode AS lkp_TypeOfRecoveryCode,\n\ttype_of_loss_code AS lkp_type_of_loss_code,\n\tbody_part_code AS lkp_body_part_code,\n\tnature_of_inj_code AS lkp_nature_of_inj_code,\n\tcause_inj_code AS lkp_cause_inj_code,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_city_name))='N/A', '', LTRIM(RTRIM(i_city_name)))\n\tIFF(LTRIM(RTRIM(i_city_name)) = 'N/A', '', LTRIM(RTRIM(i_city_name))) AS v_city_name,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_state_prov_code_Contract_Customer_Address))='N/A', '', LTRIM(RTRIM(i_state_prov_code_Contract_Customer_Address)))\n\tIFF(\n\t    LTRIM(RTRIM(i_state_prov_code_Contract_Customer_Address)) = 'N/A', '',\n\t    LTRIM(RTRIM(i_state_prov_code_Contract_Customer_Address))\n\t) AS v_state_prov_code,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_zip_postal_code))='N/A', '', LTRIM(RTRIM(i_zip_postal_code)))\n\tIFF(LTRIM(RTRIM(i_zip_postal_code)) = 'N/A', '', LTRIM(RTRIM(i_zip_postal_code))) AS v_zip_postal_code,\n\t-- *INF*: :LKP.LKP_sup_state(LTRIM(RTRIM(i_jurisdiction_state_code)))\n\tLKP_SUP_STATE_LTRIM_RTRIM_i_jurisdiction_state_code.state_abbrev AS v_JurisdictionStateCode,\n\t-- *INF*: IIF(ISNULL(i_claim_occurrence_num) OR IS_SPACES(i_claim_occurrence_num) OR LENGTH(i_claim_occurrence_num)=0 OR i_claim_occurrence_num='N/A' OR IS_NUMBER(i_claim_occurrence_num)=0, 0, TO_INTEGER(i_claim_occurrence_num))\n\tIFF(\n\t    i_claim_occurrence_num IS NULL\n\t    or LENGTH(i_claim_occurrence_num)>0\n\t    and TRIM(i_claim_occurrence_num)=''\n\t    or LENGTH(i_claim_occurrence_num) = 0\n\t    or i_claim_occurrence_num = 'N/A'\n\t    or REGEXP_LIKE(i_claim_occurrence_num, '^[0-9]+$') = 0,\n\t    0,\n\t    CAST(i_claim_occurrence_num AS INTEGER)\n\t) AS v_claim_occurrence_num,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_MULTISTATEPOLICY(i_pol_ak_id)), '0', '1')\n\tIFF(LKP_MULTISTATEPOLICY_i_pol_ak_id.PolicyAKId IS NULL, '0', '1') AS v_MultistatePolicyIndicator,\n\t-- *INF*: IIF( rtrim(ltrim(i_s3p_claim_num)) ='N/A', TO_CHAR(i_claim_loss_date , 'DDD')  || i_claim_occurrence_num||i_claimant_num, i_s3p_claim_num)\n\tIFF(\n\t    rtrim(ltrim(i_s3p_claim_num)) = 'N/A',\n\t    TO_CHAR(i_claim_loss_date, 'DDD') || i_claim_occurrence_num || i_claimant_num,\n\t    i_s3p_claim_num\n\t) AS v_ClaimNumber,\n\t-- *INF*: IIF(\r\n\t-- NOT ISNULL(:LKP.LKP_CLAIMNUMBER(v_ClaimNumber,claim_party_occurrence_ak_id)),\r\n\t-- :LKP.LKP_CLAIMNUMBER(v_ClaimNumber,claim_party_occurrence_ak_id),\r\n\t-- IIF(ISNULL(LTRIM(RTRIM(lkp_TypeOfRecoveryCode))),'N/A',\r\n\t-- LTRIM(RTRIM(lkp_TypeOfRecoveryCode))))\n\tIFF(\n\t    LKP_CLAIMNUMBER_v_ClaimNumber_claim_party_occurrence_ak_id.TypeOfRecoveryCode IS NOT NULL,\n\t    LKP_CLAIMNUMBER_v_ClaimNumber_claim_party_occurrence_ak_id.TypeOfRecoveryCode,\n\t    IFF(\n\t        LTRIM(RTRIM(lkp_TypeOfRecoveryCode)) IS NULL, 'N/A',\n\t        LTRIM(RTRIM(lkp_TypeOfRecoveryCode))\n\t    )\n\t) AS o_TypeOfRecoveryCode,\n\tclaim_party_occurrence_ak_id AS o_loss_master_calculation_id,\n\t-- *INF*: RTRIM(LTRIM(i_TypeBureauCode))\n\tRTRIM(LTRIM(i_TypeBureauCode)) AS o_TypeBureauCode,\n\t-- *INF*: ADD_TO_DATE(LAST_DAY(SESSSTARTTIME),'MM',@{pipeline().parameters.NUM_OF_MONTHS})\r\n\t-- \n\tDATEADD(MONTH,@{pipeline().parameters.NUM_OF_MONTHS},LAST_DAY(SESSSTARTTIME)) AS o_LossMasterRunDate,\n\t'17124' AS o_BureauCompanyCode,\n\t-- *INF*: RTRIM(LTRIM(i_pol_sym || i_pol_num || i_pol_mod))\n\tRTRIM(LTRIM(i_pol_sym || i_pol_num || i_pol_mod)) AS o_PolicyKey,\n\t-- *INF*: RTRIM(LTRIM(i_StateProvinceCode_RiskLocation))\n\tRTRIM(LTRIM(i_StateProvinceCode_RiskLocation)) AS o_StateProvinceCode,\n\t-- *INF*: TRUNC(i_pol_eff_date, 'DD')\n\tCAST(TRUNC(i_pol_eff_date, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_PolicyEffectiveDate,\n\t-- *INF*: IIF(i_pol_cancellation_ind='Y' AND i_pol_cancellation_date  != TO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'), TRUNC(i_pol_cancellation_date, 'DD'), TRUNC(i_pol_exp_date,'DD'))\n\tIFF(\n\t    i_pol_cancellation_ind = 'Y'\n\t    and i_pol_cancellation_date != TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    CAST(TRUNC(i_pol_cancellation_date, 'DAY') AS TIMESTAMP_NTZ(0)),\n\t    CAST(TRUNC(i_pol_exp_date, 'DAY') AS TIMESTAMP_NTZ(0))\n\t) AS o_PolicyEndDate,\n\t-- *INF*: IIF(ISNULL(i_WCInterStateRiskId), LPAD('', 9, '0'), RTRIM(LTRIM(TO_CHAR(i_WCInterStateRiskId))))\n\tIFF(\n\t    i_WCInterStateRiskId IS NULL, LPAD('', 9, '0'), RTRIM(LTRIM(TO_CHAR(i_WCInterStateRiskId)))\n\t) AS o_InterstateRiskId,\n\t-- *INF*: --Removed lookup as part of PROD-6820 and PROD-13914/12901/13877\r\n\t-- -- As per historic data, it was never used as this form was on none of the policies\r\n\t-- --IIF( NOT ISNULL(:LKP.LKP_POLICYFORM_FORM(i_pol_id, 'WC000316')), 'E', '')\r\n\t-- ''\n\t'' AS o_EmployeeLeasingCode,\n\t-- *INF*: IIF(i_fed_tax_id='N/A', LPAD('',10, ' '),LPAD(SUBSTR(i_fed_tax_id, 1, 10), 10, '0'))\n\tIFF(i_fed_tax_id = 'N/A', LPAD('', 10, ' '), LPAD(SUBSTR(i_fed_tax_id, 1, 10), 10, '0')) AS o_FederalTaxId,\n\t-- *INF*: IIF(LTRIM(i_pol_term,'0')='36', '1', '0')\n\tIFF(LTRIM(i_pol_term, '0') = '36', '1', '0') AS o_ThreeYearFixedRatePolicyIndicator,\n\tv_MultistatePolicyIndicator AS o_MultistatePolicyIndicator,\n\t-- *INF*: IIF(i_StateProvinceCode_RiskLocation='21', 0,\r\n\t--      IIF(LENGTH(i_WCInterStateRiskId)=9,1,0))\r\n\t-- \r\n\t-- --IIF(ISNULL(i_WCInterStateRiskId) OR i_WCInterStateRiskId='-1' OR i_WCInterStateRiskId='N/A'  , '0', '1')\n\tIFF(\n\t    i_StateProvinceCode_RiskLocation = '21', 0,\n\t    IFF(\n\t        LENGTH(i_WCInterStateRiskId) = 9, 1, 0\n\t    )\n\t) AS o_InterstateRatedPolicyIndicator,\n\t'0' AS o_RetrospectiveRatedPolicyIndicator,\n\t-- *INF*: IIF(i_pol_cancellation_date   >=   i_pol_eff_date  AND  i_pol_cancellation_date  <=  i_pol_exp_date, '1', '0')\n\tIFF(\n\t    i_pol_cancellation_date >= i_pol_eff_date AND i_pol_cancellation_date <= i_pol_exp_date, '1',\n\t    '0'\n\t) AS o_CancelledMidTermPolicyIndicator,\n\t-- *INF*: IIF(IN(i_StateProvinceCode_RiskLocation, '22', '21'), '0', '1')\n\tIFF(i_StateProvinceCode_RiskLocation IN ('22','21'), '0', '1') AS o_ManagedCareOrganizationPolicyIndicator,\n\t'01' AS o_TypeOfCoverageIdCode,\n\t-- *INF*: IIF(i_InsuranceSegmentAbbreviation='Pool', '02', '01')\n\tIFF(i_InsuranceSegmentAbbreviation = 'Pool', '02', '01') AS o_TypeOfPlan,\n\t'0' AS o_DeductibleAmountPerClaimAccident,\n\t-- *INF*: IIF(UPPER(i_cust_role)='INSURED',RTRIM(LTRIM( i_name)), 'N/A')\n\tIFF(UPPER(i_cust_role) = 'INSURED', RTRIM(LTRIM(i_name)), 'N/A') AS o_InsuredName,\n\t-- *INF*: substr(v_addr_line_1 || ' ' || v_city_name || ' ,' || v_state_prov_code || ' ' || v_zip_postal_code,1,500)\n\tsubstr(v_addr_line_1 || ' ' || v_city_name || ' ,' || v_state_prov_code || ' ' || v_zip_postal_code, 1, 500) AS o_WCSTATAddress,\n\ti_Exposure AS o_Exposure,\n\t-- *INF*: RTRIM(LTRIM(i_class_code))\n\tRTRIM(LTRIM(i_class_code)) AS o_LossMasterClassCode,\n\t-- *INF*: TRUNC(i_claim_loss_date,'DD')\n\tCAST(TRUNC(i_claim_loss_date, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_ClaimLossDate,\n\t-- *INF*: RTRIM(LTRIM(v_ClaimNumber))\n\tRTRIM(LTRIM(v_ClaimNumber)) AS o_ClaimNumber,\n\t-- *INF*: RTRIM(LTRIM(claimant_status_type))\n\tRTRIM(LTRIM(claimant_status_type)) AS o_ClaimOccurrenceStatusCode,\n\t-- *INF*: -- This field is coded in the last expression transformation\r\n\t-- \r\n\t-- ''\n\t'' AS o_InjuryTypeCode,\n\t-- *INF*: RTRIM(LTRIM(i_claim_cat_code))\n\tRTRIM(LTRIM(i_claim_cat_code)) AS o_CatastropheCode,\n\t'N/A' AS o_CauseOfLoss,\n\tv_JurisdictionStateCode AS o_JurisdictionStateCode,\n\t-- *INF*: RTRIM(LTRIM(lkp_body_part_code))\n\tRTRIM(LTRIM(lkp_body_part_code)) AS o_BodyPartCode,\n\t-- *INF*: RTRIM(LTRIM(lkp_nature_of_inj_code))\n\tRTRIM(LTRIM(lkp_nature_of_inj_code)) AS o_NatureOfInjuryCode,\n\t-- *INF*: RTRIM(LTRIM(lkp_cause_inj_code))\n\tRTRIM(LTRIM(lkp_cause_inj_code)) AS o_CauseOfInjuryCode,\n\t-- *INF*: IIF(IN(RTRIM(LTRIM(lkp_type_of_loss_code)),'01','02','03'),RTRIM(LTRIM(lkp_type_of_loss_code)),'01')\r\n\t-- \n\tIFF(\n\t    RTRIM(LTRIM(lkp_type_of_loss_code)) IN ('01','02','03'), RTRIM(LTRIM(lkp_type_of_loss_code)),\n\t    '01'\n\t) AS o_type_of_loss_code,\n\t-- *INF*: IIF(IN(i_StateProvinceCode_RiskLocation, '22', '21'), '00', '03')\n\tIFF(i_StateProvinceCode_RiskLocation IN ('22','21'), '00', '03') AS o_managed_care_org_type,\n\t-- *INF*: IIF(ISNULL(i_claim_pay_ctgry_lump_sum_ind), 'N',RTRIM(LTRIM(i_claim_pay_ctgry_lump_sum_ind)))\r\n\t-- \n\tIFF(\n\t    i_claim_pay_ctgry_lump_sum_ind IS NULL, 'N', RTRIM(LTRIM(i_claim_pay_ctgry_lump_sum_ind))\n\t) AS o_LumpSumIndicator,\n\t-- *INF*: IIF(ISNULL(i_EstimatedAuditCode),'N/A',i_EstimatedAuditCode)\n\tIFF(i_EstimatedAuditCode IS NULL, 'N/A', i_EstimatedAuditCode) AS o_EstimatedAuditCode,\n\t-- *INF*: RTRIM(LTRIM(i_claim_pay_ctgry_type))\n\tRTRIM(LTRIM(i_claim_pay_ctgry_type)) AS o_ClaimPayCategoryCode,\n\tClaimRelationshipKey,\n\tSuitHowClaimClosed,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM SQ_WorkWCSTATLoss\n\tLEFT JOIN LKP_SUP_STATE LKP_SUP_STATE_LTRIM_RTRIM_i_jurisdiction_state_code\n\tON LKP_SUP_STATE_LTRIM_RTRIM_i_jurisdiction_state_code.state_code = LTRIM(RTRIM(i_jurisdiction_state_code))\n\n\tLEFT JOIN LKP_MULTISTATEPOLICY LKP_MULTISTATEPOLICY_i_pol_ak_id\n\tON LKP_MULTISTATEPOLICY_i_pol_ak_id.PolicyAKId = i_pol_ak_id\n\n\tLEFT JOIN LKP_CLAIMNUMBER LKP_CLAIMNUMBER_v_ClaimNumber_claim_party_occurrence_ak_id\n\tON LKP_CLAIMNUMBER_v_ClaimNumber_claim_party_occurrence_ak_id.Claim_Number = v_ClaimNumber\n\tAND LKP_CLAIMNUMBER_v_ClaimNumber_claim_party_occurrence_ak_id.claim_party_occurrence_ak_id = claim_party_occurrence_ak_id\n\n),\nLKP_WorkWCSTATExtract_Loss AS (\n\tSELECT\n\tExposure,\n\tCorrectionSeqNumber,\n\tPolicyKey,\n\tStateProvinceCode,\n\tLossMasterClassCode\n\tFROM (\n\t\tSELECT A.Exposure as Exposure, \r\n\t\tA.CorrectionSeqNumber as CorrectionSeqNumber,\r\n\t\tA.PolicyKey as PolicyKey, \r\n\t\tA.StateProvinceCode as StateProvinceCode, \r\n\t\tA.LossMasterClassCode as LossMasterClassCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkWCSTATExtract A\r\n\t\tjoin (\r\n\t\tSELECT max(LossMasterRunDate) as LossMasterRunDate, \r\n\t\tmax(CorrectionSeqNumber) as CorrectionSeqNumber,\r\n\t\tPolicyKey as PolicyKey, \r\n\t\tStateProvinceCode as StateProvinceCode, \r\n\t\tLossMasterClassCode as LossMasterClassCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkWCSTATExtract\r\n\t\twhere EDWLossMasterCalculationPKId<>-1\r\n\t\tgroup by PolicyKey, \r\n\t\tStateProvinceCode, \r\n\t\tLossMasterClassCode\r\n\t\t) B\r\n\t\ton A.PolicyKey=B.PolicyKey and A.StateProvinceCode=B.StateProvinceCode and A.LossMasterClassCode=B.LossMasterClassCode\r\n\t\tand A.LossMasterRunDate=B.LossMasterRunDate and A.CorrectionSeqNumber=B.CorrectionSeqNumber\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,StateProvinceCode,LossMasterClassCode ORDER BY Exposure) = 1\n),\nEXP_GetValueForLoss AS (\n\tSELECT\n\tLKP_WorkWCSTATExtract_Loss.Exposure AS i_lkp_Exposure,\n\tLKP_WorkWCSTATExtract_Loss.CorrectionSeqNumber AS i_lkp_CorrectionSeqNumber,\n\tEXP_Loss.i_AuditStatus,\n\t-1 AS EDWPremiumMasterCalculationPKId,\n\tEXP_Loss.o_loss_master_calculation_id AS EDWLossMasterCalculationPKId,\n\tEXP_Loss.o_TypeBureauCode AS TypeBureauCode,\n\t-- *INF*:  TO_DATE('1800-01-01', 'YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS o_premium_master_run_date_loss,\n\tEXP_Loss.o_LossMasterRunDate AS LossMasterRunDate,\n\tEXP_Loss.o_BureauCompanyCode AS BureauCompanyCode,\n\tEXP_Loss.o_PolicyKey AS PolicyKey,\n\tEXP_Loss.o_StateProvinceCode AS StateProvinceCode,\n\tEXP_Loss.o_PolicyEffectiveDate AS PolicyEffectiveDate,\n\tEXP_Loss.o_PolicyEndDate AS PolicyEndDate,\n\tEXP_Loss.o_InterstateRiskId AS InterstateRiskId,\n\tEXP_Loss.o_EmployeeLeasingCode AS EmployeeLeasingCode,\n\t-- *INF*:  TO_DATE('1800-01-01', 'YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS o_state_rating_eff_date_loss,\n\tEXP_Loss.o_FederalTaxId AS FederalTaxId,\n\tEXP_Loss.o_ThreeYearFixedRatePolicyIndicator AS ThreeYearFixedRatePolicyIndicator,\n\tEXP_Loss.o_MultistatePolicyIndicator AS MultistatePolicyIndicator,\n\tEXP_Loss.o_InterstateRatedPolicyIndicator AS InterstateRatedPolicyIndicator,\n\tEXP_Loss.o_RetrospectiveRatedPolicyIndicator AS RetrospectiveRatedPolicyIndicator,\n\tEXP_Loss.o_CancelledMidTermPolicyIndicator AS CancelledMidTermPolicyIndicator,\n\tEXP_Loss.o_ManagedCareOrganizationPolicyIndicator AS ManagedCareOrganizationPolicyIndicator,\n\tEXP_Loss.o_TypeOfCoverageIdCode AS TypeOfCoverageIdCode,\n\tEXP_Loss.o_TypeOfPlan AS TypeOfPlan,\n\tEXP_Loss.o_DeductibleAmountPerClaimAccident AS DeductibleAmountPerClaimAccident,\n\tEXP_Loss.o_InsuredName AS InsuredName,\n\tEXP_Loss.o_WCSTATAddress AS WCSTATAddress,\n\t'N/A' AS o_premium_master_classcode_loss,\n\t0 AS o_experience_modiyfactor_loss,\n\t-- *INF*:  TO_DATE('1800-01-01', 'YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS o_experience_modifyeffdate_loss,\n\tEXP_Loss.o_Exposure AS Exposure,\n\t0 AS o_PremiumMasterDirectWrittenPremiumAmount_loss,\n\t0 AS o_ManualChargedRate_loss,\n\tEXP_Loss.o_LossMasterClassCode AS LossMasterClassCode,\n\tEXP_Loss.o_ClaimLossDate AS ClaimLossDate,\n\tEXP_Loss.i_claim_loss_date AS ClaimLossDate1,\n\tEXP_Loss.o_ClaimNumber AS ClaimNumber,\n\tEXP_Loss.o_ClaimOccurrenceStatusCode AS ClaimOccurrenceStatusCode,\n\tEXP_Loss.o_InjuryTypeCode AS InjuryTypeCode,\n\tEXP_Loss.o_CatastropheCode AS CatastropheCode,\n\tEXP_Loss.i_IncurredIndemnityAmount,\n\t-- *INF*: IIF(ISNULL(i_IncurredIndemnityAmount),0,i_IncurredIndemnityAmount)\n\tIFF(i_IncurredIndemnityAmount IS NULL, 0, i_IncurredIndemnityAmount) AS v_IncurredIndemnityAmount,\n\tv_IncurredIndemnityAmount AS o_IncurredIndemnityAmount,\n\tEXP_Loss.i_IncurredMedicalAmount,\n\t-- *INF*: IIF(ISNULL(i_IncurredMedicalAmount),0,i_IncurredMedicalAmount)\n\tIFF(i_IncurredMedicalAmount IS NULL, 0, i_IncurredMedicalAmount) AS v_IncurredMedicalAmount,\n\tv_IncurredMedicalAmount AS o_IncurredMedicalAmount,\n\tEXP_Loss.o_CauseOfLoss AS CauseOfLoss,\n\tEXP_Loss.o_TypeOfRecoveryCode AS TypeOfRecoveryCode,\n\tEXP_Loss.o_JurisdictionStateCode AS JurisdictionStateCode,\n\tEXP_Loss.o_BodyPartCode AS BodyPartCode,\n\tEXP_Loss.o_NatureOfInjuryCode AS NatureOfInjuryCode,\n\tEXP_Loss.o_CauseOfInjuryCode AS CauseOfInjuryCode,\n\tEXP_Loss.i_PaidIndemnityAmount,\n\t-- *INF*: IIF(ISNULL(i_PaidIndemnityAmount),0,i_PaidIndemnityAmount)\n\tIFF(i_PaidIndemnityAmount IS NULL, 0, i_PaidIndemnityAmount) AS PaidIndemnityAmount,\n\tEXP_Loss.i_PaidMedicalAmount,\n\t-- *INF*: IIF(ISNULL(i_PaidMedicalAmount),0,i_PaidMedicalAmount)\n\tIFF(i_PaidMedicalAmount IS NULL, 0, i_PaidMedicalAmount) AS PaidMedicalAmount,\n\tEXP_Loss.i_DeductibleReimbursementAmount,\n\t-- *INF*: IIF(ISNULL(i_DeductibleReimbursementAmount),0,i_DeductibleReimbursementAmount)\n\tIFF(i_DeductibleReimbursementAmount IS NULL, 0, i_DeductibleReimbursementAmount) AS DeductibleReimbursementAmount,\n\tEXP_Loss.i_PaidAllocatedLossAdjustmentExpenseAmount,\n\t-- *INF*: IIF(ISNULL(i_PaidAllocatedLossAdjustmentExpenseAmount),0,i_PaidAllocatedLossAdjustmentExpenseAmount)\n\tIFF(\n\t    i_PaidAllocatedLossAdjustmentExpenseAmount IS NULL, 0,\n\t    i_PaidAllocatedLossAdjustmentExpenseAmount\n\t) AS PaidAllocatedLossAdjustmentExpenseAmount,\n\tEXP_Loss.i_IncurredAllocatedLossAdjustmentExpenseAmount,\n\t-- *INF*: IIF(ISNULL(i_IncurredAllocatedLossAdjustmentExpenseAmount),0,i_IncurredAllocatedLossAdjustmentExpenseAmount)\n\tIFF(\n\t    i_IncurredAllocatedLossAdjustmentExpenseAmount IS NULL, 0,\n\t    i_IncurredAllocatedLossAdjustmentExpenseAmount\n\t) AS v_IncurredAllocatedLossAdjustmentExpenseAmount,\n\tv_IncurredAllocatedLossAdjustmentExpenseAmount AS o_IncurredAllocatedLossAdjustmentExpenseAmount,\n\tEXP_Loss.o_type_of_loss_code AS type_of_loss_code,\n\tEXP_Loss.SuitHowClaimClosed,\n\t-- *INF*: DECODE (TRUE,\r\n\t-- v_IncurredIndemnityAmount=0 AND v_IncurredMedicalAmount=0 AND v_IncurredAllocatedLossAdjustmentExpenseAmount>=0 AND TypeOfRecoveryCode<>'03'  ,'05',\r\n\t-- v_IncurredIndemnityAmount=0 AND v_IncurredMedicalAmount=0 AND v_IncurredAllocatedLossAdjustmentExpenseAmount>0 AND TypeOfRecoveryCode='03' ,'00',\r\n\t-- SuitHowClaimClosed='B' OR  SuitHowClaimClosed= 'U','04',\r\n\t-- SuitHowClaimClosed='S', '06',\r\n\t-- '00')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --'00'\n\tDECODE(\n\t    TRUE,\n\t    v_IncurredIndemnityAmount = 0 AND v_IncurredMedicalAmount = 0 AND v_IncurredAllocatedLossAdjustmentExpenseAmount >= 0 AND TypeOfRecoveryCode <> '03', '05',\n\t    v_IncurredIndemnityAmount = 0 AND v_IncurredMedicalAmount = 0 AND v_IncurredAllocatedLossAdjustmentExpenseAmount > 0 AND TypeOfRecoveryCode = '03', '00',\n\t    SuitHowClaimClosed = 'B' OR SuitHowClaimClosed = 'U', '04',\n\t    SuitHowClaimClosed = 'S', '06',\n\t    '00'\n\t) AS TypeOfSettlement,\n\tEXP_Loss.o_managed_care_org_type AS managed_care_org_type,\n\tEXP_Loss.o_LumpSumIndicator AS LumpSumIndicator,\n\tEXP_Loss.o_EstimatedAuditCode AS EstimatedAuditCode,\n\t-- *INF*: IIF(IS_NUMBER(i_lkp_CorrectionSeqNumber), TO_INTEGER(i_lkp_CorrectionSeqNumber), 0)\n\tIFF(\n\t    REGEXP_LIKE(i_lkp_CorrectionSeqNumber, '^[0-9]+$'),\n\t    CAST(i_lkp_CorrectionSeqNumber AS INTEGER),\n\t    0\n\t) AS v_lkp_CorrectionSeqNumber,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_lkp_Exposure),\r\n\t-- '',\r\n\t-- i_lkp_Exposure != Exposure AND IN(UPPER(i_AuditStatus), 'COMPLETED', 'ESTIMATED', 'AMENDED', 'CANCELLED'),\r\n\t-- TO_CHAR(v_lkp_CorrectionSeqNumber+1),\r\n\t-- ''\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_lkp_Exposure IS NULL, '',\n\t    i_lkp_Exposure != Exposure AND UPPER(i_AuditStatus) IN ('COMPLETED','ESTIMATED','AMENDED','CANCELLED'), TO_CHAR(v_lkp_CorrectionSeqNumber + 1),\n\t    ''\n\t) AS o_CorrectionSeqNumber,\n\tEXP_Loss.o_ClaimPayCategoryCode AS ClaimPayCategoryCode,\n\tEXP_Loss.i_claimant_num AS claimant_num,\n\tEXP_Loss.ClaimRelationshipKey,\n\tEXP_Loss.claim_party_occurrence_ak_id,\n\tEXP_Loss.OccupationDescription,\n\tEXP_Loss.WeeklyWageAmount,\n\tEXP_Loss.EmployerAttorneyFees\n\tFROM EXP_Loss\n\tLEFT JOIN LKP_WorkWCSTATExtract_Loss\n\tON LKP_WorkWCSTATExtract_Loss.PolicyKey = EXP_Loss.o_PolicyKey AND LKP_WorkWCSTATExtract_Loss.StateProvinceCode = EXP_Loss.o_StateProvinceCode AND LKP_WorkWCSTATExtract_Loss.LossMasterClassCode = EXP_Loss.o_LossMasterClassCode\n),\nAGG_summarize_amounts AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId,\n\tEDWLossMasterCalculationPKId,\n\t-- *INF*: max(EDWLossMasterCalculationPKId)\n\tmax(EDWLossMasterCalculationPKId) AS o_EDWLossMasterCalculationPKId,\n\tTypeBureauCode,\n\to_premium_master_run_date_loss AS PremiumMasterRunDate,\n\tLossMasterRunDate,\n\tBureauCompanyCode,\n\tPolicyKey,\n\tStateProvinceCode,\n\tPolicyEffectiveDate,\n\tPolicyEndDate,\n\tInterstateRiskId,\n\tEmployeeLeasingCode,\n\to_state_rating_eff_date_loss AS StateRatingEffectiveDate,\n\tFederalTaxId,\n\tThreeYearFixedRatePolicyIndicator,\n\tMultistatePolicyIndicator,\n\tInterstateRatedPolicyIndicator,\n\tRetrospectiveRatedPolicyIndicator AS RetrospectiveratedPolicyIndicator,\n\tCancelledMidTermPolicyIndicator,\n\tManagedCareOrganizationPolicyIndicator,\n\tTypeOfCoverageIdCode,\n\tTypeOfPlan,\n\tDeductibleAmountPerClaimAccident,\n\tInsuredName,\n\tWCSTATAddress,\n\to_premium_master_classcode_loss AS PremiumMasterClassCode,\n\to_experience_modiyfactor_loss AS ExperienceModificationFactor,\n\to_experience_modifyeffdate_loss AS ExperienceModificationEffectiveDate,\n\tExposure,\n\to_PremiumMasterDirectWrittenPremiumAmount_loss AS PremiumMasterDirectWrittenPremiumAmount,\n\to_ManualChargedRate_loss AS ManualChargedRate,\n\tLossMasterClassCode,\n\tClaimLossDate,\n\tClaimLossDate1,\n\tClaimNumber,\n\tClaimOccurrenceStatusCode,\n\tInjuryTypeCode,\n\t-- *INF*: max(InjuryTypeCode)\n\tmax(InjuryTypeCode) AS out_InjuryTypeCode,\n\tCatastropheCode,\n\to_IncurredIndemnityAmount AS IncurredIndemnityAmount,\n\t-- *INF*: SUM(IncurredIndemnityAmount)\n\tSUM(IncurredIndemnityAmount) AS o_IncurredIndemnityAmount,\n\to_IncurredMedicalAmount AS IncurredMedicalAmount,\n\t-- *INF*: SUM(IncurredMedicalAmount)\n\tSUM(IncurredMedicalAmount) AS o_IncurredMedicalAmount,\n\tCauseOfLoss,\n\tTypeOfRecoveryCode,\n\tJurisdictionStateCode,\n\tBodyPartCode,\n\tNatureOfInjuryCode,\n\tCauseOfInjuryCode,\n\tPaidIndemnityAmount,\n\t-- *INF*: SUM(PaidIndemnityAmount)\n\tSUM(PaidIndemnityAmount) AS o_PaidIndemnityAmount,\n\tPaidMedicalAmount,\n\t-- *INF*: SUM(PaidMedicalAmount)\n\tSUM(PaidMedicalAmount) AS o_PaidMedicalAmount,\n\tDeductibleReimbursementAmount,\n\t-- *INF*: SUM(DeductibleReimbursementAmount)\n\tSUM(DeductibleReimbursementAmount) AS o_DeductibleReimbursementAmount,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\t-- *INF*: SUM(PaidAllocatedLossAdjustmentExpenseAmount)\n\tSUM(PaidAllocatedLossAdjustmentExpenseAmount) AS o_PaidAllocatedLossAdjustmentExpenseAmount,\n\to_IncurredAllocatedLossAdjustmentExpenseAmount AS IncurredAllocatedLossAdjustmentExpenseAmount,\n\t-- *INF*: SUM(IncurredAllocatedLossAdjustmentExpenseAmount)\n\tSUM(IncurredAllocatedLossAdjustmentExpenseAmount) AS o_IncurredAllocatedLossAdjustmentExpenseAmount,\n\tClaimPayCategoryCode,\n\t-- *INF*: MIN(ClaimPayCategoryCode)\n\tMIN(ClaimPayCategoryCode) AS o_ClaimPayCategoryCode,\n\ttype_of_loss_code,\n\tTypeOfSettlement,\n\tmanaged_care_org_type AS ManagedCareOrganizationType,\n\tLumpSumIndicator,\n\t-- *INF*: MAX(LumpSumIndicator)\n\tMAX(LumpSumIndicator) AS o_LumpSumIndicator,\n\tEstimatedAuditCode,\n\to_CorrectionSeqNumber AS CorrectionSeqNumber,\n\tclaimant_num,\n\tClaimRelationshipKey,\n\tclaim_party_occurrence_ak_id,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM EXP_GetValueForLoss\n\tGROUP BY EDWPremiumMasterCalculationPKId, TypeBureauCode, PremiumMasterRunDate, LossMasterRunDate, BureauCompanyCode, PolicyKey, StateProvinceCode, PolicyEffectiveDate, PolicyEndDate, InterstateRiskId, EmployeeLeasingCode, StateRatingEffectiveDate, FederalTaxId, ThreeYearFixedRatePolicyIndicator, MultistatePolicyIndicator, InterstateRatedPolicyIndicator, RetrospectiveratedPolicyIndicator, CancelledMidTermPolicyIndicator, ManagedCareOrganizationPolicyIndicator, TypeOfCoverageIdCode, TypeOfPlan, DeductibleAmountPerClaimAccident, InsuredName, WCSTATAddress, PremiumMasterClassCode, ExperienceModificationFactor, ExperienceModificationEffectiveDate, Exposure, PremiumMasterDirectWrittenPremiumAmount, ManualChargedRate, LossMasterClassCode, ClaimLossDate, ClaimNumber, ClaimOccurrenceStatusCode, CatastropheCode, CauseOfLoss, TypeOfRecoveryCode, JurisdictionStateCode, BodyPartCode, NatureOfInjuryCode, CauseOfInjuryCode, type_of_loss_code, TypeOfSettlement, ManagedCareOrganizationType, EstimatedAuditCode, CorrectionSeqNumber, claimant_num\n),\nFIL_Filter_Transacitons AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId AS EDWPremiumMasterCalculationPKId3, \n\to_EDWLossMasterCalculationPKId AS EDWLossMasterCalculationPKId3, \n\tTypeBureauCode AS TypeBureauCode2, \n\tPremiumMasterRunDate AS PremiumMasterRunDate2, \n\tLossMasterRunDate AS LossMasterRunDate2, \n\tBureauCompanyCode AS BureauCompanyCode2, \n\tPolicyKey AS PolicyKey2, \n\tStateProvinceCode AS StateProvinceCode2, \n\tPolicyEffectiveDate AS PolicyEffectiveDate2, \n\tPolicyEndDate AS PolicyEndDate2, \n\tInterstateRiskId AS InterstateRiskId2, \n\tEmployeeLeasingCode AS EmployeeLeasingCode2, \n\tStateRatingEffectiveDate AS StateRatingEffectiveDate2, \n\tFederalTaxId AS FederalTaxId2, \n\tThreeYearFixedRatePolicyIndicator AS ThreeYearFixedRatePolicyIndicator2, \n\tMultistatePolicyIndicator AS MultistatePolicyIndicator2, \n\tInterstateRatedPolicyIndicator AS InterstateRatedPolicyIndicator2, \n\tRetrospectiveratedPolicyIndicator AS RetrospectiveratedPolicyIndicator2, \n\tCancelledMidTermPolicyIndicator AS CancelledMidTermPolicyIndicator2, \n\tManagedCareOrganizationPolicyIndicator AS ManagedCareOrganizationPolicyIndicator2, \n\tTypeOfCoverageIdCode AS TypeOfCoverageIdCode2, \n\tTypeOfPlan AS TypeOfPlan2, \n\tDeductibleAmountPerClaimAccident AS DeductibleAmountPerClaimAccident2, \n\tInsuredName AS InsuredName2, \n\tWCSTATAddress AS WCSTATAddress2, \n\tPremiumMasterClassCode AS PremiumMasterClassCode2, \n\tExperienceModificationFactor AS ExperienceModificationFactor2, \n\tExperienceModificationEffectiveDate AS ExperienceModificationEffectiveDate2, \n\tExposure AS Exposure2, \n\tPremiumMasterDirectWrittenPremiumAmount AS PremiumMasterDirectWrittenPremiumAmount2, \n\tManualChargedRate AS ManualChargedRate2, \n\tLossMasterClassCode AS LossMasterClassCode2, \n\tClaimLossDate AS ClaimLossDate2, \n\tClaimLossDate1 AS ClaimLossDate21, \n\tClaimOccurrenceStatusCode AS ClaimOccurrenceStatusCode2, \n\tout_InjuryTypeCode AS InjuryTypeCode2, \n\tCatastropheCode AS CatastropheCode2, \n\to_IncurredIndemnityAmount AS IncurredIndemnityAmount2, \n\to_IncurredMedicalAmount AS IncurredMedicalAmount2, \n\tCauseOfLoss AS CauseOfLoss2, \n\tTypeOfRecoveryCode AS TypeOfRecoveryCode2, \n\tJurisdictionStateCode AS JurisdictionStateCode2, \n\tBodyPartCode AS BodyPartCode2, \n\tNatureOfInjuryCode AS NatureOfInjuryCode2, \n\tCauseOfInjuryCode AS CauseOfInjuryCode2, \n\to_PaidIndemnityAmount AS PaidIndemnityAmount2, \n\to_PaidMedicalAmount AS PaidMedicalAmount2, \n\to_DeductibleReimbursementAmount AS DeductibleReimbursementAmount2, \n\to_PaidAllocatedLossAdjustmentExpenseAmount AS PaidAllocatedLossAdjustmentExpenseAmount2, \n\to_IncurredAllocatedLossAdjustmentExpenseAmount AS IncurredAllocatedLossAdjustmentExpenseAmount2, \n\ttype_of_loss_code AS type_of_loss_code3, \n\tTypeOfSettlement AS TypeOfSettlement3, \n\tManagedCareOrganizationType AS ManagedCareOrganizationType3, \n\to_LumpSumIndicator AS LumpSumIndicator3, \n\tEstimatedAuditCode AS EstimatedAuditCode3, \n\tCorrectionSeqNumber AS CorrectionSeqNumber3, \n\tClaimNumber AS ClaimNumber2, \n\to_ClaimPayCategoryCode AS ClaimPayCategoryCode, \n\tclaimant_num, \n\tClaimRelationshipKey, \n\tclaim_party_occurrence_ak_id, \n\tOccupationDescription, \n\tWeeklyWageAmount, \n\tEmployerAttorneyFees\n\tFROM AGG_summarize_amounts\n\tWHERE TypeOfRecoveryCode2 !='N/A' AND NOT (IncurredAllocatedLossAdjustmentExpenseAmount2 = 0 and IncurredMedicalAmount2=0 and IncurredIndemnityAmount2= 0 and PaidIndemnityAmount2 = 0 and PaidMedicalAmount2= 0 and PaidAllocatedLossAdjustmentExpenseAmount2=0  and IncurredAllocatedLossAdjustmentExpenseAmount2 = 0)\n),\nSRT_Sort_Transactions AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId3, \n\tEDWLossMasterCalculationPKId3, \n\tTypeBureauCode2, \n\tPremiumMasterRunDate2, \n\tLossMasterRunDate2, \n\tBureauCompanyCode2, \n\tPolicyKey2, \n\tStateProvinceCode2, \n\tPolicyEffectiveDate2, \n\tPolicyEndDate2, \n\tInterstateRiskId2, \n\tEmployeeLeasingCode2, \n\tStateRatingEffectiveDate2, \n\tFederalTaxId2, \n\tThreeYearFixedRatePolicyIndicator2, \n\tMultistatePolicyIndicator2, \n\tInterstateRatedPolicyIndicator2, \n\tRetrospectiveratedPolicyIndicator2, \n\tCancelledMidTermPolicyIndicator2, \n\tManagedCareOrganizationPolicyIndicator2, \n\tTypeOfCoverageIdCode2, \n\tTypeOfPlan2, \n\tDeductibleAmountPerClaimAccident2, \n\tInsuredName2, \n\tWCSTATAddress2, \n\tPremiumMasterClassCode2, \n\tExperienceModificationFactor2, \n\tExperienceModificationEffectiveDate2, \n\tExposure2, \n\tPremiumMasterDirectWrittenPremiumAmount2, \n\tManualChargedRate2, \n\tLossMasterClassCode2, \n\tClaimLossDate2, \n\tClaimLossDate21, \n\tClaimOccurrenceStatusCode2, \n\tInjuryTypeCode2, \n\tCatastropheCode2, \n\tIncurredIndemnityAmount2, \n\tIncurredMedicalAmount2, \n\tCauseOfLoss2, \n\tTypeOfRecoveryCode2, \n\tJurisdictionStateCode2, \n\tBodyPartCode2, \n\tNatureOfInjuryCode2, \n\tCauseOfInjuryCode2, \n\tPaidIndemnityAmount2, \n\tPaidMedicalAmount2, \n\tDeductibleReimbursementAmount2, \n\tPaidAllocatedLossAdjustmentExpenseAmount2, \n\tIncurredAllocatedLossAdjustmentExpenseAmount2, \n\ttype_of_loss_code3, \n\tTypeOfSettlement3, \n\tManagedCareOrganizationType3, \n\tLumpSumIndicator3, \n\tEstimatedAuditCode3, \n\tCorrectionSeqNumber3, \n\tClaimNumber2, \n\tClaimPayCategoryCode, \n\tclaimant_num, \n\tClaimRelationshipKey, \n\tclaim_party_occurrence_ak_id, \n\tOccupationDescription, \n\tWeeklyWageAmount, \n\tEmployerAttorneyFees\n\tFROM FIL_Filter_Transacitons\n\tORDER BY PolicyKey2 ASC, ClaimLossDate2 ASC, ClaimLossDate21 ASC, ClaimNumber2 ASC, claimant_num DESC, ClaimRelationshipKey ASC\n),\nEXP_CatastropheCodeCalc AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId3,\n\tEDWLossMasterCalculationPKId3,\n\tTypeBureauCode2,\n\tPremiumMasterRunDate2,\n\tLossMasterRunDate2,\n\tBureauCompanyCode2,\n\tPolicyKey2 AS PolicyKey,\n\tStateProvinceCode2,\n\tPolicyEffectiveDate2,\n\tPolicyEndDate2,\n\tInterstateRiskId2,\n\tEmployeeLeasingCode2,\n\tStateRatingEffectiveDate2,\n\tFederalTaxId2,\n\tThreeYearFixedRatePolicyIndicator2,\n\tMultistatePolicyIndicator2,\n\tInterstateRatedPolicyIndicator2,\n\tRetrospectiveratedPolicyIndicator2,\n\tCancelledMidTermPolicyIndicator2,\n\tManagedCareOrganizationPolicyIndicator2,\n\tTypeOfCoverageIdCode2,\n\tTypeOfPlan2,\n\tDeductibleAmountPerClaimAccident2,\n\tInsuredName2,\n\tWCSTATAddress2,\n\tPremiumMasterClassCode2,\n\tExperienceModificationFactor2,\n\tExperienceModificationEffectiveDate2,\n\tExposure2,\n\tPremiumMasterDirectWrittenPremiumAmount2,\n\tManualChargedRate2,\n\tLossMasterClassCode2,\n\tClaimLossDate2 AS O_ClaimLossDate1,\n\tClaimLossDate21 AS ClaimLossDate,\n\tClaimOccurrenceStatusCode2,\n\tInjuryTypeCode2,\n\tCatastropheCode2,\n\tIncurredIndemnityAmount2,\n\tIncurredMedicalAmount2,\n\tCauseOfLoss2,\n\tTypeOfRecoveryCode2,\n\tJurisdictionStateCode2,\n\tBodyPartCode2,\n\tNatureOfInjuryCode2,\n\tCauseOfInjuryCode2,\n\tPaidIndemnityAmount2,\n\tPaidMedicalAmount2,\n\tDeductibleReimbursementAmount2,\n\tPaidAllocatedLossAdjustmentExpenseAmount2,\n\tIncurredAllocatedLossAdjustmentExpenseAmount2,\n\ttype_of_loss_code3,\n\tTypeOfSettlement3,\n\tManagedCareOrganizationType3,\n\tLumpSumIndicator3,\n\tEstimatedAuditCode3,\n\tCorrectionSeqNumber3,\n\tClaimNumber2 AS ClaimNumber,\n\tClaimPayCategoryCode,\n\tclaimant_num,\n\tClaimRelationshipKey,\n\t-- *INF*: to_char(get_date_part(ClaimLossDate,'YYYY'))||to_char(get_date_part(ClaimLossDate,'MM'))||to_char(get_date_part(ClaimLossDate,'DD')) \r\n\t-- --TO_CHAR(TO_DATE(SUBSTR(ClaimLossDate,1,10),'MMDDYYYY') )\n\tto_char(DATE_PART(ClaimLossDate, 'YYYY')) || to_char(DATE_PART(ClaimLossDate, 'MM')) || to_char(DATE_PART(ClaimLossDate, 'DD')) AS V_GetClaimLossDate,\n\t-- *INF*: to_char(get_date_part(ClaimLossDate,'HH24'))||to_char(get_date_part(ClaimLossDate,'MI'))||to_char(get_date_part(ClaimLossDate,'SS'))\n\tto_char(DATE_PART(ClaimLossDate, 'HH24')) || to_char(DATE_PART(ClaimLossDate, 'MI')) || to_char(DATE_PART(ClaimLossDate, 'SS')) AS V_GetClaimLossDateTime,\n\tV_GetClaimLossDate AS V_ClaimLossDate,\n\tV_GetClaimLossDateTime AS V_ClaimLossDateTime,\n\t-- *INF*:  IIF(PolicyKey=PrevPolicyKey AND V_GetClaimLossDate=PrevClaimLossDate \r\n\t--  AND V_ClaimLossDateTime=PrevClaimLossDateTime,\r\n\t--  IIF(ClaimNumber=PrevClaimNumber and claimant_num<>Prevclaimant_num,V_AssignCount_claimant_num+1,\r\n\t-- --IIF(ClaimNumber<>PrevClaimNumber and claimant_num<>\r\n\t-- --Prevclaimant_num,V_AssignCount_claimant_num+1)\r\n\t-- 0),0)\r\n\t-- \r\n\t-- --Get the count and assign the incremental number to each claim based on the ClaimantNumber key per above logic if it is with same policy,claimlossdate,claimnumber otherwise assign 0.\n\tIFF(\n\t    PolicyKey = PrevPolicyKey\n\t    and V_GetClaimLossDate = PrevClaimLossDate\n\t    and V_ClaimLossDateTime = PrevClaimLossDateTime,\n\t    IFF(\n\t        ClaimNumber = PrevClaimNumber\n\t    and claimant_num <> Prevclaimant_num,\n\t        V_AssignCount_claimant_num + 1,\n\t        0\n\t    ),\n\t    0\n\t) AS V_AssignCount_claimant_num,\n\t-- *INF*: IIF(V_AssignCount_claimant_num<1,V_Assign_GroupCount_claimant_num+1,V_Assign_GroupCount_claimant_num)\r\n\t-- \r\n\t-- --Assign the Claimant_number group count incremental number to each match group.\n\tIFF(\n\t    V_AssignCount_claimant_num < 1, V_Assign_GroupCount_claimant_num + 1,\n\t    V_Assign_GroupCount_claimant_num\n\t) AS V_Assign_GroupCount_claimant_num,\n\t-- *INF*:  IIF(ClaimRelationshipKey<>'N/A',IIF(PolicyKey=PrevPolicyKey \r\n\t-- --AND V_GetClaimLossDate=PrevClaimLossDate AND V_ClaimLossDateTime=PrevClaimLossDateTime\r\n\t-- ,IIF(ClaimRelationshipKey=PrevClaimRelationshipKey AND ClaimNumber<>PrevClaimNumber,V_AssignCount_ClaimRelKey+1,\r\n\t-- --IIF(ClaimRelationshipKey<>----PrevClaimRelationshipKey,V_AssignCount_ClaimRelKey+1)\r\n\t-- 0)),0)\r\n\t-- \r\n\t-- --Get the count and assign the incremental number to each claim based on the ClaimRelationship key per above logic if it is with same policy,claimlossdate,claimnumber otherwise assign 0.\n\tIFF(\n\t    ClaimRelationshipKey <> 'N/A',\n\t    IFF(\n\t        PolicyKey = PrevPolicyKey,\n\t        IFF(\n\t            ClaimRelationshipKey = PrevClaimRelationshipKey\n\t        and ClaimNumber <> PrevClaimNumber,\n\t            V_AssignCount_ClaimRelKey + 1,\n\t            0\n\t        )\n\t    ),\n\t    0\n\t) AS V_AssignCount_ClaimRelKey,\n\t-- *INF*: IIF(V_AssignCount_ClaimRelKey<1,V_Assign_GroupCount_ClaimRelKey+1,V_Assign_GroupCount_ClaimRelKey)\r\n\t-- \r\n\t-- ----Assign the ClaimRelationship group count incremental number to each match group.\n\tIFF(\n\t    V_AssignCount_ClaimRelKey < 1, V_Assign_GroupCount_ClaimRelKey + 1,\n\t    V_Assign_GroupCount_ClaimRelKey\n\t) AS V_Assign_GroupCount_ClaimRelKey,\n\t-- *INF*: DECODE(TRUE,ClaimRelationshipKey='N/A',V_AssignCount_claimant_num,V_AssignCount_ClaimRelKey)\r\n\t-- \r\n\t-- \r\n\t-- --Get the final incremental count for each Claimant_number and ClaimRelationshipKey\n\tDECODE(\n\t    TRUE,\n\t    ClaimRelationshipKey = 'N/A', V_AssignCount_claimant_num,\n\t    V_AssignCount_ClaimRelKey\n\t) AS V_Get_CommonCount,\n\t-- *INF*: IIF(V_Get_CommonCount<1,V_Get_CommonGroupCount+1,V_Get_CommonGroupCount)\r\n\t-- \r\n\t-- --Get the final Group count for claimnut num and claimRelationshipkey\n\tIFF(V_Get_CommonCount < 1, V_Get_CommonGroupCount + 1, V_Get_CommonGroupCount) AS V_Get_CommonGroupCount,\n\tV_Get_CommonCount AS Out_CommonCount,\n\tV_Get_CommonGroupCount AS Out_CommonGroupCount,\n\tV_GetClaimLossDate AS PrevClaimLossDate,\n\tV_GetClaimLossDateTime AS PrevClaimLossDateTime,\n\tPolicyKey AS PrevPolicyKey,\n\tClaimNumber AS PrevClaimNumber,\n\tclaimant_num AS Prevclaimant_num,\n\tClaimRelationshipKey AS PrevClaimRelationshipKey,\n\tclaim_party_occurrence_ak_id,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM SRT_Sort_Transactions\n),\nAGG_Count_Groups_with_multiple_claims AS (\n\tSELECT\n\tPolicyKey,\n\tOut_CommonGroupCount,\n\tOut_CommonCount,\n\t-- *INF*: COUNT(Out_CommonCount)\n\tCOUNT(Out_CommonCount) AS TotalCommonCount\n\tFROM EXP_CatastropheCodeCalc\n\tGROUP BY PolicyKey, Out_CommonGroupCount\n),\nJNR_AGG_To_Flow AS (SELECT\n\tAGG_Count_Groups_with_multiple_claims.PolicyKey AS PolicyKey_AGG, \n\tAGG_Count_Groups_with_multiple_claims.TotalCommonCount, \n\tAGG_Count_Groups_with_multiple_claims.Out_CommonGroupCount AS Out_CommonGroupCount_AGG, \n\tEXP_CatastropheCodeCalc.EDWPremiumMasterCalculationPKId3, \n\tEXP_CatastropheCodeCalc.EDWLossMasterCalculationPKId3, \n\tEXP_CatastropheCodeCalc.TypeBureauCode2, \n\tEXP_CatastropheCodeCalc.PremiumMasterRunDate2, \n\tEXP_CatastropheCodeCalc.LossMasterRunDate2, \n\tEXP_CatastropheCodeCalc.BureauCompanyCode2, \n\tEXP_CatastropheCodeCalc.PolicyKey, \n\tEXP_CatastropheCodeCalc.StateProvinceCode2, \n\tEXP_CatastropheCodeCalc.PolicyEffectiveDate2, \n\tEXP_CatastropheCodeCalc.PolicyEndDate2, \n\tEXP_CatastropheCodeCalc.InterstateRiskId2, \n\tEXP_CatastropheCodeCalc.EmployeeLeasingCode2, \n\tEXP_CatastropheCodeCalc.StateRatingEffectiveDate2, \n\tEXP_CatastropheCodeCalc.FederalTaxId2, \n\tEXP_CatastropheCodeCalc.ThreeYearFixedRatePolicyIndicator2, \n\tEXP_CatastropheCodeCalc.MultistatePolicyIndicator2, \n\tEXP_CatastropheCodeCalc.InterstateRatedPolicyIndicator2, \n\tEXP_CatastropheCodeCalc.RetrospectiveratedPolicyIndicator2, \n\tEXP_CatastropheCodeCalc.CancelledMidTermPolicyIndicator2, \n\tEXP_CatastropheCodeCalc.ManagedCareOrganizationPolicyIndicator2, \n\tEXP_CatastropheCodeCalc.TypeOfCoverageIdCode2, \n\tEXP_CatastropheCodeCalc.TypeOfPlan2, \n\tEXP_CatastropheCodeCalc.DeductibleAmountPerClaimAccident2, \n\tEXP_CatastropheCodeCalc.InsuredName2, \n\tEXP_CatastropheCodeCalc.WCSTATAddress2, \n\tEXP_CatastropheCodeCalc.PremiumMasterClassCode2, \n\tEXP_CatastropheCodeCalc.ExperienceModificationFactor2, \n\tEXP_CatastropheCodeCalc.ExperienceModificationEffectiveDate2, \n\tEXP_CatastropheCodeCalc.Exposure2, \n\tEXP_CatastropheCodeCalc.PremiumMasterDirectWrittenPremiumAmount2, \n\tEXP_CatastropheCodeCalc.ManualChargedRate2, \n\tEXP_CatastropheCodeCalc.LossMasterClassCode2, \n\tEXP_CatastropheCodeCalc.O_ClaimLossDate1, \n\tEXP_CatastropheCodeCalc.ClaimLossDate, \n\tEXP_CatastropheCodeCalc.ClaimOccurrenceStatusCode2, \n\tEXP_CatastropheCodeCalc.InjuryTypeCode2, \n\tEXP_CatastropheCodeCalc.CatastropheCode2, \n\tEXP_CatastropheCodeCalc.IncurredIndemnityAmount2, \n\tEXP_CatastropheCodeCalc.IncurredMedicalAmount2, \n\tEXP_CatastropheCodeCalc.CauseOfLoss2, \n\tEXP_CatastropheCodeCalc.TypeOfRecoveryCode2, \n\tEXP_CatastropheCodeCalc.JurisdictionStateCode2, \n\tEXP_CatastropheCodeCalc.BodyPartCode2, \n\tEXP_CatastropheCodeCalc.NatureOfInjuryCode2, \n\tEXP_CatastropheCodeCalc.CauseOfInjuryCode2, \n\tEXP_CatastropheCodeCalc.PaidIndemnityAmount2, \n\tEXP_CatastropheCodeCalc.PaidMedicalAmount2, \n\tEXP_CatastropheCodeCalc.DeductibleReimbursementAmount2, \n\tEXP_CatastropheCodeCalc.PaidAllocatedLossAdjustmentExpenseAmount2, \n\tEXP_CatastropheCodeCalc.IncurredAllocatedLossAdjustmentExpenseAmount2, \n\tEXP_CatastropheCodeCalc.type_of_loss_code3, \n\tEXP_CatastropheCodeCalc.TypeOfSettlement3, \n\tEXP_CatastropheCodeCalc.ManagedCareOrganizationType3, \n\tEXP_CatastropheCodeCalc.LumpSumIndicator3, \n\tEXP_CatastropheCodeCalc.EstimatedAuditCode3, \n\tEXP_CatastropheCodeCalc.CorrectionSeqNumber3, \n\tEXP_CatastropheCodeCalc.ClaimNumber, \n\tEXP_CatastropheCodeCalc.ClaimPayCategoryCode, \n\tEXP_CatastropheCodeCalc.claimant_num, \n\tEXP_CatastropheCodeCalc.ClaimRelationshipKey, \n\tEXP_CatastropheCodeCalc.Out_CommonCount, \n\tEXP_CatastropheCodeCalc.Out_CommonGroupCount, \n\tEXP_CatastropheCodeCalc.claim_party_occurrence_ak_id, \n\tEXP_CatastropheCodeCalc.OccupationDescription, \n\tEXP_CatastropheCodeCalc.WeeklyWageAmount, \n\tEXP_CatastropheCodeCalc.EmployerAttorneyFees\n\tFROM AGG_Count_Groups_with_multiple_claims\n\tINNER JOIN EXP_CatastropheCodeCalc\n\tON EXP_CatastropheCodeCalc.PolicyKey = AGG_Count_Groups_with_multiple_claims.PolicyKey AND EXP_CatastropheCodeCalc.Out_CommonGroupCount = AGG_Count_Groups_with_multiple_claims.Out_CommonGroupCount\n),\nEXP_Group_Count_to_NULL AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId3,\n\tEDWLossMasterCalculationPKId3,\n\tTypeBureauCode2,\n\tPremiumMasterRunDate2,\n\tLossMasterRunDate2,\n\tBureauCompanyCode2,\n\tPolicyKey AS PolicyKey1,\n\tStateProvinceCode2,\n\tPolicyEffectiveDate2,\n\tPolicyEndDate2,\n\tInterstateRiskId2,\n\tEmployeeLeasingCode2,\n\tStateRatingEffectiveDate2,\n\tFederalTaxId2,\n\tThreeYearFixedRatePolicyIndicator2,\n\tMultistatePolicyIndicator2,\n\tInterstateRatedPolicyIndicator2,\n\tRetrospectiveratedPolicyIndicator2,\n\tCancelledMidTermPolicyIndicator2,\n\tManagedCareOrganizationPolicyIndicator2,\n\tTypeOfCoverageIdCode2,\n\tTypeOfPlan2,\n\tDeductibleAmountPerClaimAccident2,\n\tInsuredName2,\n\tWCSTATAddress2,\n\tPremiumMasterClassCode2,\n\tExperienceModificationFactor2,\n\tExperienceModificationEffectiveDate2,\n\tExposure2,\n\tPremiumMasterDirectWrittenPremiumAmount2,\n\tManualChargedRate2,\n\tLossMasterClassCode2,\n\tO_ClaimLossDate1,\n\tClaimLossDate AS ClaimLossDate1,\n\tClaimOccurrenceStatusCode2,\n\tInjuryTypeCode2,\n\tCatastropheCode2,\n\tIncurredIndemnityAmount2,\n\tIncurredMedicalAmount2,\n\tCauseOfLoss2,\n\tTypeOfRecoveryCode2,\n\tJurisdictionStateCode2,\n\tBodyPartCode2,\n\tNatureOfInjuryCode2,\n\tCauseOfInjuryCode2,\n\tPaidIndemnityAmount2,\n\tPaidMedicalAmount2,\n\tDeductibleReimbursementAmount2,\n\tPaidAllocatedLossAdjustmentExpenseAmount2,\n\tIncurredAllocatedLossAdjustmentExpenseAmount2,\n\ttype_of_loss_code3,\n\tTypeOfSettlement3,\n\tManagedCareOrganizationType3,\n\tLumpSumIndicator3,\n\tEstimatedAuditCode3,\n\tCorrectionSeqNumber3,\n\tClaimNumber AS ClaimNumber1,\n\tClaimPayCategoryCode,\n\tclaimant_num AS claimant_num1,\n\tClaimRelationshipKey AS ClaimRelationshipKey1,\n\tPolicyKey_AGG,\n\tTotalCommonCount,\n\tOut_CommonGroupCount_AGG AS in_CommonGroupCount_AGG,\n\t-- *INF*: DECODE(TRUE, TotalCommonCount = 1, NULL, in_CommonGroupCount_AGG)\n\tDECODE(\n\t    TRUE,\n\t    TotalCommonCount = 1, NULL,\n\t    in_CommonGroupCount_AGG\n\t) AS Out_CommonGroupCount_AGG,\n\tOut_CommonGroupCount,\n\tOut_CommonCount,\n\tclaim_party_occurrence_ak_id,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM JNR_AGG_To_Flow\n),\nSRT_CatastropheInput AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId3, \n\tEDWLossMasterCalculationPKId3, \n\tTypeBureauCode2, \n\tPremiumMasterRunDate2, \n\tLossMasterRunDate2, \n\tBureauCompanyCode2, \n\tPolicyKey1, \n\tStateProvinceCode2, \n\tPolicyEffectiveDate2, \n\tPolicyEndDate2, \n\tInterstateRiskId2, \n\tEmployeeLeasingCode2, \n\tStateRatingEffectiveDate2, \n\tFederalTaxId2, \n\tThreeYearFixedRatePolicyIndicator2, \n\tMultistatePolicyIndicator2, \n\tInterstateRatedPolicyIndicator2, \n\tRetrospectiveratedPolicyIndicator2, \n\tCancelledMidTermPolicyIndicator2, \n\tManagedCareOrganizationPolicyIndicator2, \n\tTypeOfCoverageIdCode2, \n\tTypeOfPlan2, \n\tDeductibleAmountPerClaimAccident2, \n\tInsuredName2, \n\tWCSTATAddress2, \n\tPremiumMasterClassCode2, \n\tExperienceModificationFactor2, \n\tExperienceModificationEffectiveDate2, \n\tExposure2, \n\tPremiumMasterDirectWrittenPremiumAmount2, \n\tManualChargedRate2, \n\tLossMasterClassCode2, \n\tO_ClaimLossDate1, \n\tClaimLossDate1, \n\tClaimOccurrenceStatusCode2, \n\tInjuryTypeCode2, \n\tCatastropheCode2, \n\tIncurredIndemnityAmount2, \n\tIncurredMedicalAmount2, \n\tCauseOfLoss2, \n\tTypeOfRecoveryCode2, \n\tJurisdictionStateCode2, \n\tBodyPartCode2, \n\tNatureOfInjuryCode2, \n\tCauseOfInjuryCode2, \n\tPaidIndemnityAmount2, \n\tPaidMedicalAmount2, \n\tDeductibleReimbursementAmount2, \n\tPaidAllocatedLossAdjustmentExpenseAmount2, \n\tIncurredAllocatedLossAdjustmentExpenseAmount2, \n\ttype_of_loss_code3, \n\tTypeOfSettlement3, \n\tManagedCareOrganizationType3, \n\tLumpSumIndicator3, \n\tEstimatedAuditCode3, \n\tCorrectionSeqNumber3, \n\tClaimNumber1, \n\tClaimPayCategoryCode, \n\tclaimant_num1, \n\tClaimRelationshipKey1, \n\tPolicyKey_AGG, \n\tTotalCommonCount, \n\tOut_CommonGroupCount_AGG, \n\tOut_CommonGroupCount, \n\tOut_CommonCount, \n\tclaim_party_occurrence_ak_id, \n\tOccupationDescription, \n\tWeeklyWageAmount, \n\tEmployerAttorneyFees\n\tFROM EXP_Group_Count_to_NULL\n\tORDER BY PolicyKey1 ASC, Out_CommonGroupCount_AGG ASC, Out_CommonGroupCount ASC, Out_CommonCount DESC\n),\nEXP_GetCatastropheCode AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId3,\n\tEDWLossMasterCalculationPKId3,\n\tTypeBureauCode2,\n\tPremiumMasterRunDate2,\n\tLossMasterRunDate2,\n\tBureauCompanyCode2,\n\tPolicyKey1,\n\tStateProvinceCode2,\n\tPolicyEffectiveDate2,\n\tPolicyEndDate2,\n\tInterstateRiskId2,\n\tEmployeeLeasingCode2,\n\tStateRatingEffectiveDate2,\n\tFederalTaxId2,\n\tThreeYearFixedRatePolicyIndicator2,\n\tMultistatePolicyIndicator2,\n\tInterstateRatedPolicyIndicator2,\n\tRetrospectiveratedPolicyIndicator2,\n\tCancelledMidTermPolicyIndicator2,\n\tManagedCareOrganizationPolicyIndicator2,\n\tTypeOfCoverageIdCode2,\n\tTypeOfPlan2,\n\tDeductibleAmountPerClaimAccident2,\n\tInsuredName2,\n\tWCSTATAddress2,\n\tPremiumMasterClassCode2,\n\tExperienceModificationFactor2,\n\tExperienceModificationEffectiveDate2,\n\tExposure2,\n\tPremiumMasterDirectWrittenPremiumAmount2,\n\tManualChargedRate2,\n\tLossMasterClassCode2,\n\tO_ClaimLossDate1,\n\tClaimLossDate1,\n\tClaimOccurrenceStatusCode2,\n\tInjuryTypeCode2,\n\tCatastropheCode2,\n\tIncurredIndemnityAmount2,\n\tIncurredMedicalAmount2,\n\tCauseOfLoss2,\n\tTypeOfRecoveryCode2,\n\tJurisdictionStateCode2,\n\tBodyPartCode2,\n\tNatureOfInjuryCode2,\n\tCauseOfInjuryCode2,\n\tPaidIndemnityAmount2,\n\tPaidMedicalAmount2,\n\tDeductibleReimbursementAmount2,\n\tPaidAllocatedLossAdjustmentExpenseAmount2,\n\tIncurredAllocatedLossAdjustmentExpenseAmount2,\n\ttype_of_loss_code3,\n\tTypeOfSettlement3,\n\tManagedCareOrganizationType3,\n\tLumpSumIndicator3,\n\tEstimatedAuditCode3,\n\tCorrectionSeqNumber3,\n\tClaimNumber1,\n\tClaimPayCategoryCode,\n\tclaimant_num1,\n\tOut_CommonCount,\n\tOut_CommonGroupCount,\n\tTotalCommonCount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- TO_INTEGER(CatastropheCode2)>10,TO_INTEGER(CatastropheCode2),\r\n\t-- \r\n\t-- DECODE(TRUE,PolicyKey1=V_PrevPolicyKey and TotalCommonCount > 1,\r\n\t-- DECODE(TRUE, Out_CommonGroupCount=V_PrevCommonGroupCount, \r\n\t-- V_PrevGetCataStrophe, V_PrevGetCataStrophe + 1),\r\n\t-- PolicyKey1 <>  V_PrevPolicyKey and TotalCommonCount > 1, 01,\r\n\t-- 00))\r\n\t-- --Removed as part of PROD-12901 \r\n\t-- --IIF(Out_CommonCount>=1,1,IIF(Out_CommonGroupCount=V_PrevCommonGroupCount,1,00))\r\n\t-- \r\n\t-- --IIF(Count_claimnum1>=1,01,IIF(Count_claimnum2=PrevCount_claimnum2,01,00))\r\n\t-- \r\n\t-- --If the commoncount is >1 it means first record has the same policy asssociated to assign the catastrophe.\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    CAST(CatastropheCode2 AS INTEGER) > 10, CAST(CatastropheCode2 AS INTEGER),\n\t    DECODE(\n\t        TRUE,\n\t        PolicyKey1 = V_PrevPolicyKey and TotalCommonCount > 1, DECODE(\n\t            TRUE,\n\t            Out_CommonGroupCount = V_PrevCommonGroupCount, V_PrevGetCataStrophe,\n\t            V_PrevGetCataStrophe + 1\n\t        ),\n\t        PolicyKey1 <> V_PrevPolicyKey and TotalCommonCount > 1, 01,\n\t        00\n\t    )\n\t) AS V_AssignCataStrophe_Other_State,\n\t-- *INF*: IIF(StateProvinceCode2='21',IIF(IncurredIndemnityAmount2+IncurredMedicalAmount2=\r\n\t-- 20000,V_AssignCataStrophe_Other_State,00),V_AssignCataStrophe_Other_State)\r\n\t-- \r\n\t-- -- if state is Michigan and amount > @{pipeline().parameters.20000} then assign catastrophe code otherwise 00, else pass the otherstatecatastrophe as it is.\n\tIFF(\n\t    StateProvinceCode2 = '21',\n\t    IFF(\n\t        IncurredIndemnityAmount2 + IncurredMedicalAmount2 = 20000,\n\t        V_AssignCataStrophe_Other_State,\n\t        00\n\t    ),\n\t    V_AssignCataStrophe_Other_State\n\t) AS V_AssignCataStrophe_MI_State,\n\tV_AssignCataStrophe_MI_State AS V_GetCataStrophe_number,\n\t-- *INF*: TO_CHAR(LPAD(V_AssignCataStrophe_MI_State,2,'0'))\n\tTO_CHAR(LPAD(V_AssignCataStrophe_MI_State, 2, '0')) AS V_GetCataStrophe,\n\tV_GetCataStrophe AS O_GetCataStrophe,\n\tPolicyKey1 AS V_PrevPolicyKey,\n\tOut_CommonCount AS V_PrevCommonCount,\n\tOut_CommonGroupCount AS V_PrevCommonGroupCount,\n\tV_GetCataStrophe_number AS V_PrevGetCataStrophe,\n\t-- *INF*: IIF(StateProvinceCode2='21',IIF(V_AssignCataStrophe_Other_State=1,claimant_num1,'000'),IIF(V_GetCataStrophe='00' OR ClaimRelationshipKey1<>'N/A','000',claimant_num1))\n\tIFF(\n\t    StateProvinceCode2 = '21',\n\t    IFF(\n\t        V_AssignCataStrophe_Other_State = 1, claimant_num1, '000'\n\t    ),\n\t    IFF(\n\t        V_GetCataStrophe = '00' OR ClaimRelationshipKey1 <> 'N/A', '000', claimant_num1\n\t    )\n\t) AS O_claimant_num,\n\tClaimRelationshipKey1,\n\t-- *INF*: MAKE_DATE_TIME(1800,01,01)\n\tTIMESTAMP_FROM_PARTS(1800,01,01,00,00,00) AS RateEffectiveDate,\n\tclaim_party_occurrence_ak_id,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM SRT_CatastropheInput\n),\nLKP_claim_loss_trans_fact_catgry_type AS (\n\tSELECT\n\tclaim_pay_ctgry_type,\n\tclndr_date,\n\tclaim_num,\n\tedw_claim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT cpctd.claim_pay_ctgry_type as claim_pay_ctgry_type, c.clndr_date as\r\n\t\t clndr_date, cod.claim_num as claim_num, \r\n\t\tcd.edw_claim_party_occurrence_ak_id as edw_claim_party_occurrence_ak_id FROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.dbo.claim_loss_transaction_fact cltf\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.dbo.Claim_occurrence_dim cod on cltf.claim_occurrence_dim_id = cod.claim_occurrence_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.dbo.claimant_dim cd on cd.claimant_dim_id = cltf.claimant_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.dbo.calendar_dim c on cltf.claim_trans_date_id=c.clndr_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.dbo.claim_payment_category_type_dim cpctd on\r\n\t\t cpctd.claim_pay_ctgry_type_dim_id = cltf.claim_pay_ctgry_type_dim_id\r\n\t\twhere     claim_pay_ctgry_type in('VC', 'VD', 'VE', 'VO', 'VR', 'VT','VM', 'XV')\r\n\t\torder by c.clndr_date DESC --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_party_occurrence_ak_id,claim_num ORDER BY claim_pay_ctgry_type) = 1\n),\nEXP_Loss_Prem AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TRUNC(SESSSTARTTIME,'D')\n\tCAST(TRUNC(SESSSTARTTIME, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_CreateDate,\n\tEXP_GetCatastropheCode.EDWPremiumMasterCalculationPKId3 AS EDWPremiumMasterCalculationPKId,\n\tEXP_GetCatastropheCode.EDWLossMasterCalculationPKId3 AS EDWLossMasterCalculationPKId,\n\tEXP_GetCatastropheCode.TypeBureauCode2 AS TypeBureauCode,\n\tEXP_GetCatastropheCode.PremiumMasterRunDate2 AS PremiumMasterRunDate,\n\tEXP_GetCatastropheCode.LossMasterRunDate2 AS LossMasterRunDate,\n\tEXP_GetCatastropheCode.BureauCompanyCode2 AS BureauCompanyCode,\n\tEXP_GetCatastropheCode.PolicyKey1 AS PolicyKey,\n\tEXP_GetCatastropheCode.StateProvinceCode2 AS StateProvinceCode,\n\tEXP_GetCatastropheCode.PolicyEffectiveDate2 AS i_PolicyEffectiveDate,\n\ti_PolicyEffectiveDate AS PolicyEffectiveDate,\n\tEXP_GetCatastropheCode.PolicyEndDate2 AS PolicyEndDate,\n\tEXP_GetCatastropheCode.InterstateRiskId2 AS InterstateRiskId,\n\tEXP_GetCatastropheCode.EmployeeLeasingCode2 AS EmployeeLeasingCode,\n\tEXP_GetCatastropheCode.StateRatingEffectiveDate2 AS StateRatingEffectiveDate,\n\tEXP_GetCatastropheCode.FederalTaxId2 AS FederalTaxId,\n\tEXP_GetCatastropheCode.ThreeYearFixedRatePolicyIndicator2 AS ThreeYearFixedRatePolicyIndicator,\n\tEXP_GetCatastropheCode.MultistatePolicyIndicator2 AS MultistatePolicyIndicator,\n\tEXP_GetCatastropheCode.InterstateRatedPolicyIndicator2 AS InterstateRatedPolicyIndicator,\n\tEXP_GetCatastropheCode.EstimatedAuditCode3 AS EstimatedAuditCode,\n\tEXP_GetCatastropheCode.RetrospectiveratedPolicyIndicator2 AS RetrospectiveratedPolicyIndicator,\n\tEXP_GetCatastropheCode.CancelledMidTermPolicyIndicator2 AS CancelledMidTermPolicyIndicator,\n\tEXP_GetCatastropheCode.ManagedCareOrganizationPolicyIndicator2 AS ManagedCareOrganizationPolicyIndicator,\n\tEXP_GetCatastropheCode.TypeOfCoverageIdCode2 AS TypeOfCoverageIdCode,\n\tEXP_GetCatastropheCode.TypeOfPlan2 AS TypeOfPlan,\n\tEXP_GetCatastropheCode.ClaimPayCategoryCode AS ClaimPayCategoryType,\n\t'00' AS LossSubjectToDeductibleCode,\n\t'00' AS BasisOfDeductibleCalculationCode,\n\tEXP_GetCatastropheCode.DeductibleAmountPerClaimAccident2 AS DeductibleAmountPerClaimAccident,\n\tEXP_GetCatastropheCode.InsuredName2 AS i_InsuredName,\n\t-- *INF*: REPLACECHR(0,i_InsuredName,CHR(34),'')\n\tREGEXP_REPLACE(i_InsuredName,CHR(34),'','i') AS o_InsuredName,\n\tEXP_GetCatastropheCode.WCSTATAddress2 AS WCSTATAddress,\n\tEXP_GetCatastropheCode.PremiumMasterClassCode2 AS PremiumMasterClassCode,\n\tEXP_GetCatastropheCode.ExperienceModificationFactor2 AS ExperienceModificationFactor,\n\tEXP_GetCatastropheCode.ExperienceModificationEffectiveDate2 AS ExperienceModificationEffectiveDate,\n\t-- *INF*: IIF(IN(SUBSTR(PremiumMasterClassCode,1,4) ,'0908','0913','9108'),(i_Exposure*10),i_Exposure)\n\tIFF(\n\t    SUBSTR(PremiumMasterClassCode, 1, 4) IN ('0908','0913','9108'), (i_Exposure * 10),\n\t    i_Exposure\n\t) AS v_Exposure,\n\t-- *INF*: ROUND(IIF(ISNULL(v_Exposure),0,v_Exposure))\n\tROUND(\n\t    IFF(\n\t        v_Exposure IS NULL, 0, v_Exposure\n\t    )) AS o_Exposure,\n\tEXP_GetCatastropheCode.PremiumMasterDirectWrittenPremiumAmount2 AS i_PremiumMasterDirectWrittenPremiumAmount,\n\t-- *INF*: ROUND(i_PremiumMasterDirectWrittenPremiumAmount)\n\tROUND(i_PremiumMasterDirectWrittenPremiumAmount) AS o_PremiumMasterDirectWrittenPremiumAmount,\n\tEXP_GetCatastropheCode.ManualChargedRate2 AS ManualChargedRate,\n\tEXP_GetCatastropheCode.LossMasterClassCode2 AS LossMasterClassCode,\n\tEXP_GetCatastropheCode.O_ClaimLossDate1 AS ClaimLossDate,\n\tEXP_GetCatastropheCode.ClaimNumber1 AS ClaimNumber,\n\tEXP_GetCatastropheCode.ClaimOccurrenceStatusCode2 AS ClaimOccurrenceStatusCode,\n\tEXP_GetCatastropheCode.InjuryTypeCode2 AS InjuryTypeCode,\n\tEXP_GetCatastropheCode.O_GetCataStrophe AS CatastropheCode,\n\tEXP_GetCatastropheCode.IncurredIndemnityAmount2 AS IncurredIndemnityAmount,\n\tEXP_GetCatastropheCode.IncurredMedicalAmount2 AS IncurredMedicalAmount,\n\tEXP_GetCatastropheCode.CauseOfLoss2 AS CauseOfLoss,\n\tEXP_GetCatastropheCode.TypeOfRecoveryCode2 AS TypeOfRecoveryCode,\n\tEXP_GetCatastropheCode.JurisdictionStateCode2 AS JurisdictionStateCode,\n\tEXP_GetCatastropheCode.BodyPartCode2 AS BodyPartCode,\n\tEXP_GetCatastropheCode.NatureOfInjuryCode2 AS NatureOfInjuryCode,\n\tEXP_GetCatastropheCode.CauseOfInjuryCode2 AS CauseOfInjuryCode,\n\tEXP_GetCatastropheCode.PaidIndemnityAmount2 AS PaidIndemnityAmount,\n\tEXP_GetCatastropheCode.PaidMedicalAmount2 AS PaidMedicalAmount,\n\tEXP_GetCatastropheCode.DeductibleReimbursementAmount2 AS DeductibleReimbursementAmount,\n\tEXP_GetCatastropheCode.PaidAllocatedLossAdjustmentExpenseAmount2 AS PaidAllocatedLossAdjustmentExpenseAmount,\n\tEXP_GetCatastropheCode.IncurredAllocatedLossAdjustmentExpenseAmount2 AS IncurredAllocatedLossAdjustmentExpenseAmount,\n\t'N/A' AS SubjectPremiumTotal,\n\t'N/A' AS StandarPremiumTotal,\n\t'0' AS CorrectionSeqNumber,\n\t'N' AS ReplacementReportCode,\n\t'' AS CorrectionTypeCode,\n\t'01' AS TypeOfNonStandardIdCode,\n\t-- *INF*: TO_INTEGER(DATE_DIFF(TRUNC(SYSDATE,'MM'),TRUNC(i_PolicyEffectiveDate,'MM'),'MM'),TRUE)\n\tCAST(DATEDIFF(MONTH,CAST(TRUNC(CURRENT_TIMESTAMP, 'MONTH') AS TIMESTAMP_NTZ(0)),CAST(TRUNC(i_PolicyEffectiveDate, 'MONTH') AS TIMESTAMP_NTZ(0))) AS INTEGER) AS v_AfterEffDate,\n\t-- *INF*: DECODE(v_AfterEffDate,\r\n\t-- 18,'1',\r\n\t-- 30,'2',\r\n\t-- 42,'3',\r\n\t-- 54,'4',\r\n\t-- 66,'5',\r\n\t-- 78,'6',\r\n\t-- 90,'7',\r\n\t-- 102,'8',\r\n\t-- 114,'9',\r\n\t-- 126,'A',\r\n\t-- '0')\n\tDECODE(\n\t    v_AfterEffDate,\n\t    18, '1',\n\t    30, '2',\n\t    42, '3',\n\t    54, '4',\n\t    66, '5',\n\t    78, '6',\n\t    90, '7',\n\t    102, '8',\n\t    114, '9',\n\t    126, 'A',\n\t    '0'\n\t) AS v_PreviousReportLevelCodeReportNumber,\n\tv_PreviousReportLevelCodeReportNumber AS PreviousReportLevelCodeReportNumber,\n\t'P' AS UpdateTypeCode,\n\tEXP_GetCatastropheCode.type_of_loss_code3 AS TypeOfLoss,\n\t'01' AS TypeOfClaim,\n\tEXP_GetCatastropheCode.TypeOfSettlement3 AS i_TypeOfSettlement,\n\ti_TypeOfSettlement AS o_TypeOfSettlement,\n\tEXP_GetCatastropheCode.ManagedCareOrganizationType3 AS ManagedCareOrganizationType,\n\tLKP_claim_loss_trans_fact_catgry_type.claim_pay_ctgry_type AS i_claim_pay_ctgry_type,\n\t-- *INF*: IN(i_claim_pay_ctgry_type,'VC','VD','VE','VO','VR','VT', 'VM','XV','Y','N')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --'N'\n\ti_claim_pay_ctgry_type IN ('VC','VD','VE','VO','VR','VT','VM','XV','Y','N') AS v_VocationalRehabIndicator,\n\t-- *INF*: IIF(v_VocationalRehabIndicator='1','Y','N')\n\tIFF(v_VocationalRehabIndicator = '1', 'Y', 'N') AS o_VocationalRehabIndicator,\n\tEXP_GetCatastropheCode.LumpSumIndicator3 AS i_LumpSumIndicator,\n\t-- *INF*: IIF( i_TypeOfSettlement='06','Y','N')\n\tIFF(i_TypeOfSettlement = '06', 'Y', 'N') AS o_LumpSumIndicator,\n\t'00' AS FraudulentClaimCode,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- EDWPremiumMasterCalculationPKId != -1,'',\r\n\t-- IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'DT'),'01',\r\n\t-- IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PT'),'02',\r\n\t-- StateProvinceCode = '21' AND IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PP','DF'),'03',\r\n\t-- StateProvinceCode <> '21' AND IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PP','DF','PB'),'09',\r\n\t-- StateProvinceCode = '21' AND IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PB'),'04',\r\n\t-- IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PD','TD','VR','SI','1B') AND IN(RTRIM(LTRIM(StateProvinceCode)), '22','48') AND DATE_DIFF(SYSDATE,i_PolicyEffectiveDate,'MM')  <= 30  AND  IncurredIndemnityAmount >  0 ,'05',\r\n\t-- IN(RTRIM(LTRIM(ClaimPayCategoryType)), 'PD','TD','VR') AND IN(RTRIM(LTRIM(StateProvinceCode)), '22','48') AND DATE_DIFF(SYSDATE,i_PolicyEffectiveDate,'MM')  > 30  and  IncurredIndemnityAmount  >  0,'09',\r\n\t-- IncurredMedicalAmount+IncurredIndemnityAmount = 0  and  IncurredAllocatedLossAdjustmentExpenseAmount > 0,'06',\r\n\t--  IncurredMedicalAmount>0 and   IncurredIndemnityAmount = 0,'06',\r\n\t-- IncurredIndemnityAmount>0,'05',\r\n\t-- '00'\r\n\t-- )\r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    EDWPremiumMasterCalculationPKId != - 1, '',\n\t    RTRIM(LTRIM(ClaimPayCategoryType)) IN ('DT'), '01',\n\t    RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PT'), '02',\n\t    StateProvinceCode = '21' AND RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PP','DF'), '03',\n\t    StateProvinceCode <> '21' AND RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PP','DF','PB'), '09',\n\t    StateProvinceCode = '21' AND RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PB'), '04',\n\t    RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PD','TD','VR','SI','1B') AND RTRIM(LTRIM(StateProvinceCode)) IN ('22','48') AND DATEDIFF(MONTH,CURRENT_TIMESTAMP,i_PolicyEffectiveDate) <= 30 AND IncurredIndemnityAmount > 0, '05',\n\t    RTRIM(LTRIM(ClaimPayCategoryType)) IN ('PD','TD','VR') AND RTRIM(LTRIM(StateProvinceCode)) IN ('22','48') AND DATEDIFF(MONTH,CURRENT_TIMESTAMP,i_PolicyEffectiveDate) > 30 and IncurredIndemnityAmount > 0, '09',\n\t    IncurredMedicalAmount + IncurredIndemnityAmount = 0 and IncurredAllocatedLossAdjustmentExpenseAmount > 0, '06',\n\t    IncurredMedicalAmount > 0 and IncurredIndemnityAmount = 0, '06',\n\t    IncurredIndemnityAmount > 0, '05',\n\t    '00'\n\t) AS o_InjuryTypecode,\n\tEXP_GetCatastropheCode.O_claimant_num AS i_claimant_num,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_claimant_num)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_claimant_num) AS claimant_num,\n\tEXP_GetCatastropheCode.RateEffectiveDate,\n\t'N/A' AS SplitPeriodCode,\n\tEXP_GetCatastropheCode.OccupationDescription,\n\tEXP_GetCatastropheCode.WeeklyWageAmount,\n\tEXP_GetCatastropheCode.EmployerAttorneyFees\n\tFROM EXP_GetCatastropheCode\n\tLEFT JOIN LKP_claim_loss_trans_fact_catgry_type\n\tON LKP_claim_loss_trans_fact_catgry_type.edw_claim_party_occurrence_ak_id = EXP_GetCatastropheCode.claim_party_occurrence_ak_id AND LKP_claim_loss_trans_fact_catgry_type.claim_num = EXP_GetCatastropheCode.ClaimNumber1\n),\nTGT_WorkWCSTATExtract_Insert AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkWCSTATExtract\n\t(AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, PremiumMasterRunDate, LossMasterRunDate, BureauCompanyCode, PolicyKey, StateProvinceCode, PolicyEffectiveDate, PolicyEndDate, InterstateRiskId, EmployeeLeasingCode, StateRatingEffectiveDate, FederalTaxId, ThreeYearFixedRatePolicyIndicator, MultistatePolicyIndicator, InterstateRatedPolicyIndicator, EstimatedAuditCode, RetrospectiveratedPolicyIndicator, CancelledMidTermPolicyIndicator, ManagedCareOrganizationPolicyIndicator, TypeOfCoverageIdCode, TypeOfPlan, LossSubjectToDeductibleCode, BasisOfDeductibleCalculationCode, DeductibleAmountPerClaimAccident, InsuredName, WCSTATAddress, PremiumMasterClassCode, ExperienceModificationFactor, ExperienceModificationEffectiveDate, Exposure, PremiumMasterDirectWrittenPremiumAmount, ManualChargedRate, LossMasterClassCode, ClaimLossDate, ClaimNumber, ClaimOccurrenceStatusCode, InjuryTypeCode, CatastropheCode, IncurredIndemnityAmount, IncurredMedicalAmount, CauseOfLoss, TypeOfRecoveryCode, JurisdictionStateCode, BodyPartCode, NatureOfInjuryCode, CauseOfInjuryCode, PaidIndemnityAmount, PaidMedicalAmount, DeductibleReimbursementAmount, PaidAllocatedLossAdjustmentExpenseAmount, IncurredAllocatedLossAdjustmentExpenseAmount, SubjectPremiumTotal, StandarPremiumTotal, CorrectionSeqNumber, ReplacementReportCode, CorrectionTypeCode, TypeOfNonStandardIdCode, PreviousReportLevelCodeReportNumber, UpdateTypeCode, TypeOfLoss, TypeOfClaim, TypeOfSettlement, ManagedCareOrganizationType, VocationalRehabIndicator, LumpSumIndicator, FraudulentClaimCode, ClaimantNumber, RateEffectiveDate, SplitPeriodCode, OccupationDescription, WeeklyWageAmount, EmployerAttorneyFees)\n\tSELECT \n\to_AuditID AS AUDITID, \n\to_CreateDate AS CREATEDDATE, \n\tEDWPREMIUMMASTERCALCULATIONPKID, \n\tEDWLOSSMASTERCALCULATIONPKID, \n\tTYPEBUREAUCODE, \n\tPREMIUMMASTERRUNDATE, \n\tLOSSMASTERRUNDATE, \n\tBUREAUCOMPANYCODE, \n\tPOLICYKEY, \n\tSTATEPROVINCECODE, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYENDDATE, \n\tINTERSTATERISKID, \n\tEMPLOYEELEASINGCODE, \n\tSTATERATINGEFFECTIVEDATE, \n\tFEDERALTAXID, \n\tTHREEYEARFIXEDRATEPOLICYINDICATOR, \n\tMULTISTATEPOLICYINDICATOR, \n\tINTERSTATERATEDPOLICYINDICATOR, \n\tESTIMATEDAUDITCODE, \n\tRETROSPECTIVERATEDPOLICYINDICATOR, \n\tCANCELLEDMIDTERMPOLICYINDICATOR, \n\tMANAGEDCAREORGANIZATIONPOLICYINDICATOR, \n\tTYPEOFCOVERAGEIDCODE, \n\tTYPEOFPLAN, \n\tLOSSSUBJECTTODEDUCTIBLECODE, \n\tBASISOFDEDUCTIBLECALCULATIONCODE, \n\tDEDUCTIBLEAMOUNTPERCLAIMACCIDENT, \n\to_InsuredName AS INSUREDNAME, \n\tWCSTATADDRESS, \n\tPREMIUMMASTERCLASSCODE, \n\tEXPERIENCEMODIFICATIONFACTOR, \n\tEXPERIENCEMODIFICATIONEFFECTIVEDATE, \n\to_Exposure AS EXPOSURE, \n\to_PremiumMasterDirectWrittenPremiumAmount AS PREMIUMMASTERDIRECTWRITTENPREMIUMAMOUNT, \n\tMANUALCHARGEDRATE, \n\tLOSSMASTERCLASSCODE, \n\tCLAIMLOSSDATE, \n\tCLAIMNUMBER, \n\tCLAIMOCCURRENCESTATUSCODE, \n\to_InjuryTypecode AS INJURYTYPECODE, \n\tCATASTROPHECODE, \n\tINCURREDINDEMNITYAMOUNT, \n\tINCURREDMEDICALAMOUNT, \n\tCAUSEOFLOSS, \n\tTYPEOFRECOVERYCODE, \n\tJURISDICTIONSTATECODE, \n\tBODYPARTCODE, \n\tNATUREOFINJURYCODE, \n\tCAUSEOFINJURYCODE, \n\tPAIDINDEMNITYAMOUNT, \n\tPAIDMEDICALAMOUNT, \n\tDEDUCTIBLEREIMBURSEMENTAMOUNT, \n\tPAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tINCURREDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tSUBJECTPREMIUMTOTAL, \n\tSTANDARPREMIUMTOTAL, \n\tCORRECTIONSEQNUMBER, \n\tREPLACEMENTREPORTCODE, \n\tCORRECTIONTYPECODE, \n\tTYPEOFNONSTANDARDIDCODE, \n\tPREVIOUSREPORTLEVELCODEREPORTNUMBER, \n\tUPDATETYPECODE, \n\tTYPEOFLOSS, \n\tTYPEOFCLAIM, \n\to_TypeOfSettlement AS TYPEOFSETTLEMENT, \n\tMANAGEDCAREORGANIZATIONTYPE, \n\to_VocationalRehabIndicator AS VOCATIONALREHABINDICATOR, \n\to_LumpSumIndicator AS LUMPSUMINDICATOR, \n\tFRAUDULENTCLAIMCODE, \n\tclaimant_num AS CLAIMANTNUMBER, \n\tRATEEFFECTIVEDATE, \n\tSPLITPERIODCODE, \n\tOCCUPATIONDESCRIPTION, \n\tWEEKLYWAGEAMOUNT, \n\tEMPLOYERATTORNEYFEES\n\tFROM EXP_Loss_Prem\n),",
								"type": "Expression"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"satish_20000": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"SOURCE_TABLE_OWNER": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"SOURCE_DATABASE_NAME_IL": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"NUM_OF_MONTHS": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"SOURCE_TABLE_OWNER_V2": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"WBMI_AUDIT_CONTROL_RUN_ID": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"WHERE_CLAUSE": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"TARGET_TABLE_OWNER": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"SOURCE_DATABASE_NAME_DM": {
				"type": "string",
				"defaultValue": "Default Value"
			},
			"DELETE_PRESQL": {
				"type": "string",
				"defaultValue": "Default Value"
			}
		},
		"folder": {
			"name": "PolicyDataServices/"
		},
		"annotations": []
	}
}