{
    "name": "s_m_CLM_BALANCE_STAGE_EDW_Policy_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_BALANCE_STAGE_EDW_Policy_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_ARCH_PIF_4578_STAGE AS (\n\tSELECT \r\n\tCOUNT(*) as pif_4578_stage_id, \r\n\tpif_symbol + pif_policy_number + pif_module as loss_rec_length, \r\n\tSUM(loss_paid_or_resv_amt) as loss_location_number \r\n\tFROM  dbo.pif_4578_stage_temp \r\n\tWHERE  logical_flag = 0 --No Dummy Transactions\r\n\t\t\t  AND loss_part = '7'  --No Reinsurrance\r\n\tGROUP BY pif_symbol + pif_policy_number + pif_module\r\n\t\r\n\t\r\n\t---- 8/23/2011 Modified the Source Qualifier Query to use pif_4578_stage_temp table instead of arch_pif_4578_stage table.\n),\nSQ_EDW_TABLES AS (\n\tSELECT claim_occurrence.pol_key as EDW_pol_key,\r\n\t\t\tCOUNT(*) as EDW_COUNT_of_Transactions,\r\n\t\t\tSUM(trans_amt) as EDW_SUM_Trans_Amt\r\n\tFROM RPT_EDM.dbo.claim_transaction as claim_transaction\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claimant_coverage_detail as claimant_coverage_detail ON\r\n\tclaim_transaction.claimant_cov_det_ak_id = claimant_coverage_detail.claimant_cov_det_ak_id\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claim_party_occurrence as claim_party_occurrence ON\r\n\tclaimant_coverage_detail.claim_party_occurrence_ak_id = claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claim_occurrence as claim_occurrence ON\r\n\tclaim_party_occurrence.claim_occurrence_ak_id = claim_occurrence.claim_occurrence_ak_id\r\n\tWHERE claim_transaction.crrnt_snpsht_flag = 1\r\n\t\t\tAND claimant_coverage_detail.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_party_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_transaction.audit_id <=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t            AND claim_transaction.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t            AND trans_date > '1998-01-01'\r\n\tGROUP BY pol_key\n),\nJNR_EDW_ARCHIVE AS (SELECT\n\tSQ_EDW_TABLES.EDW_pol_key, \n\tSQ_EDW_TABLES.EDW_COUNT_of_Transactions, \n\tSQ_EDW_TABLES.EDW_SUM_Trans_Amt, \n\tSQ_ARCH_PIF_4578_STAGE.pif_4578_stage_id AS ARCH_COUNT_of_Transactions, \n\tSQ_ARCH_PIF_4578_STAGE.loss_rec_length AS ARCH_pol_key, \n\tSQ_ARCH_PIF_4578_STAGE.loss_location_number AS ARCH_SUM_Trans_Amt\n\tFROM SQ_EDW_TABLES\n\tRIGHT OUTER JOIN SQ_ARCH_PIF_4578_STAGE\n\tON SQ_ARCH_PIF_4578_STAGE.loss_rec_length = SQ_EDW_TABLES.EDW_pol_key\n),\nEXP_Evaluate AS (\n\tSELECT\n\tEDW_pol_key,\n\tEDW_COUNT_of_Transactions,\n\tEDW_SUM_Trans_Amt,\n\tARCH_COUNT_of_Transactions,\n\tARCH_pol_key,\n\tARCH_SUM_Trans_Amt,\n\t-- *INF*: IIF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt,'Y','N')\n\tIFF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt, 'Y', 'N') AS v_Balance_Amount,\n\t-- *INF*: IIF(v_Balance_Amount = 'Y', 1, -1)\n\tIFF(v_Balance_Amount = 'Y', 1, - 1) AS err_flag_change,\n\terr_flag_change AS out_err_flag\n\tFROM JNR_EDW_ARCHIVE\n),\nFIL_Err_Flag AS (\n\tSELECT\n\tEDW_pol_key, \n\tout_err_flag\n\tFROM EXP_Evaluate\n\tWHERE TRUE\n),\nLKP_Pol_id AS (\n\tSELECT\n\tpolicy_key_id,\n\tpol_key\n\tFROM (\n\t\tSELECT a.pol_id as policy_key_id, \r\n\t\t                  a.pol_key as pol_key \r\n\t\tFROM V2.policy a \r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY policy_key_id) = 1\n),\nUPD_Policy_Key_Err_Flag AS (\n\tSELECT\n\tLKP_Pol_id.policy_key_id, \n\tFIL_Err_Flag.out_err_flag\n\tFROM FIL_Err_Flag\n\tLEFT JOIN LKP_Pol_id\n\tON LKP_Pol_id.pol_key = FIL_Err_Flag.EDW_pol_key\n),\npolicy_update_err_flag_bal_txn AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.policy AS T\n\tUSING UPD_Policy_Key_Err_Flag AS S\n\tON T.pol_id = S.policy_key_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.err_flag_bal_txn = S.out_err_flag\n),\nSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn AS (\n\tSELECT \r\n\tCOUNT(*) as pif_4578_stage_id, \r\n\tpif_symbol + pif_policy_number + pif_module as loss_rec_length, \r\n\tSUM(loss_paid_or_resv_amt) as loss_location_number \r\n\tFROM  dbo.pif_4578_stage_temp\r\n\tWHERE  \tlogical_flag in ('0','-1') --No Dummy Transactions\r\n\t\t\t  AND loss_part = '8'  --Reinsurrance\r\n\tGROUP BY pif_symbol + pif_policy_number + pif_module\r\n\t\r\n\t\r\n\t---- 8/23/2011 Modified the Source Qualifier Query to use pif_4578_stage_temp table instead of arch_pif_4578_stage table.\n),\nSQ_EDW_TABLES_Bal_Reins_Txn AS (\n\tSELECT claim_occurrence.pol_key as EDW_pol_key,\r\n\t\t\tCOUNT(*) as EDW_COUNT_of_Reins_Transactions,\r\n\t\t\tSUM(claim_reins_trans_amt) as EDW_SUM_Reins_Trans_Amt\r\n\tFROM RPT_EDM.dbo.claim_reinsurance_transaction as claim_reinsurance_transaction\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claimant_coverage_detail as claimant_coverage_detail ON\r\n\tclaim_reinsurance_transaction.claimant_cov_det_ak_id = claimant_coverage_detail.claimant_cov_det_ak_id\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claim_party_occurrence as claim_party_occurrence ON\r\n\tclaimant_coverage_detail.claim_party_occurrence_ak_id = claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t\t\tINNER JOIN RPT_EDM.dbo.claim_occurrence as claim_occurrence ON\r\n\tclaim_party_occurrence.claim_occurrence_ak_id = claim_occurrence.claim_occurrence_ak_id\r\n\tWHERE claim_reinsurance_transaction.crrnt_snpsht_flag = 1\r\n\t\t\tAND claimant_coverage_detail.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_party_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_occurrence.crrnt_snpsht_flag = 1\r\n\t\t\tAND claim_reinsurance_transaction.audit_id <=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t            AND claim_reinsurance_transaction.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tGROUP BY pol_key\n),\nJNR_EDW_ARCHIVE_Bal_Reins_Txn AS (SELECT\n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_pol_key, \n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_COUNT_of_Transactions, \n\tSQ_EDW_TABLES_Bal_Reins_Txn.EDW_SUM_Trans_Amt, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.pif_4578_stage_id AS ARCH_COUNT_of_Transactions, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_rec_length AS ARCH_pol_key, \n\tSQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_location_number AS ARCH_SUM_Trans_Amt\n\tFROM SQ_EDW_TABLES_Bal_Reins_Txn\n\tRIGHT OUTER JOIN SQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn\n\tON SQ_ARCH_PIF_4578_STAGE_Bal_Reins_Txn.loss_rec_length = SQ_EDW_TABLES_Bal_Reins_Txn.EDW_pol_key\n),\nEXP_Evaluate_Bal_Reins_Txn AS (\n\tSELECT\n\tEDW_pol_key,\n\tEDW_COUNT_of_Transactions,\n\tEDW_SUM_Trans_Amt,\n\tARCH_COUNT_of_Transactions,\n\tARCH_pol_key,\n\tARCH_SUM_Trans_Amt,\n\t-- *INF*: IIF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt,'Y','N')\n\tIFF(ARCH_SUM_Trans_Amt = EDW_SUM_Trans_Amt, 'Y', 'N') AS v_Balance_Amount,\n\t-- *INF*: IIF(v_Balance_Amount = 'Y', 1, -1)\n\tIFF(v_Balance_Amount = 'Y', 1, - 1) AS err_flag_change,\n\terr_flag_change AS out_err_flag_reins_txn\n\tFROM JNR_EDW_ARCHIVE_Bal_Reins_Txn\n),\nFIL_Err_Flag_Bal_Reins_Txn AS (\n\tSELECT\n\tEDW_pol_key, \n\tout_err_flag_reins_txn\n\tFROM EXP_Evaluate_Bal_Reins_Txn\n\tWHERE TRUE\n),\nLKP_Pol_id_bal_reins_txn AS (\n\tSELECT\n\tpolicy_key_id,\n\tpol_key\n\tFROM (\n\t\tSELECT a.pol_id as policy_key_id, \r\n\t\t                  a.pol_key as pol_key \r\n\t\t FROM V2.policy a \r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY policy_key_id) = 1\n),\nUPD_Policy_Key_Err_Flag_bal_reins AS (\n\tSELECT\n\tLKP_Pol_id_bal_reins_txn.policy_key_id, \n\tFIL_Err_Flag_Bal_Reins_Txn.out_err_flag_reins_txn\n\tFROM FIL_Err_Flag_Bal_Reins_Txn\n\tLEFT JOIN LKP_Pol_id_bal_reins_txn\n\tON LKP_Pol_id_bal_reins_txn.pol_key = FIL_Err_Flag_Bal_Reins_Txn.EDW_pol_key\n),\npolicy_update_err_flag_bal_reins_txn AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.policy AS T\n\tUSING UPD_Policy_Key_Err_Flag_bal_reins AS S\n\tON T.pol_id = S.policy_key_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.err_flag_bal_reins = S.out_err_flag_reins_txn\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}