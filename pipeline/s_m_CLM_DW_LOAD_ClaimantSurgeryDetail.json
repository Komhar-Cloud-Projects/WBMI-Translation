{
    "name": "s_m_CLM_DW_LOAD_ClaimantSurgeryDetail",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_ClaimantSurgeryDetail",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clmt_surgery_detail_stage AS (\n\tSELECT\n\t\tClmtSurgeryDetailStageId,\n\t\tclmt_surgery_detail_id,\n\t\tsurgery_type_cd,\n\t\tsource_system_id,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM clmt_surgery_detail_stage\n),\nEXP_Src_Value AS (\n\tSELECT\n\tclmt_surgery_detail_id,\n\t-- *INF*: iif(isnull(clmt_surgery_detail_id),-1, clmt_surgery_detail_id)\n\tIFF(clmt_surgery_detail_id IS NULL,\n\t\t- 1,\n\t\tclmt_surgery_detail_id\n\t) AS o_clmt_surgery_detail_id,\n\tsurgery_type_cd,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(surgery_type_cd),'N/A',\r\n\t-- IS_SPACES(surgery_type_cd),'N/A',\r\n\t-- LENGTH(surgery_type_cd)=0,'N/A',\r\n\t-- LTRIM(RTRIM(surgery_type_cd)))\n\tDECODE(TRUE,\n\t\tsurgery_type_cd IS NULL, 'N/A',\n\t\tLENGTH(surgery_type_cd)>0 AND TRIM(surgery_type_cd)='', 'N/A',\n\t\tLENGTH(surgery_type_cd\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(surgery_type_cd\n\t\t\t)\n\t\t)\n\t) AS o_surgery_type_cd,\n\tsource_system_id\n\tFROM SQ_clmt_surgery_detail_stage\n),\nLKP_SupSurgeryType AS (\n\tSELECT\n\tSupSurgeryTypeId,\n\tSurgeryTypeCode\n\tFROM (\n\t\tSELECT\r\n\t\tSupSurgeryType.SupSurgeryTypeId as SupSurgeryTypeId, SupSurgeryType.SurgeryTypeCode as SurgeryTypeCode \r\n\t\t\r\n\t\tFROM SupSurgeryType\r\n\t\t\r\n\t\twhere \r\n\t\t\r\n\t\tCurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SurgeryTypeCode ORDER BY SupSurgeryTypeId) = 1\n),\nLKP_exceed_clmt_surgery_relation_stage AS (\n\tSELECT\n\ttch_claim_nbr,\n\ttch_client_id,\n\tclmt_surgery_detail_id\n\tFROM (\n\t\tSELECT\r\n\t\tE.tch_claim_nbr as tch_claim_nbr, \r\n\t\tE.tch_client_id as tch_client_id, \r\n\t\tE.clmt_surgery_detail_id as clmt_surgery_detail_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.exceed_clmt_surgery_relation_stage E\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clmt_surgery_detail_id ORDER BY tch_claim_nbr) = 1\n),\nLKP_pms_clmt_surgery_relation_stage AS (\n\tSELECT\n\tpms_policy_sym,\n\tpms_policy_num,\n\tpms_policy_mod,\n\tpms_date_of_loss,\n\tpms_loss_occurence,\n\tpms_loss_claimant,\n\tclmt_surgery_detail_id\n\tFROM (\n\t\tSELECT\r\n\t\tP.pms_policy_sym as pms_policy_sym, \r\n\t\tP.pms_policy_num as pms_policy_num, \r\n\t\tP.pms_policy_mod as pms_policy_mod, \r\n\t\tP.pms_date_of_loss as pms_date_of_loss, P.pms_loss_occurence as pms_loss_occurence, P.pms_loss_claimant as pms_loss_claimant, P.clmt_surgery_detail_id as clmt_surgery_detail_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.pms_clmt_surgery_relation_stage P\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clmt_surgery_detail_id ORDER BY pms_policy_sym) = 1\n),\nEXP_pms_exceed AS (\n\tSELECT\n\tLKP_exceed_clmt_surgery_relation_stage.tch_claim_nbr,\n\tLKP_exceed_clmt_surgery_relation_stage.tch_client_id,\n\tLKP_pms_clmt_surgery_relation_stage.pms_policy_sym,\n\tLKP_pms_clmt_surgery_relation_stage.pms_policy_num,\n\tLKP_pms_clmt_surgery_relation_stage.pms_policy_mod,\n\tLKP_pms_clmt_surgery_relation_stage.pms_date_of_loss,\n\tLKP_pms_clmt_surgery_relation_stage.pms_loss_occurence,\n\tLKP_pms_clmt_surgery_relation_stage.pms_loss_claimant,\n\t-- *INF*: to_char(pms_date_of_loss,'MMDDYYYY')\n\tto_char(pms_date_of_loss, 'MMDDYYYY'\n\t) AS v_pms_date_of_loss,\n\t-- *INF*: IIF(length(tch_claim_nbr)>0 ,ltrim(rtrim(tch_claim_nbr)),\r\n\t-- \r\n\t-- IIF(length(pms_policy_sym)>0,\r\n\t-- ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss ||  pms_loss_occurence)),\r\n\t-- \r\n\t-- 'N/A'))\n\tIFF(length(tch_claim_nbr\n\t\t) > 0,\n\t\tltrim(rtrim(tch_claim_nbr\n\t\t\t)\n\t\t),\n\t\tIFF(length(pms_policy_sym\n\t\t\t) > 0,\n\t\t\tltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss || pms_loss_occurence\n\t\t\t\t)\n\t\t\t),\n\t\t\t'N/A'\n\t\t)\n\t) AS o_tch_claim_nbr,\n\t-- *INF*: IIF(length(tch_claim_nbr)>0,ltrim(rtrim(tch_client_id)),\r\n\t-- \r\n\t-- IIF(length(pms_policy_sym)>0,\r\n\t-- ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss ||  pms_loss_occurence || pms_loss_claimant || 'CMT')),\r\n\t-- \r\n\t-- 'N/A'))\n\tIFF(length(tch_claim_nbr\n\t\t) > 0,\n\t\tltrim(rtrim(tch_client_id\n\t\t\t)\n\t\t),\n\t\tIFF(length(pms_policy_sym\n\t\t\t) > 0,\n\t\t\tltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss || pms_loss_occurence || pms_loss_claimant || 'CMT'\n\t\t\t\t)\n\t\t\t),\n\t\t\t'N/A'\n\t\t)\n\t) AS o_tch_client_id\n\tFROM \n\tLEFT JOIN LKP_exceed_clmt_surgery_relation_stage\n\tON LKP_exceed_clmt_surgery_relation_stage.clmt_surgery_detail_id = EXP_Src_Value.o_clmt_surgery_detail_id\n\tLEFT JOIN LKP_pms_clmt_surgery_relation_stage\n\tON LKP_pms_clmt_surgery_relation_stage.clmt_surgery_detail_id = EXP_Src_Value.o_clmt_surgery_detail_id\n),\nLKP_claim_party_occurrence AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT\r\n\t\tCPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num,\r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO\r\n\t\t\r\n\t\tWHERE\r\n\t\tCO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id\r\n\t\tAND\r\n\t\tCP.claim_party_ak_id = CPO.claim_party_ak_id\r\n\t\tAND\r\n\t\tCPO.claim_party_role_code in ('CMT', 'CLMT')\r\n\t\tAND\r\n\t\tCO.crrnt_snpsht_flag = 1\r\n\t\tAND\r\n\t\tCP.crrnt_snpsht_flag = 1\r\n\t\tAND\r\n\t\tCPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nEXP_Lkp_Defualt AS (\n\tSELECT\n\tLKP_claim_party_occurrence.claim_party_occurrence_ak_id,\n\t-- *INF*: iif(isnull(claim_party_occurrence_ak_id), -1,claim_party_occurrence_ak_id)\n\tIFF(claim_party_occurrence_ak_id IS NULL,\n\t\t- 1,\n\t\tclaim_party_occurrence_ak_id\n\t) AS o_claim_party_occurrence_ak_id,\n\tLKP_SupSurgeryType.SupSurgeryTypeId,\n\t-- *INF*: iif(isnull(SupSurgeryTypeId), -1, SupSurgeryTypeId)\n\tIFF(SupSurgeryTypeId IS NULL,\n\t\t- 1,\n\t\tSupSurgeryTypeId\n\t) AS o_SupSurgeryTypeId\n\tFROM \n\tLEFT JOIN LKP_SupSurgeryType\n\tON LKP_SupSurgeryType.SurgeryTypeCode = EXP_Src_Value.o_surgery_type_cd\n\tLEFT JOIN LKP_claim_party_occurrence\n\tON LKP_claim_party_occurrence.claimant_num = EXP_pms_exceed.o_tch_claim_nbr AND LKP_claim_party_occurrence.claim_party_role_code = EXP_pms_exceed.o_tch_client_id\n),\nLKP_ClaimantSurgeryDetail_Target AS (\n\tSELECT\n\tClaimantSurgeryDetailId,\n\tclaim_party_occurrence_ak_Id,\n\tSupSurgeryTypeId,\n\tclmt_surgery_detail_id,\n\tClaimantSurgeryDetailAkId\n\tFROM (\n\t\tSELECT \r\n\t\tC.ClaimantSurgeryDetailId as ClaimantSurgeryDetailId, C.clmt_surgery_detail_id as clmt_surgery_detail_id, C.ClaimantSurgeryDetailAkId as ClaimantSurgeryDetailAkId, C.claim_party_occurrence_ak_Id as claim_party_occurrence_ak_Id, \r\n\t\tC.SupSurgeryTypeId as SupSurgeryTypeId\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.ClaimantSurgeryDetail C\r\n\t\t\r\n\t\twhere\r\n\t\t    CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_Id,clmt_surgery_detail_id,SupSurgeryTypeId ORDER BY ClaimantSurgeryDetailId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_ClaimantSurgeryDetail_Target.ClaimantSurgeryDetailId AS Lkp_ClaimantSurgeryDetailId,\n\tLKP_ClaimantSurgeryDetail_Target.claim_party_occurrence_ak_Id AS Lkp_claim_party_occurrence_ak_Id,\n\tLKP_ClaimantSurgeryDetail_Target.SupSurgeryTypeId AS Lkp_SupSurgeryTypeId,\n\tLKP_ClaimantSurgeryDetail_Target.clmt_surgery_detail_id AS Lkp_clmt_surgery_detail_id,\n\t-- *INF*: iif(isnull(Lkp_ClaimantSurgeryDetailId),'NEW',\r\n\t--   \r\n\t--   iif(\r\n\t--   \r\n\t--       LTRIM(RTRIM(Lkp_claim_party_occurrence_ak_Id)) != LTRIM(RTRIM(claim_party_occurrence_ak_Id))\r\n\t-- \r\n\t--     or\r\n\t--   \r\n\t--       LTRIM(RTRIM(Lkp_SupSurgeryTypeId)) != LTRIM(RTRIM(SupSurgeryTypeId))\r\n\t-- \r\n\t-- --    or\r\n\t--   \r\n\t--  --     LTRIM(RTRIM(Lkp_ClaimantSurgeryDetailAkId)) != LTRIM(RTRIM(ClaimantSurgeryDetailAkId))\r\n\t-- \r\n\t--    or\r\n\t-- \r\n\t--       LTRIM(RTRIM(Lkp_clmt_surgery_detail_id)) != LTRIM(RTRIM(clmt_surgery_detail_id)),\r\n\t--         \r\n\t--         'UPDATE', 'NOCHANGE')\r\n\t-- \r\n\t--    )\n\tIFF(Lkp_ClaimantSurgeryDetailId IS NULL,\n\t\t'NEW',\n\t\tIFF(LTRIM(RTRIM(Lkp_claim_party_occurrence_ak_Id\n\t\t\t\t)\n\t\t\t) != LTRIM(RTRIM(claim_party_occurrence_ak_Id\n\t\t\t\t)\n\t\t\t) \n\t\t\tOR LTRIM(RTRIM(Lkp_SupSurgeryTypeId\n\t\t\t\t)\n\t\t\t) != LTRIM(RTRIM(SupSurgeryTypeId\n\t\t\t\t)\n\t\t\t) \n\t\t\tOR LTRIM(RTRIM(Lkp_clmt_surgery_detail_id\n\t\t\t\t)\n\t\t\t) != LTRIM(RTRIM(clmt_surgery_detail_id\n\t\t\t\t)\n\t\t\t),\n\t\t\t'UPDATE',\n\t\t\t'NOCHANGE'\n\t\t)\n\t) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\tEXP_Lkp_Defualt.o_claim_party_occurrence_ak_id AS claim_party_occurrence_ak_Id,\n\tEXP_Lkp_Defualt.o_SupSurgeryTypeId AS SupSurgeryTypeId,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_ChangedFlag = 'NEW',\n\t\tto_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t),\n\t\tsysdate\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Src_Value.source_system_id AS SourceSystemId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t1 AS CurrentSnapshotFlag,\n\tLKP_ClaimantSurgeryDetail_Target.ClaimantSurgeryDetailAkId AS Lkp_ClaimantSurgeryDetailAkId,\n\tEXP_Src_Value.o_clmt_surgery_detail_id AS clmt_surgery_detail_id\n\tFROM EXP_Lkp_Defualt\n\t -- Manually join with EXP_Src_Value\n\tLEFT JOIN LKP_ClaimantSurgeryDetail_Target\n\tON LKP_ClaimantSurgeryDetail_Target.claim_party_occurrence_ak_Id = EXP_Lkp_Defualt.o_claim_party_occurrence_ak_id AND LKP_ClaimantSurgeryDetail_Target.clmt_surgery_detail_id = EXP_Src_Value.o_clmt_surgery_detail_id AND LKP_ClaimantSurgeryDetail_Target.SupSurgeryTypeId = LKP_SupSurgeryType.SupSurgeryTypeId\n),\nFIL_Lkp_Records AS (\n\tSELECT\n\tChangedFlag, \n\tclaim_party_occurrence_ak_Id, \n\tSupSurgeryTypeId, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tSourceSystemId, \n\tAuditId, \n\tCurrentSnapshotFlag, \n\tLkp_ClaimantSurgeryDetailAkId, \n\tclmt_surgery_detail_id\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW'  OR ChangedFlag = 'UPDATE'\n),\nSEQ_ClaimantSugeryDetail AS (\n\tCREATE SEQUENCE SEQ_ClaimantSugeryDetail\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_AKid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tSEQ_ClaimantSugeryDetail.NEXTVAL,\n\t-- *INF*: IIF(ChangedFlag='NEW', NEXTVAL, Lkp_ClaimantSurgeryDetailAkId)\n\tIFF(ChangedFlag = 'NEW',\n\t\tNEXTVAL,\n\t\tLkp_ClaimantSurgeryDetailAkId\n\t) AS o_ClaimantSurgeryDetailAkId,\n\tclaim_party_occurrence_ak_Id,\n\tSupSurgeryTypeId,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreatedDate,\n\tModifiedDate,\n\tSourceSystemId,\n\tAuditId,\n\tCurrentSnapshotFlag,\n\tLkp_ClaimantSurgeryDetailAkId,\n\tclmt_surgery_detail_id\n\tFROM FIL_Lkp_Records\n),\nClaimantSurgeryDetail_Insert AS (\n\tINSERT INTO ClaimantSurgeryDetail\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, ClaimantSurgeryDetailAkId, claim_party_occurrence_ak_Id, SupSurgeryTypeId, clmt_surgery_detail_id)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\to_ClaimantSurgeryDetailAkId AS CLAIMANTSURGERYDETAILAKID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tSUPSURGERYTYPEID, \n\tCLMT_SURGERY_DETAIL_ID\n\tFROM EXP_AKid_Insert_Target\n),\nSQ_ClaimantSurgeryDetail AS (\n\tSELECT\r\n\tA.ClaimantSurgeryDetailId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.ClaimantSurgeryDetailAkId\r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.ClaimantSurgeryDetail A\r\n\t\r\n\twhere Exists\r\n\t   ( \r\n\tSELECT 1 \r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ClaimantSurgeryDetail B\r\n\t\r\n\twhere\r\n\tA.ClaimantSurgeryDetailAkId = B.ClaimantSurgeryDetailAkId\r\n\tAND\r\n\tB.CurrentSnapshotFlag = 1\r\n\t\r\n\tgroup by \r\n\tB.ClaimantSurgeryDetailAkId\r\n\t\r\n\thaving \r\n\tcount(*) > 1 \r\n\t   )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.ClaimantSurgeryDetailAkId, \r\n\tA.EffectiveDate DESC\n),\nEXP_Lap_ExpirationDate AS (\n\tSELECT\n\tClaimantSurgeryDetailId,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- ClaimantSurgeryDetailAkId= v_PREV_ROW_ClaimantSurgeryDetailAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\n\tDECODE(TRUE,\n\t\tClaimantSurgeryDetailAkId = v_PREV_ROW_ClaimantSurgeryDetailAkId, DATEADD(SECOND,- 1,v_PREV_ROW_EffectiveDate),\n\t\torig_ExpirationDate\n\t) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tClaimantSurgeryDetailAkId AS v_PREV_ROW_ClaimantSurgeryDetailAkId,\n\tSYSDATE AS ModifiedDate,\n\t0 AS CurrentSnapshotFlag,\n\tClaimantSurgeryDetailAkId\n\tFROM SQ_ClaimantSurgeryDetail\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tClaimantSurgeryDetailId, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM EXP_Lap_ExpirationDate\n\tWHERE orig_ExpirationDate  != ExpirationDate\n),\nUPD_ClaimantSurgeryDetail_Update AS (\n\tSELECT\n\tClaimantSurgeryDetailId, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM FIL_FirstRowAkId\n),\nClaimantSurgeryDetail_Update AS (\n\tMERGE INTO ClaimantSurgeryDetail AS T\n\tUSING UPD_ClaimantSurgeryDetail_Update AS S\n\tON T.ClaimantSurgeryDetailId = S.ClaimantSurgeryDetailId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),\nSQ_ClaimantSurgeryDetail_Expire AS (\n\tSELECT \r\n\tCS.ClaimantSurgeryDetailId, \r\n\tCS.EffectiveDate, \r\n\tCS.ExpirationDate, \r\n\tCS.SupSurgeryTypeId, \r\n\tCS.clmt_surgery_detail_id \r\n\t\r\n\tFROM\r\n\tRPT_EDM.dbo.ClaimantSurgeryDetail CS,\r\n\tRPT_EDM.dbo.SupSurgeryType S,\r\n\tWC_Stage..clmt_surgery_detail_deleted_stage CSD\r\n\t \r\n\twhere\r\n\tCS.clmt_surgery_detail_id = CSD.clmt_surgery_detail_id\r\n\tAND\r\n\tCSD.surgery_type_cd = S.SurgeryTypeCode\r\n\tAND\r\n\tCS.SupSurgeryTypeId = S.SupSurgeryTypeId\r\n\tAND\r\n\tS.CurrentSnapshotFlag = 1\r\n\tAND\r\n\tCS.CurrentSnapshotFlag = 1\n),\nEXP_Expiring AS (\n\tSELECT\n\tClaimantSurgeryDetailId,\n\t0 AS CurrentSnapshotFlag,\n\tclmt_surgery_detail_id,\n\tSupSurgeryTypeId,\n\tSYSDATE AS ModifiedDate,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM SQ_ClaimantSurgeryDetail_Expire\n),\nFIL_Expire AS (\n\tSELECT\n\tClaimantSurgeryDetailId, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM EXP_Expiring\n\tWHERE NOT isnull(ClaimantSurgeryDetailId)\n),\nUPD_Expire AS (\n\tSELECT\n\tClaimantSurgeryDetailId, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM FIL_Expire\n),\nClaimantSurgeryDetail_Expire1 AS (\n\tMERGE INTO ClaimantSurgeryDetail AS T\n\tUSING UPD_Expire AS S\n\tON T.ClaimantSurgeryDetailId = S.ClaimantSurgeryDetailId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246502"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905527"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604453"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:37"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:40"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS and EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}