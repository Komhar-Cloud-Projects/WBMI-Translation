{
    "name": "s_m_CMN_DW_Load_SupDCTAnnualStatementLineRule",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_DW_Load_SupDCTAnnualStatementLineRule",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_SupDCTAnnualStatementLineRules AS (\n\tSELECT\n\t\tSupDctAnnualStatementLineRulesId,\n\t\tModifiedUserId,\n\t\tModifiedDate,\n\t\tSystemCoverageId,\n\t\tAnnualStatementLineId\n\tFROM SupDCTAnnualStatementLineRules\n),\nEXP_Set_Metadata AS (\n\tSELECT\n\tSupDctAnnualStatementLineRulesId,\n\tSystemCoverageId,\n\tAnnualStatementLineId,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tCURRENT_TIMESTAMP AS o_CreatedDate,\n\tCURRENT_TIMESTAMP AS o_ModifiedDate\n\tFROM SQ_SupDCTAnnualStatementLineRules\n),\nLKP_SupDCTAnnualStatementLineRule AS (\n\tSELECT\n\tSupDCTAnnualStatementLineRuleId\n\tFROM (\n\t\tSELECT \n\t\t\tSupDCTAnnualStatementLineRuleId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SupDCTAnnualStatementLineRuleId ORDER BY SupDCTAnnualStatementLineRuleId) = 1\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tLKP_SupDCTAnnualStatementLineRule.SupDCTAnnualStatementLineRuleId AS lkp_SupDCTAnnualStatementLineRuleId,\n\tEXP_Set_Metadata.SupDctAnnualStatementLineRulesId,\n\tEXP_Set_Metadata.o_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\tEXP_Set_Metadata.o_AuditId AS AuditId,\n\tEXP_Set_Metadata.o_EffectiveDate AS EffectiveDate,\n\tEXP_Set_Metadata.o_ExpirationDate AS ExpirationDate,\n\tEXP_Set_Metadata.o_SourceSystemId AS SourceSystemId,\n\tEXP_Set_Metadata.o_CreatedDate AS CreatedDate,\n\tEXP_Set_Metadata.o_ModifiedDate AS ModifiedDate,\n\tEXP_Set_Metadata.SystemCoverageId,\n\tEXP_Set_Metadata.AnnualStatementLineId\n\tFROM EXP_Set_Metadata\n\tLEFT JOIN LKP_SupDCTAnnualStatementLineRule\n\tON LKP_SupDCTAnnualStatementLineRule.SupDCTAnnualStatementLineRuleId = EXP_Set_Metadata.SupDctAnnualStatementLineRulesId\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE ISNULL(lkp_SupDCTAnnualStatementLineRuleId)),\nRTR_Insert_Update_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE NOT ISNULL(lkp_SupDCTAnnualStatementLineRuleId)),\nSupDCTAnnualStatementLineRule_INSERT AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule\n\t(SupDCTAnnualStatementLineRuleId, CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, SystemCoverageId, AnnualStatementLineId)\n\tSELECT \n\tSupDctAnnualStatementLineRulesId AS SUPDCTANNUALSTATEMENTLINERULEID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tSYSTEMCOVERAGEID, \n\tANNUALSTATEMENTLINEID\n\tFROM RTR_Insert_Update_INSERT\n),\nUPD_SupDCTAnnualStatementLineRule AS (\n\tSELECT\n\tSupDctAnnualStatementLineRulesId AS SupDCTAnnualStatementLineRuleId, \n\tAuditId, \n\tModifiedDate, \n\tSystemCoverageId, \n\tAnnualStatementLineId\n\tFROM RTR_Insert_Update_UPDATE\n),\nSupDCTAnnualStatementLineRule_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule AS T\n\tUSING UPD_SupDCTAnnualStatementLineRule AS S\n\tON T.SupDCTAnnualStatementLineRuleId = S.SupDCTAnnualStatementLineRuleId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.ModifiedDate = S.ModifiedDate, T.SystemCoverageId = S.SystemCoverageId, T.AnnualStatementLineId = S.AnnualStatementLineId\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246535"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905690"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604839"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:04:54"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 11:42:10"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_InsuranceReference_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "InsRef"
            }
        },
        "folder": {
            "name": "Common DataWarehouse/"
        },
        "annotations": []
    }
}