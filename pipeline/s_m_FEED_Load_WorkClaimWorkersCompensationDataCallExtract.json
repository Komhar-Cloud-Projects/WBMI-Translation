{
    "name": "s_m_FEED_Load_WorkClaimWorkersCompensationDataCallExtract",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WorkClaimWorkersCompensationDataCallExtract",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_vwLossMasterFact_OpenCount AS (\n\tSELECT\r\n\t  CoverageDetailDim.RatingStateProvinceCode,\r\n\t  InsuranceReferenceDim.StrategicProfitCenterAbbreviation,\r\n\t  InsuranceReferenceDim.InsuranceSegmentDescription,\r\n\t  InsuranceReferenceDim.PolicyOfferingDescription,\r\n\t  policy_dim.pol_eff_date,\r\n\t  Clm_Loss_Date_dim.clndr_yr Clm_clndr_yr,\r\n\t  dbo.policy_dim.pol_key,\r\n\t  Clm_Loss_Date_dim.clndr_date Clm_clndr_date,\r\n\tloss_master_fact.outstanding_amt,\r\n\tclaim_occurrence_dim.claim_occurrence_key\r\n\tFROM\r\n\t  @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_fact ON (policy_dim.pol_dim_id=loss_master_fact.pol_dim_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim ON (claim_occurrence_dim.claim_occurrence_dim_id=loss_master_fact.claim_occurrence_dim_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction_type_dim ON (claim_transaction_type_dim.claim_trans_type_dim_id=loss_master_fact.claim_trans_type_dim_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim ON (claimant_coverage_dim.claimant_cov_dim_id=loss_master_fact.claimant_cov_dim_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim  Pol_Eff_Date_dim ON (loss_master_fact.pol_eff_date_id=Pol_Eff_Date_dim.clndr_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim  Clm_Loss_Date_dim ON (loss_master_fact.claim_loss_date_id=Clm_Loss_Date_dim.clndr_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim  Monthly_Run_Date_dim ON (loss_master_fact.loss_master_run_date_id=Monthly_Run_Date_dim.clndr_id)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ON (InsuranceReferenceDim.InsuranceReferenceDimId=loss_master_fact.InsuranceReferenceDimId)\r\n\t   INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim ON (CoverageDetailDim.CoverageDetailDimId=loss_master_fact.CoverageDetailDimId)\r\n\t  \r\n\tWHERE\r\n\t  ( \r\n\t  claim_transaction_type_dim.trans_kind_code  =  'D'\r\n\t  AND  Monthly_Run_Date_dim.clndr_yr  = ( YEAR(GETDATE())-@{pipeline().parameters.NOOFYEAR})  AND Monthly_Run_Date_dim.clndr_month = @{pipeline().parameters.MONTH}\r\n\t  AND  InsuranceReferenceDim.PolicyOfferingDescription  =  'Workers Compensation'\r\n\t  AND  claimant_coverage_dim.cause_of_loss  IN  ('05', '75') \r\n\tAND claim_transaction_type_dim.pms_trans_code not in ('97','98','99') \r\n\t)\n),\nEXPTRANS AS (\n\tSELECT\n\tRatingStateProvinceCode,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceSegmentDescription,\n\tPolicyOfferingDescription,\n\tpol_eff_date,\n\tClm_clndr_yr,\n\tpol_key,\n\tClm_clndr_date,\n\toutstanding_amt,\n\tclaim_occurrence_key,\n\t0 AS O_Paid_To_Date\n\tFROM SQ_vwLossMasterFact_OpenCount\n),\nSQ_vwLossMasterFact AS (\n\tSELECT\r\n\tCoverageDetailDim.RatingStateProvinceCode, \r\n\t--loss_master_dim.risk_state_prov_code, \r\n\tpolicy_dim.pol_key,\r\n\tpolicy_dim.pol_eff_date, \r\n\tclaim_occurrence_dim.claim_loss_date,\r\n\tclaim_occurrence_dim.claim_occurrence_key,\r\n\tInsuranceReferenceDim.StrategicProfitCenterAbbreviation, \r\n\tInsuranceReferenceDim.InsuranceSegmentDescription, \r\n\tInsuranceReferenceDim.PolicyOfferingDescription, \r\n\tvwLossMasterFact.ChangeInOutstandingAmount, \r\n\tvwLossMasterFact.DirectLossPaidER, \r\n\tvwLossMasterFact.DirectALAEPaidER, \r\n\tcalendar_dim.clndr_date, \r\n\tclaim_transaction_type_dim.pms_trans_code, \r\n\tCoverageDetailDim.RatingStateProvinceCode, \r\n\tvwLossMasterFact.claim_loss_date_id \r\n\tFROM \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction_type_dim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact, policy_dim, \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim, loss_master_dim , \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim as calendar_dim1\r\n\tWHERE vwLossMasterFact.pol_dim_id = policy_dim.pol_dim_id\r\n\tAND vwLossMasterFact.claim_occurrence_dim_id = claim_occurrence_dim.claim_occurrence_dim_id\r\n\tAND vwLossMasterFact.claimant_cov_dim_id = claimant_coverage_dim.claimant_cov_dim_id\r\n\tAND vwLossMasterFact.claim_loss_date_id = calendar_dim.clndr_id\r\n\tAND vwLossMasterFact.InsuranceReferenceDimId = InsuranceReferenceDim.InsuranceReferenceDimId\r\n\tAND vwLossMasterFact.loss_master_dim_id = loss_master_dim.loss_master_dim_id\r\n\tAND vwLossMasterFact.claim_trans_type_dim_id = claim_transaction_type_dim.claim_trans_type_dim_id\r\n\tAND vwLossMasterFact.CoverageDetailDimId = CoverageDetailDim.CoverageDetailDimId \r\n\tAND vwLossMasterFact.loss_master_run_date_id = calendar_dim1.clndr_id\r\n\tAND InsuranceReferenceDim.PolicyOfferingDescription =  'Workers Compensation'\r\n\tAND claimant_coverage_dim.cause_of_loss in ('05', '75')\r\n\tAND ( (calendar_dim1.CalendarYear <= CONVERT(CHAR(4), GETDATE(), 120)-1 AND @{pipeline().parameters.RUN_YEAR}= 0)\r\n\t   OR (calendar_dim1.CalendarYear <= @{pipeline().parameters.RUN_YEAR} AND @{pipeline().parameters.RUN_YEAR} != 0)\r\n\t           )\r\n\tAND claim_transaction_type_dim.pms_trans_code not in ('97','98','99')\r\n\tAND claim_transaction_type_dim.trans_kind_code  =  'D'\n),\nEXP_STAGE AS (\n\tSELECT\n\tpol_key,\n\tpol_eff_date AS i_pol_eff_date,\n\tclaim_loss_date AS i_claim_loss_date,\n\t-- *INF*: TRUNC(i_claim_loss_date)\n\tTRUNC(i_claim_loss_date) AS o_claim_loss_date,\n\tclaim_occurrence_key,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceSegmentDescription,\n\tPolicyOfferingDescription,\n\tChangeInOutstandingAmount,\n\tDirectLossPaidER AS i_DirectLossPaidER,\n\tDirectALAEPaidER AS i_DirectALAEPaidER,\n\trisk_state_prov_code,\n\ti_DirectLossPaidER AS o_PaidToDate,\n\t0 AS o_ChangeInOutstandingAmount_Closed,\n\tpms_trans_code,\n\tRatingStateProvinceCode,\n\tclaim_loss_date_id1,\n\tclndr_date\n\tFROM SQ_vwLossMasterFact\n),\nUnion AS (\n\tSELECT RatingStateProvinceCode, StrategicProfitCenterAbbreviation, InsuranceSegmentDescription, PolicyOfferingDescription, pol_eff_date, pol_key, claim_occurrence_key, Clm_clndr_date, outstanding_amt, O_Paid_To_Date AS Paid_To_Date\n\tFROM EXPTRANS\n\tUNION\n\tSELECT risk_state_prov_code AS RatingStateProvinceCode, StrategicProfitCenterAbbreviation, InsuranceSegmentDescription, PolicyOfferingDescription, i_pol_eff_date AS pol_eff_date, pol_key, claim_occurrence_key, clndr_date AS Clm_clndr_date, o_ChangeInOutstandingAmount_Closed AS outstanding_amt, o_PaidToDate AS Paid_To_Date\n\tFROM EXP_STAGE\n),\nAGG_Claim_Occurrence_Year AS (\n\tSELECT\n\tRatingStateProvinceCode AS risk_state_prov_code,\n\tpol_key,\n\tpol_eff_date,\n\tClm_clndr_date AS claim_loss_date,\n\t-- *INF*: TRUNC(claim_loss_date,'YYYY')\n\tCAST(TRUNC(claim_loss_date, 'YEAR') AS TIMESTAMP_NTZ(0)) AS claim_loss_year,\n\tclaim_occurrence_key,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceSegmentDescription,\n\tPolicyOfferingDescription,\n\toutstanding_amt AS i_ChangeInOutstandingAmount,\n\tPaid_To_Date AS i_PaidToDate,\n\t-- *INF*: SUM(i_ChangeInOutstandingAmount)\n\tSUM(i_ChangeInOutstandingAmount) AS o_ChangeInOutstandingAmount,\n\t-- *INF*: SUM(i_PaidToDate)\n\tSUM(i_PaidToDate) AS o_PaidToDate,\n\t-- *INF*: LAST(claim_loss_date)\n\tLAST(claim_loss_date) AS o_claim_loss_date\n\tFROM Union\n\tGROUP BY risk_state_prov_code, pol_key, pol_eff_date, claim_loss_year, claim_occurrence_key, StrategicProfitCenterAbbreviation, InsuranceSegmentDescription, PolicyOfferingDescription\n),\nEXP_Metadata AS (\n\tSELECT\n\tpol_key,\n\tpol_eff_date,\n\to_claim_loss_date AS claim_loss_date,\n\tclaim_occurrence_key,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceSegmentDescription,\n\tPolicyOfferingDescription,\n\trisk_state_prov_code,\n\to_ChangeInOutstandingAmount AS TotalChangeInOutstandingAmount,\n\to_PaidToDate AS TotalPaidToDate,\n\t-- *INF*: IIF(TotalChangeInOutstandingAmount>0, 1, 0)\n\tIFF(TotalChangeInOutstandingAmount > 0, 1, 0) AS o_OpenClaimCount,\n\t-- *INF*: IIF(TotalChangeInOutstandingAmount <= 0 AND TotalPaidToDate>0, 1, 0)\n\tIFF(TotalChangeInOutstandingAmount <= 0 AND TotalPaidToDate > 0, 1, 0) AS o_ClosedWithPayClaimCount,\n\t-- *INF*: IIF(@{pipeline().parameters.RUN_YEAR} = 0, \r\n\t--        TO_DATE('12/31/'  || TO_CHAR(GET_DATE_PART(SYSDATE, 'YYYY') -1), 'MM/DD/YYYY'), \r\n\t--        TO_DATE('12/31/'  || TO_CHAR(@{pipeline().parameters.RUN_YEAR}), 'MM/DD/YYYY')\r\n\t--       )\n\tIFF(\n\t    @{pipeline().parameters.RUN_YEAR} = 0,\n\t    TO_TIMESTAMP('12/31/' || TO_CHAR(DATE_PART(CURRENT_TIMESTAMP, 'YYYY') - 1), 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP('12/31/' || TO_CHAR(@{pipeline().parameters.RUN_YEAR}), 'MM/DD/YYYY')\n\t) AS o_RunDateYear,\n\tsysdate AS o_CreatedDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tclaim_loss_year\n\tFROM AGG_Claim_Occurrence_Year\n),\nLKP_WorkClaimWorkersCompensationDataCallExtract AS (\n\tSELECT\n\tWorkClaimWorkersCompensationDataCallExtractId,\n\tPolicyKey,\n\tClaimOccurrenceKey,\n\tStateCode,\n\tClaimLossDate,\n\tRunDate\n\tFROM (\n\t\tSELECT \n\t\t\tWorkClaimWorkersCompensationDataCallExtractId,\n\t\t\tPolicyKey,\n\t\t\tClaimOccurrenceKey,\n\t\t\tStateCode,\n\t\t\tClaimLossDate,\n\t\t\tRunDate\n\t\tFROM WorkClaimWorkersCompensationDataCallExtract\n\t\tWHERE RunDate = CASE WHEN @{pipeline().parameters.RUN_YEAR} =0  then convert(datetime,'12/31/' + cast(convert(char(4), getdate(), 120)-1 as char(4)) ,101)\r\n\t\t                                   ELSE convert(datetime,'12/31/' + cast(@{pipeline().parameters.RUN_YEAR} as char(4)),101)\r\n\t\t                        END\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,ClaimOccurrenceKey,StateCode,ClaimLossDate,RunDate ORDER BY WorkClaimWorkersCompensationDataCallExtractId) = 1\n),\nRTRTRANS AS (\n\tSELECT\n\tLKP_WorkClaimWorkersCompensationDataCallExtract.WorkClaimWorkersCompensationDataCallExtractId,\n\tEXP_Metadata.pol_key,\n\tEXP_Metadata.pol_eff_date,\n\tEXP_Metadata.claim_loss_date,\n\tEXP_Metadata.claim_occurrence_key,\n\tEXP_Metadata.StrategicProfitCenterAbbreviation,\n\tEXP_Metadata.InsuranceSegmentDescription,\n\tEXP_Metadata.PolicyOfferingDescription,\n\tEXP_Metadata.risk_state_prov_code,\n\tEXP_Metadata.TotalChangeInOutstandingAmount,\n\tEXP_Metadata.TotalPaidToDate,\n\tEXP_Metadata.o_OpenClaimCount AS OpenClaimCount,\n\tEXP_Metadata.o_ClosedWithPayClaimCount AS ClosedWithPayClaimCount,\n\tEXP_Metadata.o_RunDateYear AS RunDateYear,\n\tEXP_Metadata.o_CreatedDate AS CreatedDate,\n\tEXP_Metadata.o_AuditId AS AuditId\n\tFROM EXP_Metadata\n\tLEFT JOIN LKP_WorkClaimWorkersCompensationDataCallExtract\n\tON LKP_WorkClaimWorkersCompensationDataCallExtract.PolicyKey = EXP_Metadata.pol_key AND LKP_WorkClaimWorkersCompensationDataCallExtract.ClaimOccurrenceKey = EXP_Metadata.claim_occurrence_key AND LKP_WorkClaimWorkersCompensationDataCallExtract.StateCode = EXP_Metadata.risk_state_prov_code AND LKP_WorkClaimWorkersCompensationDataCallExtract.ClaimLossDate = EXP_Metadata.claim_loss_date AND LKP_WorkClaimWorkersCompensationDataCallExtract.RunDate = EXP_Metadata.o_RunDateYear\n),\nRTRTRANS_INSERT AS (SELECT * FROM RTRTRANS WHERE ISNULL(WorkClaimWorkersCompensationDataCallExtractId)),\nRTRTRANS_UPDATE AS (SELECT * FROM RTRTRANS WHERE NOT ISNULL(WorkClaimWorkersCompensationDataCallExtractId)),\nUPD_WorkClaimWorkersCompensationDataCallExtract_UPDATE AS (\n\tSELECT\n\tWorkClaimWorkersCompensationDataCallExtractId AS WorkClaimWorkersCompensationDataCallExtractId3, \n\tpol_key AS pol_key3, \n\tpol_eff_date AS pol_eff_date3, \n\tclaim_loss_date AS claim_loss_date3, \n\tclaim_occurrence_key AS claim_occurrence_key3, \n\tStrategicProfitCenterAbbreviation AS StrategicProfitCenterAbbreviation3, \n\tInsuranceSegmentDescription AS InsuranceSegmentDescription3, \n\tPolicyOfferingDescription AS PolicyOfferingDescription3, \n\trisk_state_prov_code AS risk_state_prov_code3, \n\tTotalChangeInOutstandingAmount AS TotalChangeInOutstandingAmount3, \n\tTotalPaidToDate AS TotalPaidToDate3, \n\tOpenClaimCount AS OpenClaimCount3, \n\tClosedWithPayClaimCount AS ClosedWithPayClaimCount3, \n\tRunDateYear AS RunDateYear3, \n\tCreatedDate AS CreatedDate3, \n\tAuditId AS AuditId3\n\tFROM RTRTRANS_UPDATE\n),\nWorkClaimWorkersCompensationDataCallExtract_UPDATE AS (\n\tMERGE INTO WorkClaimWorkersCompensationDataCallExtract AS T\n\tUSING UPD_WorkClaimWorkersCompensationDataCallExtract_UPDATE AS S\n\tON T.WorkClaimWorkersCompensationDataCallExtractId = S.WorkClaimWorkersCompensationDataCallExtractId3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId3, T.CreatedDate = S.CreatedDate3, T.RunDate = S.RunDateYear3, T.StrategicProfitCenterAbbreviation = S.StrategicProfitCenterAbbreviation3, T.InsuranceSegmentDescription = S.InsuranceSegmentDescription3, T.PolicyOfferingDescription = S.PolicyOfferingDescription3, T.PolicyKey = S.pol_key3, T.PolicyEffectiveDate = S.pol_eff_date3, T.ClaimOccurrenceKey = S.claim_occurrence_key3, T.StateCode = S.risk_state_prov_code3, T.ClaimLossDate = S.claim_loss_date3, T.IndemnityOpenClaimCount = S.OpenClaimCount3, T.IndemnityClosedWithPayClaimCount = S.ClosedWithPayClaimCount3, T.DirectLossPaidToDate = S.TotalPaidToDate3, T.OutstandingAmountToDate = S.TotalChangeInOutstandingAmount3\n),\nUPD_WorkClaimWorkersCompensationDataCallExtract_INSERT AS (\n\tSELECT\n\tWorkClaimWorkersCompensationDataCallExtractId AS WorkClaimWorkersCompensationDataCallExtractId1, \n\tpol_key AS pol_key1, \n\tpol_eff_date AS pol_eff_date1, \n\tclaim_loss_date AS claim_loss_date1, \n\tclaim_occurrence_key AS claim_occurrence_key1, \n\tStrategicProfitCenterAbbreviation AS StrategicProfitCenterAbbreviation1, \n\tInsuranceSegmentDescription AS InsuranceSegmentDescription1, \n\tPolicyOfferingDescription AS PolicyOfferingDescription1, \n\trisk_state_prov_code AS risk_state_prov_code1, \n\tTotalChangeInOutstandingAmount AS TotalChangeInOutstandingAmount1, \n\tTotalPaidToDate AS TotalPaidToDate1, \n\tOpenClaimCount AS OpenClaimCount1, \n\tClosedWithPayClaimCount AS ClosedWithPayClaimCount1, \n\tRunDateYear AS RunDateYear1, \n\tCreatedDate AS CreatedDate1, \n\tAuditId AS AuditId1\n\tFROM RTRTRANS_INSERT\n),\nWorkClaimWorkersCompensationDataCallExtract_INSERT AS (\n\tTRUNCATE TABLE WorkClaimWorkersCompensationDataCallExtract;\n\tINSERT INTO WorkClaimWorkersCompensationDataCallExtract\n\t(AuditId, CreatedDate, RunDate, StrategicProfitCenterAbbreviation, InsuranceSegmentDescription, PolicyOfferingDescription, PolicyKey, PolicyEffectiveDate, ClaimOccurrenceKey, StateCode, ClaimLossDate, IndemnityOpenClaimCount, IndemnityClosedWithPayClaimCount, DirectLossPaidToDate, OutstandingAmountToDate)\n\tSELECT \n\tAuditId1 AS AUDITID, \n\tCreatedDate1 AS CREATEDDATE, \n\tRunDateYear1 AS RUNDATE, \n\tStrategicProfitCenterAbbreviation1 AS STRATEGICPROFITCENTERABBREVIATION, \n\tInsuranceSegmentDescription1 AS INSURANCESEGMENTDESCRIPTION, \n\tPolicyOfferingDescription1 AS POLICYOFFERINGDESCRIPTION, \n\tpol_key1 AS POLICYKEY, \n\tpol_eff_date1 AS POLICYEFFECTIVEDATE, \n\tclaim_occurrence_key1 AS CLAIMOCCURRENCEKEY, \n\trisk_state_prov_code1 AS STATECODE, \n\tclaim_loss_date1 AS CLAIMLOSSDATE, \n\tOpenClaimCount1 AS INDEMNITYOPENCLAIMCOUNT, \n\tClosedWithPayClaimCount1 AS INDEMNITYCLOSEDWITHPAYCLAIMCOUNT, \n\tTotalPaidToDate1 AS DIRECTLOSSPAIDTODATE, \n\tTotalChangeInOutstandingAmount1 AS OUTSTANDINGAMOUNTTODATE\n\tFROM UPD_WorkClaimWorkersCompensationDataCallExtract_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NOOFYEAR": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "MONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "RUN_YEAR": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}