{
    "name": "s_m_CLM_DW_LOAD_sup_marital_status",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_sup_marital_status",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Client_UCT_Stage AS (\n\tSELECT client_uct_stage.cicu_uct_cd, client_uct_stage.cicu_uct_des \r\n\tFROM\r\n\t client_uct_stage\r\n\twhere CICU_VIEW_NM = 'MARITAL_STAT_COD_V'\n),\nEXP_Default_Values AS (\n\tSELECT\n\tcicu_uct_cd,\n\t-- *INF*: IIF(ISNULL(cicu_uct_cd), 'N/A', ltrim(rtrim(cicu_uct_cd)))\n\tIFF(cicu_uct_cd IS NULL, 'N/A', ltrim(rtrim(cicu_uct_cd))) AS cicu_uct_cd_out,\n\tcicu_uct_des,\n\t-- *INF*: IIF(ISNULL(cicu_uct_des), 'N/A', cicu_uct_des)\n\tIFF(cicu_uct_des IS NULL, 'N/A', cicu_uct_des) AS cicu_uct_des_out\n\tFROM SQ_Client_UCT_Stage\n),\nLKP_sup_marital_status AS (\n\tSELECT\n\tsup_marital_status_id,\n\tmarital_status_descript,\n\tmarital_status_code\n\tFROM (\n\t\tSELECT sup_marital_status.sup_marital_status_id as sup_marital_status_id, sup_marital_status.marital_status_descript as marital_status_descript, \r\n\t\tltrim(rtrim(sup_marital_status.marital_status_code)) as marital_status_code FROM sup_marital_status\r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY marital_status_code ORDER BY sup_marital_status_id) = 1\n),\nEXP_detect_changes AS (\n\tSELECT\n\tLKP_sup_marital_status.sup_marital_status_id AS lkp_sup_marital_status_id,\n\tLKP_sup_marital_status.marital_status_descript AS lkp_marital_status_descript,\n\tEXP_Default_Values.cicu_uct_cd_out AS cicu_uct_cd,\n\tEXP_Default_Values.cicu_uct_des_out AS cicu_uct_des,\n\t-- *INF*: IIF(ISNULL(lkp_sup_marital_status_id), 'NEW', IIF(LTRIM(RTRIM(lkp_marital_status_descript)) != (LTRIM(RTRIM(cicu_uct_des))), 'UPDATE', 'NOCHANGE'))\r\n\t-- \n\tIFF(\n\t    lkp_sup_marital_status_id IS NULL, 'NEW',\n\t    IFF(\n\t        LTRIM(RTRIM(lkp_marital_status_descript)) != (LTRIM(RTRIM(cicu_uct_des))), 'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_CHANGED_FLAG,\n\tv_CHANGED_FLAG AS CHANGED_FLAG,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(v_CHANGED_FLAG='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(\n\t    v_CHANGED_FLAG = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id\n\tFROM EXP_Default_Values\n\tLEFT JOIN LKP_sup_marital_status\n\tON LKP_sup_marital_status.marital_status_code = EXP_Default_Values.cicu_uct_cd_out\n),\nFIL_sup_marital_status_insert AS (\n\tSELECT\n\tcicu_uct_cd, \n\tcicu_uct_des, \n\tCHANGED_FLAG, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tsource_sys_id\n\tFROM EXP_detect_changes\n\tWHERE CHANGED_FLAG = 'NEW' or CHANGED_FLAG = 'UPDATE'\n),\nTGT_sup_marital_status_INSERT AS (\n\tINSERT INTO sup_marital_status\n\t(marital_status_code, marital_status_descript, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tcicu_uct_cd AS MARITAL_STATUS_CODE, \n\tcicu_uct_des AS MARITAL_STATUS_DESCRIPT, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM FIL_sup_marital_status_insert\n),\nSQ_sup_marital_status AS (\n\tSELECT a.sup_marital_status_id,\r\n\ta.marital_status_code, \r\n\ta.eff_from_date,\r\n\ta.eff_to_date \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_marital_status a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_marital_status b\r\n\t\t\tWHERE source_sys_id= '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.marital_status_code = b.marital_status_code\r\n\t\t\tGROUP BY marital_status_code\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY marital_status_code, eff_from_date  DESC\n),\nEXP_lag_eff_from_date AS (\n\tSELECT\n\tsup_marital_status_id,\n\tmarital_status_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tmarital_status_code= v_Prev_row_occuptn_code, ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\r\n\t-- \t\n\tDECODE(\n\t    TRUE,\n\t    marital_status_code = v_Prev_row_occuptn_code, DATEADD(SECOND,- 1,v_prev_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tmarital_status_code AS v_Prev_row_occuptn_code,\n\teff_from_date AS v_prev_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_sup_marital_status\n),\nFIL_First_rown_inAKGroup AS (\n\tSELECT\n\tsup_marital_status_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_lag_eff_from_date\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_sup_workers_comp_wage_period AS (\n\tSELECT\n\tsup_marital_status_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_First_rown_inAKGroup\n),\nTGT_sup_marital_status_UPDATE AS (\n\tMERGE INTO sup_marital_status AS T\n\tUSING UPD_sup_workers_comp_wage_period AS S\n\tON T.sup_marital_status_id = S.sup_marital_status_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}