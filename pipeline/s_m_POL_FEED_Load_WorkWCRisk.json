{
    "name": "s_m_POL_FEED_Load_WorkWCRisk",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WorkWCRisk",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_WC_Risk AS (\n\tselect \r\n\tDT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tDWR.WC_RiskId,\r\n\tDWR.Exposure,\r\n\tDWR.NCCIDescription,\r\n\tDWR.ExposureBasis,\r\n\tDWR.ExposureEstimated,\r\n\tDWR.ExposureAudited,\r\n\tDWR.Description,\r\n\tDWR.WC_LocationId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy DP with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton DP.SessionId=DL.SessionId\r\n\tand DP.PolicyId=DL.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DP.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DS.SessionId=DT.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_Risk DWR with(nolock)\r\n\ton DL.LineId=DWR.LineId\r\n\tand DL.SessionId=DWR.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_WC_Risk WWR with(nolock)\r\n\ton DWR.WC_RiskId=WWR.WC_RiskId\r\n\tand DWR.SessionId=WWR.SessionId\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_RiskCoverageTerm DWRCT with(nolock)\r\n\ton DWR.WC_RiskId=DWRCT.WC_RiskId\r\n\tand DWR.SessionId=DWRCT.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_RiskDefault DWRD with(nolock)\r\n\ton DWR.WC_RiskId=DWRD.WC_RiskId\r\n\tand DWR.SessionId=DWRD.SessionId\r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DS.Purpose='Onset'\r\n\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand DT.State='Committed'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tWC_RiskId,\n\tExposure,\n\tNCCIDescription,\n\tExposureBasis,\n\tExposureEstimated,\n\tExposureAudited,\n\tDescription,\n\tWC_LocationId\n\tFROM SQ_DC_WC_Risk\n),\nLKP_LatestSession AS (\n\tSELECT\n\tSessionId,\n\tPurpose,\n\tHistoryID\n\tFROM (\n\t\tSelect distinct DT.HistoryID AS HistoryID,\r\n\t\tDS.Purpose AS Purpose,\r\n\t\tMax(DS.Sessionid) AS Sessionid\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\t\ton DT.Sessionid=DS.Sessionid\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\t\ton DT.Sessionid=DL.Sessionid\r\n\t\twhere DL.Type='WorkersCompensation'\r\n\t\tand DS.Purpose='Onset'\r\n\t\tand DT.State='Committed'\r\n\t\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\t\tgroup by DT.HistoryID,DS.Purpose\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,Purpose,HistoryID ORDER BY SessionId) = 1\n),\nLKP_WorkWCTrackHistory AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditid,\n\tHistoryID,\n\tPurpose\n\tFROM (\n\t\tSELECT \r\n\t\tWorkWCTrackHistory.WCTrackHistoryID as WCTrackHistoryID, \r\n\t\tWorkWCTrackHistory.Auditid as Auditid, \r\n\t\tWorkWCTrackHistory.HistoryID as HistoryID, \r\n\t\tWorkWCTrackHistory.Purpose as Purpose \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory\r\n\t\torder by WorkWCTrackHistory.HistoryID,WorkWCTrackHistory.Purpose,WorkWCTrackHistory.Auditid ASC\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY HistoryID,Purpose ORDER BY WCTrackHistoryID) = 1\n),\nEXP_RecordFlagging AS (\n\tSELECT\n\tLKP_WorkWCTrackHistory.WCTrackHistoryID AS lkp_WCTrackHistoryID,\n\tLKP_WorkWCTrackHistory.Auditid AS lkp_Auditid,\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\t-- *INF*: IIF(lkp_Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and (NOT ISNULL(lkp_SessionId)),'1','0')\n\tIFF(lkp_Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and (lkp_SessionId IS NOT NULL), '1', '0') AS FilterFlag,\n\tEXP_SRCDataCollect.WC_RiskId,\n\tEXP_SRCDataCollect.Exposure,\n\tEXP_SRCDataCollect.NCCIDescription,\n\tEXP_SRCDataCollect.ExposureBasis,\n\tEXP_SRCDataCollect.ExposureEstimated,\n\tEXP_SRCDataCollect.ExposureAudited,\n\tEXP_SRCDataCollect.Description,\n\tEXP_SRCDataCollect.WC_LocationId,\n\tLKP_LatestSession.SessionId AS lkp_SessionId\n\tFROM EXP_SRCDataCollect\n\tLEFT JOIN LKP_LatestSession\n\tON LKP_LatestSession.SessionId = EXP_SRCDataCollect.SessionId AND LKP_LatestSession.Purpose = EXP_SRCDataCollect.Purpose AND LKP_LatestSession.HistoryID = EXP_SRCDataCollect.HistoryID\n\tLEFT JOIN LKP_WorkWCTrackHistory\n\tON LKP_WorkWCTrackHistory.HistoryID = EXP_SRCDataCollect.HistoryID AND LKP_WorkWCTrackHistory.Purpose = EXP_SRCDataCollect.Purpose\n),\nFIL_ExcludeSubmittedRecords AS (\n\tSELECT\n\tlkp_WCTrackHistoryID AS WCTrackHistoryID, \n\tExtractDate, \n\tAuditid, \n\tFilterFlag, \n\tWC_RiskId, \n\tExposure, \n\tNCCIDescription, \n\tExposureBasis, \n\tExposureEstimated, \n\tExposureAudited, \n\tDescription, \n\tWC_LocationId\n\tFROM EXP_RecordFlagging\n\tWHERE FilterFlag='1'\n),\nWorkWCRisk AS (\n\tTRUNCATE TABLE WorkWCRisk;\n\tINSERT INTO WorkWCRisk\n\t(Auditid, ExtractDate, WCTrackHistoryID, WC_RiskId, Exposure, ExposureAudited, ExposureBasis, ExposureEstimated, Description, WC_LocationId, NCCIDescription)\n\tSELECT \n\tAUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tWC_RISKID, \n\tEXPOSURE, \n\tEXPOSUREAUDITED, \n\tEXPOSUREBASIS, \n\tEXPOSUREESTIMATED, \n\tDESCRIPTION, \n\tWC_LOCATIONID, \n\tNCCIDESCRIPTION\n\tFROM FIL_ExcludeSubmittedRecords\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}