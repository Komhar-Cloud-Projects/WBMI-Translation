{
    "name": "m_POL_DW_LOAD_Form",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_Form",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_GTAMTL500AStage AS (\n\tSELECT\n\t\tGTAMTL500AStageId,\n\t\tFormNumber,\n\t\tFormDate,\n\t\tFormVersionID,\n\t\tFormExtensionNumber,\n\t\tFormLanguageIndicator,\n\t\tFormDescriptionDate,\n\t\tFormExpirationDate,\n\t\tFormDescription,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM GTAMTL500AStage\n\tWHERE LEN(LTRIM(RTRIM(GTAMTL500AStage.FormDate)))=4\r\n\tOR ISNUMERIC(LTRIM(RTRIM(GTAMTL500AStage.FormDate)))=0\r\n\tOR (LEN(LTRIM(RTRIM(GTAMTL500AStage.FormDate)))<4 AND ISNUMERIC(LTRIM(RTRIM(GTAMTL500AStage.FormDate)))=1\r\n\tAND NOT EXISTS(\r\n\tSELECT 1 FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.GTAMTL500AStage T\r\n\tWHERE GTAMTL500AStage.FormNumber=T.FormNumber\r\n\tAND LTRIM(RTRIM(T.FormDate))>LTRIM(RTRIM(GTAMTL500AStage.FormDate))\r\n\tAND LEN(LTRIM(RTRIM(T.FormDate)))<4 AND ISNUMERIC(LTRIM(RTRIM(T.FormDate)))=1\r\n\t))\n),\nEXP_TL500AStage AS (\n\tSELECT\n\tFormNumber,\n\tFormDate,\n\tFormVersionID,\n\tFormExpirationDate,\n\tFormDescriptionDate,\n\tFormDescription,\n\t-- *INF*: IIF(FormDescriptionDate = '99999999',\r\n\t-- TO_DATE( '12/31/2100','mm/dd/yyyy'), \r\n\t--  IIF(IS_DATE(FormDescriptionDate , 'YYYYMMDD'), TO_DATE(FormDescriptionDate , 'YYYYMMDD' ), TO_DATE( '12/31/2100','mm/dd/yyyy')))\n\tIFF(FormDescriptionDate = '99999999', TO_DATE('12/31/2100', 'mm/dd/yyyy'), IFF(IS_DATE(FormDescriptionDate, 'YYYYMMDD'), TO_DATE(FormDescriptionDate, 'YYYYMMDD'), TO_DATE('12/31/2100', 'mm/dd/yyyy'))) AS v_FormDescriptionDate,\n\t-- *INF*: IIF(FormExpirationDate = '99999999', \r\n\t-- TO_DATE( '12/31/2100','mm/dd/yyyy'),\r\n\t--  IIF(IS_DATE(FormExpirationDate, 'YYYYMMDD'), TO_DATE(FormExpirationDate, 'YYYYMMDD' ), TO_DATE( '12/31/2100','mm/dd/yyyy')))\n\tIFF(FormExpirationDate = '99999999', TO_DATE('12/31/2100', 'mm/dd/yyyy'), IFF(IS_DATE(FormExpirationDate, 'YYYYMMDD'), TO_DATE(FormExpirationDate, 'YYYYMMDD'), TO_DATE('12/31/2100', 'mm/dd/yyyy'))) AS v_FormExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tsysdate AS o_CreatedDate,\n\tsysdate AS o_ModifiedDate,\n\t-- *INF*: LTRIM(RTRIM(FormNumber)) || LTRIM(RTRIM(FormVersionID))\n\tLTRIM(RTRIM(FormNumber)) || LTRIM(RTRIM(FormVersionID)) AS o_FormNumber,\n\t'99' AS o_StateProvinceCode,\n\t'N/A' AS o_InsuranceLineCode,\n\t-- *INF*: IIF(IS_DATE(FormDate, 'MMRR'),TO_DATE(FormDate, 'MMRR'), TO_DATE('01011800', 'MMDDYYYY'))\n\tIFF(IS_DATE(FormDate, 'MMRR'), TO_DATE(FormDate, 'MMRR'), TO_DATE('01011800', 'MMDDYYYY')) AS o_FormEditionDate,\n\t-- *INF*: TO_DATE('01-01-1800', 'MM-DD-YYYY')\n\tTO_DATE('01-01-1800', 'MM-DD-YYYY') AS o_FormEffectiveDate,\n\t-- *INF*: IIF(SUBSTR(FormNumber, 1, 2) = 'WC', v_FormExpirationDate, v_FormDescriptionDate)\n\tIFF(SUBSTR(FormNumber, 1, 2) = 'WC', v_FormExpirationDate, v_FormDescriptionDate) AS o_FormExpirationDate,\n\t-- *INF*: IIF(IS_NUMBER(SUBSTR(RTRIM(FormDescription), -3, 2)) AND TO_INTEGER(SUBSTR(RTRIM(FormDescription), -3, 2)) > 12, \r\n\t-- SUBSTR(RTRIM(FormDescription), -6, 2) || SUBSTR(RTRIM(FormDescription), -3, 2),\r\n\t-- SUBSTR(RTRIM(FormDescription), -3, 2) || SUBSTR(RTRIM(FormDescription), -6, 2) )\n\tIFF(IS_NUMBER(SUBSTR(RTRIM(FormDescription), - 3, 2)) AND TO_INTEGER(SUBSTR(RTRIM(FormDescription), - 3, 2)) > 12, SUBSTR(RTRIM(FormDescription), - 6, 2) || SUBSTR(RTRIM(FormDescription), - 3, 2), SUBSTR(RTRIM(FormDescription), - 3, 2) || SUBSTR(RTRIM(FormDescription), - 6, 2)) AS v_Sort,\n\t-- *INF*: IIF(IS_NUMBER(v_Sort),0,1)\n\tIFF(IS_NUMBER(v_Sort), 0, 1) AS o_SortFlag,\n\t-- *INF*: LENGTH(FormDescription)\n\tLENGTH(FormDescription) AS o_LenOfFormName\n\tFROM SQ_GTAMTL500AStage\n),\nSRT_TL500A AS (\n\tSELECT\n\tFormDescription, \n\to_SourceSystemId AS SourceSystemId, \n\to_AuditID AS AuditID, \n\to_CreatedDate AS CreatedDate, \n\to_ModifiedDate AS ModifiedDate, \n\to_FormNumber AS FormNumber, \n\to_StateProvinceCode AS StateProvinceCode, \n\to_InsuranceLineCode AS InsuranceLineCode, \n\to_FormEditionDate AS FormEditionDate, \n\to_FormEffectiveDate AS FormEffectiveDate, \n\to_FormExpirationDate AS FormExpirationDate, \n\to_SortFlag AS SortFlag, \n\to_LenOfFormName AS LenOfFormName\n\tFROM EXP_TL500AStage\n\tORDER BY FormNumber ASC, StateProvinceCode ASC, InsuranceLineCode ASC, FormEditionDate ASC, FormEffectiveDate ASC, FormExpirationDate ASC, SortFlag ASC, LenOfFormName DESC\n),\nAGG_TL500A AS (\n\tSELECT\n\tFormDescription AS i_FormDescription, \n\tSourceSystemId, \n\tAuditID, \n\tCreatedDate, \n\tModifiedDate, \n\tFIRST(i_FormDescription) AS o_FormName, \n\tFormNumber, \n\tStateProvinceCode, \n\tInsuranceLineCode, \n\tFormEditionDate, \n\tFormEffectiveDate, \n\tFormExpirationDate\n\tFROM SRT_TL500A\n\tGROUP BY FormNumber, StateProvinceCode, InsuranceLineCode, FormEditionDate, FormEffectiveDate, FormExpirationDate\n),\nSQ_GTAMWBSBFMStage AS (\n\tSELECT\n\t\tGTAMWBSBFMStageId,\n\t\tPolicyCompanyNumber,\n\t\tLineOfBusiness,\n\t\tInsuranceLine,\n\t\tFormNumber,\n\t\tStateCode,\n\t\tExpirationDate,\n\t\tNameOfForm,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM GTAMWBSBFMStage\n),\nEXP_WBSBFM AS (\n\tSELECT\n\tFormNumber,\n\tStateCode,\n\tInsuranceLine,\n\tNameOfForm,\n\tExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tsysdate AS o_CreatedDate,\n\tsysdate AS o_ModifiedDate,\n\t-- *INF*: TO_DATE('01-01-1800', 'MM-DD-YYYY')\n\tTO_DATE('01-01-1800', 'MM-DD-YYYY') AS o_FormEditionDate,\n\t-- *INF*: TO_DATE('01-01-1800', 'MM-DD-YYYY')\n\tTO_DATE('01-01-1800', 'MM-DD-YYYY') AS o_FormEffectiveDate,\n\tExpirationDate AS o_FormExpirationDate\n\tFROM SQ_GTAMWBSBFMStage\n),\nUnionAll AS (\n\tSELECT SourceSystemId, AuditID, CreatedDate, ModifiedDate, StateProvinceCode, InsuranceLineCode, o_FormName AS FormName, FormNumber, FormEditionDate, FormEffectiveDate, FormExpirationDate\n\tFROM AGG_TL500A\n\tUNION\n\tSELECT o_SourceSystemId AS SourceSystemId, o_AuditID AS AuditID, o_CreatedDate AS CreatedDate, o_ModifiedDate AS ModifiedDate, StateCode AS StateProvinceCode, InsuranceLine AS InsuranceLineCode, NameOfForm AS FormName, FormNumber, o_FormEditionDate AS FormEditionDate, o_FormEffectiveDate AS FormEffectiveDate, o_FormExpirationDate AS FormExpirationDate\n\tFROM EXP_WBSBFM\n),\nAGG_Form AS (\n\tSELECT\n\tSourceSystemId, \n\tAuditID, \n\tCreatedDate, \n\tModifiedDate, \n\tStateProvinceCode, \n\tInsuranceLineCode, \n\tFormName, \n\tFormNumber, \n\tFormEditionDate, \n\tFormEffectiveDate, \n\tFormExpirationDate\n\tFROM UnionAll\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateProvinceCode, InsuranceLineCode, FormName, FormNumber, FormEditionDate, FormEffectiveDate, FormExpirationDate ORDER BY NULL) = 1\n),\nLKP_Form AS (\n\tSELECT\n\tFormId,\n\tSourceSystemID,\n\tAuditID,\n\tCreatedDate,\n\tModifiedDate,\n\tStateProvinceCode,\n\tInsuranceLineCode,\n\tFormName,\n\tFormNumber,\n\tFormEditionDate,\n\tFormEffectiveDate,\n\tFormExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tFormId,\n\t\t\tSourceSystemID,\n\t\t\tAuditID,\n\t\t\tCreatedDate,\n\t\t\tModifiedDate,\n\t\t\tStateProvinceCode,\n\t\t\tInsuranceLineCode,\n\t\t\tFormName,\n\t\t\tFormNumber,\n\t\t\tFormEditionDate,\n\t\t\tFormEffectiveDate,\n\t\t\tFormExpirationDate\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Form\n\t\tWHERE SourceSystemID='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateProvinceCode,InsuranceLineCode,FormNumber,FormEditionDate,FormEffectiveDate,FormExpirationDate ORDER BY FormId) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tAGG_Form.SourceSystemId,\n\tAGG_Form.AuditID,\n\tAGG_Form.CreatedDate,\n\tAGG_Form.ModifiedDate,\n\tAGG_Form.StateProvinceCode,\n\tAGG_Form.InsuranceLineCode,\n\tAGG_Form.FormName,\n\tAGG_Form.FormNumber,\n\tAGG_Form.FormEditionDate,\n\tAGG_Form.FormEffectiveDate,\n\tAGG_Form.FormExpirationDate,\n\tLKP_Form.FormId,\n\tLKP_Form.StateProvinceCode AS lkp_StateProvinceCode,\n\tLKP_Form.InsuranceLineCode AS lkp_InsuranceLineCode,\n\tLKP_Form.FormName AS lkp_FormName,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(FormId), 'NEW',\r\n\t-- lkp_StateProvinceCode <> StateProvinceCode\r\n\t-- OR lkp_InsuranceLineCode <> InsuranceLineCode\r\n\t-- OR lkp_FormName <> FormName, 'UPDATE',\r\n\t-- 'NO CHANGE'\r\n\t-- )\n\tDECODE(TRUE,\n\tFormId IS NULL, 'NEW',\n\tlkp_StateProvinceCode <> StateProvinceCode OR lkp_InsuranceLineCode <> InsuranceLineCode OR lkp_FormName <> FormName, 'UPDATE',\n\t'NO CHANGE') AS o_changeflag\n\tFROM AGG_Form\n\tLEFT JOIN LKP_Form\n\tON LKP_Form.StateProvinceCode = AGG_Form.StateProvinceCode AND LKP_Form.InsuranceLineCode = AGG_Form.InsuranceLineCode AND LKP_Form.FormNumber = AGG_Form.FormNumber AND LKP_Form.FormEditionDate = AGG_Form.FormEditionDate AND LKP_Form.FormEffectiveDate = AGG_Form.FormEffectiveDate AND LKP_Form.FormExpirationDate = AGG_Form.FormExpirationDate\n),\nRTR_Form AS (\n\tSELECT\n\tFormId,\n\tSourceSystemId,\n\tAuditID,\n\tCreatedDate,\n\tModifiedDate,\n\tStateProvinceCode,\n\tInsuranceLineCode,\n\tFormName,\n\tFormNumber,\n\tFormEditionDate,\n\tFormEffectiveDate,\n\tFormExpirationDate,\n\to_changeflag AS changeflag\n\tFROM EXP_DetectChanges\n),\nRTR_Form_Insert AS (SELECT * FROM RTR_Form WHERE changeflag = 'NEW'),\nRTR_Form_Update AS (SELECT * FROM RTR_Form WHERE changeflag = 'UPDATE'),\nUpdate AS (\n\tSELECT\n\tFormId, \n\tSourceSystemId, \n\tAuditID, \n\tCreatedDate, \n\tModifiedDate, \n\tStateProvinceCode, \n\tInsuranceLineCode, \n\tFormName, \n\tFormNumber, \n\tFormEditionDate, \n\tFormEffectiveDate, \n\tFormExpirationDate\n\tFROM RTR_Form_Update\n),\nForm_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.Form AS T\n\tUSING Update AS S\n\tON T.FormId = S.FormId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.FormName = S.FormName\n),\nForm_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.Form\n\t(SourceSystemID, AuditID, CreatedDate, ModifiedDate, FormName, FormNumber, FormEditionDate, FormEffectiveDate, FormExpirationDate)\n\tSELECT \n\tSourceSystemId AS SOURCESYSTEMID, \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tFORMNAME, \n\tFORMNUMBER, \n\tFORMEDITIONDATE, \n\tFORMEFFECTIVEDATE, \n\tFORMEXPIRATIONDATE\n\tFROM RTR_Form_Insert\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604236"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}