{
    "name": "s_m_POL_DW_LOAD_CoverageDetailGeneralLiability",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailGeneralLiability",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupClassificationGeneralLiability AS (\n\tSELECT\n\tlkp_result,\n\tClassCode,\n\tSublineCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT ClassCode as ClassCode,\r\n\t\tSublineCode as SublineCode,\r\n\t\tRatingStateCode as RatingStateCode,\r\n\t\tISOGeneralLiabilityClassSummary+'@1'\r\n\t\t       +ISOGeneralLiabilityClassGroupCode+'@2'\r\n\t\t\t     as lkp_result\r\n\t\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationGeneralLiability\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,SublineCode,RatingStateCode ORDER BY lkp_result) = 1\n),\nSQ_PMS AS (\n\tselect PT.PremiumTransactionID AS PremiumTransactionID\r\n\t,SC.StatisticalCoverageHashKey AS StatisticalCoverageHashKey\r\n\t,case when SC.Riskunitgroup='286' then SC.RiskUnit else SC.ClassCode end ClassCode\r\n\t,SC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,SC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\t,P.pol_sym AS pol_sym\r\n\t,P.pol_num AS pol_num\r\n\t,P.pol_mod AS pol_mod\r\n\t,SC.RiskUnitGroup AS RiskUnitGroup\r\n\t,PT.PremiumTransactionAKID AS PremiumTransactionAKID\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage SC\r\n\tON\r\n\tPT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID AND PT.SourceSystemID = 'PMS' AND SC.SourceSystemID = 'PMS' \r\n\t--AND SC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\tON\r\n\tSC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.SourceSystemID = 'PMS' --AND PC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy P\r\n\tON\r\n\tPC.PolicyAKID = P.pol_ak_id AND P.source_sys_id = 'PMS'\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation RL \r\n\ton RL.RiskLocationAKID = PC.RiskLocationAKID\r\n\tand RL.CurrentSnapshotFlag=1\r\n\tWHERE PT.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND PC.InsuranceLine ='GL' AND P.crrnt_snpsht_flag = 1\r\n\tAND exists (select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT where WPT.PremiumTransactionAKID=PT.PremiumTransactionAKID)\n),\nEXP_Metadata AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tStatisticalCoverageHashKey AS i_StatisticalCoverageHashKey,\n\tClassCode AS i_ClassCode,\n\tSublineCode AS i_SublineCode,\n\tStateCode AS i_RatingStateCode,\n\tOriginatingOrganizationCode AS i_OriginatingOrganizationCode,\n\tpol_sym AS i_pol_sym,\n\tpol_num AS i_pol_num,\n\tpol_mod AS i_pol_mod,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\t-- *INF*: RTRIM(LTRIM(i_ClassCode))\n\tRTRIM(LTRIM(i_ClassCode\n\t\t)\n\t) AS v_ClassCode,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionAKID,\n\t-- *INF*: RTRIM(LTRIM(i_StatisticalCoverageHashKey))\n\tRTRIM(LTRIM(i_StatisticalCoverageHashKey\n\t\t)\n\t) AS o_StatisticalCoverageHashKey,\n\t-- *INF*: IIF(IN(v_ClassCode,'22222','22250'),1,0)\n\tIFF(v_ClassCode IN ('22222','22250'),\n\t\t1,\n\t\t0\n\t) AS o_EmploymentPracticesLiabilityInsuranceRollOnIndicator,\n\t-- *INF*: RTRIM(LTRIM(i_pol_sym))\n\tRTRIM(LTRIM(i_pol_sym\n\t\t)\n\t) AS o_pol_sym,\n\t-- *INF*: RTRIM(LTRIM(i_pol_num))\n\tRTRIM(LTRIM(i_pol_num\n\t\t)\n\t) AS o_pol_num,\n\t-- *INF*: RTRIM(LTRIM(i_pol_mod))\n\tRTRIM(LTRIM(i_pol_mod\n\t\t)\n\t) AS o_pol_mod,\n\t-- *INF*: RTRIM(LTRIM(i_RiskUnitGroup))\n\tRTRIM(LTRIM(i_RiskUnitGroup\n\t\t)\n\t) AS o_RiskUnitGroup,\n\tv_ClassCode AS o_ClassCode,\n\t-- *INF*: RTRIM(LTRIM(i_SublineCode))\n\tRTRIM(LTRIM(i_SublineCode\n\t\t)\n\t) AS o_SublineCode,\n\t-- *INF*: RTRIM(LTRIM(i_RatingStateCode))\n\tRTRIM(LTRIM(i_RatingStateCode\n\t\t)\n\t) AS o_RatingStateCode,\n\t-- *INF*: LTRIM(RTRIM(i_OriginatingOrganizationCode))\n\tLTRIM(RTRIM(i_OriginatingOrganizationCode\n\t\t)\n\t) AS o_OriginatingOrganizationCode\n\tFROM SQ_PMS\n),\nLKP_Pif43LXGLStage AS (\n\tSELECT\n\tPmdlxg1YearRetro,\n\tPmdlxg1MonthRetro,\n\tPmdlxg1DayRetro,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule\n\tFROM (\n\t\tSELECT \n\t\t\tPmdlxg1YearRetro,\n\t\t\tPmdlxg1MonthRetro,\n\t\t\tPmdlxg1DayRetro,\n\t\t\tPifSymbol,\n\t\t\tPifPolicyNumber,\n\t\t\tPifModule\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Pif43LXGLStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule ORDER BY Pmdlxg1YearRetro) = 1\n),\nLKP_Pif_4514 AS (\n\tSELECT\n\tPremiumTransactionAKId,\n\tsar_code_7,\n\to_PremiumTransactionAKID\n\tFROM (\n\t\tselect PT.PremiumTransactionAKId as PremiumTransactionAKId , STG.sar_code_7  as sar_code_7\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction PT\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_4514_stage STG on STG.pif_4514_stage_id=PT.PremiumTransactionStageId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKId ORDER BY PremiumTransactionAKId) = 1\n),\nLKP_pifDEPT1553Stage_EPLI AS (\n\tSELECT\n\tRetroDate,\n\ti_pol_sym,\n\ti_pol_num,\n\ti_pol_mod,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule\n\tFROM (\n\t\tselect PifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tltrim(rtrim(\r\n\t\tcase \r\n\t\t\t when charindex('ITEM  5.  PENDING OR PRIOR LITIGATION DATE:',DECLPTText1701)>0  then SUBSTRING(DECLPTText1701,charindex('ITEM  5.  PENDING OR PRIOR LITIGATION DATE:',DECLPTText1701)+43,len(DECLPTText1701)-43)\r\n\t\t\t when CHARINDEX('',DECLPTText1701) > 0 AND charindex('RETRO DATE:',DECLPTText1701)>0 then SUBSTRING(SourceValue,CHARINDEX('@',DECLPTText1701)+1, CHARINDEX('',DECLPTText1701)-CHARINDEX('@',DECLPTText1701)-1)\r\n\t\t     when CHARINDEX('',SourceValue) > 0 AND charindex('SHOWN HERE',SourceValue )>0 then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue))+1, CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue)))-CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue))-1)\r\n\t\t\t when CHARINDEX('^',DECLPTText1701) > 0 AND charindex('RETRO DATE:',DECLPTText1701)>0 then SUBSTRING(SourceValue,CHARINDEX('@',DECLPTText1701)+1, CHARINDEX('^',DECLPTText1701)-CHARINDEX('@',DECLPTText1701)-1)\r\n\t\t     when CHARINDEX('^',SourceValue)>0 AND  charindex('SHOWN HERE',SourceValue )>0 then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue))+1, CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue)))-CHARINDEX('@',SourceValue,charindex('SHOWN HERE',SourceValue))-1)\r\n\t\t\t else 'N/A' end))\t as RetroDate\r\n\t\tfrom (\r\n\t\tselect PifSymbol,\r\n\t\tPifPolicyNumber,\r\n\t\tPifModule,\r\n\t\tltrim(rtrim(DECLPTText1701))+' '+ltrim(rtrim(DECLPTText71791))+ltrim(rtrim(DECLPTText1702))+' '+ltrim(rtrim(DECLPTText71792)) as SourceValue,\r\n\t\tltrim(rtrim(DECLPTText1701)) as DECLPTText1701\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PifDept1553Stage dept1553\r\n\t\twhere DECLPTFormNumber in ('CPEPL01','CPEPL02','CPEPL03','CPEPL04','CPNFP02','NSDOA01','CPAPO01','CPAPO02','CPAPY01','CPFEA01','CPMYC01','CPNFE01','CPNFP01','ENSEF01','GLEXT01','GLEXT02')\r\n\t\tand not exists (\r\n\t\tselect 1\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PifDept1553Stage\r\n\t\twhere dept1553.PifSymbol=PifDept1553Stage.PifSymbol\r\n\t\tand dept1553.PifPolicyNumber=PifDept1553Stage.PifPolicyNumber\r\n\t\tand dept1553.PifModule=PifDept1553Stage.PifModule\r\n\t\tand dept1553.DECLPTSeq0098=PifDept1553Stage.DECLPTSeq0098\r\n\t\tand dept1553.DECLPTSeqSameForm=PifDept1553Stage.DECLPTSeqSameForm\r\n\t\tand dept1553.PifDept1553StageId<PifDept1553Stage.PifDept1553StageId)\r\n\t\t\r\n\t\tunion all\r\n\t\tselect 'N/A','N/A','N/A','N/A','N/A'\r\n\t\t)comment\r\n\t\tWHERE (charindex('SHOWN HERE',SourceValue )>0\r\n\t\tOR charindex('ITEM  5.  PENDING OR PRIOR LITIGATION DATE:',DECLPTText1701)>0\r\n\t\tOR charindex('RETRO DATE:',DECLPTText1701)>0)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule ORDER BY RetroDate) = 1\n),\nEXP_CoverageDetailGeneralLiabiliity AS (\n\tSELECT\n\tEXP_Metadata.o_PremiumTransactionID AS i_PremiumTransactionID,\n\tEXP_Metadata.o_StatisticalCoverageHashKey AS i_StatisticalCoverageHashKey,\n\tLKP_Pif43LXGLStage.Pmdlxg1YearRetro AS i_Pmdlxg1YearRetro,\n\tLKP_Pif43LXGLStage.Pmdlxg1MonthRetro AS i_Pmdlxg1MonthRetro,\n\tLKP_Pif43LXGLStage.Pmdlxg1DayRetro AS i_Pmdlxg1DayRetro,\n\tEXP_Metadata.o_EmploymentPracticesLiabilityInsuranceRollOnIndicator AS i_EmploymentPracticesLiabilityInsuranceRollOnIndicator,\n\tLKP_pifDEPT1553Stage_EPLI.RetroDate AS i_RetroDate_EPLI,\n\tEXP_Metadata.o_RiskUnitGroup AS i_RiskUnitGroup,\n\tLKP_Pif_4514.sar_code_7 AS i_sar_code_7,\n\tEXP_Metadata.o_ClassCode AS i_ClassCode,\n\tEXP_Metadata.o_SublineCode AS i_SublineCode,\n\tEXP_Metadata.o_RatingStateCode AS i_RatingStateCode,\n\tEXP_Metadata.o_OriginatingOrganizationCode AS i_OriginatingOrganizationCode,\n\t-- *INF*: DECODE(true,\r\n\t-- NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode)),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode),\r\n\t-- NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99')),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99'),\r\n\t-- 'N/A')\n\tDECODE(true,\n\t\tLKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result,\n\t\tLKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result,\n\t\t'N/A'\n\t) AS v_lkp_result,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_Pmdlxg1YearRetro),1800,\r\n\t-- i_Pmdlxg1YearRetro=0,1800,\r\n\t-- TO_INTEGER(i_Pmdlxg1YearRetro)\r\n\t-- )\r\n\t-- --IIF(ISNULL(i_Pmdlxg1YearRetro),1800,TO_INTEGER(i_Pmdlxg1YearRetro))\n\tDECODE(TRUE,\n\t\ti_Pmdlxg1YearRetro IS NULL, 1800,\n\t\ti_Pmdlxg1YearRetro = 0, 1800,\n\t\tCAST(i_Pmdlxg1YearRetro AS INTEGER)\n\t) AS v_Pmdlxg1YearRetro,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_Pmdlxg1MonthRetro),1,\r\n\t-- i_Pmdlxg1MonthRetro=0,1,\r\n\t-- TO_INTEGER(i_Pmdlxg1MonthRetro)\r\n\t-- )\r\n\t-- \r\n\t-- \r\n\t-- --IIF(ISNULL(i_Pmdlxg1MonthRetro),1,TO_INTEGER(i_Pmdlxg1MonthRetro))\n\tDECODE(TRUE,\n\t\ti_Pmdlxg1MonthRetro IS NULL, 1,\n\t\ti_Pmdlxg1MonthRetro = 0, 1,\n\t\tCAST(i_Pmdlxg1MonthRetro AS INTEGER)\n\t) AS v_Pmdlxg1MonthRetro,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_Pmdlxg1DayRetro),1,\r\n\t-- i_Pmdlxg1DayRetro=0,1,\r\n\t-- TO_INTEGER(i_Pmdlxg1DayRetro)\r\n\t-- )\r\n\t-- \r\n\t-- --IIF(ISNULL(i_Pmdlxg1DayRetro),1,TO_INTEGER(i_Pmdlxg1DayRetro))\n\tDECODE(TRUE,\n\t\ti_Pmdlxg1DayRetro IS NULL, 1,\n\t\ti_Pmdlxg1DayRetro = 0, 1,\n\t\tCAST(i_Pmdlxg1DayRetro AS INTEGER)\n\t) AS v_Pmdlxg1DayRetro,\n\t-- *INF*: REPLACESTR(0,LTRIM(RTRIM(i_RetroDate_EPLI)),' ','')\n\tREGEXP_REPLACE(LTRIM(RTRIM(i_RetroDate_EPLI\n\t\t)\n\t),' ','','i') AS v_RetroDate_EPLI_Trim,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- INSTR(v_RetroDate_EPLI_Trim,'/')>0 AND INSTR(v_RetroDate_EPLI_Trim,'-')=0,'/',\r\n\t-- INSTR(v_RetroDate_EPLI_Trim,'/')=0 AND INSTR(v_RetroDate_EPLI_Trim,'-')>0,'-',\r\n\t-- NULL)\n\tDECODE(TRUE,\n\t\tREGEXP_INSTR(v_RetroDate_EPLI_Trim, '/'\n\t\t) > 0 \n\t\tAND REGEXP_INSTR(v_RetroDate_EPLI_Trim, '-'\n\t\t) = 0, '/',\n\t\tREGEXP_INSTR(v_RetroDate_EPLI_Trim, '/'\n\t\t) = 0 \n\t\tAND REGEXP_INSTR(v_RetroDate_EPLI_Trim, '-'\n\t\t) > 0, '-',\n\t\tNULL\n\t) AS v_DateDelimiter,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(v_DateDelimiter),v_RetroDate_EPLI_Trim,\r\n\t-- LPAD(SUBSTR(v_RetroDate_EPLI_Trim,1,INSTR(v_RetroDate_EPLI_Trim,v_DateDelimiter)-1),2,'0')\r\n\t--  || LPAD(SUBSTR(v_RetroDate_EPLI_Trim,INSTR(v_RetroDate_EPLI_Trim,v_DateDelimiter)+1,INSTR(v_RetroDate_EPLI_Trim,v_DateDelimiter,1,2)-INSTR(v_RetroDate_EPLI_Trim,v_DateDelimiter)-1),2,'0')\r\n\t--  || SUBSTR(v_RetroDate_EPLI_Trim,INSTR(v_RetroDate_EPLI_Trim,v_DateDelimiter,1,2)+1)\r\n\t-- )\n\tIFF(v_DateDelimiter IS NULL,\n\t\tv_RetroDate_EPLI_Trim,\n\t\tLPAD(SUBSTR(v_RetroDate_EPLI_Trim, 1, REGEXP_INSTR(v_RetroDate_EPLI_Trim, v_DateDelimiter\n\t\t\t\t) - 1\n\t\t\t), 2, '0'\n\t\t) || LPAD(SUBSTR(v_RetroDate_EPLI_Trim, REGEXP_INSTR(v_RetroDate_EPLI_Trim, v_DateDelimiter\n\t\t\t\t) + 1, REGEXP_INSTR(v_RetroDate_EPLI_Trim, v_DateDelimiter, 1, 2\n\t\t\t\t) - REGEXP_INSTR(v_RetroDate_EPLI_Trim, v_DateDelimiter\n\t\t\t\t) - 1\n\t\t\t), 2, '0'\n\t\t) || SUBSTR(v_RetroDate_EPLI_Trim, REGEXP_INSTR(v_RetroDate_EPLI_Trim, v_DateDelimiter, 1, 2\n\t\t\t) + 1\n\t\t)\n\t) AS v_RetroDate_EPLI_Cleasing,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IS_DATE(v_RetroDate_EPLI_Cleasing,'MMDDYYYY') AND LENGTH(v_RetroDate_EPLI_Cleasing)=8 and SUBSTR(v_RetroDate_EPLI_Cleasing,5,4)>'1753',TO_DATE(v_RetroDate_EPLI_Cleasing,'MMDDYYYY'),\r\n\t-- IS_DATE(v_RetroDate_EPLI_Cleasing,'MMDDRR') AND LENGTH(v_RetroDate_EPLI_Cleasing)=6,TO_DATE(v_RetroDate_EPLI_Cleasing,'MMDDRR'),\r\n\t-- IS_DATE(v_RetroDate_EPLI_Cleasing,'MONTHDD,YYYY') AND INSTR(v_RetroDate_EPLI_Cleasing,',')>0,TO_DATE(v_RetroDate_EPLI_Cleasing,'MONTHDD,YYYY'),\r\n\t-- IS_DATE(v_RetroDate_EPLI_Cleasing,'MONTHDDYYYY'),TO_DATE(v_RetroDate_EPLI_Cleasing,'MONTHDDYYYY'),\r\n\t-- TO_DATE('01011800','MMDDYYYY')\r\n\t-- )\n\tDECODE(TRUE,\n\t\tIS_DATE(v_RetroDate_EPLI_Cleasing, 'MMDDYYYY'\n\t\t) \n\t\tAND LENGTH(v_RetroDate_EPLI_Cleasing\n\t\t) = 8 \n\t\tAND SUBSTR(v_RetroDate_EPLI_Cleasing, 5, 4\n\t\t) > '1753', TO_DATE(v_RetroDate_EPLI_Cleasing, 'MMDDYYYY'\n\t\t),\n\t\tIS_DATE(v_RetroDate_EPLI_Cleasing, 'MMDDRR'\n\t\t) \n\t\tAND LENGTH(v_RetroDate_EPLI_Cleasing\n\t\t) = 6, TO_DATE(v_RetroDate_EPLI_Cleasing, 'MMDDRR'\n\t\t),\n\t\tIS_DATE(v_RetroDate_EPLI_Cleasing, 'MONTHDD,YYYY'\n\t\t) \n\t\tAND REGEXP_INSTR(v_RetroDate_EPLI_Cleasing, ','\n\t\t) > 0, TO_DATE(v_RetroDate_EPLI_Cleasing, 'MONTHDD,YYYY'\n\t\t),\n\t\tIS_DATE(v_RetroDate_EPLI_Cleasing, 'MONTHDDYYYY'\n\t\t), TO_DATE(v_RetroDate_EPLI_Cleasing, 'MONTHDDYYYY'\n\t\t),\n\t\tTO_DATE('01011800', 'MMDDYYYY'\n\t\t)\n\t) AS v_RetroDate_EPLI,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_code_7)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_code_7\n\t) AS v_sar_code_7,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\ti_StatisticalCoverageHashKey AS o_StatisticalCoverageHashKey,\n\t-- *INF*: IIF(IN(i_RiskUnitGroup,'366','901','286','287','903','902'),v_RetroDate_EPLI,\r\n\t-- MAKE_DATE_TIME(v_Pmdlxg1YearRetro,v_Pmdlxg1MonthRetro,v_Pmdlxg1DayRetro))\n\tIFF(i_RiskUnitGroup IN ('366','901','286','287','903','902'),\n\t\tv_RetroDate_EPLI,\n\t\tTIMESTAMP_FROM_PARTS(v_Pmdlxg1YearRetro,v_Pmdlxg1MonthRetro,v_Pmdlxg1DayRetro,00,00,00)\n\t) AS o_RetroactiveDate,\n\ti_EmploymentPracticesLiabilityInsuranceRollOnIndicator AS o_EmploymentPracticesLiabilityInsuranceRollOnIndicator,\n\t-- *INF*: IIF(v_sar_code_7 = 'N/A','N/A',SUBSTR(v_sar_code_7,1,1))\n\tIFF(v_sar_code_7 = 'N/A',\n\t\t'N/A',\n\t\tSUBSTR(v_sar_code_7, 1, 1\n\t\t)\n\t) AS o_LiabilityFormCode,\n\t-- *INF*: IIF(ISNULL(SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1)) OR LENGTH(SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1))=0 ,'N/A' , SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1))\n\tIFF(SUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) - 1\n\t\t) IS NULL \n\t\tOR LENGTH(SUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t\t) - 1\n\t\t\t)\n\t\t) = 0,\n\t\t'N/A',\n\t\tSUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) - 1\n\t\t)\n\t) AS o_ISOGeneralLiabilityClassSummary,\n\t-- *INF*: IIF(ISNULL(SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2))  \r\n\t-- OR LENGTH(SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2))=0\r\n\t-- ,'N/A'\r\n\t-- ,SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2))\n\tIFF(SUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) + 2, REGEXP_INSTR(v_lkp_result, '@2'\n\t\t\t) - REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) - 2\n\t\t) IS NULL \n\t\tOR LENGTH(SUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t\t) + 2, REGEXP_INSTR(v_lkp_result, '@2'\n\t\t\t\t) - REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t\t) - 2\n\t\t\t)\n\t\t) = 0,\n\t\t'N/A',\n\t\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) + 2, REGEXP_INSTR(v_lkp_result, '@2'\n\t\t\t) - REGEXP_INSTR(v_lkp_result, '@1'\n\t\t\t) - 2\n\t\t)\n\t) AS o_ISOGeneralLiabilityClassGroupCode\n\tFROM EXP_Metadata\n\tLEFT JOIN LKP_Pif43LXGLStage\n\tON LKP_Pif43LXGLStage.PifSymbol = EXP_Metadata.o_pol_sym AND LKP_Pif43LXGLStage.PifPolicyNumber = EXP_Metadata.o_pol_num AND LKP_Pif43LXGLStage.PifModule = EXP_Metadata.o_pol_mod\n\tLEFT JOIN LKP_Pif_4514\n\tON LKP_Pif_4514.PremiumTransactionAKId = EXP_Metadata.o_PremiumTransactionAKID\n\tLEFT JOIN LKP_pifDEPT1553Stage_EPLI\n\tON LKP_pifDEPT1553Stage_EPLI.PifSymbol = EXP_Metadata.o_pol_sym AND LKP_pifDEPT1553Stage_EPLI.PifPolicyNumber = EXP_Metadata.o_pol_num AND LKP_pifDEPT1553Stage_EPLI.PifModule = EXP_Metadata.o_pol_mod\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.RatingStateCode = i_RatingStateCode\n\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.RatingStateCode = '99'\n\n),\nLKP_CoverageDetailGeneralLiability AS (\n\tSELECT\n\tPremiumTransactionID,\n\tRetroactiveDate,\n\tLiabilityFormCode,\n\tISOGeneralLiabilityClassSummary,\n\tISOGeneralLiabilityClassGroupCode\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tRetroactiveDate,\n\t\t\tLiabilityFormCode,\n\t\t\tISOGeneralLiabilityClassSummary,\n\t\t\tISOGeneralLiabilityClassGroupCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailGeneralLiability\n\t\tWHERE SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand PremiumTransactionID  in (select pt.PremiumTransactionID from\r\n\t\tPremiumTransaction pt\r\n\t\tinner join WorkPremiumTransaction wpt\r\n\t\ton pt.PremiumTransactionAKID=wpt.PremiumTransactionAKId)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_CoverageDetailGeneralLiability.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailGeneralLiability.RetroactiveDate AS lkp_RetroactiveDate,\n\tLKP_CoverageDetailGeneralLiability.LiabilityFormCode AS lkp_LiabilityFormCode,\n\tLKP_CoverageDetailGeneralLiability.ISOGeneralLiabilityClassSummary AS lkp_ClassSummary,\n\tLKP_CoverageDetailGeneralLiability.ISOGeneralLiabilityClassGroupCode AS lkp_ClassGroupCode,\n\tEXP_CoverageDetailGeneralLiabiliity.o_PremiumTransactionID AS i_PremiumTransactionID,\n\tEXP_CoverageDetailGeneralLiabiliity.o_StatisticalCoverageHashKey AS i_StatisticalCoverageHashKey,\n\tEXP_CoverageDetailGeneralLiabiliity.o_RetroactiveDate AS i_RetroactiveDate,\n\tEXP_CoverageDetailGeneralLiabiliity.o_LiabilityFormCode AS i_LiabilityFormCode,\n\tEXP_CoverageDetailGeneralLiabiliity.o_ISOGeneralLiabilityClassSummary AS i_ISOGeneralLiabilityClassSummary,\n\tEXP_CoverageDetailGeneralLiabiliity.o_ISOGeneralLiabilityClassGroupCode AS i_ISOGeneralLiabilityClassGroupCode,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US'\n\t) AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US'\n\t) AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\ti_StatisticalCoverageHashKey AS o_StatisticalCoverageHashKey,\n\ti_RetroactiveDate AS o_RetroactiveDate,\n\ti_LiabilityFormCode AS o_LiabilityFormCode,\n\t-- *INF*: RTRIM(LTRIM(i_ISOGeneralLiabilityClassSummary))\n\tRTRIM(LTRIM(i_ISOGeneralLiabilityClassSummary\n\t\t)\n\t) AS o_ISOGeneralLiabilityClassSummary,\n\t-- *INF*: RTRIM(LTRIM(i_ISOGeneralLiabilityClassGroupCode))\n\tRTRIM(LTRIM(i_ISOGeneralLiabilityClassGroupCode\n\t\t)\n\t) AS o_ISOGeneralLiabilityClassGroupCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_PremiumTransactionID),'NEW',\r\n\t--  lkp_RetroactiveDate != i_RetroactiveDate \r\n\t-- OR lkp_LiabilityFormCode != i_LiabilityFormCode \r\n\t-- OR lkp_ClassSummary != i_ISOGeneralLiabilityClassSummary \r\n\t-- OR lkp_ClassGroupCode != i_ISOGeneralLiabilityClassGroupCode \r\n\t-- ,'UPDATE',\r\n\t-- 'NOCHANGE'\r\n\t-- )\n\tDECODE(TRUE,\n\t\tlkp_PremiumTransactionID IS NULL, 'NEW',\n\t\tlkp_RetroactiveDate != i_RetroactiveDate \n\t\tOR lkp_LiabilityFormCode != i_LiabilityFormCode \n\t\tOR lkp_ClassSummary != i_ISOGeneralLiabilityClassSummary \n\t\tOR lkp_ClassGroupCode != i_ISOGeneralLiabilityClassGroupCode, 'UPDATE',\n\t\t'NOCHANGE'\n\t) AS o_ChangeFlag\n\tFROM EXP_CoverageDetailGeneralLiabiliity\n\tLEFT JOIN LKP_CoverageDetailGeneralLiability\n\tON LKP_CoverageDetailGeneralLiability.PremiumTransactionID = EXP_CoverageDetailGeneralLiabiliity.o_PremiumTransactionID\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\to_PremiumTransactionID AS PremiumTransactionID,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_StatisticalCoverageHashKey AS StatisticalCoverageHashKey,\n\to_RetroactiveDate AS RetroactiveDate,\n\to_LiabilityFormCode AS LiabilityFormCode,\n\to_ISOGeneralLiabilityClassSummary AS ISOGeneralLiabilityClassSummary,\n\to_ISOGeneralLiabilityClassGroupCode AS ISOGeneralLiabilityClassGroupCode,\n\to_ChangeFlag AS ChangeFlag,\n\tlkp_PremiumTransactionID,\n\tlkp_RetroactiveDate,\n\tlkp_LiabilityFormCode,\n\tlkp_ClassSummary,\n\tlkp_ClassGroupCode\n\tFROM EXP_DetectChanges\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='NEW'),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='UPDATE'),\nUPD_Exists AS (\n\tSELECT\n\tPremiumTransactionID, \n\tModifiedDate, \n\tStatisticalCoverageHashKey, \n\tRetroactiveDate, \n\tLiabilityFormCode, \n\tISOGeneralLiabilityClassSummary, \n\tISOGeneralLiabilityClassGroupCode\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nCoverageDetailGeneralLiability_UPDATE AS (\n\tMERGE INTO CoverageDetailGeneralLiability AS T\n\tUSING UPD_Exists AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CoverageGuid = S.StatisticalCoverageHashKey, T.RetroactiveDate = S.RetroactiveDate, T.LiabilityFormCode = S.LiabilityFormCode, T.ISOGeneralLiabilityClassSummary = S.ISOGeneralLiabilityClassSummary, T.ISOGeneralLiabilityClassGroupCode = S.ISOGeneralLiabilityClassGroupCode\n),\nCoverageDetailGeneralLiability_INSERT AS (\n\tINSERT INTO CoverageDetailGeneralLiability\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, RetroactiveDate, LiabilityFormCode, ISOGeneralLiabilityClassSummary, ISOGeneralLiabilityClassGroupCode)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tStatisticalCoverageHashKey AS COVERAGEGUID, \n\tRETROACTIVEDATE, \n\tLIABILITYFORMCODE, \n\tISOGENERALLIABILITYCLASSSUMMARY, \n\tISOGENERALLIABILITYCLASSGROUPCODE\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604201"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}