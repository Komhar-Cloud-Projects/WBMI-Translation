{
    "name": "s_m_CLM_DW_UPDATE_Claimant_Coverage_Detail_Type_Bureau",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_UPDATE_Claimant_Coverage_Detail_Type_Bureau",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_claimant_coverage_detail_Type_Bureau AS (\n\tSELECT CCD.claimant_cov_det_id,\r\n\t       CCD.claimant_cov_det_ak_id,\r\n\t       CCD.claim_party_occurrence_ak_id,\r\n\t       CCD.loc_unit_num,\r\n\t       CCD.sub_loc_unit_num,\r\n\t       CCD.ins_line,\r\n\t       CCD.risk_unit_grp,\r\n\t       CCD.risk_unit_grp_seq_num,\r\n\t       CCD.risk_unit,\r\n\t       CCD.risk_unit_seq_num,\r\n\t       CCD.major_peril_code,\r\n\t       CCD.major_peril_seq,\r\n\t       CCD.pms_type_exposure,\r\n\t       CCD.claimant_cov_eff_date,\r\n\t       CCD.risk_type_ind,\r\n\t       CCD.source_sys_id \r\n\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail  CCD \r\n\tWHERE  CCD.pms_type_bureau_code = 'N/A'\r\n\t/*AND CCD.source_sys_id='EXCEED'*/\n),\nEXP_Values AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\tloc_unit_num,\n\t-- *INF*: RTRIM(loc_unit_num)\n\tRTRIM(loc_unit_num) AS loc_unit_num_out,\n\tsub_loc_unit_num,\n\t-- *INF*: RTRIM(sub_loc_unit_num)\n\tRTRIM(sub_loc_unit_num) AS sub_loc_unit_num_out,\n\tins_line,\n\t-- *INF*: RTRIM(ins_line)\n\tRTRIM(ins_line) AS ins_line1,\n\trisk_unit_grp,\n\t-- *INF*: RTRIM(risk_unit_grp)\n\tRTRIM(risk_unit_grp) AS risk_unit_grp1,\n\trisk_unit_grp_seq_num,\n\t-- *INF*: RTRIM(risk_unit_grp_seq_num)\n\tRTRIM(risk_unit_grp_seq_num) AS risk_unit_grp_seq_num1,\n\trisk_unit,\n\t-- *INF*: RTRIM(SUBSTR(risk_unit,1,3))\r\n\t-- \r\n\t-- ---RPAD(RTRIM(risk_unit),6,'0')\r\n\t-- \r\n\t-- \r\n\t-- ---RTRIM(risk_unit)\n\tRTRIM(SUBSTR(risk_unit, 1, 3)) AS risk_unit_out,\n\trisk_unit_seq_num,\n\t-- *INF*: RTRIM(risk_unit_seq_num)\n\tRTRIM(risk_unit_seq_num) AS risk_unit_seq_num1,\n\tmajor_peril_code,\n\t-- *INF*: RTRIM(major_peril_code)\n\tRTRIM(major_peril_code) AS major_peril_code_out,\n\tmajor_peril_seq,\n\t-- *INF*: RTRIM(major_peril_seq)\n\tRTRIM(major_peril_seq) AS major_peril_seq1,\n\tpms_type_exposure,\n\tclaimant_cov_eff_date,\n\trisk_type_ind,\n\t-- *INF*: LTRIM(RTRIM(risk_unit_seq_num)) || LTRIM(RTRIM(risk_type_ind))\n\tLTRIM(RTRIM(risk_unit_seq_num)) || LTRIM(RTRIM(risk_type_ind)) AS risk_unit_seq_num_out,\n\tsource_sys_id\n\tFROM SQ_claimant_coverage_detail_Type_Bureau\n),\nLKP_Claim_Party_Occurrence AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key,\n\tpol_ak_id\n\tFROM (\n\t\tSELECT CPO.claim_occurrence_ak_id       AS claim_occurrence_ak_id,\r\n\t\t       RTRIM(CO.claim_occurrence_key)   AS claim_occurrence_key,\r\n\t\t       CPO.claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id,\r\n\t\t       CO.claim_occurrence_type_code    AS claim_occurrence_type_code,\r\n\t\t       P.pol_ak_id\t                                             AS pol_ak_id\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO, V2.policy P\r\n\t\tWHERE  CPO.claim_occurrence_ak_id = CO.claim_occurrence_ak_id\r\n\t\t       AND CO.pol_key_ak_id = P.pol_ak_id\r\n\t\t       AND CO.crrnt_snpsht_flag = 1\r\n\t\t       AND CPO.crrnt_snpsht_flag = 1\r\n\t\t       AND P.crrnt_snpsht_flag = 1\r\n\t\t       AND CPO.claim_party_role_code in ('CLMT','CMT')\r\n\t\tORDER  BY claim_occurrence_key ---\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claim_party_occurrence_ak_id DESC) = 1\n),\nLKP_V2_Coverage AS (\n\tSELECT\n\tpol_ak_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq_num,\n\tcov_eff_date,\n\ttype_bureau_code\n\tFROM (\n\t\tSELECT  DISTINCT \r\n\t\t       C.type_bureau_code                 AS type_bureau_code,\r\n\t\t       C.pol_ak_id                                   AS pol_ak_id,\r\n\t\t       RTRIM(C.ins_line)                       AS ins_line,\r\n\t\t\t CASE  C.loc_unit_num  WHEN 'N/A' THEN '0000' ELSE RTRIM(C.loc_unit_num)  END AS loc_unit_num,\r\n\t\t       CASE  C.sub_loc_unit_num  WHEN 'N/A' THEN '000' ELSE RTRIM(C.sub_loc_unit_num)   END AS sub_loc_unit_num,\r\n\t\t\t RTRIM(C.risk_unit_grp)             AS risk_unit_grp,\r\n\t\t       RTRIM(C.risk_unit_grp_seq_num) AS risk_unit_grp_seq_num,\r\n\t\t       RTRIM(SUBSTRING(C.risk_unit,1,3)) AS risk_unit,\r\n\t\t       CASE C.risk_unit_seq_num   WHEN 'N/A' THEN '0' ELSE  SUBSTRING(C.risk_unit_seq_num,1,1)\r\n\t\t       END                                                    AS  risk_unit_seq_num,\r\n\t\t       RTRIM(C.major_peril_code)      AS major_peril_code,\r\n\t\t       RTRIM(C.major_peril_seq_num)  AS major_peril_seq_num,\r\n\t\t       C.cov_eff_date                               AS cov_eff_date\r\n\t\tFROM   \r\n\t\t       @{pipeline().parameters.SOURCE_TABLE_OWNER}.Coverage C,\r\n\t\t       @{pipeline().parameters.SOURCE_TABLE_OWNER}.Policy P,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.Claim_Occurrence CO,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.Claim_Party_Occurrence CPO,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.Claimant_Coverage_Detail CCD\r\n\t\tWHERE  C.pol_ak_id = P.pol_ak_id\r\n\t\t       AND P.pol_key = CO.pol_key\r\n\t\t       AND CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id\r\n\t\t       AND CPO.claim_party_occurrence_ak_id = CCD.claim_party_occurrence_ak_id\r\n\t\t       AND C.crrnt_snpsht_flag = 1\r\n\t\t       AND P.crrnt_snpsht_flag = 1\r\n\t\t       AND CO.crrnt_snpsht_flag = 1 \r\n\t\t       AND CPO.crrnt_snpsht_flag =1 \r\n\t\t       AND CCD.pms_type_bureau_code = 'N/A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,ins_line,loc_unit_num,sub_loc_unit_num,risk_unit_grp,risk_unit_grp_seq_num,risk_unit,risk_unit_seq_num,major_peril_code,major_peril_seq_num ORDER BY pol_ak_id DESC) = 1\n),\nEXP_LKP_Values AS (\n\tSELECT\n\tEXP_Values.claimant_cov_det_id,\n\tEXP_Values.claimant_cov_det_ak_id,\n\tLKP_V2_Coverage.type_bureau_code,\n\t-- *INF*: IIF(ISNULL(type_bureau_code),'N/A',type_bureau_code)\n\tIFF(type_bureau_code IS NULL, 'N/A', type_bureau_code) AS type_bureau_code_out,\n\tLKP_V2_Coverage.pol_ak_id,\n\tLKP_V2_Coverage.ins_line,\n\tLKP_V2_Coverage.loc_unit_num,\n\tLKP_V2_Coverage.sub_loc_unit_num,\n\tLKP_V2_Coverage.risk_unit_grp,\n\tLKP_V2_Coverage.risk_unit_grp_seq_num,\n\tLKP_V2_Coverage.risk_unit,\n\tLKP_V2_Coverage.risk_unit_seq_num,\n\tLKP_V2_Coverage.major_peril_code,\n\tLKP_V2_Coverage.major_peril_seq_num,\n\tLKP_V2_Coverage.cov_eff_date\n\tFROM EXP_Values\n\tLEFT JOIN LKP_V2_Coverage\n\tON LKP_V2_Coverage.pol_ak_id = LKP_Claim_Party_Occurrence.pol_ak_id AND LKP_V2_Coverage.ins_line = EXP_Values.ins_line1 AND LKP_V2_Coverage.loc_unit_num = EXP_Values.loc_unit_num_out AND LKP_V2_Coverage.sub_loc_unit_num = EXP_Values.sub_loc_unit_num_out AND LKP_V2_Coverage.risk_unit_grp = EXP_Values.risk_unit_grp1 AND LKP_V2_Coverage.risk_unit_grp_seq_num = EXP_Values.risk_unit_grp_seq_num1 AND LKP_V2_Coverage.risk_unit = EXP_Values.risk_unit_out AND LKP_V2_Coverage.risk_unit_seq_num = EXP_Values.risk_unit_seq_num1 AND LKP_V2_Coverage.major_peril_code = EXP_Values.major_peril_code_out AND LKP_V2_Coverage.major_peril_seq_num = EXP_Values.major_peril_seq1\n),\nLKP_sup_type_bureau_code AS (\n\tSELECT\n\tsup_type_bureau_code_id,\n\ttype_bureau_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_type_bureau_code_id,\n\t\t\ttype_bureau_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_type_bureau_code\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_bureau_code ORDER BY sup_type_bureau_code_id) = 1\n),\nFIL_Invalid_Updates AS (\n\tSELECT\n\tEXP_LKP_Values.claimant_cov_det_id, \n\tEXP_LKP_Values.type_bureau_code_out, \n\tLKP_sup_type_bureau_code.sup_type_bureau_code_id\n\tFROM EXP_LKP_Values\n\tLEFT JOIN LKP_sup_type_bureau_code\n\tON LKP_sup_type_bureau_code.type_bureau_code = EXP_LKP_Values.type_bureau_code_out\n\tWHERE IIF(type_bureau_code_out = 'N/A', FALSE, TRUE)\n),\nUPD_Type_Bureau AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\ttype_bureau_code_out, \n\tsup_type_bureau_code_id\n\tFROM FIL_Invalid_Updates\n),\nclaimant_coverage_detail_Update AS (\n\tMERGE INTO claimant_coverage_detail AS T\n\tUSING UPD_Type_Bureau AS S\n\tON T.claimant_cov_det_id = S.claimant_cov_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.pms_type_bureau_code = S.type_bureau_code_out, T.SupTypeBureauCodeID = S.sup_type_bureau_code_id\n),\nSQ_claimant_coverage_detail_Stat_Cvg AS (\n\twith AKID\r\n\tAS\r\n\t(\r\n\tselect *\r\n\tfrom (Select SC.StatisticalCoverageAKID as StatisticalCoverageAKID, \r\n\tSC.InsuranceReferenceLineOfBusinessAKID as InsuranceReferenceLineOfBusinessAKID, \r\n\tPC.PolicyAKID as PolicyAKID, \r\n\tSC.ProductAKID as ProductAKID ,\r\n\tPC.InsuranceLine as InsuranceLine, \r\n\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END) as LocationNumber,\r\n\tSC.MajorPerilCode as MajorPerilCode,\r\n\tSC.MajorPerilSequenceNumber as MajorPerilSequenceNumber,\r\n\tSC.RiskUnit as RiskUnit,\r\n\t(CASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END) as RiskUnitSequenceNumber,\r\n\tSC.RiskUnitGroup as RiskUnitGroup, \r\n\tSC.RiskUnitGroupSequenceNumber as RiskUnitGroupSequenceNumber , \r\n\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END) as SubLocationUnitNumber,\r\n\tPC.TypeBureauCode as TypeBureauCode,\r\n\tSC.StatisticalCoverageEffectiveDate as StatisticalCoverageEffectiveDate,\r\n\tRANK()over(PARTITION BY \r\n\tPC.PolicyAKID,\r\n\tPC.InsuranceLine,\r\n\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END),\r\n\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END),\r\n\tSC.RiskUnitGroup,\r\n\tSC.RiskUnitGroupSequenceNumber,\r\n\tSC.RiskUnit,\r\n\tSC.RiskUnitSequenceNumber,\r\n\tSC.MajorPerilCode,\r\n\tSC.MajorPerilSequenceNumber ,\r\n\tPC.TypeBureauCode,\r\n\tSC.StatisticalCoverageEffectiveDate\r\n\torder by SC.StatisticalCoverageEffectiveDate desc,CASE WHEN SC.ReinsuranceSectionCode ='2' THEN '2' ELSE '1' END asc, SC.StatisticalCoverageAKID desc) as rn,\r\n\tSC.CoverageGUID\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage SC ,\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC,\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation RL,\r\n\tV2.policy p\r\n\tWHERE SC.PolicyCoverageAKID = PC.PolicyCoverageAKID \r\n\tAND PC.RiskLocationAKID = RL.RiskLocationAKID  \r\n\tAND  PC.PolicyAKID = p.pol_ak_id \r\n\t/*AND SC.CurrentSnapshotFlag=1 AND PC.CurrentSnapshotFlag=1 AND RL.CurrentSnapshotFlag=1*/ AND P.crrnt_snpsht_flag=1 \r\n\tAND P.source_sys_id='PMS'\r\n\tAND  EXISTS (SELECT DISTINCT pol_key_ak_id from dbo.claim_occurrence \r\n\twhere crrnt_snpsht_flag = 1 AND PC.PolicyAKID= pol_key_ak_id ))a\r\n\twhere rn=1\r\n\t)\r\n\tSELECT \r\n\tclaimant_coverage_detail.claimant_cov_det_id, \r\n\tAKID.InsuranceReferenceLineOfBusinessAKID,\r\n\tAKID.ProductAKID,\r\n\tAKID.StatisticalCoverageAKID,\r\n\tAKID.CoverageGUID\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\r\n\tON claim_party_occurrence.claim_party_occurrence_ak_id=claimant_coverage_detail.claim_party_occurrence_ak_id \r\n\t/*and claim_party_occurrence.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'*/ and claim_party_occurrence.crrnt_snpsht_flag=1\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\r\n\tON claim_occurrence.claim_occurrence_ak_id=claim_party_occurrence.claim_occurrence_ak_id\r\n\t/*and claim_occurrence.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'*/ and claim_occurrence.crrnt_snpsht_flag=1\r\n\tLEFT OUTER join AKID\r\n\tON claim_occurrence.pol_key_ak_id=AKID.PolicyAKID\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.ins_line))=AKID.InsuranceLine\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.loc_unit_num))=AKID.LocationNumber\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.sub_loc_unit_num))=AKID.SubLocationUnitNumber\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.risk_unit_grp))=AKID.RiskUnitGroup\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.risk_unit_grp_seq_num))=AKID.RiskUnitGroupSequenceNumber\r\n\tand claim_occurrence.claim_loss_Date >= AKID.StatisticalCoverageEffectiveDate\r\n\t/* validate that the Claim Loss Date is after the statisticalcoverageeffectivedate */\r\n\t\r\n\tand rtrim(claimant_coverage_detail.risk_unit)=AKID.RiskUnit\r\n\t\r\n\tand (case when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num))='0' \r\n\tAND LTRIM(RTRIM(claimant_coverage_detail.ins_line))='WC' then '00'\r\n\t when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) in ('0') \r\n\t AND LTRIM(RTRIM(claimant_coverage_detail.ins_line))<>'WC' \r\n\t AND LTRIM(RTRIM(claimant_coverage_detail.risk_type_ind))='N/A' then 'N/A'\r\n\t when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) in ('0','1','2','3','4','8') \r\n\t and LTRIM(RTRIM(claimant_coverage_detail.ins_line))='GL' \r\n\t then LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num))+LTRIM(RTRIM(claimant_coverage_detail.risk_type_ind))\r\n\t else LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) end=AKID.RiskUnitSequenceNumber\r\n\tor AKID.RiskUnitSequenceNumber = 'N/A' or AKID.RiskUnitSequenceNumber = '0O'\r\n\tor SUBSTRING(case when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num))='0'\r\n\t AND LTRIM(RTRIM(claimant_coverage_detail.ins_line))='WC' then '00'\r\n\t when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) in ('0') \r\n\t AND LTRIM(RTRIM(claimant_coverage_detail.ins_line))<>'WC' AND LTRIM(RTRIM(claimant_coverage_detail.risk_type_ind))='N/A' then 'N/A'\r\n\t when LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) in ('0','1','2','3','4','8')\r\n\t  and LTRIM(RTRIM(claimant_coverage_detail.ins_line))='GL' \r\n\t  then LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num))+LTRIM(RTRIM(claimant_coverage_detail.risk_type_ind))\r\n\t else LTRIM(RTRIM(claimant_coverage_detail.risk_unit_seq_num)) end,1,1) = SUBSTRING(AKID.RiskUnitSequenceNumber,1,1))\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.major_peril_code))=AKID.MajorPerilCode\r\n\tand LTRIM(RTRIM(claimant_coverage_detail.major_peril_seq))=AKID.MajorPerilSequenceNumber\r\n\tand case when claimant_coverage_detail.pms_type_bureau_code is null then 'N/A' \r\n\telse claimant_coverage_detail.pms_type_bureau_code end=AKID.TypeBureauCode\r\n\twhere /*claimant_coverage_detail.source_sys_id  = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tand*/ claimant_coverage_detail.StatisticalCoverageAKID = -1\r\n\tand claimant_coverage_detail.PolicySourceID in ('PMS','ESU')\r\n\tORDER BY claimant_coverage_detail.claimant_cov_det_id,AKID.StatisticalCoverageAKID\n),\nEXP_EXP_Trim_Expression AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tInsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tProductAKId AS i_ProductAKId,\n\tStatisticalCoverageAKID AS i_StatisticalCoverageAKID,\n\tCoverageGUID AS i_CoverageGUID,\n\t-- *INF*: IIF(ISNULL(i_CoverageGUID), 'N/A',i_CoverageGUID)\n\tIFF(i_CoverageGUID IS NULL, 'N/A', i_CoverageGUID) AS o_CoverageGUID,\n\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLineOfBusinessAKId), -1,i_InsuranceReferenceLineOfBusinessAKId)\n\tIFF(\n\t    i_InsuranceReferenceLineOfBusinessAKId IS NULL, - 1, i_InsuranceReferenceLineOfBusinessAKId\n\t) AS o_InsuranceReferenceLineOfBusinessAKId,\n\t-- *INF*: IIF(ISNULL(i_ProductAKId), -1,i_ProductAKId)\n\tIFF(i_ProductAKId IS NULL, - 1, i_ProductAKId) AS o_ProductAKId,\n\t-- *INF*: IIF(ISNULL(i_StatisticalCoverageAKID), -1,i_StatisticalCoverageAKID)\n\tIFF(i_StatisticalCoverageAKID IS NULL, - 1, i_StatisticalCoverageAKID) AS o_StatisticalCoverageAKID\n\tFROM SQ_claimant_coverage_detail_Stat_Cvg\n),\nFIL_Remove_minus_1_Updates AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\to_CoverageGUID, \n\to_InsuranceReferenceLineOfBusinessAKId, \n\to_ProductAKId, \n\to_StatisticalCoverageAKID\n\tFROM EXP_EXP_Trim_Expression\n\tWHERE o_CoverageGUID <> 'N/A' OR \r\no_InsuranceReferenceLineOfBusinessAKId <> -1 OR \r\no_ProductAKId <> -1 OR \r\no_StatisticalCoverageAKID <> -1\n),\nUPD_UpdateTarget AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\to_CoverageGUID AS CoverageGUID, \n\to_InsuranceReferenceLineOfBusinessAKId AS InsuranceReferenceLineOfBusinessAKId, \n\to_ProductAKId AS ProductAKId, \n\to_StatisticalCoverageAKID AS StatisticalCoverageAKID\n\tFROM FIL_Remove_minus_1_Updates\n),\nclaimant_coverage_detail_update_statisticalcoverageakid AS (\n\tMERGE INTO claimant_coverage_detail AS T\n\tUSING UPD_UpdateTarget AS S\n\tON T.claimant_cov_det_id = S.claimant_cov_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CoverageGUID = S.CoverageGUID, T.StatisticalCoverageAKID = S.StatisticalCoverageAKID, T.InsuranceReferenceLineOfBusinessAKId = S.InsuranceReferenceLineOfBusinessAKId, T.ProductAKId = S.ProductAKId\n),\nSQ_Claim_Occurrence_PolicyAKID_Change AS (\n\twith \r\n\t AKID\r\n\tAS\r\n\t(\r\n\tselect distinct *\r\n\tfrom (Select SC.StatisticalCoverageAKID as StatisticalCoverageAKID, \r\n\tSC.InsuranceReferenceLineOfBusinessAKID as InsuranceReferenceLineOfBusinessAKID, \r\n\tPC.PolicyAKID as PolicyAKID, \r\n\tSC.ProductAKID as ProductAKID ,\r\n\tPC.InsuranceLine as InsuranceLine, \r\n\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END) as LocationNumber,\r\n\tSC.MajorPerilCode as MajorPerilCode,\r\n\tSC.MajorPerilSequenceNumber as MajorPerilSequenceNumber,\r\n\tSC.RiskUnit as RiskUnit,\r\n\t(CASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END) as RiskUnitSequenceNumber,\r\n\t(CASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N' ELSE substring(SC.RiskUnitSequenceNumber,1,1) END) as RiskUnitSequenceNumber1_1,\r\n\tSC.RiskUnitGroup as RiskUnitGroup, \r\n\tSC.RiskUnitGroupSequenceNumber as RiskUnitGroupSequenceNumber , \r\n\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END) as SubLocationUnitNumber,\r\n\tPC.TypeBureauCode as TypeBureauCode,\r\n\tSC.StatisticalCoverageEffectiveDate as StatisticalCoverageEffectiveDate,\r\n\tRANK()over(PARTITION BY \r\n\tPC.PolicyAKID,\r\n\tPC.InsuranceLine,\r\n\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END),\r\n\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END),\r\n\tSC.RiskUnitGroup,\r\n\tSC.RiskUnitGroupSequenceNumber,\r\n\tSC.RiskUnit,\r\n\tSC.RiskUnitSequenceNumber,\r\n\tSC.MajorPerilCode,\r\n\tSC.MajorPerilSequenceNumber ,\r\n\tPC.TypeBureauCode,\r\n\tSC.StatisticalCoverageEffectiveDate\r\n\torder by SC.StatisticalCoverageEffectiveDate desc,CASE WHEN SC.ReinsuranceSectionCode ='2' THEN '2' ELSE '1' END asc, SC.StatisticalCoverageAKID desc) as rn,\r\n\tSC.CoverageGUID\r\n\tfrom \r\n\tStatisticalCoverage SC with (nolock) \r\n\tinner join PolicyCoverage PC with (nolock) on \r\n\t\tSC.PolicyCoverageAKID = PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\tinner join RiskLocation RL with (nolock) on \r\n\t\tPC.RiskLocationAKID = RL.RiskLocationAKID and RL.CurrentSnapshotFlag=1\r\n\tinner join V2.policy p with (nolock) on \r\n\t\tPC.PolicyAKID = p.pol_ak_id AND \r\n\t\tP.crrnt_snpsht_flag=1 AND\r\n\t\tP.source_sys_id='PMS'\r\n\tinner join \r\n\t\r\n\t(select CO.pol_key_ak_id from\r\n\tclaim_occurrence CO with (nolock)\r\n\tinner join claim_party_occurrence CPO with (nolock) on CO.claim_occurrence_ak_id=CPO.claim_occurrence_ak_id and CPO.crrnt_snpsht_flag=1\r\n\tinner join claimant_coverage_detail CCD with (nolock) on CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id and CCD.crrnt_snpsht_flag=1\r\n\tinner join StatisticalCoverage SC with (nolock) on SC.StatisticalCoverageAKID=CCD.StatisticalCoverageAKID and SC.CurrentSnapshotFlag=1\r\n\tinner join PolicyCoverage PC with (nolock) on SC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\twhere\r\n\tCO.crrnt_snpsht_flag=1 and\r\n\tCO.pol_key_ak_id != PC.PolicyAKID and\r\n\tCO.modified_date >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t) a on a.pol_key_ak_Id = PC.policyakid\r\n\t\r\n\t) b\r\n\twhere rn=1 \r\n\t)\r\n\t\r\n\t,\r\n\tClaimOCC as (\r\n\tSELECT distinct\r\n\tCCD.claimant_cov_det_id, \r\n\tCCD.StatisticalCoverageAKID,\r\n\tCCD.CoverageGUID,\r\n\tCCD.ProductAKID,\r\n\tCCD.InsuranceReferenceLineOfBusinessAKID,\r\n\tCO.pol_key_ak_id,\r\n\tPC.PolicyAKID,\r\n\tCO.pol_key,\r\n\tCO.s3p_claim_num,\r\n\t\r\n\tLTRIM(RTRIM(CCD.ins_line)) as ins_line,\r\n\tLTRIM(RTRIM(CCD.loc_unit_num)) as loc_unit_num,\r\n\tLTRIM(RTRIM(CCD.sub_loc_unit_num)) as sub_loc_unit_num,\r\n\tLTRIM(RTRIM(CCD.risk_unit_grp)) as risk_unit_grp,\r\n\tLTRIM(RTRIM(CCD.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num,\r\n\tCO.claim_loss_Date,\r\n\tltrim(rtrim(CCD.risk_unit)) as risk_unit,\r\n\t\r\n\tcase \r\n\t\twhen LTRIM(RTRIM(CCD.risk_unit_seq_num))='0' AND LTRIM(RTRIM(CCD.ins_line))='WC' then '00'\r\n\t\twhen LTRIM(RTRIM(CCD.risk_unit_seq_num)) in ('0') \r\n\t\t\t\tAND LTRIM(RTRIM(CCD.ins_line))<>'WC' \r\n\t\t\t\tAND LTRIM(RTRIM(CCD.risk_type_ind))='N/A' then 'N/A'\r\n\t\twhen LTRIM(RTRIM(CCD.risk_unit_seq_num)) in ('0','1','2','3','4','8') and LTRIM(RTRIM(CCD.ins_line))='GL' \r\n\t\tthen LTRIM(RTRIM(CCD.risk_unit_seq_num))+LTRIM(RTRIM(CCD.risk_type_ind))\r\n\t\telse LTRIM(RTRIM(CCD.risk_unit_seq_num)) \r\n\tend as RiskUnitSequenceNumber1,\r\n\t\t \r\n\tSUBSTRING(\r\n\t\tcase when LTRIM(RTRIM(CCD.risk_unit_seq_num))='0'\r\n\t\t\t\tAND LTRIM(RTRIM(CCD.ins_line))='WC' then '00'\r\n\t\t\twhen LTRIM(RTRIM(CCD.risk_unit_seq_num)) in ('0') \r\n\t\t\t\tAND LTRIM(RTRIM(CCD.ins_line))<>'WC' AND LTRIM(RTRIM(CCD.risk_type_ind))='N/A' then 'N/A'\r\n\t\t\twhen LTRIM(RTRIM(CCD.risk_unit_seq_num)) in ('0','1','2','3','4','8')\r\n\t\t\t\tand LTRIM(RTRIM(CCD.ins_line))='GL' \r\n\t\t\tthen LTRIM(RTRIM(CCD.risk_unit_seq_num))+LTRIM(RTRIM(CCD.risk_type_ind))\r\n\t\t\telse LTRIM(RTRIM(CCD.risk_unit_seq_num)) \r\n\tend,1,1) as RiskUnitSequenceNumber2,\r\n\t\r\n\t'N/A' as RiskUnitSequenceNumber3,\r\n\t'0O' as RiskUnitSequenceNumber4,\r\n\t\r\n\tLTRIM(RTRIM(CCD.major_peril_code)) as major_peril_code,\r\n\tLTRIM(RTRIM(CCD.major_peril_seq)) as major_peril_seq,\r\n\tISNULL(CCD.pms_type_bureau_code,'N/A') as pms_type_bureau_code\r\n\t\r\n\tFROM \r\n\tclaim_occurrence CO with (nolock)\r\n\tinner join claim_party_occurrence CPO with (nolock) on CO.claim_occurrence_ak_id=CPO.claim_occurrence_ak_id and CPO.crrnt_snpsht_flag=1\r\n\tinner join claimant_coverage_detail CCD with (nolock) on CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id and CCD.crrnt_snpsht_flag=1\r\n\tinner join StatisticalCoverage SC with (nolock) on SC.StatisticalCoverageAKID=CCD.StatisticalCoverageAKID and SC.CurrentSnapshotFlag=1\r\n\tinner join PolicyCoverage PC with (nolock) on SC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\t\r\n\twhere \r\n\tCO.crrnt_snpsht_flag=1 and\r\n\tCO.pol_key_ak_id != PC.PolicyAKID and\r\n\tCCD.PolicySourceID  in ('PMS','ESU') and\r\n\tCO.modified_date >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t)\r\n\t\r\n\t\r\n\tSELECT\r\n\tClaimOCC.claimant_cov_det_id AS claimant_cov_det_id,\r\n\tClaimOCC.StatisticalCoverageAKID AS StatisticalCoverageAKID_Old, \r\n\tAKID.StatisticalCoverageAKID AS StatisticalCoverageAKID_New, \r\n\tAKID.StatisticalCoverageEffectiveDate, \r\n\tClaimOCC.claim_loss_date, \r\n\tAKID.InsuranceReferenceLineOfBusinessAKID AS InsuranceReferenceLineOfBusinessAKID_New,\r\n\tClaimOcc.InsuranceReferenceLineOfBusinessAKId AS InsuranceReferenceLineOfBusinessAKID_Old,\r\n\tAKID.ProductAKID AS ProductAKID_New,\r\n\tClaimOcc.ProductAKId AS ProductAKID_Old,\r\n\tAKID.CoverageGuid AS CoverageGuid_New,\r\n\tClaimOcc.CoverageGUID AS CoverageGuid_Old,\r\n\tClaimOCC.s3p_claim_num,\r\n\tAKID.PolicyAKID AS PolicyAKID_New,\r\n\tClaimOcc.PolicyAKID AS PolicyAKID_Old\r\n\tFROM\r\n\tClaimOCC\r\n\tinner join AKID  on \r\n\tAkid.PolicyAKID=ClaimOcc.pol_key_ak_id \r\n\twhere\r\n\tAkid.InsuranceLine=ClaimOcc.ins_line and\r\n\tAKID.locationNumber = ClaimOcc.loc_unit_num and\r\n\tAKID.SubLocationUnitNumber=ClaimOcc.sub_loc_unit_num and\r\n\tAKID.RiskUnitGroup = claimocc.risk_unit_grp and\r\n\tAKID.RiskUnitGroupSequenceNumber = claimocc.risk_unit_grp_seq_num and\r\n\tAKID.RiskUnit=ClaimOcc.risk_unit and\r\n\t(\r\n\tAKID.RiskUnitSequenceNumber in (claimocc.RiskUnitSequenceNumber1, claimocc.RiskUnitSequenceNumber3, claimocc.RiskUnitSequenceNumber4) or\r\n\tAKID.RiskUnitSequenceNumber1_1=claimOcc.RiskUnitSequenceNumber2\r\n\t) and\r\n\tAKID.MajorPerilCode=ClaimOCC.major_peril_code and\r\n\tAKID.MajorPerilSequenceNumber=ClaimOcc.major_peril_seq and\r\n\tAKID.TypeBureauCode=ClaimOcc.pms_type_bureau_code\n),\nEXP_Input_PolicyAKID_Change AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tStatisticalCoverageAKID_Old,\n\tStatisticalCoverageAKID_New,\n\tStatisticalCoverageEffectiveDate,\n\tclaim_loss_date,\n\tInsuranceReferenceLineOfBusinessAKID_New,\n\tInsuranceReferenceLineOfBusinessAKID_Old,\n\tProductAKID_New,\n\tProductAKID_Old,\n\tCoverageGuid_New,\n\tCoverageGuid_Old,\n\ts3p_claim_num,\n\tPolicyAKID_New,\n\tPolicyAKID_Old\n\tFROM SQ_Claim_Occurrence_PolicyAKID_Change\n),\nFIL_PolicyAKID_Change AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\tStatisticalCoverageAKID_Old, \n\tStatisticalCoverageAKID_New, \n\tStatisticalCoverageEffectiveDate, \n\tclaim_loss_date, \n\tInsuranceReferenceLineOfBusinessAKID_New, \n\tInsuranceReferenceLineOfBusinessAKID_Old, \n\tProductAKID_New, \n\tProductAKID_Old, \n\tCoverageGuid_New, \n\tCoverageGuid_Old, \n\ts3p_claim_num, \n\tPolicyAKID_New, \n\tPolicyAKID_Old\n\tFROM EXP_Input_PolicyAKID_Change\n\tWHERE IIF(StatisticalCoverageEffectiveDate <= claim_loss_date\r\nAND StatisticalCoverageAKID_New != -1\r\nAND InsuranceReferenceLineOfBusinessAKID_New !=-1\r\nAND ProductAKID_New !=-1, TRUE, FALSE)\n),\nEXP_Fil_Output AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tStatisticalCoverageAKID_New,\n\tInsuranceReferenceLineOfBusinessAKID_New,\n\tProductAKID_New,\n\tCoverageGuid_New\n\tFROM FIL_PolicyAKID_Change\n),\nUPD_PolicyAKID_Change_Update AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\tStatisticalCoverageAKID_New, \n\tInsuranceReferenceLineOfBusinessAKID_New, \n\tProductAKID_New, \n\tCoverageGuid_New\n\tFROM EXP_Fil_Output\n),\nclaimant_coverage_detail_PolicyAKID_Change AS (\n\tMERGE INTO claimant_coverage_detail AS T\n\tUSING UPD_PolicyAKID_Change_Update AS S\n\tON T.claimant_cov_det_id = S.claimant_cov_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CoverageGUID = S.CoverageGuid_New, T.StatisticalCoverageAKID = S.StatisticalCoverageAKID_New, T.InsuranceReferenceLineOfBusinessAKId = S.InsuranceReferenceLineOfBusinessAKID_New, T.ProductAKId = S.ProductAKID_New\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}