{
    "name": "s_m_FEED_Load_WCRB_Work_Table",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WCRB_Work_Table",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_ReserveAmount AS (\n\tSELECT\n\tDirectLossOutstandingIR,\n\tclaim_num,\n\tcause_of_loss_long_descript\n\tFROM (\n\t\tSELECT\t\t\r\n\t\t\tclaim_occurrence_dim.claim_num as claim_num,\r\n\t\t\tcause_of_loss_long_descript as cause_of_loss_long_descript,\r\n\t\t\tSUM(dbo.vwLossMasterFact.DirectLossOutstandingER) as DirectLossOutstandingIR\r\n\t\tFROM\r\n\t\t\tdbo.claim_occurrence_dim INNER JOIN dbo.vwLossMasterFact \r\n\t\t\tON (dbo.claim_occurrence_dim.claim_occurrence_dim_id=dbo.vwLossMasterFact.claim_occurrence_dim_id)\r\n\t\t\tINNER JOIN dbo.policy_dim \r\n\t\t\tON (dbo.policy_dim.pol_dim_id=dbo.vwLossMasterFact.pol_dim_id)\r\n\t\t\tINNER JOIN dbo.calendar_dim  Monthly_Run_Date_dim \r\n\t\t\tON (dbo.vwLossMasterFact.loss_master_run_date_id=Monthly_Run_Date_dim.clndr_id  \r\n\t\t\t\tAND  Monthly_Run_Date_dim.CalendarDate=Monthly_Run_Date_dim.CalendarEndOfMonthDate)\r\n\t\t\tINNER JOIN dbo.InsuranceReferenceDim \r\n\t\t\tON (dbo.InsuranceReferenceDim.InsuranceReferenceDimId=dbo.vwLossMasterFact.InsuranceReferenceDimId) \r\n\t\t\tINNER JOIN dbo.claimant_coverage_dim CCD \r\n\t\t\tON dbo.vwLossMasterFact.claimant_Cov_dim_id = CCD.claimant_Cov_dim_id\r\n\t\tWHERE\t\r\n\t\t\tdbo.InsuranceReferenceDim.InsuranceSegmentDescription  IN  ( 'Pool Services'  )\r\n\t\t--AND\tMonthly_Run_Date_dim.clndr_date >= @{pipeline().parameters.STARTDATE}\r\n\t\t--CONVERT(DATE,(DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) - 1, 0)))\r\n\t\tAND\tMonthly_Run_Date_dim.clndr_date < @{pipeline().parameters.ENDDATE}\t\r\n\t\t--CONVERT(DATE,DATEADD(qq, DATEDIFF(qq, 0, GETDATE()), 0))    \r\n\t\tGROUP BY \r\n\t\t\tclaim_occurrence_dim.claim_num,\r\n\t\t\tcause_of_loss_long_descript --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_num,cause_of_loss_long_descript ORDER BY DirectLossOutstandingIR DESC) = 1\n),\nSQ_WCRB_Loss AS (\n\tDECLARE @STARTDATE DATETIME = @{pipeline().parameters.STARTDATE},\r\n\t\t\t@ENDDATE DATETIME = @{pipeline().parameters.ENDDATE};\r\n\t\r\n\tSELECT distinct WCCD.wc_claimant_det_id,\r\n\t\t   CO.claim_occurrence_id,\r\n\t\t   CPO.claim_party_occurrence_id,\r\n\t\t   CCD.claimant_cov_det_id,\r\n\t\t   LMC.loss_master_calculation_id,\r\n\t         LMC.loss_master_run_date,\r\n\t         POL.pol_id,\r\n\t\t   POL.pol_sym,\r\n\t\t   POL.pol_num,\r\n\t\t   POL.pol_mod,\r\n\t\t   POL.pol_eff_date,\r\n\t\t   CC.name,\r\n\t\t   CO.claim_loss_date,\r\n\t\t   CO.s3p_claim_num,\r\n\t\t   COC.claim_occurrence_date,\r\n\t\t   COC.claim_occurrence_status_code,\r\n\t\t   LMC.Paid_Loss_Amt,\r\n\t\t   LMC.outstanding_amt,\r\n\t        CT.Cause_of_Loss, \r\n\t\t   WCCD.cause_inj_code,\r\n\t\t   WCCD.body_part_code,\r\n\t\t   WCCD.nature_inj_code,\r\n\t\t   LMC.class_code,\r\n\t        -1,-- RL.RiskLocationID,\r\n\t        -1,-- PC.PolicyCoverageID,\r\n\t         -1,--RC.RatingCoverageID,\r\n\t\tLMC.claim_trans_amt,\r\n\t         LMC.FinancialTypeCode,\r\n\t\tLMC.claim_occurrence_ak_id,\r\n\t\tCT.pms_trans_code\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\tON LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\tAND LMC.crrnt_snpsht_flag=1\r\n\tAND CT.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\tON CT.claimant_cov_det_ak_id=CCD.claimant_cov_det_ak_id\r\n\tAND CCD.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO\r\n\tON LMC.claim_party_occurrence_ak_id=CPO.claim_party_occurrence_ak_id\r\n\tAND CPO.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence CO\r\n\tON LMC.claim_occurrence_ak_id=CO.claim_occurrence_ak_id\r\n\tAND CO.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_calculation COC\r\n\tON COC.claim_occurrence_ak_id=CO.claim_occurrence_ak_id\r\n\tAND COC.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.workers_comp_claimant_detail WCCD\r\n\tON WCCD.claim_party_occurrence_ak_id=CPO.claim_party_occurrence_ak_id \r\n\tAND WCCD.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\ton POL.pol_ak_id=CO.pol_key_ak_id\r\n\tand POL.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer CC\r\n\ton CC.contract_cust_ak_id=POL.contract_cust_ak_id\r\n\tand CC.crrnt_snpsht_flag=1\r\n\t/*INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\tON CCD.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\tand RC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\tON RC.PolicyCoverageAKId=PC.PolicyCoverageAKId\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\tON RL.RiskLocationAKId=PC.RiskLocationAKId\r\n\tand RL.CurrentSnapshotFlag=1*/\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.Insurancesegment ISG\r\n\tON POL.InsuranceSegmentAKId= ISG.InsuranceSegmentAKId\r\n\tWHERE \r\n\tCT.source_sys_id='EXCEED'\r\n\tand InsuranceSegmentAbbreviation = '@{pipeline().parameters.INSURANCESEGMENTABBREVIATION}'\r\n\tand lmc.trans_kind_code = '@{pipeline().parameters.TRANS_KIND_CODE}'\r\n\tand pol.pol_sym<>'@{pipeline().parameters.POL_SYM}'\r\n\tand LMC.loss_master_run_date >= @STARTDATE and LMC.loss_master_run_date < @ENDDATE\r\n\t\r\n\t\r\n\t--For PMS: SC.MajorPerilCode='032' is not required any more\n),\nEXP_Lossdata AS (\n\tSELECT\n\twc_claimant_det_id AS i_wc_claimant_det_id,\n\tclaim_occurrence_id AS i_claim_occurrence_id,\n\tclaim_party_occurrence_id AS i_claim_party_occurrence_id,\n\tclaimant_cov_det_id AS i_claimant_cov_det_id,\n\tloss_master_calculation_id AS i_loss_master_calculation_id,\n\tloss_master_run_date AS i_loss_master_run_date,\n\tpol_id AS i_pol_id,\n\tpol_sym AS i_pol_sym,\n\tpol_num AS i_pol_num,\n\tpol_mod AS i_pol_mod,\n\tpol_eff_date AS i_pol_eff_date,\n\tname AS i_name,\n\tclaim_loss_date AS i_claim_loss_date,\n\ts3p_claim_num AS i_s3p_claim_num,\n\tclaim_occurrence_date AS i_claim_occurrence_date,\n\tclaim_occurrence_status_code AS i_claim_occurrence_status_code,\n\tpaid_loss_amt AS i_paid_loss_amt,\n\toutstanding_amt AS i_outstanding_amt,\n\tcause_of_loss AS i_cause_of_loss,\n\tcause_inj_code AS i_cause_inj_code,\n\tbody_part_code AS i_body_part_code,\n\tnature_inj_code AS i_nature_inj_code,\n\tclass_code AS i_class_code,\n\tRiskLocationID AS i_RiskLocationID,\n\tPolicyCoverageID AS i_PolicyCoverageID,\n\tStatisticalCoverageID AS i_StatisticalCoverageID,\n\tclaim_trans_amt AS i_claim_trans_amt,\n\tFinancialTypeCode AS i_FinancialTypeCode,\n\tclaim_occurrence_ak_id AS i_claim_occurrence_ak_id,\n\tpms_trans_code AS i_pms_trans_code,\n\ti_wc_claimant_det_id AS o_wc_claimant_det_id,\n\ti_claim_occurrence_id AS o_claim_occurrence_id,\n\ti_claim_party_occurrence_id AS o_claim_party_occurrence_id,\n\ti_claimant_cov_det_id AS o_claimant_cov_det_id,\n\ti_loss_master_calculation_id AS o_loss_master_calculation_id,\n\ti_pol_id AS o_pol_id,\n\ti_RiskLocationID AS o_RiskLocationID,\n\ti_PolicyCoverageID AS o_PolicyCoverageID,\n\ti_StatisticalCoverageID AS o_StatisticalCoverageID,\n\ti_loss_master_run_date AS o_loss_master_run_date,\n\ti_pol_sym || i_pol_num || i_pol_mod AS o_PolKey,\n\t-- *INF*: TO_CHAR(i_pol_eff_date,'MMDDYYYY')\n\tTO_CHAR(i_pol_eff_date, 'MMDDYYYY') AS o_PolicyEffectiveDate,\n\t-- *INF*: SUBSTR(i_name,1,90)\n\tSUBSTR(i_name, 1, 90) AS o_NameOfInsured,\n\t'48' AS o_StateCode,\n\t-- *INF*: TO_CHAR(i_claim_loss_date,'YYYY')\n\tTO_CHAR(i_claim_loss_date, 'YYYY') AS o_AccidentYear,\n\ti_s3p_claim_num AS o_ClaimNum,\n\t-- *INF*: IIF(i_claim_occurrence_status_code='O','00000000',TO_CHAR(i_claim_occurrence_date,'MMDDYYYY'))\n\tIFF(\n\t    i_claim_occurrence_status_code = 'O', '00000000',\n\t    TO_CHAR(i_claim_occurrence_date, 'MMDDYYYY')\n\t) AS o_ClaimClosedDate,\n\ti_claim_occurrence_status_code AS o_ClaimOccurrenceStatusCode,\n\ti_paid_loss_amt AS o_PaidLossAmt,\n\ti_cause_of_loss AS o_TypeLossCode,\n\t-- *INF*: IIF(IN(i_cause_of_loss,'01','05') AND IN(i_FinancialTypeCode,'D','R') AND \r\n\t-- IN(i_pms_trans_code,'21','22','23','24','25','26','27','28','29','37','86','87'),i_paid_loss_amt,0)\n\tIFF(\n\t    i_cause_of_loss IN ('01','05')\n\t    and i_FinancialTypeCode IN ('D','R')\n\t    and i_pms_trans_code IN ('21','22','23','24','25','26','27','28','29','37','86','87'),\n\t    i_paid_loss_amt,\n\t    0\n\t) AS o_IndemnityPaymentAmount,\n\t-- *INF*: IIF(i_cause_of_loss='06' AND IN(i_FinancialTypeCode,'D','R') AND \r\n\t-- IN(i_pms_trans_code,'21','22','23','24','25','26','27','28','29','37','86','87'),i_paid_loss_amt,0)\n\tIFF(\n\t    i_cause_of_loss = '06'\n\t    and i_FinancialTypeCode IN ('D','R')\n\t    and i_pms_trans_code IN ('21','22','23','24','25','26','27','28','29','37','86','87'),\n\t    i_paid_loss_amt,\n\t    0\n\t) AS o_MedicalPaymentAmount,\n\t-- *INF*: IIF(IN(i_FinancialTypeCode,'B','S') AND IN(i_pms_trans_code,'81','82','83','84','88','89'),i_paid_loss_amt,0)\n\tIFF(\n\t    i_FinancialTypeCode IN ('B','S') AND i_pms_trans_code IN ('81','82','83','84','88','89'),\n\t    i_paid_loss_amt,\n\t    0\n\t) AS o_RecoveryAmount,\n\t-- *INF*: :LKP.LKP_RESERVEAMOUNT(\r\n\t-- (IIF(IN(i_cause_of_loss,'01','05'),\r\n\t-- RTRIM(i_s3p_claim_num),'0')),'INDEMNITY')\n\tLKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_01_05_RTRIM_i_s3p_claim_num_0_INDEMNITY.DirectLossOutstandingIR AS o_IndemnityReserveAmount,\n\t-- *INF*: :LKP.LKP_RESERVEAMOUNT(\r\n\t-- (IIF(IN(i_cause_of_loss,'06'),\r\n\t-- RTRIM(i_s3p_claim_num),'0')),'MEDICAL')\n\tLKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_06_RTRIM_i_s3p_claim_num_0_MEDICAL.DirectLossOutstandingIR AS o_MedicalReserveAmount,\n\t-- *INF*: IIF(i_cause_of_loss='06',i_paid_loss_amt+i_outstanding_amt,0)\n\tIFF(i_cause_of_loss = '06', i_paid_loss_amt + i_outstanding_amt, 0) AS o_TotalMedicalAmount,\n\t-- *INF*: IIF(IN(i_cause_of_loss,'01','05') ,i_paid_loss_amt+i_outstanding_amt,0)\n\tIFF(i_cause_of_loss IN ('01','05'), i_paid_loss_amt + i_outstanding_amt, 0) AS o_TotalIndemnityAmount,\n\t-- *INF*: LTRIM(RTRIM(i_cause_inj_code))\n\tLTRIM(RTRIM(i_cause_inj_code)) AS o_cause_of_inj_code,\n\t'' AS o_InjrDescLoss,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_body_part_code))='N/A','',LTRIM(RTRIM(i_body_part_code)))\n\tIFF(LTRIM(RTRIM(i_body_part_code)) = 'N/A', '', LTRIM(RTRIM(i_body_part_code))) AS o_body_part_code,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_nature_inj_code))='N/A','',LTRIM(RTRIM(i_nature_inj_code)))\n\tIFF(LTRIM(RTRIM(i_nature_inj_code)) = 'N/A', '', LTRIM(RTRIM(i_nature_inj_code))) AS o_nature_of_injury_code,\n\t'' AS o_InjrDescCauseOfLoss,\n\t-- *INF*: SUBSTR(i_class_code,1,4)\n\tSUBSTR(i_class_code, 1, 4) AS o_Classcode,\n\ti_outstanding_amt AS o_OutstandingAmount,\n\ti_FinancialTypeCode AS o_FinancialTypeCode,\n\ti_claim_trans_amt AS o_claim_trans_amt,\n\ti_claim_occurrence_ak_id AS o_claim_occurrence_ak_id\n\tFROM SQ_WCRB_Loss\n\tLEFT JOIN LKP_RESERVEAMOUNT LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_01_05_RTRIM_i_s3p_claim_num_0_INDEMNITY\n\tON LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_01_05_RTRIM_i_s3p_claim_num_0_INDEMNITY.claim_num = (\n    IFF(\n        i_cause_of_loss IN ('01','05'), RTRIM(i_s3p_claim_num), '0'\n    ))\n\tAND LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_01_05_RTRIM_i_s3p_claim_num_0_INDEMNITY.cause_of_loss_long_descript = 'INDEMNITY'\n\n\tLEFT JOIN LKP_RESERVEAMOUNT LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_06_RTRIM_i_s3p_claim_num_0_MEDICAL\n\tON LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_06_RTRIM_i_s3p_claim_num_0_MEDICAL.claim_num = (\n    IFF(\n        i_cause_of_loss IN ('06'), RTRIM(i_s3p_claim_num), '0'\n    ))\n\tAND LKP_RESERVEAMOUNT__IIF_IN_i_cause_of_loss_06_RTRIM_i_s3p_claim_num_0_MEDICAL.cause_of_loss_long_descript = 'MEDICAL'\n\n),\nSQ_DCBILPolicyTerm AS (\n\t--select distinct\r\n\t--pt.PolicyTermId as PolicyTermId,\r\n\t--LTRIM(RTRIM(pt.PolicyReference)) as PolicyReference,\r\n\t--SUM (ItemScheduleAmount - ItemClosedToCashAmount - ItemClosedToCreditAmount - ItemWrittenOffAmount - ItemRedistributedAmount) \r\n\t--over (PARTITION by pt.PolicyReference,pt.PolicyTermId) as DeferredAmount,\r\n\t--pt.PolicyTermEffectiveDate as PolicyTermEffectiveDate,\r\n\t--pt.PolicyTermExpirationDate as PolicyTermExpirationDate\r\n\t--from DCBILPolicyTerm Pt \r\n\t--Inner join DCBILBillItemSchedule BI\r\n\t--on pt.PolicyTermId = BI.PolicyTermId\r\n\t----where  \r\n\t----BI.InstallmentDate >= @{pipeline().parameters.STARTDATE}\r\n\t----and BI.InstallmentDate<@EndDate\r\n\t----and  pt.PolicyReference='A057558'\r\n\t----Query 1\r\n\t---Damodar:-commented old query for 17809 tickect\r\n\t\r\n\t\r\n\t\r\n\tDECLARE @EndDate DATETIME\r\n\t\r\n\t\r\n\t--SET @EndDate = DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 1))\r\n\t\r\n\t\r\n\tSET @EndDate = DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0))\r\n\t\r\n\tselect q1.PolicyTermId,q1.PolicyReference,(isnull(q1.DeferredAmount,0)-isnull(q2.FutureCashAmount,0)-\r\n\t-isnull(q3.FutureCreditAmount,0)-isnull(q4.FutureWriteOff,0)-isnull(q5.FutureWriteOff,0))  DeferredAmount,\r\n\tq1.PolicyTermEffectiveDate,q1.PolicyTermExpirationDate, case when q1.policytermstatuscode in ('FC') then 'Y' else 'N' end flat_cancelled_ind from (\r\n\t\r\n\tselect distinct\r\n\tpt.PolicyTermId as PolicyTermId,\r\n\tLTRIM(RTRIM(pt.PolicyReference)) as PolicyReference,\r\n\tSUM (ItemScheduleAmount - ItemClosedToCashAmount - ItemClosedToCreditAmount - \r\n\tItemWrittenOffAmount - ItemRedistributedAmount) \r\n\tover (PARTITION by pt.PolicyReference,pt.PolicyTermId) as DeferredAmount,\r\n\tpt.PolicyTermEffectiveDate as PolicyTermEffectiveDate,\r\n\tpt.PolicyTermExpirationDate as PolicyTermExpirationDate,\r\n\tpt.policytermstatuscode\r\n\tfrom DCBILPolicyTerm Pt \r\n\tInner join DCBILBillItemSchedule BI\r\n\ton pt.PolicyTermId = BI.PolicyTermId\r\n\t        where \r\n\t\t\t--pt.PolicyReference='0309083' and\r\n\t\t\t\r\n\t\t\t((ItemClosedIndicator = 'N')  or (ItemClosedIndicator = 'Y' and BI.LastUpdatedTimestamp >  @EndDate))\r\n\t\t\t--\t\tnot (BI.InstallmentDate< @EndDate  AND ItemClosedIndicator = 'Y')\r\n\tAnd\r\n\t--BI.FirstInvoiceId IS NULL AND\r\n\t((FirstInvoiceId IS NULL)\r\n\tor (FirstInvoiceId in\t \t \t \r\n\t \t(Select InvoiceId from DCBILInvoice\r\n\t \t \twhere InvoiceProductionDateTime > @EndDate)))\r\n\t\r\n\t        AND ItemId in\r\n\t        (SELECT ItemId\r\n\t               FROM DCBILBillItem\r\n\t               WHERE CoverageReference <> 'WC_AuditNoncomplianceCharge' AND TransactionDate < @EndDate\r\n\t\t\t\t   and ItemEffectiveDate< @EndDate))Q1\r\n\t\r\n\t\r\n\t                     \r\n\t                    left  join \r\n\t--Q2\r\n\t\r\n\t(\r\n\tSELECT pt.policytermid,COALESCE(SUM(Amount),0) as FutureCashAmount \r\n\t   FROM DCBILPaymentAllocation\r\n\t   inner join DCBILPolicyTerm pt on pt.PolicyTermId=DCBILPaymentAllocation.PolicyTermId\r\n\t   WHERE \r\n\t  -- pt.PolicyReference='0309083' and\r\n\t   AllocationStatusCode ='A'\r\n\t     AND AllocationDate > @EndDate\r\n\t     AND AllocationStatusCode = 'A'\r\n\t     AND AllocationReasonCode = 'PYMT'\r\n\t     AND DestinationId in\r\n\t          (SELECT ItemScheduleId\r\n\t                       FROM DCBILBillItemSchedule\r\n\t                     WHERE \r\n\t\t\t\t\t\t ((ItemClosedIndicator = 'N')  or (ItemClosedIndicator = 'Y' and LastUpdatedTimestamp >  @EndDate))\r\n\t\t\t--\t\tnot (BI.InstallmentDate< @EndDate  AND ItemClosedIndicator = 'Y')\r\n\tAnd\r\n\t--BI.FirstInvoiceId IS NULL AND\r\n\t((FirstInvoiceId IS NULL)\r\n\tor (FirstInvoiceId in\t \t \t \r\n\t \t(Select InvoiceId from DCBILInvoice\r\n\t \t \twhere InvoiceProductionDateTime > @EndDate)))\r\n\t                         --NOT (LastUpdatedTimestamp < @EndDate AND ItemClosedIndicator = 'Y')\r\n\t                        AND ItemId in\r\n\t                              (SELECT ItemId\r\n\t                                FROM DCBILBillItem\r\n\t                               WHERE CoverageReference <> 'WC_AuditNoncomplianceCharge' AND TransactionDate < @EndDate\r\n\t\t\t\t\t\t\t\t   and ItemEffectiveDate< @EndDate))\r\n\t                                                   group by pt.PolicyTermId) Q2\r\n\t\r\n\t\r\n\t                                                   on q2.policytermid=q1.policytermid\r\n\t\r\n\t                                                   \r\n\t\r\n\t                                                left   join\r\n\t\r\n\t--Q3\r\n\t(SELECT pt.policytermid,COALESCE(SUM(Amount),0) as FutureCreditAmount \r\n\t   FROM DCBILCreditAllocation\r\n\t   inner join DCBILPolicyTerm pt on pt.PolicyTermId=DCBILCreditAllocation.PolicyTermId\r\n\t   WHERE \r\n\t   --pt.PolicyReference='0309083' and\r\n\t   AllocationDate > @EndDate\r\n\t     AND AllocationStatusIndicator = 'A'\r\n\t     AND ItemId in\r\n\t        (SELECT ItemId\r\n\t               FROM DCBILBillItem\r\n\t                 WHERE   CoverageReference <> 'WC_AuditNoncomplianceCharge' AND TransactionDate < @EndDate\r\n\t\t\t\t\t and ItemEffectiveDate< @EndDate)\r\n\tgroup by pt.policytermid) q3\r\n\t\r\n\ton q3.PolicyTermId=q1.PolicyTermId\r\n\t\r\n\tleft join \r\n\t--Q4\r\n\t(\r\n\tSELECT pt.policytermid,COALESCE(SUM(WriteOffAmount),0) as FutureWriteOff\r\n\t       FROM DCBILReceivableWriteOff\r\n\t\t   inner join DCBILPolicyTerm pt on pt.policytermid=DCBILReceivableWriteOff.PolicyTermId\r\n\t       WHERE  \r\n\t\t  -- pt.PolicyReference='0309083' and\r\n\t\t   WriteOffProcessedDateTime > @EndDate\r\n\tgroup by pt.PolicyTermId) Q4\r\n\t\r\n\ton q4.PolicyTermId=q1.PolicyTermId\r\n\t\r\n\tleft join\r\n\t--Q5\r\n\t(\r\n\tSELECT pt.policytermid,COALESCE(SUM(WriteOffAmount),0) as FutureWriteOff\r\n\t       FROM DCBILReceivableWriteOff\r\n\t\t    inner join DCBILPolicyTerm pt on pt.policytermid=DCBILReceivableWriteOff.PolicyTermId\r\n\t       WHERE \r\n\t\t  -- pt.PolicyReference='0309083' and\r\n\t\t   ReversalDateTime > @EndDate\r\n\tgroup by pt.PolicyTermId) Q5\r\n\t\r\n\ton q5.PolicyTermId=q1.PolicyTermId\r\n\t\r\n\t\r\n\t-- Final output for amounts by policytermid --> Q1-Q2-Q3-Q4-Q5\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tPolicyTermId,\n\tPolicyReference,\n\tDeferredAmount,\n\tPolicyTermEffectiveDate,\n\tPolicyTermExpirationDate,\n\tFlat_Cancelled_ind,\n\t-- *INF*: SUM(DeferredAmount)\n\tSUM(DeferredAmount) AS o_DeferredAmount\n\tFROM SQ_DCBILPolicyTerm\n\tGROUP BY PolicyReference\n),\nSQ_WCRB_Premium AS (\n\tDECLARE @STARTDATE DATETIME = @{pipeline().parameters.STARTDATE},\r\n\t\t\t@ENDDATE DATETIME =  @{pipeline().parameters.ENDDATE};\r\n\t\t\t\r\n\t\t/*\twith  PolicyAkIDPerQ as \r\n\t\t(select distinct policyakid from EarnedPremiumMonthlyCalculation EP1 where\r\n\t \tep1.SourceSystemID='DCT' and   ep1.RunDate >= @STARTDATE and EP1.RunDate< @ENDDATE) */\r\n\t\r\n\t\t\t--DCT Direct Writen Premium\r\n\t\t SELECT distinct POL.pol_id,\r\n\t\t\t   -1 as RiskLocationID,--RL.RiskLocationID,\r\n\t\t\t   -1 as PolicyCoverageID,--PC.PolicyCoverageID,\r\n\t\t\t   -1 as RatingCoverageID, --RC.RatingCoverageID,\r\n\t\t\t   -1 as PremiumTransactionID, --PT.PremiumTransactionID,\r\n\t\t\t   BSC.BureauStatisticalCodeID,\r\n\t\t\t   PMC.PremiumMasterCalculationID,\r\n\t\t\t   PMC.PremiumMasterRunDate,\r\n\t\t\t   POL.pol_sym,\r\n\t\t\t   POL.pol_num,\r\n\t\t\t   POL.pol_mod,\r\n\t\t\t   POL.pol_eff_date,\r\n\t\t\t   pol.pol_exp_date,\r\n\t\t\t   CC.name,\r\n\t\t\t   case when RTRIM(PMC.PremiumMasterPremiumType) in ('C','D') and \r\n\t\t\t   PMC.PremiumMasterReasonAmendedCode in('CWO' , 'COL', 'CWB') then 0 \r\n\t        when PMC.PremiumMasterPremiumType='D' and PMC.PremiumMasterReasonAmendedCode != 'CWO'\r\n\t\t\tand PMC.PremiumMasterReasonAmendedCode != 'CWB' then PMC.PremiumMasterPremium\r\n\t        end Derived_PremiumMasterDirectWrittenPremium,\r\n\t\t\t  0 as EarnedPremium,--ISNULL(EPMC.EarnedPremium,0) as EarnedPremium,\r\n\t\t\t  0 as UnearnedPremium,-- ISNULL(EPMC.UnearnedPremium,0) as UnearnedPremium,\r\n\t\t\t   PMC.PremiumMasterAgencyCommissionRate,\r\n\t\t\t   PMC.SourceSystemID,\r\n\t\t\t   CASE WHEN POL.pol_cancellation_ind='Y' THEN 'Y' ELSE 'N' END FLAT_CANCELLED_IND,\r\n\t\t\t   case \r\n\t                            when RTRIM(PMC.PremiumMasterPremiumType) in ('C','D') and \r\n\t\t\t                PMC.PremiumMasterReasonAmendedCode in('CWO' , 'COL', 'CWB') then 0\r\n\t                            when RTRIM(RC.CoverageType) <> 'AuditNoncomplianceCharge' then 0 \r\n\t                            when PMC.PremiumMasterPremiumType='D' and  PMC.PremiumMasterReasonAmendedCode != 'CWO'\r\n\t                  \t\tand PMC.PremiumMasterReasonAmendedCode != 'CWB' \r\n\t                          and RTRIM(RC.CoverageType) = 'AuditNoncomplianceCharge' \r\n\t                          then PMC.PremiumMasterPremium\r\n\t                          else 0\r\n\t                 end AuditNonComplianceChargePremium\r\n\t\tFROM dbo.PremiumTransaction PT \tjoin \r\n\t\tdbo.PremiumMasterCalculation PMC\r\n\t\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tand PT.CurrentSnapshotFlag=1\tand PMC.CurrentSnapshotFlag=1\r\n\t\tjoin dbo.RatingCoverage RC\r\n\t\ton RC.RatingCoverageAKID=PT.RatingCoverageAKID\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate\r\n\t      --and RC.CurrentSnapshotFlag=1\r\n\t\t--join @{pipeline().parameters.DBO}.PolicyCoverage PC\r\n\t\t--on PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\t--and PC.CurrentSnapshotFlag=1\r\n\t\t--join @{pipeline().parameters.DBO}.RiskLocation RL\r\n\t\t--on PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\t--and RL.CurrentSnapshotFlag=1\r\n\t\tjoin v2.policy POL\r\n\t\ton POL.pol_ak_id=PMC.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1\r\n\t\tjoin dbo.contract_customer CC\r\n\t\ton CC.contract_cust_ak_id=POL.contract_cust_ak_id\r\n\t\tand CC.crrnt_snpsht_flag=1\r\n\t\tjoin  dbo.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId and ISG.CurrentSnapshotFlag=1\r\n\t\tleft join dbo.BureauStatisticalCode BSC\r\n\t\ton BSC.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tand BSC.CurrentSnapshotFlag=1\r\n\t\twhere \r\n\t\tPMC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand PMC.CurrentSnapshotFlag=1\r\n\t\tand InsuranceSegmentAbbreviation = 'Pool'\r\n\t\tand PMC.PremiumMasterPremiumType = 'D'\r\n\t\tand PMC.Premiummasterrundate >= @STARTDATE and PMC.Premiummasterrundate < @ENDDATE\r\n\t\t--and pol.pol_num in ('0315770')\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\r\n\t\t-- DCT for Earned Premium and Unearned Premium\r\n\t\t SELECT  POL.pol_id,\r\n\t\t\t  -1 as RiskLocationID,--RL.RiskLocationID,\r\n\t\t\t   -1 as PolicyCoverageID,--PC.PolicyCoverageID,\r\n\t\t\t   -1 as RatingCoverageID, --RC.RatingCoverageID,\r\n\t\t\t   -1 as PremiumTransactionID, --PT.PremiumTransactionID,\r\n\t\t\t   BSC.BureauStatisticalCodeID,\r\n\t\t\t   PMC.PremiumMasterCalculationID,\r\n\t\t\t\tEPMC.RunDate as PremiumMasterRunDate,\r\n\t\t\t   POL.pol_sym,\r\n\t\t\t   POL.pol_num,\r\n\t\t\t   POL.pol_mod,\r\n\t\t\t   POL.pol_eff_date,\r\n\t\t\t   pol.pol_exp_date,\r\n\t\t\t   CC.name,\r\n\t\t\t\t0 as PremiumMasterPremium,\r\n\t\t\t   ISNULL(EPMC.EarnedPremium,0) as EarnedPremium,\r\n\t\t\t   ISNULL(EPMC.UnearnedPremium,0) as UnearnedPremium,\r\n\t\t\t   PMC.PremiumMasterAgencyCommissionRate,\r\n\t\t\t   PMC.SourceSystemID,\r\n\t\t\t   CASE WHEN POL.pol_cancellation_ind='Y' THEN 'Y' ELSE 'N' END FLAT_CANCELLED_IND,\r\n\t                0 as AuditNonComplianceChargePremium\r\n\t\tFROM \r\n\t\tdbo.EarnedPremiumMonthlyCalculation EPMC\r\n\t\tinner join\r\n\t\t\t(select EP.Premiummastercalculationpkid,max(EP.rundate) rundate \r\n\t\t\tfrom dbo.EarnedPremiumMonthlyCalculation EP\r\n\t\t\twhere EP.RunDate< @ENDDATE and EP.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}' /*AND  exists (select 1 from PolicyAkIDPerQ EP1 where\t \r\n\t\t\t ep.PolicyAKID =ep1.PolicyAKID)  */\r\n\t\t\tgroup by Premiummastercalculationpkid) B\r\n\t\t\t\tON B.PremiumMasterCalculationPKID=EPMC.PremiumMasterCalculationPKID and B.rundate=EPMC.RunDate\r\n\t\tinner join dbo.PremiumMasterCalculation PMC on EPMC.PremiumMasterCalculationPKID=PMC.PremiumMasterCalculationID \r\n\t\tand EPMC.CurrentSnapshotFlag=1 and PMC.CurrentSnapshotFlag=1 \r\n\t\tand EPMC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' and PMC.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}' and EPMC.RunDate< @ENDDATE\r\n\t\tinner join dbo.PremiumTransaction PT \t\r\n\t\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tand PT.CurrentSnapshotFlag=1\tand PMC.CurrentSnapshotFlag=1\r\n\t\tinner join dbo.RatingCoverage RC\r\n\t\ton RC.RatingCoverageAKID=PT.RatingCoverageAKID\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate and RTRIM(RC.CoverageType) <> 'AuditNoncomplianceCharge'\r\n\t--\tand EPMC.RunDate >= @STARTDATE   and EPMC.RunDate< @ENDDATE\r\n\t\t\r\n\t\t--\tinner join @{pipeline().parameters.DBO}.PremiumMasterCalculation PMC on EPMC.PremiumMasterCalculationPKID=PMC.PremiumMasterCalculationID and EPMC.CurrentSnapshotFlag=1 and EPMC.SourceSystemId='DCT'\r\n\t\t--inner join @{pipeline().parameters.DBO}.PremiumTransaction PT on PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID and PT.CurrentSnapshotFlag=1 and PMC.CurrentSnapshotFlag=1\r\n\t\t--join @{pipeline().parameters.DBO}.RatingCoverage RC\r\n\t\t--on RC.RatingCoverageAKID=PT.RatingCoverageAKID\r\n\t\t--and RC.EffectiveDate=PT.EffectiveDate--and RC.CurrentSnapshotFlag=1\r\n\t\t--join @{pipeline().parameters.DBO}.PolicyCoverage PC\r\n\t\t--on PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\t--and PC.CurrentSnapshotFlag=1\r\n\t\t--join @{pipeline().parameters.DBO}.RiskLocation RL\r\n\t\t--on PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\t--and RL.CurrentSnapshotFlag=1\r\n\t\tjoin V2.policy POL\r\n\t\ton POL.pol_ak_id=PMC.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1\r\n\t\tjoin dbo.contract_customer CC\r\n\t\ton CC.contract_cust_ak_id=POL.contract_cust_ak_id\r\n\t\tand CC.crrnt_snpsht_flag=1\r\n\t\tjoin  dbo.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\t\tleft join dbo.BureauStatisticalCode BSC\r\n\t\ton BSC.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tand BSC.CurrentSnapshotFlag=1\r\n\t\twhere \r\n\t\tPMC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand InsuranceSegmentAbbreviation = '@{pipeline().parameters.INSURANCESEGMENTABBREVIATION}'\r\n\t\tand PMC.PremiumMasterPremiumType = 'D'\n),\nJNR_PolicyTerm AS (SELECT\n\tSQ_WCRB_Premium.pol_id, \n\tSQ_WCRB_Premium.RiskLocationID, \n\tSQ_WCRB_Premium.PolicyCoverageID, \n\tSQ_WCRB_Premium.StatisticalCoverageID, \n\tSQ_WCRB_Premium.PremiumTransactionID, \n\tSQ_WCRB_Premium.BureauStatisticalCodeID, \n\tSQ_WCRB_Premium.PremiumMasterCalculationID, \n\tSQ_WCRB_Premium.PremiumMasterRunDate, \n\tSQ_WCRB_Premium.pol_sym, \n\tSQ_WCRB_Premium.pol_num, \n\tSQ_WCRB_Premium.pol_mod, \n\tSQ_WCRB_Premium.pol_eff_date, \n\tSQ_WCRB_Premium.pol_exp_date, \n\tSQ_WCRB_Premium.name, \n\tSQ_WCRB_Premium.PremiumMasterPremium, \n\tSQ_WCRB_Premium.EarnedPremium, \n\tSQ_WCRB_Premium.UnearnedPremium, \n\tSQ_WCRB_Premium.PremiumMasterAgencyCommissionRate, \n\tSQ_WCRB_Premium.SourceSystemID, \n\tSQ_WCRB_Premium.Flat_Cancelled_Ind AS Flat_Cancelled_Ind_edw, \n\tSQ_WCRB_Premium.AuditNonComplianceChargePremium, \n\tAGG_RemoveDuplicates.PolicyReference, \n\tAGG_RemoveDuplicates.PolicyTermEffectiveDate, \n\tAGG_RemoveDuplicates.PolicyTermExpirationDate, \n\tAGG_RemoveDuplicates.Flat_Cancelled_ind, \n\tAGG_RemoveDuplicates.o_DeferredAmount AS DeferredAmount\n\tFROM SQ_WCRB_Premium\n\tLEFT OUTER JOIN AGG_RemoveDuplicates\n\tON AGG_RemoveDuplicates.PolicyReference = SQ_WCRB_Premium.pol_num AND AGG_RemoveDuplicates.PolicyTermEffectiveDate = SQ_WCRB_Premium.pol_eff_date AND AGG_RemoveDuplicates.PolicyTermExpirationDate = SQ_WCRB_Premium.pol_exp_date AND AGG_RemoveDuplicates.Flat_Cancelled_ind = SQ_WCRB_Premium.Flat_Cancelled_Ind\n),\nEXP_Premiumdata AS (\n\tSELECT\n\tpol_id AS i_pol_id,\n\tRiskLocationID AS i_RiskLocationID,\n\tPolicyCoverageID AS i_PolicyCoverageID,\n\tStatisticalCoverageID AS i_StatisticalCoverageID,\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tBureauStatisticalCodeID AS i_BureauStatisticalCodeID,\n\tPremiumMasterCalculationID AS i_PremiumMasterCalculationID,\n\tPremiumMasterRunDate AS i_PremiumMasterRunDate,\n\tpol_sym AS i_pol_sym,\n\tpol_num AS i_pol_num,\n\tpol_mod AS i_pol_mod,\n\tpol_eff_date AS i_pol_eff_date,\n\tname AS i_name,\n\tPremiumMasterPremium AS i_PremiumMasterPremium,\n\tEarnedPremium AS i_EarnedPremium,\n\tUnearnedPremium AS i_UnearnedPremium,\n\tPremiumMasterAgencyCommissionRate AS i_PremiumMasterAgencyCommissionRate,\n\tSourceSystemID AS i_SourceSystemID,\n\tAuditNonComplianceChargePremium AS i_AuditNonComplianceChargePremium,\n\tDeferredAmount AS i_DeferredAmount,\n\ti_pol_id AS o_pol_id,\n\ti_RiskLocationID AS o_RiskLocationID,\n\ti_PolicyCoverageID AS o_PolicyCoverageID,\n\ti_StatisticalCoverageID AS o_StatisticalCoverageID,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\ti_BureauStatisticalCodeID AS o_BureauStatisticalCodeID,\n\ti_PremiumMasterCalculationID AS o_PremiumMasterCalculationID,\n\ti_PremiumMasterRunDate AS o_PremiumMasterRunDate,\n\ti_pol_sym || i_pol_num || i_pol_mod AS o_PolKey,\n\t-- *INF*: TO_CHAR(i_pol_eff_date,'MMDDYYYY')\n\tTO_CHAR(i_pol_eff_date, 'MMDDYYYY') AS o_pol_eff_date,\n\t-- *INF*: SUBSTR(i_name,1,90)\n\tSUBSTR(i_name, 1, 90) AS o_name,\n\t'48' AS o_StateCode,\n\ti_PremiumMasterPremium AS o_PremiumMasterPremium,\n\ti_EarnedPremium AS o_EarnedPremium,\n\ti_UnearnedPremium AS o_UnearnedPremium,\n\ti_DeferredAmount AS o_DeferredPremium,\n\ti_PremiumMasterAgencyCommissionRate AS o_PremiumMasterAgencyCommissionRate,\n\ti_PremiumMasterPremium * i_PremiumMasterAgencyCommissionRate AS o_CommissionPaid,\n\ti_AuditNonComplianceChargePremium AS o_AuditNonComplianceChargePremium\n\tFROM JNR_PolicyTerm\n),\nLKP_body_part_sup AS (\n\tSELECT\n\tbody_part_support_id,\n\tbody_part_code\n\tFROM (\n\t\tSELECT body_part_support_id as body_part_support_id, \r\n\t\tLTRIM(RTRIM(body_part_code)) as body_part_code \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.body_part_sup\r\n\t\tWHERE crrnt_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY body_part_code ORDER BY body_part_support_id) = 1\n),\nLKP_cause_of_injury_sup AS (\n\tSELECT\n\tcause_of_inj_support_id,\n\tcause_of_inj_code\n\tFROM (\n\t\tSELECT cause_of_inj_support_id as cause_of_inj_support_id, \r\n\t\tLTRIM(RTRIM(cause_of_inj_code)) as cause_of_inj_code \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.cause_of_injury_sup\r\n\t\tWHERE crrnt_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cause_of_inj_code ORDER BY cause_of_inj_support_id) = 1\n),\nLKP_nature_of_injury_sup AS (\n\tSELECT\n\tnature_of_inj_support_id,\n\tnature_of_inj_code\n\tFROM (\n\t\tSELECT nature_of_inj_support_id as nature_of_inj_support_id, \r\n\t\tLTRIM(RTRIM(nature_of_inj_code)) as nature_of_inj_code \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.nature_of_injury_sup\r\n\t\tWHERE crrnt_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY nature_of_inj_code ORDER BY nature_of_inj_support_id) = 1\n),\nUnion AS (\n\tSELECT o_pol_id AS pol_id, o_RiskLocationID AS RiskLocationID, o_PolicyCoverageID AS PolicyCoverageID, o_StatisticalCoverageID AS StatisticalCoverageID, o_PremiumTransactionID AS PremiumTransactionID, o_BureauStatisticalCodeID AS BureauStatisticalCodeID, o_PremiumMasterCalculationID AS PremiumMasterCalculationID, o_PremiumMasterRunDate AS PremiumMasterRunDate, o_PolKey AS PolKey, o_pol_eff_date AS pol_eff_date, o_name AS name, o_StateCode AS StateCode, o_PremiumMasterPremium AS PremiumMasterPremium, o_EarnedPremium AS EarnedPremium, o_UnearnedPremium AS UnearnedPremium, o_DeferredPremium AS DeferredPremium, o_PremiumMasterAgencyCommissionRate AS PremiumMasterAgencyCommissionRate, o_CommissionPaid AS CommissionPaid, o_AuditNonComplianceChargePremium AS AuditNonComplianceChargePremium\n\tFROM EXP_Premiumdata\n\tUNION\n\tSELECT o_wc_claimant_det_id AS wc_claimant_det_id, o_claim_occurrence_id AS Claim_Occurrence_Id, o_claim_party_occurrence_id AS Claim_Party_Occurrence_Id, o_claimant_cov_det_id AS Claimant_Cov_Det_Id, o_loss_master_calculation_id AS Loss_Master_Calculation_Id, o_pol_id AS pol_id, o_RiskLocationID AS RiskLocationID, o_PolicyCoverageID AS PolicyCoverageID, o_StatisticalCoverageID AS StatisticalCoverageID, o_loss_master_run_date AS PremiumMasterRunDate, o_PolKey AS PolKey, o_PolicyEffectiveDate AS pol_eff_date, o_NameOfInsured AS name, o_StateCode AS StateCode, o_AccidentYear AS AccidentYear, o_ClaimNum AS ClaimNum, o_ClaimClosedDate AS ClaimClosedDate, o_ClaimOccurrenceStatusCode AS ClaimOccurrenceStatusCode, o_PaidLossAmt AS PaidLossAmt, o_TypeLossCode AS TypeLossCode, o_IndemnityPaymentAmount AS IndemnityPaymentAmount, o_MedicalPaymentAmount AS MedicalPaymentAmount, o_RecoveryAmount AS RecoveryAmount, o_IndemnityReserveAmount AS IndemnityReserveAmount, o_MedicalReserveAmount AS MedicalReserveAmount, o_TotalMedicalAmount AS TotalMedicalAmount, o_TotalIndemnityAmount AS TotalIndemnityAmount, cause_of_inj_support_id AS CauseOfInjSupportId, o_InjrDescLoss AS InjrDescLoss, body_part_support_id AS BodyPartSupportId, o_body_part_code AS InjrDescPartOfBody, nature_of_inj_support_id AS NatureOfInjSupportId, o_nature_of_injury_code AS InjrDescNatureOfInjr, o_InjrDescCauseOfLoss AS InjrDescCauseOfLoss, o_Classcode AS Classcode, o_OutstandingAmount AS OutstandingAmount, o_claim_trans_amt AS claim_trans_amt, o_FinancialTypeCode AS FinancialTypeCode\n\tFROM EXP_Lossdata\n\t-- Manually join with LKP_body_part_sup\n\t-- Manually join with LKP_cause_of_injury_sup\n\t-- Manually join with LKP_nature_of_injury_sup\n),\nEXP_SetDefaultValue AS (\n\tSELECT\n\twc_claimant_det_id,\n\t-1 AS o_ClaimantId,\n\tClaim_Occurrence_Id,\n\tClaim_Party_Occurrence_Id,\n\tClaimant_Cov_Det_Id,\n\tLoss_Master_Calculation_Id,\n\tpol_id,\n\tRiskLocationID,\n\tPolicyCoverageID,\n\tStatisticalCoverageID,\n\tPremiumTransactionID,\n\tBureauStatisticalCodeID,\n\tPremiumMasterCalculationID,\n\tPremiumMasterRunDate,\n\tPolKey,\n\tpol_eff_date,\n\tname,\n\tStateCode,\n\tPremiumMasterPremium,\n\tEarnedPremium,\n\tUnearnedPremium,\n\tDeferredPremium,\n\tAccidentYear,\n\tClaimNum,\n\tClaimClosedDate,\n\tClaimOccurrenceStatusCode,\n\tPaidLossAmt,\n\tTypeLossCode,\n\tIndemnityPaymentAmount,\n\tMedicalPaymentAmount,\n\tRecoveryAmount,\n\tIndemnityReserveAmount,\n\tMedicalReserveAmount,\n\tTotalMedicalAmount,\n\tTotalIndemnityAmount,\n\tCauseOfInjSupportId,\n\tInjrDescLoss,\n\tBodyPartSupportId,\n\tInjrDescPartOfBody,\n\tNatureOfInjSupportId,\n\tInjrDescNatureOfInjr,\n\tTypeDisabilitySupportId,\n\tInjrDescCauseOfLoss,\n\tPremiumMasterAgencyCommissionRate,\n\tCommissionPaid,\n\tClasscode,\n\tOutstandingAmount,\n\tFinancialTypeCode,\n\tclaim_trans_amt,\n\t-- *INF*: TRUNC(@{pipeline().parameters.EXTRACTDATE},'D')\n\tCAST(TRUNC(@{pipeline().parameters.EXTRACTDATE}, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tAuditNonComplianceChargePremium\n\tFROM Union\n),\nLKP_WcrbWorkTable AS (\n\tSELECT\n\tPremiumMasterCalculationID,\n\tLossMasterCalculationId\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumMasterCalculationID,\n\t\t\tLossMasterCalculationId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WcrbWorkTable\n\t\tWHERE PremiumMasterRunDate>=@{pipeline().parameters.STARTDATE} and PremiumMasterRunDate<@{pipeline().parameters.ENDDATE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumMasterCalculationID,LossMasterCalculationId ORDER BY PremiumMasterCalculationID) = 1\n),\nFIL_data AS (\n\tSELECT\n\tLKP_WcrbWorkTable.PremiumMasterCalculationID AS Lkp_PremiumMasterCalculationID, \n\tEXP_SetDefaultValue.wc_claimant_det_id, \n\tEXP_SetDefaultValue.o_ClaimantId AS ClaimantId, \n\tEXP_SetDefaultValue.Claim_Occurrence_Id, \n\tEXP_SetDefaultValue.Claim_Party_Occurrence_Id, \n\tEXP_SetDefaultValue.Claimant_Cov_Det_Id, \n\tEXP_SetDefaultValue.Loss_Master_Calculation_Id, \n\tEXP_SetDefaultValue.pol_id, \n\tEXP_SetDefaultValue.RiskLocationID, \n\tEXP_SetDefaultValue.PolicyCoverageID, \n\tEXP_SetDefaultValue.StatisticalCoverageID, \n\tEXP_SetDefaultValue.PremiumTransactionID, \n\tEXP_SetDefaultValue.BureauStatisticalCodeID, \n\tEXP_SetDefaultValue.PremiumMasterCalculationID, \n\tEXP_SetDefaultValue.PremiumMasterRunDate, \n\tEXP_SetDefaultValue.PolKey, \n\tEXP_SetDefaultValue.pol_eff_date, \n\tEXP_SetDefaultValue.name, \n\tEXP_SetDefaultValue.StateCode, \n\tEXP_SetDefaultValue.PremiumMasterPremium, \n\tEXP_SetDefaultValue.EarnedPremium, \n\tEXP_SetDefaultValue.UnearnedPremium, \n\tEXP_SetDefaultValue.DeferredPremium, \n\tEXP_SetDefaultValue.AccidentYear, \n\tEXP_SetDefaultValue.ClaimNum, \n\tEXP_SetDefaultValue.ClaimClosedDate, \n\tEXP_SetDefaultValue.ClaimOccurrenceStatusCode, \n\tEXP_SetDefaultValue.PaidLossAmt, \n\tEXP_SetDefaultValue.TypeLossCode, \n\tEXP_SetDefaultValue.IndemnityPaymentAmount, \n\tEXP_SetDefaultValue.MedicalPaymentAmount, \n\tEXP_SetDefaultValue.RecoveryAmount, \n\tEXP_SetDefaultValue.IndemnityReserveAmount, \n\tEXP_SetDefaultValue.MedicalReserveAmount, \n\tEXP_SetDefaultValue.TotalMedicalAmount, \n\tEXP_SetDefaultValue.TotalIndemnityAmount, \n\tEXP_SetDefaultValue.CauseOfInjSupportId, \n\tEXP_SetDefaultValue.InjrDescLoss, \n\tEXP_SetDefaultValue.BodyPartSupportId, \n\tEXP_SetDefaultValue.InjrDescPartOfBody, \n\tEXP_SetDefaultValue.NatureOfInjSupportId, \n\tEXP_SetDefaultValue.InjrDescNatureOfInjr, \n\tEXP_SetDefaultValue.TypeDisabilitySupportId, \n\tEXP_SetDefaultValue.InjrDescCauseOfLoss, \n\tEXP_SetDefaultValue.PremiumMasterAgencyCommissionRate, \n\tEXP_SetDefaultValue.CommissionPaid, \n\tEXP_SetDefaultValue.Classcode, \n\tEXP_SetDefaultValue.OutstandingAmount, \n\tEXP_SetDefaultValue.FinancialTypeCode, \n\tEXP_SetDefaultValue.claim_trans_amt, \n\tEXP_SetDefaultValue.o_ExtractDate AS ExtractDate, \n\tEXP_SetDefaultValue.o_SourceSystemID AS SourceSystemID, \n\tEXP_SetDefaultValue.o_AuditID AS AuditID, \n\tEXP_SetDefaultValue.AuditNonComplianceChargePremium\n\tFROM EXP_SetDefaultValue\n\tLEFT JOIN LKP_WcrbWorkTable\n\tON LKP_WcrbWorkTable.PremiumMasterCalculationID = EXP_SetDefaultValue.PremiumMasterCalculationID AND LKP_WcrbWorkTable.LossMasterCalculationId = EXP_SetDefaultValue.Loss_Master_Calculation_Id\n\tWHERE ISNULL(Lkp_PremiumMasterCalculationID)\n),\nTGT_WcrbWorkTable_Insert AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WcrbWorkTable\n\t(WCClaimantDetId, ClaimantId, ClaimOccurrenceId, ClaimPartyOccurrenceId, ClaimantCovDetId, LossMasterCalculationId, PolId, RiskLocationID, PolicyCoverageID, StatisticalCoverageID, PremiumTransactionID, BureauStatisticalCodeID, PremiumMasterCalculationID, PremiumMasterRunDate, PolKey, PolicyEffectiveDae, NameOfInsured, StateCode, WrittenPremium, EarnedPremium, UneranedPremium, DeferredPremium, AccidentYear, ClaimNum, ClaimClosedDate, ClaimOccurrenceStatusCode, PaidLossAmt, TypeLossCode, IndemnityPaymentAmount, MedicalPaymentAmount, RecoveryAmount, IndemnityReserveAmount, MedicalReserveAmount, TotalMedicalAmount, TotalIndemnityAmount, CauseOfInjSupportId, InjrDescLoss, BodyPartSupportId, InjrDescPartOfBody, NatureOfInjSupportId, InjrDescNatureOfInjr, TypeDisabilitySupportId, InjrDescCauseOfLoss, PremiumMasterAgencyCommissionRate, CommissionPaid, ClassCode, OutstandingAmount, FinancialTypeCode, ClaimTransactionAmount, ExtractDate, SourceSystemId, AuditID, AuditNonComplianceChargePremium)\n\tSELECT \n\twc_claimant_det_id AS WCCLAIMANTDETID, \n\tCLAIMANTID, \n\tClaim_Occurrence_Id AS CLAIMOCCURRENCEID, \n\tClaim_Party_Occurrence_Id AS CLAIMPARTYOCCURRENCEID, \n\tClaimant_Cov_Det_Id AS CLAIMANTCOVDETID, \n\tLoss_Master_Calculation_Id AS LOSSMASTERCALCULATIONID, \n\tpol_id AS POLID, \n\tRISKLOCATIONID, \n\tPOLICYCOVERAGEID, \n\tSTATISTICALCOVERAGEID, \n\tPREMIUMTRANSACTIONID, \n\tBUREAUSTATISTICALCODEID, \n\tPREMIUMMASTERCALCULATIONID, \n\tPREMIUMMASTERRUNDATE, \n\tPOLKEY, \n\tpol_eff_date AS POLICYEFFECTIVEDAE, \n\tname AS NAMEOFINSURED, \n\tSTATECODE, \n\tPremiumMasterPremium AS WRITTENPREMIUM, \n\tEARNEDPREMIUM, \n\tUnearnedPremium AS UNERANEDPREMIUM, \n\tDEFERREDPREMIUM, \n\tACCIDENTYEAR, \n\tCLAIMNUM, \n\tCLAIMCLOSEDDATE, \n\tCLAIMOCCURRENCESTATUSCODE, \n\tPAIDLOSSAMT, \n\tTYPELOSSCODE, \n\tINDEMNITYPAYMENTAMOUNT, \n\tMEDICALPAYMENTAMOUNT, \n\tRECOVERYAMOUNT, \n\tINDEMNITYRESERVEAMOUNT, \n\tMEDICALRESERVEAMOUNT, \n\tTOTALMEDICALAMOUNT, \n\tTOTALINDEMNITYAMOUNT, \n\tCAUSEOFINJSUPPORTID, \n\tINJRDESCLOSS, \n\tBODYPARTSUPPORTID, \n\tINJRDESCPARTOFBODY, \n\tNATUREOFINJSUPPORTID, \n\tINJRDESCNATUREOFINJR, \n\tTYPEDISABILITYSUPPORTID, \n\tINJRDESCCAUSEOFLOSS, \n\tPREMIUMMASTERAGENCYCOMMISSIONRATE, \n\tCOMMISSIONPAID, \n\tClasscode AS CLASSCODE, \n\tOUTSTANDINGAMOUNT, \n\tFINANCIALTYPECODE, \n\tclaim_trans_amt AS CLAIMTRANSACTIONAMOUNT, \n\tEXTRACTDATE, \n\tSourceSystemID AS SOURCESYSTEMID, \n\tAUDITID, \n\tAUDITNONCOMPLIANCECHARGEPREMIUM\n\tFROM FIL_data\n),\nSQ_DCBILCommissionAuthorizationStage AS (\n\tDECLARE @STARTDATE DATETIME = @{pipeline().parameters.STARTDATE},\r\n\t\t\t@ENDDATE DATETIME =  @{pipeline().parameters.ENDDATE};\r\n\t\r\n\tSELECT \r\n\tSUM(CA.AuthorizedAmount) as AuthorizedAmount,\r\n\tPT.PolicyReference as PolicyReference,\r\n\t--replace(convert(char(10), PolicyTermEffectiveDate, 101), '/', '') as PolicyTermEffectiveDate\r\n\tPolicyTermEffectiveDate,\r\n\t@ENDDATE-1 as Rundate\r\n\tFROM wc_stage..DCBILCommissionAuthorizationStage CA\r\n\tINNER JOIN wc_stage..DCBILPolicyTermStage PT ON CA.PolicyTermId = PT.PolicyTermID \r\n\tWHERE\r\n\tCA.AuthorizationTypeCode = '@{pipeline().parameters.AUTHORIZATIONTYPECODE}'\r\n\tAND CA.CommissionSchemeReference = '@{pipeline().parameters.COMMISSIONSCHEMEREFERENCE}'\r\n\tAND CA.LastUpdatedTimestamp >= @STARTDATE\r\n\tAND CA.LastUpdatedTimestamp <  @ENDDATE\r\n\t--and ca.AuthorizationDate >= @STARTDATE\r\n\t--and ca.AuthorizationDate<  @ENDDATE\r\n\tgroup by pt.PolicyReference,PT.PolicyTermEffectiveDate\n),\nEXP_CollectColumns AS (\n\tSELECT\n\tPolicyReference,\n\tPolicyTermEffectiveDate,\n\tAuthorizedAmount,\n\tRundate\n\tFROM SQ_DCBILCommissionAuthorizationStage\n),\nlkp_V2Policy_EffctiveDate AS (\n\tSELECT\n\tpol_sym,\n\tpol_mod,\n\tpol_key,\n\tname,\n\tpol_num,\n\tpol_eff_date\n\tFROM (\n\t\tselect \r\n\t\t pol.pol_sym as pol_sym,\r\n\t\t pol.Pol_mod as pol_mod,\r\n\t\t  pol.pol_key as pol_key,\r\n\t\t  cc.name as name ,\r\n\t\t  pol.pol_num as pol_num,\r\n\t\t pol.pol_eff_date as pol_eff_date\r\n\t\t  \r\n\t\t  from \r\n\t\t ( select distinct pol_sym,pol_num,pol_eff_date,max(pol_key) pol_key,max(Pol_mod) Pol_mod,max(contract_cust_ak_id) contract_cust_ak_id\r\n\t\tfrom  v2.policy where source_sys_id='DCT'    group by  pol_sym,pol_num,pol_eff_date ) pol\r\n\t\t join contract_customer CC\t\r\n\t\ton CC.contract_cust_ak_id=POL.contract_cust_ak_id and CC.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_num,pol_eff_date ORDER BY pol_sym) = 1\n),\nEXP_DerivePolicykey_Insured AS (\n\tSELECT\n\tEXP_CollectColumns.PolicyReference,\n\tEXP_CollectColumns.PolicyTermEffectiveDate,\n\tEXP_CollectColumns.AuthorizedAmount,\n\tlkp_V2Policy_EffctiveDate.pol_sym AS i_pol_sym,\n\tlkp_V2Policy_EffctiveDate.pol_num AS i_pol_num,\n\tlkp_V2Policy_EffctiveDate.pol_mod AS i_pol_mod,\n\tlkp_V2Policy_EffctiveDate.pol_key,\n\ti_pol_sym || i_pol_num || i_pol_mod AS o_pol_key,\n\tlkp_V2Policy_EffctiveDate.name AS i_name,\n\t-- *INF*: SUBSTR(i_name,1,90)\n\tSUBSTR(i_name, 1, 90) AS o_name,\n\t'48' AS o_StateCode,\n\t-- *INF*: TO_CHAR(PolicyTermEffectiveDate,'MMDDYYYY')\n\tTO_CHAR(PolicyTermEffectiveDate, 'MMDDYYYY') AS o_PolicyTermEffectiveDate,\n\t-1 AS o_default_ID,\n\t-999 AS o_default_commission_ID,\n\tEXP_CollectColumns.Rundate,\n\t-- *INF*: TRUNC(@{pipeline().parameters.EXTRACTDATE},'D')\n\tCAST(TRUNC(@{pipeline().parameters.EXTRACTDATE}, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tlkp_V2Policy_EffctiveDate.pol_eff_date,\n\t0 AS o_dummy,\n\tnull AS o_dummy_null\n\tFROM EXP_CollectColumns\n\tLEFT JOIN lkp_V2Policy_EffctiveDate\n\tON lkp_V2Policy_EffctiveDate.pol_num = EXP_CollectColumns.PolicyReference AND lkp_V2Policy_EffctiveDate.pol_eff_date = EXP_CollectColumns.PolicyTermEffectiveDate\n),\nLKP_WcrbWorkTable_Commission AS (\n\tSELECT\n\tPremiumMasterCalculationID,\n\tLossMasterCalculationId\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumMasterCalculationID,\n\t\t\tLossMasterCalculationId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WcrbWorkTable\n\t\tWHERE PremiumMasterCalculationID=-999 and LossMasterCalculationId=-999 and PremiumMasterRunDate>=@{pipeline().parameters.STARTDATE} and PremiumMasterRunDate<@{pipeline().parameters.ENDDATE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumMasterCalculationID,LossMasterCalculationId ORDER BY PremiumMasterCalculationID) = 1\n),\nFIL_data1 AS (\n\tSELECT\n\tLKP_WcrbWorkTable_Commission.PremiumMasterCalculationID AS Lkp_PremiumMasterCalculationID, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS wc_claimant_det_id, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS ClaimantId, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS Claim_Occurrence_Id, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS Claim_Party_Occurrence_Id, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS Claimant_Cov_Det_Id, \n\tEXP_DerivePolicykey_Insured.o_default_commission_ID AS Loss_Master_Calculation_Id, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS pol_id, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS RiskLocationID, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS PolicyCoverageID, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS StatisticalCoverageID, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS PremiumTransactionID, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS BureauStatisticalCodeID, \n\tEXP_DerivePolicykey_Insured.o_default_commission_ID AS PremiumMasterCalculationID, \n\tEXP_DerivePolicykey_Insured.Rundate AS PremiumMasterRunDate, \n\tEXP_DerivePolicykey_Insured.o_pol_key AS PolKey, \n\tEXP_DerivePolicykey_Insured.o_PolicyTermEffectiveDate AS pol_eff_date, \n\tEXP_DerivePolicykey_Insured.o_name AS name, \n\tEXP_DerivePolicykey_Insured.o_StateCode AS StateCode, \n\tEXP_DerivePolicykey_Insured.o_dummy AS PremiumMasterPremium, \n\tEXP_DerivePolicykey_Insured.o_dummy AS EarnedPremium, \n\tEXP_DerivePolicykey_Insured.o_dummy AS UnearnedPremium, \n\tEXP_DerivePolicykey_Insured.o_dummy AS DeferredPremium, \n\tEXP_DerivePolicykey_Insured.o_dummy AS PaidLossAmt, \n\tEXP_DerivePolicykey_Insured.o_dummy AS IndemnityPaymentAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS MedicalPaymentAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS RecoveryAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS IndemnityReserveAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS MedicalReserveAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS TotalMedicalAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy AS TotalIndemnityAmount, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS CauseOfInjSupportId, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS InjrDescLoss, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS BodyPartSupportId, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS InjrDescPartOfBody, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS NatureOfInjSupportId, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS InjrDescNatureOfInjr, \n\tEXP_DerivePolicykey_Insured.o_default_ID AS TypeDisabilitySupportId, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS InjrDescCauseOfLoss, \n\tEXP_DerivePolicykey_Insured.o_dummy AS PremiumMasterAgencyCommissionRate, \n\tEXP_DerivePolicykey_Insured.AuthorizedAmount AS CommissionPaid, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS Classcode, \n\tEXP_DerivePolicykey_Insured.o_dummy AS OutstandingAmount, \n\tEXP_DerivePolicykey_Insured.o_dummy_null AS FinancialTypeCode, \n\tEXP_DerivePolicykey_Insured.o_dummy AS claim_trans_amt, \n\tEXP_DerivePolicykey_Insured.o_ExtractDate AS ExtractDate, \n\tEXP_DerivePolicykey_Insured.o_SourceSystemID AS SourceSystemID, \n\tEXP_DerivePolicykey_Insured.o_AuditID AS AuditID, \n\tEXP_DerivePolicykey_Insured.o_dummy AS AuditNonComplianceChargePremium\n\tFROM EXP_DerivePolicykey_Insured\n\tLEFT JOIN LKP_WcrbWorkTable_Commission\n\tON LKP_WcrbWorkTable_Commission.PremiumMasterCalculationID = EXP_DerivePolicykey_Insured.o_default_commission_ID AND LKP_WcrbWorkTable_Commission.LossMasterCalculationId = EXP_DerivePolicykey_Insured.o_default_commission_ID\n\tWHERE ISNULL(Lkp_PremiumMasterCalculationID)\n),\nTGT_WcrbWorkTable_Insert_Commision AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WcrbWorkTable\n\t(WCClaimantDetId, ClaimantId, ClaimOccurrenceId, ClaimPartyOccurrenceId, ClaimantCovDetId, LossMasterCalculationId, PolId, RiskLocationID, PolicyCoverageID, StatisticalCoverageID, PremiumTransactionID, BureauStatisticalCodeID, PremiumMasterCalculationID, PremiumMasterRunDate, PolKey, PolicyEffectiveDae, NameOfInsured, StateCode, WrittenPremium, EarnedPremium, UneranedPremium, DeferredPremium, AccidentYear, ClaimNum, ClaimClosedDate, ClaimOccurrenceStatusCode, PaidLossAmt, TypeLossCode, IndemnityPaymentAmount, MedicalPaymentAmount, RecoveryAmount, IndemnityReserveAmount, MedicalReserveAmount, TotalMedicalAmount, TotalIndemnityAmount, CauseOfInjSupportId, InjrDescLoss, BodyPartSupportId, InjrDescPartOfBody, NatureOfInjSupportId, InjrDescNatureOfInjr, TypeDisabilitySupportId, InjrDescCauseOfLoss, PremiumMasterAgencyCommissionRate, CommissionPaid, ClassCode, OutstandingAmount, FinancialTypeCode, ClaimTransactionAmount, ExtractDate, SourceSystemId, AuditID, AuditNonComplianceChargePremium)\n\tSELECT \n\twc_claimant_det_id AS WCCLAIMANTDETID, \n\tCLAIMANTID, \n\tClaim_Occurrence_Id AS CLAIMOCCURRENCEID, \n\tClaim_Party_Occurrence_Id AS CLAIMPARTYOCCURRENCEID, \n\tClaimant_Cov_Det_Id AS CLAIMANTCOVDETID, \n\tLoss_Master_Calculation_Id AS LOSSMASTERCALCULATIONID, \n\tpol_id AS POLID, \n\tRISKLOCATIONID, \n\tPOLICYCOVERAGEID, \n\tSTATISTICALCOVERAGEID, \n\tPREMIUMTRANSACTIONID, \n\tBUREAUSTATISTICALCODEID, \n\tPREMIUMMASTERCALCULATIONID, \n\tPREMIUMMASTERRUNDATE, \n\tPOLKEY, \n\tpol_eff_date AS POLICYEFFECTIVEDAE, \n\tname AS NAMEOFINSURED, \n\tSTATECODE, \n\tPremiumMasterPremium AS WRITTENPREMIUM, \n\tEARNEDPREMIUM, \n\tUnearnedPremium AS UNERANEDPREMIUM, \n\tDEFERREDPREMIUM, \n\tACCIDENTYEAR, \n\tCLAIMNUM, \n\tCLAIMCLOSEDDATE, \n\tCLAIMOCCURRENCESTATUSCODE, \n\tPAIDLOSSAMT, \n\tTYPELOSSCODE, \n\tINDEMNITYPAYMENTAMOUNT, \n\tMEDICALPAYMENTAMOUNT, \n\tRECOVERYAMOUNT, \n\tINDEMNITYRESERVEAMOUNT, \n\tMEDICALRESERVEAMOUNT, \n\tTOTALMEDICALAMOUNT, \n\tTOTALINDEMNITYAMOUNT, \n\tCAUSEOFINJSUPPORTID, \n\tINJRDESCLOSS, \n\tBODYPARTSUPPORTID, \n\tINJRDESCPARTOFBODY, \n\tNATUREOFINJSUPPORTID, \n\tINJRDESCNATUREOFINJR, \n\tTYPEDISABILITYSUPPORTID, \n\tINJRDESCCAUSEOFLOSS, \n\tPREMIUMMASTERAGENCYCOMMISSIONRATE, \n\tCOMMISSIONPAID, \n\tClasscode AS CLASSCODE, \n\tOUTSTANDINGAMOUNT, \n\tFINANCIALTYPECODE, \n\tclaim_trans_amt AS CLAIMTRANSACTIONAMOUNT, \n\tEXTRACTDATE, \n\tSourceSystemID AS SOURCESYSTEMID, \n\tAUDITID, \n\tAUDITNONCOMPLIANCECHARGEPREMIUM\n\tFROM FIL_data1\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "STARTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "ENDDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "INSURANCESEGMENTABBREVIATION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TRANS_KIND_CODE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "POL_SYM": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LAST_DAY_OF_THE_QUARTER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DBO": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "EXTRACTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "AUTHORIZATIONTYPECODE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "COMMISSIONSCHEMEREFERENCE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}