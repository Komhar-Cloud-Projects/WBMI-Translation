{
    "name": "s_m_POL_FEED_Load_WCPOLS_01_Record",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WCPOLS_01_Record",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupWCPOLS AS (\n\tSELECT\n\tWCPOLSCode,\n\tSourcesystemID,\n\tSourceCode,\n\tTableName,\n\tProcessName,\n\ti_SourcesystemID,\n\ti_SourceCode,\n\ti_TableName,\n\ti_ProcessName\n\tFROM (\n\t\tSELECT\r\n\t\t     WCPOLSCode as WCPOLSCode\r\n\t\t\t,SourcesystemID as SourcesystemID\r\n\t\t\t,SourceCode as SourceCode\r\n\t\t\t,TableName as TableName\r\n\t\t\t,ProcessName as ProcessName\r\n\t\tFROM SupWCPOLS\r\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SourcesystemID,SourceCode,TableName,ProcessName ORDER BY WCPOLSCode) = 1\n),\nLKP_WorkWCLimit AS (\n\tSELECT\n\tLimitValue,\n\ti_WCTrackHistoryID,\n\ti_LimitType,\n\tWCTrackHistoryID,\n\tLimitType\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,LimitType as LimitType\r\n\t\t      ,LimitValue as LimitValue\r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCLimit\r\n\t\tWHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID,LimitType ORDER BY LimitValue) = 1\n),\nSQ_WCPols00Record AS (\n\tSELECT\r\n\t\tWCTrackHistoryID,\r\n\t\tLinkData,\r\n\t     AuditId\r\n\tFROM dbo.WCPols00Record\r\n\tWHERE 1=1\r\n\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_01}\n),\nEXP_PrepLKP_01 AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tLinkData,\n\tAuditId,\n\t'DCT' AS o_SourceSystemID,\n\t'As needed for this lookup type' AS o_ProcessName\n\tFROM SQ_WCPols00Record\n),\nLKP_Forms AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tFormName,\n\tin_WCTrackHistoryID\n\tFROM (\n\t\tSelect \r\n\t\tWCTrackHistoryID as WCTrackHistoryID,\r\n\t\tFormName as FormName\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCForms\r\n\t\tWHERE 1=1\r\n\t\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\tORDER BY WCTrackHistoryID -----\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY WCTrackHistoryID) = 1\n),\nLKP_Line AS (\n\tSELECT\n\tAuditPeriod,\n\tRatingPlan,\n\tPrimaryLocationState,\n\tInterstateRiskID,\n\tMinimumPremiumMaximum,\n\tMinimumPremiumMaximumState,\n\tInstallmentType,\n\tDepositPremium,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSELECT \n\t\t\tAuditPeriod,\n\t\t\tRatingPlan,\n\t\t\tPrimaryLocationState,\n\t\t\tInterstateRiskID,\n\t\t\tMinimumPremiumMaximum,\n\t\t\tMinimumPremiumMaximumState,\n\t\t\tInstallmentType,\n\t\t\tDepositPremium,\n\t\t\tWCTrackHistoryID\n\t\tFROM WorkWCLine\n\t\tWHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY AuditPeriod) = 1\n),\nLKP_Party_Account AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tEntityType,\n\tEntityOtherType,\n\tin_WCTrackHistoryID\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,EntityType as EntityType\r\n\t\t      ,EntityOtherType as EntityOtherType\r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty\r\n\t\t  WHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\tAND PartyAssociationType = 'Account'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY WCTrackHistoryID) = 1\n),\nLKP_Party_Agent AS (\n\tSELECT\n\tName,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,Name as Name\r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty\r\n\t\t  WHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\tAND PartyAssociationType = 'Agency'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY Name) = 1\n),\nLKP_Policy AS (\n\tSELECT\n\tPolicyTerm,\n\tPolicyExpirationDate_YYMMDD,\n\tTransactionEffectiveDate_YYMMDD,\n\tTransactionExpirationDate_YYMMDD,\n\tPreviousPolicyKey,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,PolicyTerm as PolicyTerm\r\n\t\t      ,CONVERT(VARCHAR(6), PolicyExpirationDate, 12) as PolicyExpirationDate_YYMMDD\r\n\t\t      ,CONVERT(VARCHAR(6), TransactionEffectiveDate, 12) as TransactionEffectiveDate_YYMMDD\r\n\t\t\t  ,CONVERT(VARCHAR(6), TransactionExpirationDate, 12) as TransactionExpirationDate_YYMMDD\r\n\t\t      ,TransactionType as TransactionType\r\n\t\t      ,PreviousPolicyKey as PreviousPolicyKey\r\n\t\t      ,PolicyEffectiveDate as PolicyEffectiveDate\r\n\t\t      ,PolicyExpirationDate as PolicyExpirationDate\r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCPolicy\r\n\t\tWHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY PolicyTerm) = 1\n),\nLKP_StateTerm AS (\n\tSELECT\n\tEmployeeLeasing,\n\tEmployeeLeasingRatingOption,\n\tIntrastateRiskid,\n\tTotalStandardPremium,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSELECT A.EmployeeLeasing as EmployeeLeasing, \r\n\t\tmax(A.EmployeeLeasingRatingOption) as EmployeeLeasingRatingOption, \r\n\t\tMax(A.IntrastateRiskid) as IntrastateRiskid, \r\n\t\tSum(A.TotalStandardPremium) as TotalStandardPremium, \r\n\t\tA.WCTrackHistoryID as WCTrackHistoryID \r\n\t\tFROM WorkWCStateTerm A\r\n\t\twhere Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\tgroup by A.WCTrackHistoryID,A.EmployeeLeasing\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY EmployeeLeasing) = 1\n),\nEXP_Format_01_Output AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\tEXP_PrepLKP_01.WCTrackHistoryID,\n\tEXP_PrepLKP_01.LinkData,\n\tLKP_Line.InterstateRiskID AS InterstateRiskIDNumber,\n\tLKP_Policy.PolicyTerm,\n\tLKP_Policy.PolicyExpirationDate_YYMMDD,\n\tLKP_Policy.PreviousPolicyKey AS PriorPolicyNumberIdentifier,\n\tLKP_StateTerm.IntrastateRiskid,\n\tLKP_StateTerm.EmployeeLeasing,\n\tLKP_StateTerm.EmployeeLeasingRatingOption,\n\tLKP_Line.RatingPlan,\n\tLKP_Line.MinimumPremiumMaximum AS PolicyMinimumPremiumAmount,\n\tLKP_StateTerm.TotalStandardPremium AS PolicyEstimatedStandardPremiumTotal,\n\t-- *INF*: TO_CHAR(ROUND(PolicyEstimatedStandardPremiumTotal))\n\tTO_CHAR(ROUND(PolicyEstimatedStandardPremiumTotal)) AS o_PolicyEstimatedStandardPremiumTotal,\n\tLKP_Line.AuditPeriod,\n\tLKP_Party_Agent.Name AS NameOfProducer,\n\tLKP_Policy.TransactionEffectiveDate_YYMMDD AS PolicyChangeEffectiveDate,\n\tLKP_Policy.TransactionExpirationDate_YYMMDD AS PolicyChangeExpirationDate,\n\t-- *INF*: :LKP.LKP_WorkWCLimit(WCTrackHistoryID,'EachAccident')\n\tLKP_WORKWCLIMIT_WCTrackHistoryID_EachAccident.LimitValue AS v_Limit_EachAccident,\n\t-- *INF*: :LKP.LKP_WorkWCLimit(WCTrackHistoryID,'Policy')\n\tLKP_WORKWCLIMIT_WCTrackHistoryID_Policy.LimitValue AS v_Limit_Policy,\n\t-- *INF*: :LKP.LKP_WorkWCLimit(WCTrackHistoryID,'EachEmployeeDisease')\n\tLKP_WORKWCLIMIT_WCTrackHistoryID_EachEmployeeDisease.LimitValue AS v_Limit_EachEmployeeDisease,\n\tLKP_Party_Account.EntityType,\n\tLKP_Party_Account.EntityOtherType,\n\tLKP_Line.PrimaryLocationState,\n\tLKP_Line.MinimumPremiumMaximumState,\n\tLKP_Line.InstallmentType,\n\tLKP_Line.DepositPremium,\n\t-- *INF*: TO_CHAR(ROUND(DepositPremium))\n\tTO_CHAR(ROUND(DepositPremium)) AS o_PolicyDepositPremiumAmount,\n\t-- *INF*: IIF ((IsNull(InterstateRiskIDNumber) or Is_Spaces(InterstateRiskIDNumber) or InterstateRiskIDNumber='0'),0,1)\n\tIFF(\n\t    (InterstateRiskIDNumber IS NULL\n\t    or LENGTH(InterstateRiskIDNumber)>0\n\t    and TRIM(InterstateRiskIDNumber)=''\n\t    or InterstateRiskIDNumber = '0'),\n\t    0,\n\t    1\n\t) AS v_INTERstateID,\n\t-- *INF*: IIF ((IsNull(IntrastateRiskid) or Is_Spaces(IntrastateRiskid) or IntrastateRiskid='0'),0,1)\n\tIFF(\n\t    (IntrastateRiskid IS NULL\n\t    or LENGTH(IntrastateRiskid)>0\n\t    and TRIM(IntrastateRiskid)=''\n\t    or IntrastateRiskid = '0'),\n\t    0,\n\t    1\n\t) AS v_INTRAstateID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_INTERstateID=1 AND v_INTRAstateID=0,1,\r\n\t-- v_INTERstateID=1 AND v_INTRAstateID=1,2,\r\n\t-- v_INTERstateID=0 AND v_INTRAstateID=1,3,\r\n\t-- 5)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    v_INTERstateID = 1 AND v_INTRAstateID = 0, 1,\n\t    v_INTERstateID = 1 AND v_INTRAstateID = 1, 2,\n\t    v_INTERstateID = 0 AND v_INTRAstateID = 1, 3,\n\t    5\n\t) AS v_ExperienceRatingCode,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tCURRENT_TIMESTAMP AS o_ExtractDate,\n\t'01' AS o_RecordTypeCode,\n\tv_ExperienceRatingCode AS o_ExperienceRatingCode,\n\tLKP_Forms.FormName,\n\t-- *INF*: IIF(FormName='WC000516','05','01')\n\tIFF(FormName = 'WC000516', '05', '01') AS o_TypeOfCoverageIDCode,\n\t-- *INF*: IIF (EmployeeLeasing='T',EmployeeLeasingRatingOption,1)\n\tIFF(EmployeeLeasing = 'T', EmployeeLeasingRatingOption, 1) AS o_EmployeeLeasingPolicyTypeCode,\n\tLKP_Policy.PolicyEffectiveDate,\n\tLKP_Policy.PolicyExpirationDate,\n\t-- *INF*: IIF(DATE_DIFF(PolicyExpirationDate,PolicyEffectiveDate,'DD')>=365,1,4)\r\n\t-- \r\n\t-- \r\n\t-- --IIF ((PolicyTerm >= 0 and PolicyTerm < 12),4,\r\n\t--    --IIF (PolicyTerm = 12,1,2))\n\tIFF(DATEDIFF(DAY,PolicyExpirationDate,PolicyEffectiveDate) >= 365, 1, 4) AS o_PolicyTermCode,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',EntityType,'WCPOLS01Record','LegalNatureOfInsuredCode')\n\tLKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode.WCPOLSCode AS v_LegalNatureOfInsuredCode,\n\tv_LegalNatureOfInsuredCode AS o_LegalNatureOfInsuredCode,\n\t-- *INF*: IIF (RatingPlan = 'WCPool',:LKP.LKP_SupWCPOLS('DCT','WCPool','WCPOLS01Record','TypeOfPlanIdCode'),'1')\n\tIFF(\n\t    RatingPlan = 'WCPool', LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode.WCPOLSCode,\n\t    '1'\n\t) AS o_TypeOfPlanIDCode,\n\t'2' AS o_WrapUpOwnerControlledInsuranceProgramCode,\n\t-- *INF*: IIF (TRUNC(PolicyMinimumPremiumAmount) = PolicyMinimumPremiumAmount, to_char(PolicyMinimumPremiumAmount), to_char(to_decimal(PolicyMinimumPremiumAmount,2)))\n\tIFF(\n\t    TRUNC(PolicyMinimumPremiumAmount) = PolicyMinimumPremiumAmount,\n\t    to_char(PolicyMinimumPremiumAmount),\n\t    to_char(CAST(PolicyMinimumPremiumAmount AS FLOAT))\n\t) AS o_PolicyMinimumPremiumAmount,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',MinimumPremiumMaximumState,'WCPOLS01Record','StateCodeRecord01')\n\tLKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01.WCPOLSCode AS o_PolicyMinimumPremiumStateCode,\n\t-- *INF*: IIF (IsNull(:LKP.LKP_SupWCPOLS('DCT',AuditPeriod,'WCPOLS01Record','AuditFrequencyCode')),'5',:LKP.LKP_SupWCPOLS('DCT',AuditPeriod,'WCPOLS01Record','AuditFrequencyCode'))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.WCPOLSCode IS NULL, '5',\n\t    LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.WCPOLSCode\n\t) AS o_AuditFrequencyCode,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',InstallmentType,'WCPOLS01Record','BillingFrequencyCode')\n\tLKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode.WCPOLSCode AS o_BillingFrequencyCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- RatingPlan <> 'Retrospective','3',\r\n\t-- RatingPlan = 'Retrospective' AND IN(PrimaryLocationState,'MI','MN','NC','WI'),'1',\r\n\t-- '5')\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    RatingPlan <> 'Retrospective', '3',\n\t    RatingPlan = 'Retrospective' AND PrimaryLocationState IN ('MI','MN','NC','WI'), '1',\n\t    '5'\n\t) AS o_RetrospectiveRatingCode,\n\t-- *INF*: IIF (Is_Number(v_Limit_EachAccident), To_Bigint(v_Limit_EachAccident) * 1000, 0)\n\tIFF(\n\t    REGEXP_LIKE(v_Limit_EachAccident, '^[0-9]+$'), CAST(v_Limit_EachAccident AS BIGINT) * 1000,\n\t    0\n\t) AS o_EmployerLiabilityLimitAmountBodilyInjuryByAccidentEachAccidentAmount,\n\t-- *INF*: IIF (Is_Number(v_Limit_Policy), To_Bigint(v_Limit_Policy) * 1000, 0)\n\tIFF(REGEXP_LIKE(v_Limit_Policy, '^[0-9]+$'), CAST(v_Limit_Policy AS BIGINT) * 1000, 0) AS o_EmployerLiabilityLimitAmountBodilyInjuryByDiseasePolicyLimitAmount,\n\t-- *INF*: IIF (Is_Number(v_Limit_EachEmployeeDisease), To_Bigint(v_Limit_EachEmployeeDisease) * 1000, 0)\n\tIFF(\n\t    REGEXP_LIKE(v_Limit_EachEmployeeDisease, '^[0-9]+$'),\n\t    CAST(v_Limit_EachEmployeeDisease AS BIGINT) * 1000,\n\t    0\n\t) AS o_EmployerLiabilityLimitAmountBodilyInjuryByDiseaseEachEmployeeAmount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_LegalNatureOfInsuredCode='99' AND (ISNULL(EntityOtherType) OR LTRIM(RTRIM(EntityOtherType))=''),EntityType,\r\n\t-- v_LegalNatureOfInsuredCode='99',EntityOtherType,\r\n\t-- '')\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    v_LegalNatureOfInsuredCode = '99' AND (EntityOtherType IS NULL OR LTRIM(RTRIM(EntityOtherType)) = ''), EntityType,\n\t    v_LegalNatureOfInsuredCode = '99', EntityOtherType,\n\t    ''\n\t) AS o_OtherLegalNatureOfInsured\n\tFROM EXP_PrepLKP_01\n\tLEFT JOIN LKP_Forms\n\tON LKP_Forms.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_Line\n\tON LKP_Line.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_Party_Account\n\tON LKP_Party_Account.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_Party_Agent\n\tON LKP_Party_Agent.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_Policy\n\tON LKP_Policy.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_StateTerm\n\tON LKP_StateTerm.WCTrackHistoryID = EXP_PrepLKP_01.WCTrackHistoryID\n\tLEFT JOIN LKP_WORKWCLIMIT LKP_WORKWCLIMIT_WCTrackHistoryID_EachAccident\n\tON LKP_WORKWCLIMIT_WCTrackHistoryID_EachAccident.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCLIMIT_WCTrackHistoryID_EachAccident.LimitType = 'EachAccident'\n\n\tLEFT JOIN LKP_WORKWCLIMIT LKP_WORKWCLIMIT_WCTrackHistoryID_Policy\n\tON LKP_WORKWCLIMIT_WCTrackHistoryID_Policy.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCLIMIT_WCTrackHistoryID_Policy.LimitType = 'Policy'\n\n\tLEFT JOIN LKP_WORKWCLIMIT LKP_WORKWCLIMIT_WCTrackHistoryID_EachEmployeeDisease\n\tON LKP_WORKWCLIMIT_WCTrackHistoryID_EachEmployeeDisease.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCLIMIT_WCTrackHistoryID_EachEmployeeDisease.LimitType = 'EachEmployeeDisease'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode\n\tON LKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode.SourceCode = EntityType\n\tAND LKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode.TableName = 'WCPOLS01Record'\n\tAND LKP_SUPWCPOLS__DCT_EntityType_WCPOLS01Record_LegalNatureOfInsuredCode.ProcessName = 'LegalNatureOfInsuredCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode\n\tON LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode.SourceCode = 'WCPool'\n\tAND LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode.TableName = 'WCPOLS01Record'\n\tAND LKP_SUPWCPOLS__DCT_WCPool_WCPOLS01Record_TypeOfPlanIdCode.ProcessName = 'TypeOfPlanIdCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01\n\tON LKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01.SourceCode = MinimumPremiumMaximumState\n\tAND LKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01.TableName = 'WCPOLS01Record'\n\tAND LKP_SUPWCPOLS__DCT_MinimumPremiumMaximumState_WCPOLS01Record_StateCodeRecord01.ProcessName = 'StateCodeRecord01'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode\n\tON LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.SourceCode = AuditPeriod\n\tAND LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.TableName = 'WCPOLS01Record'\n\tAND LKP_SUPWCPOLS__DCT_AuditPeriod_WCPOLS01Record_AuditFrequencyCode.ProcessName = 'AuditFrequencyCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode\n\tON LKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode.SourceCode = InstallmentType\n\tAND LKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode.TableName = 'WCPOLS01Record'\n\tAND LKP_SUPWCPOLS__DCT_InstallmentType_WCPOLS01Record_BillingFrequencyCode.ProcessName = 'BillingFrequencyCode'\n\n),\nWCPols01Record AS (\n\n\t------------ PRE SQL ----------\n\tDELETE\r\n\t  FROM dbo.WCPols01Record\r\n\t  WHERE 1=1\r\n\t  AND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t-------------------------------\n\n\n\tINSERT INTO WCPols01Record\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, RecordTypeCode, ExperienceRatingCode, InterstateRiskIDNumber, PolicyExpirationDate, TypeOfCoverageIDCode, EmployeeLeasingPolicyTypeCode, PolicyTermCode, PriorPolicyNumberIdentifier, LegalNatureOfInsuredCode, TypeOfPlanIDCode, WrapUpOwnerControlledInsuranceProgramCode, PolicyMinimumPremiumAmount, PolicyMinimumPremiumStateCode, PolicyEstimatedStandardPremiumTotal, PolicyDepositPremiumAmount, AuditFrequencyCode, BillingFrequencyCode, RetrospectiveRatingCode, EmployerLiabilityLimitAmountBodilyInjuryByAccidentEachAccidentAmount, EmployerLiabilityLimitAmountBodilyInjuryByDiseasePolicyLimitAmount, EmployerLiabilityLimitAmountBodilyInjuryByDiseaseEachEmployeeAmount, NameOfProducer, TextForOtherLegalNatureOfInsured, PolicyChangeEffectiveDate, PolicyChangeExpirationDate)\n\tSELECT \n\tEXTRACTDATE, \n\to_AuditId AS AUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\to_RecordTypeCode AS RECORDTYPECODE, \n\to_ExperienceRatingCode AS EXPERIENCERATINGCODE, \n\tINTERSTATERISKIDNUMBER, \n\tPolicyExpirationDate_YYMMDD AS POLICYEXPIRATIONDATE, \n\to_TypeOfCoverageIDCode AS TYPEOFCOVERAGEIDCODE, \n\to_EmployeeLeasingPolicyTypeCode AS EMPLOYEELEASINGPOLICYTYPECODE, \n\to_PolicyTermCode AS POLICYTERMCODE, \n\tPRIORPOLICYNUMBERIDENTIFIER, \n\to_LegalNatureOfInsuredCode AS LEGALNATUREOFINSUREDCODE, \n\to_TypeOfPlanIDCode AS TYPEOFPLANIDCODE, \n\to_WrapUpOwnerControlledInsuranceProgramCode AS WRAPUPOWNERCONTROLLEDINSURANCEPROGRAMCODE, \n\to_PolicyMinimumPremiumAmount AS POLICYMINIMUMPREMIUMAMOUNT, \n\to_PolicyMinimumPremiumStateCode AS POLICYMINIMUMPREMIUMSTATECODE, \n\to_PolicyEstimatedStandardPremiumTotal AS POLICYESTIMATEDSTANDARDPREMIUMTOTAL, \n\to_PolicyDepositPremiumAmount AS POLICYDEPOSITPREMIUMAMOUNT, \n\to_AuditFrequencyCode AS AUDITFREQUENCYCODE, \n\to_BillingFrequencyCode AS BILLINGFREQUENCYCODE, \n\to_RetrospectiveRatingCode AS RETROSPECTIVERATINGCODE, \n\to_EmployerLiabilityLimitAmountBodilyInjuryByAccidentEachAccidentAmount AS EMPLOYERLIABILITYLIMITAMOUNTBODILYINJURYBYACCIDENTEACHACCIDENTAMOUNT, \n\to_EmployerLiabilityLimitAmountBodilyInjuryByDiseasePolicyLimitAmount AS EMPLOYERLIABILITYLIMITAMOUNTBODILYINJURYBYDISEASEPOLICYLIMITAMOUNT, \n\to_EmployerLiabilityLimitAmountBodilyInjuryByDiseaseEachEmployeeAmount AS EMPLOYERLIABILITYLIMITAMOUNTBODILYINJURYBYDISEASEEACHEMPLOYEEAMOUNT, \n\tNAMEOFPRODUCER, \n\to_OtherLegalNatureOfInsured AS TEXTFOROTHERLEGALNATUREOFINSURED, \n\tPOLICYCHANGEEFFECTIVEDATE, \n\tPOLICYCHANGEEXPIRATIONDATE\n\tFROM EXP_Format_01_Output\n),\nEXP_ExpRatingCode AS (\n\tSELECT\n\to_AuditId AS AuditId,\n\tExtractDate,\n\to_ExperienceRatingCode AS ExperienceRatingCode,\n\tWCTrackHistoryID\n\tFROM EXP_Format_01_Output\n),\nLKP_WorkWCTrackHistory AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditid\n\tFROM (\n\t\tSELECT \n\t\t\tWCTrackHistoryID,\n\t\t\tAuditid\n\t\tFROM WorkWCTrackHistory\n\t\tWHERE NCRequiredFlag = 1 AND AuditID = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Auditid,WCTrackHistoryID ORDER BY WCTrackHistoryID) = 1\n),\nFIL_ExpRatingCode AS (\n\tSELECT\n\tEXP_ExpRatingCode.AuditId, \n\tEXP_ExpRatingCode.ExtractDate, \n\tLKP_WorkWCTrackHistory.WCTrackHistoryID, \n\tEXP_ExpRatingCode.ExperienceRatingCode\n\tFROM EXP_ExpRatingCode\n\tLEFT JOIN LKP_WorkWCTrackHistory\n\tON LKP_WorkWCTrackHistory.Auditid = EXP_ExpRatingCode.AuditId AND LKP_WorkWCTrackHistory.WCTrackHistoryID = EXP_ExpRatingCode.WCTrackHistoryID\n\tWHERE ExperienceRatingCode = '2'AND NOT ISNULL(WCTrackHistoryID)\n),\nEXP_WorkWCProcessUpdateTable AS (\n\tSELECT\n\tAuditId,\n\tExtractDate,\n\tWCTrackHistoryID,\n\t'ExpRatingCode-01' AS ProcessName,\n\tExperienceRatingCode AS AttributeValue\n\tFROM FIL_ExpRatingCode\n),\nWorkWCProcessUpdateTable AS (\n\tINSERT INTO WorkWCProcessUpdateTable\n\t(Auditid, ExtractDate, WCTrackHistoryID, ProcessName, AttributeValue)\n\tSELECT \n\tAuditId AS AUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tPROCESSNAME, \n\tATTRIBUTEVALUE\n\tFROM EXP_WorkWCProcessUpdateTable\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_01": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}