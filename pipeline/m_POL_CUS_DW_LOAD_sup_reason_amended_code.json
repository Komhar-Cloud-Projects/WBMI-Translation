{
    "name": "m_POL_CUS_DW_LOAD_sup_reason_amended_code",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_sup_reason_amended_code",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_gtam_tl14_stage AS (\n\tSELECT reason_amended_code,\r\n\t       alpha_descr_of_reason_amended\r\n\tFROM gtam_tl14_stage\r\n\t\r\n\t---- Certain values('CZ','Q') that are filtered out because the \r\n\t---- descriptions are NULL in the GTAMs and we have \r\n\t---- static values for them\n),\nEXP_values_tl14 AS (\n\tSELECT\n\treason_amended_code AS IN_reason_amended_code,\n\t-- *INF*: IIF(ISNULL(IN_reason_amended_code) OR IS_SPACES(IN_reason_amended_code) OR LENGTH(IN_reason_amended_code)=0\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(IN_reason_amended_code)))\n\tIFF(IN_reason_amended_code IS NULL OR IS_SPACES(IN_reason_amended_code) OR LENGTH(IN_reason_amended_code) = 0, 'N/A', ltrim(rtrim(IN_reason_amended_code))) AS reason_amended_code,\n\talpha_descr_of_reason_amended AS IN_alpha_descr_of_reason_amended,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ltrim(rtrim(IN_reason_amended_code))='O',\r\n\t-- 'Other',\r\n\t-- ISNULL(IN_alpha_descr_of_reason_amended) OR IS_SPACES(IN_alpha_descr_of_reason_amended) OR\r\n\t-- LENGTH(IN_alpha_descr_of_reason_amended)=0,\r\n\t-- 'N/A',\r\n\t-- ltrim(rtrim(IN_alpha_descr_of_reason_amended))\r\n\t-- )\n\tDECODE(TRUE,\n\tltrim(rtrim(IN_reason_amended_code)) = 'O', 'Other',\n\tIN_alpha_descr_of_reason_amended IS NULL OR IS_SPACES(IN_alpha_descr_of_reason_amended) OR LENGTH(IN_alpha_descr_of_reason_amended) = 0, 'N/A',\n\tltrim(rtrim(IN_alpha_descr_of_reason_amended))) AS alpha_descr_of_reason_amended\n\tFROM SQ_gtam_tl14_stage\n),\nLKP_sup_reason_amended_code_tl14 AS (\n\tSELECT\n\tsup_rsn_amended_code_id,\n\trsn_amended_code_descript,\n\trsn_amended_code\n\tFROM (\n\t\tSELECT \r\n\t\t\ttl.sup_rsn_amended_code_id as sup_rsn_amended_code_id, \r\n\t\tLTRIM(RTRIM(tl.rsn_amended_code_descript))  as rsn_amended_code_descript,\r\n\t\tLTRIM(RTRIM(tl.rsn_amended_code)) as rsn_amended_code\t\r\n\t\tFROM  \r\n\t\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code tl\r\n\t\tWHERE \r\n\t\t\ttl.crrnt_snpsht_flag=1 and tl.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code ORDER BY sup_rsn_amended_code_id DESC) = 1\n),\nEXP_Detect_Changes_tl14 AS (\n\tSELECT\n\tEXP_values_tl14.reason_amended_code,\n\tEXP_values_tl14.alpha_descr_of_reason_amended,\n\tLKP_sup_reason_amended_code_tl14.sup_rsn_amended_code_id AS LKP_sup_rsn_amended_code_id,\n\tLKP_sup_reason_amended_code_tl14.rsn_amended_code_descript AS LKP_rsn_amended_code_descript,\n\t1 AS crrnt_snapshot_flag,\n\t-- *INF*: IIF(ISNULL(LKP_sup_rsn_amended_code_id),'NEW',\r\n\t-- \tIIF(\r\n\t-- \t(ltrim(rtrim(alpha_descr_of_reason_amended)) <> ltrim(rtrim(LKP_rsn_amended_code_descript))),\r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(LKP_sup_rsn_amended_code_id IS NULL, 'NEW', IFF(( ltrim(rtrim(alpha_descr_of_reason_amended)) <> ltrim(rtrim(LKP_rsn_amended_code_descript)) ), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_ID,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tTO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(TO_CHAR(SYSDATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS Source_System_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date\n\tFROM EXP_values_tl14\n\tLEFT JOIN LKP_sup_reason_amended_code_tl14\n\tON LKP_sup_reason_amended_code_tl14.rsn_amended_code = EXP_values_tl14.reason_amended_code\n),\nFIL_insert_tl14 AS (\n\tSELECT\n\treason_amended_code AS rsn_amended_code, \n\talpha_descr_of_reason_amended AS rsn_amended_code_descript, \n\tcrrnt_snapshot_flag, \n\tAudit_ID, \n\tEff_From_Date, \n\tEff_To_Date, \n\tChanged_Flag, \n\tSource_System_ID, \n\tCreated_Date, \n\tModified_Date\n\tFROM EXP_Detect_Changes_tl14\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nINS_sup_reason_amended_code_tl14 AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, rsn_amended_code, rsn_amended_code_descript, StandardReasonAmendedCode, StandardReasonAmendedDescription)\n\tSELECT \n\tcrrnt_snapshot_flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_ID AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSource_System_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tRSN_AMENDED_CODE, \n\tRSN_AMENDED_CODE_DESCRIPT, \n\trsn_amended_code AS STANDARDREASONAMENDEDCODE, \n\trsn_amended_code_descript AS STANDARDREASONAMENDEDDESCRIPTION\n\tFROM FIL_insert_tl14\n),\nSQ_gtam_wbrsnca_stage AS (\n\tSELECT cancellation_reason_code,\r\n\t       cancellation_reason_descript\r\n\tFROM gtam_wbrsnca_stage\r\n\tWHERE cancellation_reason_code NOT IN ('CZ','Q')\r\n\t\r\n\t\r\n\t\r\n\t---- Certain values('CZ','Q') that are filtered out because the \r\n\t---- descriptions are NULL in the GTAMs and we have \r\n\t---- static values for them\n),\nEXP_values_wbrsnca AS (\n\tSELECT\n\tcancellation_reason_code AS IN_cancellation_reason_code,\n\t-- *INF*: IIF(ISNULL(IN_cancellation_reason_code) OR IS_SPACES(IN_cancellation_reason_code) OR LENGTH(IN_cancellation_reason_code)=0\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(IN_cancellation_reason_code)))\n\tIFF(IN_cancellation_reason_code IS NULL OR IS_SPACES(IN_cancellation_reason_code) OR LENGTH(IN_cancellation_reason_code) = 0, 'N/A', ltrim(rtrim(IN_cancellation_reason_code))) AS cancellation_reason_code_code,\n\tcancellation_reason_descript AS IN_cancellation_reason_descript,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ltrim(rtrim(IN_cancellation_reason_code))='O',\r\n\t-- 'Other',\r\n\t-- ISNULL(IN_cancellation_reason_descript) OR IS_SPACES(IN_cancellation_reason_descript) OR\r\n\t-- LENGTH(IN_cancellation_reason_descript)=0,\r\n\t-- 'N/A',\r\n\t-- ltrim(rtrim(IN_cancellation_reason_descript))\r\n\t-- )\n\tDECODE(TRUE,\n\tltrim(rtrim(IN_cancellation_reason_code)) = 'O', 'Other',\n\tIN_cancellation_reason_descript IS NULL OR IS_SPACES(IN_cancellation_reason_descript) OR LENGTH(IN_cancellation_reason_descript) = 0, 'N/A',\n\tltrim(rtrim(IN_cancellation_reason_descript))) AS cancellation_reason_descript\n\tFROM SQ_gtam_wbrsnca_stage\n),\nLKP_sup_reason_amended_code_wbrsnca AS (\n\tSELECT\n\tsup_rsn_amended_code_id,\n\trsn_amended_code_descript,\n\trsn_amended_code\n\tFROM (\n\t\tSELECT \r\n\t\t\ttl.sup_rsn_amended_code_id as sup_rsn_amended_code_id, \r\n\t\tLTRIM(RTRIM(tl.rsn_amended_code_descript))  as rsn_amended_code_descript,\r\n\t\tLTRIM(RTRIM(tl.rsn_amended_code)) as rsn_amended_code\r\n\t\tFROM  \r\n\t\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code tl\r\n\t\tWHERE \r\n\t\t\ttl.crrnt_snpsht_flag=1 and tl.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code ORDER BY sup_rsn_amended_code_id DESC) = 1\n),\nEXP_Detect_Changes_wbrsnca AS (\n\tSELECT\n\tEXP_values_wbrsnca.cancellation_reason_code_code AS reason_amended_code,\n\tEXP_values_wbrsnca.cancellation_reason_descript AS alpha_descr_of_reason_amended,\n\tLKP_sup_reason_amended_code_wbrsnca.sup_rsn_amended_code_id AS LKP_sup_rsn_amended_code_id,\n\tLKP_sup_reason_amended_code_wbrsnca.rsn_amended_code_descript AS LKP_rsn_amended_code_descript,\n\t1 AS crrnt_snapshot_flag,\n\t-- *INF*: IIF(ISNULL(LKP_sup_rsn_amended_code_id),'NEW',\r\n\t-- \tIIF(\r\n\t-- \t(ltrim(rtrim(alpha_descr_of_reason_amended)) <> ltrim(rtrim(LKP_rsn_amended_code_descript))),\r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(LKP_sup_rsn_amended_code_id IS NULL, 'NEW', IFF(( ltrim(rtrim(alpha_descr_of_reason_amended)) <> ltrim(rtrim(LKP_rsn_amended_code_descript)) ), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_ID,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tTO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(TO_CHAR(SYSDATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS Source_System_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date\n\tFROM EXP_values_wbrsnca\n\tLEFT JOIN LKP_sup_reason_amended_code_wbrsnca\n\tON LKP_sup_reason_amended_code_wbrsnca.rsn_amended_code = EXP_values_wbrsnca.cancellation_reason_code_code\n),\nFIL_insert_wbrsnca AS (\n\tSELECT\n\treason_amended_code AS rsn_amended_code, \n\talpha_descr_of_reason_amended AS rsn_amended_code_descript, \n\tcrrnt_snapshot_flag, \n\tAudit_ID, \n\tEff_From_Date, \n\tEff_To_Date, \n\tChanged_Flag, \n\tSource_System_ID, \n\tCreated_Date, \n\tModified_Date\n\tFROM EXP_Detect_Changes_wbrsnca\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nINS_sup_reason_amended_code_wbrsnca AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, rsn_amended_code, rsn_amended_code_descript, StandardReasonAmendedCode, StandardReasonAmendedDescription)\n\tSELECT \n\tcrrnt_snapshot_flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_ID AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSource_System_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tRSN_AMENDED_CODE, \n\tRSN_AMENDED_CODE_DESCRIPT, \n\trsn_amended_code AS STANDARDREASONAMENDEDCODE, \n\trsn_amended_code_descript AS STANDARDREASONAMENDEDDESCRIPTION\n\tFROM FIL_insert_wbrsnca\n),\nSQ_sup_reason_amended_code1 AS (\n\tSELECT \r\n\t\tsup_rsn_amended_code_id, \r\n\t\teff_from_date, \r\n\t\teff_to_date, \r\n\t\trsn_amended_code \r\n\tFROM\r\n\t \t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\r\n\tWHERE rsn_amended_code IN \r\n\t\t   (SELECT rsn_amended_code FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\r\n\t           WHERE crrnt_snpsht_flag = 1 GROUP BY rsn_amended_code,source_sys_id HAVING count(*) > 1)\r\n\tORDER BY  rsn_amended_code, eff_from_date  DESC\n),\nEXP_Lag_Eff_dates AS (\n\tSELECT\n\tsup_rsn_amended_code_id,\n\trsn_amended_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \trsn_amended_code = v_PREV_ROW_rsn_amended_code, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\trsn_amended_code = v_PREV_ROW_rsn_amended_code, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\trsn_amended_code AS v_PREV_ROW_rsn_amended_code,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snapshot_flag\n\tFROM SQ_sup_reason_amended_code1\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tsup_rsn_amended_code_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snapshot_flag\n\tFROM EXP_Lag_Eff_dates\n\tWHERE orig_eff_to_date <> eff_to_date\n),\nUPD_Sup_Reason_Amended_Code AS (\n\tSELECT\n\tsup_rsn_amended_code_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snapshot_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nUPD_sup_reason_amended_code AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code AS T\n\tUSING UPD_Sup_Reason_Amended_Code AS S\n\tON T.sup_rsn_amended_code_id = S.sup_rsn_amended_code_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905515"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604176"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:20:53"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:53:42"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}