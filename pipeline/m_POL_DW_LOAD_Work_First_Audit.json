{
    "name": "m_POL_DW_LOAD_Work_First_Audit",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_Work_First_Audit",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumMasterCalculation AS (\n\tselect A.PremiumMasterCalculationID,\r\n\t A.PolicyKey, \r\n\t A.PolicyAKID, \r\n\t A.RiskLocationAKID, \r\n\t A.PolicyCoverageAKID, \r\n\t A.StatisticalCoverageAKID, \r\n\t A.PremiumMasterTransactionCode, \r\n\t A.PremiumMasterRunDate, \r\n\t A.PremiumMasterPremiumType, \r\n\t A.PremiumMasterPremium, \r\n\t A.PremiumMasterFullTermPremium,\r\n\tA.PremiumMasterCoverageEffectiveDate,\r\n\tA.PremiumMasterCoverageExpirationDate,\r\n\tA.RatingCoverageAKId from (\r\n\tSELECT PMC.PremiumMasterCalculationID,\r\n\t PMC.PolicyKey, \r\n\t PMC.PolicyAKID, \r\n\t PMC.RiskLocationAKID, \r\n\t PMC.PolicyCoverageAKID, \r\n\t PMC.StatisticalCoverageAKID, \r\n\t PMC.PremiumMasterTransactionCode, \r\n\t PMC.PremiumMasterRunDate, \r\n\t PMC.PremiumMasterPremiumType, \r\n\t PMC.PremiumMasterPremium, \r\n\t PMC.PremiumMasterFullTermPremium,\r\n\tPMC.PremiumMasterCoverageEffectiveDate,\r\n\tPMC.PremiumMasterCoverageExpirationDate,\r\n\t WFA.PolicyAKID Work_PolicyAKID,\r\n\tPMC.PremiumMasterReasonAmendedCode,\r\n\tPMC.RatingCoverageAKId,\r\n\tPMC.SourceSystemID\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumMasterCalculation PMC left outer join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkFirstAudit WFA\r\n\t on PMC.PolicyAKID = WFA.PolicyAKID \r\n\t AND PMC.StatisticalCoverageAKID = WFA.StatisticalCoverageAKID\r\n\tAND PMC.RatingCoverageAKID=WFA.RatingCoverageAKID\r\n\tAND PMC.PremiumMasterPremiumType=WFA.PremiumMasterPremiumType\r\n\t where CONVERT(varchar(6), case when PMC.Premiummasterrundate>=PMC.PremiumMasterCoverageEffectiveDate then PMC.Premiummasterrundate else PMC.PremiumMasterCoverageEffectiveDate end,112)=CONVERT(varchar(6),DATEADD(MM, -@{pipeline().parameters.NO_OF_MONTHS}, GETDATE()),112)\r\n\t--and case when PMC.PremiumMasterPremium=0.0 then 'FALSE'\r\n\t--when PMC.PremiumMasterTransactionCode='15' then 'FALSE' else 'TRUE' end='TRUE'\r\n\tand PMC.PremiumMasterTransactionCode in ('14','24')) A\r\n\twhere A.Work_PolicyAKID is null\r\n\t@{pipeline().parameters.REASON_AMENDED_CODE}\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nAGG_Supress_Multiple_Audits AS (\n\tSELECT\n\tPremiumMasterCalculationID, \n\tPolicyKey, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumMasterTransactionCode, \n\tPremiumMasterRunDate, \n\tPremiumMasterPremiumType, \n\tPremiumMasterPremium, \n\tPremiumMasterFullTermPremium, \n\tPremiumMasterCoverageEffectiveDate, \n\tPremiumMasterCoverageExpirationDate, \n\tRatingCoverageAKId\n\tFROM SQ_PremiumMasterCalculation\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID, StatisticalCoverageAKID, PremiumMasterPremiumType, RatingCoverageAKId ORDER BY NULL) = 1\n),\nLKP_Get_CancellationDate AS (\n\tSELECT\n\tStatisticalCoverageCancellationDate,\n\tMin_Premium,\n\tRundate,\n\tPremiumType,\n\tPolicyAKID,\n\tStatisticalCoverageAKID,\n\tRatingCoverageAKId\n\tFROM (\n\t\tSELECT WEPCM.StatisticalCoverageCancellationDate as StatisticalCoverageCancellationDate,\r\n\t\t WEPCM.MinimumPremium as Min_Premium,\r\n\t\t WEPCM.PolicyAKID as PolicyAKID,\r\n\t\t WEPCM.StatisticalCoverageAKID as StatisticalCoverageAKID,\r\n\t\t WEPCM.RatingCoverageAKId as RatingCoverageAKId,\r\n\t\tWEPCM.RUNDATE as Rundate,\r\n\t\tWEPCM.PremiumType as PremiumType\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkEarnedPremiumCoverageMonthly WEPCM,(select PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId, max(RunDate) Max_Rundate\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkEarnedPremiumCoverageMonthly A \r\n\t\tgroup by PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId ) A\r\n\t\twhere WEPCM.PolicyAKID=A.PolicyAKID\r\n\t\tand WEPCM.StatisticalCoverageAKID=A.StatisticalCoverageAKID\r\n\t\tand WEPCM.RatingCoverageAKId=A.RatingCoverageAKId \r\n\t\tand WEPCM.RunDate=A.Max_Rundate\r\n\t\tand CONVERT(varchar(6),WEPCM.Rundate,112)<=CONVERT(varchar(6),DATEADD(MM, -@{pipeline().parameters.NO_OF_MONTHS}, GETDATE()),112)\r\n\t\tand WEPCM.MinimumPremium=0\r\n\t\t@{pipeline().parameters.LOOKUP_WORK_CLAUSE}\r\n\t\tORDER BY WEPCM.Rundate,WEPCM.PremiumType\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId ORDER BY StatisticalCoverageCancellationDate DESC) = 1\n),\nEXP_Flag_First_Audits AS (\n\tSELECT\n\tAGG_Supress_Multiple_Audits.PremiumMasterCalculationID,\n\tAGG_Supress_Multiple_Audits.PolicyKey,\n\tAGG_Supress_Multiple_Audits.PolicyAKID,\n\tAGG_Supress_Multiple_Audits.RiskLocationAKID,\n\tAGG_Supress_Multiple_Audits.PolicyCoverageAKID,\n\tAGG_Supress_Multiple_Audits.StatisticalCoverageAKID,\n\tAGG_Supress_Multiple_Audits.PremiumMasterTransactionCode,\n\tAGG_Supress_Multiple_Audits.PremiumMasterPremiumType,\n\tAGG_Supress_Multiple_Audits.PremiumMasterPremium,\n\tAGG_Supress_Multiple_Audits.PremiumMasterFullTermPremium,\n\tLKP_Get_CancellationDate.StatisticalCoverageCancellationDate AS Lkp_StatisticalCoverageCancellationDate,\n\t-- *INF*: IIF(NOT ISNULL(Lkp_StatisticalCoverageCancellationDate),IIF((PremiumMasterPremiumType='D' and Lkp_PremiumType='D') \r\n\t-- OR (PremiumMasterPremiumType='C' and Lkp_PremiumType='D') \r\n\t-- OR (PremiumMasterPremiumType='C' and Lkp_PremiumType='C')\r\n\t-- ,Lkp_StatisticalCoverageCancellationDate,TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')),Lkp_StatisticalCoverageCancellationDate)\r\n\t-- \r\n\t-- --If premiumMasterPremiumType is Direct and the Cancelled Coverage PremiumType is Ceeded then the cancelled date will be '12/31/2100 23:59:59'.\n\tIFF(NOT Lkp_StatisticalCoverageCancellationDate IS NULL, IFF(( PremiumMasterPremiumType = 'D' AND Lkp_PremiumType = 'D' ) OR ( PremiumMasterPremiumType = 'C' AND Lkp_PremiumType = 'D' ) OR ( PremiumMasterPremiumType = 'C' AND Lkp_PremiumType = 'C' ), Lkp_StatisticalCoverageCancellationDate, TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')), Lkp_StatisticalCoverageCancellationDate) AS v_StatisticalCoverageCancellationDate,\n\tv_StatisticalCoverageCancellationDate AS StatisticalCoverageCancellationDate,\n\tLKP_Get_CancellationDate.Min_Premium,\n\tLKP_Get_CancellationDate.Rundate AS Lkp_Rundate,\n\tLKP_Get_CancellationDate.PremiumType AS Lkp_PremiumType,\n\tAGG_Supress_Multiple_Audits.PremiumMasterRunDate,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART( PremiumMasterRunDate, 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\n\tSET_DATE_PART(SET_DATE_PART(SET_DATE_PART(PremiumMasterRunDate, 'HH', 23), 'MI', 59), 'SS', 59) AS v_Rundate,\n\tv_Rundate AS Rundate,\n\tAGG_Supress_Multiple_Audits.PremiumMasterCoverageEffectiveDate,\n\tAGG_Supress_Multiple_Audits.PremiumMasterCoverageExpirationDate,\n\t-- *INF*: IIF((PremiumMasterPremiumType='D' and Lkp_PremiumType='D') OR (PremiumMasterPremiumType='C' and Lkp_PremiumType='D') OR (PremiumMasterPremiumType='C' and Lkp_PremiumType='C'),'TRUE','FALSE')\n\tIFF(( PremiumMasterPremiumType = 'D' AND Lkp_PremiumType = 'D' ) OR ( PremiumMasterPremiumType = 'C' AND Lkp_PremiumType = 'D' ) OR ( PremiumMasterPremiumType = 'C' AND Lkp_PremiumType = 'C' ), 'TRUE', 'FALSE') AS v_Direct_Ceeded_Flag,\n\t-- *INF*: IIF(TRUNC(IIF(v_Rundate>=PremiumMasterCoverageEffectiveDate,v_Rundate,PremiumMasterCoverageEffectiveDate),'MM')=TRUNC(Lkp_Rundate,'MM'),\r\n\t-- 'TRUE','FALSE')\r\n\t-- \r\n\t-- --IIF((v_Rundate=Lkp_Rundate) OR (to_char(PremiumMasterRunDate,'YYYYMM')>to_char(PremiumMasterCoverageExpirationDate,'YYYYMM')),'TRUE','FALSE')\r\n\t-- \r\n\t-- \r\n\t-- --IIF(PremiumMasterRunDate>=PremiumMasterCoverageEffectiveDate and PremiumMasterRunDate----<=PremiumMasterCoverageExpirationDate and v_Rundate=Lkp_Rundate,'TRUE','FLASE')\n\tIFF(TRUNC(IFF(v_Rundate >= PremiumMasterCoverageEffectiveDate, v_Rundate, PremiumMasterCoverageEffectiveDate), 'MM') = TRUNC(Lkp_Rundate, 'MM'), 'TRUE', 'FALSE') AS v_Audit_After_Cancellation_Reinstatement,\n\t-- *INF*: 'TRUE'\r\n\t-- \r\n\t-- \r\n\t-- --IIF(to_char(PremiumMasterRunDate,'YYYYMM')=to_char(Lkp_StatisticalCoverageCancellationDate,'YYYYMM'),'FALSE','TRUE')\n\t'TRUE' AS v_Flag_First_Audit,\n\tAGG_Supress_Multiple_Audits.RatingCoverageAKId,\n\t-- *INF*: IIF(ISNULL(v_StatisticalCoverageCancellationDate) OR v_StatisticalCoverageCancellationDate=TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS'),'FALSE',IIF(Min_Premium=0.0 and v_Flag_First_Audit='TRUE' and v_Audit_After_Cancellation_Reinstatement='TRUE' and v_Direct_Ceeded_Flag='TRUE','TRUE','FALSE'))\n\tIFF(v_StatisticalCoverageCancellationDate IS NULL OR v_StatisticalCoverageCancellationDate = TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'), 'FALSE', IFF(Min_Premium = 0.0 AND v_Flag_First_Audit = 'TRUE' AND v_Audit_After_Cancellation_Reinstatement = 'TRUE' AND v_Direct_Ceeded_Flag = 'TRUE', 'TRUE', 'FALSE')) AS Flag\n\tFROM AGG_Supress_Multiple_Audits\n\tLEFT JOIN LKP_Get_CancellationDate\n\tON LKP_Get_CancellationDate.PolicyAKID = AGG_Supress_Multiple_Audits.PolicyAKID AND LKP_Get_CancellationDate.StatisticalCoverageAKID = AGG_Supress_Multiple_Audits.StatisticalCoverageAKID AND LKP_Get_CancellationDate.RatingCoverageAKId = AGG_Supress_Multiple_Audits.RatingCoverageAKId\n),\nFIL_First_Audits AS (\n\tSELECT\n\tPremiumMasterCalculationID, \n\tPolicyKey, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumMasterTransactionCode, \n\tPremiumMasterPremiumType, \n\tPremiumMasterPremium, \n\tPremiumMasterFullTermPremium, \n\tStatisticalCoverageCancellationDate, \n\tFlag, \n\tRundate, \n\tRatingCoverageAKId\n\tFROM EXP_Flag_First_Audits\n\tWHERE Flag='TRUE'\n),\nExp_Tgt_Data_Collect AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CreatedDate,\n\tPremiumMasterCalculationID,\n\tPolicyKey,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumMasterTransactionCode,\n\tPremiumMasterPremiumType,\n\tPremiumMasterPremium,\n\tPremiumMasterFullTermPremium,\n\tStatisticalCoverageCancellationDate,\n\tRundate,\n\tRatingCoverageAKId\n\tFROM FIL_First_Audits\n),\nWorkFirstAudit AS (\n\tINSERT INTO Shortcut_to_WorkFirstAudit\n\t(AuditId, CreatedDate, PremiumMasterCalculationID, PolicyKey, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, PremiumMasterTransactionCode, PremiumMasterPremiumType, PremiumMasterPremium, PremiumMasterFullTermPremium, StatisticalCoverageCancellationDate, Rundate, RatingCoverageAKId)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tPREMIUMMASTERCALCULATIONID, \n\tPOLICYKEY, \n\tPOLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPREMIUMMASTERTRANSACTIONCODE, \n\tPREMIUMMASTERPREMIUMTYPE, \n\tPREMIUMMASTERPREMIUM, \n\tPREMIUMMASTERFULLTERMPREMIUM, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID\n\tFROM Exp_Tgt_Data_Collect\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244754"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893066"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542205"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 05:01:46"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 09:55:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "1"
            },
            "REASON_AMENDED_CODE": {
                "type": "string",
                "defaultValue": "AND PremiumMasterReasonAmendedCode not in ('CWO','COL')"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "LOOKUP_WORK_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}