{
    "name": "s_m_CLM_DW_LOAD_Claim_Payment_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Payment_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLM_COMMENTS_STAGE AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT \r\n\t\tCLM_COMMENTS_STAGE.TCC_COMMENT_TXT as TCC_COMMENT_TXT, \r\n\t\tRTRIM(CLM_COMMENTS_STAGE.FOLDER_KEY) as FOLDER_KEY, \r\n\t\tCLM_COMMENTS_STAGE.COMMENT_ITEM_NBR as COMMENT_ITEM_NBR \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_COMMENTS_STAGE CLM_COMMENTS_STAGE\r\n\t\tWHERE FOLDER_KEY IN (SELECT DISTINCT DFT_CLAIM_NBR FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_DRAFT_STAGE)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT DESC) = 1\n),\nLKP_CLIENT_TAB_STAGE AS (\n\tSELECT\n\tCLM_METHOD_RPTD,\n\tCLM_CLAIM_NBR\n\tFROM (\n\t\tSELECT CLAIM_TAB_STAGE.CLM_METHOD_RPTD as CLM_METHOD_RPTD, \r\n\t\tRTRIM(CLAIM_TAB_STAGE.CLM_CLAIM_NBR) as CLM_CLAIM_NBR \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_TAB_STAGE CLAIM_TAB_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CLM_CLAIM_NBR ORDER BY CLM_METHOD_RPTD) = 1\n),\nLKP_CLAIM_PARTY_FULL_NAME AS (\n\tSELECT\n\tclaim_party_full_name,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party.claim_party_full_name as claim_party_full_name, \r\n\t\tLTRIM(RTRIM(claim_party.claim_party_key)) as claim_party_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party claim_party\r\n\t\tWHERE crrnt_snpsht_flag =1 and source_sys_id ='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_full_name) = 1\n),\nLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_other_Payee AS (\n\tSELECT\n\tCDC_PAYEE_NM_ID,\n\tCDC_DRAFT_NBR,\n\tCDC_SEQ_NBR\n\tFROM (\n\t\tSELECT RTRIM(ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_PAYEE_NM_ID) AS CDC_PAYEE_NM_ID,\r\n\t\t\tRTRIM(ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_DRAFT_NBR) AS CDC_DRAFT_NBR,\r\n\t\t\tARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_SEQ_NBR AS CDC_SEQ_NBR\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.ARCH_CLAIM_DRAFT_CLIENT_STAGE\r\n\t\tWHERE ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_NAME_TYPE_IND = 'A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CDC_DRAFT_NBR,CDC_SEQ_NBR ORDER BY CDC_PAYEE_NM_ID DESC) = 1\n),\nLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID AS (\n\tSELECT\n\tcdc_pye_nm_cmt_id,\n\tcdc_draft_nbr,\n\tcdc_seq_nbr\n\tFROM (\n\t\tSELECT RTRIM(cdc_draft_nbr) AS cdc_draft_nbr,\r\n\t\t\tcdc_seq_nbr AS cdc_seq_nbr,\r\n\t\t\tCOALESCE(cdc_pye_nm_cmt_id, -1) AS cdc_pye_nm_cmt_id\r\n\t\tFROM dbo.arch_claim_draft_client_stage\r\n\t\tWHERE cdc_name_type_ind = 'A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cdc_draft_nbr,cdc_seq_nbr ORDER BY cdc_pye_nm_cmt_id) = 1\n),\nLKP_sup_payment_system AS (\n\tSELECT\n\tsup_payment_system_id,\n\tpayment_system\n\tFROM (\n\t\tSELECT \n\t\t\tsup_payment_system_id,\n\t\t\tpayment_system\n\t\tFROM sup_payment_system\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY payment_system ORDER BY sup_payment_system_id) = 1\n),\nLKP_sup_payment_method AS (\n\tSELECT\n\tsup_payment_method_id,\n\tpayment_method\n\tFROM (\n\t\tSELECT \n\t\t\tsup_payment_method_id,\n\t\t\tpayment_method\n\t\tFROM sup_payment_method\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY payment_method ORDER BY sup_payment_method_id) = 1\n),\nSQ_CLAIM_DRAFT_STAGE AS (\n\tSELECT RTRIM(CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR),\r\n\t\tRTRIM(CLAIM_DRAFT_STAGE.DFT_BANK_NBR),\r\n\t\tRTRIM(CLAIM_DRAFT_STAGE.DFT_MAIL_TO_NM_ID),\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MAIL_TO_ADR_1,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MAIL_TO_ADR_2,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_TRS_AMT,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MAIL_TO_ZIP_CD,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_CK_DRAFT_IND,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_DFT_CK_TYP_CD,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_ENTRY_OPR_ID,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_CREATE_TS,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MICRP_ECD_NBR,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MMO_PHR_CMT_ID,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_CITY_NM,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MAIL_TO_ST_CD,\r\n\t\tRTRIM(CLAIM_DRAFT_STAGE.DFT_CLAIM_NBR),\r\n\t\tCLAIM_DRAFT_STAGE.DFT_DBS_STATUS_CD,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_DBS_DT,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_DSB_LOC_CD,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_PYE_PHR_CMT_ID,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_PAY_TO_NM_CMT_ID,\r\n\t\tCLAIM_DRAFT_STAGE.DFT_MAIL_TO_NM_CMT_ID, \r\n\t\tCLAIM_DRAFT_STAGE.PAYMENT_SYSTEM \r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_DRAFT_STAGE CLAIM_DRAFT_STAGE\n),\nEXP_Clean_Up_Input AS (\n\tSELECT\n\tDFT_MICRP_ECD_NBR AS in_DFT_MICRP_ECD_NBR,\n\tDFT_DRAFT_NBR AS in_DFT_DRAFT_NBR,\n\t-- *INF*: UPPER(:UDF.DEFAULT_VALUE_TO_BLANKS(in_DFT_MICRP_ECD_NBR))\n\tUPPER(UDF_DEFAULT_VALUE_TO_BLANKS(in_DFT_MICRP_ECD_NBR)) AS o_DFT_MICRP_ECD_NBR,\n\t-- *INF*: IIF(ISNULL(in_DFT_DRAFT_NBR) OR IS_SPACES(in_DFT_DRAFT_NBR), 'N/A',LTRIM(RTRIM(in_DFT_DRAFT_NBR)))\n\tIFF(\n\t    in_DFT_DRAFT_NBR IS NULL OR LENGTH(in_DFT_DRAFT_NBR)>0 AND TRIM(in_DFT_DRAFT_NBR)='', 'N/A',\n\t    LTRIM(RTRIM(in_DFT_DRAFT_NBR))\n\t) AS o_DFT_DRAFT_NBR\n\tFROM SQ_CLAIM_DRAFT_STAGE\n),\nLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE AS (\n\tSELECT\n\tCDC_PYE_NM_CMT_ID,\n\tCDC_PAYEE_NM_ID,\n\tCDC_REPORT_TO_IRS,\n\tCDC_DRAFT_NBR\n\tFROM (\n\t\tSELECT CDCS.CDC_PYE_NM_CMT_ID AS CDC_PYE_NM_CMT_ID,\r\n\t\t\tRTRIM(CDCS.CDC_PAYEE_NM_ID) AS CDC_PAYEE_NM_ID,\r\n\t\t\tCDCS.CDC_REPORT_TO_IRS AS CDC_REPORT_TO_IRS,\r\n\t\t\tRTRIM(CDCS.CDC_DRAFT_NBR) AS CDC_DRAFT_NBR\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.ARCH_CLAIM_DRAFT_CLIENT_STAGE CDCS\r\n\t\tWHERE CDCS.CDC_NAME_TYPE_IND = 'P'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CDC_DRAFT_NBR ORDER BY CDC_PYE_NM_CMT_ID DESC) = 1\n),\nLKP_ArchInsurPayPaymentStage_MatchingCheckNumber AS (\n\tSELECT\n\tCheckNumber\n\tFROM (\n\t\tselect UPPER(a.CheckNumber) as CheckNumber\r\n\t\tfrom dbo.ArchInsurPayPaymentStage a\r\n\t\tjoin dbo.claim_draft_stage d on a.CheckNumber = d.dft_micrp_ecd_nbr\r\n\t\t\tand UPPER(d.payment_system) = 'MANUAL DRAFT'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CheckNumber ORDER BY CheckNumber) = 1\n),\nLKP_CLAIM_PAYMENT AS (\n\tSELECT\n\tclaim_pay_id,\n\tsup_payment_method_id,\n\tclaim_pay_num\n\tFROM (\n\t\tSELECT claim_payment.claim_pay_id AS claim_pay_id,\r\n\t\t\tclaim_payment.sup_payment_method_id AS sup_payment_method_id,\r\n\t\t\tRTRIM(claim_payment.claim_pay_num) AS claim_pay_num\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment claim_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_id) = 1\n),\nLKP_CLM_OFFSET_HONOR_STAGE AS (\n\tSELECT\n\tin_DFT_DRAFT_NBR,\n\tCOH_DRAFT_NBR,\n\tCOH_NEW_CLAIM_NBR,\n\tCOH_NEW_DRAFT_NBR,\n\tCOH_CREATE_TS,\n\tCOH_UPD_TS,\n\tCOH_DELETE_IND\n\tFROM (\n\t\tSELECT \r\n\t\tCLM_OFFSET_HONOR_STAGE.COH_NEW_CLAIM_NBR as COH_NEW_CLAIM_NBR, \r\n\t\tCLM_OFFSET_HONOR_STAGE.COH_NEW_DRAFT_NBR as COH_NEW_DRAFT_NBR, \r\n\t\tCLM_OFFSET_HONOR_STAGE.COH_CREATE_TS as COH_CREATE_TS, \r\n\t\tCLM_OFFSET_HONOR_STAGE.COH_UPD_TS as COH_UPD_TS, \r\n\t\tCLM_OFFSET_HONOR_STAGE.COH_DELETE_IND as COH_DELETE_IND, \r\n\t\tRTRIM(CLM_OFFSET_HONOR_STAGE.COH_DRAFT_NBR) as COH_DRAFT_NBR \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_OFFSET_HONOR_STAGE CLM_OFFSET_HONOR_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY COH_DRAFT_NBR ORDER BY in_DFT_DRAFT_NBR) = 1\n),\nLKP_OPER_ROLE_CODE AS (\n\tSELECT\n\tCAJ_USER_ID,\n\tin_CAJ_USER_ID,\n\tCAJ_ADJUSTER_TYPE\n\tFROM (\n\t\tSELECT ADJUSTER_TAB_STAGE.CAJ_ADJUSTER_TYPE as CAJ_ADJUSTER_TYPE, \r\n\t\tRTRIM(ADJUSTER_TAB_STAGE.CAJ_USER_ID) as CAJ_USER_ID \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.ADJUSTER_TAB_STAGE ADJUSTER_TAB_STAGE, \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLIENT_TAB_STAGE\r\n\t\tWHERE\r\n\t\tADJUSTER_TAB_STAGE.CAJ_EMP_CLIENT_ID = CLIENT_TAB_STAGE.CLIENT_ID AND\r\n\t\tCLIENT_TAB_STAGE.HISTORY_VLD_NBR = 0.00\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CAJ_USER_ID ORDER BY CAJ_USER_ID) = 1\n),\nEXP_VALUES AS (\n\tSELECT\n\tSQ_CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR AS IN_DFT_DRAFT_NBR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_PYE_PHR_CMT_ID,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MICRP_ECD_NBR AS IN_DFT_MICRP_ECD_NBR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_TRS_AMT AS IN_DFT_TRS_AMT,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_CREATE_TS AS IN_DFT_CREATE_TS,\n\tLKP_CLM_OFFSET_HONOR_STAGE.COH_DELETE_IND AS IN_COH_DELETE_IND,\n\tLKP_CLM_OFFSET_HONOR_STAGE.COH_NEW_CLAIM_NBR AS IN_COH_NEW_CLAIM_NBR,\n\tLKP_CLM_OFFSET_HONOR_STAGE.COH_NEW_DRAFT_NBR AS IN_COH_NEW_DRAFT_NBR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MMO_PHR_CMT_ID,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_BANK_NBR AS IN_DFT_BANK_NBR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_CK_DRAFT_IND AS IN_DFT_CK_DRAFT_IND,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_DFT_CK_TYP_CD AS IN_DFT_DFT_CK_TYP_CD,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_DBS_DT AS IN_DFT_DBS_DT,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_CLAIM_NBR AS IN_DFT_CLAIM_NBR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_DBS_STATUS_CD AS IN_DFT_DBS_STATUS_CD,\n\tLKP_CLM_OFFSET_HONOR_STAGE.COH_CREATE_TS AS IN_COH_CREATE_TS,\n\tLKP_CLM_OFFSET_HONOR_STAGE.COH_UPD_TS AS IN_COH_UPD_TS,\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_REPORT_TO_IRS,\n\t-- *INF*: IIF(ISNULL(RTRIM(CDC_REPORT_TO_IRS)),'N/A',RTRIM(CDC_REPORT_TO_IRS))\n\tIFF(RTRIM(CDC_REPORT_TO_IRS) IS NULL, 'N/A', RTRIM(CDC_REPORT_TO_IRS)) AS out_CDC_REPORT_TO_IRS,\n\t-- *INF*: :LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, DFT_PAY_TO_NM_CMT_ID)\n\tLKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_PAY_TO_NM_CMT_ID.TCC_COMMENT_TXT AS VAR_Payee_Phrase_Description,\n\t-- *INF*: :LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR,DFT_MMO_PHR_CMT_ID )\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tLKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MMO_PHR_CMT_ID.TCC_COMMENT_TXT AS VAR_Memo_Pharse_Description,\n\t-- *INF*: IIF(ISNULL(IN_DFT_DBS_DT), TO_DATE('1/1/1800','MM/DD/YYYY'),IN_DFT_DBS_DT)\n\tIFF(IN_DFT_DBS_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_DFT_DBS_DT) AS OUT_DFT_DBS_DT,\n\tEXP_Clean_Up_Input.o_DFT_DRAFT_NBR AS DFT_DRAFT_NBR,\n\t-- *INF*: IIF(ISNULL(VAR_Payee_Phrase_Description) OR RTRIM(VAR_Payee_Phrase_Description) = '',\r\n\t-- \t'N/A',\r\n\t-- \tLTRIM(RTRIM(VAR_Payee_Phrase_Description)))\n\tIFF(\n\t    VAR_Payee_Phrase_Description IS NULL OR RTRIM(VAR_Payee_Phrase_Description) = '', 'N/A',\n\t    LTRIM(RTRIM(VAR_Payee_Phrase_Description))\n\t) AS OUT_Payee_Phrase_Description,\n\t-- *INF*: IIF(ISNULL(VAR_Memo_Pharse_Description),'N/A',LTRIM(RTRIM(VAR_Memo_Pharse_Description)))\n\tIFF(VAR_Memo_Pharse_Description IS NULL, 'N/A', LTRIM(RTRIM(VAR_Memo_Pharse_Description))) AS OUT_Memo_Pharse_Description,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_CLIENT_TAB_STAGE(IN_DFT_DRAFT_NBR) )OR IS_SPACES(:LKP.LKP_CLIENT_TAB_STAGE(IN_DFT_DRAFT_NBR)), 'N/A',LTRIM(RTRIM(:LKP.LKP_CLIENT_TAB_STAGE(IN_DFT_DRAFT_NBR))))\n\tIFF(\n\t    LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR.CLM_METHOD_RPTD IS NULL\n\t    or LENGTH(LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR.CLM_METHOD_RPTD)>0\n\t    and TRIM(LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR.CLM_METHOD_RPTD)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR.CLM_METHOD_RPTD))\n\t) AS OUT_CLM_METHOD_RPTD,\n\t-- *INF*: IIF(ISNULL(IN_DFT_MICRP_ECD_NBR) OR IS_SPACES(IN_DFT_MICRP_ECD_NBR),'N/A',LTRIM(RTRIM(IN_DFT_MICRP_ECD_NBR)))\n\tIFF(\n\t    IN_DFT_MICRP_ECD_NBR IS NULL\n\t    or LENGTH(IN_DFT_MICRP_ECD_NBR)>0\n\t    and TRIM(IN_DFT_MICRP_ECD_NBR)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_DFT_MICRP_ECD_NBR))\n\t) AS OUT_DFT_MICRP_ECD_NBR,\n\t-- *INF*: IIF(ISNULL(IN_DFT_TRS_AMT),  0, IN_DFT_TRS_AMT)\n\tIFF(IN_DFT_TRS_AMT IS NULL, 0, IN_DFT_TRS_AMT) AS OUT_DFT_TRS_AMT,\n\t-- *INF*: IIF(ISNULL(IN_DFT_CREATE_TS),TO_DATE('1/1/1800','MM/DD/YYYY') , IN_DFT_CREATE_TS)\n\tIFF(IN_DFT_CREATE_TS IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_DFT_CREATE_TS) AS OUT_DFT_CREATE_TS,\n\t-- *INF*: IIF(ISNULL(IN_COH_NEW_DRAFT_NBR)  OR IS_SPACES(IN_COH_NEW_DRAFT_NBR), 'N/A', LTRIM(RTRIM(IN_COH_NEW_DRAFT_NBR)))\n\tIFF(\n\t    IN_COH_NEW_DRAFT_NBR IS NULL\n\t    or LENGTH(IN_COH_NEW_DRAFT_NBR)>0\n\t    and TRIM(IN_COH_NEW_DRAFT_NBR)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_COH_NEW_DRAFT_NBR))\n\t) AS OUT_COH_NEW_DRAFT_NBR,\n\t-- *INF*: IIF(ISNULL(IN_COH_DELETE_IND) OR IS_SPACES(IN_COH_DELETE_IND),'N/A',LTRIM(RTRIM(IN_COH_DELETE_IND)))\n\tIFF(\n\t    IN_COH_DELETE_IND IS NULL OR LENGTH(IN_COH_DELETE_IND)>0 AND TRIM(IN_COH_DELETE_IND)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_COH_DELETE_IND))\n\t) AS OUT_COH_DELETE_IND,\n\t-- *INF*: IIF(ISNULL(IN_COH_NEW_CLAIM_NBR) OR IS_SPACES(IN_COH_NEW_CLAIM_NBR),'N/A', LTRIM(RTRIM(IN_COH_NEW_CLAIM_NBR)))\n\tIFF(\n\t    IN_COH_NEW_CLAIM_NBR IS NULL\n\t    or LENGTH(IN_COH_NEW_CLAIM_NBR)>0\n\t    and TRIM(IN_COH_NEW_CLAIM_NBR)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_COH_NEW_CLAIM_NBR))\n\t) AS OUT_COH_NEW_CLAIM_NBR,\n\t-- *INF*: IIF(ISNULL(IN_DFT_BANK_NBR) OR IS_SPACES(IN_DFT_BANK_NBR),'04',LTRIM(RTRIM(IN_DFT_BANK_NBR)))\r\n\t-- \r\n\t-- --12/3/2010 : backfeed program puts 04 in this field. It is the bank number which is equal to M&I bank. Per Kristen  Mueller - \"My book says it can be entered or updated on the PUCT screen.  I had to talk to Carol about something else and this is all she knows also.  It appears we could change it if we changed banks but never have yet.\"\n\tIFF(\n\t    IN_DFT_BANK_NBR IS NULL OR LENGTH(IN_DFT_BANK_NBR)>0 AND TRIM(IN_DFT_BANK_NBR)='', '04',\n\t    LTRIM(RTRIM(IN_DFT_BANK_NBR))\n\t) AS OUT_DFT_BANK_NBR,\n\t-- *INF*: IIF(ISNULL(IN_DFT_CK_DRAFT_IND) OR IS_SPACES(IN_DFT_CK_DRAFT_IND), 'N/A', LTRIM(RTRIM(IN_DFT_CK_DRAFT_IND)))\n\tIFF(\n\t    IN_DFT_CK_DRAFT_IND IS NULL OR LENGTH(IN_DFT_CK_DRAFT_IND)>0 AND TRIM(IN_DFT_CK_DRAFT_IND)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_DFT_CK_DRAFT_IND))\n\t) AS OUT_DFT_CK_DRAFT_IND,\n\t-- *INF*: IIF(ISNULL(IN_DFT_DFT_CK_TYP_CD) OR IS_SPACES(IN_DFT_DFT_CK_TYP_CD),'N/A',LTRIM(RTRIM(IN_DFT_DFT_CK_TYP_CD)))\n\tIFF(\n\t    IN_DFT_DFT_CK_TYP_CD IS NULL\n\t    or LENGTH(IN_DFT_DFT_CK_TYP_CD)>0\n\t    and TRIM(IN_DFT_DFT_CK_TYP_CD)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_DFT_DFT_CK_TYP_CD))\n\t) AS OUT_DFT_DFT_CK_TYP_CD,\n\t-- *INF*: IIF(ISNULL(IN_DFT_DBS_STATUS_CD) OR IS_SPACES(IN_DFT_DBS_STATUS_CD),'N/A',LTRIM(RTRIM(IN_DFT_DBS_STATUS_CD)))\n\tIFF(\n\t    IN_DFT_DBS_STATUS_CD IS NULL\n\t    or LENGTH(IN_DFT_DBS_STATUS_CD)>0\n\t    and TRIM(IN_DFT_DBS_STATUS_CD)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_DFT_DBS_STATUS_CD))\n\t) AS OUT_DFT_DBS_STATUS_CD,\n\t'N/A' AS OUT_REPORTED_TO_IRS_IND,\n\t-- *INF*: IIF(ISNULL(IN_COH_CREATE_TS),TO_DATE('1/1/1800','MM/DD/YYYY') , IN_COH_CREATE_TS)\n\tIFF(IN_COH_CREATE_TS IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_COH_CREATE_TS) AS OUT_COH_CREATE_TS,\n\t-- *INF*: IIF(ISNULL(IN_COH_UPD_TS),TO_DATE('1/1/1800','MM/DD/YYYY') , IN_COH_UPD_TS)\n\tIFF(IN_COH_UPD_TS IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_COH_UPD_TS) AS OUT_COH_UPD_TS,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\n\tTO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY') AS OUT_PAY_CASHED_DATE,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_ENTRY_OPR_ID,\n\t-- *INF*: IIF(ISNULL(DFT_ENTRY_OPR_ID) OR IS_SPACES(DFT_ENTRY_OPR_ID),'N/A',LTRIM(RTRIM(DFT_ENTRY_OPR_ID)))\r\n\t-- \n\tIFF(\n\t    DFT_ENTRY_OPR_ID IS NULL OR LENGTH(DFT_ENTRY_OPR_ID)>0 AND TRIM(DFT_ENTRY_OPR_ID)='', 'N/A',\n\t    LTRIM(RTRIM(DFT_ENTRY_OPR_ID))\n\t) AS OUT_DFT_ENTRY_OPR_ID,\n\tLKP_OPER_ROLE_CODE.CAJ_ADJUSTER_TYPE,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_DSB_LOC_CD,\n\t-- *INF*: IIF(ISNULL(DFT_DSB_LOC_CD) OR IS_SPACES(DFT_DSB_LOC_CD),'N/A',LTRIM(RTRIM(DFT_DSB_LOC_CD)))\r\n\t-- \n\tIFF(\n\t    DFT_DSB_LOC_CD IS NULL OR LENGTH(DFT_DSB_LOC_CD)>0 AND TRIM(DFT_DSB_LOC_CD)='', 'N/A',\n\t    LTRIM(RTRIM(DFT_DSB_LOC_CD))\n\t) AS OUT_DFT_DSB_LOC_CD,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_ADR_1,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_ADR_2,\n\t-- *INF*: IIF(ISNULL(RTRIM(DFT_MAIL_TO_ADR_1) || RTRIM(DFT_MAIL_TO_ADR_2)),'N/A',RTRIM(DFT_MAIL_TO_ADR_1) || RTRIM(DFT_MAIL_TO_ADR_2))\n\tIFF(\n\t    RTRIM(DFT_MAIL_TO_ADR_1) || RTRIM(DFT_MAIL_TO_ADR_2) IS NULL, 'N/A',\n\t    RTRIM(DFT_MAIL_TO_ADR_1) || RTRIM(DFT_MAIL_TO_ADR_2)\n\t) AS MAIL_TO_ADR,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_CITY_NM,\n\t-- *INF*: IIF(ISNULL(DFT_CITY_NM) OR IS_SPACES(DFT_CITY_NM),'N/A',LTRIM(RTRIM(DFT_CITY_NM)))\n\tIFF(\n\t    DFT_CITY_NM IS NULL OR LENGTH(DFT_CITY_NM)>0 AND TRIM(DFT_CITY_NM)='', 'N/A',\n\t    LTRIM(RTRIM(DFT_CITY_NM))\n\t) AS OUT_CITY_NM,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_ST_CD,\n\t-- *INF*: IIF(ISNULL(DFT_MAIL_TO_ST_CD) OR IS_SPACES(DFT_MAIL_TO_ST_CD),'N/A',LTRIM(RTRIM(DFT_MAIL_TO_ST_CD)))\r\n\t-- \n\tIFF(\n\t    DFT_MAIL_TO_ST_CD IS NULL OR LENGTH(DFT_MAIL_TO_ST_CD)>0 AND TRIM(DFT_MAIL_TO_ST_CD)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(DFT_MAIL_TO_ST_CD))\n\t) AS OUT_MAIL_TO_ST_CD,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_ZIP_CD,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(DFT_MAIL_TO_ZIP_CD) OR IS_SPACES(DFT_MAIL_TO_ZIP_CD),'N/A',\r\n\t-- RTRIM(DFT_MAIL_TO_ZIP_CD)\r\n\t-- )\n\tIFF(\n\t    DFT_MAIL_TO_ZIP_CD IS NULL OR LENGTH(DFT_MAIL_TO_ZIP_CD)>0 AND TRIM(DFT_MAIL_TO_ZIP_CD)='',\n\t    'N/A',\n\t    RTRIM(DFT_MAIL_TO_ZIP_CD)\n\t) AS OUT_MAIL_TO_ZIP_CD,\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_PYE_NM_CMT_ID AS IN_CDC_PAYEE_NM_CMT_ID_primary_payee,\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_PAYEE_NM_ID AS IN_CDC_PAYEE_NM_ID_primary_payee,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_NM_ID AS IN_DFT_MAIL_TO_NM_ID,\n\t-- *INF*: :LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, DFT_MAIL_TO_NM_CMT_ID)\n\tLKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MAIL_TO_NM_CMT_ID.TCC_COMMENT_TXT AS v_mail_to_name,\n\t-- *INF*: IIF(ISNULL(v_mail_to_name) OR RTRIM(v_mail_to_name) = '',\r\n\t-- \t'N/A',\r\n\t-- \tv_mail_to_name)\n\tIFF(v_mail_to_name IS NULL OR RTRIM(v_mail_to_name) = '', 'N/A', v_mail_to_name) AS mail_to_name,\n\t-- *INF*: :LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, IN_CDC_PAYEE_NM_CMT_ID_primary_payee)\n\tLKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_IN_CDC_PAYEE_NM_CMT_ID_primary_payee.TCC_COMMENT_TXT AS v_original_prim_payee_name,\n\t-- *INF*: IIF(ISNULL(v_original_prim_payee_name) OR RTRIM(v_original_prim_payee_name) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(IN_CDC_PAYEE_NM_ID_primary_payee),\r\n\t-- \tv_original_prim_payee_name)\n\tIFF(\n\t    v_original_prim_payee_name IS NULL OR RTRIM(v_original_prim_payee_name) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_IN_CDC_PAYEE_NM_ID_primary_payee.claim_party_full_name,\n\t    v_original_prim_payee_name\n\t) AS v_prim_payee_name,\n\t-- *INF*: IIF(ISNULL(v_prim_payee_name) OR RTRIM(v_prim_payee_name) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_prim_payee_name)\n\tIFF(v_prim_payee_name IS NULL OR RTRIM(v_prim_payee_name) = '', 'N/A', v_prim_payee_name) AS prim_payee_name,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 2)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_2.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_1,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_1 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_1)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_1 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_1.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_1,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_1) OR RTRIM(v_original_additional_payee_name_1) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 2)),\r\n\t-- \tv_original_additional_payee_name_1)\n\tIFF(\n\t    v_original_additional_payee_name_1 IS NULL OR RTRIM(v_original_additional_payee_name_1) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2.claim_party_full_name,\n\t    v_original_additional_payee_name_1\n\t) AS v_add_payee_name_1,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_1) OR RTRIM(v_add_payee_name_1) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_1)\n\tIFF(v_add_payee_name_1 IS NULL OR RTRIM(v_add_payee_name_1) = '', 'N/A', v_add_payee_name_1) AS add_payee_name_1,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 3)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_3.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_2,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_2 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_2)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_2 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_2.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_2,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_2) OR RTRIM(v_original_additional_payee_name_2) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 3)),\r\n\t-- \tv_original_additional_payee_name_2)\n\tIFF(\n\t    v_original_additional_payee_name_2 IS NULL OR RTRIM(v_original_additional_payee_name_2) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3.claim_party_full_name,\n\t    v_original_additional_payee_name_2\n\t) AS v_add_payee_name_2,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_2) OR RTRIM(v_add_payee_name_2) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_2)\n\tIFF(v_add_payee_name_2 IS NULL OR RTRIM(v_add_payee_name_2) = '', 'N/A', v_add_payee_name_2) AS add_payee_name_2,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 4)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_4.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_3,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_3 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_3)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_3 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_3.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_3,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_3) OR RTRIM(v_original_additional_payee_name_3) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 4)),\r\n\t-- \tv_original_additional_payee_name_3)\n\tIFF(\n\t    v_original_additional_payee_name_3 IS NULL OR RTRIM(v_original_additional_payee_name_3) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4.claim_party_full_name,\n\t    v_original_additional_payee_name_3\n\t) AS v_add_payee_name_3,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_3) OR RTRIM(v_add_payee_name_3) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_3)\n\tIFF(v_add_payee_name_3 IS NULL OR RTRIM(v_add_payee_name_3) = '', 'N/A', v_add_payee_name_3) AS add_payee_name_3,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 5)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_5.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_4,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_4 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_4)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_4 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_4.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_4,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_4) OR RTRIM(v_original_additional_payee_name_4) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 5)),\r\n\t-- \tv_original_additional_payee_name_4)\n\tIFF(\n\t    v_original_additional_payee_name_4 IS NULL OR RTRIM(v_original_additional_payee_name_4) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5.claim_party_full_name,\n\t    v_original_additional_payee_name_4\n\t) AS v_add_payee_name_4,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_4) OR RTRIM(v_add_payee_name_4) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_4)\n\tIFF(v_add_payee_name_4 IS NULL OR RTRIM(v_add_payee_name_4) = '', 'N/A', v_add_payee_name_4) AS add_payee_name_4,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 6)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_6.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_5,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_5 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_5)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_5 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_5.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_5,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_5) OR RTRIM(v_original_additional_payee_name_5) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 6)),\r\n\t-- \tv_original_additional_payee_name_5)\n\tIFF(\n\t    v_original_additional_payee_name_5 IS NULL OR RTRIM(v_original_additional_payee_name_5) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6.claim_party_full_name,\n\t    v_original_additional_payee_name_5\n\t) AS v_add_payee_name_5,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_5) OR RTRIM(v_add_payee_name_5) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_5)\n\tIFF(v_add_payee_name_5 IS NULL OR RTRIM(v_add_payee_name_5) = '', 'N/A', v_add_payee_name_5) AS add_payee_name_5,\n\t-- *INF*: :LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID(IN_DFT_DRAFT_NBR, 7)\n\tLKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_7.cdc_pye_nm_cmt_id AS v_CDC_PYE_NM_CMT_ID_add_payee_6,\n\t-- *INF*: IIF(v_CDC_PYE_NM_CMT_ID_add_payee_6 < 0,\r\n\t-- \tNULL,\r\n\t-- \t:LKP.LKP_CLM_COMMENTS_STAGE(IN_DFT_CLAIM_NBR, v_CDC_PYE_NM_CMT_ID_add_payee_6)\r\n\t-- \t)\n\tIFF(\n\t    v_CDC_PYE_NM_CMT_ID_add_payee_6 < 0, NULL,\n\t    LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_6.TCC_COMMENT_TXT\n\t) AS v_original_additional_payee_name_6,\n\t-- *INF*: IIF(ISNULL(v_original_additional_payee_name_6) OR RTRIM(v_original_additional_payee_name_6) = '',\r\n\t-- \t\t:LKP.LKP_CLAIM_PARTY_FULL_NAME(:LKP.LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE(IN_DFT_DRAFT_NBR, 7)),\r\n\t-- \tv_original_additional_payee_name_6)\n\tIFF(\n\t    v_original_additional_payee_name_6 IS NULL OR RTRIM(v_original_additional_payee_name_6) = '',\n\t    LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7.claim_party_full_name,\n\t    v_original_additional_payee_name_6\n\t) AS v_add_payee_name_6,\n\t-- *INF*: IIF(ISNULL(v_add_payee_name_6) OR RTRIM(v_add_payee_name_6) = '',\r\n\t-- \t\t'N/A',\r\n\t-- \tv_add_payee_name_6)\n\tIFF(v_add_payee_name_6 IS NULL OR RTRIM(v_add_payee_name_6) = '', 'N/A', v_add_payee_name_6) AS add_payee_name_6,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_PAY_TO_NM_CMT_ID,\n\tSQ_CLAIM_DRAFT_STAGE.DFT_MAIL_TO_NM_CMT_ID,\n\tSQ_CLAIM_DRAFT_STAGE.PAYMENT_SYSTEM,\n\tLKP_ArchInsurPayPaymentStage_MatchingCheckNumber.CheckNumber AS in_MatchingInsurPayCheckNumber,\n\tLKP_CLAIM_PAYMENT.claim_pay_id,\n\tLKP_CLAIM_PAYMENT.sup_payment_method_id AS lkp_sup_payment_method_id,\n\t-- *INF*: :LKP.LKP_SUP_PAYMENT_SYSTEM(PAYMENT_SYSTEM)\n\tLKP_SUP_PAYMENT_SYSTEM_PAYMENT_SYSTEM.sup_payment_system_id AS v_sup_payment_system_id,\n\t-- *INF*: IIF(ISNULL(v_sup_payment_system_id), -1, v_sup_payment_system_id)\n\tIFF(v_sup_payment_system_id IS NULL, - 1, v_sup_payment_system_id) AS o_sup_payment_system_id,\n\t-- *INF*: DECODE(PAYMENT_SYSTEM,\r\n\t-- \t'Manual Draft',\r\n\t-- \t\tDECODE(TRUE,\r\n\t-- \t\t\tLENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) < 3 OR RTRIM(IN_DFT_MICRP_ECD_NBR) = 'N/A',\r\n\t-- \t\t\t\t'Check',\r\n\t-- \t\t\tUPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR,1,3)) = 'EFT',\r\n\t-- \t\t\t\t'EFT',\r\n\t-- \t\t\t:UDF.DEFAULT_VALUE_TO_BLANKS(in_MatchingInsurPayCheckNumber) <> '',\r\n\t-- \t\t\t\t'InsurPay',\r\n\t-- \t\t\t'Check'),\r\n\t-- \t'PayPilot',\r\n\t-- \t\tDECODE(TRUE,\r\n\t-- \t\t\tLENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) < 3,\r\n\t-- \t\t\t\t'Check',\r\n\t-- \t\t\tUPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR,1,3)) = 'EFT',\r\n\t-- \t\t\t\t'EFT',\r\n\t-- \t\t\t'Check'),\r\n\t-- \t'InsurPay',\r\n\t-- \t-- Note: If there is already a valid sup_payment_method_id (i.e. a value <> -1) for this InsurPay payment, the string provided in this variable will not be used to override it. This is because we prefer the payment method derived in the InsurPayPayment pipeline to the one derived from the DFT_MICRO_ECD_NBR in the CLAIM_DRAFT pipeline.\r\n\t-- \t\tIIF(LENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) >= 2,\r\n\t-- \t\t\tDECODE(UPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR, 1, 2)),\r\n\t-- \t\t\t\t'CK', \r\n\t-- \t\t\t\t\t'Check',\r\n\t-- \t\t\t\t'EF',\r\n\t-- \t\t\t\t\t'EFT',\r\n\t-- \t\t\t\t'VP',\r\n\t-- \t\t\t\t\t'Virtual Payment',\r\n\t-- \t\t\t\t'DC', \r\n\t-- \t\t\t\t\t'Debit Card',\r\n\t-- \t\t\t\t'PC',\r\n\t-- \t\t\t\t\t'Digital Prepaid',\r\n\t-- \t\t\t\t'CT',\r\n\t-- \t\t\t\t\t'CAT Card',\r\n\t-- \t\t\t\t'PP',\r\n\t-- \t\t\t\t\t'PayPal',\r\n\t-- \t\t\t\t'VN',\r\n\t-- \t\t\t\t\t'Venmo',\r\n\t-- \t\t\t\t'TE',\r\n\t-- \t\t\t\t\t'Electronic',\r\n\t-- \t\t\t\t'N/A'\r\n\t-- \t\t\t),\r\n\t-- \t\t'N/A'\r\n\t-- \t\t),\r\n\t-- \t'N/A')\n\tDECODE(\n\t    PAYMENT_SYSTEM,\n\t    'Manual Draft', DECODE(\n\t        TRUE,\n\t        LENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) < 3 OR RTRIM(IN_DFT_MICRP_ECD_NBR) = 'N/A', 'Check',\n\t        UPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR, 1, 3)) = 'EFT', 'EFT',\n\t        UDF_DEFAULT_VALUE_TO_BLANKS(in_MatchingInsurPayCheckNumber) <> '', 'InsurPay',\n\t        'Check'\n\t    ),\n\t    'PayPilot', DECODE(\n\t        TRUE,\n\t        LENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) < 3, 'Check',\n\t        UPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR, 1, 3)) = 'EFT', 'EFT',\n\t        'Check'\n\t    ),\n\t    'InsurPay', IFF(\n\t        LENGTH(RTRIM(IN_DFT_MICRP_ECD_NBR)) >= 2,\n\t        DECODE(\n\t            UPPER(SUBSTR(IN_DFT_MICRP_ECD_NBR, 1, 2)),\n\t            'CK', 'Check',\n\t            'EF', 'EFT',\n\t            'VP', 'Virtual Payment',\n\t            'DC', 'Debit Card',\n\t            'PC', 'Digital Prepaid',\n\t            'CT', 'CAT Card',\n\t            'PP', 'PayPal',\n\t            'VN', 'Venmo',\n\t            'TE', 'Electronic',\n\t            'N/A'\n\t        ),\n\t        'N/A'\n\t    ),\n\t    'N/A'\n\t) AS v_payment_method,\n\t-- *INF*: IIF(PAYMENT_SYSTEM = 'InsurPay' AND (NOT ISNULL(lkp_sup_payment_method_id)) AND lkp_sup_payment_method_id != -1,\r\n\t-- \t\tlkp_sup_payment_method_id,\r\n\t-- \t:LKP.LKP_SUP_PAYMENT_METHOD(v_payment_method)\r\n\t-- \t)\n\tIFF(\n\t    PAYMENT_SYSTEM = 'InsurPay'\n\t    and (lkp_sup_payment_method_id IS NOT NULL)\n\t    and lkp_sup_payment_method_id != - 1,\n\t    lkp_sup_payment_method_id,\n\t    LKP_SUP_PAYMENT_METHOD_v_payment_method.sup_payment_method_id\n\t) AS v_sup_payment_method_id,\n\t-- *INF*: IIF(ISNULL(v_sup_payment_method_id), -1, v_sup_payment_method_id)\n\tIFF(v_sup_payment_method_id IS NULL, - 1, v_sup_payment_method_id) AS o_sup_payment_method_id\n\tFROM EXP_Clean_Up_Input\n\t -- Manually join with SQ_CLAIM_DRAFT_STAGE\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE.CDC_DRAFT_NBR = SQ_CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR\n\tLEFT JOIN LKP_ArchInsurPayPaymentStage_MatchingCheckNumber\n\tON LKP_ArchInsurPayPaymentStage_MatchingCheckNumber.CheckNumber = EXP_Clean_Up_Input.o_DFT_MICRP_ECD_NBR\n\tLEFT JOIN LKP_CLAIM_PAYMENT\n\tON LKP_CLAIM_PAYMENT.claim_pay_num = EXP_Clean_Up_Input.o_DFT_DRAFT_NBR\n\tLEFT JOIN LKP_CLM_OFFSET_HONOR_STAGE\n\tON LKP_CLM_OFFSET_HONOR_STAGE.COH_DRAFT_NBR = SQ_CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR\n\tLEFT JOIN LKP_OPER_ROLE_CODE\n\tON LKP_OPER_ROLE_CODE.CAJ_USER_ID = SQ_CLAIM_DRAFT_STAGE.DFT_ENTRY_OPR_ID\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_PAY_TO_NM_CMT_ID\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_PAY_TO_NM_CMT_ID.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_PAY_TO_NM_CMT_ID.COMMENT_ITEM_NBR = DFT_PAY_TO_NM_CMT_ID\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MMO_PHR_CMT_ID\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MMO_PHR_CMT_ID.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MMO_PHR_CMT_ID.COMMENT_ITEM_NBR = DFT_MMO_PHR_CMT_ID\n\n\tLEFT JOIN LKP_CLIENT_TAB_STAGE LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR\n\tON LKP_CLIENT_TAB_STAGE_IN_DFT_DRAFT_NBR.CLM_CLAIM_NBR = IN_DFT_DRAFT_NBR\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MAIL_TO_NM_CMT_ID\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MAIL_TO_NM_CMT_ID.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_DFT_MAIL_TO_NM_CMT_ID.COMMENT_ITEM_NBR = DFT_MAIL_TO_NM_CMT_ID\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_IN_CDC_PAYEE_NM_CMT_ID_primary_payee\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_IN_CDC_PAYEE_NM_CMT_ID_primary_payee.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_IN_CDC_PAYEE_NM_CMT_ID_primary_payee.COMMENT_ITEM_NBR = IN_CDC_PAYEE_NM_CMT_ID_primary_payee\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_IN_CDC_PAYEE_NM_ID_primary_payee\n\tON LKP_CLAIM_PARTY_FULL_NAME_IN_CDC_PAYEE_NM_ID_primary_payee.claim_party_key = IN_CDC_PAYEE_NM_ID_primary_payee\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_2\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_2.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_2.cdc_seq_nbr = 2\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_1\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_1.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_1.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_1\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2.CDC_SEQ_NBR = 2\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_2.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_3\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_3.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_3.cdc_seq_nbr = 3\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_2\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_2.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_2.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_2\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3.CDC_SEQ_NBR = 3\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_3.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_4\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_4.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_4.cdc_seq_nbr = 4\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_3\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_3.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_3.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_3\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4.CDC_SEQ_NBR = 4\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_4.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_5\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_5.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_5.cdc_seq_nbr = 5\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_4\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_4.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_4.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_4\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5.CDC_SEQ_NBR = 5\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_5.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_6\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_6.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_6.cdc_seq_nbr = 6\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_5\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_5.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_5.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_5\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6.CDC_SEQ_NBR = 6\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_6.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_7\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_7.cdc_draft_nbr = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_NM_CMT_ID_IN_DFT_DRAFT_NBR_7.cdc_seq_nbr = 7\n\n\tLEFT JOIN LKP_CLM_COMMENTS_STAGE LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_6\n\tON LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_6.FOLDER_KEY = IN_DFT_CLAIM_NBR\n\tAND LKP_CLM_COMMENTS_STAGE_IN_DFT_CLAIM_NBR_v_CDC_PYE_NM_CMT_ID_add_payee_6.COMMENT_ITEM_NBR = v_CDC_PYE_NM_CMT_ID_add_payee_6\n\n\tLEFT JOIN LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7\n\tON LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7.CDC_DRAFT_NBR = IN_DFT_DRAFT_NBR\n\tAND LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7.CDC_SEQ_NBR = 7\n\n\tLEFT JOIN LKP_CLAIM_PARTY_FULL_NAME LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7\n\tON LKP_CLAIM_PARTY_FULL_NAME_LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7.claim_party_key = LKP_ARCH_CLAIM_DRAFT_CLIENT_STAGE_OTHER_PAYEE_IN_DFT_DRAFT_NBR_7.CDC_PAYEE_NM_ID\n\n\tLEFT JOIN LKP_SUP_PAYMENT_SYSTEM LKP_SUP_PAYMENT_SYSTEM_PAYMENT_SYSTEM\n\tON LKP_SUP_PAYMENT_SYSTEM_PAYMENT_SYSTEM.payment_system = PAYMENT_SYSTEM\n\n\tLEFT JOIN LKP_SUP_PAYMENT_METHOD LKP_SUP_PAYMENT_METHOD_v_payment_method\n\tON LKP_SUP_PAYMENT_METHOD_v_payment_method.payment_method = v_payment_method\n\n),\nSEQ_Claim_Payments_AK AS (\n\tCREATE SEQUENCE SEQ_Claim_Payments_AK\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tSEQ_Claim_Payments_AK.NEXTVAL,\n\tOUT_DFT_MICRP_ECD_NBR AS DFT_MICRP_ECD_NBR,\n\tOUT_DFT_TRS_AMT AS DFT_TRS_AMT,\n\tOUT_DFT_CREATE_TS AS DFT_CREATE_TS,\n\tOUT_COH_NEW_CLAIM_NBR AS COH_NEW_CLAIM_NBR,\n\tOUT_COH_NEW_DRAFT_NBR AS COH_NEW_DRAFT_NBR,\n\tOUT_COH_DELETE_IND,\n\tOUT_DFT_BANK_NBR AS DFT_BANK_NBR,\n\tOUT_DFT_CK_DRAFT_IND AS DFT_CK_DRAFT_IND,\n\tOUT_DFT_DFT_CK_TYP_CD AS DFT_DFT_CK_TYP_CD,\n\tOUT_DFT_DBS_DT AS DFT_DBS_DT,\n\tOUT_DFT_DBS_STATUS_CD AS DFT_DBS_STATUS_CD,\n\tOUT_COH_CREATE_TS AS COH_CREATE_TS,\n\tOUT_COH_UPD_TS AS COH_UPD_TS,\n\tout_CDC_REPORT_TO_IRS,\n\tDFT_DRAFT_NBR AS OUT_DFT_DRAFT_NBR,\n\tOUT_DFT_ENTRY_OPR_ID,\n\tCAJ_ADJUSTER_TYPE,\n\tOUT_DFT_DSB_LOC_CD,\n\tOUT_Payee_Phrase_Description AS OUT_PAYEE_PHARSE_COMMENT,\n\tOUT_Memo_Pharse_Description AS OUT_MEMO_PHARSE_COMMENT,\n\tMAIL_TO_ADR,\n\tOUT_CITY_NM,\n\tOUT_MAIL_TO_ST_CD,\n\tOUT_MAIL_TO_ZIP_CD,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tsysdate AS created_dt,\n\t'N/A' AS NA,\n\tmail_to_name,\n\t-1 AS default_int,\n\t-- *INF*: TO_DATE('01/01/1800','MM/DD/YYYY')\n\tTO_TIMESTAMP('01/01/1800', 'MM/DD/YYYY') AS default_date,\n\tprim_payee_name,\n\tadd_payee_name_1,\n\tadd_payee_name_2,\n\tadd_payee_name_3,\n\tadd_payee_name_4,\n\tadd_payee_name_5,\n\tadd_payee_name_6,\n\to_sup_payment_system_id AS sup_payment_system_id,\n\to_sup_payment_method_id AS sup_payment_method_id,\n\tclaim_pay_id,\n\t0 AS default_int_0\n\tFROM EXP_VALUES\n),\nRTRTRANS AS (\n\tSELECT\n\tclaim_pay_id AS exists_claim_pay_id,\n\tNEXTVAL,\n\tOUT_DFT_DRAFT_NBR,\n\tDFT_MICRP_ECD_NBR,\n\tDFT_BANK_NBR,\n\tOUT_COH_DELETE_IND,\n\tDFT_TRS_AMT,\n\tDFT_CREATE_TS,\n\tDFT_CK_DRAFT_IND,\n\tDFT_DFT_CK_TYP_CD,\n\tOUT_DFT_ENTRY_OPR_ID,\n\tCAJ_ADJUSTER_TYPE,\n\tDFT_DBS_DT,\n\tDFT_DBS_STATUS_CD,\n\tOUT_DFT_DSB_LOC_CD,\n\tout_CDC_REPORT_TO_IRS,\n\tCOH_CREATE_TS,\n\tCOH_UPD_TS,\n\tCOH_NEW_CLAIM_NBR,\n\tCOH_NEW_DRAFT_NBR,\n\tOUT_PAYEE_PHARSE_COMMENT,\n\tOUT_MEMO_PHARSE_COMMENT,\n\tMAIL_TO_ADR,\n\tOUT_CITY_NM,\n\tOUT_MAIL_TO_ST_CD,\n\tOUT_MAIL_TO_ZIP_CD,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_dt,\n\tNA,\n\tmail_to_name,\n\tdefault_int,\n\tdefault_date,\n\tprim_payee_name,\n\tadd_payee_name_1,\n\tadd_payee_name_2,\n\tadd_payee_name_3,\n\tadd_payee_name_4,\n\tadd_payee_name_5,\n\tadd_payee_name_6,\n\tsup_payment_system_id,\n\tsup_payment_method_id,\n\tdefault_int_0\n\tFROM EXP_Determine_AK\n),\nRTRTRANS_INSERT AS (SELECT * FROM RTRTRANS WHERE ISNULL(exists_claim_pay_id)),\nRTRTRANS_DEFAULT1 AS (SELECT * FROM RTRTRANS WHERE NOT ( (ISNULL(exists_claim_pay_id)) )),\nUPD_U AS (\n\tSELECT\n\texists_claim_pay_id AS exists_claim_pay_id2, \n\tOUT_DFT_DRAFT_NBR, \n\tDFT_MICRP_ECD_NBR, \n\tDFT_BANK_NBR AS DFT_BANK_NBR1, \n\tOUT_COH_DELETE_IND, \n\tDFT_TRS_AMT AS DFT_TRS_AMT1, \n\tDFT_CREATE_TS AS DFT_CREATE_TS1, \n\tDFT_CK_DRAFT_IND AS DFT_CK_DRAFT_IND1, \n\tDFT_DFT_CK_TYP_CD AS DFT_DFT_CK_TYP_CD1, \n\tOUT_DFT_ENTRY_OPR_ID AS OUT_DFT_ENTRY_OPR_ID1, \n\tCAJ_ADJUSTER_TYPE AS CAJ_ADJUSTER_TYPE1, \n\tDFT_DBS_DT AS DFT_DBS_DT1, \n\tDFT_DBS_STATUS_CD AS DFT_DBS_STATUS_CD1, \n\tOUT_DFT_DSB_LOC_CD AS OUT_DFT_DSB_LOC_CD1, \n\tout_CDC_REPORT_TO_IRS, \n\tCOH_CREATE_TS AS COH_CREATE_TS1, \n\tCOH_UPD_TS AS COH_UPD_TS1, \n\tCOH_NEW_CLAIM_NBR AS COH_NEW_CLAIM_NBR1, \n\tCOH_NEW_DRAFT_NBR AS COH_NEW_DRAFT_NBR1, \n\tOUT_PAYEE_PHARSE_COMMENT AS OUT_PAYEE_PHARSE_COMMENT1, \n\tOUT_MEMO_PHARSE_COMMENT AS OUT_MEMO_PHARSE_COMMENT1, \n\tMAIL_TO_ADR AS MAIL_TO_ADR1, \n\tOUT_CITY_NM AS OUT_CITY_NM1, \n\tOUT_MAIL_TO_ST_CD AS OUT_MAIL_TO_ST_CD1, \n\tOUT_MAIL_TO_ZIP_CD AS OUT_MAIL_TO_ZIP_CD1, \n\tcrrnt_snpsht_flag, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tsource_sys_id AS source_sys_id1, \n\tcreated_dt AS created_dt1, \n\tNA AS NA1, \n\tmail_to_name, \n\tprim_payee_name AS prim_payee_name2, \n\tadd_payee_name_1 AS add_payee_name1, \n\tadd_payee_name_ AS add_payee_name2, \n\tadd_payee_name_3 AS add_payee_name3, \n\tadd_payee_name_4 AS add_payee_name4, \n\tadd_payee_name_5 AS add_payee_name5, \n\tadd_payee_name_6 AS add_payee_name6, \n\tsup_payment_system_id AS sup_payment_system_id2, \n\tsup_payment_method_id AS sup_payment_method_id2\n\tFROM RTRTRANS_DEFAULT1\n),\nclaim_payment_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment AS T\n\tUSING UPD_U AS S\n\tON T.claim_pay_id = S.exists_claim_pay_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claim_pay_num = S.OUT_DFT_DRAFT_NBR, T.micro_ecd_draft_num = S.DFT_MICRP_ECD_NBR, T.bank_acct_num = S.DFT_BANK_NBR1, T.pay_delete_ind = S.OUT_COH_DELETE_IND, T.total_pay_amt = S.DFT_TRS_AMT1, T.pay_issued_date = S.DFT_DBS_DT1, T.pay_to_code = S.NA1, T.payee_note = S.NA1, T.pay_ind = S.DFT_CK_DRAFT_IND1, T.pay_type_code = S.DFT_DFT_CK_TYP_CD1, T.pay_entry_oper_id = S.OUT_DFT_ENTRY_OPR_ID1, T.pay_entry_oper_role_code = S.CAJ_ADJUSTER_TYPE1, T.pay_disbursement_date = S.DFT_CREATE_TS1, T.pay_disbursement_status = S.DFT_DBS_STATUS_CD1, T.pay_disbursement_loc_code = S.OUT_DFT_DSB_LOC_CD1, T.reported_to_irs_ind = S.out_CDC_REPORT_TO_IRS, T.pay_voided_date = S.COH_CREATE_TS1, T.pay_reposted_date = S.COH_UPD_TS1, T.new_claim_num = S.COH_NEW_CLAIM_NBR1, T.new_draft_num = S.COH_NEW_DRAFT_NBR1, T.payee_phrase_code = S.NA1, T.pay_to_the_order_of_name = S.OUT_PAYEE_PHARSE_COMMENT1, T.memo_phrase_code = S.NA1, T.memo_phrase_comment = S.OUT_MEMO_PHARSE_COMMENT1, T.mail_to_code = S.NA1, T.mail_to_name = S.mail_to_name, T.mail_to_addr = S.MAIL_TO_ADR1, T.mail_to_city = S.OUT_CITY_NM1, T.mail_to_state = S.OUT_MAIL_TO_ST_CD1, T.mail_to_zip = S.OUT_MAIL_TO_ZIP_CD1, T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.audit_id = S.audit_id1, T.eff_from_date = S.eff_from_date1, T.eff_to_date = S.eff_to_date1, T.source_sys_id = S.source_sys_id1, T.modified_date = S.created_dt1, T.prim_payee_name = S.prim_payee_name2, T.add_payee_name1 = S.add_payee_name1, T.add_payee_name2 = S.add_payee_name2, T.add_payee_name3 = S.add_payee_name3, T.add_payee_name4 = S.add_payee_name4, T.add_payee_name5 = S.add_payee_name5, T.add_payee_name6 = S.add_payee_name6, T.sup_payment_system_id = S.sup_payment_system_id2, T.sup_payment_method_id = S.sup_payment_method_id2\n),\nUPD_I AS (\n\tSELECT\n\tNEXTVAL AS claim_pay_ak_Id, \n\tOUT_DFT_DRAFT_NBR, \n\tDFT_MICRP_ECD_NBR, \n\tDFT_BANK_NBR AS DFT_BANK_NBR1, \n\tOUT_COH_DELETE_IND, \n\tDFT_TRS_AMT AS DFT_TRS_AMT1, \n\tDFT_CREATE_TS AS DFT_CREATE_TS1, \n\tDFT_CK_DRAFT_IND AS DFT_CK_DRAFT_IND1, \n\tDFT_DFT_CK_TYP_CD AS DFT_DFT_CK_TYP_CD1, \n\tOUT_DFT_ENTRY_OPR_ID AS OUT_DFT_ENTRY_OPR_ID1, \n\tCAJ_ADJUSTER_TYPE AS CAJ_ADJUSTER_TYPE1, \n\tDFT_DBS_DT AS DFT_DBS_DT1, \n\tDFT_DBS_STATUS_CD AS DFT_DBS_STATUS_CD1, \n\tOUT_DFT_DSB_LOC_CD AS OUT_DFT_DSB_LOC_CD1, \n\tout_CDC_REPORT_TO_IRS, \n\tCOH_CREATE_TS AS COH_CREATE_TS1, \n\tCOH_UPD_TS AS COH_UPD_TS1, \n\tCOH_NEW_CLAIM_NBR AS COH_NEW_CLAIM_NBR1, \n\tCOH_NEW_DRAFT_NBR AS COH_NEW_DRAFT_NBR1, \n\tOUT_PAYEE_PHARSE_COMMENT AS OUT_PAYEE_PHARSE_COMMENT1, \n\tOUT_MEMO_PHARSE_COMMENT AS OUT_MEMO_PHARSE_COMMENT1, \n\tMAIL_TO_ADR AS MAIL_TO_ADR1, \n\tOUT_CITY_NM AS OUT_CITY_NM1, \n\tOUT_MAIL_TO_ST_CD AS OUT_MAIL_TO_ST_CD1, \n\tOUT_MAIL_TO_ZIP_CD AS OUT_MAIL_TO_ZIP_CD1, \n\tcrrnt_snpsht_flag, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tsource_sys_id AS source_sys_id1, \n\tcreated_dt AS created_dt1, \n\tNA AS NA1, \n\tmail_to_name, \n\tdefault_int, \n\tdefault_date, \n\tprim_payee_name AS prim_payee_name1, \n\tadd_payee_name_ AS add_payee_name1, \n\tadd_payee_name_2 AS add_payee_name2, \n\tadd_payee_name_3 AS add_payee_name3, \n\tadd_payee_name_4 AS add_payee_name4, \n\tadd_payee_name_5 AS add_payee_name5, \n\tadd_payee_name_6 AS add_payee_name6, \n\tsup_payment_system_id AS sup_payment_system_id1, \n\tsup_payment_method_id AS sup_payment_method_id1, \n\tdefault_int_0 AS default_int_01\n\tFROM RTRTRANS_INSERT\n),\nclaim_payment_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment\n\t(claim_pay_ak_id, pms_claimant_cov_det_ak_id, claim_pay_num, micro_ecd_draft_num, bank_acct_num, pay_delete_ind, total_pay_amt, pay_issued_date, pay_cashed_date, pay_to_code, payee_note, pay_ind, pay_type_code, pay_entry_oper_id, pay_entry_oper_role_code, pay_disbursement_date, pay_disbursement_status, pay_disbursement_loc_code, reported_to_irs_ind, pay_voided_date, pay_reposted_date, new_claim_num, new_draft_num, payee_phrase_code, pay_to_the_order_of_name, memo_phrase_code, memo_phrase_comment, mail_to_code, mail_to_name, mail_to_addr, mail_to_city, mail_to_state, mail_to_zip, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, prim_payee_name, add_payee_name1, add_payee_name2, add_payee_name3, add_payee_name4, add_payee_name5, add_payee_name6, sup_payment_system_id, sup_payment_method_id, approval_status, approval_by_user_id, approval_date, denial_reason, special_processing, payee_category, sup_claim_payment_workflow_id, attached_document_count)\n\tSELECT \n\tclaim_pay_ak_Id AS CLAIM_PAY_AK_ID, \n\tdefault_int AS PMS_CLAIMANT_COV_DET_AK_ID, \n\tOUT_DFT_DRAFT_NBR AS CLAIM_PAY_NUM, \n\tDFT_MICRP_ECD_NBR AS MICRO_ECD_DRAFT_NUM, \n\tDFT_BANK_NBR1 AS BANK_ACCT_NUM, \n\tOUT_COH_DELETE_IND AS PAY_DELETE_IND, \n\tDFT_TRS_AMT1 AS TOTAL_PAY_AMT, \n\tDFT_DBS_DT1 AS PAY_ISSUED_DATE, \n\tdefault_date AS PAY_CASHED_DATE, \n\tNA1 AS PAY_TO_CODE, \n\tNA1 AS PAYEE_NOTE, \n\tDFT_CK_DRAFT_IND1 AS PAY_IND, \n\tDFT_DFT_CK_TYP_CD1 AS PAY_TYPE_CODE, \n\tOUT_DFT_ENTRY_OPR_ID1 AS PAY_ENTRY_OPER_ID, \n\tCAJ_ADJUSTER_TYPE1 AS PAY_ENTRY_OPER_ROLE_CODE, \n\tDFT_CREATE_TS1 AS PAY_DISBURSEMENT_DATE, \n\tDFT_DBS_STATUS_CD1 AS PAY_DISBURSEMENT_STATUS, \n\tOUT_DFT_DSB_LOC_CD1 AS PAY_DISBURSEMENT_LOC_CODE, \n\tout_CDC_REPORT_TO_IRS AS REPORTED_TO_IRS_IND, \n\tCOH_CREATE_TS1 AS PAY_VOIDED_DATE, \n\tCOH_UPD_TS1 AS PAY_REPOSTED_DATE, \n\tCOH_NEW_CLAIM_NBR1 AS NEW_CLAIM_NUM, \n\tCOH_NEW_DRAFT_NBR1 AS NEW_DRAFT_NUM, \n\tNA1 AS PAYEE_PHRASE_CODE, \n\tOUT_PAYEE_PHARSE_COMMENT1 AS PAY_TO_THE_ORDER_OF_NAME, \n\tNA1 AS MEMO_PHRASE_CODE, \n\tOUT_MEMO_PHARSE_COMMENT1 AS MEMO_PHRASE_COMMENT, \n\tNA1 AS MAIL_TO_CODE, \n\tMAIL_TO_NAME, \n\tMAIL_TO_ADR1 AS MAIL_TO_ADDR, \n\tOUT_CITY_NM1 AS MAIL_TO_CITY, \n\tOUT_MAIL_TO_ST_CD1 AS MAIL_TO_STATE, \n\tOUT_MAIL_TO_ZIP_CD1 AS MAIL_TO_ZIP, \n\tCRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\teff_from_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tsource_sys_id1 AS SOURCE_SYS_ID, \n\tcreated_dt1 AS CREATED_DATE, \n\tcreated_dt1 AS MODIFIED_DATE, \n\tprim_payee_name1 AS PRIM_PAYEE_NAME, \n\tADD_PAYEE_NAME1, \n\tADD_PAYEE_NAME2, \n\tADD_PAYEE_NAME3, \n\tADD_PAYEE_NAME4, \n\tADD_PAYEE_NAME5, \n\tADD_PAYEE_NAME6, \n\tsup_payment_system_id1 AS SUP_PAYMENT_SYSTEM_ID, \n\tsup_payment_method_id1 AS SUP_PAYMENT_METHOD_ID, \n\tNA1 AS APPROVAL_STATUS, \n\tNA1 AS APPROVAL_BY_USER_ID, \n\tdefault_date AS APPROVAL_DATE, \n\tNA1 AS DENIAL_REASON, \n\tNA1 AS SPECIAL_PROCESSING, \n\tNA1 AS PAYEE_CATEGORY, \n\tdefault_int AS SUP_CLAIM_PAYMENT_WORKFLOW_ID, \n\tdefault_int_01 AS ATTACHED_DOCUMENT_COUNT\n\tFROM UPD_I\n),\nSQ_chk_stage AS (\n\tSELECT \r\n\tRTRIM(chk_stage.TranCd), \r\n\tCONVERT(char(10), DATEADD(dd, PdDt, '12/28/1800'),101)\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.chk_stage chk_stage\n),\nLKP_CLAIM_PAYMENT_PAY_CASHED_DT AS (\n\tSELECT\n\tclaim_pay_id,\n\tTranCd,\n\tclaim_pay_num,\n\tpay_cashed_date\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_payment.claim_pay_id as claim_pay_id, \r\n\t\tclaim_payment.pay_cashed_date as pay_cashed_date,\r\n\t\tRTRIM(claim_payment.claim_pay_num) as claim_pay_num \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment claim_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_id) = 1\n),\nEXP_Default_Values AS (\n\tSELECT\n\tLKP_CLAIM_PAYMENT_PAY_CASHED_DT.claim_pay_id,\n\tLKP_CLAIM_PAYMENT_PAY_CASHED_DT.pay_cashed_date AS pay_cashed_date_target,\n\tSQ_chk_stage.extract_date AS pay_cashed_dt,\n\t-- *INF*: decode(true,\r\n\t-- pay_cashed_dt = TO_DATE('12/28/1800','MM/DD/YYYY'),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- pay_cashed_dt)\r\n\t-- \r\n\t-- \r\n\t-- \n\tdecode(\n\t    true,\n\t    pay_cashed_dt = TO_TIMESTAMP('12/28/1800', 'MM/DD/YYYY'), TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    pay_cashed_dt\n\t) AS pay_cashed_dt_source,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\tsysdate AS modified_dt\n\tFROM SQ_chk_stage\n\tLEFT JOIN LKP_CLAIM_PAYMENT_PAY_CASHED_DT\n\tON LKP_CLAIM_PAYMENT_PAY_CASHED_DT.claim_pay_num = SQ_chk_stage.TranCd\n),\nFIL_Changed_data AS (\n\tSELECT\n\tclaim_pay_id, \n\tpay_cashed_date_target, \n\tpay_cashed_dt_source, \n\tAUDIT_ID, \n\tmodified_dt\n\tFROM EXP_Default_Values\n\tWHERE pay_cashed_date_target <> pay_cashed_dt_source\n),\nUPD_PAY_CASHED_DATE AS (\n\tSELECT\n\tclaim_pay_id, \n\tpay_cashed_dt_source, \n\tAUDIT_ID, \n\tmodified_dt\n\tFROM FIL_Changed_data\n),\nclaim_payment_update_pay_cashed_dt AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment AS T\n\tUSING UPD_PAY_CASHED_DATE AS S\n\tON T.claim_pay_id = S.claim_pay_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.pay_cashed_date = S.pay_cashed_dt_source, T.audit_id = S.AUDIT_ID, T.modified_date = S.modified_dt\n),\nSQ_InsurPayPaymentStage AS (\n\tSELECT\n\t\tExceedDraftNumber,\n\t\tPaymentCashedDate,\n\t\tPaymentMethod,\n\t\tPaymentType,\n\t\tSupPaymentWorkflowId,\n\t\tExpediteRequested,\n\t\tCertifiedRequested,\n\t\tAttachedDocumentCount,\n\t\tCheckNumber\n\tFROM InsurPayPaymentStage\n),\nEXP_sup_payment_method_id AS (\n\tSELECT\n\tExceedDraftNumber,\n\tPaymentCashedDate,\n\tPaymentMethod,\n\tPaymentType,\n\tSupPaymentWorkflowId,\n\tExpediteRequested,\n\tCertifiedRequested,\n\t-- *INF*: IIF(ExpediteRequested='T',\r\n\t-- \t\t'Expedited',\r\n\t-- \tIIF(CertifiedRequested='T',\r\n\t-- \t\t'Certified',\r\n\t-- \t\t'N/A'))\n\tIFF(\n\t    ExpediteRequested = 'T', 'Expedited',\n\t    IFF(\n\t        CertifiedRequested = 'T', 'Certified', 'N/A'\n\t    )\n\t) AS v_special_processing,\n\tv_special_processing AS o_special_processing,\n\tAttachedDocumentCount,\n\tCheckNumber,\n\t-- *INF*: IIF(ISNULL(CheckNumber)  OR CheckNumber = '' OR IS_SPACES(CheckNumber),'N/A',CheckNumber)\n\tIFF(\n\t    CheckNumber IS NULL OR CheckNumber = '' OR LENGTH(CheckNumber)>0 AND TRIM(CheckNumber)='',\n\t    'N/A',\n\t    CheckNumber\n\t) AS v_CheckNumber,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tISNULL(PaymentMethod) OR LENGTH(RTRIM(PaymentMethod)) = 0,\r\n\t-- \t\t'N/A',\r\n\t-- \tIN(PaymentMethod, 'Electronic', 'Electronic to Lienholder'),\r\n\t-- \t\t'Electronic to Lienholder',\r\n\t-- \tIN(PaymentMethod, 'Let_Customer_Pickup', 'Let Customer Pickup'),\r\n\t-- \t\t'Pending Payee Will Select',\r\n\t-- \tIN(PaymentMethod, 'Generate_Barcode', 'Generate Barcode'),\r\n\t-- \t\t'Pending Mobile App Select',\r\n\t--      v_CheckNumber = 'N/A',\r\n\t--           'Pending Payee Will Select',\r\n\t-- \tIN(PaymentMethod, 'Direct_Deposit', 'Direct Deposit'), \r\n\t--       \t'EFT',\r\n\t-- \tIN(PaymentMethod, 'Debit_Card', 'Debit Card'), \r\n\t-- \t\t'Debit Card',\r\n\t-- \tIN(PaymentMethod, 'Prepaid_Card', 'Prepaid Card'), \r\n\t--           IIF(SUBSTR(v_CheckNumber,1,2) = 'CT', 'CAT Card', 'Digital Prepaid'),\r\n\t-- \tIN(PaymentMethod, 'Virtual Prepaid Card', 'Virtual Prepaid card'), \r\n\t--           'Digital Prepaid',\r\n\t-- \tIN(PaymentMethod, 'Instant Prepaid Card', 'Instant Prepaid card'), \r\n\t--           'CAT Card',\r\n\t-- \tIN(PaymentMethod, 'Virtual_Card', 'Virtual Card'),\r\n\t--       \t'Virtual Payment',\r\n\t-- -- when other --\r\n\t-- \tSUBSTR(PaymentMethod,1,35)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    PaymentMethod IS NULL OR LENGTH(RTRIM(PaymentMethod)) = 0, 'N/A',\n\t    PaymentMethod IN ('Electronic','Electronic to Lienholder'), 'Electronic to Lienholder',\n\t    PaymentMethod IN ('Let_Customer_Pickup','Let Customer Pickup'), 'Pending Payee Will Select',\n\t    PaymentMethod IN ('Generate_Barcode','Generate Barcode'), 'Pending Mobile App Select',\n\t    v_CheckNumber = 'N/A', 'Pending Payee Will Select',\n\t    PaymentMethod IN ('Direct_Deposit','Direct Deposit'), 'EFT',\n\t    PaymentMethod IN ('Debit_Card','Debit Card'), 'Debit Card',\n\t    PaymentMethod IN ('Prepaid_Card','Prepaid Card'), IFF(\n\t        SUBSTR(v_CheckNumber, 1, 2) = 'CT', 'CAT Card', 'Digital Prepaid'\n\t    ),\n\t    PaymentMethod IN ('Virtual Prepaid Card','Virtual Prepaid card'), 'Digital Prepaid',\n\t    PaymentMethod IN ('Instant Prepaid Card','Instant Prepaid card'), 'CAT Card',\n\t    PaymentMethod IN ('Virtual_Card','Virtual Card'), 'Virtual Payment',\n\t    SUBSTR(PaymentMethod, 1, 35)\n\t) AS v_payment_method,\n\t-- *INF*: :LKP.LKP_SUP_PAYMENT_METHOD(v_payment_method)\n\tLKP_SUP_PAYMENT_METHOD_v_payment_method.sup_payment_method_id AS v_sup_payment_method_id,\n\t-- *INF*: IIF(ISNULL(v_sup_payment_method_id), -1, v_sup_payment_method_id)\n\tIFF(v_sup_payment_method_id IS NULL, - 1, v_sup_payment_method_id) AS o_sup_payment_method_id\n\tFROM SQ_InsurPayPaymentStage\n\tLEFT JOIN LKP_SUP_PAYMENT_METHOD LKP_SUP_PAYMENT_METHOD_v_payment_method\n\tON LKP_SUP_PAYMENT_METHOD_v_payment_method.payment_method = v_payment_method\n\n),\nLKP_claim_payment_InsurPay AS (\n\tSELECT\n\tclaim_pay_id,\n\tpay_cashed_date,\n\tsup_payment_method_id,\n\tspecial_processing,\n\tpayee_category,\n\tsup_claim_payment_workflow_id,\n\tattached_document_count,\n\tclaim_pay_num\n\tFROM (\n\t\tSELECT claim_pay_id as claim_pay_id, \r\n\t\t\tpay_cashed_date as pay_cashed_date,\r\n\t\t\tsup_payment_method_id as sup_payment_method_id,\r\n\t\t\tspecial_processing as special_processing,\r\n\t\t\tpayee_category as payee_category,\r\n\t\t\tsup_claim_payment_workflow_id as sup_claim_payment_workflow_id,\r\n\t\tattached_document_count as attached_document_count,\r\n\t\t\tRTRIM(claim_payment.claim_pay_num) as claim_pay_num \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_id) = 1\n),\nLKP_sup_claim_payment_workflow AS (\n\tSELECT\n\tsup_claim_payment_workflow_id,\n\tsource_payment_workflow_id\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_payment_workflow_id,\n\t\t\tsource_payment_workflow_id\n\t\tFROM sup_claim_payment_workflow\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY source_payment_workflow_id ORDER BY sup_claim_payment_workflow_id) = 1\n),\nEXP_Default_Values_InsurPay AS (\n\tSELECT\n\tEXP_sup_payment_method_id.PaymentCashedDate AS in_PaymentCashedDate,\n\t-- *INF*: IIF(ISNULL(in_PaymentCashedDate),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_PaymentCashedDate)\n\tIFF(\n\t    in_PaymentCashedDate IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_PaymentCashedDate\n\t) AS o_PaymentCashedDate,\n\tEXP_sup_payment_method_id.o_sup_payment_method_id AS sup_payment_method_id_source,\n\tLKP_claim_payment_InsurPay.claim_pay_id,\n\tLKP_claim_payment_InsurPay.pay_cashed_date AS lkp_pay_cashed_date,\n\tLKP_claim_payment_InsurPay.sup_payment_method_id AS lkp_sup_payment_method_id,\n\tLKP_claim_payment_InsurPay.special_processing AS lkp_special_processing,\n\tLKP_claim_payment_InsurPay.payee_category AS lkp_payee_category,\n\tLKP_claim_payment_InsurPay.sup_claim_payment_workflow_id AS lkp_sup_claim_payment_workflow_id,\n\tLKP_claim_payment_InsurPay.attached_document_count AS lkp_attached_document_count,\n\tSYSDATE AS modified_date,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tEXP_sup_payment_method_id.PaymentType AS in_PaymentType,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_PaymentType)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_PaymentType) AS o_PaymentType,\n\tLKP_sup_claim_payment_workflow.sup_claim_payment_workflow_id AS in_sup_claim_payment_workflow_id,\n\t-- *INF*: IIF(ISNULL(in_sup_claim_payment_workflow_id),\r\n\t--     -1,\r\n\t-- in_sup_claim_payment_workflow_id)\n\tIFF(in_sup_claim_payment_workflow_id IS NULL, - 1, in_sup_claim_payment_workflow_id) AS o_sup_claim_payment_workflow_id1,\n\tEXP_sup_payment_method_id.o_special_processing AS special_processing,\n\tEXP_sup_payment_method_id.AttachedDocumentCount AS in_attached_document_count,\n\t-- *INF*: iif(isnull(in_attached_document_count),0,in_attached_document_count)\n\tIFF(in_attached_document_count IS NULL, 0, in_attached_document_count) AS o_attached_document_count\n\tFROM EXP_sup_payment_method_id\n\tLEFT JOIN LKP_claim_payment_InsurPay\n\tON LKP_claim_payment_InsurPay.claim_pay_num = EXP_sup_payment_method_id.ExceedDraftNumber\n\tLEFT JOIN LKP_sup_claim_payment_workflow\n\tON LKP_sup_claim_payment_workflow.source_payment_workflow_id = EXP_sup_payment_method_id.SupPaymentWorkflowId\n),\nFIL_changed_data_InsurPay AS (\n\tSELECT\n\tclaim_pay_id, \n\to_PaymentCashedDate AS PaymentCashedDate, \n\tsup_payment_method_id_source AS sup_payment_method_id, \n\tlkp_pay_cashed_date, \n\tlkp_sup_payment_method_id, \n\tlkp_special_processing, \n\tlkp_payee_category, \n\tlkp_sup_claim_payment_workflow_id, \n\tlkp_attached_document_count, \n\tmodified_date, \n\taudit_id, \n\to_PaymentType AS PaymentType, \n\to_sup_claim_payment_workflow_id1 AS sup_claim_payment_workflow_id, \n\tspecial_processing, \n\to_attached_document_count\n\tFROM EXP_Default_Values_InsurPay\n\tWHERE (NOT ISNULL(claim_pay_id)) \r\nAND \r\n(\r\n\t(PaymentCashedDate <> lkp_pay_cashed_date)\r\n\tOR \r\n\t(sup_payment_method_id <> lkp_sup_payment_method_id) \r\n\tOR \r\n\t(special_processing != lkp_special_processing)\r\n\tOR \r\n\t(PaymentType != lkp_payee_category)\r\n\tOR \r\n\t(sup_claim_payment_workflow_id <> \tlkp_sup_claim_payment_workflow_id)\r\n\tOR\r\n\t(o_attached_document_count <> lkp_attached_document_count)\r\n)\n),\nUPD_claim_payment_InsurPay AS (\n\tSELECT\n\tclaim_pay_id, \n\tPaymentCashedDate, \n\tsup_payment_method_id AS sup_payment_method_id_source, \n\tmodified_date, \n\taudit_id, \n\tPaymentType, \n\tsup_claim_payment_workflow_id, \n\tspecial_processing, \n\to_attached_document_count\n\tFROM FIL_changed_data_InsurPay\n),\nclaim_payment_Update_InsurPay AS (\n\tMERGE INTO claim_payment AS T\n\tUSING UPD_claim_payment_InsurPay AS S\n\tON T.claim_pay_id = S.claim_pay_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.pay_cashed_date = S.PaymentCashedDate, T.audit_id = S.audit_id, T.modified_date = S.modified_date, T.sup_payment_method_id = S.sup_payment_method_id_source, T.special_processing = S.special_processing, T.payee_category = S.PaymentType, T.sup_claim_payment_workflow_id = S.sup_claim_payment_workflow_id, T.attached_document_count = S.o_attached_document_count\n),\nSQ_InsurPayPaymentApprovalStage AS (\n\tSELECT\n\t\tInsurPayBatchId,\n\t\tApprovalStatus,\n\t\tApprovalByUserId,\n\t\tApprovalDate,\n\t\tDenialReason\n\tFROM InsurPayPaymentApprovalStage\n),\nEXP_source_approval AS (\n\tSELECT\n\tInsurPayBatchId,\n\tApprovalStatus,\n\tApprovalByUserId,\n\tApprovalDate,\n\tDenialReason\n\tFROM SQ_InsurPayPaymentApprovalStage\n),\nLKP_ArchInsurPayPaymentStage AS (\n\tSELECT\n\tExceedDraftNumber,\n\tInsurPayBatchId\n\tFROM (\n\t\tselect distinct\r\n\t\t\tarch.InsurPayBatchId as InsurPayBatchId, \r\n\t\t\tFIRST_VALUE(arch.ExceedDraftNumber) OVER (PARTITION BY arch.InsurPayBatchId ORDER BY arch.ExtractDate desc) as ExceedDraftNumber\r\n\t\tfrom dbo.InsurPayPaymentApprovalStage ap\r\n\t\tjoin dbo.ArchInsurPayPaymentStage arch on arch.InsurPayBatchId = ap.InsurPayBatchId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsurPayBatchId ORDER BY ExceedDraftNumber) = 1\n),\nEXP_Default_Values_InsurPay_Approval AS (\n\tSELECT\n\tLKP_ArchInsurPayPaymentStage.ExceedDraftNumber,\n\tEXP_source_approval.ApprovalStatus AS in_ApprovalStatus,\n\t-- *INF*: IIF(:UDF.DEFAULT_VALUE_FOR_STRINGS(in_ApprovalStatus) = 'Denied',\r\n\t-- \t\t'Declined',\r\n\t-- \t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_ApprovalStatus))\n\tIFF(\n\t    UDF_DEFAULT_VALUE_FOR_STRINGS(in_ApprovalStatus) = 'Denied', 'Declined',\n\t    UDF_DEFAULT_VALUE_FOR_STRINGS(in_ApprovalStatus)\n\t) AS v_ApprovalStatus,\n\tv_ApprovalStatus AS o_ApprovalStatus,\n\tEXP_source_approval.ApprovalByUserId AS in_ApprovalByUserId,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_ApprovalByUserId)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_ApprovalByUserId) AS v_ApprovalByUserId,\n\tv_ApprovalByUserId AS o_ApprovalByUserId,\n\tEXP_source_approval.ApprovalDate AS in_ApprovalDate,\n\t-- *INF*: IIF(ISNULL(in_ApprovalDate),\r\n\t--     TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t--     in_ApprovalDate)\n\tIFF(\n\t    in_ApprovalDate IS NULL, TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    in_ApprovalDate\n\t) AS v_ApprovalDate,\n\tv_ApprovalDate AS o_ApprovalDate,\n\tEXP_source_approval.DenialReason AS in_DenialReason,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_DenialReason)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_DenialReason) AS v_DenialReason,\n\tv_DenialReason AS o_DenialReason\n\tFROM EXP_source_approval\n\tLEFT JOIN LKP_ArchInsurPayPaymentStage\n\tON LKP_ArchInsurPayPaymentStage.InsurPayBatchId = EXP_source_approval.InsurPayBatchId\n),\nLKP_claim_payment_InsurPay_Approval AS (\n\tSELECT\n\tclaim_pay_id,\n\tapproval_status,\n\tapproval_by_user_id,\n\tapproval_date,\n\tdenial_reason,\n\tclaim_pay_num\n\tFROM (\n\t\tSELECT cpa.claim_pay_id as claim_pay_id, \r\n\t\t\tcpa.approval_status as approval_status,\r\n\t\t\tcpa.approval_by_user_id as approval_by_user_id,\r\n\t\t\tcpa.approval_date as approval_date,\r\n\t\t\tcpa.denial_reason as denial_reason,\r\n\t\t\tRTRIM(cpa.claim_pay_num) as claim_pay_num \r\n\t\tFROM dbo.sup_payment_system ps\r\n\t\tjoin dbo.claim_payment cpa on cpa.sup_payment_system_id = ps.sup_payment_system_id\r\n\t\twhere ps.payment_system = 'InsurPay'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_id) = 1\n),\nEXP_Target_Values_InsurPay_Approval AS (\n\tSELECT\n\tEXP_Default_Values_InsurPay_Approval.o_ApprovalStatus AS ApprovalStatus,\n\tEXP_Default_Values_InsurPay_Approval.o_ApprovalByUserId AS ApprovalByUserId,\n\tEXP_Default_Values_InsurPay_Approval.o_ApprovalDate AS ApprovalDate,\n\tEXP_Default_Values_InsurPay_Approval.o_DenialReason AS DenialReason,\n\tLKP_claim_payment_InsurPay_Approval.claim_pay_id AS lkp_claim_pay_id,\n\tLKP_claim_payment_InsurPay_Approval.approval_status AS lkp_approval_status,\n\tLKP_claim_payment_InsurPay_Approval.approval_by_user_id AS lkp_approval_by_user_id,\n\tLKP_claim_payment_InsurPay_Approval.approval_date AS lkp_approval_date,\n\tLKP_claim_payment_InsurPay_Approval.denial_reason AS lkp_denial_reason,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tSYSDATE AS modified_date\n\tFROM EXP_Default_Values_InsurPay_Approval\n\tLEFT JOIN LKP_claim_payment_InsurPay_Approval\n\tON LKP_claim_payment_InsurPay_Approval.claim_pay_num = EXP_Default_Values_InsurPay_Approval.ExceedDraftNumber\n),\nFIL_changed_data_InsurPay_Approval AS (\n\tSELECT\n\tApprovalStatus, \n\tApprovalByUserId, \n\tApprovalDate, \n\tDenialReason, \n\tlkp_claim_pay_id, \n\tlkp_approval_status, \n\tlkp_approval_by_user_id, \n\tlkp_approval_date, \n\tlkp_denial_reason, \n\taudit_id, \n\tmodified_date\n\tFROM EXP_Target_Values_InsurPay_Approval\n\tWHERE (NOT ISNULL(lkp_claim_pay_id)) \r\nAND \r\n(\r\n\t(ApprovalStatus <> lkp_approval_status)\r\n\tOR \r\n\t(ApprovalByUserId <> lkp_approval_by_user_id)\r\n\tOR \r\n\t(ApprovalDate <> lkp_approval_date)\r\n\tOR \r\n\t(DenialReason <> lkp_denial_reason)\r\n)\n),\nUPD_claim_payment_InsurPay_Approval AS (\n\tSELECT\n\tlkp_claim_pay_id, \n\tApprovalStatus, \n\tApprovalByUserId, \n\tApprovalDate, \n\tDenialReason, \n\taudit_id, \n\tmodified_date\n\tFROM FIL_changed_data_InsurPay_Approval\n),\nclaim_payment_Update_InsurPay_Approval AS (\n\tMERGE INTO claim_payment AS T\n\tUSING UPD_claim_payment_InsurPay_Approval AS S\n\tON T.claim_pay_id = S.lkp_claim_pay_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.audit_id = S.audit_id, T.modified_date = S.modified_date, T.approval_status = S.ApprovalStatus, T.approval_by_user_id = S.ApprovalByUserId, T.approval_date = S.ApprovalDate, T.denial_reason = S.DenialReason\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}