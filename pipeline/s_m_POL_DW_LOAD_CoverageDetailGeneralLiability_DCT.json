{
    "name": "s_m_POL_DW_LOAD_CoverageDetailGeneralLiability_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailGeneralLiability_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_WBNDOCoverageDirectorsAndOfficersNFPStage AS (\n\tSELECT\n\tRetroactiveDate,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tRetroactiveDate,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBNDOCoverageDirectorsAndOfficersNFPStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY RetroactiveDate) = 1\n),\nLKP_SupClassificationGeneralLiability AS (\n\tSELECT\n\tlkp_result,\n\tClassCode,\n\tSublineCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT ClassCode as ClassCode,\r\n\t\tSublineCode as SublineCode,\r\n\t\tRatingStateCode as RatingStateCode,\r\n\t\tISOGeneralLiabilityClassSummary+'@1'\r\n\t\t       +ISOGeneralLiabilityClassGroupCode+'@2'\r\n\t\t\t     as lkp_result\r\n\t\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationGeneralLiability\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,SublineCode,RatingStateCode ORDER BY lkp_result) = 1\n),\nSQ_DCTWorkTable AS (\n\tSELECT\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageId,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageVersion,\n\t\tWorkDCTCoverageTransaction.CoverageGUID,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.RetroactiveDate,\n\t\tWorkDCTInsuranceLine.LineType,\n\t\tWorkDCTInsuranceLine.LineId\n\tFROM WorkDCTTransactionInsuranceLineLocationBridge\n\tINNER JOIN WorkDCTCoverageTransaction\n\tINNER JOIN WorkDCTInsuranceLine\n\tON WorkDCTInsuranceLine.LineId=WorkDCTTransactionInsuranceLineLocationBridge.LineId\r\n\tand\r\n\tWorkDCTInsuranceLine.LineType in ('GeneralLiability','SBOPGeneralLiability','DirectorsAndOfficersNFP', 'DirectorsAndOffsCondos', 'EmploymentPracticesLiab')\r\n\tand\r\n\tWorkDCTCoverageTransaction.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId\n),\nEXP_Stage AS (\n\tSELECT\n\tRetroactiveDate AS i_RetroactiveDate,\n\tLineType,\n\tCoverageId,\n\tCoverageVersion,\n\tCoverageGUID,\n\t-- *INF*: IIF(LineType='DirectorsAndOfficersNFP',\r\n\t-- :LKP.LKP_WBNDOCOVERAGEDIRECTORSANDOFFICERSNFPSTAGE(CoverageId),\r\n\t-- i_RetroactiveDate\r\n\t-- )\n\tIFF(\n\t    LineType = 'DirectorsAndOfficersNFP',\n\t    LKP_WBNDOCOVERAGEDIRECTORSANDOFFICERSNFPSTAGE_CoverageId.RetroactiveDate,\n\t    i_RetroactiveDate\n\t) AS o_RetroactiveDate\n\tFROM SQ_DCTWorkTable\n\tLEFT JOIN LKP_WBNDOCOVERAGEDIRECTORSANDOFFICERSNFPSTAGE LKP_WBNDOCOVERAGEDIRECTORSANDOFFICERSNFPSTAGE_CoverageId\n\tON LKP_WBNDOCOVERAGEDIRECTORSANDOFFICERSNFPSTAGE_CoverageId.CoverageId = CoverageId\n\n),\nSQ_EDW_DCT AS (\n\tSELECT DISTINCT PT.PremiumTransactionID AS PremiumTransactionID\r\n\t,WPT.PremiumTransactionStageId AS PremiumTransactionStageId\r\n\t,RC.ClassCode AS ClassCode\r\n\t,RC.SublineCode AS SublineCode\r\n\t,rl.StateProvinceCode as StateCode\r\n\t,RC.ClassCodeOrganizationCode AS ClassCodeOrganizationCode\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC ON PT.RatingCoverageAKId = RC.RatingCoverageAKId and pt.EffectiveDate=rc.EffectiveDate\r\n\t\t\t\t\t\t\t   AND PT.SourceSystemID = 'DCT' AND RC.SourceSystemID = 'DCT' \r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT ON PT.PremiumTransactionAKId = WPT.PremiumTransactionAKId\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\t\t\t\t\t\t   AND PC.SourceSystemID = 'DCT' AND PC.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation RL on RL.RiskLocationAKID = PC.RiskLocationAKID AND RL.CurrentSnapshotFlag=1\r\n\tWHERE PT.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}' \r\n\tAND PC.InsuranceLine IN ('GeneralLiability','SBOPGeneralLiability','DirectorsAndOfficersNFP', 'DirectorsAndOffsCondos', 'EmploymentPracticesLiab')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nJNR_GL AS (SELECT\n\tSQ_EDW_DCT.PremiumTransactionID, \n\tSQ_EDW_DCT.PremiumTransactionStageId, \n\tSQ_EDW_DCT.ClassCode, \n\tSQ_EDW_DCT.SublineCode, \n\tSQ_EDW_DCT.StateCode, \n\tSQ_EDW_DCT.ClassCodeOrganizationCode, \n\tEXP_Stage.LineType, \n\tEXP_Stage.CoverageId, \n\tEXP_Stage.CoverageVersion, \n\tEXP_Stage.o_RetroactiveDate AS RetroactiveDate, \n\tEXP_Stage.CoverageGUID\n\tFROM SQ_EDW_DCT\n\tINNER JOIN EXP_Stage\n\tON EXP_Stage.CoverageId = SQ_EDW_DCT.PremiumTransactionStageId\n),\nAGG_DuplicateRemove AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionStageId,\n\tCoverageVersion,\n\tRetroactiveDate,\n\tCoverageGUID,\n\tLineType,\n\tClassCode,\n\tSublineCode,\n\tStateCode,\n\tClassCodeOrganizationCode\n\tFROM JNR_GL\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY NULL) = 1\n),\nEXP_Valuate AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tCoverageVersion AS i_CoverageVersion,\n\tRetroactiveDate AS i_RetroactiveDate,\n\tCoverageGUID AS i_CoverageGUID,\n\tClassCode AS i_ClassCode,\n\tSublineCode AS i_SublineCode,\n\tStateCode AS i_RatingStateCode,\n\tClassCodeOrganizationCode AS i_ClassCodeOrganizationCode,\n\tLineType,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: RTRIM(LTRIM(i_CoverageGUID))\n\tRTRIM(LTRIM(i_CoverageGUID)) AS o_CoverageGUID,\n\ti_RetroactiveDate AS o_RetroactiveDate,\n\t-- *INF*: IIF(ISNULL(i_CoverageVersion) OR IS_SPACES(i_CoverageVersion) OR LENGTH(i_CoverageVersion)=0, 'N/A', i_CoverageVersion)\n\tIFF(\n\t    i_CoverageVersion IS NULL\n\t    or LENGTH(i_CoverageVersion)>0\n\t    and TRIM(i_CoverageVersion)=''\n\t    or LENGTH(i_CoverageVersion) = 0,\n\t    'N/A',\n\t    i_CoverageVersion\n\t) AS o_CoverageVersion,\n\t-- *INF*: LTRIM(RTRIM(i_ClassCode))\n\tLTRIM(RTRIM(i_ClassCode)) AS o_ClassCode,\n\t-- *INF*: LTRIM(RTRIM(i_SublineCode))\n\tLTRIM(RTRIM(i_SublineCode)) AS o_SublineCode,\n\t-- *INF*: RTRIM(LTRIM(i_RatingStateCode))\n\tRTRIM(LTRIM(i_RatingStateCode)) AS o_RatingStateCode,\n\t-- *INF*: LTRIM(RTRIM(i_ClassCodeOrganizationCode))\n\tLTRIM(RTRIM(i_ClassCodeOrganizationCode)) AS o_ClassCodeOrganizationCode\n\tFROM AGG_DuplicateRemove\n),\nEXP_Metadata AS (\n\tSELECT\n\tLineType AS i_LineType,\n\to_PremiumTransactionID AS i_PremiumTransactionID,\n\to_CoverageGUID AS i_CoverageGUID,\n\to_RetroactiveDate AS i_RetroactiveDate,\n\to_CoverageVersion AS i_LiabilityFormCode,\n\to_ClassCode AS i_ClassCode,\n\to_SublineCode AS i_SublineCode,\n\to_RatingStateCode AS i_RatingStateCode,\n\to_ClassCodeOrganizationCode AS i_OriginatingOrganizationCode,\n\t-- *INF*: DECODE(true,\r\n\t-- IN(i_LineType,'GeneralLiability','SBOPGeneralLiability') AND NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode)),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,i_RatingStateCode),\r\n\t-- IN(i_LineType,'GeneralLiability','SBOPGeneralLiability') AND NOT ISNULL(:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99')),:LKP.LKP_SupClassificationGeneralLiability(i_ClassCode,i_SublineCode,'99'),\r\n\t-- 'N/A')\n\tDECODE(\n\t    true,\n\t    i_LineType IN ('GeneralLiability','SBOPGeneralLiability') AND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.lkp_result,\n\t    i_LineType IN ('GeneralLiability','SBOPGeneralLiability') AND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result IS NOT NULL, LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.lkp_result,\n\t    'N/A'\n\t) AS v_lkp_result,\n\t-- *INF*: IIF(ISNULL(i_RetroactiveDate),\r\n\t-- TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),\r\n\t-- i_RetroactiveDate\r\n\t-- )\n\tIFF(\n\t    i_RetroactiveDate IS NULL, TO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),\n\t    i_RetroactiveDate\n\t) AS v_RetroactiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_LineType<>'DirectorsAndOfficersNFP' and i_LiabilityFormCode='OCCURRENCE', '3',\r\n\t-- (i_LiabilityFormCode='CLAIMSMADE' or IN(i_LineType, 'DirectorsAndOfficersNFP', 'DirectorsAndOffsCondos', 'EmploymentPracticesLiab')) and ISNULL(i_RetroactiveDate), '4',\r\n\t-- (i_LiabilityFormCode='CLAIMSMADE' or IN(i_LineType, 'DirectorsAndOfficersNFP', 'DirectorsAndOffsCondos', 'EmploymentPracticesLiab')) and NOT ISNULL(i_RetroactiveDate), '1',\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_LineType <> 'DirectorsAndOfficersNFP' and i_LiabilityFormCode = 'OCCURRENCE', '3',\n\t    (i_LiabilityFormCode = 'CLAIMSMADE' or i_LineType IN ('DirectorsAndOfficersNFP','DirectorsAndOffsCondos','EmploymentPracticesLiab')) and i_RetroactiveDate IS NULL, '4',\n\t    (i_LiabilityFormCode = 'CLAIMSMADE' or i_LineType IN ('DirectorsAndOfficersNFP','DirectorsAndOffsCondos','EmploymentPracticesLiab')) and i_RetroactiveDate IS NOT NULL, '1',\n\t    'N/A'\n\t) AS v_LiabilityFormCode,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_TIMESTAMP('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_TIMESTAMP('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_CoverageGUID)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_CoverageGUID) AS o_CoverageGUID,\n\tv_RetroactiveDate AS o_RetroactiveDate,\n\tv_LiabilityFormCode AS o_LiabilityFormCode,\n\t-- *INF*: IIF(v_lkp_result='N/A' OR ISNULL(v_lkp_result), 'N/A',\r\n\t--     IIF(ISNULL(SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1)) OR LENGTH(SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1))=0 ,'N/A',SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1))\r\n\t-- )\n\tIFF(\n\t    v_lkp_result = 'N/A' OR v_lkp_result IS NULL, 'N/A',\n\t    IFF(\n\t        SUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1') - 1) IS NULL\n\t        or LENGTH(SUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1') - 1)) = 0,\n\t        'N/A',\n\t        SUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1') - 1)\n\t    )\n\t) AS o_ClassSummary,\n\t-- *INF*: IIF(v_lkp_result='N/A' OR ISNULL(v_lkp_result), 'N/A',\r\n\t-- IIF(ISNULL(SUBSTR(v_lkp_result,(instr(v_lkp_result,'@1')+2),(instr(v_lkp_result,'@2')-(instr(v_lkp_result,'@1')+2)))) OR LENGTH(SUBSTR(v_lkp_result,(instr(v_lkp_result,'@1')+2),(instr(v_lkp_result,'@2')-(instr(v_lkp_result,'@1')+2)))) =0 , 'N/A'  ,SUBSTR(v_lkp_result,(instr(v_lkp_result,'@1')+2),(instr(v_lkp_result,'@2')-(instr(v_lkp_result,'@1')+2))))\r\n\t-- )\n\tIFF(\n\t    v_lkp_result = 'N/A' OR v_lkp_result IS NULL, 'N/A',\n\t    IFF(\n\t        SUBSTR(v_lkp_result, (REGEXP_INSTR(v_lkp_result, '@1') + 2), (REGEXP_INSTR(v_lkp_result, '@2') - (REGEXP_INSTR(v_lkp_result, '@1') + 2))) IS NULL\n\t        or LENGTH(SUBSTR(v_lkp_result, (REGEXP_INSTR(v_lkp_result, '@1') + 2), (REGEXP_INSTR(v_lkp_result, '@2') - (REGEXP_INSTR(v_lkp_result, '@1') + 2)))) = 0,\n\t        'N/A',\n\t        SUBSTR(v_lkp_result, (REGEXP_INSTR(v_lkp_result, '@1') + 2), (REGEXP_INSTR(v_lkp_result, '@2') - (REGEXP_INSTR(v_lkp_result, '@1') + 2)))\n\t    )\n\t) AS o_ClassGroup\n\tFROM EXP_Valuate\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_i_RatingStateCode.RatingStateCode = i_RatingStateCode\n\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.SublineCode = i_SublineCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_SublineCode_99.RatingStateCode = '99'\n\n),\nLKP_CoverageDetailGeneralLiability AS (\n\tSELECT\n\tPremiumTransactionID,\n\tRetroactiveDate,\n\tLiabilityFormCode,\n\tISOGeneralLiabilityClassSummary,\n\tISOGeneralLiabilityClassGroupCode\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tRetroactiveDate,\n\t\t\tLiabilityFormCode,\n\t\t\tISOGeneralLiabilityClassSummary,\n\t\t\tISOGeneralLiabilityClassGroupCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailGeneralLiability\n\t\tWHERE SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand PremiumTransactionID  in (select pt.PremiumTransactionID from\r\n\t\tPremiumTransaction pt\r\n\t\tinner join WorkPremiumTransaction wpt\r\n\t\ton pt.PremiumTransactionAKID=wpt.PremiumTransactionAKId)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_CoverageDetailGeneralLiability.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailGeneralLiability.RetroactiveDate AS lkp_RetroactiveDate,\n\tLKP_CoverageDetailGeneralLiability.LiabilityFormCode AS lkp_LiabilityFormCode,\n\tLKP_CoverageDetailGeneralLiability.ISOGeneralLiabilityClassSummary AS lkp_ClassSummary,\n\tLKP_CoverageDetailGeneralLiability.ISOGeneralLiabilityClassGroupCode AS lkp_ClassGroupCode,\n\tEXP_Metadata.o_PremiumTransactionID AS PremiumTransactionID,\n\tEXP_Metadata.o_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\tEXP_Metadata.o_AuditID AS AuditID,\n\tEXP_Metadata.o_EffectiveDate AS EffectiveDate,\n\tEXP_Metadata.o_ExpirationDate AS ExpirationDate,\n\tEXP_Metadata.o_SourceSystemID AS SourceSystemID,\n\tEXP_Metadata.o_CreatedDate AS CreatedDate,\n\tEXP_Metadata.o_ModifiedDate AS ModifiedDate,\n\tEXP_Metadata.o_CoverageGUID AS CoverageGUID,\n\tEXP_Metadata.o_RetroactiveDate AS RetroactiveDate,\n\tEXP_Metadata.o_LiabilityFormCode AS LiabilityFormCode,\n\tEXP_Metadata.o_ClassSummary AS ClassSummary,\n\tEXP_Metadata.o_ClassGroup AS ClassGroup,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_PremiumTransactionID),'NEW',\r\n\t-- lkp_RetroactiveDate != RetroactiveDate\r\n\t-- -----------------------Add for EDWP-3959-------------------\r\n\t-- OR lkp_LiabilityFormCode != LiabilityFormCode\r\n\t-- ------------------------------------------------------------------------\r\n\t-- OR lkp_ClassSummary != ClassSummary\r\n\t-- OR lkp_ClassGroupCode != ClassGroup\r\n\t-- ,'UPDATE',\r\n\t-- 'NOCHANGE'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    lkp_PremiumTransactionID IS NULL, 'NEW',\n\t    lkp_RetroactiveDate != RetroactiveDate OR lkp_LiabilityFormCode != LiabilityFormCode OR lkp_ClassSummary != ClassSummary OR lkp_ClassGroupCode != ClassGroup, 'UPDATE',\n\t    'NOCHANGE'\n\t) AS o_ChangeFlag\n\tFROM EXP_Metadata\n\tLEFT JOIN LKP_CoverageDetailGeneralLiability\n\tON LKP_CoverageDetailGeneralLiability.PremiumTransactionID = EXP_Metadata.o_PremiumTransactionID\n),\nFIL_Records AS (\n\tSELECT\n\tPremiumTransactionID, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tCoverageGUID, \n\tRetroactiveDate, \n\tLiabilityFormCode, \n\tClassSummary, \n\tClassGroup, \n\to_ChangeFlag AS ChangeFlag\n\tFROM EXP_DetectChanges\n\tWHERE ChangeFlag='NEW'\n),\nCoverageDetailGeneralLiability_INSERT AS (\n\tINSERT INTO CoverageDetailGeneralLiability\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, RetroactiveDate, LiabilityFormCode, ISOGeneralLiabilityClassSummary, ISOGeneralLiabilityClassGroupCode)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCoverageGUID AS COVERAGEGUID, \n\tRETROACTIVEDATE, \n\tLIABILITYFORMCODE, \n\tClassSummary AS ISOGENERALLIABILITYCLASSSUMMARY, \n\tClassGroup AS ISOGENERALLIABILITYCLASSGROUPCODE\n\tFROM FIL_Records\n),\nSQ_CoverageDetailGeneralLiability AS (\n\tSELECT \r\n\tCDGLPrevious.RetroactiveDate,\r\n\tCDGLPrevious.LiabilityFormCode,\r\n\tCDGLPrevious.ISOGeneralLiabilityClassSummary,\r\n\tCDGLPrevious.ISOGeneralLiabilityClassGroupCode,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID\r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join CoverageDetailGeneralLiability CDGLPrevious\r\n\ton ( CDGLPrevious.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join CoverageDetailGeneralLiability CDGLToUpdate\r\n\ton ( CDGLToUpdate.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\t\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL.premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Offset'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\t  COALESCE(CDGLPrevious.ISOGeneralLiabilityClassGroupCode, '*^') <> COALESCE(CDGLToUpdate.ISOGeneralLiabilityClassGroupCode, '*^')\r\n\t  OR COALESCE(CDGLPrevious.ISOGeneralLiabilityClassSummary, '*^') <> COALESCE(CDGLToUpdate.ISOGeneralLiabilityClassSummary, '*^')\r\n\t  OR COALESCE(CDGLPrevious.LiabilityFormCode, '*^') <> COALESCE(CDGLToUpdate.LiabilityFormCode, '*^')\r\n\t  OR CDGLPrevious.RetroactiveDate <> CDGLToUpdate.RetroactiveDate\r\n\t  )\n),\nExp_CoverageDetailGeneralLiability AS (\n\tSELECT\n\tRetroactiveDate,\n\tLiabilityFormCode,\n\tISOGeneralLiabilityClassSummary,\n\tISOGeneralLiabilityClassGroupCode,\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate\n\tFROM SQ_CoverageDetailGeneralLiability\n),\nUPD_CoverageDetailGeneralLiability AS (\n\tSELECT\n\tRetroactiveDate, \n\tLiabilityFormCode, \n\tISOGeneralLiabilityClassSummary, \n\tISOGeneralLiabilityClassGroupCode, \n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate\n\tFROM Exp_CoverageDetailGeneralLiability\n),\nTGT_CoverageDetailGeneralLiability_Upd_Ofsets AS (\n\tMERGE INTO CoverageDetailGeneralLiability AS T\n\tUSING UPD_CoverageDetailGeneralLiability AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.RetroactiveDate = S.RetroactiveDate, T.LiabilityFormCode = S.LiabilityFormCode, T.ISOGeneralLiabilityClassSummary = S.ISOGeneralLiabilityClassSummary, T.ISOGeneralLiabilityClassGroupCode = S.ISOGeneralLiabilityClassGroupCode\n),\nSQ_CoverageDetailGeneralLiability_Deprecated AS (\n\tSELECT \r\n\tCDGLPrevious.RetroactiveDate,\r\n\tCDGLPrevious.LiabilityFormCode,\r\n\tCDGLPrevious.ISOGeneralLiabilityClassSummary,\r\n\tCDGLPrevious.ISOGeneralLiabilityClassGroupCode,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID\r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join CoverageDetailGeneralLiability CDGLPrevious\r\n\ton ( CDGLPrevious.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join CoverageDetailGeneralLiability CDGLToUpdate\r\n\ton ( CDGLToUpdate.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\t\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL.premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Deprecated'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\t  COALESCE(CDGLPrevious.ISOGeneralLiabilityClassGroupCode, '*^') <> COALESCE(CDGLToUpdate.ISOGeneralLiabilityClassGroupCode, '*^')\r\n\t  OR COALESCE(CDGLPrevious.ISOGeneralLiabilityClassSummary, '*^') <> COALESCE(CDGLToUpdate.ISOGeneralLiabilityClassSummary, '*^')\r\n\t  OR COALESCE(CDGLPrevious.LiabilityFormCode, '*^') <> COALESCE(CDGLToUpdate.LiabilityFormCode, '*^')\r\n\t  OR CDGLPrevious.RetroactiveDate <> CDGLToUpdate.RetroactiveDate\r\n\t  )\n),\nExp_CoverageDetailGeneralLiability_Deprecated AS (\n\tSELECT\n\tRetroactiveDate,\n\tLiabilityFormCode,\n\tISOGeneralLiabilityClassSummary,\n\tISOGeneralLiabilityClassGroupCode,\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate\n\tFROM SQ_CoverageDetailGeneralLiability_Deprecated\n),\nUPD_CoverageDetailGeneralLiability_Deprecated AS (\n\tSELECT\n\tRetroactiveDate, \n\tLiabilityFormCode, \n\tISOGeneralLiabilityClassSummary, \n\tISOGeneralLiabilityClassGroupCode, \n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate\n\tFROM Exp_CoverageDetailGeneralLiability_Deprecated\n),\nTGT_CoverageDetailGeneralLiability_Upd_Deprecated AS (\n\tMERGE INTO CoverageDetailGeneralLiability AS T\n\tUSING UPD_CoverageDetailGeneralLiability_Deprecated AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.RetroactiveDate = S.RetroactiveDate, T.LiabilityFormCode = S.LiabilityFormCode, T.ISOGeneralLiabilityClassSummary = S.ISOGeneralLiabilityClassSummary, T.ISOGeneralLiabilityClassGroupCode = S.ISOGeneralLiabilityClassGroupCode\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}