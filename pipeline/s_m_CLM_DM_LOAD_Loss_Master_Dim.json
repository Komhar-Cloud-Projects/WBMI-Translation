{
    "name": "s_m_CLM_DM_LOAD_Loss_Master_Dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Loss_Master_Dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_loss_master_calculation AS (\n\tSELECT DISTINCT\r\n\trtrim(A.variation_code),\r\n\tA.pol_type, \r\n\trtrim(A.auto_reins_facility), \r\n\trtrim(A.statistical_brkdwn_line), \r\n\tA.statistical_code1,\r\n\tA.statistical_code2, \r\n\tA.statistical_code3, \r\n\trtrim(A.statistical_line), \r\n\trtrim(A.loss_master_cov_code), \r\n\trtrim(A.risk_state_prov_code), \r\n\trtrim(A.risk_zip_code), \r\n\trtrim(A.terr_code), \r\n\tA.tax_loc, \r\n\trtrim(A.class_code), \r\n\tA.exposure,\r\n\trtrim(A.sub_line_code), \r\n\trtrim(A.source_sar_asl),\r\n\trtrim(A.source_sar_prdct_line), \r\n\tA.source_sar_sp_use_code\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}. loss_master_calculation A\r\n\tWHERE \r\n\tA.created_date > '@{pipeline().parameters.SELECTION_START_TS}' \r\n\t@{pipeline().parameters.WHERECLAUSE}\n),\nEXP_Source AS (\n\tSELECT\n\trisk_state_prov_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(risk_state_prov_code),'N/A',\r\n\t-- IS_SPACES(risk_state_prov_code),'N/A',\r\n\t-- LENGTH(risk_state_prov_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(risk_state_prov_code)))\n\tDECODE(TRUE,\n\t\trisk_state_prov_code IS NULL, 'N/A',\n\t\tLENGTH(risk_state_prov_code)>0 AND TRIM(risk_state_prov_code)='', 'N/A',\n\t\tLENGTH(risk_state_prov_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(risk_state_prov_code\n\t\t\t)\n\t\t)\n\t) AS risk_state_prov_code_lkp,\n\trisk_zip_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(risk_zip_code),'N/A',\r\n\t-- IS_SPACES(risk_zip_code),'N/A',\r\n\t-- LENGTH(risk_zip_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(risk_zip_code)))\n\tDECODE(TRUE,\n\t\trisk_zip_code IS NULL, 'N/A',\n\t\tLENGTH(risk_zip_code)>0 AND TRIM(risk_zip_code)='', 'N/A',\n\t\tLENGTH(risk_zip_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(risk_zip_code\n\t\t\t)\n\t\t)\n\t) AS risk_zip_code_lkp,\n\tterr_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(terr_code),'N/A',\r\n\t-- IS_SPACES(terr_code),'N/A',\r\n\t-- LENGTH(terr_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(terr_code)))\n\tDECODE(TRUE,\n\t\tterr_code IS NULL, 'N/A',\n\t\tLENGTH(terr_code)>0 AND TRIM(terr_code)='', 'N/A',\n\t\tLENGTH(terr_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(terr_code\n\t\t\t)\n\t\t)\n\t) AS terr_code_lkp,\n\ttax_loc,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRING_NUMERIC(tax_loc)\n\t:UDF.DEFAULT_VALUE_FOR_STRING_NUMERIC(tax_loc\n\t) AS tax_loc_lkp,\n\t-- *INF*: IIF(ISNULL(tax_loc) OR IS_SPACES(tax_loc) OR LENGTH(tax_loc)=0 OR NOT IS_NUMBER(LTRIM(RTRIM(tax_loc))),'N/A',\r\n\t-- tax_loc)\r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(tax_loc IS NULL \n\t\tOR LENGTH(tax_loc)>0 AND TRIM(tax_loc)='' \n\t\tOR LENGTH(tax_loc\n\t\t) = 0 \n\t\tOR NOT REGEXP_LIKE(LTRIM(RTRIM(tax_loc\n\t\t\t)\n\t\t), '^[0-9]+$'),\n\t\t'N/A',\n\t\ttax_loc\n\t) AS tax_loc_out,\n\tclass_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(class_code),'N/A',\r\n\t-- IS_SPACES(class_code),'N/A',\r\n\t-- LENGTH(class_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(class_code)))\n\tDECODE(TRUE,\n\t\tclass_code IS NULL, 'N/A',\n\t\tLENGTH(class_code)>0 AND TRIM(class_code)='', 'N/A',\n\t\tLENGTH(class_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(class_code\n\t\t\t)\n\t\t)\n\t) AS class_code_lkp,\n\texposure,\n\tsub_line_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(sub_line_code),'N/A',\r\n\t-- IS_SPACES(sub_line_code),'N/A',\r\n\t-- LENGTH(sub_line_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(sub_line_code)))\n\tDECODE(TRUE,\n\t\tsub_line_code IS NULL, 'N/A',\n\t\tLENGTH(sub_line_code)>0 AND TRIM(sub_line_code)='', 'N/A',\n\t\tLENGTH(sub_line_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(sub_line_code\n\t\t\t)\n\t\t)\n\t) AS sub_line_code_lkp,\n\tsource_sar_asl,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(source_sar_asl),'N/A',\r\n\t-- IS_SPACES(source_sar_asl),'N/A',\r\n\t-- LENGTH(source_sar_asl)=0,'N/A',\r\n\t-- LTRIM(RTRIM(REPLACECHR(TRUE, source_sar_asl, '.' , ''))))\r\n\t-- \r\n\t-- \n\tDECODE(TRUE,\n\t\tsource_sar_asl IS NULL, 'N/A',\n\t\tLENGTH(source_sar_asl)>0 AND TRIM(source_sar_asl)='', 'N/A',\n\t\tLENGTH(source_sar_asl\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(REGEXP_REPLACE(source_sar_asl,'.','')\n\t\t\t)\n\t\t)\n\t) AS source_sar_asl_lkp,\n\tsource_sar_prdct_line,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(source_sar_prdct_line),'N/A',\r\n\t-- IS_SPACES(source_sar_prdct_line),'N/A',\r\n\t-- LENGTH(source_sar_prdct_line)=0,'N/A',\r\n\t-- LTRIM(RTRIM(source_sar_prdct_line)))\n\tDECODE(TRUE,\n\t\tsource_sar_prdct_line IS NULL, 'N/A',\n\t\tLENGTH(source_sar_prdct_line)>0 AND TRIM(source_sar_prdct_line)='', 'N/A',\n\t\tLENGTH(source_sar_prdct_line\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(source_sar_prdct_line\n\t\t\t)\n\t\t)\n\t) AS source_sar_prdct_line_lkp,\n\tsource_sar_sp_use_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(source_sar_sp_use_code),'N/A',\r\n\t-- IS_SPACES(source_sar_sp_use_code),'N/A',\r\n\t-- LENGTH(source_sar_sp_use_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(source_sar_sp_use_code)))\n\tDECODE(TRUE,\n\t\tsource_sar_sp_use_code IS NULL, 'N/A',\n\t\tLENGTH(source_sar_sp_use_code)>0 AND TRIM(source_sar_sp_use_code)='', 'N/A',\n\t\tLENGTH(source_sar_sp_use_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(source_sar_sp_use_code\n\t\t\t)\n\t\t)\n\t) AS source_sar_sp_use_code_lkp,\n\t-- *INF*: IIF(ISNULL(source_sar_sp_use_code) OR IS_SPACES(source_sar_sp_use_code) OR LENGTH(source_sar_sp_use_code)=0,'N/A',\r\n\t-- source_sar_sp_use_code)\r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(source_sar_sp_use_code IS NULL \n\t\tOR LENGTH(source_sar_sp_use_code)>0 AND TRIM(source_sar_sp_use_code)='' \n\t\tOR LENGTH(source_sar_sp_use_code\n\t\t) = 0,\n\t\t'N/A',\n\t\tsource_sar_sp_use_code\n\t) AS source_sar_sp_use_code_Out,\n\tstatistical_line AS source_statistical_line,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(source_statistical_line),'N/A',\r\n\t-- IS_SPACES(source_statistical_line),'N/A',\r\n\t-- LENGTH(source_statistical_line)=0,'N/A',\r\n\t-- LTRIM(RTRIM(source_statistical_line)))\n\tDECODE(TRUE,\n\t\tsource_statistical_line IS NULL, 'N/A',\n\t\tLENGTH(source_statistical_line)>0 AND TRIM(source_statistical_line)='', 'N/A',\n\t\tLENGTH(source_statistical_line\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(source_statistical_line\n\t\t\t)\n\t\t)\n\t) AS source_statistical_line_lkp,\n\tvariation_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(variation_code),'N/A',\r\n\t-- IS_SPACES(variation_code),'N/A',\r\n\t-- LENGTH(variation_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(variation_code)))\n\tDECODE(TRUE,\n\t\tvariation_code IS NULL, 'N/A',\n\t\tLENGTH(variation_code)>0 AND TRIM(variation_code)='', 'N/A',\n\t\tLENGTH(variation_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(variation_code\n\t\t\t)\n\t\t)\n\t) AS variation_code_lkp,\n\tpol_type,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(pol_type),'N/A',\r\n\t-- IS_SPACES(pol_type),'N/A',\r\n\t-- LENGTH(pol_type)=0,'N/A',\r\n\t-- LTRIM(RTRIM(pol_type)))\n\tDECODE(TRUE,\n\t\tpol_type IS NULL, 'N/A',\n\t\tLENGTH(pol_type)>0 AND TRIM(pol_type)='', 'N/A',\n\t\tLENGTH(pol_type\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(pol_type\n\t\t\t)\n\t\t)\n\t) AS pol_type_lkp,\n\t-- *INF*: IIF(ISNULL(pol_type) OR IS_SPACES(pol_type) OR LENGTH(pol_type)=0,'N/A',\r\n\t-- pol_type)\r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(pol_type IS NULL \n\t\tOR LENGTH(pol_type)>0 AND TRIM(pol_type)='' \n\t\tOR LENGTH(pol_type\n\t\t) = 0,\n\t\t'N/A',\n\t\tpol_type\n\t) AS pol_type_out,\n\tauto_reins_facility,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(auto_reins_facility),'N/A',\r\n\t-- IS_SPACES(auto_reins_facility),'N/A',\r\n\t-- LENGTH(auto_reins_facility)=0,'N/A',\r\n\t-- LTRIM(RTRIM(auto_reins_facility)))\n\tDECODE(TRUE,\n\t\tauto_reins_facility IS NULL, 'N/A',\n\t\tLENGTH(auto_reins_facility)>0 AND TRIM(auto_reins_facility)='', 'N/A',\n\t\tLENGTH(auto_reins_facility\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(auto_reins_facility\n\t\t\t)\n\t\t)\n\t) AS auto_reins_facility_lkp,\n\tstatistical_brkdwn_line,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(statistical_brkdwn_line),'N/A',\r\n\t-- IS_SPACES(statistical_brkdwn_line),'N/A',\r\n\t-- LENGTH(statistical_brkdwn_line)=0,'N/A',\r\n\t-- LTRIM(RTRIM(statistical_brkdwn_line)))\n\tDECODE(TRUE,\n\t\tstatistical_brkdwn_line IS NULL, 'N/A',\n\t\tLENGTH(statistical_brkdwn_line)>0 AND TRIM(statistical_brkdwn_line)='', 'N/A',\n\t\tLENGTH(statistical_brkdwn_line\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(statistical_brkdwn_line\n\t\t\t)\n\t\t)\n\t) AS statistical_brkdwn_line_lkp,\n\tstatistical_code1,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(statistical_code1),'N/A',\r\n\t-- IS_SPACES(statistical_code1),'N/A',\r\n\t-- LENGTH(statistical_code1)=0,'N/A',\r\n\t-- LTRIM(RTRIM(statistical_code1)))\r\n\t-- \r\n\t-- -- We are using LTRIM ,RTRIM  functions to match on  Target lookup values, since these are string fields\n\tDECODE(TRUE,\n\t\tstatistical_code1 IS NULL, 'N/A',\n\t\tLENGTH(statistical_code1)>0 AND TRIM(statistical_code1)='', 'N/A',\n\t\tLENGTH(statistical_code1\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(statistical_code1\n\t\t\t)\n\t\t)\n\t) AS statistical_code1_lkp,\n\t-- *INF*: IIF(ISNULL(statistical_code1) OR IS_SPACES(statistical_code1) OR LENGTH(statistical_code1)=0,'N/A',\r\n\t-- statistical_code1)\r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(statistical_code1 IS NULL \n\t\tOR LENGTH(statistical_code1)>0 AND TRIM(statistical_code1)='' \n\t\tOR LENGTH(statistical_code1\n\t\t) = 0,\n\t\t'N/A',\n\t\tstatistical_code1\n\t) AS statistical_code1_Out,\n\tstatistical_code2,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(statistical_code2),'N/A',\r\n\t-- IS_SPACES(statistical_code2),'N/A',\r\n\t-- LENGTH(statistical_code2)=0,'N/A',\r\n\t-- LTRIM(RTRIM(statistical_code2)))\r\n\t-- \r\n\t-- \r\n\t-- -- We are using LTRIM ,RTRIM  functions to match on  Target lookup values, since these are string fields\n\tDECODE(TRUE,\n\t\tstatistical_code2 IS NULL, 'N/A',\n\t\tLENGTH(statistical_code2)>0 AND TRIM(statistical_code2)='', 'N/A',\n\t\tLENGTH(statistical_code2\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(statistical_code2\n\t\t\t)\n\t\t)\n\t) AS statistical_code2_lkp,\n\t-- *INF*: IIF(ISNULL(statistical_code2) OR IS_SPACES(statistical_code2) OR LENGTH(statistical_code2)=0,'N/A',\r\n\t-- statistical_code2)\r\n\t-- \r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(statistical_code2 IS NULL \n\t\tOR LENGTH(statistical_code2)>0 AND TRIM(statistical_code2)='' \n\t\tOR LENGTH(statistical_code2\n\t\t) = 0,\n\t\t'N/A',\n\t\tstatistical_code2\n\t) AS statistical_code2_Out,\n\tstatistical_code3,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(statistical_code3),'N/A',\r\n\t-- IS_SPACES(statistical_code3),'N/A',\r\n\t-- LENGTH(statistical_code3)=0,'N/A',\r\n\t-- LTRIM(RTRIM(statistical_code3))) \r\n\t-- \r\n\t-- -- We are using LTRIM ,RTRIM  functions to match on  Target lookup values, since these are string fields\n\tDECODE(TRUE,\n\t\tstatistical_code3 IS NULL, 'N/A',\n\t\tLENGTH(statistical_code3)>0 AND TRIM(statistical_code3)='', 'N/A',\n\t\tLENGTH(statistical_code3\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(statistical_code3\n\t\t\t)\n\t\t)\n\t) AS statistical_code3_lkp,\n\t-- *INF*: IIF(ISNULL(statistical_code3) OR IS_SPACES(statistical_code3) OR LENGTH(statistical_code3)=0,'N/A',\r\n\t-- statistical_code3)\r\n\t-- \r\n\t-- \r\n\t-- -- we are not using LTRIM ,RTRIM  functions because we need to spaces as it is as they are used for IBS Bureau Reporting.\n\tIFF(statistical_code3 IS NULL \n\t\tOR LENGTH(statistical_code3)>0 AND TRIM(statistical_code3)='' \n\t\tOR LENGTH(statistical_code3\n\t\t) = 0,\n\t\t'N/A',\n\t\tstatistical_code3\n\t) AS statistical_code3_Out,\n\tloss_master_cov_code,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(loss_master_cov_code),'N/A',\r\n\t-- IS_SPACES(loss_master_cov_code),'N/A',\r\n\t-- LENGTH(loss_master_cov_code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(loss_master_cov_code)))\n\tDECODE(TRUE,\n\t\tloss_master_cov_code IS NULL, 'N/A',\n\t\tLENGTH(loss_master_cov_code)>0 AND TRIM(loss_master_cov_code)='', 'N/A',\n\t\tLENGTH(loss_master_cov_code\n\t\t) = 0, 'N/A',\n\t\tLTRIM(RTRIM(loss_master_cov_code\n\t\t\t)\n\t\t)\n\t) AS loss_master_cov_code_lkp\n\tFROM SQ_loss_master_calculation\n),\nLKP_loss_master_dim AS (\n\tSELECT\n\tloss_master_dim_id,\n\trisk_state_prov_code,\n\trisk_zip_code,\n\tterr_code,\n\ttax_loc,\n\tclass_code,\n\texposure,\n\tsub_line_code,\n\tsource_sar_asl,\n\tsource_sar_prdct_line,\n\tsource_sar_sp_use_code,\n\tsource_statistical_line,\n\tvariation_code,\n\tpol_type,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\tstatistical_code1,\n\tstatistical_code2,\n\tstatistical_code3,\n\tloss_master_cov_code\n\tFROM (\n\t\tSELECT loss_master_dim_id      AS loss_master_dim_id,\r\n\t\t       LTRIM(RTRIM(risk_state_prov_code))    AS risk_state_prov_code,\r\n\t\t       LTRIM(RTRIM(risk_zip_code))           AS risk_zip_code,\r\n\t\t       LTRIM(RTRIM(terr_code))               AS terr_code,\r\n\t\t       LTRIM(RTRIM(tax_loc))                 AS tax_loc,\r\n\t\t       LTRIM(RTRIM(class_code))              AS class_code,\r\n\t\t       exposure                AS exposure,\r\n\t\t       LTRIM(RTRIM(sub_line_code))           AS sub_line_code,\r\n\t\t       LTRIM(RTRIM(source_sar_asl))          AS source_sar_asl,\r\n\t\t       LTRIM(RTRIM(source_sar_prdct_line))   AS source_sar_prdct_line,\r\n\t\t       LTRIM(RTRIM(source_sar_sp_use_code))  AS source_sar_sp_use_code,\r\n\t\t       LTRIM(RTRIM(source_statistical_line)) AS source_statistical_line,\r\n\t\t       LTRIM(RTRIM(variation_code))          AS variation_code,\r\n\t\t       LTRIM(RTRIM(pol_type))                AS pol_type,\r\n\t\t       LTRIM(RTRIM(auto_reins_facility))     AS auto_reins_facility,\r\n\t\t       LTRIM(RTRIM(statistical_brkdwn_line)) AS statistical_brkdwn_line,\r\n\t\t       LTRIM(RTRIM(statistical_code1))       AS statistical_code1,\r\n\t\t       LTRIM(RTRIM(statistical_code2))       AS statistical_code2,\r\n\t\t       LTRIM(RTRIM(statistical_code3))       AS statistical_code3,\r\n\t\t       LTRIM(RTRIM(loss_master_cov_code))    AS loss_master_cov_code\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_state_prov_code,risk_zip_code,terr_code,tax_loc,class_code,exposure,sub_line_code,source_sar_asl,source_sar_prdct_line,source_sar_sp_use_code,source_statistical_line,variation_code,pol_type,auto_reins_facility,statistical_brkdwn_line,statistical_code1,statistical_code2,statistical_code3,loss_master_cov_code ORDER BY loss_master_dim_id DESC) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_loss_master_dim.loss_master_dim_id AS lkp_loss_master_dim_id,\n\tEXP_Source.risk_state_prov_code_lkp AS risk_state_prov_code,\n\tEXP_Source.risk_zip_code_lkp AS risk_zip_code,\n\tEXP_Source.terr_code_lkp AS terr_code,\n\tEXP_Source.tax_loc_out AS tax_loc,\n\tEXP_Source.class_code_lkp AS class_code,\n\tEXP_Source.exposure,\n\tEXP_Source.sub_line_code_lkp AS sub_line_code,\n\tEXP_Source.source_sar_asl_lkp AS source_sar_asl,\n\tEXP_Source.source_sar_prdct_line_lkp AS source_sar_prdct_line,\n\tEXP_Source.source_sar_sp_use_code_Out AS source_sar_sp_use_code,\n\tEXP_Source.source_statistical_line_lkp AS source_statistical_line,\n\tEXP_Source.variation_code_lkp AS variation_code,\n\tEXP_Source.pol_type_out AS pol_type,\n\tEXP_Source.auto_reins_facility_lkp AS auto_reins_facility,\n\tEXP_Source.statistical_brkdwn_line_lkp AS statistical_brkdwn_line,\n\tEXP_Source.statistical_code1_Out AS statistical_code1,\n\tEXP_Source.statistical_code2_Out AS statistical_code2,\n\tEXP_Source.statistical_code3_Out AS statistical_code3,\n\tEXP_Source.loss_master_cov_code_lkp AS loss_master_cov_code\n\tFROM EXP_Source\n\tLEFT JOIN LKP_loss_master_dim\n\tON LKP_loss_master_dim.risk_state_prov_code = EXP_Source.risk_state_prov_code_lkp AND LKP_loss_master_dim.risk_zip_code = EXP_Source.risk_zip_code_lkp AND LKP_loss_master_dim.terr_code = EXP_Source.terr_code_lkp AND LKP_loss_master_dim.tax_loc = EXP_Source.tax_loc_lkp AND LKP_loss_master_dim.class_code = EXP_Source.class_code_lkp AND LKP_loss_master_dim.exposure = EXP_Source.exposure AND LKP_loss_master_dim.sub_line_code = EXP_Source.sub_line_code_lkp AND LKP_loss_master_dim.source_sar_asl = EXP_Source.source_sar_asl_lkp AND LKP_loss_master_dim.source_sar_prdct_line = EXP_Source.source_sar_prdct_line_lkp AND LKP_loss_master_dim.source_sar_sp_use_code = EXP_Source.source_sar_sp_use_code_lkp AND LKP_loss_master_dim.source_statistical_line = EXP_Source.source_statistical_line_lkp AND LKP_loss_master_dim.variation_code = EXP_Source.variation_code_lkp AND LKP_loss_master_dim.pol_type = EXP_Source.pol_type_lkp AND LKP_loss_master_dim.auto_reins_facility = EXP_Source.auto_reins_facility_lkp AND LKP_loss_master_dim.statistical_brkdwn_line = EXP_Source.statistical_brkdwn_line_lkp AND LKP_loss_master_dim.statistical_code1 = EXP_Source.statistical_code1_lkp AND LKP_loss_master_dim.statistical_code2 = EXP_Source.statistical_code2_lkp AND LKP_loss_master_dim.statistical_code3 = EXP_Source.statistical_code3_lkp AND LKP_loss_master_dim.loss_master_cov_code = EXP_Source.loss_master_cov_code_lkp\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tlkp_loss_master_dim_id,\n\trisk_state_prov_code,\n\trisk_zip_code,\n\tterr_code,\n\ttax_loc,\n\tclass_code,\n\texposure,\n\tsub_line_code,\n\tsource_sar_asl,\n\tsource_sar_prdct_line,\n\tsource_sar_sp_use_code,\n\tsource_statistical_line,\n\tvariation_code,\n\tpol_type,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\tstatistical_code1,\n\tstatistical_code2,\n\tstatistical_code3,\n\tloss_master_cov_code\n\tFROM EXP_Values\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE IIF(ISNULL(lkp_loss_master_dim_id),TRUE,FALSE)),\nRTR_Insert_Update_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE IIF(NOT ISNULL(lkp_loss_master_dim_id),TRUE,FALSE)),\nUPD_Update AS (\n\tSELECT\n\tlkp_loss_master_dim_id AS lkp_loss_master_dim_id3, \n\trisk_state_prov_code AS risk_state_prov_code3, \n\trisk_zip_code AS risk_zip_code3, \n\tterr_code AS terr_code3, \n\ttax_loc AS tax_loc3, \n\tclass_code AS class_code3, \n\texposure AS exposure3, \n\tsub_line_code AS sub_line_code3, \n\tsource_sar_asl AS source_sar_asl3, \n\tsource_sar_prdct_line AS source_sar_prdct_line3, \n\tsource_sar_sp_use_code AS source_sar_sp_use_code3, \n\tsource_statistical_line AS source_statistical_line3, \n\tvariation_code AS variation_code3, \n\tpol_type AS pol_type3, \n\tauto_reins_facility AS auto_reins_facility3, \n\tstatistical_brkdwn_line AS statistical_brkdwn_line3, \n\tstatistical_code1 AS statistical_code13, \n\tstatistical_code2 AS statistical_code23, \n\tstatistical_code AS statistical_code33, \n\tloss_master_cov_code AS loss_master_cov_code3\n\tFROM RTR_Insert_Update_UPDATE\n),\nloss_master_dim_Update AS (\n\tMERGE INTO loss_master_dim AS T\n\tUSING UPD_Update AS S\n\tON T.loss_master_dim_id = S.lkp_loss_master_dim_id3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.risk_state_prov_code = S.risk_state_prov_code3, T.risk_zip_code = S.risk_zip_code3, T.terr_code = S.terr_code3, T.tax_loc = S.tax_loc3, T.class_code = S.class_code3, T.exposure = S.exposure3, T.sub_line_code = S.sub_line_code3, T.source_sar_asl = S.source_sar_asl3, T.source_sar_prdct_line = S.source_sar_prdct_line3, T.source_sar_sp_use_code = S.source_sar_sp_use_code3, T.source_statistical_line = S.source_statistical_line3, T.variation_code = S.variation_code3, T.pol_type = S.pol_type3, T.auto_reins_facility = S.auto_reins_facility3, T.statistical_brkdwn_line = S.statistical_brkdwn_line3, T.statistical_code1 = S.statistical_code13, T.statistical_code2 = S.statistical_code23, T.statistical_code3 = S.statistical_code33, T.loss_master_cov_code = S.loss_master_cov_code3\n),\nEXP_Target AS (\n\tSELECT\n\trisk_state_prov_code,\n\trisk_zip_code,\n\tterr_code,\n\ttax_loc,\n\tclass_code,\n\texposure,\n\tsub_line_code,\n\tsource_sar_asl,\n\tsource_sar_prdct_line,\n\tsource_sar_sp_use_code,\n\tsource_statistical_line,\n\tvariation_code,\n\tpol_type,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\tstatistical_code AS statistical_code1,\n\tstatistical_code2,\n\tstatistical_code3,\n\tloss_master_cov_code,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM RTR_Insert_Update_INSERT\n),\nloss_master_dim_Insert AS (\n\tINSERT INTO loss_master_dim\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date, risk_state_prov_code, risk_zip_code, terr_code, tax_loc, class_code, exposure, sub_line_code, source_sar_asl, source_sar_prdct_line, source_sar_sp_use_code, source_statistical_line, variation_code, pol_type, auto_reins_facility, statistical_brkdwn_line, statistical_code1, statistical_code2, statistical_code3, loss_master_cov_code)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tRISK_STATE_PROV_CODE, \n\tRISK_ZIP_CODE, \n\tTERR_CODE, \n\tTAX_LOC, \n\tCLASS_CODE, \n\tEXPOSURE, \n\tSUB_LINE_CODE, \n\tSOURCE_SAR_ASL, \n\tSOURCE_SAR_PRDCT_LINE, \n\tSOURCE_SAR_SP_USE_CODE, \n\tSOURCE_STATISTICAL_LINE, \n\tVARIATION_CODE, \n\tPOL_TYPE, \n\tAUTO_REINS_FACILITY, \n\tSTATISTICAL_BRKDWN_LINE, \n\tSTATISTICAL_CODE1, \n\tSTATISTICAL_CODE2, \n\tSTATISTICAL_CODE3, \n\tLOSS_MASTER_COV_CODE\n\tFROM EXP_Target\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244812"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893190"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542665"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 10:35:10"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 14:24:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_CLAIM"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_CLAIM"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            },
            "WHERECLAUSE": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}