{
    "name": "s_m_POL_DW_LOAD_DCT_CWO_ClawBack_Update_Amounts_To_Factor_Rounding_Issues",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_DCT_CWO_ClawBack_Update_Amounts_To_Fac_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction AS (\n\tselect pol.pol_num, pt.PremiumTransactionEffectiveDate, pt.PremiumTransactionID, pt.PremiumTransactionAmount,pt.AgencyActualCommissionRate,pt.ReasonAmendedCode, \r\n\tROW_NUMBER() over (partition by pol.pol_num, PremiumTransactionEffectiveDate, pt.AgencyActualCommissionRate, pt.ReasonAmendedCode order by pol.pol_num,PremiumTransactionEffectiveDate, pt.ReasonAmendedCode, abs(pt.PremiumTransactionAmount) desc, pt.PremiumTransactionID desc) Num,\r\n\tROW_NUMBER() over (partition by pol.pol_num, PremiumTransactionEffectiveDate, pt.ReasonAmendedCode order by pol.pol_num,PremiumTransactionEffectiveDate, pt.ReasonAmendedCode, abs(pt.PremiumTransactionAmount) desc, pt.PremiumTransactionID desc) NumPolicyLevel,\r\n\tSUM(case when pt.ReasonAmendedCode='CWO' then PremiumTransactionAmount else 0 end) over (partition by pol.pol_num, PremiumTransactionEffectiveDate, pt.AgencyActualCommissionRate) as TotalCWOPT,\r\n\tSUM(case when pt.ReasonAmendedCode='CWO' then PremiumTransactionAmount else 0 end) over (partition by pol.pol_num,PremiumTransactionEffectiveDate ) as TotalCWOPTPolicyLevel,\r\n\tSUM(case when pt.ReasonAmendedCode='Claw Back' then PremiumTransactionAmount else 0 end) over (partition by pol.pol_num,PremiumTransactionEffectiveDate,  pt.AgencyActualCommissionRate) as TotalClawBackPT,\r\n\tSUM(case when pt.ReasonAmendedCode='Claw Back' then PremiumTransactionAmount else 0 end) over (partition by pol.pol_num,PremiumTransactionEffectiveDate) as TotalClawBackPTPolicyLevel,\r\n\tpol.pol_eff_date, pol.pol_exp_date\r\n\tfrom PremiumTransaction pt\r\n\tinner join RatingCoverage rc on rc.RatingCoverageAKID = pt.RatingCoverageAKId and rc.EffectiveDate = pt.EffectiveDate\r\n\tinner join PolicyCoverage pc on pc.PolicyCoverageAKID = rc.PolicyCoverageAKID and pc.CurrentSnapshotFlag = 1\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol on pol.pol_ak_id = pc.PolicyAKID and pol.crrnt_snpsht_flag = 1\r\n\twhere pt.ReasonAmendedCode in ('CWO', 'Claw Back')\r\n\tand pt.AuditID=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n),\nLKP_CWOCLAW AS (\n\tSELECT\n\tCWOAmount,\n\tAuthorizedAmount,\n\ti_pol_eff_date,\n\ti_pol_exp_date,\n\tPolicyReference,\n\tCommissionPercent,\n\tAuthorizationDate,\n\tPolicyTermEffectiveDate,\n\tPolicyTermExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tCWOAmount,\n\t\t\tAuthorizedAmount,\n\t\t\ti_pol_eff_date,\n\t\t\ti_pol_exp_date,\n\t\t\tPolicyReference,\n\t\t\tCommissionPercent,\n\t\t\tAuthorizationDate,\n\t\t\tPolicyTermEffectiveDate,\n\t\t\tPolicyTermExpirationDate\n\t\tFROM WorkDCBILCommissionCWOClawBack\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyReference,CommissionPercent,AuthorizationDate,PolicyTermEffectiveDate,PolicyTermExpirationDate ORDER BY CWOAmount) = 1\n),\nLKP_CWOCLAW_PolicyLevel AS (\n\tSELECT\n\tCWOAmount,\n\tAuthorizedAmount,\n\tPolicyReference,\n\tPolicyTermEffectiveDate,\n\tPolicyTermExpirationDate,\n\tAuthorizationDate\n\tFROM (\n\t\tSELECT SUM(WorkDCBILCommissionCWOClawBack.CWOAmount) as CWOAmount, SUM(WorkDCBILCommissionCWOClawBack.AuthorizedAmount) as AuthorizedAmount, WorkDCBILCommissionCWOClawBack.PolicyReference as PolicyReference, WorkDCBILCommissionCWOClawBack.AuthorizationDate as AuthorizationDate,\r\n\t\tPolicyTermEffectiveDate as PolicyTermEffectiveDate  , PolicyTermExpirationDate as PolicyTermExpirationDate \r\n\t\tFROM WorkDCBILCommissionCWOClawBack\r\n\t\tgroup by PolicyReference , AuthorizationDate,PolicyTermEffectiveDate ,PolicyTermExpirationDate\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyReference,PolicyTermEffectiveDate,PolicyTermExpirationDate,AuthorizationDate ORDER BY CWOAmount) = 1\n),\nLKP_IsPolicy AS (\n\tSELECT\n\tpol_num,\n\tpol_eff_date,\n\tpol_exp_date\n\tFROM (\n\t\tselect distinct pol.pol_num as pol_num , DCBIL2.PolicyTermEffectiveDate as pol_eff_date, DCBIL2.PolicyTermExpirationDate as pol_exp_date\r\n\t\tfrom PremiumTransaction pt inner join RatingCoverage rc on rc.RatingCoverageAKID = pt.RatingCoverageAKId and rc.EffectiveDate = pt.EffectiveDate\r\n\t\tinner join PolicyCoverage pc on pc.PolicyCoverageAKID = rc.PolicyCoverageAKID and pc.CurrentSnapshotFlag = 1\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol on pol.pol_ak_id = pc.PolicyAKID and pol.crrnt_snpsht_flag = 1\r\n\t\tleft join @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCBILCommissionCWOClawBack DCBIL on DCBIL.PolicyReference=pol.pol_num and DCBIL.CommissionPercent=PT.AgencyActualCommissionRate\r\n\t\tand DCBIL.PolicyTermEffectiveDate = pol.pol_eff_date and DCBIL.PolicyTermExpirationDate=pol.pol_exp_date\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCBILCommissionCWOClawBack DCBIL2 \r\n\t\ton DCBIL2.PolicyReference=pol.pol_num and DCBIL2.PolicyTermEffectiveDate = pol.pol_eff_date and DCBIL2.PolicyTermExpirationDate=pol.pol_exp_date\r\n\t\twhere pt.ReasonAmendedCode not in ('CWO','Claw Back')\r\n\t\tand pt.SourceSystemID = 'DCT'\r\n\t\tand DCBIL.WorkDCBILCommissionCWOClawBackId is null\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_num,pol_eff_date,pol_exp_date ORDER BY pol_num) = 1\n),\nEXP_IsPolicyLevel AS (\n\tSELECT\n\tSQ_PremiumTransaction.pol_num,\n\tSQ_PremiumTransaction.PremiumTransactionEffectiveDate,\n\tSQ_PremiumTransaction.PremiumTransactionID,\n\tSQ_PremiumTransaction.PremiumTransactionAmount,\n\tSQ_PremiumTransaction.AgencyActualCommissionRate,\n\tSQ_PremiumTransaction.ReasonAmendedCode,\n\tSQ_PremiumTransaction.Num,\n\tSQ_PremiumTransaction.NumPolicyLevel,\n\tSQ_PremiumTransaction.TotalCWOPT,\n\tSQ_PremiumTransaction.TotalCWOPTPolicyLevel,\n\tSQ_PremiumTransaction.TotalClawBackPT,\n\tSQ_PremiumTransaction.TotalClawBackPTPolicyLevel,\n\tLKP_IsPolicy.pol_num AS lkp_pol_num_IsPolicy,\n\tLKP_CWOCLAW.CWOAmount AS lkp_CWOAmount,\n\tLKP_CWOCLAW.AuthorizedAmount AS lkp_AuthorizedAmount,\n\tLKP_CWOCLAW_PolicyLevel.CWOAmount AS lkp_CWOAmount_Policy,\n\tLKP_CWOCLAW_PolicyLevel.AuthorizedAmount AS lkp_AuthorizedAmount_Policy,\n\t-- *INF*: IIF(ISNULL(lkp_pol_num_IsPolicy),0,1)\n\tIFF(lkp_pol_num_IsPolicy IS NULL, 0, 1) AS IsPolicy,\n\t-- *INF*: IIF(ISNULL(lkp_CWOAmount) AND ISNULL(lkp_CWOAmount_Policy), 1, 0)\n\tIFF(lkp_CWOAmount IS NULL AND lkp_CWOAmount_Policy IS NULL, 1, 0) AS NoCWO\n\tFROM SQ_PremiumTransaction\n\tLEFT JOIN LKP_CWOCLAW\n\tON LKP_CWOCLAW.PolicyReference = SQ_PremiumTransaction.pol_num AND LKP_CWOCLAW.CommissionPercent = SQ_PremiumTransaction.AgencyActualCommissionRate AND LKP_CWOCLAW.AuthorizationDate = SQ_PremiumTransaction.PremiumTransactionEffectiveDate AND LKP_CWOCLAW.PolicyTermEffectiveDate = SQ_PremiumTransaction.pol_eff_date AND LKP_CWOCLAW.PolicyTermExpirationDate = SQ_PremiumTransaction.pol_exp_date\n\tLEFT JOIN LKP_CWOCLAW_PolicyLevel\n\tON LKP_CWOCLAW_PolicyLevel.PolicyReference = SQ_PremiumTransaction.pol_num AND LKP_CWOCLAW_PolicyLevel.PolicyTermEffectiveDate = SQ_PremiumTransaction.pol_eff_date AND LKP_CWOCLAW_PolicyLevel.PolicyTermExpirationDate = SQ_PremiumTransaction.pol_exp_date AND LKP_CWOCLAW_PolicyLevel.AuthorizationDate = SQ_PremiumTransaction.PremiumTransactionEffectiveDate\n\tLEFT JOIN LKP_IsPolicy\n\tON LKP_IsPolicy.pol_num = SQ_PremiumTransaction.pol_num AND LKP_IsPolicy.pol_eff_date = SQ_PremiumTransaction.pol_eff_date AND LKP_IsPolicy.pol_exp_date = SQ_PremiumTransaction.pol_exp_date\n),\nFIL_MaxPremiumTransactionAmount AS (\n\tSELECT\n\tpol_num, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionID, \n\tPremiumTransactionAmount, \n\tAgencyActualCommissionRate, \n\tReasonAmendedCode, \n\tNum, \n\tNumPolicyLevel, \n\tTotalCWOPT, \n\tTotalCWOPTPolicyLevel, \n\tTotalClawBackPT, \n\tTotalClawBackPTPolicyLevel, \n\tlkp_pol_num_IsPolicy, \n\tlkp_CWOAmount, \n\tlkp_AuthorizedAmount, \n\tlkp_CWOAmount_Policy, \n\tlkp_AuthorizedAmount_Policy, \n\tIsPolicy, \n\tNoCWO\n\tFROM EXP_IsPolicyLevel\n\tWHERE ((IsPolicy=1 AND NumPolicyLevel=1 AND NOT ISNULL(lkp_CWOAmount_Policy)) OR(IsPolicy=0 AND Num=1AND NOT ISNULL(lkp_CWOAmount))) AND NoCWO=0\n),\nEXP_CWOAmountCal AS (\n\tSELECT\n\tpol_num AS i_pol_num,\n\tPremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tPremiumTransactionAmount AS i_PremiumTransactionAmount,\n\tAgencyActualCommissionRate AS i_AgencyActualCommissionRate,\n\tReasonAmendedCode AS i_ReasonAmendedCode,\n\tNum AS i_Num,\n\tNumPolicyLevel AS i_NumPolicyLevel,\n\tTotalCWOPT AS i_TotalCWOPT,\n\tTotalCWOPTPolicyLevel AS i_TotalCWOPTPolicyLevel,\n\tTotalClawBackPT AS i_TotalClawBackPT,\n\tTotalClawBackPTPolicyLevel AS i_TotalClawBackPTPolicyLevel,\n\tlkp_CWOAmount AS i_CWOAmount,\n\tlkp_AuthorizedAmount AS i_AuthorizedAmount,\n\tlkp_CWOAmount_Policy AS i_CWOAmount_Policy,\n\tlkp_AuthorizedAmount_Policy AS i_AuthorizedAmount_Policy,\n\tIsPolicy AS i_IsPolicy,\n\t-- *INF*: IIF(i_IsPolicy=1, i_CWOAmount_Policy-i_TotalCWOPTPolicyLevel,i_CWOAmount-i_TotalCWOPT)\n\tIFF(i_IsPolicy = 1, i_CWOAmount_Policy - i_TotalCWOPTPolicyLevel, i_CWOAmount - i_TotalCWOPT) AS v_CWOAmountGap,\n\t-- *INF*: IIF(i_IsPolicy=1,i_AuthorizedAmount_Policy-i_TotalClawBackPTPolicyLevel,i_AuthorizedAmount-i_TotalClawBackPT)\n\tIFF(i_IsPolicy = 1, i_AuthorizedAmount_Policy - i_TotalClawBackPTPolicyLevel, i_AuthorizedAmount - i_TotalClawBackPT) AS v_ClawBackAmountGap,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: IIF(i_ReasonAmendedCode='CWO',i_PremiumTransactionAmount+v_CWOAmountGap,i_PremiumTransactionAmount+v_ClawBackAmountGap)\n\tIFF(i_ReasonAmendedCode = 'CWO', i_PremiumTransactionAmount + v_CWOAmountGap, i_PremiumTransactionAmount + v_ClawBackAmountGap) AS o_PremiumTransactionAmount\n\tFROM FIL_MaxPremiumTransactionAmount\n),\nUPD_Update AS (\n\tSELECT\n\to_PremiumTransactionID, \n\to_PremiumTransactionAmount\n\tFROM EXP_CWOAmountCal\n),\nPremiumTransaction_Update AS (\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_Update AS S\n\tON T.PremiumTransactionID = S.o_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.PremiumTransactionAmount = S.o_PremiumTransactionAmount\n\n\t++------------ POST SQL ----------\n\tUpdate PremiumTransaction set AgencyActualCommissionRate=0 where auditID=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and ReasonAmendedCode = 'CWO'\n\t-------------------------------++\n\n\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}