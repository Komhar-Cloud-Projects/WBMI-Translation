{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBCAStateStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBCAStateStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_CA_State AS (\n\tWITH cte_WBCAState(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CA_StateId, \r\n\tX.WB_CA_StateId, \r\n\tX.SessionId, \r\n\tX.ReinsuranceApplies, \r\n\tX.PageHasBeenVisited, \r\n\tX.RejectionDate, \r\n\tX.AdditionalLimitKS, \r\n\tX.AdditionalLimitKY, \r\n\tX.AdditionalLimitMN, \r\n\tX.PipWorkComp, \r\n\tX.AdditionalLimitIndicator, \r\n\tX.LocationSelectForTerritory \r\n\tFROM\r\n\tWB_CA_State X\r\n\tinner join\r\n\tcte_WBCAState Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tCA_StateId,\n\tWB_CA_StateId,\n\tSessionId,\n\tReinsuranceApplies,\n\t-- *INF*: DECODE(ReinsuranceApplies,'T',1,'F',0,NULL)\n\tDECODE(\n\t    ReinsuranceApplies,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS ReinsuranceApplies_out,\n\tPageHasBeenVisited,\n\t-- *INF*: DECODE(PageHasBeenVisited,'T',1,'F',0,NULL)\n\tDECODE(\n\t    PageHasBeenVisited,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS PageHasBeenVisited_out,\n\tRejectionDate,\n\tAdditionalLimitKS,\n\tAdditionalLimitKY,\n\tAdditionalLimitMN,\n\tPipWorkComp,\n\t-- *INF*: DECODE(PipWorkComp,'T',1,'F',0,NULL)\n\tDECODE(\n\t    PipWorkComp,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS PipWorkComp_out,\n\tAdditionalLimitIndicator,\n\t-- *INF*: DECODE(AdditionalLimitIndicator,'T',1,'F',0,NULL)\n\tDECODE(\n\t    AdditionalLimitIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS AdditionalLimitIndicator_out,\n\tLocationSelectForTerritory\n\tFROM SQ_WB_CA_State\n),\nWBCAStateStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCAStateStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBCAStateStaging\n\t(ExtractDate, SourceSystemId, CA_StateId, WB_CA_StateId, SessionId, ReinsuranceApplies, PageHasBeenVisited, RejectionDate, AdditionalLimitKS, AdditionalLimitKY, AdditionalLimitMN, PipWorkComp, AdditionalLimitIndicator, LocationSelectForTerritory)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCA_STATEID, \n\tWB_CA_STATEID, \n\tSESSIONID, \n\tReinsuranceApplies_out AS REINSURANCEAPPLIES, \n\tPageHasBeenVisited_out AS PAGEHASBEENVISITED, \n\tREJECTIONDATE, \n\tADDITIONALLIMITKS, \n\tADDITIONALLIMITKY, \n\tADDITIONALLIMITMN, \n\tPipWorkComp_out AS PIPWORKCOMP, \n\tAdditionalLimitIndicator_out AS ADDITIONALLIMITINDICATOR, \n\tLOCATIONSELECTFORTERRITORY\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}