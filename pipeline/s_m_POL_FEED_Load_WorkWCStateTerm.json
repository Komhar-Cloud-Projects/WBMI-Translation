{
    "name": "s_m_POL_FEED_Load_WorkWCStateTerm",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WorkWCStateTerm",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_WC_StateTerm AS (\n\tSELECT\r\n\t \r\n\tDT.HistoryID,\r\n\tDT.Type TransactionType,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tDWS.WC_StateId,\r\n\tDWST.WC_StateTermId,\r\n\tDWSTC.WC_StateTermCoverageId,\r\n\tDWS.State,WWS.EmployeeLeasing,\r\n\tWWS.EmployeeLeasingRatingOption,\r\n\tWWS.PreviousRateEffectiveDate,\r\n\tWWS.RateEffectiveDate,\r\n\tDWST.PeriodEndDate,\r\n\tDWST.PeriodStartDate,\r\n\tDWST.PeriodTerm,\r\n\tDWST.TermType,\r\n\tWWST.RiskID IntrastateRiskid,\r\n\tDWSTC.PendingRateChangeEffectiveDate,\r\n\tDWST.TotalStandardPremium,\r\n\tWWS.UnemploymentIDNumber,\r\n\tDM.Value ExperienceModificationFactorMeritRatingFactor,\r\n\tDWST.ExperienceModType,\r\n\tDM.Value ModifierValue,\r\n\tDWST.ExperienceModEffectiveDate,\r\n\tWWS.WCStateAddedThisTransaction,\r\n\tWWS.WCStateAddedThisTransactionState,\r\n\tJA.USLAndHFormsPercentage,\r\n\tWWS.EmployersLiabilityCoverageEndorsementStateListExcludingOH,\r\n\tWWS.PremiumDiscountLevel1Factor,\r\n\tWWS.PremiumDiscountLevel2Factor,\r\n\tWWS.PremiumDiscountLevel3Factor,\r\n\tWWS.PremiumDiscountLevel4Factor,\r\n\tWWSD.PremiumDiscountAveragePercentageDiscount,\r\n\tWWS.BasisOfAuditNonComplianceCharge,\r\n\tWWS.AuditNoncomplianceChargeMultiplier,\r\n\tCASE WHEN DWS.Deleted=1 then '1' else '0' END DeletedStateFlag\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy DP with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton DP.SessionId=DL.SessionId\r\n\tand DP.PolicyId=DL.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DP.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DS.SessionId=DT.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_State DWS with(nolock)\r\n\ton DL.LineId=DWS.LineId\r\n\tand DL.SessionId=DWS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_WC_State WWS with(nolock)\r\n\ton DWS.SessionId=WWS.SessionId\r\n\tand DWS.WC_StateId=WWS.WC_StateId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_StateDefault DWSD with(nolock)\r\n\ton DWS.WC_StateId=DWSD.WC_StateId\r\n\tand DWS.SessionId=DWSD.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_WC_StateDefault WWSD with(Nolock)\r\n\ton DWSD.WC_StateDefaultId=WWSD.WC_StateDefaultId\r\n\tand DWSD.SessionId=WWSD.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_StateTerm DWST with(nolock)\r\n\ton DWS.WC_StateId=DWST.WC_StateId\r\n\tand DWS.SessionId=DWST.SessionId\r\n\tLeft Join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Modifier DM with(nolock)\r\n\ton DWST.Sessionid=DM.Sessionid\r\n\tand  DWST.WC_StateTermId=DM.Objectid\r\n\tand DM.ObjectName='DC_WC_StateTerm'\r\n\tand DM.Scope='LineStateTerm'\r\n\tand DM.Type = 'ExperienceMod'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_WC_StateTerm WWST with(nolock)\r\n\ton DWST.WC_StateTermId=WWST.WC_StateTermId\r\n\tand DWST.SessionId=WWST.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_StateTermCoverage DWSTC with(nolock)\r\n\ton DWST.WC_StateTermId=DWSTC.WC_StateTermId\r\n\tand DWST.SessionId=DWSTC.SessionId\r\n\t\r\n\tOUTER APPLY\r\n\t(\r\n\tselect \r\n\tdistinct \r\n\tWP.PolicyNumber,\r\n\tWP.PolicyVersionFormatted,\r\n\tP.Type ParentCoverageType,\r\n\tP.Coverageid ParentCoverageid,\r\n\tC.Type ChildCoverageType,\r\n\tC.Coverageid ChildCoverageid,\r\n\tR.Description,\r\n\tDL.StateProv,\r\n\tisnull(cast (WWS.USLAndHFormsPercentage as varchar(4)),'') as USLAndHFormsPercentage\r\n\tFROM \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage P\r\n\ton WP.SessionId=P.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage C\r\n\ton P.SessionId=C.SessionId\r\n\tand P.CoverageId=C.ObjectId\r\n\tand C.ObjectName='DC_Coverage'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_Risk R\r\n\ton P.SessionId=R.SessionId\r\n\tand P.ObjectId=R.WC_RiskId\r\n\tand P.ObjectName='DC_WC_Risk'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLA\r\n\ton R.SessionId=DLA.SessionId\r\n\tand R.WC_LocationId=DLA.ObjectId\r\n\tand DLA.ObjectName='DC_WC_Location'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Location DL\r\n\ton DLA.SessionId=DL.SessionId\r\n\tand DLA.LocationId=DL.LocationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_WC_State DWS\r\n\ton Dl.SessionId=DWS.SessionId\r\n\tand DL.StateProv=DWS.State\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_WC_State WWS\r\n\ton DWS.SessionId=WWS.SessionId\r\n\tand DWS.WC_StateId=WWS.WC_StateId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Location DLC\r\n\ton WP.SessionId=DLC.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_LocationAssociation DLCA\r\n\ton DLC.SessionId=DLCA.SessionId\r\n\tand DLC.LocationId=DLCA.LocationId\r\n\tand DLCA.LocationAssociationType='Location'\r\n\tWHERE\r\n\tC.type='USLandH'\r\n\tand WP.SessionId = DP.SessionId and DWS.WC_StateId=DWST.WC_StateId\r\n\t) JA\r\n\t\r\n\tWHERE\r\n\tDL.Type='WorkersCompensation'\r\n\tand DS.Purpose='Onset'\r\n\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand DT.State='Committed'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tHistoryID,\n\tTransactionType,\n\tPurpose,\n\tSessionId,\n\tWC_StateId,\n\tWC_StateTermId,\n\tWC_StateTermCoverageId,\n\tState,\n\tEmployeeLeasing,\n\tEmployeeLeasingRatingOption,\n\tPreviousRateEffectiveDate,\n\tRateEffectiveDate,\n\tPeriodEndDate,\n\tPeriodStartDate,\n\tPeriodTerm,\n\tTermType,\n\tIntrastateRiskID,\n\tPendingRateChangeEffectiveDate,\n\tTotalStandardPremium,\n\tUnemploymentIDNumber,\n\tExperienceModificationFactorMeritRatingFactor,\n\tExperienceModType,\n\tModifierValue,\n\tExperienceModEffectiveDate,\n\tWCStateAddedThisTransaction,\n\tWCStateAddedThisTransactionState,\n\tUSLAndHFormsPercentage,\n\tEmployersLiabilityCoverageEndorsementStateListExcludingOH,\n\tPremiumDiscountLevel1Factor,\n\tPremiumDiscountLevel2Factor,\n\tPremiumDiscountLevel3Factor,\n\tPremiumDiscountLevel4Factor,\n\tPremiumDiscountAveragePercentageDiscount,\n\tBasisOfAuditNonComplianceCharge,\n\tAuditNoncomplianceChargeMultiplier,\n\tDeletedStateFlag\n\tFROM SQ_DC_WC_StateTerm\n),\nLKP_LatestSession AS (\n\tSELECT\n\tSessionId,\n\tPurpose,\n\tHistoryID\n\tFROM (\n\t\tSelect distinct DT.HistoryID AS HistoryID,\r\n\t\tDS.Purpose AS Purpose,\r\n\t\tMax(DS.Sessionid) AS Sessionid\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\t\ton DT.Sessionid=DS.Sessionid\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\t\ton DT.Sessionid=DL.Sessionid\r\n\t\twhere DL.Type='WorkersCompensation'\r\n\t\tand DS.Purpose='Onset'\r\n\t\tand DT.State='Committed'\r\n\t\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\t\tgroup by DT.HistoryID,DS.Purpose\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,Purpose,HistoryID ORDER BY SessionId) = 1\n),\nLKP_WorkWCTrackHistory AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditid,\n\tPolicyKey,\n\tHistoryID,\n\tPurpose\n\tFROM (\n\t\tSELECT \r\n\t\tWorkWCTrackHistory.WCTrackHistoryID as WCTrackHistoryID, \r\n\t\tWorkWCTrackHistory.Auditid as Auditid, \r\n\t\tWorkWCTrackHistory.HistoryID as HistoryID, \r\n\t\tWorkWCTrackHistory.Purpose as Purpose ,\r\n\t\tWorkWCTrackHistory.PolicyKey as PolicyKey\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory\r\n\t\torder by WorkWCTrackHistory.HistoryID,WorkWCTrackHistory.Purpose,WorkWCTrackHistory.Auditid ASC\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY HistoryID,Purpose ORDER BY WCTrackHistoryID) = 1\n),\nEXP_RecordFlagging AS (\n\tSELECT\n\tLKP_WorkWCTrackHistory.WCTrackHistoryID AS lkp_WCTrackHistoryID,\n\tLKP_WorkWCTrackHistory.Auditid AS lkp_Auditid,\n\tLKP_WorkWCTrackHistory.PolicyKey AS lkp_PolicyKey,\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\t-- *INF*: IIF(lkp_Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and (NOT ISNULL(LKP_SessionId)),'1','0')\n\tIFF(lkp_Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and (LKP_SessionId IS NOT NULL), '1', '0') AS FilterFlag,\n\tEXP_SRCDataCollect.TransactionType,\n\tEXP_SRCDataCollect.WC_StateId,\n\tEXP_SRCDataCollect.WC_StateTermId,\n\tEXP_SRCDataCollect.WC_StateTermCoverageId,\n\tEXP_SRCDataCollect.State,\n\tEXP_SRCDataCollect.EmployeeLeasing,\n\tEXP_SRCDataCollect.EmployeeLeasingRatingOption,\n\tEXP_SRCDataCollect.PreviousRateEffectiveDate,\n\tEXP_SRCDataCollect.RateEffectiveDate,\n\tEXP_SRCDataCollect.PeriodEndDate,\n\tEXP_SRCDataCollect.PeriodStartDate,\n\tEXP_SRCDataCollect.PeriodTerm,\n\tEXP_SRCDataCollect.TermType,\n\tEXP_SRCDataCollect.IntrastateRiskID,\n\tEXP_SRCDataCollect.PendingRateChangeEffectiveDate,\n\tEXP_SRCDataCollect.TotalStandardPremium,\n\tEXP_SRCDataCollect.UnemploymentIDNumber,\n\tEXP_SRCDataCollect.ExperienceModificationFactorMeritRatingFactor,\n\tEXP_SRCDataCollect.ExperienceModType,\n\tEXP_SRCDataCollect.ModifierValue,\n\tEXP_SRCDataCollect.ExperienceModEffectiveDate,\n\tEXP_SRCDataCollect.WCStateAddedThisTransaction,\n\tEXP_SRCDataCollect.WCStateAddedThisTransactionState,\n\tLKP_LatestSession.SessionId AS LKP_SessionId,\n\tEXP_SRCDataCollect.USLAndHFormsPercentage,\n\tEXP_SRCDataCollect.EmployersLiabilityCoverageEndorsementStateListExcludingOH,\n\tEXP_SRCDataCollect.PremiumDiscountLevel1Factor,\n\tEXP_SRCDataCollect.PremiumDiscountLevel2Factor,\n\tEXP_SRCDataCollect.PremiumDiscountLevel3Factor,\n\tEXP_SRCDataCollect.PremiumDiscountLevel4Factor,\n\tEXP_SRCDataCollect.PremiumDiscountAveragePercentageDiscount,\n\tEXP_SRCDataCollect.BasisOfAuditNonComplianceCharge,\n\tEXP_SRCDataCollect.AuditNoncomplianceChargeMultiplier,\n\tEXP_SRCDataCollect.DeletedStateFlag\n\tFROM EXP_SRCDataCollect\n\tLEFT JOIN LKP_LatestSession\n\tON LKP_LatestSession.SessionId = EXP_SRCDataCollect.SessionId AND LKP_LatestSession.Purpose = EXP_SRCDataCollect.Purpose AND LKP_LatestSession.HistoryID = EXP_SRCDataCollect.HistoryID\n\tLEFT JOIN LKP_WorkWCTrackHistory\n\tON LKP_WorkWCTrackHistory.HistoryID = EXP_SRCDataCollect.HistoryID AND LKP_WorkWCTrackHistory.Purpose = EXP_SRCDataCollect.Purpose\n),\nFIL_ExcludeSubmittedRecords AS (\n\tSELECT\n\tlkp_WCTrackHistoryID AS WCTrackHistoryID, \n\tlkp_PolicyKey AS PolicyKey, \n\tExtractDate, \n\tAuditid, \n\tFilterFlag, \n\tTransactionType, \n\tWC_StateId, \n\tWC_StateTermId, \n\tWC_StateTermCoverageId, \n\tState, \n\tEmployeeLeasing, \n\tEmployeeLeasingRatingOption, \n\tPreviousRateEffectiveDate, \n\tRateEffectiveDate, \n\tPeriodEndDate, \n\tPeriodStartDate, \n\tPeriodTerm, \n\tTermType, \n\tIntrastateRiskID, \n\tPendingRateChangeEffectiveDate, \n\tTotalStandardPremium, \n\tUnemploymentIDNumber, \n\tExperienceModificationFactorMeritRatingFactor, \n\tExperienceModType, \n\tModifierValue, \n\tExperienceModEffectiveDate, \n\tWCStateAddedThisTransaction, \n\tWCStateAddedThisTransactionState, \n\tUSLAndHFormsPercentage, \n\tEmployersLiabilityCoverageEndorsementStateListExcludingOH, \n\tPremiumDiscountLevel1Factor, \n\tPremiumDiscountLevel2Factor, \n\tPremiumDiscountLevel3Factor, \n\tPremiumDiscountLevel4Factor, \n\tPremiumDiscountAveragePercentageDiscount, \n\tBasisOfAuditNonComplianceCharge, \n\tAuditNoncomplianceChargeMultiplier, \n\tDeletedStateFlag\n\tFROM EXP_RecordFlagging\n\tWHERE FilterFlag='1'\n),\nEXP_NewTxns AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tPolicyKey,\n\tExtractDate,\n\tAuditid,\n\tFilterFlag,\n\tTransactionType,\n\tWC_StateId,\n\tWC_StateTermId,\n\tWC_StateTermCoverageId,\n\tState,\n\tEmployeeLeasing,\n\tEmployeeLeasingRatingOption,\n\tPreviousRateEffectiveDate,\n\tRateEffectiveDate,\n\tPeriodEndDate,\n\tPeriodStartDate,\n\tPeriodTerm,\n\tTermType,\n\tIntrastateRiskID,\n\tPendingRateChangeEffectiveDate,\n\tTotalStandardPremium,\n\tUnemploymentIDNumber,\n\tExperienceModificationFactorMeritRatingFactor,\n\tExperienceModType,\n\tModifierValue,\n\tExperienceModEffectiveDate,\n\tWCStateAddedThisTransaction,\n\tWCStateAddedThisTransactionState,\n\tUSLAndHFormsPercentage,\n\tEmployersLiabilityCoverageEndorsementStateListExcludingOH,\n\tPremiumDiscountLevel1Factor,\n\tPremiumDiscountLevel2Factor,\n\tPremiumDiscountLevel3Factor,\n\tPremiumDiscountLevel4Factor,\n\tPremiumDiscountAveragePercentageDiscount,\n\tBasisOfAuditNonComplianceCharge,\n\tAuditNoncomplianceChargeMultiplier,\n\tDeletedStateFlag\n\tFROM FIL_ExcludeSubmittedRecords\n),\nSQ_DC_WC_State_StateFlag AS (\n\tSelect distinct D.PolKey,DT.HistoryID,St.State ListedState,\r\n\tcase when St.Deleted=1 then '1' Else '0' End as DeletedStateFlag\r\n\tfrom DC_WC_State ST\t\r\n\tinner  join DC_Transaction DT\r\n\ton ST.SessionId=DT.SessionId\r\n\tinner join WB_Policy P\r\n\ton P.SessionId=DT.SessionId\r\n\tinner JOIN\r\n\t(Select distinct WP.PolicyNumber+WP.PolicyVersionFormatted PolKey from WB_Policy WP\r\n\tinner join DC_Transaction T with(nolock)\r\n\ton WP.SessionId=T.SessionId\r\n\tinner join DC_Line DL with(nolock)\r\n\ton T.Sessionid=DL.Sessionid\r\n\tinner join DC_Session S\r\n\ton WP.SessionID=S.SessionID\r\n\tand S.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand T.State='Committed'\r\n\tand DL.Type='WorkersCompensation'\r\n\tand S.Purpose='Onset'\r\n\tand T.State='Committed'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_STATE}\r\n\t) D\r\n\ton D.PolKey=(P.PolicyNumber+P.PolicyVersionFormatted)\r\n\twhere DT.State='Committed'\n),\nEXP_StateFlag AS (\n\tSELECT\n\tPolKey AS PolKey_StateFlag,\n\tHistoryID AS HistoryID_StateFlag,\n\tListedState AS State_StateFlag,\n\t-- *INF*: LTRIM(RTRIM(State_StateFlag))\n\tLTRIM(RTRIM(State_StateFlag)) AS o_State_StateFlag,\n\tDeletedStateFlag AS Deleted_StateFlag\n\tFROM SQ_DC_WC_State_StateFlag\n),\nLKP_TrackHistory AS (\n\tSELECT\n\tHistoryID,\n\tPolicyKey\n\tFROM (\n\t\tSelect distinct HistoryID as HistoryID, PolicyKey as PolicyKey  from WorkWCTrackHistory\r\n\t\twhere AuditID<>@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\torder by 2,1--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY HistoryID,PolicyKey ORDER BY HistoryID DESC) = 1\n),\nEXP_Filter AS (\n\tSELECT\n\tEXP_StateFlag.PolKey_StateFlag,\n\tEXP_StateFlag.HistoryID_StateFlag,\n\tEXP_StateFlag.o_State_StateFlag AS State_StateFlag,\n\tEXP_StateFlag.Deleted_StateFlag,\n\tLKP_TrackHistory.HistoryID AS HistoryID_LKP,\n\tLKP_TrackHistory.PolicyKey AS PolicyKey_LKP,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(HistoryID_LKP))),'NEW','EXISTS')\n\tIFF(LTRIM(RTRIM(HistoryID_LKP)) IS NULL, 'NEW', 'EXISTS') AS FilterFlag\n\tFROM EXP_StateFlag\n\tLEFT JOIN LKP_TrackHistory\n\tON LKP_TrackHistory.HistoryID = EXP_StateFlag.HistoryID_StateFlag AND LKP_TrackHistory.PolicyKey = EXP_StateFlag.PolKey_StateFlag\n),\nFIL_NewTxns AS (\n\tSELECT\n\tPolKey_StateFlag, \n\tHistoryID_StateFlag, \n\tState_StateFlag, \n\tDeleted_StateFlag, \n\tFilterFlag\n\tFROM EXP_Filter\n\tWHERE LTRIM(RTRIM(FilterFlag))='EXISTS'\n),\nSRT_MaxHistID AS (\n\tSELECT\n\tPolKey_StateFlag, \n\tHistoryID_StateFlag, \n\tState_StateFlag, \n\tDeleted_StateFlag, \n\tFilterFlag\n\tFROM FIL_NewTxns\n\tORDER BY PolKey_StateFlag ASC, HistoryID_StateFlag DESC\n),\nEXP_ExistingTxns AS (\n\tSELECT\n\tPolKey_StateFlag,\n\tHistoryID_StateFlag,\n\tState_StateFlag,\n\tDeleted_StateFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PolKey_StateFlag<>v_PriorPolicyKey,HistoryID_StateFlag,\r\n\t-- PolKey_StateFlag=v_PriorPolicyKey and HistoryID_StateFlag=v_MaxHistID,v_MaxHistID,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    PolKey_StateFlag <> v_PriorPolicyKey, HistoryID_StateFlag,\n\t    PolKey_StateFlag = v_PriorPolicyKey and HistoryID_StateFlag = v_MaxHistID, v_MaxHistID,\n\t    0\n\t) AS v_MaxHistID,\n\tPolKey_StateFlag AS v_PriorPolicyKey,\n\tHistoryID_StateFlag AS v_PriorHistoryID,\n\t-- *INF*: IIF(HistoryID_StateFlag=v_MaxHistID,'1','0')\n\tIFF(HistoryID_StateFlag = v_MaxHistID, '1', '0') AS v_MaxHistIDFilterFlag,\n\tv_MaxHistIDFilterFlag AS MaxHistIDFilterFlag\n\tFROM SRT_MaxHistID\n),\nFIL_MaxHistID AS (\n\tSELECT\n\tPolKey_StateFlag, \n\tHistoryID_StateFlag, \n\tState_StateFlag, \n\tDeleted_StateFlag, \n\tMaxHistIDFilterFlag\n\tFROM EXP_ExistingTxns\n\tWHERE MaxHistIDFilterFlag='1'\n),\nJNR_DeletedFlag AS (SELECT\n\tEXP_NewTxns.WCTrackHistoryID, \n\tEXP_NewTxns.PolicyKey, \n\tEXP_NewTxns.ExtractDate, \n\tEXP_NewTxns.Auditid, \n\tEXP_NewTxns.FilterFlag, \n\tEXP_NewTxns.TransactionType, \n\tEXP_NewTxns.WC_StateId, \n\tEXP_NewTxns.WC_StateTermId, \n\tEXP_NewTxns.WC_StateTermCoverageId, \n\tEXP_NewTxns.State, \n\tEXP_NewTxns.EmployeeLeasing, \n\tEXP_NewTxns.EmployeeLeasingRatingOption, \n\tEXP_NewTxns.PreviousRateEffectiveDate, \n\tEXP_NewTxns.RateEffectiveDate, \n\tEXP_NewTxns.PeriodEndDate, \n\tEXP_NewTxns.PeriodStartDate, \n\tEXP_NewTxns.PeriodTerm, \n\tEXP_NewTxns.TermType, \n\tEXP_NewTxns.IntrastateRiskID, \n\tEXP_NewTxns.PendingRateChangeEffectiveDate, \n\tEXP_NewTxns.TotalStandardPremium, \n\tEXP_NewTxns.UnemploymentIDNumber, \n\tEXP_NewTxns.ExperienceModificationFactorMeritRatingFactor, \n\tEXP_NewTxns.ExperienceModType, \n\tEXP_NewTxns.ModifierValue, \n\tEXP_NewTxns.ExperienceModEffectiveDate, \n\tEXP_NewTxns.WCStateAddedThisTransaction, \n\tEXP_NewTxns.WCStateAddedThisTransactionState, \n\tEXP_NewTxns.USLAndHFormsPercentage, \n\tEXP_NewTxns.EmployersLiabilityCoverageEndorsementStateListExcludingOH, \n\tEXP_NewTxns.PremiumDiscountLevel1Factor, \n\tEXP_NewTxns.PremiumDiscountLevel2Factor, \n\tEXP_NewTxns.PremiumDiscountLevel3Factor, \n\tEXP_NewTxns.PremiumDiscountLevel4Factor, \n\tEXP_NewTxns.PremiumDiscountAveragePercentageDiscount, \n\tEXP_NewTxns.BasisOfAuditNonComplianceCharge, \n\tEXP_NewTxns.AuditNoncomplianceChargeMultiplier, \n\tEXP_NewTxns.DeletedStateFlag AS StateDeletedFlag, \n\tFIL_MaxHistID.PolKey_StateFlag, \n\tFIL_MaxHistID.HistoryID_StateFlag, \n\tFIL_MaxHistID.State_StateFlag, \n\tFIL_MaxHistID.Deleted_StateFlag\n\tFROM EXP_NewTxns\n\tLEFT OUTER JOIN FIL_MaxHistID\n\tON FIL_MaxHistID.PolKey_StateFlag = EXP_NewTxns.PolicyKey AND FIL_MaxHistID.State_StateFlag = EXP_NewTxns.State\n),\nEXP_Output AS (\n\tSELECT\n\tPolicyKey,\n\tAuditid,\n\tExtractDate,\n\tWCTrackHistoryID,\n\tTransactionType,\n\tWC_StateId,\n\tState,\n\tEmployeeLeasing,\n\tEmployeeLeasingRatingOption,\n\tPreviousRateEffectiveDate,\n\tRateEffectiveDate,\n\tWC_StateTermId,\n\tPeriodStartDate,\n\tPeriodEndDate,\n\tPeriodTerm,\n\tTermType,\n\tIntrastateRiskID,\n\tWC_StateTermCoverageId,\n\tPendingRateChangeEffectiveDate,\n\tTotalStandardPremium,\n\tUnemploymentIDNumber,\n\tExperienceModificationFactorMeritRatingFactor,\n\tExperienceModType,\n\tModifierValue,\n\tExperienceModEffectiveDate,\n\tWCStateAddedThisTransaction,\n\tWCStateAddedThisTransactionState,\n\tUSLAndHFormsPercentage,\n\tEmployersLiabilityCoverageEndorsementStateListExcludingOH,\n\tPremiumDiscountLevel1Factor,\n\tPremiumDiscountLevel2Factor,\n\tPremiumDiscountLevel3Factor,\n\tPremiumDiscountLevel4Factor,\n\tPremiumDiscountAveragePercentageDiscount,\n\tBasisOfAuditNonComplianceCharge,\n\tAuditNoncomplianceChargeMultiplier,\n\tStateDeletedFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(LTRIM(RTRIM(TransactionType)),'Renew','New','Reissue','Rewrite') AND StateDeletedFlag='1', '0',\r\n\t-- NOT ISNULL(State_StateFlag) AND Deleted_StateFlag='0' AND StateDeletedFlag='1','1',\r\n\t-- NOT IN(LTRIM(RTRIM(TransactionType)),'Renew','New','Reissue','Rewrite') AND ISNULL(State_StateFlag) AND StateDeletedFlag='1','1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(TransactionType)) IN ('Renew','New','Reissue','Rewrite') AND StateDeletedFlag = '1', '0',\n\t    State_StateFlag IS NULL AND Deleted_StateFlag = '0' AND StateDeletedFlag =NOT  '1', '1',\n\t    NOT LTRIM(RTRIM(TransactionType)) IN ('Renew','New','Reissue','Rewrite') AND State_StateFlag IS NULL AND StateDeletedFlag = '1', '1',\n\t    '0'\n\t) AS v_StateDeletedFlag,\n\tv_StateDeletedFlag AS o_StateDeletedFlag,\n\tPolKey_StateFlag,\n\tHistoryID_StateFlag,\n\tState_StateFlag,\n\tDeleted_StateFlag\n\tFROM JNR_DeletedFlag\n),\nWorkWCStateTerm AS (\n\tTRUNCATE TABLE WorkWCStateTerm;\n\tINSERT INTO WorkWCStateTerm\n\t(Auditid, ExtractDate, WCTrackHistoryID, WC_StateId, State, EmployeeLeasing, EmployeeLeasingRatingOption, PreviousRateEffectiveDate, RateEffectiveDate, WC_StateTermId, PeriodStartDate, PeriodEndDate, PeriodTerm, TermType, IntrastateRiskid, WC_StateTermCoverageId, PendingRateChangeEffectiveDate, TotalStandardPremium, UnemploymentIDNumber, ExperienceModificationFactorMeritRatingFactor, ExperienceModType, ModifierValue, ExperienceModEffectiveDate, WCStateAddedThisTransaction, WCStateAddedThisTransactionState, USLAndHFormsPercentage, EmployersLiabilityCoverageEndorsementStateListExcludingOH, PremiumDiscountLevel1Factor, PremiumDiscountLevel2Factor, PremiumDiscountLevel3Factor, PremiumDiscountLevel4Factor, PremiumDiscountAveragePercentageDiscount, BasisOfAuditNonComplianceCharge, AuditNoncomplianceChargeMultiplier, StateDeletedFlag)\n\tSELECT \n\tAUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tWC_STATEID, \n\tSTATE, \n\tEMPLOYEELEASING, \n\tEMPLOYEELEASINGRATINGOPTION, \n\tPREVIOUSRATEEFFECTIVEDATE, \n\tRATEEFFECTIVEDATE, \n\tWC_STATETERMID, \n\tPERIODSTARTDATE, \n\tPERIODENDDATE, \n\tPERIODTERM, \n\tTERMTYPE, \n\tIntrastateRiskID AS INTRASTATERISKID, \n\tWC_STATETERMCOVERAGEID, \n\tPENDINGRATECHANGEEFFECTIVEDATE, \n\tTOTALSTANDARDPREMIUM, \n\tUNEMPLOYMENTIDNUMBER, \n\tEXPERIENCEMODIFICATIONFACTORMERITRATINGFACTOR, \n\tEXPERIENCEMODTYPE, \n\tMODIFIERVALUE, \n\tEXPERIENCEMODEFFECTIVEDATE, \n\tWCSTATEADDEDTHISTRANSACTION, \n\tWCSTATEADDEDTHISTRANSACTIONSTATE, \n\tUSLANDHFORMSPERCENTAGE, \n\tEMPLOYERSLIABILITYCOVERAGEENDORSEMENTSTATELISTEXCLUDINGOH, \n\tPREMIUMDISCOUNTLEVEL1FACTOR, \n\tPREMIUMDISCOUNTLEVEL2FACTOR, \n\tPREMIUMDISCOUNTLEVEL3FACTOR, \n\tPREMIUMDISCOUNTLEVEL4FACTOR, \n\tPREMIUMDISCOUNTAVERAGEPERCENTAGEDISCOUNT, \n\tBASISOFAUDITNONCOMPLIANCECHARGE, \n\tAUDITNONCOMPLIANCECHARGEMULTIPLIER, \n\to_StateDeletedFlag AS STATEDELETEDFLAG\n\tFROM EXP_Output\n),\nSRT_RemoveDuplicates AS (\n\tSELECT\n\tAuditid, \n\tWCTrackHistoryID, \n\tState, \n\to_StateDeletedFlag AS StateDeletedFlag\n\tFROM EXP_Output\n\tORDER BY Auditid ASC, WCTrackHistoryID ASC, State ASC, StateDeletedFlag ASC\n),\nEXP_StateOutput AS (\n\tSELECT\n\tAuditid,\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\tWCTrackHistoryID,\n\tState,\n\tStateDeletedFlag\n\tFROM SRT_RemoveDuplicates\n),\nWorkWCTrackHistoryState AS (\n\tINSERT INTO WorkWCTrackHistoryState\n\t(Auditid, ExtractDate, WCTrackHistoryID, State, StateDeletedFlag)\n\tSELECT \n\tAUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tSTATE, \n\tSTATEDELETEDFLAG\n\tFROM EXP_StateOutput\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_STATE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}