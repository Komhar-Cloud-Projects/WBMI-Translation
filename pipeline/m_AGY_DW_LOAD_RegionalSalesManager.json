{
    "name": "m_AGY_DW_LOAD_RegionalSalesManager",
    "properties": {
        "activities": [
            {
                "name": "m_AGY_DW_LOAD_RegionalSalesManager",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_AssociateStage AS (\n\tSELECT\n\t\tHashKey,\n\t\tModifiedUserID,\n\t\tModifiedDate,\n\t\tWestBendAssociateID,\n\t\tAssociateRole,\n\t\tRoleSpecificUserCode,\n\t\tDisplayName,\n\t\tLastName,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tSuffix,\n\t\tEmailAddress,\n\t\tExtractDate,\n\t\tAsOfDate,\n\t\tRecordCount,\n\t\tSourceSystemID,\n\t\tUserId,\n\t\tStrategicProfitCenterCode,\n\t\tStrategicProfitCenterDescription\n\tFROM AssociateStage\n\tWHERE AssociateStage.AssociateRole =  'REGIONAL SALES MANAGER'\n),\nSQ_SalesReportingRelationshipStage AS (\n\tSELECT\n\t\tSalesReportingRelationshipStageID,\n\t\tAgencyODSSourceSystemID,\n\t\tHashKey,\n\t\tModifiedUserID,\n\t\tModifiedDate,\n\t\tAssociateID,\n\t\tWestBendAssociateID,\n\t\tReportToAssociateID,\n\t\tReportToWestBendAssociateID,\n\t\tRelationshipType,\n\t\tExtractDate,\n\t\tAsOfDate,\n\t\tRecordCount,\n\t\tSourceSystemID\n\tFROM SalesReportingRelationshipStage\n),\nJNR_OuterToReportingRelationship AS (SELECT\n\tSQ_AssociateStage.WestBendAssociateID, \n\tSQ_AssociateStage.RoleSpecificUserCode, \n\tSQ_AssociateStage.DisplayName, \n\tSQ_AssociateStage.LastName, \n\tSQ_AssociateStage.FirstName, \n\tSQ_AssociateStage.MiddleName, \n\tSQ_AssociateStage.Suffix, \n\tSQ_AssociateStage.EmailAddress, \n\tSQ_AssociateStage.SourceSystemID, \n\tSQ_AssociateStage.UserId, \n\tSQ_SalesReportingRelationshipStage.WestBendAssociateID AS rpt_WestBendAssociateID, \n\tSQ_SalesReportingRelationshipStage.ReportToWestBendAssociateID AS rpt_ReportToWestBendAssociateID\n\tFROM SQ_SalesReportingRelationshipStage\n\tRIGHT OUTER JOIN SQ_AssociateStage\n\tON SQ_AssociateStage.WestBendAssociateID = SQ_SalesReportingRelationshipStage.WestBendAssociateID\n),\nLKP_RegionalSalesManager AS (\n\tSELECT\n\tin_WestBendAssociateID,\n\tHashKey,\n\tRegionalSalesManagerAKID,\n\tWestBendAssociateID\n\tFROM (\n\t\tSELECT \n\t\t\tin_WestBendAssociateID,\n\t\t\tHashKey,\n\t\t\tRegionalSalesManagerAKID,\n\t\t\tWestBendAssociateID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WestBendAssociateID ORDER BY in_WestBendAssociateID) = 1\n),\nlkp_SalesDirectorAKID AS (\n\tSELECT\n\tSalesDirectorAKID,\n\tWestBendAssociateID\n\tFROM (\n\t\tSELECT \n\t\t\tSalesDirectorAKID,\n\t\t\tWestBendAssociateID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SalesDirector\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WestBendAssociateID ORDER BY SalesDirectorAKID) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_RegionalSalesManager.RegionalSalesManagerAKID AS lkp_RegionalSalesManagerAKID,\n\tLKP_RegionalSalesManager.HashKey AS lkp_HashKey,\n\tlkp_SalesDirectorAKID.SalesDirectorAKID AS lkp_SalesDirectorAKID,\n\t-- *INF*: IIF(IsNull(lkp_SalesDirectorAKID), -1, lkp_SalesDirectorAKID)\n\tIFF(lkp_SalesDirectorAKID IS NULL, - 1, lkp_SalesDirectorAKID) AS o_SalesDirectorAKID,\n\tJNR_OuterToReportingRelationship.WestBendAssociateID,\n\tJNR_OuterToReportingRelationship.DisplayName,\n\tJNR_OuterToReportingRelationship.LastName,\n\tJNR_OuterToReportingRelationship.FirstName,\n\tJNR_OuterToReportingRelationship.MiddleName,\n\tJNR_OuterToReportingRelationship.Suffix,\n\tJNR_OuterToReportingRelationship.EmailAddress,\n\t-- *INF*: IIF(IsNull(EmailAddress), 'N/A', EmailAddress)\n\tIFF(EmailAddress IS NULL, 'N/A', EmailAddress) AS o_EmailAddress,\n\tJNR_OuterToReportingRelationship.RoleSpecificUserCode AS RSMCode,\n\tJNR_OuterToReportingRelationship.UserId,\n\t-- *INF*: IIF(IsNull(UserId), 'N/A', UserId)\n\tIFF(UserId IS NULL, 'N/A', UserId) AS o_UserId,\n\t-- *INF*: MD5(DisplayName || LastName || FirstName || MiddleName || Suffix || EmailAddress || RSMCode || UserId || to_char(lkp_SalesDirectorAKID))\n\tMD5(DisplayName || LastName || FirstName || MiddleName || Suffix || EmailAddress || RSMCode || UserId || to_char(lkp_SalesDirectorAKID)) AS v_NewHashKey,\n\tv_NewHashKey AS o_NewHashKey,\n\t-- *INF*: IIF(ISNULL(lkp_HashKey), 'NEW', \r\n\t-- IIF((lkp_HashKey <> v_NewHashKey), 'UPDATE', 'NOCHANGE'))\n\tIFF(lkp_HashKey IS NULL, 'NEW', IFF(( lkp_HashKey <> v_NewHashKey ), 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: iif(v_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tJNR_OuterToReportingRelationship.SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM JNR_OuterToReportingRelationship\n\tLEFT JOIN LKP_RegionalSalesManager\n\tON LKP_RegionalSalesManager.WestBendAssociateID = JNR_OuterToReportingRelationship.WestBendAssociateID\n\tLEFT JOIN lkp_SalesDirectorAKID\n\tON lkp_SalesDirectorAKID.WestBendAssociateID = JNR_OuterToReportingRelationship.rpt_ReportToWestBendAssociateID\n),\nFIL_insert AS (\n\tSELECT\n\tchanged_flag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tlkp_RegionalSalesManagerAKID AS RegionalSalesManagerAKID, \n\to_NewHashKey AS HashKey, \n\to_SalesDirectorAKID AS SalesDirectorAKID, \n\tWestBendAssociateID, \n\tDisplayName, \n\tLastName, \n\tFirstName, \n\tMiddleName, \n\tSuffix, \n\to_EmailAddress AS EmailAddress, \n\tRSMCode, \n\to_UserId AS UserId\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW'or changed_flag='UPDATE'\n),\nSEQ_RegionalSalesManager_AKID AS (\n\tCREATE SEQUENCE SEQ_RegionalSalesManager_AKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Assign_AKID AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tRegionalSalesManagerAKID,\n\tHashKey,\n\tSEQ_RegionalSalesManager_AKID.NEXTVAL,\n\t-- *INF*: iif(isnull(RegionalSalesManagerAKID),NEXTVAL,RegionalSalesManagerAKID)\n\tIFF(RegionalSalesManagerAKID IS NULL, NEXTVAL, RegionalSalesManagerAKID) AS o_RegionalSalesManagerAKID,\n\tSalesDirectorAKID,\n\tWestBendAssociateID,\n\tDisplayName,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tSuffix,\n\tEmailAddress,\n\tRSMCode,\n\tUserId\n\tFROM FIL_insert\n),\nRegionalSalesManager_Inserts AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, HashKey, RegionalSalesManagerAKID, SalesDirectorAKID, WestBendAssociateID, RegionalSalesManagerCode, DisplayName, LastName, FirstName, MiddleName, Suffix, EmailAddress, UserId)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tHASHKEY, \n\to_RegionalSalesManagerAKID AS REGIONALSALESMANAGERAKID, \n\tSALESDIRECTORAKID, \n\tWESTBENDASSOCIATEID, \n\tRSMCode AS REGIONALSALESMANAGERCODE, \n\tDISPLAYNAME, \n\tLASTNAME, \n\tFIRSTNAME, \n\tMIDDLENAME, \n\tSUFFIX, \n\tEMAILADDRESS, \n\tUSERID\n\tFROM EXP_Assign_AKID\n),\nSQ_RegionalSalesManager AS (\n\tSELECT \r\n\t\ta.RegionalSalesManagerID, \r\n\t\ta.EffectiveDate,\r\n\t\ta.ExpirationDate, \r\n\t\ta.RegionalSalesManagerAKID\r\n\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager a\r\n\tWHERE  a.RegionalSalesManagerAKID  IN\r\n\t\t( SELECT RegionalSalesManagerAKID  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager\r\n\t\tWHERE CurrentSnapshotFlag = 1 GROUP BY RegionalSalesManagerAKID HAVING count(*) > 1) \r\n\tORDER BY a.RegionalSalesManagerAKID ,a.EffectiveDate DESC\r\n\t\r\n\t\r\n\t\r\n\t--IN Subquery exists to pick AK ID column values that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag \r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tRegionalSalesManagerID,\n\tEffectiveDate AS EffectiveFromDate,\n\tExpirationDate AS OriginalEffectiveToDate,\n\tRegionalSalesManagerAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- RegionalSalesManagerAKID = v_prev_AKID , ADD_TO_DATE(v_prev_EffectiveFromDate,'SS',-1),\r\n\t-- OriginalEffectiveToDate)\n\tDECODE(TRUE,\n\tRegionalSalesManagerAKID = v_prev_AKID, ADD_TO_DATE(v_prev_EffectiveFromDate, 'SS', - 1),\n\tOriginalEffectiveToDate) AS v_EffectiveToDate,\n\tv_EffectiveToDate AS o_EffectiveToDate,\n\tRegionalSalesManagerAKID AS v_prev_AKID,\n\tEffectiveFromDate AS v_prev_EffectiveFromDate,\n\t0 AS CurrentSnapshotFlag,\n\tSYSDATE AS ModifiedDate\n\tFROM SQ_RegionalSalesManager\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tRegionalSalesManagerID, \n\tOriginalEffectiveToDate, \n\to_EffectiveToDate AS NewEffectiveToDate, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM EXP_Lag_eff_from_date\n\tWHERE OriginalEffectiveToDate != NewEffectiveToDate\n),\nUPD_OldRecord AS (\n\tSELECT\n\tRegionalSalesManagerID, \n\tNewEffectiveToDate AS EffectiveToDate, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM FIL_FirstRowInAKGroup\n),\nRegionalSalesManager_Updates AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager AS T\n\tUSING UPD_OldRecord AS S\n\tON T.RegionalSalesManagerID = S.RegionalSalesManagerID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.EffectiveToDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246490"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905469"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603182"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:19:20"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:18:59"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCESYSTEMID": {
                "type": "string",
                "defaultValue": "AgencyODS"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            }
        },
        "folder": {
            "name": "Agency DataWarehouse/"
        },
        "annotations": []
    }
}