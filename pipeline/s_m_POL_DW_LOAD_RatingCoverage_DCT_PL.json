{
    "name": "s_m_POL_DW_LOAD_RatingCoverage_DCT_PL",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_RatingCoverage_DCT_PL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_RiskLocation AS (\n\tSELECT\n\tRiskLocationAKID,\n\tRiskLocationKey\n\tFROM (\n\t\tSELECT \n\t\t\tRiskLocationAKID,\n\t\t\tRiskLocationKey\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\tWHERE CurrentSnapshotFlag='1' and SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand\r\n\t\tPolicyAKId in (\r\n\t\tselect pol_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\twhere WCT.PolicyNumber=pol.pol_num\r\n\t\tand ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod)\r\n\t\tand pol.crrnt_snpsht_flag=1)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey ORDER BY RiskLocationAKID) = 1\n),\nLKP_Pol_AK_Id AS (\n\tSELECT\n\tpol_ak_id,\n\tPol_Key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tPol_Key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tand exists ( select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy WCT where WCT.PolicyNumber=pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol_mod)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Pol_Key ORDER BY pol_ak_id) = 1\n),\nLKP_PolicyCoverageAKID AS (\n\tSELECT\n\tPolicyCoverageAKID,\n\tPolicyCoverageHashKey\n\tFROM (\n\t\tSELECT a.PolicyCoverageAKID as PolicyCoverageAKID, a.PolicyCoverageHashKey as PolicyCoverageHashKey FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage a\r\n\t\tinner hash join\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy b\r\n\t\ton b.pol_ak_id=a.PolicyAKId\r\n\t\tand b.crrnt_snpsht_flag=1\r\n\t\tinner hash join\r\n\t\t(select distinct WCT.PolicyNumber,ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00') as PolicyVersionFormatted from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy WCT) WCT\r\n\t\ton WCT.PolicyNumber=b.pol_num\r\n\t\tand PolicyVersionFormatted=b.pol_mod\r\n\t\twhere a.CurrentSnapshotFlag=1 and a.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by a.PolicyCoverageHashKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyCoverageHashKey ORDER BY PolicyCoverageAKID) = 1\n),\nLKP_Product AS (\n\tSELECT\n\tProductAKId,\n\tProductCode\n\tFROM (\n\t\tSELECT \n\t\t\tProductAKId,\n\t\t\tProductCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Product\n\t\tWHERE CurrentSnapshotFlag='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProductCode ORDER BY ProductAKId) = 1\n),\nLKP_InsuranceReferenceLineOfBusiness AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessAKId,\n\tInsuranceReferenceLineOfBusinessCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\t\tInsuranceReferenceLineOfBusinessCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceLineOfBusiness\n\t\tWHERE CurrentSnapshotFlag='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceReferenceLineOfBusinessCode ORDER BY InsuranceReferenceLineOfBusinessAKId) = 1\n),\nLKP_ExcludePassThrough AS (\n\tSELECT\n\tRatedCoverageCode\n\tFROM (\n\t\tselect cc.RatedCoverageCode as RatedCoverageCode \r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary CS\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageGroup CG\r\n\t\ton CS.CoverageSummaryId=CG.CoverageSummaryId\r\n\t\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.ConformedCoverage CC\r\n\t\ton CG.CoverageGroupId=CC.CoverageGroupId\r\n\t\twhere CS.CoverageSummaryCode='PASSTHRU'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatedCoverageCode ORDER BY RatedCoverageCode) = 1\n),\nSQ_WorkDCTPLCoverage AS (\n\tselect distinct P.PolicySymbol,\r\n\tP.PolicyNumber,\r\n\tP.PolicyVersion,\r\n\tP.TransactionCreatedDate,\r\n\tsubstring(REPLACE(Addresskey,P.Policykey+'||',''),1,charindex('|',REPLACE(Addresskey,P.Policykey+'||','') ,1)-1) Locationid,\r\n\t'0000' LocationNumber,\r\n\tC.LineOfInsuranceCode,\r\n\tP.PolicyEffectiveDate,\r\n\tC.CoverageEffectiveDate,\r\n\tC.CoverageExpirationDate,\r\n\tC.TransactionAmount,\r\n\tISNULL(C.ExposureAmount,0) ExposureAmount,\r\n\tISNULL(C.ExposureClassCode,'N/A') ExposureClassCode,\r\n\tISNULL(C.SublineCode,'N/A') SublineCode,\r\n\tISNULL(C.PerilType,'N/A') PerilType,\r\n\tC.PerilCode,\r\n\tC.AnnualStatementLineNumber,\r\n\tC.AnnualStatementLineCode,\r\n\tC.SubAnnualStatementLineCode,\r\n\tC.SubNonAnnualStatementLineCode,\r\n\tC.CoverageKey,\r\n\tC.CoverageCodeKey,\r\n\tC.CoverageCodeDesc,\r\n\tISNULL(C.CoverageSubCd,'') CoverageSubCd,\r\n\tC.CoverageVersion,\r\n\tC.TransactionEffectiveDate,\r\n\tC.ProductCode,\r\n\tC.ProductDesc,\r\n\tISNULL(C.TerminationDate,'2100-12-31 23:59:59') TerminationDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLLocation L\r\n\ton P.PolicyKey=L.PolicyKey\r\n\tand P.StartDate=L.StartDate\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\ton P.PolicyKey=C.PolicyKey\r\n\tand P.StartDate=C.StartDate\r\n\tand L.AddressKey=C.RiskAddressKey\r\n\tand C.MeasureName='WrittenPremium'\r\n\twhere not exists(select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P2 where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\tUNION\r\n\t--Coverage that are not linked to any location\r\n\tselect distinct P.PolicySymbol,\r\n\tP.PolicyNumber,\r\n\tP.PolicyVersion,\r\n\tP.TransactionCreatedDate,\r\n\t'' Locationid,\r\n\t'0000' LocationNumber,\r\n\tC.LineOfInsuranceCode,\r\n\tP.PolicyEffectiveDate,\r\n\tC.CoverageEffectiveDate,\r\n\tC.CoverageExpirationDate,\r\n\tC.TransactionAmount,\r\n\tISNULL(C.ExposureAmount,0) ExposureAmount,\r\n\tISNULL(C.ExposureClassCode,'N/A') ExposureClassCode,\r\n\tISNULL(C.SublineCode,'N/A') SublineCode,\r\n\tISNULL(C.PerilType,'N/A') PerilType,\r\n\tC.PerilCode,\r\n\tC.AnnualStatementLineNumber,\r\n\tC.AnnualStatementLineCode,\r\n\tC.SubAnnualStatementLineCode,\r\n\tC.SubNonAnnualStatementLineCode,\r\n\tC.CoverageKey,\r\n\tC.CoverageCodeKey,\r\n\tC.CoverageCodeDesc,\r\n\tISNULL(C.CoverageSubCd,'') CoverageSubCd,\r\n\tC.CoverageVersion,\r\n\tC.TransactionEffectiveDate,\r\n\tC.ProductCode,\r\n\tC.ProductDesc,\r\n\tISNULL(C.TerminationDate,'2100-12-31 23:59:59') TerminationDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\ton P.PolicyKey=C.PolicyKey\r\n\tand P.StartDate=C.StartDate\r\n\tand C.MeasureName='WrittenPremium'\r\n\twhere C.RiskAddressKey is null\r\n\tand not exists(select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLPolicy P2 where P2.LineageId=P.LineageId and P2.PolicyStatusKey='ClaimFreeAward')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\r\n\torder by P.PolicySymbol,P.PolicyNumber,P.PolicyVersion,Locationid,CoverageKey,P.TransactionCreatedDate\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\tTransactionCreatedDate,\n\tLocationId,\n\tLocationNumber,\n\tLineOfInsuranceCode,\n\tPolicyEffectiveDate,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tTransactionAmount,\n\tExposureAmount,\n\tExposureClassCode,\n\tSublineCode,\n\tPerilType,\n\tPerilCode,\n\tAnnualStatementLineNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tCoverageKey,\n\tCoverageCodeKey,\n\tCoverageCodeDesc,\n\tCoverageSubCd,\n\tCoverageVersion,\n\tTransactionEffectiveDate,\n\tProductCode,\n\tProductDesc,\n\tTerminationDate,\n\t-- *INF*: :LKP.LKP_EXCLUDEPASSTHROUGH(CoverageSubCd)\n\tLKP_EXCLUDEPASSTHROUGH_CoverageSubCd.RatedCoverageCode AS v_LKP_PassThroughExclusion,\n\t-- *INF*: IIF(ISNULL(v_LKP_PassThroughExclusion),'1','0')\n\tIFF(v_LKP_PassThroughExclusion IS NULL, '1', '0') AS o_PassThroughExlcusionFlag\n\tFROM SQ_WorkDCTPLCoverage\n\tLEFT JOIN LKP_EXCLUDEPASSTHROUGH LKP_EXCLUDEPASSTHROUGH_CoverageSubCd\n\tON LKP_EXCLUDEPASSTHROUGH_CoverageSubCd.RatedCoverageCode = CoverageSubCd\n\n),\nFIL_ExcludePassThroughCoverage AS (\n\tSELECT\n\tPolicySymbol, \n\tPolicyNumber, \n\tPolicyVersion, \n\tTransactionCreatedDate, \n\tLocationId, \n\tLocationNumber, \n\tLineOfInsuranceCode, \n\tPolicyEffectiveDate, \n\tCoverageEffectiveDate, \n\tCoverageExpirationDate, \n\tTransactionAmount, \n\tExposureAmount, \n\tExposureClassCode, \n\tSublineCode, \n\tPerilType, \n\tPerilCode, \n\tAnnualStatementLineNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tCoverageKey, \n\tCoverageCodeKey, \n\tCoverageCodeDesc, \n\tCoverageSubCd, \n\tCoverageVersion, \n\tTransactionEffectiveDate, \n\tProductCode, \n\tProductDesc, \n\tTerminationDate, \n\to_PassThroughExlcusionFlag AS PassThroughExlcusionFlag\n\tFROM EXP_SRCDataCollect\n\tWHERE PassThroughExlcusionFlag='1'\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\tTransactionCreatedDate,\n\tLocationId,\n\tLocationNumber,\n\tLineOfInsuranceCode,\n\tPolicyEffectiveDate,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tTransactionAmount,\n\tExposureAmount,\n\tExposureClassCode,\n\tSublineCode,\n\tPerilType,\n\tPerilCode,\n\tAnnualStatementLineNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tCoverageKey,\n\tCoverageCodeKey,\n\tCoverageCodeDesc,\n\tCoverageSubCd,\n\tCoverageVersion,\n\tTransactionEffectiveDate,\n\tProductCode,\n\tProductDesc,\n\tTerminationDate\n\tFROM FIL_ExcludePassThroughCoverage\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TransactionCreatedDate, CoverageKey ORDER BY NULL) = 1\n),\nEXP_Key_BuiltUp AS (\n\tSELECT\n\tPolicySymbol,\n\tPolicyNumber,\n\tPolicyVersion,\n\t-- *INF*: PolicyNumber || IIF(ISNULL(ltrim(rtrim(PolicyVersion))) or Length(ltrim(rtrim(PolicyVersion)))=0 or IS_SPACES(PolicyVersion),'00',PolicyVersion)\n\tPolicyNumber || IFF(ltrim(rtrim(PolicyVersion)) IS NULL OR Length(ltrim(rtrim(PolicyVersion))) = 0 OR IS_SPACES(PolicyVersion), '00', PolicyVersion) AS v_PolicyKey,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_POL_AK_ID(v_PolicyKey)),-1 , :LKP.LKP_POL_AK_ID(v_PolicyKey) )\n\tIFF(LKP_POL_AK_ID_v_PolicyKey.pol_ak_id IS NULL, - 1, LKP_POL_AK_ID_v_PolicyKey.pol_ak_id) AS v_Policyakid,\n\tv_LineOfInsuranceDesc AS o_LineOfInsuranceDesc,\n\t'N/A' AS v_LineOfInsuranceDesc,\n\tv_Policyakid AS o_PolicyAkid,\n\tTransactionCreatedDate,\n\tLocationId,\n\tLocationNumber,\n\tv_PolicyKey || '|' || LocationId || '|' ||LocationNumber AS v_RiskLocationKey,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_RISKLOCATION(v_RiskLocationKey)), -1, :LKP.LKP_RISKLOCATION(v_RiskLocationKey) )\n\tIFF(LKP_RISKLOCATION_v_RiskLocationKey.RiskLocationAKID IS NULL, - 1, LKP_RISKLOCATION_v_RiskLocationKey.RiskLocationAKID) AS v_RiskLocationakid,\n\tv_RiskLocationakid AS o_RiskLocationAkid,\n\t-- *INF*: MD5(TO_CHAR(v_Policyakid)||TO_CHAR(v_RiskLocationakid)||v_LineOfInsuranceDesc||TO_CHAR(PolicyEffectiveDate))\n\tMD5(TO_CHAR(v_Policyakid) || TO_CHAR(v_RiskLocationakid) || v_LineOfInsuranceDesc || TO_CHAR(PolicyEffectiveDate)) AS v_PolicyCoverageHashKey,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_POLICYCOVERAGEAKID(v_PolicyCoverageHashKey)), -1, :LKP.LKP_POLICYCOVERAGEAKID(v_PolicyCoverageHashKey))\n\tIFF(LKP_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey.PolicyCoverageAKID IS NULL, - 1, LKP_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey.PolicyCoverageAKID) AS v_PolicyCoverageakid,\n\tv_PolicyCoverageakid AS o_PolicyCoverageakid,\n\tLineOfInsuranceCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_INSURANCEREFERENCELINEOFBUSINESS(LineOfInsuranceCode)),33,:LKP.LKP_INSURANCEREFERENCELINEOFBUSINESS(LineOfInsuranceCode))\n\tIFF(LKP_INSURANCEREFERENCELINEOFBUSINESS_LineOfInsuranceCode.InsuranceReferenceLineOfBusinessAKId IS NULL, 33, LKP_INSURANCEREFERENCELINEOFBUSINESS_LineOfInsuranceCode.InsuranceReferenceLineOfBusinessAKId) AS v_InsuranceReferenceLineOfBusinessAKId,\n\tv_InsuranceReferenceLineOfBusinessAKId AS o_InsuranceReferenceLineOfBusinessAKId,\n\tPolicyEffectiveDate,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tTransactionAmount,\n\t-- *INF*: IIF(TransactionAmount<>0,1,0)\n\tIFF(TransactionAmount <> 0, 1, 0) AS o_PremiumBearingIndicator,\n\tExposureAmount,\n\tExposureClassCode,\n\tSublineCode,\n\tPerilType,\n\tPerilCode,\n\tAnnualStatementLineNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tCoverageKey,\n\tCoverageCodeKey,\n\tCoverageCodeDesc,\n\tCoverageSubCd,\n\tCoverageVersion,\n\t-- *INF*: IIF(ISNULL(CoverageVersion) or IS_SPACES(CoverageVersion)  or LENGTH(CoverageVersion)=0,'N/A',CoverageVersion)\n\tIFF(CoverageVersion IS NULL OR IS_SPACES(CoverageVersion) OR LENGTH(CoverageVersion) = 0, 'N/A', CoverageVersion) AS o_CoverageVersion,\n\tTransactionEffectiveDate,\n\t-1 AS o_StatisticalCoverageAKID,\n\tProductCode,\n\tProductDesc,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_PRODUCT(ProductCode)),34,:LKP.LKP_PRODUCT(ProductCode))\r\n\t-- --34 is Unassigned\n\tIFF(LKP_PRODUCT_ProductCode.ProductAKId IS NULL, 34, LKP_PRODUCT_ProductCode.ProductAKId) AS v_ProductAkid,\n\tv_ProductAkid AS o_ProductAkid,\n\t'000' AS SubLocationUnitNumber,\n\t'N/A' AS SpecialClassGroupCode,\n\t'ISO' AS ClassCodeOrganizationCode,\n\t-1 AS AnnualStatementLineId,\n\tTerminationDate,\n\t'N/A' AS SchedulePNumber,\n\t'N/A' AS SubAnnualStatementLineNumber,\n\t'N/A' AS OccupancyClassDescription,\n\t'0' AS ActiveBuildingFlag,\n\t'N/A' AS RiskType,\n\t'N/A' AS InsuranceLine,\n\t'N/A' AS o_CoverageForm,\n\t'N/A' AS PerilGroup\n\tFROM AGG_Remove_Duplicates\n\tLEFT JOIN LKP_POL_AK_ID LKP_POL_AK_ID_v_PolicyKey\n\tON LKP_POL_AK_ID_v_PolicyKey.Pol_Key = v_PolicyKey\n\n\tLEFT JOIN LKP_RISKLOCATION LKP_RISKLOCATION_v_RiskLocationKey\n\tON LKP_RISKLOCATION_v_RiskLocationKey.RiskLocationKey = v_RiskLocationKey\n\n\tLEFT JOIN LKP_POLICYCOVERAGEAKID LKP_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey\n\tON LKP_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey.PolicyCoverageHashKey = v_PolicyCoverageHashKey\n\n\tLEFT JOIN LKP_INSURANCEREFERENCELINEOFBUSINESS LKP_INSURANCEREFERENCELINEOFBUSINESS_LineOfInsuranceCode\n\tON LKP_INSURANCEREFERENCELINEOFBUSINESS_LineOfInsuranceCode.InsuranceReferenceLineOfBusinessCode = LineOfInsuranceCode\n\n\tLEFT JOIN LKP_PRODUCT LKP_PRODUCT_ProductCode\n\tON LKP_PRODUCT_ProductCode.ProductCode = ProductCode\n\n),\nLKP_ASL AS (\n\tSELECT\n\tAnnualStatementLineId,\n\tSchedulePNumber,\n\tAnnualStatementLineNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tInsuranceLineCode,\n\tDctRiskTypeCode,\n\tDctCoverageTypeCode,\n\tDctPerilGroup,\n\tDctSubCoverageTypeCode,\n\tDctCoverageVersion\n\tFROM (\n\t\tSELECT DISTINCT ASLRule.AnnualStatementLineId as AnnualStatementLineId, \r\n\t\tASL.SchedulePNumber as SchedulePNumber, \r\n\t\tASL.AnnualStatementLineNumber as AnnualStatementLineNumber, \r\n\t\tASL.AnnualStatementLineCode as AnnualStatementLineCode, \r\n\t\tASL.SubAnnualStatementLineNumber as SubAnnualStatementLineNumber, \r\n\t\tASL.SubAnnualStatementLineCode as SubAnnualStatementLineCode, \r\n\t\tASL.SubNonAnnualStatementLineCode as SubNonAnnualStatementLineCode, \r\n\t\tSC.InsuranceLineCode as InsuranceLineCode, \r\n\t\tSC.DctRiskTypeCode as DctRiskTypeCode, \r\n\t\tSC.DctCoverageTypeCode as DctCoverageTypeCode, \r\n\t\tSC.DctPerilGroup as DctPerilGroup, \r\n\t\tSC.DctSubCoverageTypeCode as DctSubCoverageTypeCode, \r\n\t\tSC.DctCoverageVersion as DctCoverageVersion \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule ASLRule\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.AnnualStatementLine ASL\r\n\t\ton ASLRule.AnnualStatementLineId=ASL.AnnualStatementLineId\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.SystemCoverage SC\r\n\t\ton ASLRule.SystemCoverageId=SC.SystemCoverageId\r\n\t\tWHERE SC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctRiskTypeCode,DctCoverageTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY AnnualStatementLineId) = 1\n),\nLKP_RatingCoverage AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tRatingCoverageId,\n\tRatingCoverageHashKey,\n\tRatingCoverageCancellationDate,\n\tCoverageGUID,\n\tCoverageType,\n\tSubCoverageTypeCode\n\tFROM (\n\t\tSELECT RC.RatingCoverageId as RatingCoverageId,\r\n\t\tRC.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tRC.RatingCoverageHashKey as RatingCoverageHashKey, \r\n\t\tRC.RatingCoverageCancellationDate as RatingCoverageCancellationDate, \r\n\t\tRC.CoverageGUID as CoverageGUID,\r\n\t\tRC.CoverageType as CoverageType,\r\n\t\tRC.SubCoverageTypeCode as SubCoverageTypeCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\t\ton RC.CoverageGUID=C.Coveragekey\r\n\t\tand RC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by RC.CoverageGUID,EffectiveDate desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGUID ORDER BY RatingCoverageAKID) = 1\n),\nLKP_RatingCoverage_WithDate AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tRatingCoverageId,\n\tRatingCoverageHashKey,\n\tRatingCoverageCancellationDate,\n\tCoverageGUID,\n\tEffectiveDate,\n\tCoverageType,\n\tSubCoverageTypeCode\n\tFROM (\n\t\tSELECT RC.RatingCoverageId as RatingCoverageId,\r\n\t\tRC.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tRC.RatingCoverageHashKey as RatingCoverageHashKey, \r\n\t\tRC.RatingCoverageCancellationDate as RatingCoverageCancellationDate, \r\n\t\tRC.CoverageGUID as CoverageGUID,\r\n\t\tRC.EffectiveDate as EffectiveDate, \r\n\t\tRC.CoverageType as CoverageType,\r\n\t\tRC.SubCoverageTypeCode as SubCoverageTypeCode\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLCoverage C\r\n\t\ton RC.CoverageGUID=C.Coveragekey\r\n\t\tand RC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by RC.CoverageGUID,EffectiveDate desc,RC.CoverageType,RC.SubCoverageTypeCode\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGUID,EffectiveDate ORDER BY RatingCoverageAKID) = 1\n),\nSEQ_RatingCoverageAKID AS (\n\tCREATE SEQUENCE SEQ_RatingCoverageAKID\n\tSTART = 1\n\tINCREMENT = 1;\n),\nEXP_CalValues AS (\n\tSELECT\n\tLKP_RatingCoverage.RatingCoverageId AS lkp_RatingCoverageId,\n\tLKP_RatingCoverage.RatingCoverageAKID AS lkp_RatingCoverageAKID,\n\tLKP_RatingCoverage.RatingCoverageHashKey AS lkp_RatingCoverageHashKey,\n\tLKP_RatingCoverage_WithDate.RatingCoverageId AS lkp_Dt_RatingCoverageId,\n\tLKP_RatingCoverage_WithDate.RatingCoverageAKID AS lkp_Dt_RatingCoverageAKID,\n\tLKP_RatingCoverage_WithDate.RatingCoverageHashKey AS lkp_Dt_RatingCoverageHashKey,\n\tSEQ_RatingCoverageAKID.NEXTVAL AS i_NEXTVAL,\n\t-- *INF*: IIF(ISNULL(lkp_Dt_RatingCoverageId),lkp_RatingCoverageId,lkp_Dt_RatingCoverageId)\n\tIFF(lkp_Dt_RatingCoverageId IS NULL, lkp_RatingCoverageId, lkp_Dt_RatingCoverageId) AS v_lkp_RatingCoverageid,\n\tv_lkp_RatingCoverageid AS o_lkp_RatingCoverageId,\n\t-- *INF*: IIF(ISNULL(lkp_Dt_RatingCoverageAKID), lkp_RatingCoverageAKID, lkp_Dt_RatingCoverageAKID)\n\tIFF(lkp_Dt_RatingCoverageAKID IS NULL, lkp_RatingCoverageAKID, lkp_Dt_RatingCoverageAKID) AS v_lkp_RatingCoverageAKID,\n\t-- *INF*: IIF(ISNULL(lkp_Dt_RatingCoverageHashKey), lkp_RatingCoverageHashKey, lkp_Dt_RatingCoverageHashKey)\n\tIFF(lkp_Dt_RatingCoverageHashKey IS NULL, lkp_RatingCoverageHashKey, lkp_Dt_RatingCoverageHashKey) AS v_lkp_RatingCoverageHashKey,\n\tEXP_Key_BuiltUp.CoverageKey AS i_CoverageGUID,\n\tEXP_Key_BuiltUp.TransactionEffectiveDate AS i_TEffectiveDate,\n\t-- *INF*: PolicyAKID||'~'||RiskLocationAkid||'~'||i_PolicyCoverageAKID||'~'||TO_CHAR(i_TCreatedDate)||'~'||i_CoverageGUID\n\tPolicyAKID || '~' || RiskLocationAkid || '~' || i_PolicyCoverageAKID || '~' || TO_CHAR(i_TCreatedDate) || '~' || i_CoverageGUID AS v_RatingCoverageKey,\n\tEXP_Key_BuiltUp.o_CoverageForm AS i_CoverageForm,\n\tEXP_Key_BuiltUp.RiskType AS i_RiskType,\n\tEXP_Key_BuiltUp.ExposureClassCode AS i_ClassCode,\n\tEXP_Key_BuiltUp.ExposureAmount AS i_Exposure,\n\tEXP_Key_BuiltUp.TransactionCreatedDate AS i_TCreatedDate,\n\tEXP_Key_BuiltUp.CoverageExpirationDate AS i_TExpirationDate,\n\tEXP_Key_BuiltUp.o_CoverageVersion AS i_CoverageVersion,\n\tEXP_Key_BuiltUp.SublineCode AS i_SubLineCode,\n\tLKP_ASL.AnnualStatementLineNumber AS i_AnnualStatementLineNumber,\n\tEXP_Key_BuiltUp.o_ProductAkid AS i_ProductAKId,\n\tEXP_Key_BuiltUp.o_InsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tEXP_Key_BuiltUp.SubLocationUnitNumber AS i_SubLocationUnitNumber,\n\tEXP_Key_BuiltUp.SpecialClassGroupCode AS i_SpecialClassGroupCode,\n\tEXP_Key_BuiltUp.ClassCodeOrganizationCode AS i_ClassCodeOrganizationCode,\n\tEXP_Key_BuiltUp.o_PolicyCoverageakid AS i_PolicyCoverageAKID,\n\tEXP_Key_BuiltUp.o_StatisticalCoverageAKID AS i_StatisticalCoverageAKID,\n\tLKP_ASL.AnnualStatementLineId AS i_AnnualStatementLineId,\n\tEXP_Key_BuiltUp.PerilGroup AS i_PerilGroup,\n\tEXP_Key_BuiltUp.o_PolicyAkid AS PolicyAKID,\n\t-- *INF*: MD5(i_ClassCode\r\n\t-- ||i_RiskType\r\n\t-- ||TO_CHAR(i_Exposure)\r\n\t-- ||TO_CHAR(RatingCoverageCancellationDate)\r\n\t-- ||i_SubLineCode\r\n\t-- ||i_AnnualStatementLineNumber\r\n\t-- ||TO_CHAR(i_PremiumBearingIndicator)\r\n\t-- --||TO_CHAR(i_AnnualStatementLineId)\r\n\t-- ||i_SubLocationUnitNumber\r\n\t-- ||i_SpecialClassGroupCode\r\n\t-- ||i_ClassCodeOrganizationCode\r\n\t-- ||i_PerilGroup\r\n\t-- ||OccupancyClassDescription\r\n\t-- ||ActiveBuildingFlag)\n\tMD5(i_ClassCode || i_RiskType || TO_CHAR(i_Exposure) || TO_CHAR(RatingCoverageCancellationDate) || i_SubLineCode || i_AnnualStatementLineNumber || TO_CHAR(i_PremiumBearingIndicator) || i_SubLocationUnitNumber || i_SpecialClassGroupCode || i_ClassCodeOrganizationCode || i_PerilGroup || OccupancyClassDescription || ActiveBuildingFlag) AS v_RatingCoverageHashKey,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(v_lkp_RatingCoverageid) ,'New', \r\n\t-- ISNULL(lkp_Dt_RatingCoverageAKID),'New',\r\n\t-- v_lkp_RatingCoverageHashKey!=v_RatingCoverageHashKey,'Change',\r\n\t-- 'NoChange')\n\tDECODE(TRUE,\n\t\tv_lkp_RatingCoverageid IS NULL, 'New',\n\t\tlkp_Dt_RatingCoverageAKID IS NULL, 'New',\n\t\tv_lkp_RatingCoverageHashKey != v_RatingCoverageHashKey, 'Change',\n\t\t'NoChange') AS v_ChangeFlag,\n\t-- *INF*: IIF(PolicyAKID=v_prev_PolicyAKID and \r\n\t-- i_CoverageGUID=v_prev_CoverageGUID and \r\n\t-- ParentCoverageType=v_prev_coverageType and \r\n\t-- SubCoverageTypeCode=v_prev_subCoverageType, v_prev_NEXTVAL, i_NEXTVAL)\n\tIFF(PolicyAKID = v_prev_PolicyAKID AND i_CoverageGUID = v_prev_CoverageGUID AND ParentCoverageType = v_prev_coverageType AND SubCoverageTypeCode = v_prev_subCoverageType, v_prev_NEXTVAL, i_NEXTVAL) AS v_NEXTVAL,\n\t-- *INF*: IIF(PolicyAKID=v_prev_PolicyAKID and \r\n\t-- i_CoverageGUID=v_prev_CoverageGUID and \r\n\t-- ParentCoverageType=v_prev_coverageType and \r\n\t-- SubCoverageTypeCode=v_prev_subCoverageType, v_Seq+1, 1)\n\tIFF(PolicyAKID = v_prev_PolicyAKID AND i_CoverageGUID = v_prev_CoverageGUID AND ParentCoverageType = v_prev_coverageType AND SubCoverageTypeCode = v_prev_subCoverageType, v_Seq + 1, 1) AS v_Seq,\n\tv_NEXTVAL AS v_prev_NEXTVAL,\n\ti_CoverageGUID AS v_prev_CoverageGUID,\n\ti_PolicyCoverageAKID AS v_prev_PolicyCoverageAKID,\n\tPolicyAKID AS v_prev_PolicyAKID,\n\tParentCoverageType AS v_prev_coverageType,\n\tSubCoverageTypeCode AS v_prev_subCoverageType,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\ti_TCreatedDate AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t0 AS o_LogicalIndicator,\n\tv_RatingCoverageHashKey AS o_RatingCoverageHashKey,\n\t-- *INF*: IIF(v_ChangeFlag='New' AND ISNULL(v_lkp_RatingCoverageAKID),v_NEXTVAL,v_lkp_RatingCoverageAKID)\n\tIFF(v_ChangeFlag = 'New' AND v_lkp_RatingCoverageAKID IS NULL, v_NEXTVAL, v_lkp_RatingCoverageAKID) AS o_RatingCoverageAKID,\n\ti_StatisticalCoverageAKID AS o_StatisticalCoverageAKID,\n\ti_PolicyCoverageAKID AS o_PolicyCoverageAKID,\n\tv_RatingCoverageKey AS o_RatingCoverageKey,\n\ti_CoverageForm AS o_CoverageForm,\n\ti_ClassCode AS o_ClassCode,\n\ti_RiskType AS o_RiskType,\n\tEXP_Key_BuiltUp.CoverageCodeKey AS ParentCoverageType,\n\ti_Exposure AS o_Exposure,\n\ti_CoverageVersion AS o_CoverageVersion,\n\ti_CoverageGUID AS o_CoverageGUID,\n\tEXP_Key_BuiltUp.TerminationDate AS RatingCoverageCancellationDate,\n\ti_SubLineCode AS o_SubLineCode,\n\ti_AnnualStatementLineNumber AS o_AnnualStatementLineNumber,\n\ti_PremiumBearingIndicator AS o_PremiumBearingIndicator,\n\ti_ProductAKId AS o_ProductAKId,\n\ti_InsuranceReferenceLineOfBusinessAKId AS o_InsuranceReferenceLineOfBusinessAKId,\n\ti_SubLocationUnitNumber AS o_SubLocationUnitNumber,\n\ti_SpecialClassGroupCode AS o_SpecialClassGroupCode,\n\ti_AnnualStatementLineId AS o_AnnualStatementLineId,\n\ti_ClassCodeOrganizationCode AS o_ClassCodeOrganizationCode,\n\ti_PerilGroup AS o_PerilGroup,\n\tLKP_ASL.SchedulePNumber,\n\tLKP_ASL.AnnualStatementLineCode,\n\tLKP_ASL.SubAnnualStatementLineNumber,\n\tLKP_ASL.SubAnnualStatementLineCode,\n\tLKP_ASL.SubNonAnnualStatementLineCode,\n\tEXP_Key_BuiltUp.CoverageSubCd AS SubCoverageTypeCode,\n\tEXP_Key_BuiltUp.OccupancyClassDescription,\n\tEXP_Key_BuiltUp.ActiveBuildingFlag,\n\tEXP_Key_BuiltUp.CoverageEffectiveDate AS RatingCoverageEffectiveDate,\n\tEXP_Key_BuiltUp.CoverageExpirationDate AS RatingCoverageExpirationDate,\n\tEXP_Key_BuiltUp.o_RiskLocationAkid AS RiskLocationAkid\n\tFROM EXP_Key_BuiltUp\n\tLEFT JOIN LKP_ASL\n\tON LKP_ASL.InsuranceLineCode = EXP_Key_BuiltUp.InsuranceLine AND LKP_ASL.DctRiskTypeCode = EXP_Key_BuiltUp.RiskType AND LKP_ASL.DctCoverageTypeCode = EXP_Key_BuiltUp.CoverageCodeKey AND LKP_ASL.DctPerilGroup = EXP_Key_BuiltUp.PerilGroup AND LKP_ASL.DctSubCoverageTypeCode = EXP_Key_BuiltUp.CoverageSubCd AND LKP_ASL.DctCoverageVersion = EXP_Key_BuiltUp.o_CoverageVersion\n\tLEFT JOIN LKP_RatingCoverage\n\tON LKP_RatingCoverage.CoverageGUID = EXP_Key_BuiltUp.CoverageKey\n\tLEFT JOIN LKP_RatingCoverage_WithDate\n\tON LKP_RatingCoverage_WithDate.CoverageGUID = EXP_Key_BuiltUp.CoverageKey AND LKP_RatingCoverage_WithDate.EffectiveDate = EXP_Key_BuiltUp.TransactionCreatedDate\n),\nRTR_New_Upd AS (\n\tSELECT\n\to_lkp_RatingCoverageId AS lkp_RatingCoverageId,\n\to_ChangeFlag AS i_ChangeFlag,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_LogicalIndicator AS LogicalIndicator,\n\to_RatingCoverageHashKey AS RatingCoverageHashKey,\n\to_RatingCoverageAKID AS RatingCoverageAKID,\n\to_StatisticalCoverageAKID AS StatisticalCoverageAKID,\n\to_PolicyCoverageAKID AS PolicyCoverageAKID,\n\to_RatingCoverageKey AS RatingCoverageKey,\n\to_CoverageForm AS CoverageForm,\n\to_ClassCode AS ClassCode,\n\to_RiskType AS RiskType,\n\tParentCoverageType AS CoverageType,\n\to_Exposure AS Exposure,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\to_CoverageVersion AS CoverageVersion,\n\to_CoverageGUID AS CoverageGUID,\n\tRatingCoverageCancellationDate,\n\to_SubLineCode AS SubLineCode,\n\to_AnnualStatementLineNumber AS ASLNum,\n\to_PremiumBearingIndicator AS PremiumBearingIndicator,\n\to_ProductAKId AS ProductAKId,\n\to_InsuranceReferenceLineOfBusinessAKId AS InsuranceReferenceLineOfBusinessAKId,\n\to_SubLocationUnitNumber AS SubLocationUnitNumber,\n\to_SpecialClassGroupCode AS SpecialClassGroupCode,\n\to_AnnualStatementLineId AS AnnualStatementLineId,\n\to_ClassCodeOrganizationCode AS ClassCodeOrganizationCode,\n\to_PerilGroup AS PerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag\n\tFROM EXP_CalValues\n),\nRTR_New_Upd_INSERT AS (SELECT * FROM RTR_New_Upd WHERE i_ChangeFlag='New'),\nRTR_New_Upd_UPDATE AS (SELECT * FROM RTR_New_Upd WHERE i_ChangeFlag='Change'),\nUPD_DueToCodeChange AS (\n\tSELECT\n\tlkp_RatingCoverageId, \n\tModifiedDate, \n\tLogicalIndicator, \n\tRatingCoverageHashKey, \n\tCoverageForm, \n\tClassCode, \n\tRiskType, \n\tCoverageType, \n\tExposure, \n\tCoverageVersion, \n\tRatingCoverageCancellationDate AS RatingCoverageCancellationDate3, \n\tSubLineCode, \n\tASLNum, \n\tPremiumBearingIndicator, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tSubLocationUnitNumber, \n\tSpecialClassGroupCode, \n\tAnnualStatementLineId, \n\tClassCodeOrganizationCode, \n\tPerilGroup, \n\tSchedulePNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineNumber, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tSubCoverageTypeCode, \n\tOccupancyClassDescription, \n\tActiveBuildingFlag\n\tFROM RTR_New_Upd_UPDATE\n),\nTGT_RatingCoverage_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage AS T\n\tUSING UPD_DueToCodeChange AS S\n\tON T.RatingCoverageId = S.lkp_RatingCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.LogicalIndicator = S.LogicalIndicator, T.RatingCoverageHashKey = S.RatingCoverageHashKey, T.CoverageForm = S.CoverageForm, T.ClassCode = S.ClassCode, T.RiskType = S.RiskType, T.CoverageType = S.CoverageType, T.Exposure = S.Exposure, T.CoverageVersion = S.CoverageVersion, T.SublineCode = S.SubLineCode, T.AnnualStatementLineNumber = S.ASLNum, T.PremiumBearingIndicator = S.PremiumBearingIndicator, T.ProductAKId = S.ProductAKId, T.InsuranceReferenceLineOfBusinessAKId = S.InsuranceReferenceLineOfBusinessAKId, T.SubLocationUnitNumber = S.SubLocationUnitNumber, T.SpecialClassGroupCode = S.SpecialClassGroupCode, T.AnnualStatementLineId = S.AnnualStatementLineId, T.ClassCodeOrganizationCode = S.ClassCodeOrganizationCode, T.PerilGroup = S.PerilGroup, T.SchedulePNumber = S.SchedulePNumber, T.AnnualStatementLineCode = S.AnnualStatementLineCode, T.SubAnnualStatementLineNumber = S.SubAnnualStatementLineNumber, T.SubAnnualStatementLineCode = S.SubAnnualStatementLineCode, T.SubNonAnnualStatementLineCode = S.SubNonAnnualStatementLineCode, T.SubCoverageTypeCode = S.SubCoverageTypeCode, T.OccupancyClassDescription = S.OccupancyClassDescription, T.ActiveBuildingFlag = S.ActiveBuildingFlag\n),\nSRT_SetRecordOrderForAkid AS (\n\tSELECT\n\tCurrentSnapshotFlag, \n\tAuditID, \n\tCoverageGUID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tLogicalIndicator, \n\tRatingCoverageHashKey, \n\tRatingCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPolicyCoverageAKID, \n\tRatingCoverageKey, \n\tCoverageForm, \n\tClassCode, \n\tRiskType, \n\tCoverageType, \n\tExposure, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tCoverageVersion, \n\tRatingCoverageCancellationDate, \n\tSubLineCode, \n\tASLNum, \n\tPremiumBearingIndicator, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tSubLocationUnitNumber, \n\tSpecialClassGroupCode, \n\tAnnualStatementLineId, \n\tClassCodeOrganizationCode, \n\tPerilGroup, \n\tSchedulePNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineNumber, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tSubCoverageTypeCode, \n\tOccupancyClassDescription, \n\tActiveBuildingFlag\n\tFROM RTR_New_Upd_INSERT\n\tORDER BY CoverageGUID ASC, EffectiveDate ASC\n),\nEXP_SetRatingCoverageAkid AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tLogicalIndicator,\n\tRatingCoverageHashKey,\n\tCoverageGUID,\n\tRatingCoverageAKID,\n\t-- *INF*: IIF(CoverageGUID=v_PrevTransactionCoverageGUID,v_PrevTransactionRatingCoverageAKID,RatingCoverageAKID)\n\tIFF(CoverageGUID = v_PrevTransactionCoverageGUID, v_PrevTransactionRatingCoverageAKID, RatingCoverageAKID) AS v_RatingCoverageAKID,\n\tv_RatingCoverageAKID AS o_RatingCoverageAKID,\n\tv_RatingCoverageAKID AS v_PrevTransactionRatingCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPolicyCoverageAKID,\n\tRatingCoverageKey,\n\tCoverageForm,\n\tClassCode,\n\tRiskType,\n\tCoverageType,\n\tExposure,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tCoverageVersion,\n\tCoverageGUID AS v_PrevTransactionCoverageGUID,\n\tRatingCoverageCancellationDate,\n\tSubLineCode,\n\tASLNum,\n\tPremiumBearingIndicator,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tSubLocationUnitNumber,\n\tSpecialClassGroupCode,\n\tAnnualStatementLineId,\n\tClassCodeOrganizationCode,\n\tPerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag\n\tFROM SRT_SetRecordOrderForAkid\n),\nTGT_RatingCoverage_Insert AS (\n\n\t------------ PRE SQL ----------\n\tupdate RC\r\n\tset RC.AnnualStatementLineId=ASL.AnnualStatementLineId,\r\n\tRC.AnnualStatementLineNumber=ASL.AnnualStatementLineNumber,\r\n\tRC.AnnualStatementLineCode=ASL.AnnualStatementLineCode,\r\n\tRC.SubAnnualStatementLineCode=ASL.SubAnnualStatementLineCode,\r\n\tRC.SubAnnualStatementLineNumber=ASL.SubAnnualStatementLineNumber,\r\n\tRC.SubNonAnnualStatementLineCode=ASL.SubNonAnnualStatementLineCode,\r\n\tRC.SchedulePNumber=ASL.SchedulePNumber,\r\n\tRC.RatingCoverageHashKey=convert(varchar(max),hashbytes('MD5',convert(varchar(max),RC.ClassCode+RC.RiskType+convert(varchar(max),RC.Exposure)+\r\n\tConvert(CHAR(10),RC.RatingCoverageCancellationDate,101) + ' ' + Convert(CHAR(8),RC.RatingCoverageCancellationDate,108)\r\n\t+RC.SubLineCode+ASL.AnnualStatementLineNumber+CONVERT(varchar(max),RC.PremiumBearingIndicator)+RC.SubLocationUnitNumber\r\n\t+RC.SpecialClassGroupCode+RC.ClassCodeOrganizationCode+RC.PerilGroup+RC.OccupancyClassDescription+convert(varchar(1),RC.ActiveBuildingFlag))),2)\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\ton RC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\tleft join @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line SIL\r\n\ton PC.InsuranceLine=SIL.ins_line_code and SIL.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.SystemCoverage SC\r\n\ton RC.CoverageType=SC.DctCoverageTypeCode\r\n\tand RC.RiskType=SC.DctRiskTypeCode\r\n\tand RC.CoverageVersion=SC.DctCoverageVersion\r\n\tand RC.PerilGroup=SC.DctPerilGroup\r\n\tand RC.SubCoverageTypeCode=SC.DctSubCoverageTypeCode\r\n\tand isnull(SIL.StandardInsuranceLineCode, 'N/A')=SC.InsuranceLineCode\r\n\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule R\r\n\ton SC.SystemCoverageId=R.SystemCoverageId\r\n\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.AnnualStatementLine ASL\r\n\ton R.AnnualStatementLineId=ASL.AnnualStatementLineId\r\n\twhere RC.AnnualStatementLineId=-1 and ASL.AnnualStatementLineId is not null\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RatingCoverageHashKey, RatingCoverageAKID, StatisticalCoverageAKID, PolicyCoverageAKID, RatingCoverageKey, CoverageForm, ClassCode, RiskType, CoverageType, Exposure, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, CoverageVersion, CoverageGUID, RatingCoverageCancellationDate, SublineCode, AnnualStatementLineNumber, PremiumBearingIndicator, ProductAKId, InsuranceReferenceLineOfBusinessAKId, SubLocationUnitNumber, SpecialClassGroupCode, AnnualStatementLineId, ClassCodeOrganizationCode, PerilGroup, SchedulePNumber, AnnualStatementLineCode, SubAnnualStatementLineNumber, SubAnnualStatementLineCode, SubNonAnnualStatementLineCode, SubCoverageTypeCode, OccupancyClassDescription, ActiveBuildingFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tRATINGCOVERAGEHASHKEY, \n\to_RatingCoverageAKID AS RATINGCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPOLICYCOVERAGEAKID, \n\tRATINGCOVERAGEKEY, \n\tCOVERAGEFORM, \n\tCLASSCODE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tEXPOSURE, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tCOVERAGEVERSION, \n\tCOVERAGEGUID, \n\tRATINGCOVERAGECANCELLATIONDATE, \n\tSubLineCode AS SUBLINECODE, \n\tASLNum AS ANNUALSTATEMENTLINENUMBER, \n\tPREMIUMBEARINGINDICATOR, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tSUBLOCATIONUNITNUMBER, \n\tSPECIALCLASSGROUPCODE, \n\tANNUALSTATEMENTLINEID, \n\tCLASSCODEORGANIZATIONCODE, \n\tPERILGROUP, \n\tSCHEDULEPNUMBER, \n\tANNUALSTATEMENTLINECODE, \n\tSUBANNUALSTATEMENTLINENUMBER, \n\tSUBANNUALSTATEMENTLINECODE, \n\tSUBNONANNUALSTATEMENTLINECODE, \n\tSUBCOVERAGETYPECODE, \n\tOCCUPANCYCLASSDESCRIPTION, \n\tACTIVEBUILDINGFLAG\n\tFROM EXP_SetRatingCoverageAkid\n),\nSQ_RatingCoverage_UPDATE AS (\n\tSELECT RC.RatingCoverageId, RC.EffectiveDate, RC.ExpirationDate, RC.RatingCoverageAKID,PC.Policyakid \r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t inner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tWHERE EXISTS (SELECT RC1.RatingCoverageAKID\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC1 \r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC1\r\n\ton PC1.PolicyCoverageAKID=RC1.PolicyCoverageAKID\r\n\tand PC1.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand PC1.CurrentSnapshotFlag=1\r\n\tWHERE RC1.CurrentSnapshotFlag = 1 AND RC1.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND RC1.RatingCoverageAKID=RC.RatingCoverageAKID and PC1.PolicyAKID=PC.PolicyAKID\r\n\tGROUP BY PC1.PolicyAKID,RC1.RatingCoverageAKID HAVING COUNT(*)>1)\r\n\tORDER BY PC.PolicyAKID,RatingCoverageAKID, EffectiveDate DESC\n),\nEXP_GetDates AS (\n\tSELECT\n\tRatingCoverageId AS i_RatingCoverageId,\n\tEffectiveDate AS i_EffectiveDate,\n\tExpirationDate AS i_ExpirationDate,\n\tRatingCoverageAKID AS i_RatingCoverageAKID,\n\tPolicyAKID AS i_PolicyAKID,\n\t-- *INF*: IIF(i_PolicyAKID=v_Prev_PolicyAKID and i_RatingCoverageAKID = v_Prev_RatingCoverageAKID,ADD_TO_DATE(v_Prev_EffectiveDate,'SS',-1),i_ExpirationDate)\n\tIFF(i_PolicyAKID = v_Prev_PolicyAKID AND i_RatingCoverageAKID = v_Prev_RatingCoverageAKID, ADD_TO_DATE(v_Prev_EffectiveDate, 'SS', - 1), i_ExpirationDate) AS v_ExpirationDate,\n\ti_PolicyAKID AS v_Prev_PolicyAKID,\n\ti_RatingCoverageAKID AS v_Prev_RatingCoverageAKID,\n\ti_EffectiveDate AS v_Prev_EffectiveDate,\n\ti_ExpirationDate AS o_Orig_ExpirationDate,\n\ti_RatingCoverageId AS o_RatingCoverageId,\n\t'0' AS o_CurrentSnapshotFlag,\n\tv_ExpirationDate AS o_ExpirationDate,\n\tSYSDATE AS o_ModifiedDate\n\tFROM SQ_RatingCoverage_UPDATE\n),\nFIL_FirstRowInAKIDGroup AS (\n\tSELECT\n\to_Orig_ExpirationDate AS i_Orig_ExpirationDate, \n\to_RatingCoverageId AS RatingCoverageId, \n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag, \n\to_ExpirationDate AS ExpirationDate, \n\to_ModifiedDate AS ModifiedDate\n\tFROM EXP_GetDates\n\tWHERE i_Orig_ExpirationDate  !=  ExpirationDate\n),\nUPD_ExpiratedRecords AS (\n\tSELECT\n\tRatingCoverageId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowInAKIDGroup\n),\nTGT_RatingCoverage_Expire AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage AS T\n\tUSING UPD_ExpiratedRecords AS S\n\tON T.RatingCoverageId = S.RatingCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),\nSQ_WorkDCTPLPolicy_CFA AS (\n\tSELECT DISTINCT\r\n\tP.PolicyNumber + P.PolicyVersion as PolicyKey,\r\n\tP.TransactionCreatedDate,\r\n\tP.LineageId,\r\n\tISNULL(P.PolicyState,'N/A') as PolicyState\r\n\tFROM \r\n\tWorkDCTPLPolicy P\r\n\tWHERE \r\n\tP.PolicyStatusKey='ClaimFreeAward'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_STG_CFA}\r\n\tOrder by 1,2\n),\nEXP_Input_WorkDCTPLPolicy_CFA AS (\n\tSELECT\n\tPolicyKey,\n\tTransactionCreatedDate,\n\tLineageId,\n\tPolicyState\n\tFROM SQ_WorkDCTPLPolicy_CFA\n),\nLKP_WorkCFAPolicyList_Exists AS (\n\tSELECT\n\tWorkCFAPolicyListId,\n\tPolicyKey,\n\tTransactionCreatedDate,\n\tCoverageKey,\n\tStatus,\n\tAuditId,\n\tSourceSysId,\n\tCreatedDate,\n\tModifiedDate,\n\tin_PolicyKey,\n\tin_TransactionCreatedDate,\n\tin_LineageId,\n\tin_PolicyState\n\tFROM (\n\t\tSELECT \n\t\t\tWorkCFAPolicyListId,\n\t\t\tPolicyKey,\n\t\t\tTransactionCreatedDate,\n\t\t\tCoverageKey,\n\t\t\tStatus,\n\t\t\tAuditId,\n\t\t\tSourceSysId,\n\t\t\tCreatedDate,\n\t\t\tModifiedDate,\n\t\t\tin_PolicyKey,\n\t\t\tin_TransactionCreatedDate,\n\t\t\tin_LineageId,\n\t\t\tin_PolicyState\n\t\tFROM WorkCFAPolicyList\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY WorkCFAPolicyListId) = 1\n),\nEXP_WorkCFAPolicyList_lookup_output AS (\n\tSELECT\n\tWorkCFAPolicyListId,\n\tin_PolicyKey AS PolicyKey,\n\tin_TransactionCreatedDate AS TransactionCreatedDate,\n\tin_LineageId AS LineageId,\n\tin_PolicyState AS PolicyState\n\tFROM LKP_WorkCFAPolicyList_Exists\n),\nFIL_WorkCFAPolicyList_New AS (\n\tSELECT\n\tWorkCFAPolicyListId, \n\tPolicyKey, \n\tTransactionCreatedDate, \n\tLineageId, \n\tPolicyState\n\tFROM EXP_WorkCFAPolicyList_lookup_output\n\tWHERE ISNULL(WorkCFAPolicyListId)\n),\nEXP_WorkCFAPolicyList_Output AS (\n\tSELECT\n\tPolicyKey,\n\tTransactionCreatedDate,\n\tLineageId,\n\tPolicyState,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_DefaultDate\n\tFROM FIL_WorkCFAPolicyList_New\n),\nTGT_WorkCFAPolicyList_Insert AS (\n\tINSERT INTO WorkCFAPolicyList\n\t(PolicyKey, TransactionCreatedDate, LineageId, AuditId, SourceSysId, CreatedDate, ModifiedDate, PolicyStateCode)\n\tSELECT \n\tPOLICYKEY, \n\tTRANSACTIONCREATEDDATE, \n\tLINEAGEID, \n\to_AuditId AS AUDITID, \n\to_SourceSystemID AS SOURCESYSID, \n\to_DefaultDate AS CREATEDDATE, \n\to_DefaultDate AS MODIFIEDDATE, \n\tPolicyState AS POLICYSTATECODE\n\tFROM EXP_WorkCFAPolicyList_Output\n),\nSQ_RatingCoverage_CFA AS (\n\tSELECT\r\n\tP.pol_key AS PolicyKey,\r\n\tRC.RatingCoverageId, \r\n\tRC.CurrentSnapshotFlag, \r\n\tRC.AuditID, \r\n\tRC.EffectiveDate, \r\n\tRC.ExpirationDate, \r\n\tRC.SourceSystemID, \r\n\tRC.CreatedDate, \r\n\tRC.ModifiedDate, \r\n\tRC.LogicalIndicator, \r\n\tRC.RatingCoverageHashKey, \r\n\tRC.RatingCoverageAKID, \r\n\tRC.StatisticalCoverageAKID, \r\n\tRC.PolicyCoverageAKID, \r\n\tRC.RatingCoverageKey, \r\n\tRC.CoverageForm, \r\n\tRC.ClassCode, \r\n\tRC.RiskType, \r\n\tRC.CoverageType, \r\n\tRC.Exposure, \r\n\tRC.RatingCoverageEffectiveDate, \r\n\tRC.RatingCoverageExpirationDate, \r\n\tRC.CoverageVersion, \r\n\tRC.CoverageGUID, \r\n\tRC.RatingCoverageCancellationDate, \r\n\tRC.SublineCode, \r\n\tRC.AnnualStatementLineNumber, \r\n\tRC.PremiumBearingIndicator, \r\n\tRC.ProductAKId, \r\n\tRC.InsuranceReferenceLineOfBusinessAKId, \r\n\tRC.SubLocationUnitNumber, \r\n\tRC.SpecialClassGroupCode, \r\n\tRC.AnnualStatementLineId, \r\n\tRC.ClassCodeOrganizationCode, \r\n\tRC.PerilGroup, \r\n\tRC.SchedulePNumber, \r\n\tRC.AnnualStatementLineCode, \r\n\tRC.SubAnnualStatementLineNumber, \r\n\tRC.SubAnnualStatementLineCode, \r\n\tRC.SubNonAnnualStatementLineCode, \r\n\tRC.SubCoverageTypeCode, \r\n\tRC.OccupancyClassDescription, \r\n\tRC.ActiveBuildingFlag ,\r\n\tPC.PolicyAKId,\r\n\tCFA.WorkCFAPolicyListId,\r\n\tCFA.TransactionCreatedDate as CFATransactionCreatedDate,\r\n\tCFA.LineageId \r\n\tFROM \r\n\tRatingCoverage RC\r\n\tINNER JOIN PolicyCoverage PC \r\n\tON RC.PolicyCoverageAKID=PC.PolicyCoverageAKID AND PC.CurrentSnapshotFlag=1\r\n\tINNER JOIN v2.Policy P \r\n\tON P.pol_ak_id =PC.policyakid AND P.crrnt_snpsht_flag=1\r\n\tINNER JOIN WorkCFAPolicyList CFA\r\n\tON P.Pol_key=CFA.PolicyKey AND RC.EffectiveDate < CFA.TransactionCreatedDate AND CFA.Status IS NULL\r\n\tWHERE\r\n\tNOT RC.CoverageGuid Like '%CFA' AND\r\n\tNOT EXISTS \r\n\t(Select 1 FROM\r\n\tRatingCoverage RC2 with (nolock)\r\n\tINNER JOIN PolicyCoverage PC2 with (nolock)\r\n\tON RC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID AND PC2.CurrentSnapshotFlag=1\r\n\tINNER JOIN v2.Policy P2 with (nolock)\r\n\tON P2.pol_ak_id =PC2.policyakid AND P2.crrnt_snpsht_flag=1\r\n\tINNER JOIN WorkCFAPolicyList CFA2 with (nolock)\r\n\tON P2.Pol_key=CFA2.PolicyKey and CFA.Status IS NULL where RC2.CoverageGuid = RC.CoverageGuid+'CFA'\r\n\t)\r\n\t@{pipeline().parameters.WHERE_CLAUSE_RC_CFA}\r\n\torder by P.Pol_Key, RC.RatingCoverageAKID, eff_from_date\n),\nEXP_Input_RatingCoverage_CFA AS (\n\tSELECT\n\tPolicyKey,\n\tRatingCoverageId,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tLogicalIndicator,\n\tRatingCoverageHashKey,\n\tRatingCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPolicyCoverageAKID,\n\tRatingCoverageKey,\n\tCoverageForm,\n\tClassCode,\n\tRiskType,\n\tCoverageType,\n\tExposure,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tCoverageVersion,\n\tCoverageGUID,\n\tRatingCoverageCancellationDate,\n\tSublineCode,\n\tAnnualStatementLineNumber,\n\tPremiumBearingIndicator,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tSubLocationUnitNumber,\n\tSpecialClassGroupCode,\n\tAnnualStatementLineId,\n\tClassCodeOrganizationCode,\n\tPerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tPolicyAKId,\n\tWorkCFAPolicyListId,\n\tCFATransactionCreatedDate,\n\tLineageId\n\tFROM SQ_RatingCoverage_CFA\n),\nEXP_Output_CFA AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tRatingCoverageId,\n\tPolicyKey AS RCPolicyKey,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tLogicalIndicator,\n\tRatingCoverageHashKey,\n\tStatisticalCoverageAKID,\n\tPolicyCoverageAKID,\n\tRatingCoverageKey,\n\tCoverageForm,\n\tClassCode,\n\tRiskType,\n\tCoverageType,\n\tExposure,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tCoverageVersion,\n\tCoverageGUID,\n\tRatingCoverageCancellationDate,\n\tSublineCode,\n\tAnnualStatementLineNumber,\n\tPremiumBearingIndicator,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tSubLocationUnitNumber,\n\tSpecialClassGroupCode,\n\tAnnualStatementLineId,\n\tClassCodeOrganizationCode,\n\tPerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tPolicyAKId,\n\tWorkCFAPolicyListId,\n\tCFATransactionCreatedDate,\n\tLineageId,\n\tSEQ_RatingCoverageAKID.NEXTVAL AS i_NEXTVAL,\n\t-- *INF*: IIF(RatingCoverageAKID=v_prev_RatingCoverageAKID, v_prev_NEXTVAL,i_NEXTVAL)\r\n\t-- \r\n\t-- \r\n\t-- //IIF(PolicyAKId=v_prev_PolicyAKID and \r\n\t-- //v_CoverageGUID=v_prev_CoverageGUID and \r\n\t-- //CoverageType=v_prev_CoverageType and \r\n\t-- //v_SubCoverageType=v_prev_SubCoverageType, v_prev_NEXTVAL, i_NEXTVAL)\n\tIFF(RatingCoverageAKID = v_prev_RatingCoverageAKID, v_prev_NEXTVAL, i_NEXTVAL) AS v_NEXTVAL,\n\tCoverageGUID || 'CFA' AS v_CoverageGUID,\n\tSubCoverageTypeCode || 'CFA' AS v_SubCoverageType,\n\tRatingCoverageKey||'CFA' AS v_RatingCoverageKey,\n\tv_NEXTVAL AS v_prev_NEXTVAL,\n\tv_CoverageGUID AS v_prev_CoverageGUID,\n\tPolicyCoverageAKID AS v_prev_PolicyCoverageAKID,\n\tPolicyAKId AS v_prev_PolicyAKID,\n\tCoverageType AS v_prev_CoverageType,\n\tv_SubCoverageType AS v_prev_SubCoverageType,\n\tRatingCoverageAKID AS v_prev_RatingCoverageAKID,\n\tv_NEXTVAL AS o_RatingCoverageAKID,\n\tv_CoverageGUID AS o_CoverageGuid,\n\tv_RatingCoverageKey AS o_RatingCoverageKey,\n\tv_SubCoverageType AS o_SubCoverageTypeCode,\n\tSYSDATE AS o_ModifiedDate,\n\t'Processed' AS o_Status,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId\n\tFROM EXP_Input_RatingCoverage_CFA\n),\nTGT_WorkCFARatingCoverageXRef_Insert AS (\n\tINSERT INTO WorkCFARatingCoverageXRef\n\t(WorkCFAPolicyListId, PolicyKey, TransactionCreatedDate, LineageId, OriginalRatingCoverageAKID, OriginalCoverageGuid, OriginalEffectiveDate, CFARatingCoverageAKID, CFACoverageGuid, AuditId, SourceSysId, CreatedDate, ModifiedDate)\n\tSELECT \n\tWORKCFAPOLICYLISTID, \n\tRCPolicyKey AS POLICYKEY, \n\tCFATransactionCreatedDate AS TRANSACTIONCREATEDDATE, \n\tLINEAGEID, \n\tRatingCoverageAKID AS ORIGINALRATINGCOVERAGEAKID, \n\tCoverageGUID AS ORIGINALCOVERAGEGUID, \n\tEffectiveDate AS ORIGINALEFFECTIVEDATE, \n\to_RatingCoverageAKID AS CFARATINGCOVERAGEAKID, \n\to_CoverageGuid AS CFACOVERAGEGUID, \n\to_AuditId AS AUDITID, \n\tSourceSystemID AS SOURCESYSID, \n\to_ModifiedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE\n\tFROM EXP_Output_CFA\n),\nAGG_WorkCFAPolicyList AS (\n\tSELECT\n\tWorkCFAPolicyListId,\n\to_Status,\n\to_ModifiedDate\n\tFROM EXP_Output_CFA\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkCFAPolicyListId, o_ModifiedDate ORDER BY NULL) = 1\n),\nUPD_WorkCFAPolicyList AS (\n\tSELECT\n\tWorkCFAPolicyListId, \n\to_Status, \n\to_ModifiedDate\n\tFROM AGG_WorkCFAPolicyList\n),\nTGT_WorkCFAPolicyList_Update AS (\n\tMERGE INTO WorkCFAPolicyList AS T\n\tUSING UPD_WorkCFAPolicyList AS S\n\tON T.WorkCFAPolicyListId = S.WorkCFAPolicyListId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.Status = S.o_Status, T.ModifiedDate = S.o_ModifiedDate\n\n\t------------ POST SQL ----------\n\tUPDATE WorkCFAPolicyList Set Status='Ignored' WHERE Status is NULL\n\t-------------------------------\n\n\n),\nTGT_RatingCoverage_CFA AS (\n\tINSERT INTO RatingCoverage\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RatingCoverageHashKey, RatingCoverageAKID, StatisticalCoverageAKID, PolicyCoverageAKID, RatingCoverageKey, CoverageForm, ClassCode, RiskType, CoverageType, Exposure, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, CoverageVersion, CoverageGUID, RatingCoverageCancellationDate, SublineCode, AnnualStatementLineNumber, PremiumBearingIndicator, ProductAKId, InsuranceReferenceLineOfBusinessAKId, SubLocationUnitNumber, SpecialClassGroupCode, AnnualStatementLineId, ClassCodeOrganizationCode, PerilGroup, SchedulePNumber, AnnualStatementLineCode, SubAnnualStatementLineNumber, SubAnnualStatementLineCode, SubNonAnnualStatementLineCode, SubCoverageTypeCode, OccupancyClassDescription, ActiveBuildingFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\to_AuditId AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\to_ModifiedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tRATINGCOVERAGEHASHKEY, \n\to_RatingCoverageAKID AS RATINGCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPOLICYCOVERAGEAKID, \n\to_RatingCoverageKey AS RATINGCOVERAGEKEY, \n\tCOVERAGEFORM, \n\tCLASSCODE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tEXPOSURE, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tCOVERAGEVERSION, \n\to_CoverageGuid AS COVERAGEGUID, \n\tRATINGCOVERAGECANCELLATIONDATE, \n\tSUBLINECODE, \n\tANNUALSTATEMENTLINENUMBER, \n\tPREMIUMBEARINGINDICATOR, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tSUBLOCATIONUNITNUMBER, \n\tSPECIALCLASSGROUPCODE, \n\tANNUALSTATEMENTLINEID, \n\tCLASSCODEORGANIZATIONCODE, \n\tPERILGROUP, \n\tSCHEDULEPNUMBER, \n\tANNUALSTATEMENTLINECODE, \n\tSUBANNUALSTATEMENTLINENUMBER, \n\tSUBANNUALSTATEMENTLINECODE, \n\tSUBNONANNUALSTATEMENTLINECODE, \n\to_SubCoverageTypeCode AS SUBCOVERAGETYPECODE, \n\tOCCUPANCYCLASSDESCRIPTION, \n\tACTIVEBUILDINGFLAG\n\tFROM EXP_Output_CFA\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905512"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604109"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:12:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:29:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "WHERE_CLAUSE_STG_CFA": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_RC_CFA": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}