{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBEPLCoverageEmploymentPracticesLiabilityStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBEPLCoverageEmploymentP_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_EPL_CoverageEmploymentPracticesLiability AS (\n\tWITH cte_WBEPLCoverageEmploymentPracticesLiability(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CoverageId, \r\n\tX.WB_EPL_CoverageEmploymentPracticesLiabilityId, \r\n\tX.SessionId, \r\n\tX.NumberOfFulltimeEmployees, \r\n\tX.NumberOfParttimeEmployees, \r\n\tX.NumberOfTempSeasonalLeasedEmployees, \r\n\tX.NumberOfIndependentContractors, \r\n\tX.NumberOfVolunteers, \r\n\tX.NumberOfEmployeesLabel, \r\n\tX.IncludeIndependentContractorsCoverage, \r\n\tX.IncludeVolunteersAsAdditonalInsureds, \r\n\tX.BusinessClassification, \r\n\tX.HigherLimitsRequired, \r\n\tX.ReinsurancePremium, \r\n\tX.DefenseCosts, \r\n\tX.ThirdPartyLiability, \r\n\tX.DAndOQuote, \r\n\tX.RetroactiveDate, \r\n\tX.PriorRetroactiveDate, \r\n\tX.PriorAggregateLimit, \r\n\tX.TotalNumberOfEmployees, \r\n\tX.SICFactor, \r\n\tX.HigherLimitMinimumValue \r\n\tFROM\r\n\tWB_EPL_CoverageEmploymentPracticesLiability X\r\n\tinner join\r\n\tcte_WBEPLCoverageEmploymentPracticesLiability Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tCoverageId,\n\tWB_EPL_CoverageEmploymentPracticesLiabilityId,\n\tSessionId,\n\tNumberOfFulltimeEmployees,\n\tNumberOfParttimeEmployees,\n\tNumberOfTempSeasonalLeasedEmployees,\n\tNumberOfIndependentContractors,\n\tNumberOfVolunteers,\n\tNumberOfEmployeesLabel,\n\tIncludeIndependentContractorsCoverage AS i_IncludeIndependentContractorsCoverage,\n\tIncludeVolunteersAsAdditonalInsureds AS i_IncludeVolunteersAsAdditonalInsureds,\n\t-- *INF*: DECODE(i_IncludeIndependentContractorsCoverage,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_IncludeIndependentContractorsCoverage,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_IncludeIndependentContractorsCoverage,\n\t-- *INF*: DECODE(i_IncludeVolunteersAsAdditonalInsureds,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_IncludeVolunteersAsAdditonalInsureds,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_IncludeVolunteersAsAdditonalInsureds,\n\tBusinessClassification,\n\tHigherLimitsRequired AS i_HigherLimitsRequired,\n\t-- *INF*: DECODE(i_HigherLimitsRequired,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_HigherLimitsRequired,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_HigherLimitsRequired,\n\tReinsurancePremium,\n\tDefenseCosts,\n\tThirdPartyLiability,\n\tDAndOQuote AS i_DAndOQuote,\n\t-- *INF*: DECODE(i_DAndOQuote,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_DAndOQuote,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_DAndOQuote,\n\tRetroactiveDate,\n\tPriorRetroactiveDate,\n\tPriorAggregateLimit,\n\tTotalNumberOfEmployees,\n\tSICFactor,\n\tHigherLimitMinimumValue,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_WB_EPL_CoverageEmploymentPracticesLiability\n),\nWBEPLCoverageEmploymentPracticesLiabilityStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBEPLCoverageEmploymentPracticesLiabilityStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBEPLCoverageEmploymentPracticesLiabilityStage\n\t(ExtractDate, SourceSystemId, CoverageId, WB_EPL_CoverageEmploymentPracticesLiabilityId, SessionId, NumberOfFulltimeEmployees, NumberOfParttimeEmployees, NumberOfTempSeasonalLeasedEmployees, NumberOfIndependentContractors, NumberOfVolunteers, NumberOfEmployeesLabel, IncludeIndependentContractorsCoverage, IncludeVolunteersAsAdditonalInsureds, BusinessType, BusinessClassification, HigherLimitsRequired, ReinsurancePremium, DefenseCosts, ThirdPartyLiability, DAndOQuote, RetroactiveDate, PriorRetroactiveDate, PriorAggregateLimit, TotalNumberOfEmployees, SICFactor, HigherLimitMinimumValue)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCOVERAGEID, \n\tWB_EPL_COVERAGEEMPLOYMENTPRACTICESLIABILITYID, \n\tSESSIONID, \n\tNUMBEROFFULLTIMEEMPLOYEES, \n\tNUMBEROFPARTTIMEEMPLOYEES, \n\tNUMBEROFTEMPSEASONALLEASEDEMPLOYEES, \n\tNUMBEROFINDEPENDENTCONTRACTORS, \n\tNUMBEROFVOLUNTEERS, \n\tNUMBEROFEMPLOYEESLABEL, \n\to_IncludeIndependentContractorsCoverage AS INCLUDEINDEPENDENTCONTRACTORSCOVERAGE, \n\to_IncludeVolunteersAsAdditonalInsureds AS INCLUDEVOLUNTEERSASADDITONALINSUREDS, \n\tBUSINESSTYPE, \n\tBUSINESSCLASSIFICATION, \n\to_HigherLimitsRequired AS HIGHERLIMITSREQUIRED, \n\tREINSURANCEPREMIUM, \n\tDEFENSECOSTS, \n\tTHIRDPARTYLIABILITY, \n\to_DAndOQuote AS DANDOQUOTE, \n\tRETROACTIVEDATE, \n\tPRIORRETROACTIVEDATE, \n\tPRIORAGGREGATELIMIT, \n\tTOTALNUMBEROFEMPLOYEES, \n\tSICFACTOR, \n\tHIGHERLIMITMINIMUMVALUE\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}