{
    "name": "s_m_Feed_Load_ISSBusinessOwnersExtract_File_RemoveDupOnsetOffset",
    "properties": {
        "activities": [
            {
                "name": "m_Feed_Load_ISSBusinessOwnersExtract_File_RemoveDupO_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_ISSBusinessOwnersExtract_Loss_Unique AS (\n\tSELECT ISBO.ISSBusinessOwnersExtractId, \r\n\tISBO.AuditId, \r\n\tISBO.CreatedDate,\r\n\t ISBO.EDWPremiumMasterCalculationPKId, \r\n\t ISBO.EDWLossMasterCalculationPKId,\r\n\t  ISBO.TypeBureauCode, \r\n\t  ISBO.BureauLineOfInsurance,\r\n\t   ISBO.BureauCompanyNumber,\r\n\t    ISBO.StateProvinceCode,\r\n\t\t ISBO.PremiumMasterRunDate,\r\n\t\t  ISBO.LossMasterRunDate,\r\n\t\t   ISBO.PolicyKey, \r\n\t\t   ISBO.PremiumMasterClassCode,\r\n\t\t    ISBO.LossMasterClassCode, \r\n\t\t\tISBO.ClaimNumber, \r\n\t\t\tISBO.ClaimantNumber, \r\n\t\t\tISBO.RiskTerritoryCode,\r\n\t\t\t ISBO.PolicyEffectiveDate,\r\n\t\t\t  ISBO.CauseOfLoss, \r\n\t\t\t  ISBO.CoverageCode,\r\n\t\t\t   ISBO.ISOFireProtectionCode, \r\n\t\t\t   ISBO.TypeOfPolicyForm,\r\n\t\t\t  ISBO.PremiumMasterDirectWrittenPremiumAmount,\r\n\t\t\t   ISBO.PaidLossAmount,\r\n\t\t\t    ISBO.OutstandingLossAmount,\r\n\t\t\t\t ISBO.PolicyExpirationDate, \r\n\t\t\t\t ISBO.InceptionToDatePaidLossAmount,\r\n\t\t\t\t  ISBO.ClaimantCoverageDetailId,\r\n\t\t\t\t   ISBO.AnnualStatementLineNumber,\r\n\t\t\t\t    ISBO.PolicyLimit, \r\n\t\t\t\t\tISBO.ExposureBasis, ISBO.ConstructionCode,\r\n\t\t\t\t\t ISBO.SprinklerFlag, ISBO.LimitOfInsurance, \r\n\t\t\t\t\t ISBO.WrittenExposure, ISBO.PaidAllocatedLossAdjustmentExpenseAmount,\r\n\t\t\t\t\t  ISBO.OutstandingAllocatedLossAdjustmentExpenseAmount, \r\n\t\t\t\t\t  ISBO.ClaimLossDate, ISBO.ZipPostalCode,\r\n\t\t\t\t\t   ISBO.TransactionEffectiveDate, ISBO.BusinessClassificationCode ,\r\n\t                            ISBO.LocationNumber,\r\n\t                            ISBO.BuildingNumber\r\n\tFROM\r\n\t ISSBusinessOwnersExtract ISBO \r\n\tWHERE ISBO.EDWLossMasterCalculationPKId<>-1  and\r\n\tISBO.LossMasterRunDate\r\n\tbetween \r\n\t DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0)--first day of last Quarter   \r\n\t AND\r\n\t DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\n),\nEXP_Loss_Uinique AS (\n\tSELECT\n\tISSBusinessOwnersExtractId,\n\tAuditId,\n\tCreatedDate,\n\tEDWPremiumMasterCalculationPKId,\n\tEDWLossMasterCalculationPKId,\n\tTypeBureauCode,\n\tBureauLineOfInsurance,\n\tBureauCompanyNumber,\n\tStateProvinceCode,\n\tPremiumMasterRunDate,\n\tLossMasterRunDate,\n\tPolicyKey,\n\tPremiumMasterClassCode,\n\tLossMasterClassCode,\n\tClaimNumber,\n\tClaimantNumber,\n\tRiskTerritoryCode,\n\tPolicyEffectiveDate,\n\tCauseOfLoss,\n\tCoverageCode,\n\tISOFireProtectionCode,\n\tTypeOfPolicyForm,\n\tPremiumMasterDirectWrittenPremiumAmount,\n\tPaidLossAmount,\n\tOutstandingLossAmount,\n\tPolicyExpirationDate,\n\tInceptionToDatePaidLossAmount,\n\tClaimantCoverageDetailId,\n\tAnnualStatementLineNumber,\n\tPolicyLimit,\n\tExposureBasis,\n\tConstructionCode,\n\tSprinklerFlag,\n\tLimitOfInsurance,\n\tWrittenExposure,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount,\n\tClaimLossDate,\n\tZipPostalCode,\n\tTransactionEffectiveDate,\n\tBusinessClassificationCode,\n\tLocationNumber,\n\tBuildingNumber\n\tFROM SQ_ISSBusinessOwnersExtract_Loss_Unique\n),\nSQ_ISSBusinessOwnersExtract_PremiumDup AS (\n\tWITH ROLLUP_TABLE_TEMP\r\n\tAS\r\n\t(SELECT\r\n\t\t\tSUM(PremiumMasterDirectWrittenPremiumAmount) ROLL_UP_DWP_AMT\r\n\t\t\t,MAX(ISSBusinessOwnersExtractId) MAX_ISS_KEY\r\n\t\tFROM ISSBusinessOwnersExtract\r\n\t\tWHERE EDWPremiumMasterCalculationPKId <> -1\r\n\t\tAND (ISSBusinessOwnersExtract.PremiumMasterRunDate\r\n\t\tBETWEEN\r\n\t\tDATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + @{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER}, 0)--first day of last Quarter   \r\n\t\tAND\r\n\t\tDATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + @{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\r\n\t\t)\r\n\t\tGROUP BY CONCAT(TypeBureauCode, BureauLineOfInsurance,\r\n\t\tBureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode,\r\n\t\tLossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, CoverageCode,\r\n\t\tISOFireProtectionCode, TypeOfPolicyForm, ABS(PaidLossAmount), ABS(OutstandingLossAmount),\r\n\t\tPolicyExpirationDate, ABS(InceptionToDatePaidLossAmount), ClaimantCoverageDetailId, AnnualStatementLineNumber, PolicyLimit,\r\n\t\tExposureBasis, ConstructionCode, SprinklerFlag, LimitOfInsurance, ABS(WrittenExposure), ABS(PaidAllocatedLossAdjustmentExpenseAmount),\r\n\t\tABS(OutstandingAllocatedLossAdjustmentExpenseAmount), ClaimLossDate, ZipPostalCode, TransactionEffectiveDate,\r\n\t\tBusinessClassificationCode, LocationNumber, BuildingNumber)\r\n\t\tHAVING COUNT(1) > 1)\r\n\t\r\n\tSELECT\r\n\t\tISBO.ISSBusinessOwnersExtractId\r\n\t\t,ISBO.AuditId\r\n\t\t,ISBO.CreatedDate\r\n\t\t,ISBO.EDWPremiumMasterCalculationPKId\r\n\t\t,ISBO.EDWLossMasterCalculationPKId\r\n\t\t,ISBO.TypeBureauCode\r\n\t\t,ISBO.BureauLineOfInsurance\r\n\t\t,ISBO.BureauCompanyNumber\r\n\t\t,ISBO.StateProvinceCode\r\n\t\t,ISBO.PremiumMasterRunDate\r\n\t\t,ISBO.LossMasterRunDate\r\n\t\t,ISBO.PolicyKey\r\n\t\t,ISBO.PremiumMasterClassCode\r\n\t\t,ISBO.LossMasterClassCode\r\n\t\t,ISBO.ClaimNumber\r\n\t\t,ISBO.ClaimantNumber\r\n\t\t,ISBO.RiskTerritoryCode\r\n\t\t,ISBO.PolicyEffectiveDate\r\n\t\t,ISBO.CauseOfLoss\r\n\t\t,ISBO.CoverageCode\r\n\t\t,ISBO.ISOFireProtectionCode\r\n\t\t,ISBO.TypeOfPolicyForm\r\n\t\t,ROLLUP_TABLE_TEMP.ROLL_UP_DWP_AMT AS PremiumMasterDirectWrittenPremiumAmount\r\n\t\t,ISBO.PaidLossAmount\r\n\t\t,ISBO.OutstandingLossAmount\r\n\t\t,ISBO.PolicyExpirationDate\r\n\t\t,ISBO.InceptionToDatePaidLossAmount\r\n\t\t,ISBO.ClaimantCoverageDetailId\r\n\t\t,ISBO.AnnualStatementLineNumber\r\n\t\t,ISBO.PolicyLimit\r\n\t\t,ISBO.ExposureBasis\r\n\t\t,ISBO.ConstructionCode\r\n\t\t,ISBO.SprinklerFlag\r\n\t\t,ISBO.LimitOfInsurance\r\n\t\t,CASE\r\n\t\t\tWHEN ROLLUP_TABLE_TEMP.ROLL_UP_DWP_AMT > 0 THEN ABS(ISBO.WrittenExposure)\r\n\t\t\tELSE (-1 * ABS(ISBO.WrittenExposure))\r\n\t\tEND AS WrittenExposure\r\n\t\t,ISBO.PaidAllocatedLossAdjustmentExpenseAmount\r\n\t\t,ISBO.OutstandingAllocatedLossAdjustmentExpenseAmount\r\n\t\t,ISBO.ClaimLossDate\r\n\t\t,ISBO.ZipPostalCode\r\n\t\t,ISBO.TransactionEffectiveDate\r\n\t\t,ISBO.BusinessClassificationCode\r\n\t\t,ISBO.LocationNumber\r\n\t\t,ISBO.BuildingNumber\r\n\tFROM ROLLUP_TABLE_TEMP\r\n\tINNER JOIN ISSBusinessOwnersExtract ISBO\r\n\t\tON ISBO.ISSBusinessOwnersExtractid = ROLLUP_TABLE_TEMP.MAX_ISS_KEY\r\n\t\t\tAND ISBO.EDWPremiumMasterCalculationPKId <> -1\r\n\t\t\tAND (ISBO.PremiumMasterRunDate\r\n\t\t\tBETWEEN\r\n\t\t\tDATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + @{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER}, 0)--first day of last Quarter   \r\n\t\t\tAND\r\n\t\t\tDATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE()) + @{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\r\n\t\t\t)\r\n\tWHERE ROLLUP_TABLE_TEMP.ROLL_UP_DWP_AMT <> 0\n),\nEXP_Premium_Dup AS (\n\tSELECT\n\tISSBusinessOwnersExtractId,\n\tAuditId,\n\tCreatedDate,\n\tEDWPremiumMasterCalculationPKId,\n\tEDWLossMasterCalculationPKId,\n\tTypeBureauCode,\n\tBureauLineOfInsurance,\n\tBureauCompanyNumber,\n\tStateProvinceCode,\n\tPremiumMasterRunDate,\n\tLossMasterRunDate,\n\tPolicyKey,\n\tPremiumMasterClassCode,\n\tLossMasterClassCode,\n\tClaimNumber,\n\tClaimantNumber,\n\tRiskTerritoryCode,\n\tPolicyEffectiveDate,\n\tCauseOfLoss,\n\tCoverageCode,\n\tISOFireProtectionCode,\n\tTypeOfPolicyForm,\n\tPremiumMasterDirectWrittenPremiumAmount,\n\tPaidLossAmount,\n\tOutstandingLossAmount,\n\tPolicyExpirationDate,\n\tInceptionToDatePaidLossAmount,\n\tClaimantCoverageDetailId,\n\tAnnualStatementLineNumber,\n\tPolicyLimit,\n\tExposureBasis,\n\tConstructionCode,\n\tSprinklerFlag,\n\tLimitOfInsurance,\n\tWrittenExposure,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount,\n\tClaimLossDate,\n\tZipPostalCode,\n\tTransactionEffectiveDate,\n\tBusinessClassificationCode,\n\tLocationNumber,\n\tBuildingNumber\n\tFROM SQ_ISSBusinessOwnersExtract_PremiumDup\n),\nSQ_ISSBusinessOwnersExtract_Premium_Unique AS (\n\twith premium_unique as\r\n\t(\r\n\tSELECT   \r\n\t   concat( TypeBureauCode, BureauLineOfInsurance,\r\n\t     BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate,LossMasterRunDate, PolicyKey, PremiumMasterClassCode, \r\n\t\t  LossMasterClassCode,ClaimNumber,ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate,CauseOfLoss,CoverageCode,\r\n\t\t  ISOFireProtectionCode,TypeOfPolicyForm,abs(PaidLossAmount),abs(OutstandingLossAmount),\r\n\t\t  PolicyExpirationDate,abs(InceptionToDatePaidLossAmount),ClaimantCoverageDetailId,AnnualStatementLineNumber,PolicyLimit, \r\n\t\t  ExposureBasis,ConstructionCode,SprinklerFlag,LimitOfInsurance,abs(WrittenExposure),abs(PaidAllocatedLossAdjustmentExpenseAmount), \r\n\t\t  abs(OutstandingAllocatedLossAdjustmentExpenseAmount),ClaimLossDate,ZipPostalCode,TransactionEffectiveDate,\r\n\t\t  BusinessClassificationCode,LocationNumber,BuildingNumber) as concat, count(*) as count \r\n\tFROM\r\n\t ISSBusinessOwnersExtract  where EDWPremiumMasterCalculationPKId<>-1  and \r\n\tISSBusinessOwnersExtract .PremiumMasterRunDate\r\n\t between \r\n\t DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0)--first day of last Quarter   \r\n\t AND\r\n\t DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\r\n\t group by concat( TypeBureauCode, BureauLineOfInsurance,\r\n\t     BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate,LossMasterRunDate, PolicyKey, PremiumMasterClassCode, \r\n\t\t  LossMasterClassCode,ClaimNumber,ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate,CauseOfLoss,CoverageCode,\r\n\t\t  ISOFireProtectionCode,TypeOfPolicyForm,abs(PaidLossAmount),abs(OutstandingLossAmount),\r\n\t\t  PolicyExpirationDate,abs(InceptionToDatePaidLossAmount),ClaimantCoverageDetailId,AnnualStatementLineNumber,PolicyLimit, \r\n\t\t  ExposureBasis,ConstructionCode,SprinklerFlag,LimitOfInsurance,abs(WrittenExposure),abs(PaidAllocatedLossAdjustmentExpenseAmount), \r\n\t\t  abs(OutstandingAllocatedLossAdjustmentExpenseAmount),ClaimLossDate,ZipPostalCode,TransactionEffectiveDate,\r\n\t\t  BusinessClassificationCode,LocationNumber,BuildingNumber)  having  count(*)=1\r\n\t )\r\n\t SELECT   ISSBusinessOwnersExtractId,\r\n\t    AuditId,   CreatedDate, \r\n\t    EDWPremiumMasterCalculationPKId,   EDWLossMasterCalculationPKId, \r\n\t    TypeBureauCode,   BureauLineOfInsurance,   BureauCompanyNumber, \r\n\t    StateProvinceCode,   PremiumMasterRunDate,   LossMasterRunDate, \r\n\t    PolicyKey,   PremiumMasterClassCode,   LossMasterClassCode,   ClaimNumber, \r\n\t    ClaimantNumber,   RiskTerritoryCode,   PolicyEffectiveDate,   CauseOfLoss, \r\n\t    CoverageCode,   ISOFireProtectionCode,   TypeOfPolicyForm,   PremiumMasterDirectWrittenPremiumAmount, \r\n\t    PaidLossAmount,   OutstandingLossAmount,   PolicyExpirationDate,   InceptionToDatePaidLossAmount, \r\n\t    ClaimantCoverageDetailId,   AnnualStatementLineNumber,   PolicyLimit,   ExposureBasis,   ConstructionCode, \r\n\t    SprinklerFlag,   LimitOfInsurance,   WrittenExposure,   PaidAllocatedLossAdjustmentExpenseAmount,\r\n\t     OutstandingAllocatedLossAdjustmentExpenseAmount,   ClaimLossDate, \r\n\t     ZipPostalCode,   TransactionEffectiveDate,   BusinessClassificationCode,\r\n\t      LocationNumber,   BuildingNumber \r\n\tFROM\r\n\t ISSBusinessOwnersExtract   inner join   premium_unique b on\r\n\t concat( TypeBureauCode, BureauLineOfInsurance,\r\n\t     BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate,LossMasterRunDate, PolicyKey, PremiumMasterClassCode, \r\n\t\t  LossMasterClassCode,ClaimNumber,ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate,CauseOfLoss,CoverageCode,\r\n\t\t  ISOFireProtectionCode,TypeOfPolicyForm,abs(PaidLossAmount),abs(OutstandingLossAmount),\r\n\t\t  PolicyExpirationDate,abs(InceptionToDatePaidLossAmount),ClaimantCoverageDetailId,AnnualStatementLineNumber,PolicyLimit, \r\n\t\t  ExposureBasis,ConstructionCode,SprinklerFlag,LimitOfInsurance,abs(WrittenExposure),abs(PaidAllocatedLossAdjustmentExpenseAmount), \r\n\t\t  abs(OutstandingAllocatedLossAdjustmentExpenseAmount),ClaimLossDate,ZipPostalCode,TransactionEffectiveDate,\r\n\t\t  BusinessClassificationCode,LocationNumber,BuildingNumber)= b.concat\r\n\tWHERE EDWPremiumMasterCalculationPKId<>-1 and\r\n\tISSBusinessOwnersExtract .PremiumMasterRunDate\r\n\t between \r\n\t DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0)--first day of last Quarter   \r\n\t AND\r\n\t DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\n),\nEXP_Premium_Unique AS (\n\tSELECT\n\tISSBusinessOwnersExtractId,\n\tAuditId,\n\tCreatedDate,\n\tEDWPremiumMasterCalculationPKId,\n\tEDWLossMasterCalculationPKId,\n\tTypeBureauCode,\n\tBureauLineOfInsurance,\n\tBureauCompanyNumber,\n\tStateProvinceCode,\n\tPremiumMasterRunDate,\n\tLossMasterRunDate,\n\tPolicyKey,\n\tPremiumMasterClassCode,\n\tLossMasterClassCode,\n\tClaimNumber,\n\tClaimantNumber,\n\tRiskTerritoryCode,\n\tPolicyEffectiveDate,\n\tCauseOfLoss,\n\tCoverageCode,\n\tISOFireProtectionCode,\n\tTypeOfPolicyForm,\n\tPremiumMasterDirectWrittenPremiumAmount,\n\tPaidLossAmount,\n\tOutstandingLossAmount,\n\tPolicyExpirationDate,\n\tInceptionToDatePaidLossAmount,\n\tClaimantCoverageDetailId,\n\tAnnualStatementLineNumber,\n\tPolicyLimit,\n\tExposureBasis,\n\tConstructionCode,\n\tSprinklerFlag,\n\tLimitOfInsurance,\n\tWrittenExposure,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount,\n\tClaimLossDate,\n\tZipPostalCode,\n\tTransactionEffectiveDate,\n\tBusinessClassificationCode,\n\tLocationNumber,\n\tBuildingNumber\n\tFROM SQ_ISSBusinessOwnersExtract_Premium_Unique\n),\nUN_Union_all AS (\n\tSELECT ISSBusinessOwnersExtractId, AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, CoverageCode, ISOFireProtectionCode, TypeOfPolicyForm, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, PolicyLimit, ExposureBasis, ConstructionCode, SprinklerFlag, LimitOfInsurance, WrittenExposure, PaidAllocatedLossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount, ClaimLossDate, ZipPostalCode, TransactionEffectiveDate, BusinessClassificationCode, LocationNumber, BuildingNumber\n\tFROM EXP_Loss_Uinique\n\tUNION\n\tSELECT ISSBusinessOwnersExtractId, AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, CoverageCode, ISOFireProtectionCode, TypeOfPolicyForm, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, PolicyLimit, ExposureBasis, ConstructionCode, SprinklerFlag, LimitOfInsurance, WrittenExposure, PaidAllocatedLossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount, ClaimLossDate, ZipPostalCode, TransactionEffectiveDate, BusinessClassificationCode, LocationNumber, BuildingNumber\n\tFROM EXP_Premium_Dup\n\tUNION\n\tSELECT ISSBusinessOwnersExtractId, AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, CoverageCode, ISOFireProtectionCode, TypeOfPolicyForm, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, PolicyLimit, ExposureBasis, ConstructionCode, SprinklerFlag, LimitOfInsurance, WrittenExposure, PaidAllocatedLossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount, ClaimLossDate, ZipPostalCode, TransactionEffectiveDate, BusinessClassificationCode, LocationNumber, BuildingNumber\n\tFROM EXP_Premium_Unique\n),\nEXP_Set_FileName AS (\n\tSELECT\n\t-- *INF*: TRUNC(SYSDATE,'DD')\n\tCAST(TRUNC(CURRENT_TIMESTAMP, 'DAY') AS TIMESTAMP_NTZ(0)) AS v_RunDate,\n\t-- *INF*: 'ISS_BO_CL_'||TO_CHAR(v_RunDate,'YYYYMMDD')||'.CSV'\n\t'ISS_BO_CL_' || TO_CHAR(v_RunDate, 'YYYYMMDD') || '.CSV' AS FileName,\n\tISSBusinessOwnersExtractId,\n\tAuditId,\n\tCreatedDate,\n\tEDWPremiumMasterCalculationPKId,\n\tEDWLossMasterCalculationPKId,\n\tTypeBureauCode,\n\tBureauLineOfInsurance,\n\tBureauCompanyNumber,\n\tStateProvinceCode,\n\tPremiumMasterRunDate,\n\tLossMasterRunDate,\n\tPolicyKey,\n\tPremiumMasterClassCode,\n\tLossMasterClassCode,\n\tClaimNumber,\n\tClaimantNumber,\n\tRiskTerritoryCode,\n\tPolicyEffectiveDate,\n\tCauseOfLoss,\n\tCoverageCode,\n\tISOFireProtectionCode,\n\tTypeOfPolicyForm,\n\tPremiumMasterDirectWrittenPremiumAmount,\n\tPaidLossAmount,\n\tOutstandingLossAmount,\n\tPolicyExpirationDate,\n\tInceptionToDatePaidLossAmount,\n\tClaimantCoverageDetailId,\n\tAnnualStatementLineNumber,\n\tPolicyLimit,\n\tExposureBasis,\n\tConstructionCode,\n\tSprinklerFlag,\n\tLimitOfInsurance,\n\tWrittenExposure,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount,\n\tClaimLossDate,\n\tZipPostalCode,\n\tTransactionEffectiveDate,\n\tBusinessClassificationCode,\n\tLocationNumber,\n\tBuildingNumber\n\tFROM UN_Union_all\n),\nLKP_ISSBusinessOwnersExtract AS (\n\tSELECT\n\tlkp_PolicyKey,\n\tPolicyKey,\n\tCoverageCode,\n\tISOFireProtectionCode,\n\tLocationNumber,\n\tlkp_LocationNumber\n\tFROM (\n\t\tSELECT ISBO.CoverageCode as CoverageCode, ISBO.ISOFireProtectionCode as ISOFireProtectionCode, ISBO.PolicyKey as lkp_PolicyKey, ISBO.LocationNumber as lkp_LocationNumber FROM ISSBusinessOwnersExtract ISBO\r\n\t\twhere ISBO.IsoFireProtectionCode is not null \r\n\t\tand ISBO.IsoFireProtectionCode <> '00' and ISBO.IsoFireProtectionCode <> 'N/A' \r\n\t\tand ISBO.CoverageCode <> 'BLKBC'\r\n\t\tand\r\n\t\t((ISBO.PremiumMasterRunDate\r\n\t\t between \r\n\t\t DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0)--first day of last Quarter   \r\n\t\t AND\r\n\t\t DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\r\n\t\t)\r\n\t\tOR\r\n\t\t(ISBO.LossMasterRunDate\r\n\t\tbetween \r\n\t\t DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0)--first day of last Quarter   \r\n\t\t AND\r\n\t\t DATEADD(dd, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0)) -- Last day of last Quarter\r\n\t\t)\r\n\t\t)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY lkp_PolicyKey,lkp_LocationNumber ORDER BY lkp_PolicyKey) = 1\n),\nEXP_ISOProtectionCode AS (\n\tSELECT\n\tLKP_ISSBusinessOwnersExtract.ISOFireProtectionCode AS lkp_ISOFireProtectionCode,\n\tEXP_Set_FileName.ISOFireProtectionCode,\n\tLKP_ISSBusinessOwnersExtract.CoverageCode AS lkp_CoverageCode,\n\tEXP_Set_FileName.CoverageCode,\n\t-- *INF*: ISOFireProtectionCode\r\n\t-- --iif( \r\n\t-- --CoverageCode  <>  'BLKBC',ISOFireProtectionCode,\r\n\t-- --iif(isnull(lkp_ISOFireProtectionCode),'N/A',lkp_ISOFireProtectionCode))\r\n\t-- \r\n\t-- \n\tISOFireProtectionCode AS o_ISOFireProtectionCode\n\tFROM EXP_Set_FileName\n\tLEFT JOIN LKP_ISSBusinessOwnersExtract\n\tON LKP_ISSBusinessOwnersExtract.lkp_PolicyKey = EXP_Set_FileName.PolicyKey AND LKP_ISSBusinessOwnersExtract.lkp_LocationNumber = EXP_Set_FileName.LocationNumber\n),\nSRT_ISS_FlatFile_BO AS (\n\tSELECT\n\tEXP_Set_FileName.FileName, \n\tEXP_Set_FileName.ISSBusinessOwnersExtractId AS WorkISSExtractId, \n\tEXP_Set_FileName.AuditId, \n\tEXP_Set_FileName.CreatedDate, \n\tEXP_Set_FileName.EDWPremiumMasterCalculationPKId, \n\tEXP_Set_FileName.EDWLossMasterCalculationPKId, \n\tEXP_Set_FileName.TypeBureauCode, \n\tEXP_Set_FileName.BureauLineOfInsurance, \n\tEXP_Set_FileName.BureauCompanyNumber, \n\tEXP_Set_FileName.StateProvinceCode, \n\tEXP_Set_FileName.PremiumMasterRunDate, \n\tEXP_Set_FileName.LossMasterRunDate, \n\tEXP_Set_FileName.PolicyKey, \n\tEXP_Set_FileName.PremiumMasterClassCode, \n\tEXP_Set_FileName.LossMasterClassCode, \n\tEXP_Set_FileName.ClaimNumber, \n\tEXP_Set_FileName.ClaimantNumber, \n\tEXP_Set_FileName.RiskTerritoryCode, \n\tEXP_Set_FileName.PolicyEffectiveDate, \n\tEXP_Set_FileName.CauseOfLoss, \n\tEXP_Set_FileName.CoverageCode, \n\tEXP_ISOProtectionCode.o_ISOFireProtectionCode AS ISOFireProtectionCode, \n\tEXP_Set_FileName.TypeOfPolicyForm, \n\tEXP_Set_FileName.PremiumMasterDirectWrittenPremiumAmount, \n\tEXP_Set_FileName.PaidLossAmount, \n\tEXP_Set_FileName.OutstandingLossAmount, \n\tEXP_Set_FileName.PolicyExpirationDate, \n\tEXP_Set_FileName.InceptionToDatePaidLossAmount, \n\tEXP_Set_FileName.ClaimantCoverageDetailId, \n\tEXP_Set_FileName.AnnualStatementLineNumber, \n\tEXP_Set_FileName.PolicyLimit, \n\tEXP_Set_FileName.ExposureBasis, \n\tEXP_Set_FileName.ConstructionCode, \n\tEXP_Set_FileName.SprinklerFlag, \n\tEXP_Set_FileName.LimitOfInsurance, \n\tEXP_Set_FileName.WrittenExposure, \n\tEXP_Set_FileName.PaidAllocatedLossAdjustmentExpenseAmount, \n\tEXP_Set_FileName.OutstandingAllocatedLossAdjustmentExpenseAmount, \n\tEXP_Set_FileName.ClaimLossDate, \n\tEXP_Set_FileName.ZipPostalCode, \n\tEXP_Set_FileName.TransactionEffectiveDate, \n\tEXP_Set_FileName.BusinessClassificationCode, \n\tEXP_Set_FileName.LocationNumber, \n\tEXP_Set_FileName.BuildingNumber\n\tFROM EXP_Set_FileName\n\tORDER BY PolicyKey ASC, PremiumMasterClassCode ASC, CoverageCode ASC, AnnualStatementLineNumber ASC, ZipPostalCode ASC\n),\nISSFlatFile_BO AS (\n\tINSERT INTO ISSFlatFile_BO\n\t(FileName, WorkISSExtractId, AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, CoverageCode, ISOFireProtectionCode, TypeOfPolicyForm, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, PolicyLimit, ExposureBasis, ConstructionCode, SprinklerFlag, LimitOfInsurance, WrittenExposure, PaidAllocatedLossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount, ClaimLossDate, ZipPostalCode, TransactionEffectiveDate, BusinessClassificationCode, LocationNumber, BuildingNumber)\n\tSELECT \n\tFILENAME, \n\tWORKISSEXTRACTID, \n\tAUDITID, \n\tCREATEDDATE, \n\tEDWPREMIUMMASTERCALCULATIONPKID, \n\tEDWLOSSMASTERCALCULATIONPKID, \n\tTYPEBUREAUCODE, \n\tBUREAULINEOFINSURANCE, \n\tBUREAUCOMPANYNUMBER, \n\tSTATEPROVINCECODE, \n\tPREMIUMMASTERRUNDATE, \n\tLOSSMASTERRUNDATE, \n\tPOLICYKEY, \n\tPREMIUMMASTERCLASSCODE, \n\tLOSSMASTERCLASSCODE, \n\tCLAIMNUMBER, \n\tCLAIMANTNUMBER, \n\tRISKTERRITORYCODE, \n\tPOLICYEFFECTIVEDATE, \n\tCAUSEOFLOSS, \n\tCOVERAGECODE, \n\tISOFIREPROTECTIONCODE, \n\tTYPEOFPOLICYFORM, \n\tPREMIUMMASTERDIRECTWRITTENPREMIUMAMOUNT, \n\tPAIDLOSSAMOUNT, \n\tOUTSTANDINGLOSSAMOUNT, \n\tPOLICYEXPIRATIONDATE, \n\tINCEPTIONTODATEPAIDLOSSAMOUNT, \n\tCLAIMANTCOVERAGEDETAILID, \n\tANNUALSTATEMENTLINENUMBER, \n\tPOLICYLIMIT, \n\tEXPOSUREBASIS, \n\tCONSTRUCTIONCODE, \n\tSPRINKLERFLAG, \n\tLIMITOFINSURANCE, \n\tWRITTENEXPOSURE, \n\tPAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tOUTSTANDINGALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tCLAIMLOSSDATE, \n\tZIPPOSTALCODE, \n\tTRANSACTIONEFFECTIVEDATE, \n\tBUSINESSCLASSIFICATIONCODE, \n\tLOCATIONNUMBER, \n\tBUILDINGNUMBER\n\tFROM SRT_ISS_FlatFile_BO\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "FIRST_DAY_OF_THE_QUARTER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LAST_DAY_OF_THE_QUARTER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}