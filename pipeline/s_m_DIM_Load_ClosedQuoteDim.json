{
    "name": "s_m_DIM_Load_ClosedQuoteDim",
    "properties": {
        "activities": [
            {
                "name": "m_DIM_Load_ClosedQuoteDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Quote AS (\n\tSELECT\n\t\tQuoteId,\n\t\tQuoteAKId,\n\t\tQuoteNumber,\n\t\tQuoteReasonClosedCode,\n\t\tQuoteReasonClosedComments\n\tFROM Quote\n\tWHERE Quote.QuoteStatusCode='Closed' and \r\n\tQuote.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_Values AS (\n\tSELECT\n\tQuoteId AS i_QuoteId,\n\tQuoteAKId AS i_QuoteAKId,\n\tQuoteNumber AS i_QuoteNumber,\n\tQuoteReasonClosedCode AS i_QuoteReasonClosedCode,\n\tQuoteReasonClosedComments AS i_QuoteReasonClosedComments,\n\ti_QuoteId AS o_QuoteId,\n\ti_QuoteAKId AS o_QuoteAKId,\n\t-- *INF*: IIF(ISNULL(i_QuoteNumber) or IS_SPACES(i_QuoteNumber)  or LENGTH(i_QuoteNumber)=0,'N/A',LTRIM(RTRIM(i_QuoteNumber)))\n\tIFF(\n\t    i_QuoteNumber IS NULL\n\t    or LENGTH(i_QuoteNumber)>0\n\t    and TRIM(i_QuoteNumber)=''\n\t    or LENGTH(i_QuoteNumber) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_QuoteNumber))\n\t) AS o_QuoteNumber,\n\t-- *INF*: IIF(ISNULL(i_QuoteReasonClosedCode) or IS_SPACES(i_QuoteReasonClosedCode)   or LENGTH(i_QuoteReasonClosedCode) =0,'-1',LTRIM(RTRIM(i_QuoteReasonClosedCode)))\n\tIFF(\n\t    i_QuoteReasonClosedCode IS NULL\n\t    or LENGTH(i_QuoteReasonClosedCode)>0\n\t    and TRIM(i_QuoteReasonClosedCode)=''\n\t    or LENGTH(i_QuoteReasonClosedCode) = 0,\n\t    '-1',\n\t    LTRIM(RTRIM(i_QuoteReasonClosedCode))\n\t) AS o_QuoteReasonClosedCode,\n\t-- *INF*: IIF(ISNULL(i_QuoteReasonClosedComments) or IS_SPACES(i_QuoteReasonClosedComments)   or LENGTH(i_QuoteReasonClosedComments) =0,'N/A',LTRIM(RTRIM(i_QuoteReasonClosedComments)))\n\tIFF(\n\t    i_QuoteReasonClosedComments IS NULL\n\t    or LENGTH(i_QuoteReasonClosedComments)>0\n\t    and TRIM(i_QuoteReasonClosedComments)=''\n\t    or LENGTH(i_QuoteReasonClosedComments) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_QuoteReasonClosedComments))\n\t) AS o_QuoteReasonClosedComments\n\tFROM SQ_Quote\n),\nLKP_ClosedQuoteDim AS (\n\tSELECT\n\tClosedQuoteDimId,\n\tEDWQuotePKId\n\tFROM (\n\t\tSELECT \n\t\t\tClosedQuoteDimId,\n\t\t\tEDWQuotePKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ClosedQuoteDim\n\t\tWHERE EXISTS (\r\n\t\tSELECT 1 FROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\tWHERE q.QuoteAKId=ClosedQuoteDim.EDWQuoteAKId\r\n\t\tAND q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuotePKId ORDER BY ClosedQuoteDimId) = 1\n),\nLKP_SupQuoteClosedReason AS (\n\tSELECT\n\tQuoteReasonClosedDescription,\n\tQuoteReasonClosedCode\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteReasonClosedDescription,\n\t\t\tQuoteReasonClosedCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupQuoteClosedReason\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteReasonClosedCode ORDER BY QuoteReasonClosedDescription) = 1\n),\nEXP_ExistingChecking AS (\n\tSELECT\n\tLKP_ClosedQuoteDim.ClosedQuoteDimId AS lkp_ClosedQuoteDimId,\n\tEXP_Values.o_QuoteId AS i_QuoteId,\n\tEXP_Values.o_QuoteAKId AS i_QuoteAKId,\n\tEXP_Values.o_QuoteNumber AS i_QuoteNumber,\n\tEXP_Values.o_QuoteReasonClosedCode AS i_QuoteReasonClosedCode,\n\tEXP_Values.o_QuoteReasonClosedComments AS i_QuoteReasonClosedComments,\n\tLKP_SupQuoteClosedReason.QuoteReasonClosedDescription AS i_QuoteReasonClosedDescription,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_ClosedQuoteDimId), 'Insert',\r\n\t-- 'Update'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    lkp_ClosedQuoteDimId IS NULL, 'Insert',\n\t    'Update'\n\t) AS v_ChangeFlag,\n\tv_ChangeFlag AS ChangeFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')\n\tTO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')\n\tTO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\ti_QuoteNumber AS QuoteNumber,\n\ti_QuoteReasonClosedCode AS QuoteReasonClosedCode,\n\t-- *INF*: IIF(NOT ISNULL(i_QuoteReasonClosedDescription),i_QuoteReasonClosedDescription,'N/A')\r\n\t-- \r\n\t-- \n\tIFF(i_QuoteReasonClosedDescription IS NOT NULL, i_QuoteReasonClosedDescription, 'N/A') AS QuoteReasonClosedDescription,\n\ti_QuoteReasonClosedComments AS QuoteReasonClosedComments,\n\ti_QuoteAKId AS EDWQuoteAKID,\n\ti_QuoteId AS EDWQuotePKID\n\tFROM EXP_Values\n\tLEFT JOIN LKP_ClosedQuoteDim\n\tON LKP_ClosedQuoteDim.EDWQuotePKId = EXP_Values.o_QuoteId\n\tLEFT JOIN LKP_SupQuoteClosedReason\n\tON LKP_SupQuoteClosedReason.QuoteReasonClosedCode = EXP_Values.o_QuoteReasonClosedCode\n),\nRTR_InsertUpdate AS (\n\tSELECT\n\tlkp_ClosedQuoteDimId,\n\tChangeFlag,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreatedDate,\n\tModifiedDate,\n\tQuoteNumber,\n\tQuoteReasonClosedCode,\n\tQuoteReasonClosedDescription,\n\tQuoteReasonClosedComments,\n\tEDWQuoteAKID,\n\tEDWQuotePKID\n\tFROM EXP_ExistingChecking\n),\nRTR_InsertUpdate_Insert AS (SELECT * FROM RTR_InsertUpdate WHERE ChangeFlag = 'Insert'),\nRTR_InsertUpdate_Update AS (SELECT * FROM RTR_InsertUpdate WHERE ChangeFlag = 'Update'),\nUPD_Insert AS (\n\tSELECT\n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tQuoteNumber, \n\tQuoteReasonClosedCode, \n\tQuoteReasonClosedDescription, \n\tQuoteReasonClosedComments, \n\tEDWQuoteAKID, \n\tEDWQuotePKID\n\tFROM RTR_InsertUpdate_Insert\n),\nTGT_ClosedQuoteDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ClosedQuoteDim\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, QuoteNumber, QuoteReasonClosedCode, QuoteReasonClosedDescription, QuoteReasonClosedComments, EDWQuoteAKId, EDWQuotePKId)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAuditID AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tQUOTENUMBER, \n\tQUOTEREASONCLOSEDCODE, \n\tQUOTEREASONCLOSEDDESCRIPTION, \n\tQUOTEREASONCLOSEDCOMMENTS, \n\tEDWQuoteAKID AS EDWQUOTEAKID, \n\tEDWQuotePKID AS EDWQUOTEPKID\n\tFROM UPD_Insert\n),\nUPD_Update AS (\n\tSELECT\n\tlkp_ClosedQuoteDimId AS ClosedQuoteDimId, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tQuoteNumber, \n\tQuoteReasonClosedCode, \n\tQuoteReasonClosedDescription, \n\tQuoteReasonClosedComments, \n\tEDWQuoteAKID, \n\tEDWQuotePKID\n\tFROM RTR_InsertUpdate_Update\n),\nTGT_ClosedQuoteDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ClosedQuoteDim AS T\n\tUSING UPD_Update AS S\n\tON T.ClosedQuoteDimId = S.ClosedQuoteDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.QuoteNumber = S.QuoteNumber, T.QuoteReasonClosedCode = S.QuoteReasonClosedCode, T.QuoteReasonClosedDescription = S.QuoteReasonClosedDescription, T.QuoteReasonClosedComments = S.QuoteReasonClosedComments, T.EDWQuoteAKId = S.EDWQuoteAKID, T.EDWQuotePKId = S.EDWQuotePKID\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Quote DataMart/"
        },
        "annotations": []
    }
}