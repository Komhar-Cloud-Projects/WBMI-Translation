{
    "name": "s_m_POL_FEED_Load_WCPOLS_02_03_05_Record",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WCPOLS_02_03_05_Record",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nlkp_WorkWCParty AS (\n\tSELECT\n\tAOIEntityType,\n\tName,\n\tWCTrackHistoryID,\n\tPartyAssociationType\n\tFROM (\n\t\tSELECT AOIEntityType as AOIEntityType,\r\n\t\t Replace( REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t\t       REPLACE(REPLACE(REPLACE(REPLACE( REPLACE(Name, ',', ' '),\r\n\t\t        '!',''),'@',''),'#',''),'$',''),'%',''),\r\n\t\t        '^',''),'&',''),'*',''),' ',''),'.',' ')  as Name,\r\n\t\t WCTrackHistoryID as WCTrackHistoryID, PartyAssociationType as PartyAssociationType \r\n\t\tFROM dbo.WorkWCParty\r\n\t\twhere PartyAssociationType in ('PrimaryEntity','SecondaryEntity','AdditionalInsured')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Name,WCTrackHistoryID,PartyAssociationType ORDER BY AOIEntityType) = 1\n),\nLKP_WCPOLS02Record AS (\n\tSELECT\n\tNameLinkIdentifier,\n\tIn_PolicyKey,\n\tIn_Name,\n\tPolicyKey,\n\tNameOfInsured\n\tFROM (\n\t\tselect B.PolicyKey AS PolicyKey,\r\n\t\tA.NameOfInsured AS NameOfInsured,\r\n\t\tA.NameLinkIdentifier AS NameLinkIdentifier\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WCPols02Record A\r\n\t\tinner join( select A.PolicyKey,max(WCTrackHistoryID) WCTrackHistoryID from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory A\r\n\t\twhere exists (select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory B where A.WCTrackHistoryID=B.WCTrackHistoryID and B.Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID})\r\n\t\tgroup by PolicyKey) B\r\n\t\ton A.WCTrackHistoryID=B.WCTrackHistoryID\r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tselect B.PolicyKey AS PolicyKey,\r\n\t\t'' AS NameOfInsured,\r\n\t\tmax(A.NameLinkIdentifier) AS NameLinkIdentifier\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WCPols02Record A\r\n\t\tinner join( select A.PolicyKey,max(WCTrackHistoryID) WCTrackHistoryID from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory A\r\n\t\twhere exists (select 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory B where A.WCTrackHistoryID=B.WCTrackHistoryID and B.Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID})\r\n\t\tgroup by PolicyKey) B\r\n\t\ton A.WCTrackHistoryID=B.WCTrackHistoryID\r\n\t\tgroup by B.PolicyKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,NameOfInsured ORDER BY NameLinkIdentifier) = 1\n),\nLKP_SupWCPOLS AS (\n\tSELECT\n\tWCPOLSCode,\n\tSourcesystemID,\n\tSourceCode,\n\tTableName,\n\tProcessName,\n\ti_SourcesystemID,\n\ti_SourceCode,\n\ti_TableName,\n\ti_ProcessName\n\tFROM (\n\t\tSELECT\r\n\t\t     WCPOLSCode as WCPOLSCode\r\n\t\t\t,SourcesystemID as SourcesystemID\r\n\t\t\t,SourceCode as SourceCode\r\n\t\t\t,TableName as TableName\r\n\t\t\t,ProcessName as ProcessName\r\n\t\tFROM SupWCPOLS\r\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SourcesystemID,SourceCode,TableName,ProcessName ORDER BY WCPOLSCode) = 1\n),\nSQ_WorkWCParty AS (\n\tSelect * from (\r\n\tSelect B.*,\r\n\tfirst_value(B.FirstName) OVER\t(PARTITION BY WCTrackHistoryID,PartyOrder ORDER BY WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq) FFN,\r\n\tfirst_value(B.LastName) OVER\t(PARTITION BY WCTrackHistoryID,PartyOrder ORDER BY WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq) FLN,\r\n\tfirst_value(B.MiddleName) OVER\t(PARTITION BY WCTrackHistoryID,PartyOrder ORDER BY WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq) FMN,\r\n\tfirst_value(B.PhoneNumber) OVER\t(PARTITION BY WCTrackHistoryID,PartyOrder ORDER BY WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq) ph,\r\n\tRank () OVER\t(PARTITION BY WCTrackHistoryID,Name,PartyOrder ORDER BY WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq) SEQ\r\n\tfrom \r\n\t(\r\n\tSelect  A.WCTrackHistoryID\t\t\t\r\n\t,ltrim(rtrim(B.DoingBusinessAs))\tName\t\t\t\t\r\n\t,B.FEIN\t\t\r\n\t,B.PartyAssociationType\t\t\t\t\t\r\n\t, CASE WHEN B.PartyAssociationType= 'Account' THEN ISNULL(B.EntityType,B.AOIEntityType) ELSE B.AOIEntityType END as EntityType\r\n\t,ISNULL(B.EntityOtherType,B.AOIEntityOtherType) AOIEntityOtherType\t\t\t\r\n\t,A.TransactionEffectiveDate\t\r\n\t,A.TransactionExpirationDate\t\r\n\t,ISNULL(B.BusinessOrIndividual,0) BusinessOrIndividual\r\n\t,case when B.PartyAssociationType in ('Account','PrimaryEntity') then 1\r\n\twhen B.PartyAssociationType='SecondaryEntity' then 2\r\n\telse 3 end PartyOrder\r\n\t,A.PolicyKey\r\n\t,B.PhoneNumber\r\n\t,B.Email\r\n\t,ISNULL(rtrim(ltrim(B.LastName)),'') LastName\r\n\t,ISNULL(rtrim(ltrim(B.FirstName)),'') FirstName\r\n\t,ISNULL(rtrim(ltrim(B.MiddleName)),'') MiddleName\r\n\t,Deleted\r\n\t,2 Order_Seq\r\n\t, Replace( REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t       REPLACE(REPLACE(REPLACE(REPLACE( REPLACE(Name, ',', ' '),\r\n\t        '!',''),'@',''),'#',''),'$',''),'%',''),\r\n\t        '^',''),'&',''),'*',''),' ',''),'.',' ') as Name_Cleansed\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCPolicy A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty B\r\n\ton A.WCTrackHistoryID=B.WCTrackHistoryID \r\n\twhere B.PartyAssociationType in ('Account','PrimaryEntity','SecondaryEntity')\r\n\tand B.DoingBusinessAs is not null and rtrim(ltrim(B.DoingBusinessAs))<>''\r\n\tand B.Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tand ltrim(rtrim(B.DoingBusinessAs)) is not null\r\n\t@{pipeline().parameters.WHERE_CLAUSE_02}\r\n\t\r\n\tUNION\r\n\t\r\n\tselect * from (Select A.WCTrackHistoryID\t\t\t\r\n\t,case when BusinessOrIndividual=1 and B.EntityType='Partnership' then \r\n\tcase when rtrim(ltrim(LastName)) is null and rtrim(ltrim(FirstName)) is null and rtrim(ltrim(MiddleName)) is null \r\n\tthen  rtrim(ltrim(Name)) else ISNULL(rtrim(ltrim(LastName)),'')+' '+ISNULL(rtrim(ltrim(FirstName)),'')+' '+ISNULL(rtrim(ltrim(MiddleName)),'') end else rtrim(ltrim(Name)) end  Name\r\n\t ,B.FEIN\r\n\t,B.PartyAssociationType\t\t\t\t\t\t\r\n\t, CASE WHEN B.PartyAssociationType= 'Account' THEN ISNULL(B.EntityType,B.AOIEntityType) ELSE B.AOIEntityType END as EntityType\r\n\t,ISNULL(B.EntityOtherType,B.AOIEntityOtherType) AOIEntityOtherType\t\t\t\t\r\n\t,A.TransactionEffectiveDate\t\r\n\t,A.TransactionExpirationDate\t\r\n\t,ISNULL(B.BusinessOrIndividual,0) BusinessOrIndividual\r\n\t,case when B.PartyAssociationType in ('Account','PrimaryEntity') then 1\r\n\twhen B.PartyAssociationType='SecondaryEntity' then 2\r\n\telse 3 end PartyOrder\r\n\t,A.PolicyKey\r\n\t,B.PhoneNumber\r\n\t,B.Email\r\n\t,ISNULL(rtrim(ltrim(B.LastName)),'') LastName\r\n\t,ISNULL(rtrim(ltrim(B.FirstName)),'') FirstName\r\n\t,ISNULL(rtrim(ltrim(B.MiddleName)),'') MiddleName\r\n\t,Deleted\r\n\t, 1 Order_Seq\r\n\t, Replace( REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(\r\n\t       REPLACE(REPLACE(REPLACE(REPLACE( REPLACE(Name, ',', ' '),\r\n\t        '!',''),'@',''),'#',''),'$',''),'%',''),\r\n\t        '^',''),'&',''),'*',''),' ',''),'.',' ')  as Name_Cleansed\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCPolicy A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty B\r\n\ton A.WCTrackHistoryID=B.WCTrackHistoryID \r\n\twhere B.PartyAssociationType in ('Account','PrimaryEntity','SecondaryEntity')\r\n\tand B.Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tand case when B.BusinessOrIndividual=1 then \r\n\tcase when rtrim(ltrim(B.LastName)) is null and rtrim(ltrim(B.FirstName)) is null and rtrim(ltrim(B.MiddleName)) is null \r\n\tthen  rtrim(ltrim(B.Name)) else ISNULL(rtrim(ltrim(B.LastName)),'')+','+ISNULL(rtrim(ltrim(B.FirstName)),'')+','+ISNULL(rtrim(ltrim(B.MiddleName)),'') end else rtrim(ltrim(B.Name)) end is not null\r\n\t@{pipeline().parameters.WHERE_CLAUSE_02} ) A\r\n\t )B ) C\r\n\t where SEQ=1\r\n\tand case when C.PartyAssociationType<>'Account' and (ISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')=REPLACE(Name,' ','')) then 1 else 0 end =0\r\n\tand case when C.PartyAssociationType<>'Account' and \r\n\t(ISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')=REPLACE(Name,' ','') or\r\n\tISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')=REPLACE(Name,' ','')) then 1 else 0 end =0\r\n\tand case when C.PartyAssociationType<>'Account' and \r\n\t(ISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FFN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FFN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')=REPLACE(Name,' ','')) then 1 else 0 end =0\r\n\tand case when C.PartyAssociationType<>'Account' and \r\n\t(ISNULL(rtrim(ltrim(FMN)),'')+''+ISNULL(rtrim(ltrim(FLN)),'')=REPLACE(Name,' ','') or \r\n\tISNULL(rtrim(ltrim(FLN)),'')+''+ISNULL(rtrim(ltrim(FMN)),'')=REPLACE(Name,' ','')) then 1 else 0 end =0\r\n\torder by WCTrackHistoryID,PartyOrder,PartyAssociationType,Order_Seq--,Name\n),\nEXP_SrcDataCollect_Part AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tName,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- BusinessOrIndividual='T' AND Order_Seq='1' AND ISNULL(LTRIM(RTRIM(LastName))) AND ISNULL(LTRIM(RTRIM(FirstName))) AND ISNULL(LTRIM(RTRIM(MiddleName))), LTRIM(RTRIM(Name)),\r\n\t-- BusinessOrIndividual='T' AND Order_Seq='1', LastName || ' ' || FirstName || ' ' || MiddleName,\r\n\t-- LTRIM(RTRIM(Name))\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    BusinessOrIndividual = 'T' AND Order_Seq = '1' AND LTRIM(RTRIM(LastName)) IS NULL AND LTRIM(RTRIM(FirstName)) IS NULL AND LTRIM(RTRIM(MiddleName)) IS NULL, LTRIM(RTRIM(Name)),\n\t    BusinessOrIndividual = 'T' AND Order_Seq = '1', LastName || ' ' || FirstName || ' ' || MiddleName,\n\t    LTRIM(RTRIM(Name))\n\t) AS v_NameIndicator,\n\t-- *INF*: LTRIM(RTRIM(Upper(REPLACECHR(1,Name,chr(13)||chr(10),''))))\n\tLTRIM(RTRIM(Upper(REGEXP_REPLACE(Name,chr(13) || chr(10),'')))) AS o_Name,\n\t-- *INF*: IIF(WCTrackHistoryID=v_WCTrackHistoryID,\r\n\t-- IIF(Upper(REPLACECHR(1,Name,chr(13)||chr(10),''))=Upper(v_Name),'Y','N'),'N')\n\tIFF(\n\t    WCTrackHistoryID = v_WCTrackHistoryID,\n\t    IFF(\n\t        Upper(REGEXP_REPLACE(Name,chr(13) || chr(10),'')) = Upper(v_Name), 'Y', 'N'\n\t    ),\n\t    'N'\n\t) AS v_Party_Delete_Flag,\n\tWCTrackHistoryID AS v_WCTrackHistoryID,\n\t-- *INF*: REPLACECHR(1,Name,chr(13)||chr(10),'')\n\tREGEXP_REPLACE(Name,chr(13) || chr(10),'') AS v_Name,\n\tFEIN,\n\tPartyAssociationType,\n\tEntityType,\n\tEntityOtherType,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tBusinessOrIndividual,\n\tPhoneNumber,\n\tPartyOrder,\n\tPolicyKey,\n\tOrder_Seq,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tDeleted AS DeletedName_Flag,\n\tv_Party_Delete_Flag AS o_Party_Delete_Flag,\n\tFirst_Value_FirstName,\n\tFirst_Value_LastName,\n\tFirst_Value_MiddleName,\n\tSeq,\n\tName_cleansed,\n\t-- *INF*: iif( (LENGTH(First_Value_FirstName) > 0 and LENGTH(First_Value_LastName) > 0) , 1,0)\n\tIFF((LENGTH(First_Value_FirstName) > 0 and LENGTH(First_Value_LastName) > 0), 1, 0) AS v_name_flag,\n\t-- *INF*: REPLACECHR(1,First_Value_LastName,chr(44),' ')\n\tREGEXP_REPLACE(First_Value_LastName,chr(44),' ') AS v_lastname_cleanup,\n\t-- *INF*:  iif ( (not isnull(v_lastname_cleanup) and not isnull(First_Value_FirstName)), CONCAT( CONCAT( v_lastname_cleanup, ', ' ), First_Value_FirstName ) , ' ')\n\tIFF(\n\t    (v_lastname_cleanup IS NULL and First_Value_FirstName IS NOT NOT NULL),\n\t    CONCAT(CONCAT(v_lastname_cleanup, ', '), First_Value_FirstName),\n\t    ' '\n\t) AS v_lastname_firstname,\n\t-- *INF*:  iif ( (LENGTH(First_Value_MiddleName) > 0),CONCAT( CONCAT( v_lastname_firstname, ', ' ), First_Value_MiddleName ),v_lastname_firstname)\n\tIFF(\n\t    (LENGTH(First_Value_MiddleName) > 0),\n\t    CONCAT(CONCAT(v_lastname_firstname, ', '), First_Value_MiddleName),\n\t    v_lastname_firstname\n\t) AS v_Name_Individual,\n\t-- *INF*: LTRIM(RTRIM(Upper(REPLACECHR(1,Name,chr(13)||chr(10),''))))\n\tLTRIM(RTRIM(Upper(REGEXP_REPLACE(Name,chr(13) || chr(10),'')))) AS v_name_entity,\n\t-- *INF*: IIF(  (v_name_flag=1 and EntityType='Individual')  , upper(v_Name_Individual),v_name_entity)\n\tIFF(\n\t    (v_name_flag = 1 and EntityType = 'Individual'), upper(v_Name_Individual), v_name_entity\n\t) AS NameInsured,\n\tFirst_Value_PhoneNumber,\n\tEmail\n\tFROM SQ_WorkWCParty\n),\nEXP_Set_NameLinkIdentifier AS (\n\tSELECT\n\tWCTrackHistoryID,\n\to_Name AS Name,\n\t-- *INF*: TO_Integer(IIF(ISNULL(:LKP.LKP_WCPOLS02RECORD(PolicyKey,Name)),'0',:LKP.LKP_WCPOLS02RECORD(PolicyKey,Name)))\n\tCAST(\n\t    IFF(\n\t        LKP_WCPOLS02RECORD_PolicyKey_Name.NameLinkIdentifier IS NULL, '0',\n\t        LKP_WCPOLS02RECORD_PolicyKey_Name.NameLinkIdentifier\n\t    ) AS INTEGER) AS lkp_NameLinkIdentifier,\n\t-- *INF*: TO_INTEGER(\r\n\t-- IIF(ISNULL(:LKP.LKP_WCPOLS02RECORD(PolicyKey,'')),'0',:LKP.LKP_WCPOLS02RECORD(PolicyKey,''))\r\n\t-- )\r\n\t-- --TO_INTEGER(IIF(ISNULL(:LKP.LKP_WCPOLS02RECORD(PolicyKey,'')),'001',:LKP.LKP_WCPOLS02RECORD(PolicyKey,'')))\n\tCAST(\n\t    IFF(\n\t        LKP_WCPOLS02RECORD_PolicyKey.NameLinkIdentifier IS NULL, '0',\n\t        LKP_WCPOLS02RECORD_PolicyKey.NameLinkIdentifier\n\t    ) AS INTEGER) AS lkp_NameLinkIdentifier_Seed,\n\t-- *INF*: IIF(WCTrackHistoryID=v_prev_WCTrackHistoryID,v_count+1,1)\n\tIFF(WCTrackHistoryID = v_prev_WCTrackHistoryID, v_count + 1, 1) AS v_count,\n\t-- *INF*: Decode(TRUE,\r\n\t-- lkp_NameLinkIdentifier<>0,lkp_NameLinkIdentifier,\r\n\t-- lkp_NameLinkIdentifier_Seed+v_count)\n\tDecode(\n\t    TRUE,\n\t    lkp_NameLinkIdentifier <> 0, lkp_NameLinkIdentifier,\n\t    lkp_NameLinkIdentifier_Seed + v_count\n\t) AS v_NameLinkNumber,\n\t-- *INF*: lpad(to_char(v_NameLinkNumber),3,'0')\n\tlpad(to_char(v_NameLinkNumber), 3, '0') AS o_NameLinkIdentifier,\n\tWCTrackHistoryID AS v_prev_WCTrackHistoryID,\n\tFEIN,\n\tEntityType,\n\tEntityOtherType,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tBusinessOrIndividual,\n\tPolicyKey,\n\tFirst_Value_PhoneNumber AS PhoneNumber,\n\tOrder_Seq,\n\tDeletedName_Flag,\n\tName_cleansed,\n\tNameInsured,\n\tEmail\n\tFROM EXP_SrcDataCollect_Part\n\tLEFT JOIN LKP_WCPOLS02RECORD LKP_WCPOLS02RECORD_PolicyKey_Name\n\tON LKP_WCPOLS02RECORD_PolicyKey_Name.PolicyKey = PolicyKey\n\tAND LKP_WCPOLS02RECORD_PolicyKey_Name.NameOfInsured = Name\n\n\tLEFT JOIN LKP_WCPOLS02RECORD LKP_WCPOLS02RECORD_PolicyKey\n\tON LKP_WCPOLS02RECORD_PolicyKey.PolicyKey = PolicyKey\n\tAND LKP_WCPOLS02RECORD_PolicyKey.NameOfInsured = ''\n\n),\nSQ_WCPols00Record AS (\n\tSELECT\r\n\t\tWCTrackHistoryID,\r\n\t\tLinkData,\r\n\t     AuditId\r\n\tFROM dbo.WCPols00Record\r\n\tWHERE 1=1\r\n\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\tORDER BY WCTrackHistoryID\n),\nJNR_Party_TO_LinkData AS (SELECT\n\tSQ_WCPols00Record.WCTrackHistoryID, \n\tSQ_WCPols00Record.LinkData, \n\tSQ_WCPols00Record.AuditId, \n\tEXP_Set_NameLinkIdentifier.WCTrackHistoryID AS WCTrackHistoryID1, \n\tEXP_Set_NameLinkIdentifier.Name, \n\tEXP_Set_NameLinkIdentifier.FEIN, \n\tEXP_Set_NameLinkIdentifier.PartyAssociationType, \n\tEXP_Set_NameLinkIdentifier.EntityType, \n\tEXP_Set_NameLinkIdentifier.EntityOtherType, \n\tEXP_Set_NameLinkIdentifier.TransactionEffectiveDate, \n\tEXP_Set_NameLinkIdentifier.TransactionExpirationDate, \n\tEXP_Set_NameLinkIdentifier.BusinessOrIndividual, \n\tEXP_Set_NameLinkIdentifier.o_NameLinkIdentifier AS NameLinkIdentifier, \n\tEXP_Set_NameLinkIdentifier.DeletedName_Flag, \n\tEXP_Set_NameLinkIdentifier.Order_Seq, \n\tEXP_Set_NameLinkIdentifier.Name_cleansed, \n\tEXP_Set_NameLinkIdentifier.NameInsured\n\tFROM EXP_Set_NameLinkIdentifier\n\tINNER JOIN SQ_WCPols00Record\n\tON SQ_WCPols00Record.WCTrackHistoryID = EXP_Set_NameLinkIdentifier.WCTrackHistoryID\n),\nEXP_Record02_DataPrep AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tLinkData,\n\tName,\n\tFEIN,\n\tPartyAssociationType,\n\tEntityType,\n\tEntityOtherType,\n\t-- *INF*: Ltrim(rtrim(EntityType))\n\tLtrim(rtrim(EntityType)) AS o_EntityType,\n\tTransactionEffectiveDate,\n\t-- *INF*: TO_Char(TransactionEffectiveDate,'YYMMDD')\n\tTO_Char(TransactionEffectiveDate, 'YYMMDD') AS o_TransactionEffectiveDate,\n\tTransactionExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- DeletedName_Flag='1',TO_CHAR(TransactionEffectiveDate,'YYMMDD'),\r\n\t-- TO_CHAR(TransactionExpirationDate,'YYMMDD')\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    DeletedName_Flag = '1', TO_CHAR(TransactionEffectiveDate, 'YYMMDD'),\n\t    TO_CHAR(TransactionExpirationDate, 'YYMMDD')\n\t) AS o_TransactionExpirationDate,\n\tBusinessOrIndividual,\n\tNameLinkIdentifier,\n\tDeletedName_Flag,\n\tOrder_Seq,\n\tName_cleansed,\n\t'PrimaryEntity' AS PartyAssociationType1,\n\t'SecondaryEntity' AS PartyAssociationType2,\n\tNameInsured\n\tFROM JNR_Party_TO_LinkData\n),\nLKP_Line AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditPeriod,\n\tRatingPlan,\n\tPrimaryLocationState,\n\tInterstateRiskID,\n\tMinimumPremiumMaximum,\n\tMinimumPremiumMaximumState,\n\tin_WCTrackHistoryID\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,AuditPeriod as AuditPeriod\r\n\t\t      ,RatingPlan as RatingPlan\r\n\t\t      ,PrimaryLocationState as PrimaryLocationState\r\n\t\t      ,InterstateRiskID as InterstateRiskID\r\n\t\t     ,MinimumPremiumMaximum as MinimumPremiumMaximum\r\n\t\t     ,MinimumPremiumMaximumState as MinimumPremiumMaximumState\r\n\t\t  FROM dbo.WorkWCLine\r\n\t\t  WHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY WCTrackHistoryID) = 1\n),\nLKP_Party AS (\n\tSELECT\n\tBureauUnemploymentNumberState,\n\tStateUnemploymentNumber,\n\tIN_WCTrackHistoryID,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSelect DISTINCT WCTrackHistoryID AS WCTrackHistoryID,\r\n\t\tBureauUnemploymentNumberState AS BureauUnemploymentNumberState,\r\n\t\tStateUnemploymentNumber AS StateUnemploymentNumber from WorkWCParty\r\n\t\twhere BureauUnemploymentNumberState IS NOT NULL AND StateUnemploymentNumber IS NOT NULL\r\n\t\tAND Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY BureauUnemploymentNumberState) = 1\n),\nLKP_StateTerm AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tState,\n\tEmployeeLeasing,\n\tEmployeeLeasingRatingOption,\n\tIntrastateRiskid,\n\tUnemploymentIDNumber,\n\tTotalStandardPremium,\n\tin_WCTrackHistoryID,\n\tin_PrimaryLocationState\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,State as State\r\n\t\t      ,EmployeeLeasing as EmployeeLeasing\r\n\t\t      ,EmployeeLeasingRatingOption as EmployeeLeasingRatingOption\r\n\t\t      ,IntrastateRiskid as IntrastateRiskid\r\n\t\t     ,UnemploymentIDNumber as UnemploymentIDNumber\r\n\t\t  FROM dbo.WorkWCStateTerm\r\n\t\tWHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID,State ORDER BY WCTrackHistoryID) = 1\n),\nEXP_Record02_TGT_DataCollect AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tEXP_Record02_DataPrep.WCTrackHistoryID,\n\tEXP_Record02_DataPrep.LinkData,\n\t'02' AS RecordTypeCode,\n\tEXP_Record02_DataPrep.BusinessOrIndividual,\n\t-- *INF*: DECODE (TRUE,\r\n\t-- BusinessOrIndividual='F','Business',\r\n\t-- BusinessOrIndividual='T','Individual',\r\n\t-- NULL)\n\tDECODE(\n\t    TRUE,\n\t    BusinessOrIndividual = 'F', 'Business',\n\t    BusinessOrIndividual = 'T', 'Individual',\n\t    NULL\n\t) AS v_TEMP_NAMETYPECODE,\n\t-- *INF*: IIF(BusinessOrIndividual='F',:LKP.LKP_SupWCPOLS('DCT','Business','WCPOLS02Record','NameTypeCode'),\r\n\t-- IIF(BusinessOrIndividual='T',:LKP.LKP_SupWCPOLS('DCT','Individual','WCPOLS02Record','NameTypeCode'),''))\n\tIFF(\n\t    BusinessOrIndividual = 'F',\n\t    LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode.WCPOLSCode,\n\t    IFF(\n\t        BusinessOrIndividual = 'T',\n\t        LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode.WCPOLSCode,\n\t        ''\n\t    )\n\t) AS o_NameTypeCode,\n\tEXP_Record02_DataPrep.NameLinkIdentifier,\n\tLKP_StateTerm.EmployeeLeasing,\n\tLKP_StateTerm.EmployeeLeasingRatingOption,\n\t-- *INF*: IIF(EmployeeLeasing='T', :LKP.LKP_SupWCPOLS('DCT',EmployeeLeasingRatingOption,'WCPOLS02Record','ProfessionalEmployerOrganizationOrClientCompanyCode'),NULL)\n\tIFF(\n\t    EmployeeLeasing = 'T',\n\t    LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode.WCPOLSCode,\n\t    NULL\n\t) AS o_ProfessionalEmployerOrganizationOrClientCompanyCode,\n\tEXP_Record02_DataPrep.Name,\n\t-- *INF*: ltrim(rtrim(Name))\n\tltrim(rtrim(Name)) AS NameInsured,\n\tEXP_Record02_DataPrep.NameInsured AS NameInsured_02record,\n\t-- *INF*: iif(Order_Seq ='2', ltrim(rtrim(Name)),NameInsured_02record)\n\tIFF(Order_Seq = '2', ltrim(rtrim(Name)), NameInsured_02record) AS v_NameInsured_02record,\n\tv_NameInsured_02record AS o_NameInsured_02record,\n\tEXP_Record02_DataPrep.FEIN,\n\t-- *INF*: LTRIM(RTRIM(REPLACECHR(1,FEIN,'-','')))\r\n\t-- \r\n\t-- \n\tLTRIM(RTRIM(REGEXP_REPLACE(FEIN,'-',''))) AS FederalEmployerIdentificationNumber,\n\t'001' AS ContinuationSequenceNumber,\n\tEXP_Record02_DataPrep.o_EntityType AS EntityType,\n\tLKP_Line.PrimaryLocationState,\n\tLKP_Party.BureauUnemploymentNumberState AS IN_BureauUnemploymentNumberState,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',IN_BureauUnemploymentNumberState,'WCPOLS02Record','StateCodeRecord02')\n\tLKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02.WCPOLSCode AS o_StateCode01,\n\tLKP_Party.StateUnemploymentNumber AS IN_StateUnemploymentNumber,\n\tLKP_StateTerm.UnemploymentIDNumber AS StateUnemploymentNumber01,\n\t'00' AS NameLinkCounterIdentifier,\n\tEXP_Record02_DataPrep.o_TransactionEffectiveDate AS PolicyChangeEffectiveDate,\n\tEXP_Record02_DataPrep.o_TransactionExpirationDate AS PolicyChangeExpirationDate,\n\tEXP_Record02_DataPrep.Order_Seq,\n\t'DBA' AS o_ProcessName,\n\tEXP_Record02_DataPrep.Name_cleansed,\n\t-- *INF*: :LKP.LKP_WORKWCPARTY(Name_cleansed,WCTrackHistoryID,'PrimaryEntity')\r\n\t-- \r\n\t-- \n\tLKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_PrimaryEntity.AOIEntityType AS v_Primary_AOIEntityType,\n\t-- *INF*: :LKP.LKP_WORKWCPARTY(Name_cleansed,WCTrackHistoryID,'SecondaryEntity')\r\n\t-- \n\tLKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_SecondaryEntity.AOIEntityType AS v_Secondary_AOIEntityType,\n\t-- *INF*: :LKP.LKP_WORKWCPARTY(Name_cleansed,WCTrackHistoryID,'AdditionalInsured')\r\n\t-- \n\tLKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_AdditionalInsured.AOIEntityType AS v_AdditionalInsured,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- not isnull(v_Primary_AOIEntityType), v_Primary_AOIEntityType,\r\n\t-- (isnull(v_Primary_AOIEntityType) and not isnull(v_Secondary_AOIEntityType)) ,v_Secondary_AOIEntityType,\r\n\t-- (isnull(v_Primary_AOIEntityType) and isnull(v_Secondary_AOIEntityType)  and not isnull(v_AdditionalInsured)) ,v_AdditionalInsured,\r\n\t-- v_Primary_AOIEntityType)\r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    v_Primary_AOIEntityType IS NOT NULL, v_Primary_AOIEntityType,\n\t    (v_Primary_AOIEntityType IS NULL and v_Secondary_AOIEntityType IS NOT NULL), v_Secondary_AOIEntityType,\n\t    (v_Primary_AOIEntityType IS NULL and v_Secondary_AOIEntityType IS NULL and v_AdditionalInsured IS NOT NULL), v_AdditionalInsured,\n\t    v_Primary_AOIEntityType\n\t) AS v_AOIEntityType,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SupWCPOLS('DCT',v_AOIEntityType,'WCPols02Record','LegalNatureOfEntityCode')),'99',:LKP.LKP_SupWCPOLS('DCT',v_AOIEntityType,'WCPols02Record','LegalNatureOfEntityCode'))\n\tIFF(\n\t    LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.WCPOLSCode IS NULL,\n\t    '99',\n\t    LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.WCPOLSCode\n\t) AS LegalNatureOfEntityCode\n\tFROM EXP_Record02_DataPrep\n\tLEFT JOIN LKP_Line\n\tON LKP_Line.WCTrackHistoryID = JNR_Party_TO_LinkData.WCTrackHistoryID\n\tLEFT JOIN LKP_Party\n\tON LKP_Party.WCTrackHistoryID = JNR_Party_TO_LinkData.WCTrackHistoryID\n\tLEFT JOIN LKP_StateTerm\n\tON LKP_StateTerm.WCTrackHistoryID = LKP_Line.WCTrackHistoryID AND LKP_StateTerm.State = LKP_Line.PrimaryLocationState\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode\n\tON LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode.SourceCode = 'Business'\n\tAND LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode.TableName = 'WCPOLS02Record'\n\tAND LKP_SUPWCPOLS__DCT_Business_WCPOLS02Record_NameTypeCode.ProcessName = 'NameTypeCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode\n\tON LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode.SourceCode = 'Individual'\n\tAND LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode.TableName = 'WCPOLS02Record'\n\tAND LKP_SUPWCPOLS__DCT_Individual_WCPOLS02Record_NameTypeCode.ProcessName = 'NameTypeCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode\n\tON LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode.SourceCode = EmployeeLeasingRatingOption\n\tAND LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode.TableName = 'WCPOLS02Record'\n\tAND LKP_SUPWCPOLS__DCT_EmployeeLeasingRatingOption_WCPOLS02Record_ProfessionalEmployerOrganizationOrClientCompanyCode.ProcessName = 'ProfessionalEmployerOrganizationOrClientCompanyCode'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02\n\tON LKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02.SourceCode = IN_BureauUnemploymentNumberState\n\tAND LKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02.TableName = 'WCPOLS02Record'\n\tAND LKP_SUPWCPOLS__DCT_IN_BureauUnemploymentNumberState_WCPOLS02Record_StateCodeRecord02.ProcessName = 'StateCodeRecord02'\n\n\tLEFT JOIN LKP_WORKWCPARTY LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_PrimaryEntity\n\tON LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_PrimaryEntity.Name = Name_cleansed\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_PrimaryEntity.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_PrimaryEntity.PartyAssociationType = 'PrimaryEntity'\n\n\tLEFT JOIN LKP_WORKWCPARTY LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_SecondaryEntity\n\tON LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_SecondaryEntity.Name = Name_cleansed\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_SecondaryEntity.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_SecondaryEntity.PartyAssociationType = 'SecondaryEntity'\n\n\tLEFT JOIN LKP_WORKWCPARTY LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_AdditionalInsured\n\tON LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_AdditionalInsured.Name = Name_cleansed\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_AdditionalInsured.WCTrackHistoryID = WCTrackHistoryID\n\tAND LKP_WORKWCPARTY_Name_cleansed_WCTrackHistoryID_AdditionalInsured.PartyAssociationType = 'AdditionalInsured'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode\n\tON LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.SourceCode = v_AOIEntityType\n\tAND LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.TableName = 'WCPols02Record'\n\tAND LKP_SUPWCPOLS__DCT_v_AOIEntityType_WCPols02Record_LegalNatureOfEntityCode.ProcessName = 'LegalNatureOfEntityCode'\n\n),\nFIL_DBANames AS (\n\tSELECT\n\tAuditId, \n\tExtractDate, \n\tWCTrackHistoryID, \n\to_ProcessName AS ProcessName, \n\tNameInsured, \n\tOrder_Seq\n\tFROM EXP_Record02_TGT_DataCollect\n\tWHERE Order_Seq='2'\n),\nWorkWCProcessUpdateTable AS (\n\tINSERT INTO WorkWCProcessUpdateTable\n\t(Auditid, ExtractDate, WCTrackHistoryID, ProcessName, AttributeValue)\n\tSELECT \n\tAuditId AS AUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tPROCESSNAME, \n\tNameInsured AS ATTRIBUTEVALUE\n\tFROM FIL_DBANames\n),\nLKP_WorkWCPolicy AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tin_WCTrackHistoryID\n\tFROM (\n\t\tSELECT WCTrackHistoryID as WCTrackHistoryID\r\n\t\t      ,TransactionEffectiveDate as TransactionEffectiveDate\r\n\t\t\t,TransactionExpirationDate as TransactionExpirationDate\r\n\t\t  FROM dbo.WorkWCPolicy\r\n\t\tWHERE Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY WCTrackHistoryID) = 1\n),\nEXP_WBMI_Format AS (\n\tSELECT\n\tSQ_WCPols00Record.WCTrackHistoryID,\n\tSQ_WCPols00Record.LinkData,\n\tSQ_WCPols00Record.AuditId,\n\tLKP_WorkWCPolicy.TransactionEffectiveDate,\n\tLKP_WorkWCPolicy.TransactionExpirationDate,\n\t'1900 South 18th Avenue' AS Address1,\n\t' ' AS Address2,\n\t'West Bend' AS City,\n\t'WI' AS StateProv,\n\t'53095' AS PostalCode,\n\t'USA' AS Country,\n\t'WBMI' AS LocationType,\n\t'999' AS NameLinkIdentifier\n\tFROM SQ_WCPols00Record\n\tLEFT JOIN LKP_WorkWCPolicy\n\tON LKP_WorkWCPolicy.WCTrackHistoryID = SQ_WCPols00Record.WCTrackHistoryID\n),\nSQ_WorkWCLocation AS (\n\twith CTE_Party as (\r\n\tSelect ltrim(rtrim(DoingBusinessAs)) Name,PartyAssociationType,WC_LocationId,WCTrackHistoryID,CASE when BusinessOrIndividual=1 then '1' else '0' end BusinessOrIndividual from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty\r\n\tunion\r\n\tselect \r\n\tcase when BusinessOrIndividual=1 and EntityType='Partnership' then \r\n\tcase when rtrim(ltrim(LastName)) is null and rtrim(ltrim(FirstName)) is null and rtrim(ltrim(MiddleName)) is null \r\n\tthen  rtrim(ltrim(Name)) else ISNULL(rtrim(ltrim(LastName)),'')+' '+ISNULL(rtrim(ltrim(FirstName)),'')+' '+ISNULL(rtrim(ltrim(MiddleName)),'') end else rtrim(ltrim(Name)) end  Name,\r\n\t\r\n\tPartyAssociationType,WC_LocationId,WCTrackHistoryID,CASE when BusinessOrIndividual=1 then '1' else '0' end BusinessOrIndividual\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCParty)\r\n\t\r\n\t\r\n\tSelect WCTrackHistoryID,\r\n\tName,\r\n\tTransactionEffectiveDate,\r\n\tTransactionExpirationDate,\r\n\tNAICSCode,\r\n\tAddress1,\r\n\tAddress2,\r\n\tCity,\r\n\tStateProv,\r\n\tPostalCode,\r\n\tCountry,\r\n\tLocationType,\r\n\tLocationNumber,\r\n\tLocationOrder,\r\n\tPolicyKey,\r\n\tisnull(min(WC_Locationid) over(partition by WCTrackHistoryid,Name,rtrim(ltrim(Address1+' '+Address2)),City,StateProv,PostalCode),A.LocationOrder) WC_Locationid\r\n\t,Max(BusinessOrIndividual) over(partition by WCTrackHistoryid) BusinessOrIndividual\r\n\t,PartyAssociationType\r\n\t,case when LocationDeletedIndicator='1' then '1' else '0' END LocationDeletedIndicator\r\n\tfrom (\r\n\tSelect A.WCTrackHistoryID,upper(REPLACE(B.Name,char(13)+char(10),'')) Name,A.TransactionEffectiveDate,A.TransactionExpirationDate,A.NAICSCode\r\n\t,ltrim(rtrim(upper(ISNULL(Address1,''))+' '+upper(ISNULL(Address2,'')))) Address1\r\n\t,'' Address2\r\n\t,upper(ISNULL(C.City,'')) City\r\n\t,upper(ISNULL(C.StateProv,'')) StateProv\r\n\t,ISNULL(C.PostalCode,'') PostalCode\r\n\t,upper(ISNULL(C.Country,'')) Country\r\n\t,C.LocationType,C.LocationNumber\r\n\t,Case when C.LocationType='Account' then 1\r\n\twhen C.LocationType='Location' then 2\r\n\telse 3 end LocationOrder\r\n\t,A.PolicyKey,C.WC_LocationId,BusinessOrIndividual,PartyAssociationType,LocationDeletedIndicator\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCPolicy A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCLocation C\r\n\ton A.WCTrackHistoryID=C.WCTrackHistoryID\r\n\tright join CTE_Party B\r\n\ton B.WCTrackHistoryID=C.WCTrackHistoryID\r\n\tand (B.PartyAssociationType=C.LocationType or B.WC_LocationId=C.WC_LocationId)\r\n\tand C.LocationType in ('Account','Agency','Location')\r\n\twhere A.Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tand B.Name is not null\r\n\t--and (C.LocationDeletedIndicator=0 or C.LocationDeletedIndicator is null)\r\n\t@{pipeline().parameters.WHERE_CLAUSE_03}\r\n\t) A\r\n\t\r\n\torder by WCTrackHistoryID,Name,LocationOrder,LocationType,Address1,Address2,City,StateProv,PostalCode,Country,WC_Locationid\n),\nEXP_SRC AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tName,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tLocationNumber,\n\tLocationOrder,\n\tPolicyKey,\n\tWC_LocationId,\n\tBusinessOrIndividual,\n\tPartyAssociationType,\n\tLocationDeletedIndicator,\n\t-- *INF*: IIF(NOT ISNULL(Address1) AND LTRIM(RTRIM(Address1))<>'',LTRIM(RTRIM(Address1)),'')\n\tIFF(Address1 IS NULL AND LTRIM(RTRIM(Address1)) <NOT > '', LTRIM(RTRIM(Address1)), '') AS v_Address1,\n\t-- *INF*: IIF(NOT ISNULL(Address2) AND LTRIM(RTRIM(Address2))<>'',LTRIM(RTRIM(Address2)),'')\n\tIFF(Address2 IS NULL AND LTRIM(RTRIM(Address2)) <NOT > '', LTRIM(RTRIM(Address2)), '') AS v_Address2,\n\t-- *INF*: IIF(NOT ISNULL(City) AND LTRIM(RTRIM(City))<>'',LTRIM(RTRIM(City)),'')\n\tIFF(City IS NULL AND LTRIM(RTRIM(City)) <NOT > '', LTRIM(RTRIM(City)), '') AS v_City,\n\t-- *INF*: IIF(NOT ISNULL(StateProv) AND LTRIM(RTRIM(StateProv))<>'',LTRIM(RTRIM(StateProv)),'')\n\tIFF(StateProv IS NULL AND LTRIM(RTRIM(StateProv)) <NOT > '', LTRIM(RTRIM(StateProv)), '') AS v_StateProv,\n\t-- *INF*: IIF(NOT ISNULL(PostalCode) AND LTRIM(RTRIM(PostalCode))<>'',LTRIM(RTRIM(SUBSTR(PostalCode,1,5))),'')\n\tIFF(\n\t    PostalCode IS NULL AND LTRIM(RTRIM(PostalCode)) <NOT > '',\n\t    LTRIM(RTRIM(SUBSTR(PostalCode, 1, 5))),\n\t    ''\n\t) AS v_PostalCode_Mini,\n\t-- *INF*: UPPER(LTRIM(RTRIM(WCTrackHistoryID||LTRIM(RTRIM(v_Address1))||LTRIM(RTRIM(v_Address2))||LTRIM(RTRIM(v_City))||LTRIM(RTRIM(v_StateProv))||LTRIM(RTRIM(v_PostalCode_Mini)))))\n\tUPPER(LTRIM(RTRIM(WCTrackHistoryID || LTRIM(RTRIM(v_Address1)) || LTRIM(RTRIM(v_Address2)) || LTRIM(RTRIM(v_City)) || LTRIM(RTRIM(v_StateProv)) || LTRIM(RTRIM(v_PostalCode_Mini))))) AS o_AddressCompare,\n\t-- *INF*: LTRIM(RTRIM(v_PostalCode_Mini))\n\tLTRIM(RTRIM(v_PostalCode_Mini)) AS o_PostalCode_Mini\n\tFROM SQ_WorkWCLocation\n),\nLKP_Party_Location AS (\n\tSELECT\n\tName,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tWCTrackHistoryID\n\tFROM (\n\t\tSelect WCTrackHistoryID AS WCTrackHistoryID,\r\n\t\tupper(REPLACE(ltrim(rtrim(Name)),char(13)+char(10),'')) AS Name,\r\n\t\tupper(REPLACE(ltrim(rtrim(FirstName)),char(13)+char(10),'')) AS FirstName,\r\n\t\tupper(REPLACE(ltrim(rtrim(LastName)),char(13)+char(10),'')) AS LastName,\r\n\t\tupper(REPLACE(ltrim(rtrim(MiddleName)),char(13)+char(10),'')) AS MiddleName from\r\n\t\t(\r\n\t\tselect WCTrackHistoryID AS WCTrackHistoryID,\r\n\t\tcase when BusinessOrIndividual=1 then \r\n\t\tcase when rtrim(ltrim(LastName)) is null and rtrim(ltrim(FirstName)) is null and rtrim(ltrim(MiddleName)) is null \r\n\t\tthen  rtrim(ltrim(Name)) else ISNULL(rtrim(ltrim(LastName)),'')+' '+ISNULL(rtrim(ltrim(FirstName)),'')+' '+ISNULL(rtrim(ltrim(MiddleName)),'') \r\n\t\tend else rtrim(ltrim(Name)) end Name ,FirstName,LastName,MiddleName\r\n\t\tfrom DBO.WorkWCParty\r\n\t\twhere PartyAssociationType='Account'\r\n\t\tand BusinessOrIndividual=1\r\n\t\t) A\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY Name) = 1\n),\nEXP_SrcDataCollect_Location AS (\n\tSELECT\n\tEXP_SRC.WCTrackHistoryID,\n\tEXP_SRC.Name,\n\t-- *INF*: LTRIM(RTRIM(Upper(REPLACECHR(1,Name,chr(13)||chr(10),''))))\n\tLTRIM(RTRIM(Upper(REGEXP_REPLACE(Name,chr(13) || chr(10),'')))) AS o_Name,\n\t-- *INF*: REPLACECHR(1,Name,' ','')\n\tREGEXP_REPLACE(Name,' ','') AS v_CleansedName,\n\tLKP_Party_Location.Name AS Name_lkp,\n\tLKP_Party_Location.FirstName,\n\tLKP_Party_Location.LastName,\n\tLKP_Party_Location.MiddleName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName))),' ','')\r\n\t-- \n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ),' ','') AS v_FirstLast,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ),' ','') AS v_LastFirst,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ),' ','') AS v_LastFirstMiddleName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ),' ','') AS v_FirstLastMiddleName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ),' ','') AS v_FirstMiddleLastName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ),' ','') AS v_LastMiddleFirstName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ),' ','') AS v_MiddleFirstLastName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ),' ','') AS v_MiddleLastFirstName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ),' ','') AS v_MiddleFirstName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(FirstName))),'',LTRIM(RTRIM(FirstName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(FirstName)) IS NULL, '', LTRIM(RTRIM(FirstName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ),' ','') AS v_FirstMiddleName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName)))||IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ),' ','') AS v_LastMiddleName,\n\t-- *INF*: REPLACECHR(1,IIF(ISNULL(LTRIM(RTRIM(MiddleName))),'',LTRIM(RTRIM(MiddleName)))||IIF(ISNULL(LTRIM(RTRIM(LastName))),'',LTRIM(RTRIM(LastName))),' ','')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        LTRIM(RTRIM(MiddleName)) IS NULL, '', LTRIM(RTRIM(MiddleName))\n\t    ) || \n\t    IFF(\n\t        LTRIM(RTRIM(LastName)) IS NULL, '', LTRIM(RTRIM(LastName))\n\t    ),' ','') AS v_MiddleLastName,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_FirstLast,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_LastFirst,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_LastFirstMiddleName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_FirstLastMiddleName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_FirstMiddleLastName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND  v_CleansedName=v_LastMiddleFirstName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_MiddleFirstLastName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_MiddleLastFirstName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_MiddleFirstName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_FirstMiddleName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_LastMiddleName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND v_CleansedName=v_MiddleLastName,LTRIM(RTRIM(Name_lkp)),\r\n\t-- LTRIM(RTRIM(Name)))\n\tDECODE(\n\t    TRUE,\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_FirstLast, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_LastFirst, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_LastFirstMiddleName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_FirstLastMiddleName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_FirstMiddleLastName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_LastMiddleFirstName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_MiddleFirstLastName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_MiddleLastFirstName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_MiddleFirstName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_FirstMiddleName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_LastMiddleName, LTRIM(RTRIM(Name_lkp)),\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND v_CleansedName = v_MiddleLastName, LTRIM(RTRIM(Name_lkp)),\n\t    LTRIM(RTRIM(Name))\n\t) AS v_ComparedName,\n\tv_ComparedName AS o_ComparedName,\n\t-- *INF*: IIF(PartyAssociationType='PrimaryEntity' AND BusinessOrIndividual='1' AND NOT ISNULL(Name_lkp), LTRIM(RTRIM(Name_lkp)),LTRIM(RTRIM(Name)))\n\tIFF(\n\t    PartyAssociationType = 'PrimaryEntity' AND BusinessOrIndividual = '1' AND Name_lkp IS NOT NULL,\n\t    LTRIM(RTRIM(Name_lkp)),\n\t    LTRIM(RTRIM(Name))\n\t) AS v_Name_Indicator,\n\tv_Name_Indicator AS o_Name_lkp,\n\tEXP_SRC.TransactionEffectiveDate,\n\tEXP_SRC.TransactionExpirationDate,\n\tEXP_SRC.NAICSCode,\n\t-- *INF*: IIF(Name=v_Name and WC_LocationId=v_WC_LocationId ,'Y','N')\n\tIFF(Name = v_Name and WC_LocationId = v_WC_LocationId, 'Y', 'N') AS v_Location_Delete_Flag,\n\tEXP_SRC.Address1,\n\tEXP_SRC.Address2,\n\tEXP_SRC.City,\n\tEXP_SRC.StateProv,\n\tEXP_SRC.PostalCode,\n\tEXP_SRC.Country,\n\tEXP_SRC.LocationType,\n\tEXP_SRC.LocationNumber,\n\tEXP_SRC.LocationOrder,\n\tEXP_SRC.PolicyKey,\n\tEXP_SRC.WC_LocationId,\n\tEXP_SRC.BusinessOrIndividual,\n\tEXP_SRC.PartyAssociationType,\n\t-- *INF*: IIF(ISNULL(WC_LocationId),0,\r\n\t-- IIF(WCTrackHistoryID=v_WCTrackHistoryID and WC_LocationId=v_WC_LocationId,v_ExposureRecordLinkForLocationCode,v_ExposureRecordLinkForLocationCode+1))\n\tIFF(\n\t    WC_LocationId IS NULL, 0,\n\t    IFF(\n\t        WCTrackHistoryID = v_WCTrackHistoryID\n\t    and WC_LocationId = v_WC_LocationId,\n\t        v_ExposureRecordLinkForLocationCode,\n\t        v_ExposureRecordLinkForLocationCode + 1\n\t    )\n\t) AS v_ExposureRecordLinkForLocationCode,\n\tWCTrackHistoryID AS v_WCTrackHistoryID,\n\tName AS v_Name,\n\tWC_LocationId AS v_WC_LocationId,\n\tEXP_SRC.o_AddressCompare AS AddressCompare,\n\tEXP_SRC.o_PostalCode_Mini AS PostalCode_Mini,\n\tEXP_SRC.LocationDeletedIndicator\n\tFROM EXP_SRC\n\tLEFT JOIN LKP_Party_Location\n\tON LKP_Party_Location.WCTrackHistoryID = EXP_SRC.WCTrackHistoryID\n),\nSRT_ReOrder AS (\n\tSELECT\n\tWCTrackHistoryID, \n\to_Name AS Name, \n\to_ComparedName AS ComparedName, \n\to_Name_lkp, \n\tTransactionEffectiveDate, \n\tTransactionExpirationDate, \n\tNAICSCode, \n\tLocationOrder, \n\tLocationType, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tStateProv, \n\tPostalCode_Mini, \n\tPostalCode, \n\tCountry, \n\tLocationNumber, \n\tPolicyKey, \n\tWC_LocationId, \n\tPartyAssociationType, \n\tAddressCompare, \n\tLocationDeletedIndicator\n\tFROM EXP_SrcDataCollect_Location\n\tORDER BY WCTrackHistoryID ASC, ComparedName ASC, LocationOrder ASC, LocationType ASC, Address1 ASC, Address2 ASC, City ASC, StateProv ASC, PostalCode_Mini ASC, Country ASC, WC_LocationId ASC\n),\nEXP_Compare AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tName,\n\tComparedName,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\t-- *INF*: IIF((ComparedName=v_Name and WC_LocationId=v_WC_LocationId AND WCTrackHistoryID=v_WCTrackHistoryID)\r\n\t-- --OR (ComparedName=v_Name and LTRIM(RTRIM(AddressCompare))=LTRIM(RTRIM(v_AddressCompare)))\r\n\t--  ,'Y','N')\n\tIFF(\n\t    (ComparedName = v_Name\n\t    and WC_LocationId = v_WC_LocationId\n\t    and WCTrackHistoryID = v_WCTrackHistoryID),\n\t    'Y',\n\t    'N'\n\t) AS v_Location_Delete_Flag,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tLocationNumber,\n\tLocationOrder,\n\tPolicyKey,\n\tv_Name AS v_Name1,\n\tv_WCTrackHistoryID AS v_WCTrackHistoryID1,\n\tv_WC_LocationId AS v_WC_LocationId1,\n\tv_AddressCompare AS v_AddressCompare1,\n\tWC_LocationId,\n\tv_Location_Delete_Flag AS o_Location_Delete_Flag,\n\t-- *INF*: IIF(ISNULL(WC_LocationId),0,\r\n\t-- IIF(WCTrackHistoryID=v_WCTrackHistoryID and WC_LocationId=v_WC_LocationId,v_ExposureRecordLinkForLocationCode,v_ExposureRecordLinkForLocationCode+1))\n\tIFF(\n\t    WC_LocationId IS NULL, 0,\n\t    IFF(\n\t        WCTrackHistoryID = v_WCTrackHistoryID\n\t    and WC_LocationId = v_WC_LocationId,\n\t        v_ExposureRecordLinkForLocationCode,\n\t        v_ExposureRecordLinkForLocationCode + 1\n\t    )\n\t) AS v_ExposureRecordLinkForLocationCode,\n\tWCTrackHistoryID AS v_WCTrackHistoryID,\n\tComparedName AS v_Name,\n\tWC_LocationId AS v_WC_LocationId,\n\t-- *INF*: to_char(v_ExposureRecordLinkForLocationCode)\n\tto_char(v_ExposureRecordLinkForLocationCode) AS o_ExposureRecordLinkForLocationCode,\n\tPartyAssociationType,\n\to_Name_lkp AS Name_lkp,\n\tAddressCompare,\n\tAddressCompare AS v_AddressCompare,\n\tPostalCode_Mini,\n\tLocationDeletedIndicator\n\tFROM SRT_ReOrder\n),\nFIL_Eliminate_Duplicate_Location AS (\n\tSELECT\n\tWCTrackHistoryID, \n\tName, \n\tTransactionEffectiveDate, \n\tTransactionExpirationDate, \n\tNAICSCode, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tLocationType, \n\tLocationNumber, \n\tLocationOrder, \n\tPolicyKey, \n\tWC_LocationId, \n\to_Location_Delete_Flag AS Location_Delete_Flag, \n\to_ExposureRecordLinkForLocationCode AS ExposureRecordLinkForLocationCode, \n\tPartyAssociationType, \n\tName_lkp, \n\tAddressCompare, \n\tLocationDeletedIndicator\n\tFROM EXP_Compare\n\tWHERE Location_Delete_Flag='N'\n),\nJNR_Name_Location AS (SELECT\n\tEXP_Set_NameLinkIdentifier.WCTrackHistoryID, \n\tEXP_Set_NameLinkIdentifier.Name, \n\tEXP_Set_NameLinkIdentifier.o_NameLinkIdentifier AS NameLinkIdentifier, \n\tEXP_Set_NameLinkIdentifier.PhoneNumber, \n\tEXP_Set_NameLinkIdentifier.DeletedName_Flag AS DeletedName_Indicator, \n\tFIL_Eliminate_Duplicate_Location.WCTrackHistoryID AS WCTrackHistoryID1, \n\tFIL_Eliminate_Duplicate_Location.Name AS Name1, \n\tFIL_Eliminate_Duplicate_Location.TransactionEffectiveDate, \n\tFIL_Eliminate_Duplicate_Location.TransactionExpirationDate, \n\tFIL_Eliminate_Duplicate_Location.NAICSCode, \n\tFIL_Eliminate_Duplicate_Location.Address1, \n\tFIL_Eliminate_Duplicate_Location.Address2, \n\tFIL_Eliminate_Duplicate_Location.City, \n\tFIL_Eliminate_Duplicate_Location.StateProv, \n\tFIL_Eliminate_Duplicate_Location.PostalCode, \n\tFIL_Eliminate_Duplicate_Location.Country, \n\tFIL_Eliminate_Duplicate_Location.LocationType, \n\tFIL_Eliminate_Duplicate_Location.LocationNumber, \n\tFIL_Eliminate_Duplicate_Location.LocationOrder, \n\tFIL_Eliminate_Duplicate_Location.PolicyKey, \n\tFIL_Eliminate_Duplicate_Location.WC_LocationId, \n\tFIL_Eliminate_Duplicate_Location.ExposureRecordLinkForLocationCode, \n\tFIL_Eliminate_Duplicate_Location.PartyAssociationType, \n\tFIL_Eliminate_Duplicate_Location.Name_lkp AS o_Name_lkp, \n\tFIL_Eliminate_Duplicate_Location.AddressCompare, \n\tFIL_Eliminate_Duplicate_Location.LocationDeletedIndicator, \n\tEXP_Set_NameLinkIdentifier.Email\n\tFROM EXP_Set_NameLinkIdentifier\n\tRIGHT OUTER JOIN FIL_Eliminate_Duplicate_Location\n\tON FIL_Eliminate_Duplicate_Location.WCTrackHistoryID = EXP_Set_NameLinkIdentifier.WCTrackHistoryID AND FIL_Eliminate_Duplicate_Location.Name = EXP_Set_NameLinkIdentifier.Name\n),\nRTR_Location AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tName,\n\tNameLinkIdentifier,\n\tPhoneNumber,\n\tDeletedName_Indicator,\n\tWCTrackHistoryID1 AS WCTrackHistoryID_Location,\n\tName1 AS Name_Location,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tLocationOrder,\n\tWC_LocationId,\n\tExposureRecordLinkForLocationCode,\n\tPartyAssociationType,\n\to_Name_lkp,\n\tAddressCompare,\n\tLocationDeletedIndicator,\n\tEmail\n\tFROM JNR_Name_Location\n),\nRTR_Location_NULLNameLinkIdentifier AS (SELECT * FROM RTR_Location WHERE ISNULL(NameLinkIdentifier)),\nRTR_Location_NOTNULLNameLinkIdentifier AS (SELECT * FROM RTR_Location WHERE NOT ISNULL(NameLinkIdentifier)),\nEXPTRANS AS (\n\tSELECT\n\tNameLinkIdentifier,\n\tPhoneNumber,\n\tWCTrackHistoryID_Location AS WCTrackHistoryID1,\n\tName_Location AS Name1,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tWC_LocationId,\n\tExposureRecordLinkForLocationCode,\n\tPartyAssociationType,\n\to_Name_lkp AS Name_lkp,\n\tAddressCompare,\n\tLocationOrder,\n\tLocationDeletedIndicator,\n\tDeletedName_Indicator,\n\tEmail\n\tFROM RTR_Location_NOTNULLNameLinkIdentifier\n),\nSRT_Account AS (\n\tSELECT\n\tWCTrackHistoryID, \n\tName, \n\to_NameLinkIdentifier AS NameLinkIdentifier, \n\tPhoneNumber, \n\tEmail\n\tFROM EXP_Set_NameLinkIdentifier\n\tORDER BY WCTrackHistoryID ASC, Name ASC\n),\nSRT_Location AS (\n\tSELECT\n\tWCTrackHistoryID_Location AS WCTrackHistoryID_Location1, \n\tName_Location AS Name_Location1, \n\tTransactionEffectiveDate AS TransactionEffectiveDate1, \n\tTransactionExpirationDate AS TransactionExpirationDate1, \n\tNAICSCode AS NAICSCode1, \n\tAddress AS Address11, \n\tAddress2 AS Address21, \n\tCity AS City1, \n\tStateProv AS StateProv1, \n\tPostalCode AS PostalCode1, \n\tCountry AS Country1, \n\tLocationType AS LocationType1, \n\tWC_LocationId AS WC_LocationId1, \n\tExposureRecordLinkForLocationCode AS ExposureRecordLinkForLocationCode1, \n\tPartyAssociationType AS PartyAssociationType1, \n\to_Name_lkp AS o_Name_lkp1, \n\tAddressCompare AS AddressCompare1, \n\tLocationOrder AS LocationOrder1, \n\tLocationDeletedIndicator AS LocationDeletedIndicator1, \n\tDeletedName_Indicator AS DeletedName_Indicator1\n\tFROM RTR_Location_NULLNameLinkIdentifier\n\tORDER BY WCTrackHistoryID_Location1 ASC, o_Name_lkp1 ASC\n),\nJNRTRANS AS (SELECT\n\tSRT_Account.WCTrackHistoryID, \n\tSRT_Account.Name, \n\tSRT_Account.NameLinkIdentifier, \n\tSRT_Account.PhoneNumber, \n\tSRT_Location.WCTrackHistoryID_Location1 AS WCTrackHistoryID_Location, \n\tSRT_Location.Name_Location1 AS Name_Location, \n\tSRT_Location.TransactionEffectiveDate1 AS TransactionEffectiveDate, \n\tSRT_Location.TransactionExpirationDate1 AS TransactionExpirationDate, \n\tSRT_Location.NAICSCode1 AS NAICSCode, \n\tSRT_Location.Address11 AS Address1, \n\tSRT_Location.Address21 AS Address2, \n\tSRT_Location.City1 AS City, \n\tSRT_Location.StateProv1 AS StateProv, \n\tSRT_Location.PostalCode1 AS PostalCode, \n\tSRT_Location.Country1 AS Country, \n\tSRT_Location.LocationType1 AS LocationType, \n\tSRT_Location.WC_LocationId1 AS WC_LocationId, \n\tSRT_Location.ExposureRecordLinkForLocationCode1 AS ExposureRecordLinkForLocationCode, \n\tSRT_Location.PartyAssociationType1 AS PartyAssociationType, \n\tSRT_Location.o_Name_lkp1 AS Name_lkp, \n\tSRT_Location.AddressCompare1 AS AddressCompare, \n\tSRT_Location.LocationOrder1, \n\tSRT_Location.LocationDeletedIndicator1 AS LocationDeletedIndicator, \n\tSRT_Location.DeletedName_Indicator1, \n\tSRT_Account.Email\n\tFROM SRT_Account\n\tRIGHT OUTER JOIN SRT_Location\n\tON SRT_Location.WCTrackHistoryID_Location1 = SRT_Account.WCTrackHistoryID AND SRT_Location.o_Name_lkp1 = SRT_Account.Name\n),\nUnion AS (\n\tSELECT WCTrackHistoryID_Location, PhoneNumber, TransactionEffectiveDate, TransactionExpirationDate, NAICSCode, Address1, Address2, City, StateProv, PostalCode, Country, LocationType, WC_LocationId, ExposureRecordLinkForLocationCode, NameLinkIdentifier, Name_lkp AS Name, AddressCompare, LocationOrder1 AS LocationOrder, LocationDeletedIndicator, DeletedName_Indicator1 AS DeletedName_Indicator, Email\n\tFROM JNRTRANS\n\tUNION\n\tSELECT WCTrackHistoryID1 AS WCTrackHistoryID_Location, PhoneNumber, TransactionEffectiveDate, TransactionExpirationDate, NAICSCode, Address1, Address2, City, StateProv, PostalCode, Country, LocationType, WC_LocationId, ExposureRecordLinkForLocationCode, NameLinkIdentifier, Name1 AS Name, AddressCompare, LocationOrder, LocationDeletedIndicator, DeletedName_Indicator, Email\n\tFROM EXPTRANS\n),\nEXP_Location AS (\n\tSELECT\n\tWCTrackHistoryID_Location AS WCTrackHistoryID1,\n\tPhoneNumber,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tNameLinkIdentifier,\n\t-- *INF*: IIF(LocationType='Agency','999',NameLinkIdentifier)\n\tIFF(LocationType = 'Agency', '999', NameLinkIdentifier) AS v_NameLinkIdentifier,\n\tv_NameLinkIdentifier AS o_NameLinkIdentifier,\n\tWC_LocationId,\n\tExposureRecordLinkForLocationCode,\n\tName,\n\tAddressCompare,\n\t-- *INF*: Decode(TRUE,\r\n\t-- LocationType = 'Account' and v_NameLinkIdentifier='001','1',\r\n\t-- LocationType = 'Agency','5',\r\n\t-- LocationType = 'WBMI','3',\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,'6',\r\n\t-- '2')\n\tDecode(\n\t    TRUE,\n\t    LocationType = 'Account' and v_NameLinkIdentifier = '001', '1',\n\t    LocationType = 'Agency', '5',\n\t    LocationType = 'WBMI', '3',\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, '6',\n\t    '2'\n\t) AS o_AddressTypeCode,\n\tLocationOrder,\n\tLocationDeletedIndicator,\n\tDeletedName_Indicator,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- DeletedName_Indicator='1','1',\r\n\t-- LocationDeletedIndicator='1','1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    DeletedName_Indicator = '1', '1',\n\t    LocationDeletedIndicator = '1', '1',\n\t    '0'\n\t) AS Name_Location_Deleted_Indicator,\n\tEmail\n\tFROM Union\n),\nLKP_PrimaryLocation AS (\n\tSELECT\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tWCTrackHistoryID\n\tFROM (\n\t\tselect WCTrackHistoryID As WCTrackHistoryID,\r\n\t\tAddress1 As Address1,\r\n\t\tAddress2 As Address2,\r\n\t\tCity As City,\r\n\t\tStateProv As StateProv,\r\n\t\tPostalCode As PostalCode,\r\n\t\tCountry As Country \r\n\t\tfrom \r\n\t\t(select WCTrackHistoryID,Address1,Address2,City,StateProv,PostalCode,Country,LocationNumber,min(LocationNumber) over(Partition by WCTrackHistoryID) Min_LocationNumber\r\n\t\t from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCLocation\r\n\t\twhere LocationDeletedIndicator=0\r\n\t\tand LocationType='Location') A\r\n\t\twhere A.LocationNumber=A.Min_LocationNumber\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCTrackHistoryID ORDER BY Address1) = 1\n),\nEXP_LocationPrep AS (\n\tSELECT\n\tEXP_Location.WCTrackHistoryID1,\n\tEXP_Location.PhoneNumber,\n\tEXP_Location.TransactionEffectiveDate,\n\tEXP_Location.TransactionExpirationDate,\n\tEXP_Location.NAICSCode,\n\tEXP_Location.Address1,\n\tEXP_Location.Address2,\n\tEXP_Location.City,\n\tEXP_Location.StateProv,\n\tEXP_Location.PostalCode AS IN_PostalCode,\n\t-- *INF*: REPLACECHR(1,IN_PostalCode,'-','')\n\tREGEXP_REPLACE(IN_PostalCode,'-','') AS v_PostalCode,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(IN_PostalCode)),1,5)\n\tSUBSTR(LTRIM(RTRIM(IN_PostalCode)), 1, 5) AS v_PostalCode_Mini,\n\tv_PostalCode AS PostalCode,\n\tv_PostalCode_Mini AS PostalCode_Mini,\n\tEXP_Location.Country,\n\tEXP_Location.LocationType,\n\tEXP_Location.o_NameLinkIdentifier AS NameLinkIdentifier,\n\tLKP_PrimaryLocation.Address1 AS lkp_Address1,\n\tLKP_PrimaryLocation.Address2 AS lkp_Address2,\n\tLKP_PrimaryLocation.City AS lkp_City,\n\tLKP_PrimaryLocation.StateProv AS lkp_StateProv,\n\tLKP_PrimaryLocation.PostalCode AS lkp_PostalCode,\n\t-- *INF*: REPLACECHR(1,lkp_PostalCode,'-','')\n\tREGEXP_REPLACE(lkp_PostalCode,'-','') AS v_lkp_PostalCode,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(v_lkp_PostalCode)),1,5)\n\tSUBSTR(LTRIM(RTRIM(v_lkp_PostalCode)), 1, 5) AS v_lkp_PostalCode_Mini,\n\tLKP_PrimaryLocation.Country AS lkp_Country,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- lkp_Address1,Address1)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, lkp_Address1,\n\t    Address1\n\t) AS v_Address1,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- lkp_Address2,Address2)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, lkp_Address2,\n\t    Address2\n\t) AS v_Address2,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- lkp_City,City)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, lkp_City,\n\t    City\n\t) AS v_City,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- lkp_StateProv,StateProv)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, lkp_StateProv,\n\t    StateProv\n\t) AS v_StateProv,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- v_lkp_PostalCode_Mini,v_PostalCode_Mini)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, v_lkp_PostalCode_Mini,\n\t    v_PostalCode_Mini\n\t) AS v_PostalCode_Mini_for_AddressComp,\n\tv_Address1 AS o_Address1,\n\tv_Address2 AS o_Address2,\n\tv_City AS o_City,\n\tv_StateProv AS o_StateProv,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- v_lkp_PostalCode,v_PostalCode)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, v_lkp_PostalCode,\n\t    v_PostalCode\n\t) AS o_PostalCode,\n\t-- *INF*: Decode(TRUE,\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,\r\n\t-- lkp_Country,Country)\n\tDecode(\n\t    TRUE,\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, lkp_Country,\n\t    Country\n\t) AS o_Country,\n\t-- *INF*: Decode(TRUE,\r\n\t-- NameLinkIdentifier='002' and LocationType='Account',lkp_StateProv,\r\n\t-- StateProv)\n\tDecode(\n\t    TRUE,\n\t    NameLinkIdentifier = '002' and LocationType = 'Account', lkp_StateProv,\n\t    StateProv\n\t) AS o_stateLinkCodeState,\n\tEXP_Location.WC_LocationId,\n\tEXP_Location.ExposureRecordLinkForLocationCode,\n\tEXP_Location.AddressCompare AS IN_AddressCompare,\n\tEXP_Location.o_AddressTypeCode AS AddressTypeCode,\n\t-- *INF*: \r\n\t-- \r\n\t-- LTRIM(RTRIM(NameLinkIdentifier)) || IN_AddressCompare \r\n\t-- \r\n\t-- --LTRIM(RTRIM(NameLinkIdentifier)) || IN_AddressCompare  || AddressTypeCode\r\n\t-- \r\n\t-- --LTRIM(RTRIM(NameLinkIdentifier))||LTRIM(RTRIM(WCTrackHistoryID1||LTRIM(RTRIM(v_Address1))||LTRIM(RTRIM(v_Address2))||LTRIM(RTRIM(v_City))||LTRIM(RTRIM(v_StateProv))||LTRIM(RTRIM(v_PostalCode_Mini_for_AddressComp))))\n\tLTRIM(RTRIM(NameLinkIdentifier)) || IN_AddressCompare AS o_AddressCompare,\n\tEXP_Location.LocationOrder,\n\tEXP_Location.LocationDeletedIndicator,\n\tEXP_Location.Name_Location_Deleted_Indicator,\n\tEXP_Location.Email\n\tFROM EXP_Location\n\tLEFT JOIN LKP_PrimaryLocation\n\tON LKP_PrimaryLocation.WCTrackHistoryID = EXP_Location.WCTrackHistoryID1\n),\nSRTTRANS AS (\n\tSELECT\n\tWCTrackHistoryID1, \n\tNameLinkIdentifier, \n\tPhoneNumber, \n\tTransactionEffectiveDate, \n\tTransactionExpirationDate, \n\tNAICSCode, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tStateProv, \n\tPostalCode_Mini, \n\tPostalCode, \n\tCountry, \n\tLocationOrder, \n\tAddressTypeCode, \n\tLocationType, \n\to_Address1, \n\to_Address2, \n\to_City, \n\to_StateProv, \n\to_PostalCode, \n\to_Country, \n\to_stateLinkCodeState, \n\tWC_LocationId, \n\tExposureRecordLinkForLocationCode, \n\to_AddressCompare AS AddressCompare, \n\tLocationDeletedIndicator, \n\tName_Location_Deleted_Indicator, \n\tEmail\n\tFROM EXP_LocationPrep\n\tORDER BY WCTrackHistoryID1 ASC, NameLinkIdentifier ASC, Address1 ASC, Address2 ASC, City ASC, StateProv ASC, PostalCode_Mini ASC, Country ASC, LocationOrder ASC, LocationType ASC, WC_LocationId ASC\n),\nEXP_Duplicates AS (\n\tSELECT\n\tWCTrackHistoryID1,\n\tNameLinkIdentifier,\n\tPhoneNumber,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\t-- *INF*: IIF(LTRIM(RTRIM(AddressCompare))=LTRIM(RTRIM(v_AddressCompare))\r\n\t--  ,'Y','N')\n\tIFF(LTRIM(RTRIM(AddressCompare)) = LTRIM(RTRIM(v_AddressCompare)), 'Y', 'N') AS v_LocationDeleteFlag,\n\tNAICSCode,\n\tAddress1,\n\tv_AddressCompare AS AddressCompare1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tAddressTypeCode,\n\tLocationType,\n\to_Address1,\n\to_Address2,\n\to_City,\n\to_StateProv,\n\to_PostalCode,\n\to_Country,\n\to_stateLinkCodeState,\n\tWC_LocationId,\n\tExposureRecordLinkForLocationCode,\n\t'RemoveDupesFilter2Log' AS LogName,\n\t'LocationDeleteFlag, ' || v_LocationDeleteFlag||' , AddressTypeCode, '||AddressTypeCode || ', WC_LocationId, ' ||WC_LocationId || ', RuleStateProv,'||StateProv||', OutputStateProv ,' || o_StateProv ||', LocationType,'||LocationType||',LinkStateCode ,'|| o_stateLinkCodeState|| ', AddressLine1, '  || Address1||', AddressCompare, ' ||AddressCompare AS LogRecord,\n\tAddressCompare,\n\tAddressCompare AS v_AddressCompare,\n\tv_LocationDeleteFlag AS o_LocationDeleteFlag,\n\tLocationOrder,\n\tLocationDeletedIndicator,\n\tName_Location_Deleted_Indicator,\n\tEmail\n\tFROM SRTTRANS\n),\nFIL_RemoveDuplicates AS (\n\tSELECT\n\tWCTrackHistoryID1, \n\tNameLinkIdentifier, \n\tPhoneNumber, \n\tTransactionEffectiveDate, \n\tTransactionExpirationDate, \n\tNAICSCode, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tAddressTypeCode, \n\tLocationType, \n\to_Address1, \n\to_Address2, \n\to_City, \n\to_StateProv, \n\to_PostalCode, \n\to_Country, \n\to_stateLinkCodeState, \n\tWC_LocationId, \n\tExposureRecordLinkForLocationCode, \n\tAddressCompare, \n\to_LocationDeleteFlag AS LocationDeleteFlag, \n\tLocationDeletedIndicator, \n\tName_Location_Deleted_Indicator, \n\tEmail\n\tFROM EXP_Duplicates\n\tWHERE LocationDeleteFlag='N'\n),\nJNR_03_Record AS (SELECT\n\tSQ_WCPols00Record.WCTrackHistoryID, \n\tSQ_WCPols00Record.LinkData, \n\tSQ_WCPols00Record.AuditId, \n\tFIL_RemoveDuplicates.WCTrackHistoryID1, \n\tFIL_RemoveDuplicates.PhoneNumber, \n\tFIL_RemoveDuplicates.TransactionEffectiveDate, \n\tFIL_RemoveDuplicates.TransactionExpirationDate, \n\tFIL_RemoveDuplicates.NAICSCode, \n\tFIL_RemoveDuplicates.o_Address1 AS Address1, \n\tFIL_RemoveDuplicates.o_Address2 AS Address2, \n\tFIL_RemoveDuplicates.o_City AS City, \n\tFIL_RemoveDuplicates.o_StateProv AS StateProv, \n\tFIL_RemoveDuplicates.o_PostalCode AS PostalCode, \n\tFIL_RemoveDuplicates.o_Country AS Country, \n\tFIL_RemoveDuplicates.LocationType, \n\tFIL_RemoveDuplicates.NameLinkIdentifier, \n\tFIL_RemoveDuplicates.o_stateLinkCodeState AS stateLinkCodeState, \n\tFIL_RemoveDuplicates.Address1 AS OriginalAddress1, \n\tFIL_RemoveDuplicates.Address2 AS OriginalAddress2, \n\tFIL_RemoveDuplicates.City AS OriginalCity, \n\tFIL_RemoveDuplicates.StateProv AS OriginalStateProv, \n\tFIL_RemoveDuplicates.PostalCode AS OriginalPostalCode, \n\tFIL_RemoveDuplicates.Country AS OriginalCountry, \n\tFIL_RemoveDuplicates.WC_LocationId, \n\tFIL_RemoveDuplicates.ExposureRecordLinkForLocationCode, \n\tFIL_RemoveDuplicates.AddressCompare, \n\tFIL_RemoveDuplicates.LocationDeleteFlag, \n\tFIL_RemoveDuplicates.LocationDeletedIndicator, \n\tFIL_RemoveDuplicates.Name_Location_Deleted_Indicator, \n\tFIL_RemoveDuplicates.Email\n\tFROM FIL_RemoveDuplicates\n\tINNER JOIN SQ_WCPols00Record\n\tON SQ_WCPols00Record.WCTrackHistoryID = FIL_RemoveDuplicates.WCTrackHistoryID1\n),\nUN_PolicyLocation_CarrierLocation AS (\n\tSELECT WCTrackHistoryID, LinkData, AuditId, WCTrackHistoryID1 AS WCTrackHistoryID11, PhoneNumber, TransactionEffectiveDate, TransactionExpirationDate, NAICSCode, Address1, Address2, City, StateProv, PostalCode, Country, LocationType, NameLinkIdentifier, stateLinkCodeState, OriginalAddress1, OriginalAddress2, OriginalCity, OriginalStateProv, OriginalPostalCode, OriginalCountry, WC_LocationId, ExposureRecordLinkForLocationCode, AddressCompare, LocationDeletedIndicator, Name_Location_Deleted_Indicator, Email\n\tFROM JNR_03_Record\n\tUNION\n\tSELECT WCTrackHistoryID, LinkData, AuditId, WCTrackHistoryID11, PhoneNumber, TransactionEffectiveDate, TransactionExpirationDate, NAICSCode, LocationType, NameLinkIdentifier, Address1 AS OriginalAddress1, Address2 AS OriginalAddress2, City AS OriginalCity, StateProv AS OriginalStateProv, PostalCode AS OriginalPostalCode, Country AS OriginalCountry, Email\n\tFROM EXP_WBMI_Format\n),\nRTR_StateSplit AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tLinkData,\n\tPhoneNumber,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\tNAICSCode,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tLocationType,\n\tNameLinkIdentifier,\n\tstateLinkCodeState,\n\tOriginalAddress1,\n\tOriginalAddress2,\n\tOriginalCity,\n\tOriginalStateProv,\n\tOriginalPostalCode,\n\tOriginalCountry,\n\tWC_LocationId,\n\tExposureRecordLinkForLocationCode,\n\tLocationDeletedIndicator,\n\tName_Location_Deleted_Indicator,\n\tEmail\n\tFROM UN_PolicyLocation_CarrierLocation\n),\nRTR_StateSplit_IN_IA_MO AS (SELECT * FROM RTR_StateSplit WHERE IN(OriginalStateProv,'AZ','IA','IN','KY','MO','MT','TX') and LocationType='Location'),\nRTR_StateSplit_DEFAULT1 AS (SELECT * FROM RTR_StateSplit WHERE NOT ( (IN(OriginalStateProv,'AZ','IA','IN','KY','MO','MT','TX') and LocationType='Location') )),\nEXP_Format_Output_IN_IA_MO AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS o_ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\t'03' AS o_RecordTypeCode,\n\tLocationType,\n\t-- *INF*: Decode(TRUE,\r\n\t-- LocationType = 'Account' and NameLinkIdentifier='001','1',\r\n\t-- LocationType = 'Agency','5',\r\n\t-- LocationType = 'WBMI','3',\r\n\t-- '2')\n\tDecode(\n\t    TRUE,\n\t    LocationType = 'Account' and NameLinkIdentifier = '001', '1',\n\t    LocationType = 'Agency', '5',\n\t    LocationType = 'WBMI', '3',\n\t    '2'\n\t) AS v_AddressTypeCode,\n\tv_AddressTypeCode AS o_AddressTypeCode,\n\tCountry,\n\t-- *INF*: IIF (Country = 'US' or Country = 'USA' or Country = 'UnitedStatesOfAmerica' or Country = 'UNITEDSTATESOFAMERICA' or IsNull(Country) or rtrim(ltrim(Country))='','N','Y')\n\tIFF(\n\t    Country = 'US'\n\t    or Country = 'USA'\n\t    or Country = 'UnitedStatesOfAmerica'\n\t    or Country = 'UNITEDSTATESOFAMERICA'\n\t    or Country IS NULL\n\t    or rtrim(ltrim(Country)) = '',\n\t    'N',\n\t    'Y'\n\t) AS v_ForeignAddressIndicator,\n\tv_ForeignAddressIndicator AS o_ForeignAddressIndicator,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','0',\r\n\t-- '1')\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '0',\n\t    '1'\n\t) AS o_AddressStructureCode,\n\tAddress AS Address1,\n\tAddress2,\n\t-- *INF*: SUBSTR(Address1 || ' ' || Address2, 1, 60)\n\tSUBSTR(Address1 || ' ' || Address2, 1, 60) AS o_AddressStreet,\n\tCity AS AddressCity,\n\tStateProv AS AddressState,\n\tPostalCode,\n\t-- *INF*: IIF (LENGTH(PostalCode) = 5 or LENGTH(PostalCode) = 9, PostalCode,\r\n\t-- IIF (LENGTH(PostalCode) = 10 and SUBSTR(PostalCode,6,1) = '-',CONCAT(SUBSTR(PostalCode,1,5),SUBSTR(PostalCode,7,4)),''))\n\tIFF(\n\t    LENGTH(PostalCode) = 5 or LENGTH(PostalCode) = 9, PostalCode,\n\t    IFF(\n\t        LENGTH(PostalCode) = 10\n\t    and SUBSTR(PostalCode, 6, 1) = '-',\n\t        CONCAT(SUBSTR(PostalCode, 1, 5), SUBSTR(PostalCode, 7, 4)),\n\t        ''\n\t    )\n\t) AS v_PostalCode,\n\t-- *INF*: IIF (IS_NUMBER(v_PostalCode),v_PostalCode,'')\n\tIFF(REGEXP_LIKE(v_PostalCode, '^[0-9]+$'), v_PostalCode, '') AS o_PostalCode,\n\tNameLinkIdentifier,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(LocationType,'WBMI','Agency'),'99',\r\n\t--  :LKP.LKP_SupWCPOLS('DCT',stateLinkCodeState,'WCPOLS03Record','StateCodeRecord03')\r\n\t-- )\r\n\t-- --IIF (LocationType = 'WBMI','99', :LKP.LKP_SupWCPOLS('DCT',stateLinkCodeState,'WCPOLS03Record','StateCodeRecord03'))\r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    LocationType IN ('WBMI','Agency'), '99',\n\t    LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.WCPOLSCode\n\t) AS o_StateCodeLink,\n\tExposureRecordLinkForLocationCode,\n\t-- *INF*: IIF(IN(v_AddressTypeCode,'3','4','5'),'99999',ExposureRecordLinkForLocationCode)\n\tIFF(v_AddressTypeCode IN ('3','4','5'), '99999', ExposureRecordLinkForLocationCode) AS o_ExposureRecordLinkForLocationCode,\n\tPhoneNumber AS PhoneNumberOfInsured,\n\tNAICSCode AS IndustryCode,\n\t-- *INF*: IIF(IN(v_AddressTypeCode,'1','2'),IndustryCode,'')\n\tIFF(v_AddressTypeCode IN ('1','2'), IndustryCode, '') AS o_IndustryCode,\n\t-- *INF*: IIF(v_ForeignAddressIndicator='Y',AddressState,'')\r\n\t-- --IIF (Country <> 'USA' and Country <> 'UnitedStatesOfAmerica' and Country <> 'UNITEDSTATESOFAMERICA',AddressState,'')\n\tIFF(v_ForeignAddressIndicator = 'Y', AddressState, '') AS o_GeographicArea,\n\tEmail AS i_EmailAddress,\n\t-- *INF*: IIF(IN(v_AddressTypeCode, '1', '2', '6'), IIF(ISNULL(i_EmailAddress), '', i_EmailAddress), '')\n\tIFF(\n\t    v_AddressTypeCode IN ('1','2','6'),\n\t    IFF(\n\t        i_EmailAddress IS NULL, '', i_EmailAddress\n\t    ),\n\t    ''\n\t) AS o_EmailAddress,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ForeignAddressIndicator='Y' AND ISNULL(:LKP.LKP_SupWCPOLS('DCT',Country,'WCPOLS03Record','CountryCode')),'  ',\r\n\t-- v_ForeignAddressIndicator='Y',:LKP.LKP_SupWCPOLS('DCT',Country,'WCPOLS03Record','CountryCode'),\r\n\t-- ' ')\n\tDECODE(\n\t    TRUE,\n\t    v_ForeignAddressIndicator = 'Y' AND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.WCPOLSCode IS NULL, '  ',\n\t    v_ForeignAddressIndicator = 'Y', LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.WCPOLSCode,\n\t    ' '\n\t) AS o_CountryCode,\n\t'00' AS NameLinkCounterIdentifier,\n\tTransactionEffectiveDate AS PolicyChangeEffectiveDate,\n\t-- *INF*: TO_CHAR(PolicyChangeEffectiveDate,'YYMMDD')\n\tTO_CHAR(PolicyChangeEffectiveDate, 'YYMMDD') AS o_PolicyChangeEffectiveDate,\n\tTransactionExpirationDate AS PolicyChangeExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Name_Location_Deleted_Indicator='1',TO_CHAR(PolicyChangeEffectiveDate,'YYMMDD'),\r\n\t-- TO_CHAR(PolicyChangeExpirationDate,'YYMMDD')\r\n\t-- )\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    Name_Location_Deleted_Indicator = '1', TO_CHAR(PolicyChangeEffectiveDate, 'YYMMDD'),\n\t    TO_CHAR(PolicyChangeExpirationDate, 'YYMMDD')\n\t) AS o_PolicyChangeExpirationDate,\n\tstateLinkCodeState,\n\tWC_LocationId AS WC_LocationId1,\n\tLocationDeletedIndicator,\n\tName_Location_Deleted_Indicator\n\tFROM RTR_StateSplit_IN_IA_MO\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03\n\tON LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.SourceCode = stateLinkCodeState\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.TableName = 'WCPOLS03Record'\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.ProcessName = 'StateCodeRecord03'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode\n\tON LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.SourceCode = Country\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.TableName = 'WCPOLS03Record'\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.ProcessName = 'CountryCode'\n\n),\nWCPols03RecordINIAMO AS (\n\tINSERT INTO WCPols03RecordINIAMO\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, RecordTypeCode, AddressTypeCode, ForeignAddressIndicator, AddressStructureCode, AddressStreet, AddressCity, AddressState, AddressZipCode, NameLinkIdentifier, StateCodeLink, ExposureRecordLinkForLocationCode, PhoneNumberOfInsured, NumberOfEmployees, IndustryCode, GeographicArea, EmailAddress, CountryCode, NameLinkCounterIdentifier, PolicyChangeEffectiveDate, PolicyChangeExpirationDate)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_AuditId AS AUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\to_RecordTypeCode AS RECORDTYPECODE, \n\to_AddressTypeCode AS ADDRESSTYPECODE, \n\to_ForeignAddressIndicator AS FOREIGNADDRESSINDICATOR, \n\to_AddressStructureCode AS ADDRESSSTRUCTURECODE, \n\to_AddressStreet AS ADDRESSSTREET, \n\tADDRESSCITY, \n\tADDRESSSTATE, \n\to_PostalCode AS ADDRESSZIPCODE, \n\tNAMELINKIDENTIFIER, \n\to_StateCodeLink AS STATECODELINK, \n\to_ExposureRecordLinkForLocationCode AS EXPOSURERECORDLINKFORLOCATIONCODE, \n\tPHONENUMBEROFINSURED, \n\tNUMBEROFEMPLOYEES, \n\to_IndustryCode AS INDUSTRYCODE, \n\to_GeographicArea AS GEOGRAPHICAREA, \n\to_EmailAddress AS EMAILADDRESS, \n\to_CountryCode AS COUNTRYCODE, \n\tNAMELINKCOUNTERIDENTIFIER, \n\to_PolicyChangeEffectiveDate AS POLICYCHANGEEFFECTIVEDATE, \n\to_PolicyChangeExpirationDate AS POLICYCHANGEEXPIRATIONDATE\n\tFROM EXP_Format_Output_IN_IA_MO\n),\nSQ_WorkWCLine AS (\n\tWITH Limit_CTE\r\n\tAS\r\n\t(\r\n\tSELECT\r\n\t\tMAX(CONVERT(FLOAT, LimitValue)) AS LimitValue\r\n\t\t,WCTrackHistoryID\r\n\t\t,CoverageId\r\n\tFROM dbo.WorkWCLimit\r\n\tWHERE 1 = 1\r\n\t\tAND LimitType = 'UnitsOfExposureEstimated'\r\n\t\tAND CoverageType = 'ManualPremium'\r\n\t\tAND ISNUMERIC(LimitValue) = 1\r\n\t\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tGROUP BY WCTrackHistoryID, CoverageId\r\n\t)\r\n\t\r\n\t\r\n\tSELECT\r\n\t\tcov.WCTrackHistoryID\r\n\t\t,loc.StateProv AS RiskState\r\n\t\t,trm.State AS StateTermState\r\n\t\t,det_C.Value AS ClassCode\r\n\t\t,det_S.Value AS StatCode\r\n\t\t,lim.LimitValue\r\n\t\t,cov.BaseRate\r\n\t\t,cov.ParentCoverageType\r\n\t\t,cov.ChildCoverageType\r\n\t\t,ISNULL(cov.Premium,0) Premium\r\n\t\t,cov.PeriodStartDate AS COV_PeriodStartDate\r\n\t\t,cov.PeriodEndDate AS COV_PeriodEndDate\r\n\t\t,trm.PeriodStartDate AS TRM_PeriodStartDate\r\n\t\t,trm.PeriodEndDate AS TRM_PeriodEndDate\r\n\t\t,pol.TransactionEffectiveDate\r\n\t\t,pol.TransactionExpirationDate\r\n\t      ,loc.WC_LocationId\r\n\t      ,cov.ParentCoverageId\r\n\t\t,WT.MNRequiredFlag\r\n\t\t,MIN(trm.PeriodStartDate) OVER(PARTITION BY cov.WCTrackHistoryID, State) FIRST_TRMPeriodStartDate\r\n\t\t,MAX(trm.PeriodStartDate) OVER(PARTITION BY cov.WCTrackHistoryID, State) LAST_TRMPeriodStartDate\r\n\t\t,MIN(cov.PeriodStartDate) OVER(PARTITION BY cov.WCTrackHistoryID, State) FIRST_COVPeriodStartDate\r\n\t\t,MAX(cov.PeriodStartDate) OVER(PARTITION BY cov.WCTrackHistoryID, State) LAST_CovPeriodStartDate\r\n\t\t,case when ParentCoverageDeleteFlag=1 then '1' else '0' END ParentCoverageDeleteFlag\r\n\t\r\n\tFROM dbo.WorkWCCoverage cov\r\n\t\r\n\tINNER JOIN dbo.WorkWCPolicy pol\r\n\t\tON cov.WCTrackHistoryID = pol.WCTrackHistoryID\r\n\t\r\n\tINNER JOIN dbo.WorkWCTrackHistory WT\r\n\t\tON WT.WCTrackHistoryID=cov.WCTrackHistoryID\r\n\t\tAND WT.Auditid=Cov.Auditid\r\n\t\r\n\tLEFT JOIN Limit_CTE lim\r\n\t\tON cov.WCTrackHistoryID = lim.WCTrackHistoryID\r\n\t\t\tAND lim.CoverageId = cov.ParentCoverageId\r\n\t\r\n\tLEFT JOIN dbo.WorkWCCoverageDetails det_S\r\n\t\tON cov.WCTrackHistoryID = det_S.WCTrackHistoryID\r\n\t\t\tAND det_S.CoverageId = cov.ParentCoverageId\r\n\t\t\tAND det_S.CoverageType <> 'ManualPremium'\r\n\t\t\tAND det_S.Attribute = 'StatCode'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCCoverageDetails det_C\r\n\t\tON cov.WCTrackHistoryID = det_C.WCTrackHistoryID\r\n\t\t\tAND det_C.CoverageId = cov.ParentCoverageId\r\n\t\t\tAND det_C.CoverageType = 'ManualPremium'\r\n\t\t\tAND det_C.Attribute = 'ClassCode'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCStateTerm trm\r\n\t\tON cov.WCTrackHistoryID = trm.WCTrackHistoryID\r\n\t\t\tAND trm.WC_StateTermId = cov.ParentObjectId\r\n\t\t\tAND cov.ParentObjectName = 'DC_WC_StateTerm'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCRisk rsk\r\n\t\tON cov.WCTrackHistoryID = rsk.WCTrackHistoryID\r\n\t\t\tAND rsk.WC_RiskID = cov.ParentObjectId\r\n\t\t\tAND cov.ParentObjectName = 'DC_WC_Risk'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCLocation loc\r\n\t\tON cov.WCTrackHistoryID = loc.WCTrackHistoryID\r\n\t\t\tAND rsk.WC_LocationId = loc.WC_LocationId\r\n\t\t\t--AND loc.LocationDeletedIndicator != 1\r\n\t\r\n\tWHERE 1 = 1\r\n\tAND cov.ParentCoverageType NOT IN ('ExperienceModification', 'ExpenseConstant', 'PremiumDiscount', 'EmployersLiability')\r\n\t--and cov.ParentCoverageDeleteFlag=0\r\n\tAND cov.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_05}\r\n\t\r\n\tORDER BY cov.WCTrackHistoryID\n),\nJNR_Exposure_TO_LinkData AS (SELECT\n\tSQ_WCPols00Record.WCTrackHistoryID, \n\tSQ_WCPols00Record.LinkData, \n\tSQ_WCPols00Record.AuditId, \n\tSQ_WorkWCLine.WCTrackHistoryID AS WCTrackHistoryID1, \n\tSQ_WorkWCLine.RiskState, \n\tSQ_WorkWCLine.StateTermState, \n\tSQ_WorkWCLine.ClassCode, \n\tSQ_WorkWCLine.StatCode, \n\tSQ_WorkWCLine.LimitValue, \n\tSQ_WorkWCLine.BaseRate, \n\tSQ_WorkWCLine.ParentCoverageType, \n\tSQ_WorkWCLine.ChildCoverageType, \n\tSQ_WorkWCLine.Premium, \n\tSQ_WorkWCLine.COV_PeriodStartDate, \n\tSQ_WorkWCLine.COV_PeriodEndDate, \n\tSQ_WorkWCLine.TRM_PeriodStartDate, \n\tSQ_WorkWCLine.TRM_PeriodEndDate, \n\tSQ_WorkWCLine.TransactionEffectiveDate, \n\tSQ_WorkWCLine.TransactionExpirationDate, \n\tSQ_WorkWCLine.WC_LocationId, \n\tSQ_WorkWCLine.ParentCoverageId, \n\tSQ_WorkWCLine.MNRequiredFlag, \n\tSQ_WorkWCLine.FIRST_TRMPeriodStartDate, \n\tSQ_WorkWCLine.LAST_TRMPeriodStartDate, \n\tSQ_WorkWCLine.FIRST_COVPeriodStartDate, \n\tSQ_WorkWCLine.LAST_CovPeriodStartDate, \n\tSQ_WorkWCLine.ParentCoverageDeleteFlag\n\tFROM SQ_WorkWCLine\n\tINNER JOIN SQ_WCPols00Record\n\tON SQ_WCPols00Record.WCTrackHistoryID = SQ_WorkWCLine.WCTrackHistoryID\n),\nEXP_05_Output AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\tAuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\tRiskState,\n\tStateTermState,\n\t-- *INF*: IIF(IsNull(StateTermState),RiskState,StateTermState)\n\tIFF(StateTermState IS NULL, RiskState, StateTermState) AS v_Lkp_State,\n\t-- *INF*:  :LKP.LKP_SupWCPOLS('DCT',v_Lkp_State,'WCPOLS05Record','StateCodeRecord05')\n\tLKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05.WCPOLSCode AS o_StateCode,\n\t'05' AS RecordTypeCode,\n\tClassCode,\n\tStatCode,\n\tParentCoverageType,\n\tChildCoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- --ParentCoverageType='SecondInjuryFund' AND LTRIM(RTRIM(v_Lkp_State))='MN','0174',\r\n\t-- ParentCoverageType = 'ManualPremium', substr(ClassCode,1,4),\r\n\t-- NOT IN(ParentCoverageType,'ExpenseConstant','ExperienceModification','PremiumDiscount' ),substr(StatCode,1,4),\r\n\t-- '0000'\r\n\t-- )\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    ParentCoverageType = 'ManualPremium', substr(ClassCode, 1, 4),\n\t    NOT ParentCoverageType IN ('ExpenseConstant','ExperienceModification','PremiumDiscount'), substr(StatCode, 1, 4),\n\t    '0000'\n\t) AS v_ClassificationCode,\n\tv_ClassificationCode AS o_ClassificationCode,\n\tBaseRate,\n\t-- *INF*: IIF(LTRIM(RTRIM(ParentCoverageType))='EmpIoyersLiabilityIncreasedLimits',BaseRate/100,BaseRate)\r\n\t-- \n\tIFF(\n\t    LTRIM(RTRIM(ParentCoverageType)) = 'EmpIoyersLiabilityIncreasedLimits', BaseRate / 100,\n\t    BaseRate\n\t) AS v_BaseRate_PriorCheck,\n\t-- *INF*: IIF(v_BaseRate_PriorCheck<1,v_BaseRate_PriorCheck,v_BaseRate_PriorCheck*10000)\r\n\t-- \n\tIFF(v_BaseRate_PriorCheck < 1, v_BaseRate_PriorCheck, v_BaseRate_PriorCheck * 10000) AS v_BaseRate_Check,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_BaseRate_Check<1,\r\n\t-- TO_CHAR(SUBSTR(v_BaseRate_PriorCheck,1,INSTR(v_BaseRate_PriorCheck,'.'))) || TO_CHAR(RPAD(SUBSTR(v_BaseRate_PriorCheck,INSTR(v_BaseRate_PriorCheck,'.')+1,4),4,0)),\r\n\t-- TO_CHAR(v_BaseRate_Check)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_BaseRate_Check < 1, TO_CHAR(SUBSTR(v_BaseRate_PriorCheck, 1, REGEXP_INSTR(v_BaseRate_PriorCheck, '.'))) || TO_CHAR(RPAD(SUBSTR(v_BaseRate_PriorCheck, REGEXP_INSTR(v_BaseRate_PriorCheck, '.') + 1, 4), 4, 0)),\n\t    TO_CHAR(v_BaseRate_Check)\n\t) AS v_BaseRate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- --ParentCoverageType='SecondInjuryFund',LPAD('0',10,'0'),\r\n\t-- NOT ISNULL (v_BaseRate),LPAD((Replacechr(1,v_BaseRate,'.','')),10,'0'),\r\n\t-- LPAD('0',10,'0')\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_BaseRate IS NOT NULL, LPAD((REGEXP_REPLACE(v_BaseRate,'.','')), 10, '0'),\n\t    LPAD('0', 10, '0')\n\t) AS o_ManualChargedRate,\n\tCOV_PeriodStartDate,\n\tCOV_PeriodEndDate,\n\tTRM_PeriodStartDate,\n\tTRM_PeriodEndDate,\n\t-- *INF*: IIF(ParentCoverageType = 'ManualPremium',COV_PeriodStartDate,TRM_PeriodStartDate)\n\tIFF(ParentCoverageType = 'ManualPremium', COV_PeriodStartDate, TRM_PeriodStartDate) AS v_PeriodStartDate,\n\t-- *INF*: IIF(ParentCoverageType = 'ManualPremium',COV_PeriodEndDate,TRM_PeriodEndDate)\n\tIFF(ParentCoverageType = 'ManualPremium', COV_PeriodEndDate, TRM_PeriodEndDate) AS v_PeriodEndDate,\n\t-- *INF*: TO_CHAR(v_PeriodStartDate,'YYMMDD')\n\tTO_CHAR(v_PeriodStartDate, 'YYMMDD') AS ExposurePeriodEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ClassificationCode= '1212'  and IN(v_Lkp_State,'DE','PA' ), 'ClassCode',\r\n\t-- v_ClassificationCode= '0012'  and NOT IN(v_Lkp_State,'DE','PA'), 'ClassCode',\r\n\t-- ParentCoverageType <> 'ManualPremium' and not IsNull(TRM_PeriodStartDate),'StatCode',\r\n\t-- ParentCoverageType = 'ManualPremium' and ((NOT IN(ChildCoverageType,'USL&H','USLandH','USLANDH')) or IsNull(ChildCoverageType)),'StateActOrFederalActExcludingUSLHW',\r\n\t-- ParentCoverageType = 'ManualPremium' and IN(ChildCoverageType,'USL&H','USLandH','USLANDH'),'USLHW',NULL\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_ClassificationCode = '1212' and v_Lkp_State IN ('DE','PA'), 'ClassCode',\n\t    v_ClassificationCode = '0012' and NOT v_Lkp_State IN ('DE','PA'), 'ClassCode',\n\t    ParentCoverageType <> 'ManualPremium' and TRM_PeriodStartDate IS NOT NULL, 'StatCode',\n\t    ParentCoverageType = 'ManualPremium' and ((NOT ChildCoverageType IN ('USL&H','USLandH','USLANDH')) or ChildCoverageType IS NULL), 'StateActOrFederalActExcludingUSLHW',\n\t    ParentCoverageType = 'ManualPremium' and ChildCoverageType IN ('USL&H','USLandH','USLANDH'), 'USLHW',\n\t    NULL\n\t) AS v_ExpCodeLkp,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',v_ExpCodeLkp,'WCPOLS05Record','ExposureActExposureCoverageCode')\n\tLKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode.WCPOLSCode AS o_ExposureActExposureCoverageCode,\n\tLimitValue AS EstimatedExposureAmount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ParentCoverageDeleteFlag='1' AND Premium=0,'0',\r\n\t-- IN(v_ClassificationCode,'7709','0908','0909','0912','0913','0916','0923','8989'),TO_CHAR(EstimatedExposureAmount*100),\r\n\t-- TO_CHAR(EstimatedExposureAmount))\n\tDECODE(\n\t    TRUE,\n\t    ParentCoverageDeleteFlag = '1' AND Premium = 0, '0',\n\t    v_ClassificationCode IN ('7709','0908','0909','0912','0913','0916','0923','8989'), TO_CHAR(EstimatedExposureAmount * 100),\n\t    TO_CHAR(EstimatedExposureAmount)\n\t) AS o_EstimatedExposureAmount,\n\tPremium,\n\t-- *INF*: TO_CHAR(Abs(To_Integer(Premium)))\n\tTO_CHAR(Abs(CAST(Premium AS INTEGER))) AS o_EstimatedPremiumAmount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(LTRIM(RTRIM(UPPER(ParentCoverageType))),'UNINSUREDEMPLOYERSFUND','SECONDINJURYFUND') AND LTRIM(RTRIM(UPPER(v_Lkp_State)))='NJ',TO_CHAR(BaseRate*10000),\r\n\t-- LPAD('0',10,'0'))\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(UPPER(ParentCoverageType))) IN ('UNINSUREDEMPLOYERSFUND','SECONDINJURYFUND') AND LTRIM(RTRIM(UPPER(v_Lkp_State))) = 'NJ', TO_CHAR(BaseRate * 10000),\n\t    LPAD('0', 10, '0')\n\t) AS v_PolicySurchargeFactor,\n\t-- *INF*: IIF(NOT ISNULL (v_PolicySurchargeFactor),LPAD((Replacechr(1,v_PolicySurchargeFactor,'.','')),10,'0'),\r\n\t-- LPAD('0',10,'0'))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_PolicySurchargeFactor IS NOT NULL,\n\t    LPAD((REGEXP_REPLACE(v_PolicySurchargeFactor,'.','')), 10, '0'),\n\t    LPAD('0', 10, '0')\n\t) AS PolicySurchargeFactor,\n\tTransactionEffectiveDate,\n\tTransactionExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ParentCoverageType = 'ManualPremium' AND FIRST_COVPeriodStartDate<> LAST_CovPeriodStartDate ,\r\n\t-- TO_CHAR(v_PeriodStartDate,'YYMMDD'),\r\n\t-- ParentCoverageType <> 'ManualPremium' AND FIRST_TRMPeriodStartDate<>LAST_TRMPeriodStartDate,TO_CHAR(v_PeriodStartDate,'YYMMDD'),TO_CHAR(TransactionEffectiveDate,'YYMMDD')\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    ParentCoverageType = 'ManualPremium' AND FIRST_COVPeriodStartDate <> LAST_CovPeriodStartDate, TO_CHAR(v_PeriodStartDate, 'YYMMDD'),\n\t    ParentCoverageType <> 'ManualPremium' AND FIRST_TRMPeriodStartDate <> LAST_TRMPeriodStartDate, TO_CHAR(v_PeriodStartDate, 'YYMMDD'),\n\t    TO_CHAR(TransactionEffectiveDate, 'YYMMDD')\n\t) AS PolicyChangeEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ParentCoverageType = 'ManualPremium' AND FIRST_COVPeriodStartDate<> LAST_CovPeriodStartDate ,\r\n\t-- TO_CHAR(v_PeriodEndDate,'YYMMDD'),\r\n\t-- ParentCoverageType <> 'ManualPremium' AND FIRST_TRMPeriodStartDate<>LAST_TRMPeriodStartDate,TO_CHAR(v_PeriodEndDate,'YYMMDD'),TO_CHAR(TransactionExpirationDate,'YYMMDD')\r\n\t-- )\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    ParentCoverageType = 'ManualPremium' AND FIRST_COVPeriodStartDate <> LAST_CovPeriodStartDate, TO_CHAR(v_PeriodEndDate, 'YYMMDD'),\n\t    ParentCoverageType <> 'ManualPremium' AND FIRST_TRMPeriodStartDate <> LAST_TRMPeriodStartDate, TO_CHAR(v_PeriodEndDate, 'YYMMDD'),\n\t    TO_CHAR(TransactionExpirationDate, 'YYMMDD')\n\t) AS PolicyChangeExpirationDate,\n\tWC_LocationId,\n\tParentCoverageId,\n\tMNRequiredFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(UPPER(ParentCoverageType),'DTEC','TRIA') AND LTRIM(RTRIM(v_Lkp_State))<>'WI' AND (ISNULL(Premium) OR Premium=0),'0',\r\n\t-- (LTRIM(RTRIM(v_ClassificationCode))='9999' AND IN(UPPER(ParentCoverageType),'ADMINISTRATIONFUND','DIASURCHARGE','EMPLOYERASSESSMENT','INSURANCEGUARANTYASSOCIATION','OTHERTAXESANDASSESSMENTS1','OTHERTAXESANDASSESSMENTS2','OTHERTAXESANDASSESSMENTS3','SAFETYEDUCATIONANDTRAININGFUND','SECONDINJURYFUND','SECURITYFUNDCHARGE','STATEASSESSMENT','UNINSUREDEMPLOYERSFUND')),'0',\r\n\t-- '1'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    UPPER(ParentCoverageType) IN ('DTEC','TRIA') AND LTRIM(RTRIM(v_Lkp_State)) <> 'WI' AND (Premium IS NULL OR Premium = 0), '0',\n\t    (LTRIM(RTRIM(v_ClassificationCode)) = '9999' AND UPPER(ParentCoverageType) IN ('ADMINISTRATIONFUND','DIASURCHARGE','EMPLOYERASSESSMENT','INSURANCEGUARANTYASSOCIATION','OTHERTAXESANDASSESSMENTS1','OTHERTAXESANDASSESSMENTS2','OTHERTAXESANDASSESSMENTS3','SAFETYEDUCATIONANDTRAININGFUND','SECONDINJURYFUND','SECURITYFUNDCHARGE','STATEASSESSMENT','UNINSUREDEMPLOYERSFUND')), '0',\n\t    '1'\n\t) AS Record05FilterFlag,\n\tFIRST_TRMPeriodStartDate,\n\tLAST_TRMPeriodStartDate,\n\tFIRST_COVPeriodStartDate,\n\tLAST_CovPeriodStartDate,\n\tParentCoverageDeleteFlag\n\tFROM JNR_Exposure_TO_LinkData\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05\n\tON LKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05.SourceCode = v_Lkp_State\n\tAND LKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05.TableName = 'WCPOLS05Record'\n\tAND LKP_SUPWCPOLS__DCT_v_Lkp_State_WCPOLS05Record_StateCodeRecord05.ProcessName = 'StateCodeRecord05'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode\n\tON LKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode.SourceCode = v_ExpCodeLkp\n\tAND LKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode.TableName = 'WCPOLS05Record'\n\tAND LKP_SUPWCPOLS__DCT_v_ExpCodeLkp_WCPOLS05Record_ExposureActExposureCoverageCode.ProcessName = 'ExposureActExposureCoverageCode'\n\n),\nFIL_ClassCode AS (\n\tSELECT\n\tExtractDate, \n\tAuditId, \n\tWCTrackHistoryID, \n\tLinkData, \n\to_StateCode AS StateCode, \n\tRecordTypeCode, \n\to_ClassificationCode AS ClassificationCode, \n\to_ExposureActExposureCoverageCode AS ExposureActExposureCoverageCode, \n\to_ManualChargedRate AS ManualChargedRate, \n\tExposurePeriodEffectiveDate, \n\to_EstimatedExposureAmount AS EstimatedExposureAmount, \n\to_EstimatedPremiumAmount AS EstimatedPremiumAmount, \n\tPolicyChangeEffectiveDate, \n\tPolicyChangeExpirationDate, \n\tWC_LocationId, \n\tParentCoverageId, \n\tRecord05FilterFlag, \n\tParentCoverageDeleteFlag, \n\tPolicySurchargeFactor\n\tFROM EXP_05_Output\n\tWHERE Not IsNull(ClassificationCode) AND Record05FilterFlag='1'\n),\nEXP_Format_Output AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS o_ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\t'03' AS o_RecordTypeCode,\n\tLocationType,\n\t-- *INF*: Decode(TRUE,\r\n\t-- LocationType = 'Account' and NameLinkIdentifier='001','1',\r\n\t-- LocationType = 'Agency','5',\r\n\t-- LocationType = 'WBMI','3',\r\n\t-- INSTR(Address1,'VARIOUS')>0 \r\n\t-- OR INSTR(Address1,'ADDRESS')>0 \r\n\t-- OR INSTR(Address1,'LOCATION')>0 \r\n\t-- OR INSTR(Address1,'USED')>0 \r\n\t-- OR INSTR(Address1,'SPECIFIED')>0,'6',\r\n\t-- '2')\n\tDecode(\n\t    TRUE,\n\t    LocationType = 'Account' and NameLinkIdentifier = '001', '1',\n\t    LocationType = 'Agency', '5',\n\t    LocationType = 'WBMI', '3',\n\t    REGEXP_INSTR(Address1, 'VARIOUS') > 0 OR REGEXP_INSTR(Address1, 'ADDRESS') > 0 OR REGEXP_INSTR(Address1, 'LOCATION') > 0 OR REGEXP_INSTR(Address1, 'USED') > 0 OR REGEXP_INSTR(Address1, 'SPECIFIED') > 0, '6',\n\t    '2'\n\t) AS v_AddressTypeCode,\n\tv_AddressTypeCode AS o_AddressTypeCode,\n\tOriginalCountry AS Country,\n\t-- *INF*: IIF (Country = 'US' or Country = 'USA' or Country = 'UnitedStatesOfAmerica' or Country = 'UNITEDSTATESOFAMERICA' or IsNull(Country) or rtrim(ltrim(Country))='','N','Y')\n\tIFF(\n\t    Country = 'US'\n\t    or Country = 'USA'\n\t    or Country = 'UnitedStatesOfAmerica'\n\t    or Country = 'UNITEDSTATESOFAMERICA'\n\t    or Country IS NULL\n\t    or rtrim(ltrim(Country)) = '',\n\t    'N',\n\t    'Y'\n\t) AS v_ForeignAddressIndicator,\n\tv_ForeignAddressIndicator AS o_ForeignAddressIndicator,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','0',\r\n\t-- '1')\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '0',\n\t    '1'\n\t) AS o_AddressStructureCode,\n\tOriginalAddress1 AS Address1,\n\tOriginalAddress AS Address2,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','',\r\n\t-- SUBSTR(Address1 || ' ' || Address2, 1, 60)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '',\n\t    SUBSTR(Address1 || ' ' || Address2, 1, 60)\n\t) AS o_AddressStreet,\n\tOriginalCity AS AddressCity,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','',\r\n\t-- AddressCity)\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '',\n\t    AddressCity\n\t) AS o_AddressCity,\n\tOriginalStateProv AS AddressState,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','',\r\n\t-- AddressState)\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '',\n\t    AddressState\n\t) AS o_AddressState,\n\tOriginalPostalCode AS PostalCode,\n\t-- *INF*: IIF (LENGTH(PostalCode) = 5 or LENGTH(PostalCode) = 9, PostalCode,\r\n\t-- IIF (LENGTH(PostalCode) = 10 and SUBSTR(PostalCode,6,1) = '-',CONCAT(SUBSTR(PostalCode,1,5),SUBSTR(PostalCode,7,4)),''))\n\tIFF(\n\t    LENGTH(PostalCode) = 5 or LENGTH(PostalCode) = 9, PostalCode,\n\t    IFF(\n\t        LENGTH(PostalCode) = 10\n\t    and SUBSTR(PostalCode, 6, 1) = '-',\n\t        CONCAT(SUBSTR(PostalCode, 1, 5), SUBSTR(PostalCode, 7, 4)),\n\t        ''\n\t    )\n\t) AS v_PostalCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AddressTypeCode='6','',\r\n\t-- IS_NUMBER(v_PostalCode),v_PostalCode,'')\n\tDECODE(\n\t    TRUE,\n\t    v_AddressTypeCode = '6', '',\n\t    REGEXP_LIKE(v_PostalCode, '^[0-9]+$'), v_PostalCode,\n\t    ''\n\t) AS o_PostalCode,\n\tNameLinkIdentifier,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(LocationType,'WBMI','Agency'),'99',\r\n\t--  :LKP.LKP_SupWCPOLS('DCT',stateLinkCodeState,'WCPOLS03Record','StateCodeRecord03')\r\n\t-- )\r\n\t-- --IIF (LocationType = 'WBMI','99', :LKP.LKP_SupWCPOLS('DCT',stateLinkCodeState,'WCPOLS03Record','StateCodeRecord03'))\n\tDECODE(\n\t    TRUE,\n\t    LocationType IN ('WBMI','Agency'), '99',\n\t    LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.WCPOLSCode\n\t) AS o_StateCodeLink,\n\tExposureRecordLinkForLocationCode,\n\t-- *INF*: IIF(IN(v_AddressTypeCode,'3','4','5'),'99999',ExposureRecordLinkForLocationCode)\n\tIFF(v_AddressTypeCode IN ('3','4','5'), '99999', ExposureRecordLinkForLocationCode) AS o_ExposureRecordLinkForLocationCode,\n\tPhoneNumber AS PhoneNumberOfInsured,\n\tNAICSCode AS IndustryCode,\n\t-- *INF*: IIF(IN(v_AddressTypeCode,'1','2','6'),IndustryCode,'')\n\tIFF(v_AddressTypeCode IN ('1','2','6'), IndustryCode, '') AS o_IndustryCode,\n\t-- *INF*: IIF(v_ForeignAddressIndicator='Y',AddressState,'')\r\n\t-- --IIF (Country <> 'USA' and Country <> 'UnitedStatesOfAmerica' and Country <> 'UNITEDSTATESOFAMERICA',AddressState,'')\n\tIFF(v_ForeignAddressIndicator = 'Y', AddressState, '') AS o_GeographicArea,\n\tEmail AS i_EmailAddress,\n\t-- *INF*: IIF(IN(v_AddressTypeCode, '1', '2', '6'), IIF(ISNULL(i_EmailAddress), '', i_EmailAddress), '')\n\tIFF(\n\t    v_AddressTypeCode IN ('1','2','6'),\n\t    IFF(\n\t        i_EmailAddress IS NULL, '', i_EmailAddress\n\t    ),\n\t    ''\n\t) AS o_EmailAddress,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ForeignAddressIndicator='Y' AND ISNULL(:LKP.LKP_SupWCPOLS('DCT',Country,'WCPOLS03Record','CountryCode')),'  ',\r\n\t-- v_ForeignAddressIndicator='Y',:LKP.LKP_SupWCPOLS('DCT',Country,'WCPOLS03Record','CountryCode'),\r\n\t-- ' ')\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    v_ForeignAddressIndicator = 'Y' AND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.WCPOLSCode IS NULL, '  ',\n\t    v_ForeignAddressIndicator = 'Y', LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.WCPOLSCode,\n\t    ' '\n\t) AS o_CountryCode,\n\t'00' AS NameLinkCounterIdentifier,\n\tTransactionEffectiveDate AS PolicyChangeEffectiveDate,\n\t-- *INF*: TO_CHAR(PolicyChangeEffectiveDate,'YYMMDD')\n\tTO_CHAR(PolicyChangeEffectiveDate, 'YYMMDD') AS o_PolicyChangeEffectiveDate,\n\tTransactionExpirationDate AS PolicyChangeExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Name_Location_Deleted_Indicator='1',TO_CHAR(PolicyChangeEffectiveDate,'YYMMDD'),\r\n\t-- TO_CHAR(PolicyChangeExpirationDate,'YYMMDD')\r\n\t-- )\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    Name_Location_Deleted_Indicator = '1', TO_CHAR(PolicyChangeEffectiveDate, 'YYMMDD'),\n\t    TO_CHAR(PolicyChangeExpirationDate, 'YYMMDD')\n\t) AS o_PolicyChangeExpirationDate,\n\tstateLinkCodeState,\n\tWC_LocationId AS WC_LocationId2,\n\tLocationDeletedIndicator,\n\tName_Location_Deleted_Indicator,\n\t-- *INF*: iif ( (v_AddressTypeCode = '2' and (SUBSTR(Address1,1,6) = 'PO BOX'  or SUBSTR(Address1,1,7) ='P O BOX' or SUBSTR(Address1,1,8) = 'P.O. BOX'))\r\n\t-- ,0, 1)\r\n\t-- \r\n\t-- -- 0 filter out\r\n\t-- --1 loads into 03 record table\r\n\t-- \r\n\t-- \n\tIFF(\n\t    (v_AddressTypeCode = '2'\n\t    and (SUBSTR(Address1, 1, 6) = 'PO BOX'\n\t    or SUBSTR(Address1, 1, 7) = 'P O BOX'\n\t    or SUBSTR(Address1, 1, 8) = 'P.O. BOX')),\n\t    0,\n\t    1\n\t) AS o_process_flag\n\tFROM RTR_StateSplit_DEFAULT1\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03\n\tON LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.SourceCode = stateLinkCodeState\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.TableName = 'WCPOLS03Record'\n\tAND LKP_SUPWCPOLS__DCT_stateLinkCodeState_WCPOLS03Record_StateCodeRecord03.ProcessName = 'StateCodeRecord03'\n\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode\n\tON LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.SourceCode = Country\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.TableName = 'WCPOLS03Record'\n\tAND LKP_SUPWCPOLS__DCT_Country_WCPOLS03Record_CountryCode.ProcessName = 'CountryCode'\n\n),\nUN_Merge_LocationInfo AS (\n\tSELECT o_AddressTypeCode AS AddressTypeCode, NameLinkIdentifier, o_StateCodeLink AS StateCodeLink, o_ExposureRecordLinkForLocationCode AS ExposureRecordLinkForLocationCode, WC_LocationId1 AS WC_LocationId, LocationDeletedIndicator\n\tFROM EXP_Format_Output_IN_IA_MO\n\tUNION\n\tSELECT o_AddressTypeCode AS AddressTypeCode, NameLinkIdentifier, o_StateCodeLink AS StateCodeLink, o_ExposureRecordLinkForLocationCode AS ExposureRecordLinkForLocationCode, WC_LocationId2 AS WC_LocationId, LocationDeletedIndicator\n\tFROM EXP_Format_Output\n),\nJNR_Exposure_Location_LinkUp AS (SELECT\n\tFIL_ClassCode.ExtractDate, \n\tFIL_ClassCode.AuditId, \n\tFIL_ClassCode.WCTrackHistoryID, \n\tFIL_ClassCode.LinkData, \n\tFIL_ClassCode.StateCode, \n\tFIL_ClassCode.RecordTypeCode, \n\tFIL_ClassCode.ClassificationCode, \n\tFIL_ClassCode.ExposureActExposureCoverageCode, \n\tFIL_ClassCode.ManualChargedRate, \n\tFIL_ClassCode.ExposurePeriodEffectiveDate, \n\tFIL_ClassCode.EstimatedExposureAmount, \n\tFIL_ClassCode.EstimatedPremiumAmount, \n\tFIL_ClassCode.PolicyChangeEffectiveDate, \n\tFIL_ClassCode.PolicyChangeExpirationDate, \n\tFIL_ClassCode.WC_LocationId, \n\tFIL_ClassCode.ParentCoverageId, \n\tFIL_ClassCode.Record05FilterFlag, \n\tFIL_ClassCode.ParentCoverageDeleteFlag, \n\tFIL_ClassCode.PolicySurchargeFactor, \n\tUN_Merge_LocationInfo.AddressTypeCode, \n\tUN_Merge_LocationInfo.NameLinkIdentifier, \n\tUN_Merge_LocationInfo.StateCodeLink, \n\tUN_Merge_LocationInfo.ExposureRecordLinkForLocationCode, \n\tUN_Merge_LocationInfo.WC_LocationId AS WC_LocationId1, \n\tUN_Merge_LocationInfo.LocationDeletedIndicator\n\tFROM FIL_ClassCode\n\tLEFT OUTER JOIN UN_Merge_LocationInfo\n\tON UN_Merge_LocationInfo.WC_LocationId = FIL_ClassCode.WC_LocationId\n),\nAGG_DuplicateElimination AS (\n\tSELECT\n\tExtractDate,\n\tAuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\tStateCode,\n\tRecordTypeCode,\n\tClassificationCode,\n\tExposureActExposureCoverageCode,\n\tManualChargedRate,\n\tExposurePeriodEffectiveDate,\n\tEstimatedExposureAmount,\n\tEstimatedPremiumAmount,\n\tPolicyChangeEffectiveDate,\n\tPolicyChangeExpirationDate,\n\tParentCoverageId,\n\tRecord05FilterFlag,\n\tParentCoverageDeleteFlag,\n\tAddressTypeCode,\n\tNameLinkIdentifier,\n\t-- *INF*: max(NameLinkIdentifier)\n\tmax(NameLinkIdentifier) AS o_NameLinkIdentifier,\n\tStateCodeLink,\n\tExposureRecordLinkForLocationCode,\n\tLocationDeletedIndicator,\n\tPolicySurchargeFactor\n\tFROM JNR_Exposure_Location_LinkUp\n\tGROUP BY WCTrackHistoryID, LinkData, StateCode, ClassificationCode, ManualChargedRate, ParentCoverageId\n),\nEXP_Record05_Tgt_DataCollect AS (\n\tSELECT\n\tExtractDate,\n\tAuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\tStateCode,\n\tRecordTypeCode,\n\tClassificationCode,\n\tExposureActExposureCoverageCode,\n\tManualChargedRate,\n\tExposurePeriodEffectiveDate,\n\tEstimatedExposureAmount,\n\tEstimatedPremiumAmount,\n\tPolicyChangeEffectiveDate,\n\tPolicyChangeExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- (LocationDeletedIndicator='1' OR ParentCoverageDeleteFlag='1'),PolicyChangeEffectiveDate,\r\n\t-- PolicyChangeExpirationDate\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    (LocationDeletedIndicator = '1' OR ParentCoverageDeleteFlag = '1'), PolicyChangeEffectiveDate,\n\t    PolicyChangeExpirationDate\n\t) AS o_PolicyChangeExpirationDate,\n\tRecord05FilterFlag,\n\tAddressTypeCode,\n\to_NameLinkIdentifier AS NameLinkIdentifier,\n\tStateCodeLink,\n\tExposureRecordLinkForLocationCode,\n\t'00' AS NameLinkCounterIdentifier,\n\tLocationDeletedIndicator,\n\tParentCoverageDeleteFlag,\n\tPolicySurchargeFactor\n\tFROM AGG_DuplicateElimination\n),\nWCPols05Record AS (\n\n\t------------ PRE SQL ----------\n\tDELETE\r\n\t  FROM dbo.WCPols05Record\r\n\t  WHERE 1=1\r\n\t  AND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t-------------------------------\n\n\n\tINSERT INTO WCPols05Record\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, StateCode, RecordTypeCode, ClassificationCode, ExposureActExposureCoverageCode, ManualChargedRate, ExposurePeriodEffectiveDate, EstimatedExposureAmount, EstimatedPremiumAmount, NameLinkIdentifier, StateCodeLink, ExposureRecordLinkForExposureCode, NameLinkCounterIdentifier, PolicySurchargeFactor, PolicyChangeEffectiveDate, PolicyChangeExpirationDate)\n\tSELECT \n\tEXTRACTDATE, \n\tAUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\tSTATECODE, \n\tRECORDTYPECODE, \n\tCLASSIFICATIONCODE, \n\tEXPOSUREACTEXPOSURECOVERAGECODE, \n\tMANUALCHARGEDRATE, \n\tEXPOSUREPERIODEFFECTIVEDATE, \n\tESTIMATEDEXPOSUREAMOUNT, \n\tESTIMATEDPREMIUMAMOUNT, \n\tNAMELINKIDENTIFIER, \n\tSTATECODELINK, \n\tExposureRecordLinkForLocationCode AS EXPOSURERECORDLINKFOREXPOSURECODE, \n\tNAMELINKCOUNTERIDENTIFIER, \n\tPOLICYSURCHARGEFACTOR, \n\tPOLICYCHANGEEFFECTIVEDATE, \n\to_PolicyChangeExpirationDate AS POLICYCHANGEEXPIRATIONDATE\n\tFROM EXP_Record05_Tgt_DataCollect\n),\nWCPols02Record AS (\n\n\t------------ PRE SQL ----------\n\tDELETE\r\n\t  FROM dbo.WCPols02Record\r\n\t  WHERE 1=1\r\n\t  AND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t-------------------------------\n\n\n\tINSERT INTO WCPols02Record\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, RecordTypeCode, NameTypeCode, NameLinkIdentifier, ProfessionalEmployerOrganizationOrClientCompanyCode, NameOfInsured, FederalEmployerIdentificationNumber, ContinuationSequenceNumber, LegalNatureOfEntityCode, StateCode01, StateUnemploymentNumber01, StateCode02, StateUnemploymentNumber02, StateCode03, StateUnemploymentNumber03, StateUnemploymentNumberRecordSequenceNumber, NameLinkCounterIdentifier, PolicyChangeEffectiveDate, PolicyChangeExpirationDate)\n\tSELECT \n\tEXTRACTDATE, \n\tAUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\tRECORDTYPECODE, \n\to_NameTypeCode AS NAMETYPECODE, \n\tNAMELINKIDENTIFIER, \n\to_ProfessionalEmployerOrganizationOrClientCompanyCode AS PROFESSIONALEMPLOYERORGANIZATIONORCLIENTCOMPANYCODE, \n\to_NameInsured_02record AS NAMEOFINSURED, \n\tFEDERALEMPLOYERIDENTIFICATIONNUMBER, \n\tCONTINUATIONSEQUENCENUMBER, \n\tLEGALNATUREOFENTITYCODE, \n\to_StateCode01 AS STATECODE01, \n\tIN_StateUnemploymentNumber AS STATEUNEMPLOYMENTNUMBER01, \n\tSTATECODE02, \n\tSTATEUNEMPLOYMENTNUMBER02, \n\tSTATECODE03, \n\tSTATEUNEMPLOYMENTNUMBER03, \n\tSTATEUNEMPLOYMENTNUMBERRECORDSEQUENCENUMBER, \n\tNAMELINKCOUNTERIDENTIFIER, \n\tPOLICYCHANGEEFFECTIVEDATE, \n\tPOLICYCHANGEEXPIRATIONDATE\n\tFROM EXP_Record02_TGT_DataCollect\n),\nfltr_DBA_POBOX AS (\n\tSELECT\n\to_ExtractDate AS ExtractDate, \n\to_AuditId AS AuditId, \n\tWCTrackHistoryID, \n\tLinkData, \n\to_RecordTypeCode AS RecordTypeCode, \n\to_AddressTypeCode AS AddressTypeCode, \n\to_ForeignAddressIndicator AS ForeignAddressIndicator, \n\to_AddressStructureCode AS AddressStructureCode, \n\to_AddressStreet AS AddressStreet, \n\to_AddressCity AS AddressCity, \n\to_AddressState AS AddressState, \n\to_PostalCode AS AddressZipCode, \n\tNameLinkIdentifier, \n\to_StateCodeLink AS StateCodeLink, \n\to_ExposureRecordLinkForLocationCode AS ExposureRecordLinkForLocationCode, \n\tPhoneNumberOfInsured, \n\tNumberOfEmployees, \n\to_IndustryCode AS IndustryCode, \n\to_GeographicArea AS GeographicArea, \n\to_EmailAddress AS EmailAddress, \n\to_CountryCode AS CountryCode, \n\tNameLinkCounterIdentifier, \n\to_PolicyChangeEffectiveDate AS PolicyChangeEffectiveDate, \n\to_PolicyChangeExpirationDate AS PolicyChangeExpirationDate, \n\to_process_flag AS process_flag\n\tFROM EXP_Format_Output\n\tWHERE iif( process_flag = 1, TRUE,FALSE)\n),\nWCPols03Record AS (\n\n\t------------ PRE SQL ----------\n\tDELETE\r\n\t  FROM dbo.WCPols03Record\r\n\t  WHERE 1=1\r\n\t  AND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t-------------------------------\n\n\n\tINSERT INTO WCPols03Record\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, RecordTypeCode, AddressTypeCode, ForeignAddressIndicator, AddressStructureCode, AddressStreet, AddressCity, AddressState, AddressZipCode, NameLinkIdentifier, StateCodeLink, ExposureRecordLinkForLocationCode, PhoneNumberOfInsured, NumberOfEmployees, IndustryCode, GeographicArea, EmailAddress, CountryCode, NameLinkCounterIdentifier, PolicyChangeEffectiveDate, PolicyChangeExpirationDate)\n\tSELECT \n\tEXTRACTDATE, \n\tAUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\tRECORDTYPECODE, \n\tADDRESSTYPECODE, \n\tFOREIGNADDRESSINDICATOR, \n\tADDRESSSTRUCTURECODE, \n\tADDRESSSTREET, \n\tADDRESSCITY, \n\tADDRESSSTATE, \n\tADDRESSZIPCODE, \n\tNAMELINKIDENTIFIER, \n\tSTATECODELINK, \n\tEXPOSURERECORDLINKFORLOCATIONCODE, \n\tPHONENUMBEROFINSURED, \n\tNUMBEROFEMPLOYEES, \n\tINDUSTRYCODE, \n\tGEOGRAPHICAREA, \n\tEMAILADDRESS, \n\tCOUNTRYCODE, \n\tNAMELINKCOUNTERIDENTIFIER, \n\tPOLICYCHANGEEFFECTIVEDATE, \n\tPOLICYCHANGEEXPIRATIONDATE\n\tFROM fltr_DBA_POBOX\n),\nGenericLoggingFlatFile1 AS (\n\tINSERT INTO GenericLoggingFlatFile\n\t(FileName, DataLogRow)\n\tSELECT \n\tLogName AS FILENAME, \n\tLogRecord AS DATALOGROW\n\tFROM EXP_Duplicates\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_02": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_03": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_05": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}