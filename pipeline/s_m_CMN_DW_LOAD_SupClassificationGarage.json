{
    "name": "s_m_CMN_DW_LOAD_SupClassificationGarage",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_DW_LOAD_SupClassificationGarage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupClassificationGarage_CurrentChangeFlag AS (\n\tSELECT\n\tSupClassificationGarageId,\n\tEffectiveDate,\n\tClassCode,\n\tClassDescription,\n\tRatingStateCode,\n\tOriginatingOrganizationCode\n\tFROM (\n\t\tSELECT \n\t\t\tSupClassificationGarageId,\n\t\t\tEffectiveDate,\n\t\t\tClassCode,\n\t\t\tClassDescription,\n\t\t\tRatingStateCode,\n\t\t\tOriginatingOrganizationCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationGarage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EffectiveDate,ClassCode,ClassDescription,RatingStateCode,OriginatingOrganizationCode ORDER BY SupClassificationGarageId) = 1\n),\nSQ_SupClassificationGarage AS (\n\tSELECT\n\t\tSupClassificationGarageId,\n\t\tAuditId,\n\t\tCreatedDate,\n\t\tModifiedDate,\n\t\tLineOfBusinessAbbreviation,\n\t\tRatingStateCode,\n\t\tEffectiveDate,\n\t\tExpirationDate,\n\t\tClassCode,\n\t\tClassDescription,\n\t\tOriginatingOrganizationCode\n\tFROM SupClassificationGarage\n),\nLKP_SupClassificationGarage AS (\n\tSELECT\n\tSupClassificationGarageId,\n\tRatingStateCode,\n\tClassCode,\n\tClassDescription,\n\tOriginatingOrganizationCode,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tSupClassificationGarageId,\n\t\t\tRatingStateCode,\n\t\t\tClassCode,\n\t\t\tClassDescription,\n\t\t\tOriginatingOrganizationCode,\n\t\t\tEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationGarage\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingStateCode,ClassCode,OriginatingOrganizationCode ORDER BY SupClassificationGarageId) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tSQ_SupClassificationGarage.LineOfBusinessAbbreviation AS i_LineOfBusinessAbbreviation,\n\tSQ_SupClassificationGarage.RatingStateCode AS i_RatingStateCode,\n\tSQ_SupClassificationGarage.ClassCode AS i_ClassCode,\n\tSQ_SupClassificationGarage.ClassDescription AS i_ClassDescription,\n\tSQ_SupClassificationGarage.OriginatingOrganizationCode AS i_ClassCodeOriginatingOrganization,\n\tSQ_SupClassificationGarage.EffectiveDate AS i_EffectiveDate,\n\tSQ_SupClassificationGarage.ExpirationDate AS i_ExpirationDate,\n\tLKP_SupClassificationGarage.SupClassificationGarageId AS lkp_SupClassificationGarageId,\n\tLKP_SupClassificationGarage.RatingStateCode AS lkp_RatingStateCode,\n\tLKP_SupClassificationGarage.ClassCode AS lkp_ClassCode,\n\tLKP_SupClassificationGarage.ClassDescription AS lkp_ClassDescription,\n\tLKP_SupClassificationGarage.OriginatingOrganizationCode AS lkp_ClassCodeOriginatingOrganization,\n\tLKP_SupClassificationGarage.EffectiveDate AS lkp_EffectiveDate,\n\tLKP_SupClassificationGarage.ExpirationDate AS lkp_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(:LKP.LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG(i_RatingStateCode,i_ClassCode,i_ClassDescription,i_ClassCodeOriginatingOrganization,i_EffectiveDate)),\r\n\t-- 'NOCHANGE',\r\n\t-- 'INSERT')\t\t\t\t\t\t\n\tDECODE(TRUE,\n\t\tLKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.SupClassificationGarageId IS NOT NULL, 'NOCHANGE',\n\t\t'INSERT'\n\t) AS v_RecordPopulated,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_ExpirationDate   <=  lkp_EffectiveDate OR v_RecordPopulated = 'NOCHANGE', 'NOCHANGE',\r\n\t-- ISNULL(lkp_SupClassificationGarageId) OR ( i_RatingStateCode = lkp_RatingStateCode\r\n\t-- \t\t\t\t\t\t\t\t AND i_ClassCode = lkp_ClassCode\r\n\t--                                                     AND i_ClassCodeOriginatingOrganization = lkp_ClassCodeOriginatingOrganization  \r\n\t-- \t\t\t \t\t\t\t\t AND  (i_ClassDescription <>lkp_ClassDescription \r\n\t-- \t\t\t\t\t\t\t\t OR i_EffectiveDate <> lkp_EffectiveDate \r\n\t-- \t\t\t\t\t\t\t\t OR i_ExpirationDate <> lkp_ExpirationDate\r\n\t-- \t\t\t\t\t\t\t\t     )\r\n\t-- \t\t\t\t\t\t\t\t),'INSERT',\r\n\t-- i_RatingStateCode<>lkp_RatingStateCode OR\r\n\t-- i_ClassCode<>lkp_ClassCode OR\r\n\t-- i_ClassCodeOriginatingOrganization <> lkp_ClassCodeOriginatingOrganization  ,\r\n\t-- 'UPDATE',\r\n\t-- 'NOCHANGE'\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_ExpirationDate <= lkp_EffectiveDate \n\t\tOR v_RecordPopulated = 'NOCHANGE', 'NOCHANGE',\n\t\tlkp_SupClassificationGarageId IS NULL \n\t\tOR ( i_RatingStateCode = lkp_RatingStateCode \n\t\t\tAND i_ClassCode = lkp_ClassCode \n\t\t\tAND i_ClassCodeOriginatingOrganization = lkp_ClassCodeOriginatingOrganization \n\t\t\tAND ( i_ClassDescription <> lkp_ClassDescription \n\t\t\t\tOR i_EffectiveDate <> lkp_EffectiveDate \n\t\t\t\tOR i_ExpirationDate <> lkp_ExpirationDate \n\t\t\t) \n\t\t), 'INSERT',\n\t\ti_RatingStateCode <> lkp_RatingStateCode \n\t\tOR i_ClassCode <> lkp_ClassCode \n\t\tOR i_ClassCodeOriginatingOrganization <> lkp_ClassCodeOriginatingOrganization, 'UPDATE',\n\t\t'NOCHANGE'\n\t) AS v_ChangeFlag,\n\t'Please correct the EffectiveDate in CSV file for ClassCode = '||i_ClassCode||' and RatingStateCode = '|| i_RatingStateCode ||', because EffectiveDate should reflect the real effective date for any change on this ClassCode.' AS v_ErrorMessage,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- i_RatingStateCode = lkp_RatingStateCode\r\n\t-- AND i_ClassCode = lkp_ClassCode\r\n\t-- AND i_EffectiveDate  = lkp_EffectiveDate\r\n\t-- AND \r\n\t-- (i_ClassDescription <>lkp_ClassDescription\r\n\t-- OR i_ClassCodeOriginatingOrganization <> lkp_ClassCodeOriginatingOrganization\r\n\t-- ), \r\n\t-- ERROR(v_ErrorMessage)\r\n\t-- ,'PASS')\n\tDECODE(TRUE,\n\t\ti_RatingStateCode = lkp_RatingStateCode \n\t\tAND i_ClassCode = lkp_ClassCode \n\t\tAND i_EffectiveDate = lkp_EffectiveDate \n\t\tAND ( i_ClassDescription <> lkp_ClassDescription \n\t\t\tOR i_ClassCodeOriginatingOrganization <> lkp_ClassCodeOriginatingOrganization \n\t\t), ERROR(v_ErrorMessage\n\t\t),\n\t\t'PASS'\n\t) AS v_RaiseError,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tsysdate AS o_CreatedDate,\n\tsysdate AS o_ModifiedDate,\n\ti_LineOfBusinessAbbreviation AS o_LineOfBusinessAbbreviation,\n\ti_RatingStateCode AS o_RatingStateCode,\n\t-- *INF*: i_EffectiveDate\r\n\t-- --IIF(v_ChangeFlag='INSERT',\r\n\t-- \t--TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \t--TO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\ti_EffectiveDate AS o_ClassEffectiveDate,\n\t-- *INF*: i_ExpirationDate\r\n\t-- --TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\ti_ExpirationDate AS o_ClassExpirationDate,\n\ti_ClassCode AS o_ClassCode,\n\ti_ClassDescription AS o_ClassDescription,\n\ti_ClassCodeOriginatingOrganization AS o_ClassCodeOriginatingOrganization\n\tFROM SQ_SupClassificationGarage\n\tLEFT JOIN LKP_SupClassificationGarage\n\tON LKP_SupClassificationGarage.RatingStateCode = SQ_SupClassificationGarage.RatingStateCode AND LKP_SupClassificationGarage.ClassCode = SQ_SupClassificationGarage.ClassCode AND LKP_SupClassificationGarage.OriginatingOrganizationCode = SQ_SupClassificationGarage.OriginatingOrganizationCode\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate\n\tON LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.EffectiveDate = i_RatingStateCode\n\tAND LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.ClassDescription = i_ClassDescription\n\tAND LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.RatingStateCode = i_ClassCodeOriginatingOrganization\n\tAND LKP_SUPCLASSIFICATIONGARAGE_CURRENTCHANGEFLAG_i_RatingStateCode_i_ClassCode_i_ClassDescription_i_ClassCodeOriginatingOrganization_i_EffectiveDate.OriginatingOrganizationCode = i_EffectiveDate\n\n),\nRTR_Insert_Update AS (\n\tSELECT\n\to_ChangeFlag AS ChangeFlag,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditId AS AuditId,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_LineOfBusinessAbbreviation AS LineOfBusinessAbbreviation,\n\to_RatingStateCode AS RatingStateCode,\n\to_ClassEffectiveDate AS ClassEffectiveDate,\n\to_ClassExpirationDate AS ClassExpirationDate,\n\to_ClassCode AS ClassCode,\n\to_ClassDescription AS ClassDescription,\n\to_ClassCodeOriginatingOrganization AS ClassCodeOriginatingOrganization\n\tFROM EXP_Detect_Changes\n),\nRTR_Insert_Update_INSERT_OR_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE ChangeFlag='INSERT'\r\nOR ChangeFlag='UPDATE'),\nSupClassificationGarage_Insert AS (\n\tINSERT INTO SupClassificationGarage\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, LineOfBusinessAbbreviation, RatingStateCode, ClassCode, ClassDescription, OriginatingOrganizationCode)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tClassEffectiveDate AS EFFECTIVEDATE, \n\tClassExpirationDate AS EXPIRATIONDATE, \n\tSourceSystemID AS SOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLINEOFBUSINESSABBREVIATION, \n\tRATINGSTATECODE, \n\tCLASSCODE, \n\tCLASSDESCRIPTION, \n\tClassCodeOriginatingOrganization AS ORIGINATINGORGANIZATIONCODE\n\tFROM RTR_Insert_Update_INSERT_OR_UPDATE\n),\nSQ_SupClassificationGarage_CheckExpDate AS (\n\tSELECT SupClassificationGarage.SupClassificationGarageId\r\n\t     , SupClassificationGarage.CurrentSnapshotFlag\r\n\t\r\n\t\t , SupClassificationGarage.EffectiveDate\r\n\t\t , SupClassificationGarage.ExpirationDate\r\n\t\t , SupClassificationGarage.LineOfBusinessAbbreviation\r\n\t     , SupClassificationGarage.RatingStateCode\r\n\t\t , SupClassificationGarage.ClassCode \r\n\t\t , SupClassificationGarage.ClassDescription\r\n\t\t , SupClassificationGarage.OriginatingOrganizationCode\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationGarage\r\n\twhere CurrentSnapshotFlag = 1\r\n\tORDER BY SupClassificationGarage.ClassCode  ,\r\n\tSupClassificationGarage.RatingStateCode, \r\n\tSupClassificationGarage.EffectiveDate DESC,\r\n\tSupClassificationGarage.CreatedDate DESC\n),\nEXP_Lag_Eff_dates AS (\n\tSELECT\n\tSupClassificationGarageId,\n\tEffectiveDate,\n\tExpirationDate,\n\tLineOfBusinessAbbreviation,\n\tRatingStateCode,\n\tClassCode,\n\tClassDescription,\n\tOriginatingOrganizationCode,\n\tCurrentSnapshotFlag AS i_CurrentSnapshotFlag,\n\t-- *INF*: DECODE(TRUE,\t RatingStateCode = v_PREV_ROW_RatingStateCode\r\n\t-- \t\t\t\t  AND ClassCode = v_PREV_ROW_ClassCode\r\n\t--                            AND  OriginatingOrganizationCode = v_PREV_ROW_OriginatingOrganizationCode\r\n\t-- \t\t\t \t  AND (ClassDescription <>v_PREV_ROW_ClassDescription\r\n\t-- \t\t\t\t\t--OR EffectiveDate <> v_PREV_ROW_EffectiveDate\r\n\t-- \t\t\t\t\t--OR ExpirationDate <> v_PREV_ROW_ExpirationDate\r\n\t-- \t                         OR  ADD_TO_DATE(ExpirationDate,'SS',+1) <>v_PREV_ROW_EffectiveDate   \r\n\t-- \t\t\t\t\t\t\t\t  )\r\n\t-- \t\t,'0','1')\n\tDECODE(TRUE,\n\t\tRatingStateCode = v_PREV_ROW_RatingStateCode \n\t\tAND ClassCode = v_PREV_ROW_ClassCode \n\t\tAND OriginatingOrganizationCode = v_PREV_ROW_OriginatingOrganizationCode \n\t\tAND ( ClassDescription <> v_PREV_ROW_ClassDescription \n\t\t\tOR DATEADD(SECOND,+ 1,ExpirationDate) <> v_PREV_ROW_EffectiveDate \n\t\t), '0',\n\t\t'1'\n\t) AS v_CurrentSnapshotFlag,\n\t-- *INF*: ADD_TO_DATE(   --v_PREV_ROW_EffectiveDate\r\n\t-- \r\n\t-- \tIIF(v_PREV_ROW_EffectiveDate =  TO_DATE('1800-01-01 00:00:00' , 'YYYY-MM-DD HH24:MI:SS' ) , sysdate ,v_PREV_ROW_EffectiveDate )\r\n\t-- \r\n\t-- ,'SS',-1)\r\n\t-- \r\n\t-- --ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1)\n\tDATEADD(SECOND,- 1,IFF(v_PREV_ROW_EffectiveDate = TO_DATE('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'\n\t\t),\n\t\tsysdate,\n\t\tv_PREV_ROW_EffectiveDate\n\t)) AS v_ClassExpirationDate,\n\tv_CurrentSnapshotFlag AS o_ClassExpirationDate,\n\tv_ClassExpirationDate AS ClassExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tExpirationDate AS v_PREV_ROW_ExpirationDate,\n\tLineOfBusinessAbbreviation AS v_PREV_ROW_LineOfBusinessAbbreviation,\n\tRatingStateCode AS v_PREV_ROW_RatingStateCode,\n\tClassCode AS v_PREV_ROW_ClassCode,\n\tClassDescription AS v_PREV_ROW_ClassDescription,\n\tOriginatingOrganizationCode AS v_PREV_ROW_OriginatingOrganizationCode,\n\tsysdate AS ModifiedDate\n\tFROM SQ_SupClassificationGarage_CheckExpDate\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tSupClassificationGarageId, \n\to_ClassExpirationDate AS CurrentSnapshotFlag, \n\tModifiedDate, \n\tClassExpirationDate\n\tFROM EXP_Lag_Eff_dates\n\tWHERE CurrentSnapshotFlag= '0'\n),\nUPD_SupISOGLClassGroup AS (\n\tSELECT\n\tSupClassificationGarageId, \n\tCurrentSnapshotFlag, \n\tModifiedDate, \n\tClassExpirationDate\n\tFROM FIL_FirstRowInAKGroup\n),\nSupClassificationGarage_Update AS (\n\tMERGE INTO SupClassificationGarage AS T\n\tUSING UPD_SupISOGLClassGroup AS S\n\tON T.SupClassificationGarageId = S.SupClassificationGarageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ClassExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246484"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905454"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603053"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:02:48"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:02:41"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_InsuranceReference_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "InsRef"
            }
        },
        "folder": {
            "name": "Common DataWarehouse/"
        },
        "annotations": []
    }
}