{
    "name": "s_m_POL_DM_LOAD_SupportingPolicyDim",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_SupportingPolicyDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_SupportingPolicy AS (\n\tSELECT\n\t\tPolicyAKId,\n\t\tRunDate,\n\t\tSupportingPolicyAKId,\n\t\tSupportingPolicyKey,\n\t\tSupportingPolicyType\n\tFROM SupportingPolicy\n),\nEXPTRANS AS (\n\tSELECT\n\tPolicyAKId AS EDWPolicyAKId,\n\tRunDate,\n\tSupportingPolicyAKId,\n\tSupportingPolicyKey,\n\tSupportingPolicyType,\n\t-- *INF*: ADD_TO_DATE(RunDate,'SS',-1)\n\tDATEADD(SECOND,- 1,RunDate) AS o_RunDate\n\tFROM SQ_SupportingPolicy\n),\nLKP_policy_dim AS (\n\tSELECT\n\tpol_dim_id,\n\tedw_pol_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tpol_dim_id,\n\t\t\tedw_pol_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM policy_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id) = 1\n),\nEXPTRANS2 AS (\n\tSELECT\n\tLKP_policy_dim.pol_dim_id AS PolicyDimId,\n\tEXPTRANS.EDWPolicyAKId,\n\tEXPTRANS.RunDate,\n\tEXPTRANS.SupportingPolicyAKId,\n\tEXPTRANS.SupportingPolicyKey,\n\tEXPTRANS.SupportingPolicyType,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CreatedDate\n\tFROM EXPTRANS\n\tLEFT JOIN LKP_policy_dim\n\tON LKP_policy_dim.edw_pol_ak_id = EXPTRANS.EDWPolicyAKId AND LKP_policy_dim.eff_from_date <= EXPTRANS.o_RunDate AND LKP_policy_dim.eff_to_date >= EXPTRANS.o_RunDate\n),\nSupportingPolicyDim AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SupportingPolicyDim;\n\tINSERT INTO @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SupportingPolicyDim\n\t(AuditId, CreatedDate, RunDate, PolicyDimId, EDWPolicyAKId, EDWSupportingPolicyAKId, SupportingPolicyKey, SupportingPolicyType)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tRUNDATE, \n\tPOLICYDIMID, \n\tEDWPOLICYAKID, \n\tSupportingPolicyAKId AS EDWSUPPORTINGPOLICYAKID, \n\tSUPPORTINGPOLICYKEY, \n\tSUPPORTINGPOLICYTYPE\n\tFROM EXPTRANS2\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}