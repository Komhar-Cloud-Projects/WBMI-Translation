{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCAGarageStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCAGarageStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_CA_Garage AS (\n\tWITH cte_DCCAGarage(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CA_RiskId, \r\n\tX.CA_GarageId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.Auditable, \r\n\tX.AutoServicesClassification, \r\n\tX.CoverageType, \r\n\tX.DamageToRentedPremisesLiability, \r\n\tX.GarageKeepersServiceOperationType, \r\n\tX.GarageType, \r\n\tX.OwnerOfPremesisName, \r\n\tX.PickupOrDeliveryOfAutos, \r\n\tX.UseBlanketCollisionAveragedValues, \r\n\tX.ValetParking \r\n\tFROM\r\n\tDC_CA_Garage X\r\n\tinner join\r\n\tcte_DCCAGarage Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tCA_RiskId,\n\tCA_GarageId,\n\tSessionId,\n\tId,\n\tAuditable,\n\tAutoServicesClassification,\n\tCoverageType,\n\tDamageToRentedPremisesLiability,\n\tGarageKeepersServiceOperationType,\n\tGarageType,\n\tOwnerOfPremesisName,\n\tPickupOrDeliveryOfAutos,\n\tUseBlanketCollisionAveragedValues,\n\tValetParking\n\tFROM SQ_DC_CA_Garage\n),\nDCCAGarageStage AS (\n\tTRUNCATE TABLE DCCAGarageStage;\n\tINSERT INTO DCCAGarageStage\n\t(ExtractDate, SourceSystemId, CARiskId, CAGarageId, SessionId, Id, Auditable, AutoServicesClassification, CoverageType, DamageToRentedPremisesLiability, GarageKeepersServiceOperationType, GarageType, OwnerOfPremesisName, PickupOrDeliveryOfAutos, UseBlanketCollisionAveragedValues, ValetParking)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCA_RiskId AS CARISKID, \n\tCA_GarageId AS CAGARAGEID, \n\tSESSIONID, \n\tID, \n\tAUDITABLE, \n\tAUTOSERVICESCLASSIFICATION, \n\tCOVERAGETYPE, \n\tDAMAGETORENTEDPREMISESLIABILITY, \n\tGARAGEKEEPERSSERVICEOPERATIONTYPE, \n\tGARAGETYPE, \n\tOWNEROFPREMESISNAME, \n\tPICKUPORDELIVERYOFAUTOS, \n\tUSEBLANKETCOLLISIONAVERAGEDVALUES, \n\tVALETPARKING\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}