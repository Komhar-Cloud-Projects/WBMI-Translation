{
    "name": "s_m_ChecksAndBalance_EDW_Datafeedmart",
    "properties": {
        "activities": [
            {
                "name": "m_ChecksAndBalance_EDW_Datafeedmart",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WBMIChecksAndBalancingRule AS (\n\tSELECT WCABR.WBMIChecksAndBalancingRuleId, WCABR.WBMIBalancingSubjectAreaID, WCABR.WBMIBalancingLayerID, WCABR.WBMIActionStepID, WCABR.WBMIBalancingTypeID, WCABR.WBMIBalancingRuleDescription, WCABR.InformaticaSourceServerConnection, WCABR.WBMISourceSystemNameID, WCABR.SourceTable, WCABR.SourceSQL, WCABR.SourceSQLDescription, WCABR.InformaticaTargetServerConnection, WCABR.WBMITargetSystemNameID, WCABR.TargetTable, WCABR.TargetSQL, WCABR.TargetSQLDescription, WCABR.WBMIThresholdValue, WCABR.Frequency, WCABR.ActiveFlag, WCABR.CreatedDate, WCABR.ModifiedDate,\r\n\tWAS.WBMIActionStep,\r\n\tWBSA.WBMISubjectArea,\r\n\tWBT.WBMIBalancingType,\r\n\tWBL.WBMIBalancingLayer \r\n\tFROM\r\n\tWBMIChecksAndBalancingRule WCABR\r\n\tINNER JOIN WBMIActionStep WAS on \r\n\tWCABR.ActiveFlag=1 AND\r\n\tWCABR.WBMIActionStepID=WAS. WBMIActionStepID\r\n\tINNER JOIN WBMIBalancingSubjectArea WBSA on\r\n\tWCABR.WBMIBalancingSubjectAreaID=WBSA.WBMIBalancingSubjectAreaID \r\n\tINNER JOIN WBMIBalancingType WBT \r\n\ton WCABR.WBMIBalancingTypeID=WBT.WBMIBalancingTypeID\r\n\tINNER JOIN WBMIBalancingLayer WBL\r\n\ton WCABR.WBMIBalancingLayerID=WBL.WBMIBalancingLayerID\r\n\t@{pipeline().parameters.WHERE}\n),\nEXP_Get_Values AS (\n\tSELECT\n\tWBMIChecksAndBalancingRuleId,\n\tWBMISubjectAreaID,\n\tWBMIBalancingLayerID,\n\tWBMIActionStepID,\n\tWBMIBalancingTypeID,\n\tWBMIBalancingRuleDescription,\n\tInformaticaSourceServerConnection,\n\tWBMISourceSystemNameID,\n\tSourceTable,\n\tSourceSQL,\n\t-- *INF*: REPLACESTR(1, SourceSQL, '@{pipeline().parameters.NO_OF_DAY}', @{pipeline().parameters.NO_OF_DAY})\n\tREGEXP_REPLACE(SourceSQL,'@{pipeline().parameters.NO_OF_DAY}',@{pipeline().parameters.NO_OF_DAY}) AS v_SourceSQL,\n\t-- *INF*: REPLACESTR(1, v_SourceSQL, '@{pipeline().parameters.NO_OF_MONTH}', @{pipeline().parameters.NO_OF_MONTH})\n\tREGEXP_REPLACE(v_SourceSQL,'@{pipeline().parameters.NO_OF_MONTH}',@{pipeline().parameters.NO_OF_MONTH}) AS o_SourceSQL,\n\tSourceSQLDescription,\n\tInformaticaTargetServerConnection,\n\tWBMITargetSystemNameID,\n\tTargetTable,\n\tTargetSQL,\n\t-- *INF*: IIF(NOT ISNULL(TargetSQL),REPLACESTR(1,TargetSQL,'@{pipeline().parameters.NO_OF_DAY}',@{pipeline().parameters.NO_OF_DAY}) ,NULL)\n\tIFF(TargetSQL IS NOT NULL, REGEXP_REPLACE(TargetSQL,'@{pipeline().parameters.NO_OF_DAY}',@{pipeline().parameters.NO_OF_DAY}), NULL) AS v_TargetSQL,\n\t-- *INF*: IIF(NOT ISNULL(v_TargetSQL),REPLACESTR(1,v_TargetSQL,'@{pipeline().parameters.NO_OF_MONTH}',@{pipeline().parameters.NO_OF_MONTH}) ,'select 0')\r\n\t-- \r\n\t-- \r\n\t-- --IIF(NOT ISNULL(TargetSQL),TargetSQL,'select 0')\n\tIFF(\n\t    v_TargetSQL IS NOT NULL, REGEXP_REPLACE(v_TargetSQL,'@{pipeline().parameters.NO_OF_MONTH}',@{pipeline().parameters.NO_OF_MONTH}),\n\t    'select 0'\n\t) AS o_TargetSQL,\n\tTargetSQLDescription,\n\tWBMIThresholdValue,\n\tFrequency,\n\tActiveFlag,\n\tCreatedDate,\n\tModifiedDate,\n\tWBMIActionStepCode,\n\tWBMISubjectArea,\n\tWBMIBalancingType,\n\tWBMIBalancingLayer\n\tFROM SQ_WBMIChecksAndBalancingRule\n),\nSQL_SourceCountActiveORDeleted AS (-- SQL_SourceCountActiveORDeleted\n\n\t##############################################\n\n\t# TODO: Place holder for Custom transformation\n\n\t##############################################\n),\nSQL_TargetCountActiveORDeleted AS (-- SQL_TargetCountActiveORDeleted\n\n\t##############################################\n\n\t# TODO: Place holder for Custom transformation\n\n\t##############################################\n),\nJNR_CountActiveORDeleted AS (SELECT\n\tSQL_SourceCountActiveORDeleted.WBMIChecksAndBalancingRuleId3_output AS SourceWBMIChecksAndBalancingRuleId, \n\tSQL_SourceCountActiveORDeleted.WBMISubjectAreaID3_output AS SourceWBMISubjectAreaID, \n\tSQL_SourceCountActiveORDeleted.WBMIBalancingLayerID3_output AS SourceWBMIBalancingLayerID, \n\tSQL_SourceCountActiveORDeleted.WBMIActionStepID3_output AS SourceWBMIActionStepID, \n\tSQL_SourceCountActiveORDeleted.WBMIBalancingTypeID3_output AS SourceWBMIBalancingTypeID, \n\tSQL_SourceCountActiveORDeleted.WBMIActionStepCode3_output AS SourceWBMIActionStepCode, \n\tSQL_SourceCountActiveORDeleted.WBMIBalancingType_output AS WBMIBalancingType, \n\tSQL_SourceCountActiveORDeleted.WBMIThresholdValue3_output AS WBMIThresholdValue, \n\tSQL_SourceCountActiveORDeleted.WBMIBalancingRuleDescription3_output AS WBMIBalancingRuleDescription, \n\tSQL_SourceCountActiveORDeleted.SourceTable3_output AS SourceTable, \n\tSQL_SourceCountActiveORDeleted.SourceOutPut, \n\tSQL_TargetCountActiveORDeleted.WBMIChecksAndBalancingRuleId3_output AS TargetWBMIChecksAndBalancingRuleId, \n\tSQL_TargetCountActiveORDeleted.WBMISubjectAreaID3_output AS TargetWBMISubjectAreaID, \n\tSQL_TargetCountActiveORDeleted.WBMIBalancingLayerID3_output AS TargetWBMIBalancingLayerID, \n\tSQL_TargetCountActiveORDeleted.WBMIActionStepID3_output AS TargetWBMIActionStepID, \n\tSQL_TargetCountActiveORDeleted.WBMIBalancingTypeID3_output AS TargetWBMIBalancingTypeID, \n\tSQL_TargetCountActiveORDeleted.TargetTable3_output AS TargetTable, \n\tSQL_TargetCountActiveORDeleted.TargetOutput AS TargetOutPut, \n\tSQL_SourceCountActiveORDeleted.SQLError AS SourceSQLError, \n\tSQL_TargetCountActiveORDeleted.SQLError AS TargetSQLError\n\tFROM SQL_TargetCountActiveORDeleted\n\tINNER JOIN SQL_SourceCountActiveORDeleted\n\tON SQL_SourceCountActiveORDeleted.WBMIChecksAndBalancingRuleId3_output = SQL_TargetCountActiveORDeleted.WBMIChecksAndBalancingRuleId3_output\n),\nEXP_CountActiveORDeleted AS (\n\tSELECT\n\tSourceWBMIChecksAndBalancingRuleId,\n\tSourceWBMIActionStepCode AS WBMIActionStepCode,\n\tWBMIThresholdValue,\n\tWBMIBalancingType,\n\tWBMIBalancingRuleDescription,\n\tTargetOutPut,\n\tSourceSQLError,\n\tTargetSQLError,\n\tTargetWBMIChecksAndBalancingRuleId,\n\tSourceTable,\n\tTargetTable,\n\tSourceOutPut,\n\tSourceWBMIBalancingTypeID AS WBMIBalancingTypeID,\n\t-- *INF*: IIF(ISNULL(SourceOutPut),0,SourceOutPut)\r\n\t-- \r\n\t-- --IIF(ISNULL(SourceOutPut),0,SourceOutPut)\n\tIFF(SourceOutPut IS NULL, 0, SourceOutPut) AS v_SourceOutPut,\n\t-- *INF*: IIF(ISNULL(TargetOutPut),0,TargetOutPut)\r\n\t-- \r\n\t-- --IIF(ISNULL(TargetOutPut),0,TargetOutPut)\n\tIFF(TargetOutPut IS NULL, 0, TargetOutPut) AS v_TargetOutPut,\n\t-- *INF*: (IIF(ISNULL(TargetOutPut) OR  TargetOutPut = 0,1,TargetOutPut)/\r\n\t-- IIF(ISNULL(SourceOutPut) OR SourceOutPut = 0,1,SourceOutPut))*100\r\n\t-- --v_TargetOutPut-v_SourceOutPut\n\t(IFF(TargetOutPut IS NULL OR TargetOutPut = 0, 1, TargetOutPut) / IFF(SourceOutPut IS NULL OR SourceOutPut = 0, 1, SourceOutPut)) * 100 AS v_TargetCount_SourceCount_diff,\n\t-- *INF*: IIF(ABS(v_TargetCount_SourceCount_diff) >= ABS(TO_DECIMAL(WBMIThresholdValue)),'I',WBMIActionStepCode)\n\tIFF(\n\t    ABS(v_TargetCount_SourceCount_diff) >= ABS(CAST(WBMIThresholdValue AS FLOAT)), 'I',\n\t    WBMIActionStepCode\n\t) AS v_CheckOutTypeCode,\n\t-- *INF*: iif(not isnull(SourceSQLError),error(SourceSQLError))\n\tIFF(SourceSQLError IS NOT NULL, error(SourceSQLError)) AS v_SourceSQLError,\n\t-- *INF*: IIF(in(WBMIBalancingType,'SupportID','Count','AKID','ActiveOrDeleted'),TO_DECIMAL(v_SourceOutPut),NULL)\n\tIFF(\n\t    WBMIBalancingType IN ('SupportID','Count','AKID','ActiveOrDeleted'),\n\t    CAST(v_SourceOutPut AS FLOAT),\n\t    NULL\n\t) AS SourceCount,\n\t-- *INF*: IIF(WBMIBalancingType='Amount',TO_DECIMAL(v_SourceOutPut),NULL)\n\tIFF(WBMIBalancingType = 'Amount', CAST(v_SourceOutPut AS FLOAT), NULL) AS SourceAmount,\n\t-- *INF*: IIF( ISNULL(TargetTable),NULL,\r\n\t-- IIF(in(WBMIBalancingType,'SupportID','Count','AKID','ActiveOrDeleted'),TO_DECIMAL(v_TargetOutPut),NULL))\n\tIFF(\n\t    TargetTable IS NULL, NULL,\n\t    IFF(\n\t        WBMIBalancingType IN ('SupportID','Count','AKID','ActiveOrDeleted'),\n\t        CAST(v_TargetOutPut AS FLOAT),\n\t        NULL\n\t    )\n\t) AS TargetCount,\n\t-- *INF*: IIF( ISNULL(TargetTable),NULL,IIF(WBMIBalancingType='Amount',TO_DECIMAL(v_TargetOutPut),NULL))\n\tIFF(\n\t    TargetTable IS NULL, NULL,\n\t    IFF(\n\t        WBMIBalancingType = 'Amount', CAST(v_TargetOutPut AS FLOAT), NULL\n\t    )\n\t) AS TargetAmount,\n\tv_CheckOutTypeCode AS CheckOutTypeCode,\n\t-- *INF*: ' For ' || TO_CHAR(SYSDATE,'MM/DD/YYYY') || WBMIBalancingRuleDescription|| v_TargetCount_SourceCount_diff\r\n\t-- \n\t' For ' || TO_CHAR(CURRENT_TIMESTAMP, 'MM/DD/YYYY') || WBMIBalancingRuleDescription || v_TargetCount_SourceCount_diff AS CheckOutMessage,\n\t-- *INF*: IIF(ISNULL(@{pipeline().parameters.NO_OF_MONTH}),NULL ,TRUNC(LAST_DAY(ADD_TO_DATE(SYSDATE,'MM',-TO_INTEGER(@{pipeline().parameters.NO_OF_MONTH}))),'DD'))\n\tIFF(\n\t    @{pipeline().parameters.NO_OF_MONTH} IS NULL, NULL,\n\t    CAST(TRUNC(LAST_DAY(DATEADD(MONTH,- CAST(@{pipeline().parameters.NO_OF_MONTH} AS INTEGER),CURRENT_TIMESTAMP)), 'DAY') AS TIMESTAMP_NTZ(0))\n\t) AS SourceDate,\n\t'InformS' AS CreatedModifiedUserID,\n\tSYSDATE AS CreatedModiFiedDate,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: iif(not isnull(TargetSQLError),error(TargetSQLError))\n\tIFF(TargetSQLError IS NOT NULL, error(TargetSQLError)) AS v_TargetSQLError\n\tFROM JNR_CountActiveORDeleted\n),\nwbmi_checkout AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, source_name, target_name, source_amt, target_amt, source_count, target_count, source_dt, target_dt, created_user_id, created_date, modified_user_id, modified_date, AuditID, WBMIChecksAndBalancingRuleID)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCheckOutTypeCode AS CHECKOUT_TYPE_CODE, \n\tCheckOutMessage AS CHECKOUT_MESSAGE, \n\tSourceTable AS SOURCE_NAME, \n\tTargetTable AS TARGET_NAME, \n\tSourceAmount AS SOURCE_AMT, \n\tTargetAmount AS TARGET_AMT, \n\tSourceCount AS SOURCE_COUNT, \n\tTargetCount AS TARGET_COUNT, \n\tSourceDate AS SOURCE_DT, \n\tSourceDate AS TARGET_DT, \n\tCreatedModifiedUserID AS CREATED_USER_ID, \n\tCreatedModiFiedDate AS CREATED_DATE, \n\tCreatedModifiedUserID AS MODIFIED_USER_ID, \n\tCreatedModiFiedDate AS MODIFIED_DATE, \n\tAuditId AS AUDITID, \n\tSourceWBMIChecksAndBalancingRuleId AS WBMICHECKSANDBALANCINGRULEID\n\tFROM EXP_CountActiveORDeleted\n),\nSQ_wbmi_checkout AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code in ( 'E','W') and WBMIChecksAndBalancingRuleID is not null and\r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\twbmi_checkout.wbmi_session_control_run_id = @{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID}\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject AS (\n\tSELECT\n\temail_address,\n\tcheckout_message,\n\t-- *INF*: 'There are errors in the EDW Premium Financial data. Execution aborted (' || sysdate || ')'\n\t'There are errors in the EDW Premium Financial data. Execution aborted (' || CURRENT_TIMESTAMP || ')' AS email_subject\n\tFROM SQ_wbmi_checkout\n),\nAGG_Distinct_Email_Id AS (\n\tSELECT\n\temail_address,\n\temail_subject\n\tFROM EXP_Email_Subject\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY email_address, email_subject ORDER BY NULL) = 1\n),\nemail_subject AS (\n\tINSERT INTO email_subject\n\t(FIELD1)\n\tSELECT \n\temail_subject AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nemail_body AS (\n\tINSERT INTO email_body\n\t(FIELD1)\n\tSELECT \n\tcheckout_message AS FIELD1\n\tFROM EXP_Email_Subject\n),\nemail_address AS (\n\tINSERT INTO email_address\n\t(FIELD1)\n\tSELECT \n\temail_address AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nSQ_wbmi_checkout1 AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code in( 'E','W') and WBMIChecksAndBalancingRuleID is not null and\r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\twbmi_checkout.wbmi_session_control_run_id = @{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID}\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject1 AS (\n\tSELECT\n\temail_address,\n\tcheckout_type_code,\n\tcheckout_message,\n\t-- *INF*: Error('There are issues with the EDW data')\n\tError('There are issues with the EDW data') AS error\n\tFROM SQ_wbmi_checkout1\n),\nFIL_STOP_PROCESSING AS (\n\tSELECT\n\tcheckout_message, \n\terror\n\tFROM EXP_Email_Subject1\n\tWHERE FALSE\n),\nwbmi_checkout_dummy_target AS (\n\tINSERT INTO wbmi_checkout\n\t(checkout_message)\n\tSELECT \n\tCHECKOUT_MESSAGE\n\tFROM FIL_STOP_PROCESSING\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_DAY": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_MONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}