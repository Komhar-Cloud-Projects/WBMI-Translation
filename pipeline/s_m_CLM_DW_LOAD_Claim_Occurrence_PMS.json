{
    "name": "s_m_CLM_DW_LOAD_Claim_Occurrence_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Occurrence_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Sup_State AS (\n\tSELECT\n\tstate_code,\n\tstate_abbrev\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.state_code)) as state_code, \r\n\t\tcase when len(ltrim(rtrim(a.state_abbrev)))=1 then '0' + ltrim(rtrim(a.state_abbrev)) ELSE ltrim(rtrim(a.state_abbrev)) END  as state_abbrev \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state a\r\n\t\tWHERE\r\n\t\tcrrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_abbrev ORDER BY state_code) = 1\n),\nSQ_pif_42gp_stage AS (\n\tSELECT A.pif_symbol, A.pif_policy_number, A.pif_module, A.ipfcgp_year_of_loss, A.ipfcgp_month_of_loss, A.ipfcgp_day_of_loss, A.ipfcgp_loss_occurence, A.ipfcgp_loss_adjustor_no, A.ipfcgp_loss_accident_state, A.ipfcgp_loss_catastrophe_no, A.ipfcgp_loss_time, A.ipfcgp_discovery_year, A.ipfcgp_discovery_month, A.ipfcgp_discovery_day, A.ipfcgp_claim_status, A.ipfcgp_accident_description, A.ipfcgp_offset_onset_ind, A.logical_flag \r\n\tFROM\r\n\t pif_42gp_stage A\r\n\tWHERE A.logical_flag IN ('0','1')\n),\nEXP_Value AS (\n\tSELECT\n\tipfcgp_loss_accident_state AS CLM_LOSS_STATE_CD,\n\tipfcgp_loss_catastrophe_no AS in_CLM_CATASTROPHE_CODE,\n\t-- *INF*: iif(isnull(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--    iif(is_spaces(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--     LPAD(rtrim(in_CLM_CATASTROPHE_CODE),3,'0')))\n\tIFF(\n\t    in_CLM_CATASTROPHE_CODE IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_CATASTROPHE_CODE)>0\n\t    and TRIM(in_CLM_CATASTROPHE_CODE)='', 'N/A',\n\t        LPAD(rtrim(in_CLM_CATASTROPHE_CODE), 3, '0')\n\t    )\n\t) AS CLM_CATASTROPHE_CODE,\n\tpif_symbol AS PIF_SYMBOL,\n\tpif_policy_number AS PIF_POLICY_NUMBER,\n\tpif_module AS PIF_MODULE,\n\tipfcgp_year_of_loss AS IPFCGP_YEAR_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCGP_YEAR_OF_LOSS)\n\tTO_CHAR(IPFCGP_YEAR_OF_LOSS) AS v_IPFCGP_YEAR_OF_LOSS,\n\tipfcgp_month_of_loss AS IPFCGP_MONTH_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCGP_MONTH_OF_LOSS)\n\tTO_CHAR(IPFCGP_MONTH_OF_LOSS) AS v_IPFCGP_MONTH_OF_LOSS,\n\tipfcgp_day_of_loss AS IPFCGP_DAY_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCGP_DAY_OF_LOSS)\n\tTO_CHAR(IPFCGP_DAY_OF_LOSS) AS v_IPFCGP_DAY_OF_LOSS,\n\tipfcgp_loss_occurence AS in_IPFCGP_LOSS_OCCURENCE,\n\t-- *INF*: TO_INTEGER(in_IPFCGP_LOSS_OCCURENCE)\n\tCAST(in_IPFCGP_LOSS_OCCURENCE AS INTEGER) AS v_IPFCGP_LOSS_OCCURENCE,\n\tv_IPFCGP_LOSS_OCCURENCE AS IPFCGP_LOSS_OCCURENCE,\n\tipfcgp_loss_time AS IPFCGP_LOSS_TIME,\n\t-- *INF*: TO_INTEGER(IPFCGP_LOSS_TIME)\n\tCAST(IPFCGP_LOSS_TIME AS INTEGER) AS v_IPFCGP_LOSS_TIME,\n\tipfcgp_discovery_year AS IPFCGP_DISCOVERY_YEAR,\n\tipfcgp_discovery_month AS IPFCGP_DISCOVERY_MONTH,\n\tipfcgp_discovery_day AS IPFCGP_DISCOVERY_DAY,\n\tPIF_SYMBOL  || PIF_POLICY_NUMBER  || PIF_MODULE AS v_SYM_NUM_MODE,\n\t-- *INF*: IIF ( LENGTH(v_IPFCGP_MONTH_OF_LOSS) = 1, '0' || v_IPFCGP_MONTH_OF_LOSS, v_IPFCGP_MONTH_OF_LOSS)\r\n\t-- ||  \r\n\t-- IIF ( LENGTH(v_IPFCGP_DAY_OF_LOSS ) = 1, '0' || v_IPFCGP_DAY_OF_LOSS, v_IPFCGP_DAY_OF_LOSS )\r\n\t-- ||  \r\n\t-- v_IPFCGP_YEAR_OF_LOSS\r\n\t-- \r\n\t-- \n\tIFF(\n\t    LENGTH(v_IPFCGP_MONTH_OF_LOSS) = 1, '0' || v_IPFCGP_MONTH_OF_LOSS, v_IPFCGP_MONTH_OF_LOSS\n\t) || IFF(LENGTH(v_IPFCGP_DAY_OF_LOSS) = 1, '0' || v_IPFCGP_DAY_OF_LOSS, v_IPFCGP_DAY_OF_LOSS) || v_IPFCGP_YEAR_OF_LOSS AS v_CLM_LOSS_DT,\n\t-- *INF*: IIF ((ISNULL(IPFCGP_MONTH_OF_LOSS ) OR ISNULL(IPFCGP_DAY_OF_LOSS) OR ISNULL(IPFCGP_YEAR_OF_LOSS) )\r\n\t-- , TO_DATE ('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\r\n\t-- ,TO_DATE(v_IPFCGP_MONTH_OF_LOSS  || '/' ||  v_IPFCGP_DAY_OF_LOSS  || '/' ||  v_IPFCGP_YEAR_OF_LOSS , 'MM/DD/YYYY')\r\n\t-- )\n\tIFF(\n\t    (IPFCGP_MONTH_OF_LOSS IS NULL OR IPFCGP_DAY_OF_LOSS IS NULL OR IPFCGP_YEAR_OF_LOSS IS NULL),\n\t    TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    TO_TIMESTAMP(v_IPFCGP_MONTH_OF_LOSS || '/' || v_IPFCGP_DAY_OF_LOSS || '/' || v_IPFCGP_YEAR_OF_LOSS, 'MM/DD/YYYY')\n\t) AS CLM_LOSS_DT,\n\t-- *INF*: v_SYM_NUM_MODE  || v_CLM_LOSS_DT  || in_IPFCGP_LOSS_OCCURENCE\r\n\t-- \r\n\t-- --v_SYM_NUM_MODE  || v_CLM_LOSS_DT  || v_IPFCGP_LOSS_OCCURENCE\n\tv_SYM_NUM_MODE || v_CLM_LOSS_DT || in_IPFCGP_LOSS_OCCURENCE AS CLM_CLAIM_NBR,\n\t-- *INF*: IIF ((ISNULL(IPFCGP_DISCOVERY_MONTH) OR ISNULL(IPFCGP_DISCOVERY_DAY ) OR ISNULL(IPFCGP_DISCOVERY_YEAR) OR IS_SPACES(IPFCGP_DISCOVERY_MONTH) OR IS_SPACES(IPFCGP_DISCOVERY_DAY ) OR IS_SPACES(IPFCGP_DISCOVERY_YEAR))\r\n\t-- , TO_DATE ('01/01/1800','MM/DD/YYYY')\r\n\t-- ,TO_DATE ((IPFCGP_DISCOVERY_MONTH || '/' || IPFCGP_DISCOVERY_DAY || '/' || IPFCGP_DISCOVERY_YEAR),'MM/DD/YYYY')\r\n\t-- )\n\tIFF(\n\t    (IPFCGP_DISCOVERY_MONTH IS NULL\n\t    or IPFCGP_DISCOVERY_DAY IS NULL\n\t    or IPFCGP_DISCOVERY_YEAR IS NULL\n\t    or LENGTH(IPFCGP_DISCOVERY_MONTH)>0\n\t    and TRIM(IPFCGP_DISCOVERY_MONTH)=''\n\t    or LENGTH(IPFCGP_DISCOVERY_DAY)>0\n\t    and TRIM(IPFCGP_DISCOVERY_DAY)=''\n\t    or LENGTH(IPFCGP_DISCOVERY_YEAR)>0\n\t    and TRIM(IPFCGP_DISCOVERY_YEAR)=''),\n\t    TO_TIMESTAMP('01/01/1800', 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP((IPFCGP_DISCOVERY_MONTH || '/' || IPFCGP_DISCOVERY_DAY || '/' || IPFCGP_DISCOVERY_YEAR), 'MM/DD/YYYY')\n\t) AS CLM_DISCOVERY_DT,\n\tv_SYM_NUM_MODE AS CON_POLICY_KEY,\n\tipfcgp_accident_description,\n\tipfcgp_offset_onset_ind,\n\tlogical_flag,\n\tipfcgp_loss_adjustor_no,\n\tipfcgp_claim_status\n\tFROM SQ_pif_42gp_stage\n),\nLKP_Claim_Stage AS (\n\tSELECT\n\tclaim_id,\n\tpolicy_sym,\n\tpolicy_num,\n\tpolicy_mod,\n\tloss_month,\n\tloss_day,\n\tloss_year,\n\tloss_occurrence\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_id as claim_id, \r\n\t\ta.policy_sym as policy_sym, \r\n\t\ta.policy_num as policy_num, \r\n\t\ta.policy_mod as policy_mod, \r\n\t\tMONTH(a.loss_date) as loss_month, \r\n\t\tDAY(a.loss_date) as loss_day, \r\n\t\tYEAR(a.loss_date) as loss_year, \r\n\t\ta.loss_occurrence as loss_occurrence \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_stage a\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY policy_sym,policy_num,policy_mod,loss_month,loss_day,loss_year,loss_occurrence ORDER BY claim_id) = 1\n),\nLKP_Log_Note_Stage AS (\n\tSELECT\n\tcreate_date,\n\tclaim_id\n\tFROM (\n\t\tSELECT \r\n\t\tMAX(a.create_date) as create_date, \r\n\t\ta.claim_id as claim_id \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.log_note_stage a\r\n\t\tGROUP BY a.claim_id\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_id ORDER BY create_date) = 1\n),\nLKP_PIF_42X6_Stage AS (\n\tSELECT\n\tmin_reported_date,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tipfcx6_year_of_loss,\n\tipfcx6_month_of_loss,\n\tipfcx6_day_of_loss,\n\tipfcx6_usr_loss_occurence\n\tFROM (\n\t\tSELECT  \r\n\t\tMIN(\r\n\t\t(CASE LEN(CONVERT(varchar(2), A.ipfcx6_loss_reported_month)) WHEN 1 THEN '0' + CONVERT(varchar(2), A.ipfcx6_loss_reported_month) \r\n\t\t                     ELSE CONVERT(varchar(2), A.ipfcx6_loss_reported_month) END) + '/' + \r\n\t\t                        (CASE LEN(CONVERT(varchar(2), A.ipfcx6_loss_reported_day)) WHEN 1 THEN '0' + CONVERT(varchar(2), A.ipfcx6_loss_reported_day) \r\n\t\t                     ELSE CONVERT(varchar(2), A.ipfcx6_loss_reported_day) END) + '/' + CONVERT(varchar(4), A.ipfcx6_loss_reported_year) \r\n\t\t) as min_reported_date,\r\n\t\tA.pif_symbol as pif_symbol, \r\n\t\tA.pif_policy_number as pif_policy_number, \r\n\t\tA.pif_module as pif_module, \r\n\t\tA.ipfcx6_year_of_loss as ipfcx6_year_of_loss, \r\n\t\tA.ipfcx6_month_of_loss as ipfcx6_month_of_loss, \r\n\t\tA.ipfcx6_day_of_loss as ipfcx6_day_of_loss, \r\n\t\t(A.ipfcx6_loss_occ_fdigit + A.ipfcx6_usr_loss_occurence) as ipfcx6_usr_loss_occurence \r\n\t\tFROM pif_42x6_stage A\r\n\t\tWHERE  A.logical_flag IN ('0','1')\r\n\t\tGROUP BY \r\n\t\tpif_symbol, \r\n\t\tpif_policy_number, \r\n\t\tpif_module, \r\n\t\tipfcx6_year_of_loss, \r\n\t\tipfcx6_month_of_loss, \r\n\t\tipfcx6_day_of_loss, \r\n\t\t(ipfcx6_loss_occ_fdigit + ipfcx6_usr_loss_occurence)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,ipfcx6_year_of_loss,ipfcx6_month_of_loss,ipfcx6_day_of_loss,ipfcx6_usr_loss_occurence ORDER BY min_reported_date) = 1\n),\nLKP_Pif_42gm_Stage AS (\n\tSELECT\n\tipfc4m_rsk_rmk_verbg,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tipfc4m_loss_year,\n\tipfc4m_loss_month,\n\tipfc4m_loss_day,\n\tipfc4m_loss_occurence\n\tFROM (\n\t\tSELECT \r\n\t\ta.ipfc4m_rsk_rmk_verbg as ipfc4m_rsk_rmk_verbg, \r\n\t\ta.pif_symbol as pif_symbol, \r\n\t\ta.pif_policy_number as pif_policy_number, \r\n\t\ta.pif_module as pif_module, \r\n\t\ta.ipfc4m_loss_year as ipfc4m_loss_year, \r\n\t\ta.ipfc4m_loss_month as ipfc4m_loss_month, \r\n\t\ta.ipfc4m_loss_day as ipfc4m_loss_day, \r\n\t\ta.ipfc4m_loss_occurence as ipfc4m_loss_occurence\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_42gm_stage a\r\n\t\tWHERE ipfc4m_use_code='LOD'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,ipfc4m_loss_year,ipfc4m_loss_month,ipfc4m_loss_day,ipfc4m_loss_occurence ORDER BY ipfc4m_rsk_rmk_verbg DESC) = 1\n),\nLKP_Pif_42gq_Aut_Stage AS (\n\tSELECT\n\tipfcgq_driver_number,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tipfcgq_year_of_loss,\n\tipfcgq_month_of_loss,\n\tipfcgq_day_of_loss,\n\tipfcgq_loss_occurence\n\tFROM (\n\t\tSELECT \n\t\t\tipfcgq_driver_number,\n\t\t\tpif_symbol,\n\t\t\tpif_policy_number,\n\t\t\tpif_module,\n\t\t\tipfcgq_year_of_loss,\n\t\t\tipfcgq_month_of_loss,\n\t\t\tipfcgq_day_of_loss,\n\t\t\tipfcgq_loss_occurence\n\t\tFROM pif_42gq_aut_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,ipfcgq_year_of_loss,ipfcgq_month_of_loss,ipfcgq_day_of_loss,ipfcgq_loss_occurence ORDER BY ipfcgq_driver_number) = 1\n),\nLKP_Pif_4578_Stage AS (\n\tSELECT\n\tloss_fault_code,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tloss_year,\n\tloss_month,\n\tloss_day,\n\tloss_occurence\n\tFROM (\n\t\tSELECT \r\n\t\ta.loss_fault_code as loss_fault_code, \r\n\t\ta.pif_symbol as pif_symbol, \r\n\t\ta.pif_policy_number as pif_policy_number, \r\n\t\ta.pif_module as pif_module, \r\n\t\ta.loss_year as loss_year, \r\n\t\ta.loss_month as loss_month, \r\n\t\ta.loss_day as loss_day, \r\n\t\ta.loss_occurence as loss_occurence \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_4578_stage a\r\n\t\tORDER BY loss_transaction_date, loss_fault_code ASC --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,loss_year,loss_month,loss_day,loss_occurence ORDER BY loss_fault_code DESC) = 1\n),\nLKP_Sup_Claim_Catastrophe_Code AS (\n\tSELECT\n\tcat_start_date,\n\tcat_end_date,\n\tcat_code\n\tFROM (\n\t\tSELECT \r\n\t\ta.cat_start_date as cat_start_date, \r\n\t\ta.cat_end_date as cat_end_date, \r\n\t\trtrim(ltrim(a.cat_code)) as cat_code \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code a\r\n\t\tWHERE\r\n\t\tcrrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cat_code ORDER BY cat_start_date) = 1\n),\nLKP_Sup_State_sup_state_id AS (\n\tSELECT\n\tsup_state_id,\n\tstate_abbrev\n\tFROM (\n\t\tSELECT \n\t\t\tsup_state_id,\n\t\t\tstate_abbrev\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_abbrev ORDER BY sup_state_id) = 1\n),\nLKP_V2_Policy AS (\n\tSELECT\n\tpol_key_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.pol_ak_id as pol_key_ak_id, \r\n\t\ta.pol_key as pol_key \r\n\t\tFROM V2.policy a\r\n\t\tWHERE a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_key_ak_id) = 1\n),\nmplt_claim_occurrence_next_diary AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_Task_NextDueDiary_ByClaim AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect MIN(T.DueDate) as DueDate, T.ClaimId as ClaimId \r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T \r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tgroup by T.ClaimId\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId ORDER BY DueDate DESC) = 1\n\t),\n\tLKP_Task_DiaryByClaimAndDueDate AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tAssignedUserName,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect T.DueDate as DueDate, T.AssignedUserName as AssignedUserName, T.ClaimId as ClaimId\r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T\r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId,DueDate ORDER BY DueDate DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tDueDate, \n\t\tAssignedUserName\n\t\tFROM LKP_Task_DiaryByClaimAndDueDate\n\t),\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tEXP_Value.CLM_CLAIM_NBR,\n\t'N/A' AS CLM_CSR_CLAIM_NBR,\n\t'N/A' AS CLM_TYPE_CD,\n\t'N/A' AS CLM_POSTAL_CD,\n\tEXP_Value.CLM_DISCOVERY_DT AS in_CLM_DISCOVERY_DT,\n\t-- *INF*: iif(isnull(in_CLM_DISCOVERY_DT),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_CLM_DISCOVERY_DT)\n\tIFF(\n\t    in_CLM_DISCOVERY_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_DISCOVERY_DT\n\t) AS CLM_DISCOVERY_DT,\n\tEXP_Value.CLM_LOSS_DT AS in_CLM_LOSS_DT,\n\t-- *INF*: iif(isnull(in_CLM_LOSS_DT),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_CLM_LOSS_DT)\n\tIFF(in_CLM_LOSS_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_LOSS_DT) AS CLM_LOSS_DT,\n\t'N/A' AS CLM_LOSS_CITY,\n\t'N/A' AS CLM_LOSS_COUNTY,\n\tEXP_Value.CLM_LOSS_STATE_CD AS in_CLM_LOSS_STATE_CD,\n\t-- *INF*: IIF(ISNULL(:LKP.lkp_sup_state(in_CLM_LOSS_STATE_CD)),\r\n\t-- 'N/A',\r\n\t-- :LKP.lkp_sup_state(in_CLM_LOSS_STATE_CD))\n\tIFF(\n\t    LKP_SUP_STATE_in_CLM_LOSS_STATE_CD.state_code IS NULL, 'N/A',\n\t    LKP_SUP_STATE_in_CLM_LOSS_STATE_CD.state_code\n\t) AS CLM_LOSS_STATE_CD,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\r\n\t-- \n\tTO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY') AS CLM_REI_NOTIFY_DT,\n\t'N/A' AS CLM_METHOD_RPTD,\n\t'N/A' AS CLM_HOW_CLM_RPTD,\n\t'N/A' AS CLM_VIOL_CIT_DESC,\n\tEXP_Value.in_IPFCGP_LOSS_OCCURENCE AS in_CON_OCCURRENCE_NBR,\n\t-- *INF*: IIF(ISNULL(in_CON_OCCURRENCE_NBR) OR IS_SPACES(in_CON_OCCURRENCE_NBR),'N/A',\r\n\t--    LPAD(rtrim( in_CON_OCCURRENCE_NBR),3,'0'))\r\n\t-- \r\n\t-- -- Changed the logic to LPAD with '0' on 8/4/2010\n\tIFF(\n\t    in_CON_OCCURRENCE_NBR IS NULL\n\t    or LENGTH(in_CON_OCCURRENCE_NBR)>0\n\t    and TRIM(in_CON_OCCURRENCE_NBR)='',\n\t    'N/A',\n\t    LPAD(rtrim(in_CON_OCCURRENCE_NBR), 3, '0')\n\t) AS CON_OCCURRENCE_NBR,\n\tEXP_Value.CLM_CATASTROPHE_CODE AS in_CLM_CATASTROPHE_CODE,\n\t-- *INF*: iif(isnull(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--    iif(is_spaces(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--     rtrim(in_CLM_CATASTROPHE_CODE)))\n\tIFF(\n\t    in_CLM_CATASTROPHE_CODE IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_CATASTROPHE_CODE)>0\n\t    and TRIM(in_CLM_CATASTROPHE_CODE)='', 'N/A',\n\t        rtrim(in_CLM_CATASTROPHE_CODE)\n\t    )\n\t) AS v_CLM_CATASTROPHE_CODE,\n\tv_CLM_CATASTROPHE_CODE AS CLM_CATASTROPHE_CODE,\n\t'N/A' AS TCC_COMMENT_TXT,\n\tLKP_Sup_Claim_Catastrophe_Code.cat_start_date AS in_COC_START_DT,\n\t-- *INF*: IIF(v_CLM_CATASTROPHE_CODE = 'N/A', TO_DATE('1/1/1800', 'MM/DD/YYYY'), \r\n\t-- IIF(ISNULL(in_COC_START_DT),TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_COC_START_DT))\n\tIFF(\n\t    v_CLM_CATASTROPHE_CODE = 'N/A', TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    IFF(\n\t        in_COC_START_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_COC_START_DT\n\t    )\n\t) AS COC_START_DT,\n\tLKP_Sup_Claim_Catastrophe_Code.cat_end_date AS in_COC_END_DT,\n\t-- *INF*: IIF(v_CLM_CATASTROPHE_CODE = 'N/A', TO_DATE('12/31/2100', 'MM/DD/YYYY'), \r\n\t-- IIF(ISNULL(in_COC_END_DT),TO_DATE('12/31/2100','MM/DD/YYYY'),\r\n\t-- in_COC_END_DT))\n\tIFF(\n\t    v_CLM_CATASTROPHE_CODE = 'N/A', TO_TIMESTAMP('12/31/2100', 'MM/DD/YYYY'),\n\t    IFF(\n\t        in_COC_END_DT IS NULL, TO_TIMESTAMP('12/31/2100', 'MM/DD/YYYY'), in_COC_END_DT\n\t    )\n\t) AS COC_END_DT,\n\tLKP_V2_Policy.pol_key_ak_id AS CON_pol_key_ak_id,\n\t-- *INF*: IIF(ISNULL(CON_pol_key_ak_id) , \r\n\t-- -1, \r\n\t-- CON_pol_key_ak_id)\n\tIFF(CON_pol_key_ak_id IS NULL, - 1, CON_pol_key_ak_id) AS out_CON_pol_key_ak_id,\n\t'N/A' AS CLM_STATUS_CD,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\n\tTO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY') AS CLM_CREATE_TS,\n\tEXP_Value.ipfcgp_offset_onset_ind AS in_ipfcgp_offset_onset_ind,\n\t-- *INF*: IIF(\r\n\t-- (ISNULL(in_ipfcgp_offset_onset_ind) OR IS_SPACES(in_ipfcgp_offset_onset_ind)),\r\n\t-- 'N/A',\r\n\t-- in_ipfcgp_offset_onset_ind)\n\tIFF(\n\t    (in_ipfcgp_offset_onset_ind IS NULL\n\t    or LENGTH(in_ipfcgp_offset_onset_ind)>0\n\t    and TRIM(in_ipfcgp_offset_onset_ind)=''),\n\t    'N/A',\n\t    in_ipfcgp_offset_onset_ind\n\t) AS OFFSET_ONSET_INDICATOR,\n\tLKP_Pif_42gm_Stage.ipfc4m_rsk_rmk_verbg AS in_ipfc4m_rsk_rmk_verbg,\n\tEXP_Value.ipfcgp_accident_description AS in_ipfcgp_accident_description,\n\t-- *INF*: IIF ((ISNULL(in_ipfc4m_rsk_rmk_verbg) OR IS_SPACES (in_ipfc4m_rsk_rmk_verbg)),\r\n\t-- IIF ((ISNULL(in_ipfcgp_accident_description) OR IS_SPACES (in_ipfcgp_accident_description)),'N/A',in_ipfcgp_accident_description)\r\n\t-- ,in_ipfc4m_rsk_rmk_verbg)\r\n\t-- \n\tIFF(\n\t    (in_ipfc4m_rsk_rmk_verbg IS NULL\n\t    or LENGTH(in_ipfc4m_rsk_rmk_verbg)>0\n\t    and TRIM(in_ipfc4m_rsk_rmk_verbg)=''),\n\t    IFF(\n\t        (in_ipfcgp_accident_description IS NULL\n\t        or LENGTH(in_ipfcgp_accident_description)>0\n\t        and TRIM(in_ipfcgp_accident_description)=''),\n\t        'N/A',\n\t        in_ipfcgp_accident_description\n\t    ),\n\t    in_ipfc4m_rsk_rmk_verbg\n\t) AS LOSS_DESCRIPTION,\n\tLKP_Pif_4578_Stage.loss_fault_code AS in_loss_fault_code,\n\t-- *INF*: IIF((ISNULL(in_loss_fault_code) OR IS_SPACES(in_loss_fault_code)),\r\n\t-- 'N/A',\r\n\t-- in_loss_fault_code)\n\tIFF(\n\t    (in_loss_fault_code IS NULL OR LENGTH(in_loss_fault_code)>0 AND TRIM(in_loss_fault_code)=''),\n\t    'N/A',\n\t    in_loss_fault_code\n\t) AS CLM_AT_FAULT_CD,\n\t-- *INF*: RTRIM(LTRIM(IIF((ISNULL(in_loss_fault_code) OR IS_SPACES(in_loss_fault_code)),\r\n\t-- 'N/A',\r\n\t-- in_loss_fault_code)))\n\tRTRIM(LTRIM(\n\t        IFF(\n\t            (in_loss_fault_code IS NULL\n\t            or LENGTH(in_loss_fault_code)>0\n\t            and TRIM(in_loss_fault_code)=''),\n\t            'N/A',\n\t            in_loss_fault_code\n\t        ))) AS o_CLM_AT_FAULT_CD,\n\tLKP_Pif_42gq_Aut_Stage.ipfcgq_driver_number AS in_CLM_DRIVER_NBR,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(in_CLM_DRIVER_NBR)  ,\r\n\t-- -1,in_CLM_DRIVER_NBR)\r\n\t-- \n\tIFF(in_CLM_DRIVER_NBR IS NULL, - 1, in_CLM_DRIVER_NBR) AS CLM_DRIVER_NBR,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(in_CLM_DRIVER_NBR)  ,\r\n\t-- 0,1)\n\tIFF(in_CLM_DRIVER_NBR IS NULL, 0, 1) AS CLM_DRV_SAME_IND,\n\tLKP_Log_Note_Stage.create_date AS in_LOG_NOTE_LAST_ACTIVITY_DATE,\n\t-- *INF*: iif(isnull(in_LOG_NOTE_LAST_ACTIVITY_DATE), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--    in_LOG_NOTE_LAST_ACTIVITY_DATE)\n\tIFF(\n\t    in_LOG_NOTE_LAST_ACTIVITY_DATE IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    in_LOG_NOTE_LAST_ACTIVITY_DATE\n\t) AS LOG_NOTE_LAST_ACTIVITY_DATE,\n\tmplt_claim_occurrence_next_diary.DueDate AS in_CLAIM_NEXT_DIARY_DATE,\n\t-- *INF*: iif(isnull(in_CLAIM_NEXT_DIARY_DATE), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--   in_CLAIM_NEXT_DIARY_DATE)\n\tIFF(\n\t    in_CLAIM_NEXT_DIARY_DATE IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    in_CLAIM_NEXT_DIARY_DATE\n\t) AS CLAIM_NEXT_DIARY_DATE,\n\t'N/A' AS CLM_NOT_CLAIM_IND,\n\tEXP_Value.logical_flag,\n\tEXP_Value.CON_POLICY_KEY,\n\tEXP_Value.ipfcgp_claim_status AS in_ipfcgp_claim_status,\n\t-- *INF*: IIF(ISNULL(in_ipfcgp_claim_status),'N/A',in_ipfcgp_claim_status)\n\tIFF(in_ipfcgp_claim_status IS NULL, 'N/A', in_ipfcgp_claim_status) AS v_ipfcgp_claim_status,\n\t-- *INF*: DECODE(v_ipfcgp_claim_status,\r\n\t-- 'N/A' , 'N/A',\r\n\t-- 'O' , 'OPE',\r\n\t-- 'C' , 'CWP',\r\n\t-- 'Z' , 'OFF',\r\n\t-- 'N' , 'NOT',\r\n\t-- 'CNP')\n\tDECODE(\n\t    v_ipfcgp_claim_status,\n\t    'N/A', 'N/A',\n\t    'O', 'OPE',\n\t    'C', 'CWP',\n\t    'Z', 'OFF',\n\t    'N', 'NOT',\n\t    'CNP'\n\t) AS ipfcgp_claim_status,\n\t-- *INF*: DECODE(in_ipfcgp_claim_status,\r\n\t-- 'N' , 'Y',\r\n\t-- 'N/A')\n\tDECODE(\n\t    in_ipfcgp_claim_status,\n\t    'N', 'Y',\n\t    'N/A'\n\t) AS ipfcgp_notice_claim_ind,\n\tLKP_PIF_42X6_Stage.min_reported_date AS in_reported_date,\n\t-- *INF*: IIF(ISNULL(in_reported_date), TO_DATE ('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), in_reported_date)\n\tIFF(\n\t    in_reported_date IS NULL, TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    in_reported_date\n\t) AS reported_date,\n\tmplt_claim_occurrence_next_diary.AssignedUserName AS claim_rep_full_name,\n\t-- *INF*: IIF(ISNULL(claim_rep_full_name),'N/A',claim_rep_full_name)\n\tIFF(claim_rep_full_name IS NULL, 'N/A', claim_rep_full_name) AS claim_rep_full_name_out,\n\tLKP_Sup_State_sup_state_id.sup_state_id AS in_sup_state_id,\n\t-- *INF*: IIF(ISNULL(in_sup_state_id), -1,in_sup_state_id)\n\tIFF(in_sup_state_id IS NULL, - 1, in_sup_state_id) AS SupStateID\n\tFROM EXP_Value\n\t -- Manually join with mplt_claim_occurrence_next_diary\n\tLEFT JOIN LKP_Log_Note_Stage\n\tON LKP_Log_Note_Stage.claim_id = LKP_Claim_Stage.claim_id\n\tLEFT JOIN LKP_PIF_42X6_Stage\n\tON LKP_PIF_42X6_Stage.pif_symbol = EXP_Value.PIF_SYMBOL AND LKP_PIF_42X6_Stage.pif_policy_number = EXP_Value.PIF_POLICY_NUMBER AND LKP_PIF_42X6_Stage.pif_module = EXP_Value.PIF_MODULE AND LKP_PIF_42X6_Stage.ipfcx6_year_of_loss = EXP_Value.IPFCGP_YEAR_OF_LOSS AND LKP_PIF_42X6_Stage.ipfcx6_month_of_loss = EXP_Value.IPFCGP_MONTH_OF_LOSS AND LKP_PIF_42X6_Stage.ipfcx6_day_of_loss = EXP_Value.IPFCGP_DAY_OF_LOSS AND LKP_PIF_42X6_Stage.ipfcx6_usr_loss_occurence = EXP_Value.in_IPFCGP_LOSS_OCCURENCE\n\tLEFT JOIN LKP_Pif_42gm_Stage\n\tON LKP_Pif_42gm_Stage.pif_symbol = EXP_Value.PIF_SYMBOL AND LKP_Pif_42gm_Stage.pif_policy_number = EXP_Value.PIF_POLICY_NUMBER AND LKP_Pif_42gm_Stage.pif_module = EXP_Value.PIF_MODULE AND LKP_Pif_42gm_Stage.ipfc4m_loss_year = EXP_Value.IPFCGP_YEAR_OF_LOSS AND LKP_Pif_42gm_Stage.ipfc4m_loss_month = EXP_Value.IPFCGP_MONTH_OF_LOSS AND LKP_Pif_42gm_Stage.ipfc4m_loss_day = EXP_Value.IPFCGP_DAY_OF_LOSS AND LKP_Pif_42gm_Stage.ipfc4m_loss_occurence = EXP_Value.in_IPFCGP_LOSS_OCCURENCE\n\tLEFT JOIN LKP_Pif_42gq_Aut_Stage\n\tON LKP_Pif_42gq_Aut_Stage.pif_symbol = EXP_Value.PIF_SYMBOL AND LKP_Pif_42gq_Aut_Stage.pif_policy_number = EXP_Value.PIF_POLICY_NUMBER AND LKP_Pif_42gq_Aut_Stage.pif_module = EXP_Value.PIF_MODULE AND LKP_Pif_42gq_Aut_Stage.ipfcgq_year_of_loss = EXP_Value.IPFCGP_YEAR_OF_LOSS AND LKP_Pif_42gq_Aut_Stage.ipfcgq_month_of_loss = EXP_Value.IPFCGP_MONTH_OF_LOSS AND LKP_Pif_42gq_Aut_Stage.ipfcgq_day_of_loss = EXP_Value.IPFCGP_DAY_OF_LOSS AND LKP_Pif_42gq_Aut_Stage.ipfcgq_loss_occurence = EXP_Value.in_IPFCGP_LOSS_OCCURENCE\n\tLEFT JOIN LKP_Pif_4578_Stage\n\tON LKP_Pif_4578_Stage.pif_symbol = EXP_Value.PIF_SYMBOL AND LKP_Pif_4578_Stage.pif_policy_number = EXP_Value.PIF_POLICY_NUMBER AND LKP_Pif_4578_Stage.pif_module = EXP_Value.PIF_MODULE AND LKP_Pif_4578_Stage.loss_year = EXP_Value.IPFCGP_YEAR_OF_LOSS AND LKP_Pif_4578_Stage.loss_month = EXP_Value.IPFCGP_MONTH_OF_LOSS AND LKP_Pif_4578_Stage.loss_day = EXP_Value.IPFCGP_DAY_OF_LOSS AND LKP_Pif_4578_Stage.loss_occurence = EXP_Value.in_IPFCGP_LOSS_OCCURENCE\n\tLEFT JOIN LKP_Sup_Claim_Catastrophe_Code\n\tON LKP_Sup_Claim_Catastrophe_Code.cat_code = EXP_Value.CLM_CATASTROPHE_CODE\n\tLEFT JOIN LKP_Sup_State_sup_state_id\n\tON LKP_Sup_State_sup_state_id.state_abbrev = EXP_Value.CLM_LOSS_STATE_CD\n\tLEFT JOIN LKP_V2_Policy\n\tON LKP_V2_Policy.pol_key = EXP_Value.CON_POLICY_KEY\n\tLEFT JOIN LKP_SUP_STATE LKP_SUP_STATE_in_CLM_LOSS_STATE_CD\n\tON LKP_SUP_STATE_in_CLM_LOSS_STATE_CD.state_abbrev = in_CLM_LOSS_STATE_CD\n\n),\nLKP_Claim_Occurrence AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_ak_id,\n\tpol_key_ak_id,\n\tclaim_occurrence_type_code,\n\tsource_claim_occurrence_status_code,\n\tnotice_claim_ind,\n\ts3p_claim_created_date,\n\tsource_claim_rpted_date,\n\trpt_method,\n\thow_claim_rpted,\n\tloss_loc_addr,\n\tloss_loc_city,\n\tloss_loc_county,\n\tloss_loc_state,\n\tloss_loc_zip,\n\tclaim_loss_date,\n\tclaim_discovery_date,\n\tclaim_cat_code,\n\tclaim_cat_start_date,\n\tclaim_cat_end_date,\n\ts3p_claim_num,\n\treins_notified_date,\n\tclaim_occurrence_num,\n\tclaim_voilation_citation_descript,\n\tclaim_loss_descript,\n\tclaim_insd_at_fault_code,\n\tclaim_insd_driver_num,\n\tclaim_insd_driver_ind,\n\tclaim_log_note_last_act_date,\n\tnext_diary_date,\n\tnext_diary_date_rep,\n\toffset_onset_ind,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_occurrence_id as claim_occurrence_id, \r\n\t\ta.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\ta.pol_key_ak_id as pol_key_ak_id, \r\n\t\ta.claim_occurrence_type_code as claim_occurrence_type_code, \r\n\t\ta.source_claim_occurrence_status_code as source_claim_occurrence_status_code, \r\n\t\ta.notice_claim_ind as notice_claim_ind,\r\n\t\ta.s3p_claim_created_date as s3p_claim_created_date, \r\n\t\ta.source_claim_rpted_date as source_claim_rpted_date,\r\n\t\ta.rpt_method as rpt_method, \r\n\t\ta.how_claim_rpted as how_claim_rpted, \r\n\t\ta.loss_loc_addr as loss_loc_addr, \r\n\t\ta.loss_loc_city as loss_loc_city, \r\n\t\ta.loss_loc_county as loss_loc_county, \r\n\t\ta.loss_loc_state as loss_loc_state, \r\n\t\ta.loss_loc_zip as loss_loc_zip, \r\n\t\ta.claim_loss_date as claim_loss_date, \r\n\t\ta.claim_discovery_date as claim_discovery_date, \r\n\t\ta.claim_cat_code as claim_cat_code, \r\n\t\ta.claim_cat_start_date as claim_cat_start_date,\r\n\t\ta.claim_cat_end_date as claim_cat_end_date, \r\n\t\ta.s3p_claim_num as s3p_claim_num, \r\n\t\ta.reins_notified_date as reins_notified_date, \r\n\t\ta.claim_occurrence_num as claim_occurrence_num, \r\n\t\ta.claim_voilation_citation_descript as claim_voilation_citation_descript, \r\n\t\ta.claim_loss_descript as claim_loss_descript, \r\n\t\ta.claim_insd_at_fault_code as claim_insd_at_fault_code, \r\n\t\ta.claim_insd_driver_num as claim_insd_driver_num,\r\n\t\ta.claim_insd_driver_ind as claim_insd_driver_ind, \r\n\t\ta.claim_log_note_last_act_date as claim_log_note_last_act_date, \r\n\t\ta.next_diary_date as next_diary_date, \r\n\t\ta.next_diary_date_rep as next_diary_date_rep, \r\n\t\ta.offset_onset_ind as offset_onset_ind, \r\n\t\ta.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence a\r\n\t\tWHERE a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND a.crrnt_snpsht_flag = 1\r\n\t\tORDER BY claim_occurrence_key --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_id) = 1\n),\nLKP_Sup_Claim_Insured_At_Fault_Code AS (\n\tSELECT\n\tsup_claim_insd_at_fault_code_id,\n\tclaim_insd_at_fault_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_insd_at_fault_code_id,\n\t\t\tclaim_insd_at_fault_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_insured_at_fault_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_insd_at_fault_code ORDER BY sup_claim_insd_at_fault_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Lkp_Values.CLM_CLAIM_NBR,\n\tEXP_Lkp_Values.CLM_CSR_CLAIM_NBR,\n\tEXP_Lkp_Values.CLM_POSTAL_CD,\n\tEXP_Lkp_Values.CLM_DISCOVERY_DT,\n\tEXP_Lkp_Values.CLM_LOSS_DT,\n\tEXP_Lkp_Values.CLM_LOSS_CITY,\n\tEXP_Lkp_Values.CLM_LOSS_COUNTY,\n\tEXP_Lkp_Values.CLM_LOSS_STATE_CD,\n\tEXP_Lkp_Values.CLM_TYPE_CD,\n\tEXP_Lkp_Values.CLM_REI_NOTIFY_DT,\n\tEXP_Lkp_Values.CLM_METHOD_RPTD,\n\tEXP_Lkp_Values.CLM_HOW_CLM_RPTD,\n\tEXP_Lkp_Values.CLM_VIOL_CIT_DESC,\n\tEXP_Lkp_Values.CON_OCCURRENCE_NBR,\n\tEXP_Lkp_Values.CLM_CATASTROPHE_CODE,\n\tEXP_Lkp_Values.TCC_COMMENT_TXT,\n\tEXP_Lkp_Values.COC_START_DT,\n\tEXP_Lkp_Values.COC_END_DT,\n\tEXP_Lkp_Values.out_CON_pol_key_ak_id AS CON_pol_key_ak_id,\n\tEXP_Lkp_Values.CLM_STATUS_CD,\n\tEXP_Lkp_Values.CLM_CREATE_TS,\n\tEXP_Lkp_Values.LOSS_DESCRIPTION,\n\tEXP_Lkp_Values.CLM_AT_FAULT_CD,\n\tEXP_Lkp_Values.CLM_DRIVER_NBR,\n\tEXP_Lkp_Values.CLM_DRV_SAME_IND,\n\tEXP_Lkp_Values.OFFSET_ONSET_INDICATOR,\n\tEXP_Lkp_Values.LOG_NOTE_LAST_ACTIVITY_DATE,\n\tEXP_Lkp_Values.CLAIM_NEXT_DIARY_DATE,\n\tEXP_Lkp_Values.CLM_NOT_CLAIM_IND,\n\tEXP_Lkp_Values.reported_date,\n\tLKP_Claim_Occurrence.claim_occurrence_id,\n\tLKP_Claim_Occurrence.claim_occurrence_ak_id AS LKP_claim_occurrence_ak_id,\n\tLKP_Claim_Occurrence.pol_key_ak_id,\n\tLKP_Claim_Occurrence.claim_occurrence_type_code,\n\tLKP_Claim_Occurrence.source_claim_occurrence_status_code AS claim_occurrence_status_code,\n\tLKP_Claim_Occurrence.s3p_claim_created_date,\n\tLKP_Claim_Occurrence.rpt_method,\n\tLKP_Claim_Occurrence.how_claim_rpted,\n\tLKP_Claim_Occurrence.loss_loc_addr,\n\tLKP_Claim_Occurrence.loss_loc_city,\n\tLKP_Claim_Occurrence.loss_loc_county,\n\tLKP_Claim_Occurrence.loss_loc_state,\n\tLKP_Claim_Occurrence.loss_loc_zip,\n\tLKP_Claim_Occurrence.claim_loss_date,\n\tLKP_Claim_Occurrence.claim_discovery_date,\n\tLKP_Claim_Occurrence.claim_cat_code,\n\tLKP_Claim_Occurrence.claim_cat_start_date,\n\tLKP_Claim_Occurrence.claim_cat_end_date,\n\tLKP_Claim_Occurrence.s3p_claim_num,\n\tLKP_Claim_Occurrence.reins_notified_date,\n\tLKP_Claim_Occurrence.claim_occurrence_num,\n\tLKP_Claim_Occurrence.claim_voilation_citation_descript,\n\tLKP_Claim_Occurrence.claim_loss_descript,\n\tLKP_Claim_Occurrence.claim_insd_at_fault_code,\n\tLKP_Claim_Occurrence.claim_insd_driver_ind AS claim_insd_drvr_ind,\n\tLKP_Claim_Occurrence.claim_log_note_last_act_date,\n\tLKP_Claim_Occurrence.next_diary_date,\n\tLKP_Claim_Occurrence.next_diary_date_rep,\n\tLKP_Claim_Occurrence.offset_onset_ind,\n\tLKP_Claim_Occurrence.claim_insd_driver_num AS claim_insd_drvr_num,\n\tLKP_Claim_Occurrence.notice_claim_ind,\n\t1 AS Crrnt_Snpsht_Flag,\n\t-- *INF*: iif(isnull(claim_occurrence_id),'NEW',\r\n\t-- \tiif (\r\n\t-- \t(ltrim(rtrim(CLM_CSR_CLAIM_NBR)) <> ltrim(rtrim(s3p_claim_num))) or\r\n\t-- \t(ltrim(rtrim(CLM_POSTAL_CD)) <> ltrim(rtrim(loss_loc_zip))) or\r\n\t-- \t(CLM_DISCOVERY_DT <> claim_discovery_date ) or\r\n\t-- \t(CLM_LOSS_DT  <> claim_loss_date ) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_CITY)) <> ltrim(rtrim(loss_loc_city))) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_COUNTY)) <> ltrim(rtrim(loss_loc_county) )) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_STATE_CD)) <>  ltrim(rtrim(loss_loc_state))) or\r\n\t-- \t(ltrim(rtrim(CLM_TYPE_CD)) <> ltrim(rtrim(claim_occurrence_type_code))) or\r\n\t-- \t(CLM_REI_NOTIFY_DT <> reins_notified_date) or\r\n\t-- \t(ltrim(rtrim(CLM_METHOD_RPTD)) <> ltrim(rtrim(rpt_method))) or\r\n\t-- \t(ltrim(rtrim(CLM_HOW_CLM_RPTD)) <> ltrim(rtrim(how_claim_rpted))) or\r\n\t-- \t(ltrim(rtrim(CLM_VIOL_CIT_DESC)) <> ltrim(rtrim(claim_voilation_citation_descript))) or\r\n\t-- \t(ltrim(rtrim(CON_OCCURRENCE_NBR)) <> ltrim(rtrim(claim_occurrence_num))) or\r\n\t-- \t(ltrim(rtrim(CLM_CATASTROPHE_CODE)) <> ltrim(rtrim(claim_cat_code))) or\r\n\t-- \t(ltrim(rtrim(TCC_COMMENT_TXT)) <>  ltrim(rtrim(loss_loc_addr))) or\r\n\t-- \t(COC_START_DT <> claim_cat_start_date) or\r\n\t-- \t(COC_END_DT <> claim_cat_end_date) or\r\n\t-- \t( CLM_CREATE_TS <> s3p_claim_created_date) or\r\n\t-- \t(ltrim(rtrim( LOSS_DESCRIPTION)) <> ltrim(rtrim(claim_loss_descript))) or\r\n\t-- \t(ltrim(rtrim(CLM_AT_FAULT_CD))  <> ltrim(rtrim(claim_insd_at_fault_code))) or\r\n\t-- \t( CLM_DRIVER_NBR <> claim_insd_drvr_num) or\r\n\t-- \t(ltrim(rtrim( CLM_DRV_SAME_IND)) <> ltrim(rtrim(claim_insd_drvr_ind))) or\r\n\t-- \t(LOG_NOTE_LAST_ACTIVITY_DATE  <> claim_log_note_last_act_date) or\r\n\t-- \t(claim_rep_full_name_out  <> next_diary_date_rep) or\r\n\t-- \t( CLAIM_NEXT_DIARY_DATE <> next_diary_date) or\r\n\t-- \t(ltrim(rtrim(OFFSET_ONSET_INDICATOR))  <> ltrim(rtrim(offset_onset_ind))) or\r\n\t-- \t(CON_pol_key_ak_id <>  pol_key_ak_id)  or \r\n\t--      (ltrim(rtrim(ipfcgp_claim_status))  <> ltrim(rtrim(claim_occurrence_status_code))) or\r\n\t-- \t(ltrim(rtrim(ipfcgp_notice_claim_ind))  <> ltrim(rtrim(notice_claim_ind))) or   \r\n\t--        reported_date <> source_claim_rpted_date  ,\r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(\n\t    claim_occurrence_id IS NULL, 'NEW',\n\t    IFF(\n\t        (ltrim(rtrim(CLM_CSR_CLAIM_NBR)) <> ltrim(rtrim(s3p_claim_num)))\n\t        or (ltrim(rtrim(CLM_POSTAL_CD)) <> ltrim(rtrim(loss_loc_zip)))\n\t        or (CLM_DISCOVERY_DT <> claim_discovery_date)\n\t        or (CLM_LOSS_DT <> claim_loss_date)\n\t        or (ltrim(rtrim(CLM_LOSS_CITY)) <> ltrim(rtrim(loss_loc_city)))\n\t        or (ltrim(rtrim(CLM_LOSS_COUNTY)) <> ltrim(rtrim(loss_loc_county)))\n\t        or (ltrim(rtrim(CLM_LOSS_STATE_CD)) <> ltrim(rtrim(loss_loc_state)))\n\t        or (ltrim(rtrim(CLM_TYPE_CD)) <> ltrim(rtrim(claim_occurrence_type_code)))\n\t        or (CLM_REI_NOTIFY_DT <> reins_notified_date)\n\t        or (ltrim(rtrim(CLM_METHOD_RPTD)) <> ltrim(rtrim(rpt_method)))\n\t        or (ltrim(rtrim(CLM_HOW_CLM_RPTD)) <> ltrim(rtrim(how_claim_rpted)))\n\t        or (ltrim(rtrim(CLM_VIOL_CIT_DESC)) <> ltrim(rtrim(claim_voilation_citation_descript)))\n\t        or (ltrim(rtrim(CON_OCCURRENCE_NBR)) <> ltrim(rtrim(claim_occurrence_num)))\n\t        or (ltrim(rtrim(CLM_CATASTROPHE_CODE)) <> ltrim(rtrim(claim_cat_code)))\n\t        or (ltrim(rtrim(TCC_COMMENT_TXT)) <> ltrim(rtrim(loss_loc_addr)))\n\t        or (COC_START_DT <> claim_cat_start_date)\n\t        or (COC_END_DT <> claim_cat_end_date)\n\t        or (CLM_CREATE_TS <> s3p_claim_created_date)\n\t        or (ltrim(rtrim(LOSS_DESCRIPTION)) <> ltrim(rtrim(claim_loss_descript)))\n\t        or (ltrim(rtrim(CLM_AT_FAULT_CD)) <> ltrim(rtrim(claim_insd_at_fault_code)))\n\t        or (CLM_DRIVER_NBR <> claim_insd_drvr_num)\n\t        or (ltrim(rtrim(CLM_DRV_SAME_IND)) <> ltrim(rtrim(claim_insd_drvr_ind)))\n\t        or (LOG_NOTE_LAST_ACTIVITY_DATE <> claim_log_note_last_act_date)\n\t        or (claim_rep_full_name_out <> next_diary_date_rep)\n\t        or (CLAIM_NEXT_DIARY_DATE <> next_diary_date)\n\t        or (ltrim(rtrim(OFFSET_ONSET_INDICATOR)) <> ltrim(rtrim(offset_onset_ind)))\n\t        or (CON_pol_key_ak_id <> pol_key_ak_id)\n\t        or (ltrim(rtrim(ipfcgp_claim_status)) <> ltrim(rtrim(claim_occurrence_status_code)))\n\t        or (ltrim(rtrim(ipfcgp_notice_claim_ind)) <> ltrim(rtrim(notice_claim_ind)))\n\t        or reported_date <> source_claim_rpted_date,\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(\n\t    v_Changed_Flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date,\n\tEXP_Lkp_Values.logical_flag,\n\tEXP_Lkp_Values.CON_POLICY_KEY,\n\t0 AS err_flag,\n\tEXP_Lkp_Values.ipfcgp_claim_status,\n\tEXP_Lkp_Values.ipfcgp_notice_claim_ind,\n\tLKP_Claim_Occurrence.source_claim_rpted_date,\n\t'N/A' AS Default_NA,\n\tEXP_Lkp_Values.claim_rep_full_name_out,\n\tEXP_Lkp_Values.SupStateID,\n\tLKP_Sup_Claim_Insured_At_Fault_Code.sup_claim_insd_at_fault_code_id AS in_sup_claim_insd_at_fault_code_id,\n\t-- *INF*: IIF(ISNULL(in_sup_claim_insd_at_fault_code_id),-1, in_sup_claim_insd_at_fault_code_id)\n\tIFF(in_sup_claim_insd_at_fault_code_id IS NULL, - 1, in_sup_claim_insd_at_fault_code_id) AS sup_claim_insd_at_fault_code_id\n\tFROM EXP_Lkp_Values\n\tLEFT JOIN LKP_Claim_Occurrence\n\tON LKP_Claim_Occurrence.claim_occurrence_key = EXP_Lkp_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Sup_Claim_Insured_At_Fault_Code\n\tON LKP_Sup_Claim_Insured_At_Fault_Code.claim_insd_at_fault_code = EXP_Lkp_Values.o_CLM_AT_FAULT_CD\n),\nFIL_Insert AS (\n\tSELECT\n\tLKP_claim_occurrence_ak_id, \n\tCLM_CLAIM_NBR, \n\tCLM_CSR_CLAIM_NBR, \n\tCLM_POSTAL_CD, \n\tCLM_DISCOVERY_DT, \n\tCLM_LOSS_DT, \n\tCLM_LOSS_CITY, \n\tCLM_LOSS_COUNTY, \n\tCLM_LOSS_STATE_CD, \n\tCLM_TYPE_CD, \n\tCLM_REI_NOTIFY_DT, \n\tCLM_METHOD_RPTD, \n\tCLM_HOW_CLM_RPTD, \n\tCLM_VIOL_CIT_DESC, \n\tCON_OCCURRENCE_NBR, \n\tCLM_CATASTROPHE_CODE, \n\tTCC_COMMENT_TXT, \n\tCOC_START_DT, \n\tCOC_END_DT, \n\tCON_pol_key_ak_id, \n\tCrrnt_Snpsht_Flag, \n\tSOURCE_SYSTEM_ID, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tCreated_Date, \n\tModified_Date, \n\tChanged_Flag, \n\tCLM_STATUS_CD, \n\tCLM_CREATE_TS, \n\tLOSS_DESCRIPTION, \n\tCLM_AT_FAULT_CD, \n\tCLM_DRIVER_NBR, \n\tCLM_DRV_SAME_IND, \n\tOFFSET_ONSET_INDICATOR, \n\tLOG_NOTE_LAST_ACTIVITY_DATE, \n\tCLAIM_NEXT_DIARY_DATE, \n\tclaim_rep_full_name_out, \n\tCLM_NOT_CLAIM_IND, \n\tlogical_flag, \n\tCON_POLICY_KEY, \n\terr_flag, \n\tipfcgp_claim_status, \n\tipfcgp_notice_claim_ind, \n\treported_date, \n\tDefault_NA, \n\tSupStateID, \n\tsup_claim_insd_at_fault_code_id\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_claim_occurrence AS (\n\tCREATE SEQUENCE SEQ_claim_occurrence\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tLKP_claim_occurrence_ak_id,\n\t-- *INF*: IIF(Changed_Flag='NEW',\r\n\t-- NEXTVAL,\r\n\t-- LKP_claim_occurrence_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, LKP_claim_occurrence_ak_id) AS Out_claim_occurrence_ak_id,\n\tCLM_CLAIM_NBR,\n\tCLM_CSR_CLAIM_NBR,\n\tCLM_POSTAL_CD,\n\tCLM_DISCOVERY_DT,\n\tCLM_LOSS_DT,\n\tCLM_LOSS_CITY,\n\tCLM_LOSS_COUNTY,\n\tCLM_LOSS_STATE_CD,\n\tCLM_TYPE_CD,\n\tCLM_REI_NOTIFY_DT,\n\tCLM_METHOD_RPTD,\n\tCLM_HOW_CLM_RPTD,\n\tCLM_VIOL_CIT_DESC,\n\tSOURCE_SYSTEM_ID,\n\tCON_OCCURRENCE_NBR,\n\tCLM_CATASTROPHE_CODE,\n\tTCC_COMMENT_TXT,\n\tCOC_START_DT,\n\tCOC_END_DT,\n\tCON_pol_key_ak_id,\n\tCrrnt_Snpsht_Flag,\n\tAudit_Id,\n\tEff_From_Date,\n\tEff_To_Date,\n\tCreated_Date,\n\tModified_Date,\n\tChanged_Flag,\n\tCLM_STATUS_CD,\n\tCLM_CREATE_TS,\n\tLOSS_DESCRIPTION,\n\tCLM_AT_FAULT_CD,\n\tCLM_DRIVER_NBR,\n\tCLM_DRV_SAME_IND,\n\tOFFSET_ONSET_INDICATOR,\n\tLOG_NOTE_LAST_ACTIVITY_DATE,\n\tCLAIM_NEXT_DIARY_DATE,\n\tclaim_rep_full_name_out,\n\tCLM_NOT_CLAIM_IND,\n\tlogical_flag,\n\tCON_POLICY_KEY,\n\terr_flag,\n\tipfcgp_claim_status,\n\tipfcgp_notice_claim_ind,\n\treported_date,\n\tDefault_NA,\n\tSEQ_claim_occurrence.NEXTVAL,\n\tSupStateID,\n\tsup_claim_insd_at_fault_code_id,\n\t'N/A' AS ClaimRelationshipKey\n\tFROM FIL_Insert\n),\nClaim_Occurrence_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\n\t(claim_occurrence_ak_id, pol_key_ak_id, pol_key, claim_occurrence_key, claim_occurrence_type_code, source_claim_occurrence_status_code, notice_claim_ind, s3p_claim_created_date, source_claim_rpted_date, s3p_claim_updated_date, rpt_method, how_claim_rpted, loss_loc_addr, loss_loc_city, loss_loc_county, loss_loc_state, loss_loc_zip, claim_loss_date, claim_discovery_date, claim_cat_code, claim_cat_start_date, claim_cat_end_date, s3p_claim_num, reins_notified_date, claim_occurrence_num, claim_voilation_citation_descript, claim_loss_descript, claim_insd_at_fault_code, claim_insd_driver_num, claim_insd_driver_ind, claim_log_note_last_act_date, err_flag_bal_txn, next_diary_date, next_diary_date_rep, offset_onset_ind, err_flag_bal_reins, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_created_by_key, wc_cat_code, SupStateId, SupClaimInsuredAtFaultCodeId, PrimaryWorkGroup, SecondaryWorkGroup, ClaimRelationshipKey)\n\tSELECT \n\tEXP_Determine_AK.Out_claim_occurrence_ak_id AS CLAIM_OCCURRENCE_AK_ID, \n\tEXP_Determine_AK.CON_pol_key_ak_id AS POL_KEY_AK_ID, \n\tEXP_Determine_AK.CON_POLICY_KEY AS POL_KEY, \n\tEXP_Determine_AK.CLM_CLAIM_NBR AS CLAIM_OCCURRENCE_KEY, \n\tEXP_Determine_AK.CLM_TYPE_CD AS CLAIM_OCCURRENCE_TYPE_CODE, \n\tEXP_Determine_AK.ipfcgp_claim_status AS SOURCE_CLAIM_OCCURRENCE_STATUS_CODE, \n\tEXP_Determine_AK.ipfcgp_notice_claim_ind AS NOTICE_CLAIM_IND, \n\tEXP_Determine_AK.CLM_CREATE_TS AS S3P_CLAIM_CREATED_DATE, \n\tEXP_Determine_AK.reported_date AS SOURCE_CLAIM_RPTED_DATE, \n\tEXP_Determine_AK.CLM_CREATE_TS AS S3P_CLAIM_UPDATED_DATE, \n\tEXP_Determine_AK.CLM_METHOD_RPTD AS RPT_METHOD, \n\tEXP_Determine_AK.CLM_HOW_CLM_RPTD AS HOW_CLAIM_RPTED, \n\tEXP_Determine_AK.TCC_COMMENT_TXT AS LOSS_LOC_ADDR, \n\tEXP_Determine_AK.CLM_LOSS_CITY AS LOSS_LOC_CITY, \n\tEXP_Determine_AK.CLM_LOSS_COUNTY AS LOSS_LOC_COUNTY, \n\tEXP_Determine_AK.CLM_LOSS_STATE_CD AS LOSS_LOC_STATE, \n\tEXP_Determine_AK.CLM_POSTAL_CD AS LOSS_LOC_ZIP, \n\tEXP_Determine_AK.CLM_LOSS_DT AS CLAIM_LOSS_DATE, \n\tEXP_Determine_AK.CLM_DISCOVERY_DT AS CLAIM_DISCOVERY_DATE, \n\tEXP_Determine_AK.CLM_CATASTROPHE_CODE AS CLAIM_CAT_CODE, \n\tEXP_Determine_AK.COC_START_DT AS CLAIM_CAT_START_DATE, \n\tEXP_Determine_AK.COC_END_DT AS CLAIM_CAT_END_DATE, \n\tEXP_Determine_AK.CLM_CSR_CLAIM_NBR AS S3P_CLAIM_NUM, \n\tEXP_Determine_AK.CLM_REI_NOTIFY_DT AS REINS_NOTIFIED_DATE, \n\tFIL_Insert.CON_OCCURRENCE_NBR AS CLAIM_OCCURRENCE_NUM, \n\tEXP_Determine_AK.CLM_VIOL_CIT_DESC AS CLAIM_VOILATION_CITATION_DESCRIPT, \n\tEXP_Determine_AK.LOSS_DESCRIPTION AS CLAIM_LOSS_DESCRIPT, \n\tEXP_Determine_AK.CLM_AT_FAULT_CD AS CLAIM_INSD_AT_FAULT_CODE, \n\tEXP_Determine_AK.CLM_DRIVER_NBR AS CLAIM_INSD_DRIVER_NUM, \n\tEXP_Determine_AK.CLM_DRV_SAME_IND AS CLAIM_INSD_DRIVER_IND, \n\tEXP_Determine_AK.LOG_NOTE_LAST_ACTIVITY_DATE AS CLAIM_LOG_NOTE_LAST_ACT_DATE, \n\tEXP_Determine_AK.err_flag AS ERR_FLAG_BAL_TXN, \n\tEXP_Determine_AK.CLAIM_NEXT_DIARY_DATE AS NEXT_DIARY_DATE, \n\tEXP_Determine_AK.claim_rep_full_name_out AS NEXT_DIARY_DATE_REP, \n\tEXP_Determine_AK.OFFSET_ONSET_INDICATOR AS OFFSET_ONSET_IND, \n\tEXP_Determine_AK.err_flag AS ERR_FLAG_BAL_REINS, \n\tEXP_Determine_AK.LOGICAL_FLAG, \n\tEXP_Determine_AK.Crrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tEXP_Determine_AK.Audit_Id AS AUDIT_ID, \n\tEXP_Determine_AK.Eff_From_Date AS EFF_FROM_DATE, \n\tEXP_Determine_AK.Eff_To_Date AS EFF_TO_DATE, \n\tEXP_Determine_AK.SOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tEXP_Determine_AK.Created_Date AS CREATED_DATE, \n\tEXP_Determine_AK.Modified_Date AS MODIFIED_DATE, \n\tEXP_Determine_AK.Default_NA AS CLAIM_CREATED_BY_KEY, \n\tEXP_Determine_AK.Default_NA AS WC_CAT_CODE, \n\tEXP_Determine_AK.SupStateID AS SUPSTATEID, \n\tEXP_Determine_AK.sup_claim_insd_at_fault_code_id AS SUPCLAIMINSUREDATFAULTCODEID, \n\tEXP_Determine_AK.Default_NA AS PRIMARYWORKGROUP, \n\tEXP_Determine_AK.Default_NA AS SECONDARYWORKGROUP, \n\tEXP_Determine_AK.CLAIMRELATIONSHIPKEY\n\tFROM EXP_Determine_AK\n),\nSQ_Claim_Occurrence AS (\n\tSELECT \r\n\t\ta.claim_occurrence_id, \r\n\t\ta.claim_occurrence_key, \r\n\t\ta.eff_from_date, \r\n\t\ta.eff_to_date \r\n\tFROM\r\n\t \t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND \r\n\t EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence b\r\n\t\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.claim_occurrence_key = b.claim_occurrence_key\r\n\t\t\tGROUP BY claim_occurrence_key\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY claim_occurrence_key, eff_from_date  DESC\n),\nEXP_Lag_Eff_From_Date AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_key,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_occurrence_key = v_PREV_ROW_occurrence_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    claim_occurrence_key = v_PREV_ROW_occurrence_key, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tclaim_occurrence_key AS v_PREV_ROW_occurrence_key,\n\tsysdate AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_Claim_Occurrence\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tclaim_occurrence_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_Eff_From_Date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_Claim_Occurrence AS (\n\tSELECT\n\tclaim_occurrence_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nClaim_Occurrence_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence AS T\n\tUSING UPD_Claim_Occurrence AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),\nSQ_TaskStage AS (\n\tselect distinct ClaimId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage\r\n\twhere SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tand (CreatedDate > '@{pipeline().parameters.SELECTION_START_TS}' or ModifiedDate > '@{pipeline().parameters.SELECTION_START_TS}')\r\n\tand not exists (select 1 \r\n\t\t\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_42gp_stage \r\n\t\t\t\t\twhere pif_symbol + pif_policy_number + pif_module + right('00' + LTRIM(STR(ipfcgp_month_of_loss)), 2) + right('00' + LTRIM(STR(ipfcgp_day_of_loss)), 2) + ltrim(str(ipfcgp_year_of_loss)) + ipfcgp_loss_occurence = ClaimId\r\n\t\t\t\t\tand logical_flag in ('0','1'))\n),\nEXP_Collect AS (\n\tSELECT\n\tClaimId,\n\tSYSDATE AS OUT_modified_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS OUT_source_sys_id,\n\t'T' AS OUT_crrnt_snpsht_flag\n\tFROM SQ_TaskStage\n),\nmplt_claim_occurrence_next_diary1 AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_Task_NextDueDiary_ByClaim AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect MIN(T.DueDate) as DueDate, T.ClaimId as ClaimId \r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T \r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tgroup by T.ClaimId\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId ORDER BY DueDate DESC) = 1\n\t),\n\tLKP_Task_DiaryByClaimAndDueDate AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tAssignedUserName,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect T.DueDate as DueDate, T.AssignedUserName as AssignedUserName, T.ClaimId as ClaimId\r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T\r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId,DueDate ORDER BY DueDate DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tDueDate, \n\t\tAssignedUserName\n\t\tFROM LKP_Task_DiaryByClaimAndDueDate\n\t),\n),\nEXP_Default_Values AS (\n\tSELECT\n\tDueDate AS IN_DueDate,\n\t-- *INF*: IIF(ISNULL(IN_DueDate),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- IN_DueDate\r\n\t-- )\n\tIFF(IN_DueDate IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_DueDate) AS OUT_DueDate,\n\tAssignedUserName AS IN_AssignedUserName,\n\t-- *INF*: IIF(ISNULL(IN_AssignedUserName),\r\n\t-- 'N/A',\r\n\t-- IN_AssignedUserName)\n\tIFF(IN_AssignedUserName IS NULL, 'N/A', IN_AssignedUserName) AS OUT_AssignedUserName\n\tFROM mplt_claim_occurrence_next_diary1\n),\nLKP_claim_occurrence_active_record AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_ak_id,\n\tpol_key_ak_id,\n\tpol_key,\n\tclaim_occurrence_key,\n\tclaim_occurrence_type_code,\n\tsource_claim_occurrence_status_code,\n\tnotice_claim_ind,\n\ts3p_claim_created_date,\n\tsource_claim_rpted_date,\n\ts3p_claim_updated_date,\n\trpt_method,\n\thow_claim_rpted,\n\tloss_loc_addr,\n\tloss_loc_city,\n\tloss_loc_county,\n\tloss_loc_state,\n\tloss_loc_zip,\n\tclaim_loss_date,\n\tclaim_discovery_date,\n\tclaim_cat_code,\n\tclaim_cat_start_date,\n\tclaim_cat_end_date,\n\ts3p_claim_num,\n\treins_notified_date,\n\tclaim_occurrence_num,\n\tclaim_voilation_citation_descript,\n\tclaim_loss_descript,\n\tclaim_insd_at_fault_code,\n\tclaim_insd_driver_num,\n\tclaim_insd_driver_ind,\n\tclaim_log_note_last_act_date,\n\terr_flag_bal_txn,\n\tnext_diary_date,\n\tnext_diary_date_rep,\n\toffset_onset_ind,\n\terr_flag_bal_reins,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tclaim_created_by_key,\n\twc_cat_code,\n\tSupStateId,\n\tSupClaimInsuredAtFaultCodeId,\n\tPrimaryWorkGroup,\n\tSecondaryWorkGroup\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_id,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\tpol_key_ak_id,\n\t\t\tpol_key,\n\t\t\tclaim_occurrence_key,\n\t\t\tclaim_occurrence_type_code,\n\t\t\tsource_claim_occurrence_status_code,\n\t\t\tnotice_claim_ind,\n\t\t\ts3p_claim_created_date,\n\t\t\tsource_claim_rpted_date,\n\t\t\ts3p_claim_updated_date,\n\t\t\trpt_method,\n\t\t\thow_claim_rpted,\n\t\t\tloss_loc_addr,\n\t\t\tloss_loc_city,\n\t\t\tloss_loc_county,\n\t\t\tloss_loc_state,\n\t\t\tloss_loc_zip,\n\t\t\tclaim_loss_date,\n\t\t\tclaim_discovery_date,\n\t\t\tclaim_cat_code,\n\t\t\tclaim_cat_start_date,\n\t\t\tclaim_cat_end_date,\n\t\t\ts3p_claim_num,\n\t\t\treins_notified_date,\n\t\t\tclaim_occurrence_num,\n\t\t\tclaim_voilation_citation_descript,\n\t\t\tclaim_loss_descript,\n\t\t\tclaim_insd_at_fault_code,\n\t\t\tclaim_insd_driver_num,\n\t\t\tclaim_insd_driver_ind,\n\t\t\tclaim_log_note_last_act_date,\n\t\t\terr_flag_bal_txn,\n\t\t\tnext_diary_date,\n\t\t\tnext_diary_date_rep,\n\t\t\toffset_onset_ind,\n\t\t\terr_flag_bal_reins,\n\t\t\tlogical_flag,\n\t\t\tcrrnt_snpsht_flag,\n\t\t\taudit_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date,\n\t\t\tsource_sys_id,\n\t\t\tcreated_date,\n\t\t\tmodified_date,\n\t\t\tclaim_created_by_key,\n\t\t\twc_cat_code,\n\t\t\tSupStateId,\n\t\t\tSupClaimInsuredAtFaultCodeId,\n\t\t\tPrimaryWorkGroup,\n\t\t\tSecondaryWorkGroup\n\t\tFROM claim_occurrence\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key,source_sys_id,crrnt_snpsht_flag ORDER BY claim_occurrence_id) = 1\n),\nUPD_claim_occurrence_diary AS (\n\tSELECT\n\tLKP_claim_occurrence_active_record.claim_occurrence_id, \n\tEXP_Default_Values.OUT_DueDate AS DueDate, \n\tEXP_Default_Values.OUT_AssignedUserName AS AssignedUserName, \n\tEXP_Collect.OUT_modified_date AS modified_date\n\tFROM EXP_Collect\n\t -- Manually join with EXP_Default_Values\n\tLEFT JOIN LKP_claim_occurrence_active_record\n\tON LKP_claim_occurrence_active_record.claim_occurrence_key = EXP_Collect.ClaimId AND LKP_claim_occurrence_active_record.source_sys_id = EXP_Collect.OUT_source_sys_id AND LKP_claim_occurrence_active_record.crrnt_snpsht_flag = EXP_Collect.OUT_crrnt_snpsht_flag\n),\nclaim_occurrence_update_diary AS (\n\tMERGE INTO claim_occurrence AS T\n\tUSING UPD_claim_occurrence_diary AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.next_diary_date = S.DueDate, T.next_diary_date_rep = S.AssignedUserName, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}