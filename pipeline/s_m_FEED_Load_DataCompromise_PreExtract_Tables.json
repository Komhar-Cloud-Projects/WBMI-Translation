{
    "name": "s_m_FEED_Load_DataCompromise_PreExtract_Tables",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_DataCompromise_PreExtract_Tables",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkDataCompromise AS (\n\tSELECT WorkDataCompromise.AuditID, WorkDataCompromise.RunDate, WorkDataCompromise.PolKey, WorkDataCompromise.Company, WorkDataCompromise.ProductCode, WorkDataCompromise.ContractNumber, WorkDataCompromise.NameOfInsured, WorkDataCompromise.MailingAddressStreetName, WorkDataCompromise.MailingAddressCity, WorkDataCompromise.MailingAddressState, WorkDataCompromise.MailingAddressZipCode, WorkDataCompromise.TotalPackageGrossPremium, WorkDataCompromise.TotalPropertyGrossPremium, WorkDataCompromise.FirstPartyLimit, WorkDataCompromise.DeductibleAmount, WorkDataCompromise.OccupancyCode, WorkDataCompromise.PolicyTotalInsuredValue, WorkDataCompromise.PreviousPolicyNumber, WorkDataCompromise.AgencyCode, WorkDataCompromise.BranchCode, WorkDataCompromise.ThirdPartyIndicator, WorkDataCompromise.CoverageEffectiveDate, WorkDataCompromise.CoverageExpirationDate, WorkDataCompromise.CoverageGrossPremium, WorkDataCompromise.CoverageNetPremium \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDataCompromise \r\n\t/*\r\n\tinner join\r\n\t@{pipeline().parameters.SOURCE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton (WorkDataCompromise.RatingCoverageID= RC.RatingCoverageID)\r\n\tleft join\r\n\t@{pipeline().parameters.SOURCE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkEarnedPremiumCoverageMonthly WEP\r\n\ton (RC.RatingCoverageAKID=WEP.RatingCoverageAKID\r\n\tand  WorkDataCompromise.RunDate = WEP.RunDate )\r\n\t*/\r\n\tWHERE\r\n\t--WEP.StatisticalCoverageCancellationDate is null\r\n\t--AND\r\n\tconvert(date,WorkDataCompromise.CoverageEffectiveDate)<=@{pipeline().parameters.RUNDATE}\r\n\tAND \r\n\tconvert(date,WorkDataCompromise.CoverageExpirationDate)>=@{pipeline().parameters.RUNDATE}\r\n\tAND\r\n\tconvert(date,WorkDataCompromise.PolicyCancellationdate)>@{pipeline().parameters.RUNDATE}\n),\nAGG_PolicyRecord AS (\n\tSELECT\n\tAuditID,\n\t'DCT' AS SourceSystemID,\n\tSysdate AS CreatedDate,\n\tSysdate AS ModifiedDate,\n\tRunDate,\n\tPolKey,\n\tCompany,\n\tProductCode,\n\tContractNumber,\n\t-- *INF*: SUBSTR(PolKey,1,10)\n\tSUBSTR(PolKey, 1, 10) AS PolicyNumber,\n\tCoverageEffectiveDate AS PolicyEffectiveDate,\n\tCoverageExpirationDate AS PolicyExpirationDate,\n\tNameOfInsured,\n\tMailingAddressStreetName,\n\tMailingAddressCity,\n\tMailingAddressState,\n\tMailingAddressZipCode,\n\tTotalPackageGrossPremium,\n\tTotalPropertyGrossPremium,\n\t-- *INF*: SUM(CoverageNetPremium)\r\n\t-- --incase of cancellation the premium reported should be net premium\r\n\t-- \n\tSUM(CoverageNetPremium) AS GrossPremium,\n\t-- *INF*: --Fix for EDWP-3822\r\n\t-- Round(0.7* Sum(CoverageGrossPremium),2)\r\n\t-- --Round(0.3* Sum(CoverageGrossPremium),2)\n\tRound(0.7 * Sum(CoverageGrossPremium), 2) AS NetPremium,\n\tFirstPartyLimit,\n\tDeductibleAmount,\n\tOccupancyCode,\n\tPolicyTotalInsuredValue,\n\tPreviousPolicyNumber,\n\tAgencyCode,\n\tBranchCode,\n\tThirdPartyIndicator,\n\tCoverageGrossPremium,\n\tCoverageNetPremium\n\tFROM SQ_WorkDataCompromise\n\tGROUP BY PolKey\n),\nEXP_PolicyRecord AS (\n\tSELECT\n\tAuditID,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tRunDate,\n\tCompany,\n\tProductCode,\n\tContractNumber,\n\tPolicyNumber,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tNameOfInsured,\n\tMailingAddressStreetName,\n\tMailingAddressCity,\n\tMailingAddressState,\n\tMailingAddressZipCode,\n\tTotalPackageGrossPremium,\n\tTotalPropertyGrossPremium,\n\tGrossPremium,\n\tNetPremium,\n\tFirstPartyLimit,\n\tDeductibleAmount,\n\tOccupancyCode,\n\tPolicyTotalInsuredValue,\n\tPreviousPolicyNumber,\n\tAgencyCode,\n\tBranchCode,\n\tThirdPartyIndicator\n\tFROM AGG_PolicyRecord\n),\nFILTRANS AS (\n\tSELECT\n\tAuditID, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tRunDate, \n\tCompany, \n\tProductCode, \n\tContractNumber, \n\tPolicyNumber, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate, \n\tNameOfInsured, \n\tMailingAddressStreetName, \n\tMailingAddressCity, \n\tMailingAddressState, \n\tMailingAddressZipCode, \n\tTotalPackageGrossPremium, \n\tTotalPropertyGrossPremium, \n\tGrossPremium, \n\tNetPremium, \n\tFirstPartyLimit, \n\tDeductibleAmount, \n\tOccupancyCode, \n\tPolicyTotalInsuredValue, \n\tPreviousPolicyNumber, \n\tAgencyCode, \n\tBranchCode, \n\tThirdPartyIndicator\n\tFROM EXP_PolicyRecord\n\tWHERE GrossPremium>0\n),\nDataCompromisePolicyRecord AS (\n\tTRUNCATE TABLE DataCompromisePolicyRecord;\n\tINSERT INTO DataCompromisePolicyRecord\n\t(AuditID, SourceSystemID, CreatedDate, ModifiedDate, RunDate, Company, ProductCode, ContractNumber, PolicyNumber, PolicyEffectiveDate, PolicyExpirationDate, NameOfInsured, MailingAddressStreetName, MailingAddressCity, MailingAddressState, MailingAddressZipCode, TotalPackageGrossPremium, TotalPropertyGrossPremium, GrossPremium, NetPremium, FirstPartyLimit, DeductibleAmount, OccupancyCode, PolicyTotalInsuredValue, PreviousPolicyNumber, AgencyCode, BranchCode, ThirdPartyIndicator)\n\tSELECT \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tRUNDATE, \n\tCOMPANY, \n\tPRODUCTCODE, \n\tCONTRACTNUMBER, \n\tPOLICYNUMBER, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYEXPIRATIONDATE, \n\tNAMEOFINSURED, \n\tMAILINGADDRESSSTREETNAME, \n\tMAILINGADDRESSCITY, \n\tMAILINGADDRESSSTATE, \n\tMAILINGADDRESSZIPCODE, \n\tTOTALPACKAGEGROSSPREMIUM, \n\tTOTALPROPERTYGROSSPREMIUM, \n\tGROSSPREMIUM, \n\tNETPREMIUM, \n\tFIRSTPARTYLIMIT, \n\tDEDUCTIBLEAMOUNT, \n\tOCCUPANCYCODE, \n\tPOLICYTOTALINSUREDVALUE, \n\tPREVIOUSPOLICYNUMBER, \n\tAGENCYCODE, \n\tBRANCHCODE, \n\tTHIRDPARTYINDICATOR\n\tFROM FILTRANS\n),\nSQ_PaymentRecordTable AS (\n\tSELECT\n\t\tWorkDataCompromiseId,\n\t\tAuditID,\n\t\tSourceSystemID,\n\t\tCreatedDate,\n\t\tModifiedDate,\n\t\tPolicyID,\n\t\tRiskLocationID,\n\t\tPolicyCoverageID,\n\t\tRatingCoverageID,\n\t\tPremiumTransactionID,\n\t\tPremiumMasterCalculationID,\n\t\tRunDate,\n\t\tContractCustID,\n\t\tContractCustAddrID,\n\t\tAgencyID,\n\t\tPolKey,\n\t\tCompany,\n\t\tProductCode,\n\t\tContractNumber,\n\t\tPolicyEffectiveDate,\n\t\tPolicyExpirationDate,\n\t\tNameOfInsured,\n\t\tMailingAddressStreetName,\n\t\tMailingAddressCity,\n\t\tMailingAddressState,\n\t\tMailingAddressZipCode,\n\t\tTotalPackageGrossPremium,\n\t\tTotalPropertyGrossPremium,\n\t\tFirstPartyLimit,\n\t\tDeductibleAmount,\n\t\tOccupancyCode,\n\t\tPolicyTotalInsuredValue,\n\t\tPreviousPolicyNumber,\n\t\tAgencyCode,\n\t\tBranchCode,\n\t\tThirdPartyIndicator,\n\t\tTransactionCode,\n\t\tTransactionEffectiveDate,\n\t\tCoverageEffectiveDate,\n\t\tCoverageExpirationDate,\n\t\tCoverageGrossPremium,\n\t\tCoverageNetPremium,\n\t\tProgramID,\n\t\tPolicyCancellationDate\n\tFROM WorkDataCompromise\n\tWHERE convert(date,WorkDataCompromise.RunDate)=@{pipeline().parameters.RUNDATE}\n),\nEXP_PaymentRecord AS (\n\tSELECT\n\tAuditID,\n\t'DCT' AS SourceSystemID,\n\tSysdate AS CreatedDate,\n\tSysdate AS ModifiedDate,\n\tPremiumMasterCalculationID,\n\tRunDate,\n\tProductCode,\n\tPolKey,\n\tCompany,\n\t-- *INF*: SUBSTR(PolKey,1,10)\n\tSUBSTR(PolKey, 1, 10) AS PolicyNumber,\n\tTransactionCode,\n\tTransactionEffectiveDate,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tCoverageGrossPremium,\n\tCoverageNetPremium,\n\t-- *INF*: CoverageNetPremium\r\n\t-- --incase of cancellation the premium reported should be net premium\r\n\t-- --iif(TransactionCode='03',CoverageNetPremium,CoverageGrossPremium)\r\n\t-- \n\tCoverageNetPremium AS v_CoverageGrossPremium,\n\tv_CoverageGrossPremium AS out_CoverageGrossPremium,\n\t-- *INF*: --Fix for EDWP-3822\r\n\t-- ROUND(0.7*v_CoverageGrossPremium,2)\r\n\t-- --ROUND(0.3*CoverageNetPremium,2)\n\tROUND(0.7 * v_CoverageGrossPremium, 2) AS out_CoverageNetPremium,\n\tPreviousPolicyNumber,\n\tProgramID,\n\tNameOfInsured,\n\tContractNumber\n\tFROM SQ_PaymentRecordTable\n),\nDataCompromisePaymentBordereauxRecord AS (\n\tTRUNCATE TABLE DataCompromisePaymentBordereauxRecord;\n\tINSERT INTO DataCompromisePaymentBordereauxRecord\n\t(AuditID, SourceSystemID, CreatedDate, ModifiedDate, PremiumMasterCalculationID, RunDate, ProductCode, Company, PolicyNumber, TransactionCode, TransactionEffectiveDate, CoverageEffectiveDate, CoverageExpirationDate, CoverageGrossPremium, CoverageNetPremium, PreviousPolicyNumber, ProgramID, NameOfInsured, ContractNumber)\n\tSELECT \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPREMIUMMASTERCALCULATIONID, \n\tRUNDATE, \n\tPRODUCTCODE, \n\tCOMPANY, \n\tPOLICYNUMBER, \n\tTRANSACTIONCODE, \n\tTRANSACTIONEFFECTIVEDATE, \n\tCOVERAGEEFFECTIVEDATE, \n\tCOVERAGEEXPIRATIONDATE, \n\tout_CoverageGrossPremium AS COVERAGEGROSSPREMIUM, \n\tout_CoverageNetPremium AS COVERAGENETPREMIUM, \n\tPREVIOUSPOLICYNUMBER, \n\tPROGRAMID, \n\tNAMEOFINSURED, \n\tCONTRACTNUMBER\n\tFROM EXP_PaymentRecord\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "RUNDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}