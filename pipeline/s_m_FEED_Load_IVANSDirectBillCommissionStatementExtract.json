{
    "name": "s_m_FEED_Load_IVANSDirectBillCommissionStatementExtract",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_IVANSDirectBillCommissionStatementExtract",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_AgencyODS AS (\n\tselect LTRIM(RTRIM(agency.AgencyCode)) as AgencyCode,\r\n\tAssignedStateCode as AssignedStateCode,\r\n\tPayCode as PayCode\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.VWAgency agency\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyPayCode apc\r\n\ton agency.AgencyCode=apc.AgencyCode\n),\nSQ_VWDCBILDirectBillCommissionStatementDetail AS (\n\tSET QUOTED_IDENTIFIER on\r\n\t\r\n\tselect \r\n\tdbcsd.Insured as Insured,\r\n\t--LTRIM(RTRIM(dbcsd.AccountReference)) as AccountReference, \r\n\tLTRIM(RTRIM(agy.Reference)) as AccountReference, --added it as part of PROD-6520\r\n\t--pt.PolicyReference as PolicyReference,\r\n\tCASE WHEN pt.PolicyIssueSystemCode = 'PMS' THEN convert(xml,pt.PolicyTermExtendedData).value('(/PolicyTermExtendedData/PolicySymbol)[1]', 'nvarchar(10)') + pt.PolicyReference \r\n\t                                         ELSE pt.PolicyReference  END as PolicyReference,\r\n\t\r\n\tpt.PolicyTermEffectiveDate as PolicyTermEffectiveDate,\r\n\tpt.PolicyTermExpirationDate as PolicyTermExpirationDate,\r\n\tISNULL(dbcsd.ItemTierAmount,0) as ItemTierAmount,\r\n\tISNULL(dbcsd.CommissionAuthorizedAmount,0) as CommissionAuthorizedAmount,\r\n\tISNULL(dbcsd.ItemCommissionPercent,0) as ItemCommissionPercent,\r\n\tdbcsd.TransactionTypeCode as TransactionTypeCode,\r\n\tdbcss.StatementBeginDate as StatementBeginDate,\r\n\ta.AccountReference as AccountReference_Account,\r\n\tca.AuthorizationDate as AuthorizationDate,\r\n\tDATEADD(MM,DATEDIFF(MM,0,@{pipeline().parameters.RUNDATE}),-1) as RunDate,\r\n\tpt.PolicyLineOfBusinessCode as PolicyLineOfBusinessCode\r\n\tfrom\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.VWDCBILDirectBillCommissionStatementDetail dbcsd\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBILDirectBillCommissionStatementSummary dbcss\r\n\ton dbcsd.DirectBillCommissionStatementSummaryId=dbcss.DirectBillCommissionStatementSummaryId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agency agy      --added it as part of PROD 6520\r\n\ton dbcss.AgencyReference=agy.AgencyID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBILPolicyTerm pt\r\n\ton dbcsd.PolicyTermId=pt.PolicyTermId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBILAccount a\r\n\ton pt.PrimaryAccountId=a.AccountId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBILCommissionAuthorization ca\r\n\ton ca.CommissionAuthorizationId=dbcsd.CommissionAuthorizationId\r\n\twhere month(dbcss.StatementEndDate)=month(DATEADD(MM,DATEDIFF(MM,0,@{pipeline().parameters.RUNDATE}),-1)) and year(dbcss.StatementEndDate)=year(DATEADD(MM,DATEDIFF(MM,0,@{pipeline().parameters.RUNDATE}),-1)) and (ItemTierAmount<>0 OR AuthorizationTypeCode='MANU')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nJNR_IVANS AS (SELECT\n\tSQ_AgencyODS.AgencyCode, \n\tSQ_AgencyODS.AssignedStateCode, \n\tSQ_AgencyODS.PayCode, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.Insured, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.AccountReference, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.PolicyReference, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.PolicyTermEffectiveDate, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.PolicyTermExpirationDate, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.ItemTierAmount, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.CommissionAuthorizedAmount, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.ItemCommissionPercent, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.TransactionTypeCode, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.StatementBeginDate, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.AccountReference_Account, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.AuthorizationDate, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.RunDate, \n\tSQ_VWDCBILDirectBillCommissionStatementDetail.PolicyLineOfBusinessCode\n\tFROM SQ_AgencyODS\n\tINNER JOIN SQ_VWDCBILDirectBillCommissionStatementDetail\n\tON SQ_VWDCBILDirectBillCommissionStatementDetail.AccountReference = SQ_AgencyODS.AgencyCode\n),\nEXP_Rundate AS (\n\tSELECT\n\tInsured,\n\tAssignedStateCode,\n\t-- *INF*: --SUBSTR(AssignedStateCode,1,2)\r\n\t-- IIF ((AssignedStateCode = 'N/A'), '00', AssignedStateCode)\r\n\t-- \n\tIFF((AssignedStateCode = 'N/A'), '00', AssignedStateCode) AS o_AssignedStateCode,\n\tPayCode,\n\tAccountReference,\n\tPolicyReference,\n\tPolicyTermEffectiveDate,\n\tPolicyTermExpirationDate,\n\tItemTierAmount,\n\tCommissionAuthorizedAmount,\n\tItemCommissionPercent,\n\tTransactionTypeCode,\n\tStatementBeginDate,\n\tAccountReference_Account,\n\tAuthorizationDate,\n\tRunDate,\n\tPolicyLineOfBusinessCode\n\tFROM JNR_IVANS\n),\nEXP_IVANS AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CreatedDate,\n\tRunDate,\n\tInsured,\n\to_AssignedStateCode AS AssignedStateCode,\n\tPayCode,\n\tAccountReference AS i_AccountReference,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(i_AccountReference)),1,2)\n\tSUBSTR(LTRIM(RTRIM(i_AccountReference)), 1, 2) AS AgencyState,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(i_AccountReference)),3,3)\n\tSUBSTR(LTRIM(RTRIM(i_AccountReference)), 3, 3) AS o_AccountReference,\n\t-- *INF*: IIF ((SUBSTR(LTRIM(RTRIM(PolicyReference)),1,2) = 'HH'),\r\n\t--        SUBSTR(LTRIM(RTRIM(PolicyReference)),1,3), '000')\r\n\t-- \r\n\t-- --'000'\n\tIFF(\n\t    (SUBSTR(LTRIM(RTRIM(PolicyReference)), 1, 2) = 'HH'),\n\t    SUBSTR(LTRIM(RTRIM(PolicyReference)), 1, 3),\n\t    '000'\n\t) AS o_PolicySymbol,\n\tPolicyReference,\n\t-- *INF*: IIF ((SUBSTR(LTRIM(RTRIM(PolicyReference)),1,2) = 'HH'),\r\n\t--        SUBSTR(LTRIM(RTRIM(PolicyReference)),4,7),\r\n\t--        SUBSTR(LTRIM(RTRIM(PolicyReference)),1,7))\n\tIFF(\n\t    (SUBSTR(LTRIM(RTRIM(PolicyReference)), 1, 2) = 'HH'),\n\t    SUBSTR(LTRIM(RTRIM(PolicyReference)), 4, 7),\n\t    SUBSTR(LTRIM(RTRIM(PolicyReference)), 1, 7)\n\t) AS o_PolicyReference,\n\tPolicyTermEffectiveDate,\n\tPolicyTermExpirationDate,\n\tItemTierAmount,\n\tCommissionAuthorizedAmount,\n\tItemCommissionPercent,\n\tTransactionTypeCode AS i_TransactionTypeCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(i_TransactionTypeCode))='RNEW','R',\r\n\t-- LTRIM(RTRIM(i_TransactionTypeCode))='ENDT','A',\r\n\t-- LTRIM(RTRIM(i_TransactionTypeCode))='WO','UU',\r\n\t-- IN(LTRIM(RTRIM(i_TransactionTypeCode)),'PCAN','FCAN','REIN'),'C',\r\n\t-- LTRIM(RTRIM(i_TransactionTypeCode))='NBUS','N',\r\n\t-- 'UU'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(i_TransactionTypeCode)) = 'RNEW', 'R',\n\t    LTRIM(RTRIM(i_TransactionTypeCode)) = 'ENDT', 'A',\n\t    LTRIM(RTRIM(i_TransactionTypeCode)) = 'WO', 'UU',\n\t    LTRIM(RTRIM(i_TransactionTypeCode)) IN ('PCAN','FCAN','REIN'), 'C',\n\t    LTRIM(RTRIM(i_TransactionTypeCode)) = 'NBUS', 'N',\n\t    'UU'\n\t) AS o_TransactionTypeCode,\n\tStatementBeginDate,\n\tAccountReference_Account,\n\t-- *INF*: SUBSTR(LTRIM(RTRIM(AccountReference_Account)),1,LENGTH(LTRIM(RTRIM(AccountReference_Account)))-2)\n\tSUBSTR(LTRIM(RTRIM(AccountReference_Account)), 1, LENGTH(LTRIM(RTRIM(AccountReference_Account))) - 2) AS o_CustomerNumber,\n\tAuthorizationDate,\n\t-- *INF*: IIF ((i_TransactionTypeCode = 'FAUD' OR i_TransactionTypeCode = 'RAUD') OR  \r\n\t--  (AuthorizationDate > PolicyTermExpirationDate),\r\n\t--  PolicyTermExpirationDate, AuthorizationDate)\r\n\t-- \r\n\t-- --(i_TransactionTypeCode = 'ENDT' AND (AuthorizationDate > --PolicyTermExpirationDate))\r\n\t-- \n\tIFF(\n\t    (i_TransactionTypeCode = 'FAUD'\n\t    or i_TransactionTypeCode = 'RAUD')\n\t    or (AuthorizationDate > PolicyTermExpirationDate),\n\t    PolicyTermExpirationDate,\n\t    AuthorizationDate\n\t) AS o_AuthorizationDate,\n\tPolicyLineOfBusinessCode AS i_PolicyLineOfBusinessCode,\n\t-- *INF*: DECODE(LTRIM(RTRIM(i_PolicyLineOfBusinessCode)),\r\n\t-- 'AUTO','AUTOB',\r\n\t-- 'BOP','BOP',\r\n\t-- 'CODO','CGL',\r\n\t-- 'CRME','CRIM',\r\n\t-- 'EXLI','CGL',\r\n\t-- 'GL','CGL',\r\n\t-- 'GOCH','INMRC',\r\n\t-- 'HOLE','INMRC',\r\n\t-- 'IM','INMRC',\r\n\t-- 'LIAB','CGL',\r\n\t-- 'MEPL','CGL',\r\n\t-- 'NPDO','CGL',\r\n\t-- 'PACK','CPKGE',\r\n\t-- 'HH','PPKGE',\r\n\t-- 'PPKG','PPKGE',\r\n\t-- 'PROP','PROP',\r\n\t-- 'UMBR','CUMBR',\r\n\t-- 'WC','WORK',\r\n\t-- 'BND','BONDS',\r\n\t-- 'EVEN','CGL',\r\n\t-- 'TBD')\n\tDECODE(\n\t    LTRIM(RTRIM(i_PolicyLineOfBusinessCode)),\n\t    'AUTO', 'AUTOB',\n\t    'BOP', 'BOP',\n\t    'CODO', 'CGL',\n\t    'CRME', 'CRIM',\n\t    'EXLI', 'CGL',\n\t    'GL', 'CGL',\n\t    'GOCH', 'INMRC',\n\t    'HOLE', 'INMRC',\n\t    'IM', 'INMRC',\n\t    'LIAB', 'CGL',\n\t    'MEPL', 'CGL',\n\t    'NPDO', 'CGL',\n\t    'PACK', 'CPKGE',\n\t    'HH', 'PPKGE',\n\t    'PPKG', 'PPKGE',\n\t    'PROP', 'PROP',\n\t    'UMBR', 'CUMBR',\n\t    'WC', 'WORK',\n\t    'BND', 'BONDS',\n\t    'EVEN', 'CGL',\n\t    'TBD'\n\t) AS o_LineOfBusinessCode\n\tFROM EXP_Rundate\n),\nIVANSDirectBillCommissionStatementExtract AS (\n\n\t------------ PRE SQL ----------\n\tdelete from @{pipeline().parameters.TARGET_TABLE_OWNER}.IVANSDirectBillCommissionStatementExtract where RunDate=DATEADD(MM,DATEDIFF(MM,0,@{pipeline().parameters.RUNDATE}),-1)\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.IVANSDirectBillCommissionStatementExtract\n\t(AuditId, CreatedDate, RunDate, InsuredName, AgencyState, AgencyPayCode, AgencyNumber, PolicySymbol, PolicyNumber, PolicyEffectiveDate, PolicyExpirationDate, Premium, CommissionAmount, CommissionRate, TransactionCode, AccountDate, CustomerNumber, TransactionDate, LineOfBusinessCode)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tRUNDATE, \n\tInsured AS INSUREDNAME, \n\tAGENCYSTATE, \n\tPayCode AS AGENCYPAYCODE, \n\to_AccountReference AS AGENCYNUMBER, \n\to_PolicySymbol AS POLICYSYMBOL, \n\to_PolicyReference AS POLICYNUMBER, \n\tPolicyTermEffectiveDate AS POLICYEFFECTIVEDATE, \n\tPolicyTermExpirationDate AS POLICYEXPIRATIONDATE, \n\tItemTierAmount AS PREMIUM, \n\tCommissionAuthorizedAmount AS COMMISSIONAMOUNT, \n\tItemCommissionPercent AS COMMISSIONRATE, \n\to_TransactionTypeCode AS TRANSACTIONCODE, \n\tStatementBeginDate AS ACCOUNTDATE, \n\to_CustomerNumber AS CUSTOMERNUMBER, \n\to_AuthorizationDate AS TRANSACTIONDATE, \n\to_LineOfBusinessCode AS LINEOFBUSINESSCODE\n\tFROM EXP_IVANS\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "RUNDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "BillingDataServices/"
        },
        "annotations": []
    }
}