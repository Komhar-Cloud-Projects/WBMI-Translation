{
    "name": "s_m_CLM_DW_LOAD_Workers_Comp_Claimant_Work_History_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Workers_Comp_Claimant_Work_History_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_wc_work_history_stage AS (\n\tSELECT\n\t\twc_work_history_id,\n\t\twch_claim_nbr,\n\t\twch_client_id,\n\t\twch_object_seq_nbr,\n\t\twch_create_ts,\n\t\twch_return_dt,\n\t\twch_last_wrk_dt,\n\t\twch_ret_type_cd,\n\t\twch_same_emp_ind,\n\t\twch_update_ts,\n\t\twch_entry_opr_id,\n\t\twch_update_opr_id,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id,\n\t\twrh_restrictions,\n\t\twrh_empr_pd_lit,\n\t\twrh_empr_pd_amt\n\tFROM wc_work_history_stage\n),\nAG_Deduplicate AS (\n\tSELECT\n\twc_work_history_id,\n\twch_claim_nbr,\n\twch_client_id,\n\twch_object_seq_nbr,\n\twch_create_ts,\n\twch_return_dt,\n\twch_last_wrk_dt,\n\twch_ret_type_cd,\n\twch_same_emp_ind,\n\tsource_system_id,\n\twrh_restrictions,\n\twrh_empr_pd_lit,\n\twrh_empr_pd_amt\n\tFROM SQ_wc_work_history_stage\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY wch_claim_nbr, wch_client_id ORDER BY NULL) = 1\n),\nEXP_Workers_Comp_Claimant_Work_History AS (\n\tSELECT\n\twc_work_history_id,\n\twch_claim_nbr,\n\twch_client_id,\n\twch_object_seq_nbr,\n\twch_create_ts,\n\twch_return_dt,\n\twch_last_wrk_dt,\n\twch_ret_type_cd,\n\twch_same_emp_ind,\n\tsource_system_id,\n\twrh_restrictions,\n\twrh_empr_pd_lit,\n\twrh_empr_pd_amt\n\tFROM AG_Deduplicate\n),\nEXP_Lkp_Values_workers_comp_claimant_detail AS (\n\tSELECT\n\twch_claim_nbr AS IN_CWC_CLAIM_NBR,\n\twch_client_id AS IN_CWC_CLIENT_ID,\n\twch_object_seq_nbr AS IN_CWC_OBJECT_SEQ_NBR,\n\tsource_system_id AS IN_SOURCE_SYSTEM_ID,\n\twrh_restrictions AS IN_wrh_restrictions,\n\twrh_empr_pd_lit AS IN_wrh_empr_pd_lit,\n\twrh_empr_pd_amt AS IN_wrh_empr_pd_amt,\n\twch_last_wrk_dt AS IN_wch_last_wrk_dt,\n\twch_return_dt AS IN_wch_return_dt,\n\twch_ret_type_cd AS IN_wch_ret_type_cd,\n\twch_same_emp_ind AS IN_wch_same_emp_ind,\n\twch_create_ts AS IN_wch_create_ts,\n\t-- *INF*: IIF(ISNULL(IN_wch_last_wrk_dt),TO_DATE('1/1/1800','MM/DD/YYYY'),IN_wch_last_wrk_dt)\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(IN_wch_last_wrk_dt IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), IN_wch_last_wrk_dt) AS EMP_LAST_DAY_WORKED,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_CWC_CLAIM_NBR))),'N/A',IIF(IS_SPACES(IN_CWC_CLAIM_NBR),'N/A',LTRIM(RTRIM(IN_CWC_CLAIM_NBR))))\n\tIFF(LTRIM(RTRIM(IN_CWC_CLAIM_NBR)) IS NULL, 'N/A', IFF(IS_SPACES(IN_CWC_CLAIM_NBR), 'N/A', LTRIM(RTRIM(IN_CWC_CLAIM_NBR)))) AS CWC_CLAIM_NBR,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_CWC_CLIENT_ID))),'N/A',IIF(IS_SPACES(IN_CWC_CLIENT_ID),'N/A',LTRIM(RTRIM(IN_CWC_CLIENT_ID))))\n\tIFF(LTRIM(RTRIM(IN_CWC_CLIENT_ID)) IS NULL, 'N/A', IFF(IS_SPACES(IN_CWC_CLIENT_ID), 'N/A', LTRIM(RTRIM(IN_CWC_CLIENT_ID)))) AS CWC_CLIENT_ID,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_SOURCE_SYSTEM_ID))),'N/A',IIF(IS_SPACES(IN_SOURCE_SYSTEM_ID),'N/A',LTRIM(RTRIM(IN_SOURCE_SYSTEM_ID))))\n\tIFF(LTRIM(RTRIM(IN_SOURCE_SYSTEM_ID)) IS NULL, 'N/A', IFF(IS_SPACES(IN_SOURCE_SYSTEM_ID), 'N/A', LTRIM(RTRIM(IN_SOURCE_SYSTEM_ID)))) AS SOURCE_SYSTEM_ID,\n\t-- *INF*: IIF(ISNULL(IN_CWC_OBJECT_SEQ_NBR),0,IN_CWC_OBJECT_SEQ_NBR)\n\tIFF(IN_CWC_OBJECT_SEQ_NBR IS NULL, 0, IN_CWC_OBJECT_SEQ_NBR) AS CWC_OBJECT_SEQ_NBR,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_wrh_empr_pd_lit))),'N/A',IIF(IS_SPACES(IN_wrh_empr_pd_lit),'N/A',LTRIM(RTRIM(IN_wrh_empr_pd_lit))))\n\tIFF(LTRIM(RTRIM(IN_wrh_empr_pd_lit)) IS NULL, 'N/A', IFF(IS_SPACES(IN_wrh_empr_pd_lit), 'N/A', LTRIM(RTRIM(IN_wrh_empr_pd_lit)))) AS EMPLYR_PAID_LITIGATED_IND,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_wrh_restrictions))),'N/A',IIF(IS_SPACES(IN_wrh_restrictions),'N/A',LTRIM(RTRIM(IN_wrh_restrictions))))\r\n\t-- \r\n\t-- \n\tIFF(LTRIM(RTRIM(IN_wrh_restrictions)) IS NULL, 'N/A', IFF(IS_SPACES(IN_wrh_restrictions), 'N/A', LTRIM(RTRIM(IN_wrh_restrictions)))) AS RETURN_TO_WORK_WITH_RESTRICTION_IND,\n\t-- *INF*: IIF(ISNULL(IN_wrh_empr_pd_amt),0,IN_wrh_empr_pd_amt)\n\tIFF(IN_wrh_empr_pd_amt IS NULL, 0, IN_wrh_empr_pd_amt) AS EMPLYR_PAID_AMT,\n\t-- *INF*: IIF(ISNULL(IN_wch_return_dt),TO_DATE('1/1/1800','MM/DD/YYYY'),IN_wch_return_dt)\n\tIFF(IN_wch_return_dt IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), IN_wch_return_dt) AS RETURN_TO_WORK_DATE,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_wch_same_emp_ind))),'N/A',IIF(IS_SPACES(IN_wch_same_emp_ind),'N/A',LTRIM(RTRIM(IN_wch_same_emp_ind))))\n\tIFF(LTRIM(RTRIM(IN_wch_same_emp_ind)) IS NULL, 'N/A', IFF(IS_SPACES(IN_wch_same_emp_ind), 'N/A', LTRIM(RTRIM(IN_wch_same_emp_ind)))) AS RETURN_TO_WORK_WITH_SAME_EMPLYR,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_wch_ret_type_cd))),'N/A',IIF(IS_SPACES(IN_wch_ret_type_cd),'N/A',LTRIM(RTRIM(IN_wch_ret_type_cd))))\n\tIFF(LTRIM(RTRIM(IN_wch_ret_type_cd)) IS NULL, 'N/A', IFF(IS_SPACES(IN_wch_ret_type_cd), 'N/A', LTRIM(RTRIM(IN_wch_ret_type_cd)))) AS RETURN_TO_WORK_TYPE,\n\t-- *INF*: IIF(ISNULL(IN_wch_create_ts),TO_DATE('1/1/1800','MM/DD/YYYY'),IN_wch_create_ts)\r\n\t-- \n\tIFF(IN_wch_create_ts IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), IN_wch_create_ts) AS wch_create_ts\n\tFROM EXP_Workers_Comp_Claimant_Work_History\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id DESC) = 1\n),\nLKP_Workers_Comp_Claimant_Detail AS (\n\tSELECT\n\twc_claimant_det_ak_id,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tA.wc_claimant_det_ak_id as wc_claimant_det_ak_id,  \r\n\t\tA.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_detail A\r\n\t\tWHERE (source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}') AND (CRRNT_SNPSHT_FLAG='1')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY wc_claimant_det_ak_id DESC) = 1\n),\nLKP_Workers_COMP_CLAIMENT_WORK_HISTORY AS (\n\tSELECT\n\twc_claimant_det_ak_id,\n\temp_last_day_worked,\n\treturn_to_work_date,\n\treturn_to_work_with_same_emplyr_ind,\n\templyr_paid_litigated_ind,\n\templyr_paid_amt,\n\treturn_to_work_type,\n\twc_claimant_work_hist_ak_id,\n\treturn_to_work_with_restriction_ind,\n\twork_hist_created_date\n\tFROM (\n\t\tSELECT CPO.wc_claimant_det_ak_id as wc_claimant_det_ak_id,\r\n\t\tCPO.emp_last_day_worked as emp_last_day_worked ,\r\n\t\tCPO.return_to_work_date as return_to_work_date ,\r\n\t\tCPO.return_to_work_with_same_emplyr_ind as return_to_work_with_same_emplyr_ind , \r\n\t\tCPO.emplyr_paid_litigated_ind as emplyr_paid_litigated_ind ,\r\n\t\tCPO.emplyr_paid_amt as emplyr_paid_amt,\r\n\t\tCPO.return_to_work_type as return_to_work_type,\r\n\t\tCPO.return_to_work_with_restriction_ind as return_to_work_with_restriction_ind ,\r\n\t\tCPO.wc_claimant_work_hist_ak_id as wc_claimant_work_hist_ak_id,\r\n\t\tCPO.work_hist_created_date as work_hist_created_date \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history CPO  \r\n\t\tWHERE    CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY wc_claimant_det_ak_id,work_hist_created_date ORDER BY wc_claimant_det_ak_id DESC) = 1\n),\nEXP_DETECT_CHANGES_workers_comp_claimant_detail AS (\n\tSELECT\n\tEXP_Lkp_Values_workers_comp_claimant_detail.CWC_CLAIM_NBR,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.CWC_CLIENT_ID,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.CWC_OBJECT_SEQ_NBR,\n\tLKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id AS CLAIM_PARTY_OCCURRENC_AK_ID,\n\t-- *INF*: IIF(ISNULL(wc_claimant_work_hist_ak_id),'NEW',\r\n\t-- IIF(LKP_return_to_work_date <> RETURN_TO_WORK_DATE OR LKP_emplyr_paid_amt <> EMPLYR_PAID_AMT OR ltrim(rtrim(LKP_emplyr_paid_litigated_ind)) <> ltrim(rtrim(EMPLYR_PAID_LITIGATED_IND)) OR  ltrim(rtrim(LKP_return_to_work_with_same_emplyr_ind)) <>  ltrim(rtrim(RETURN_TO_WORK_WITH_SAME_EMPLYR)) OR LKP_emp_last_day_worked <> EMP_LAST_DAY_WORKED  OR ltrim(rtrim(RETURN_TO_WORK_TYPE ))<> ltrim(rtrim(LKP_return_to_work_type))  OR ltrim(rtrim(LKP_return_to_work_with_restriction_ind)) <> ltrim(rtrim( RETURN_TO_WORK_WITH_RESTRICTION_IND))  ,'UPDATE',\r\n\t-- 'NOCHANGE') )\n\tIFF(wc_claimant_work_hist_ak_id IS NULL, 'NEW', IFF(LKP_return_to_work_date <> RETURN_TO_WORK_DATE OR LKP_emplyr_paid_amt <> EMPLYR_PAID_AMT OR ltrim(rtrim(LKP_emplyr_paid_litigated_ind)) <> ltrim(rtrim(EMPLYR_PAID_LITIGATED_IND)) OR ltrim(rtrim(LKP_return_to_work_with_same_emplyr_ind)) <> ltrim(rtrim(RETURN_TO_WORK_WITH_SAME_EMPLYR)) OR LKP_emp_last_day_worked <> EMP_LAST_DAY_WORKED OR ltrim(rtrim(RETURN_TO_WORK_TYPE)) <> ltrim(rtrim(LKP_return_to_work_type)) OR ltrim(rtrim(LKP_return_to_work_with_restriction_ind)) <> ltrim(rtrim(RETURN_TO_WORK_WITH_RESTRICTION_IND)), 'UPDATE', 'NOCHANGE')) AS V_CHANGE_FLAG,\n\tV_CHANGE_FLAG AS CHANGE_FLAG_OP,\n\t1 AS CRRNT_SNPSHT_FLAG,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t-- *INF*: IIF(V_CHANGE_FLAG='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tTO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\tIFF(V_CHANGE_FLAG = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(TO_CHAR(SYSDATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')) AS EFF_FROM_DATE,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS EFF_TO_DATE,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.SOURCE_SYSTEM_ID,\n\tSYSDATE AS CREATED_DATE,\n\tSYSDATE AS MODIFIED_DATE,\n\tLKP_Workers_Comp_Claimant_Detail.wc_claimant_det_ak_id AS LKP_wc_claimant_det_ak_id,\n\tLKP_wc_claimant_det_ak_id AS wc_claimant_det_ak_id,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.EMP_LAST_DAY_WORKED,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.RETURN_TO_WORK_WITH_RESTRICTION_IND,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.EMPLYR_PAID_LITIGATED_IND,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.EMPLYR_PAID_AMT,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.RETURN_TO_WORK_DATE,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.RETURN_TO_WORK_WITH_SAME_EMPLYR,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.RETURN_TO_WORK_TYPE,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.emp_last_day_worked AS LKP_emp_last_day_worked,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.return_to_work_date AS LKP_return_to_work_date,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.return_to_work_with_same_emplyr_ind AS LKP_return_to_work_with_same_emplyr_ind,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.emplyr_paid_litigated_ind AS LKP_emplyr_paid_litigated_ind,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.emplyr_paid_amt AS LKP_emplyr_paid_amt,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.return_to_work_type AS LKP_return_to_work_type,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.return_to_work_with_restriction_ind AS LKP_return_to_work_with_restriction_ind,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.wc_claimant_work_hist_ak_id,\n\tLKP_Workers_COMP_CLAIMENT_WORK_HISTORY.work_hist_created_date AS LKP_work_hist_created_date,\n\tEXP_Lkp_Values_workers_comp_claimant_detail.wch_create_ts\n\tFROM EXP_Lkp_Values_workers_comp_claimant_detail\n\tLEFT JOIN LKP_Claim_Party_Occurrence_AK_ID\n\tON LKP_Claim_Party_Occurrence_AK_ID.claimant_num = EXP_Lkp_Values_workers_comp_claimant_detail.IN_CWC_CLAIM_NBR AND LKP_Claim_Party_Occurrence_AK_ID.claim_party_role_code = EXP_Lkp_Values_workers_comp_claimant_detail.IN_CWC_CLIENT_ID\n\tLEFT JOIN LKP_Workers_COMP_CLAIMENT_WORK_HISTORY\n\tON LKP_Workers_COMP_CLAIMENT_WORK_HISTORY.wc_claimant_det_ak_id = LKP_Workers_Comp_Claimant_Detail.wc_claimant_det_ak_id AND LKP_Workers_COMP_CLAIMENT_WORK_HISTORY.work_hist_created_date = EXP_Lkp_Values_workers_comp_claimant_detail.wch_create_ts\n\tLEFT JOIN LKP_Workers_Comp_Claimant_Detail\n\tON LKP_Workers_Comp_Claimant_Detail.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id\n),\nFIL_INSERT_workers_comp_claimant_detail AS (\n\tSELECT\n\tCHANGE_FLAG_OP, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\twc_claimant_det_ak_id AS LKP_wc_claimant_det_ak_id, \n\tRETURN_TO_WORK_WITH_RESTRICTION_IND, \n\tEMPLYR_PAID_LITIGATED_IND, \n\tEMPLYR_PAID_AMT, \n\tEMP_LAST_DAY_WORKED, \n\tRETURN_TO_WORK_DATE, \n\tRETURN_TO_WORK_WITH_SAME_EMPLYR, \n\tRETURN_TO_WORK_TYPE, \n\twc_claimant_work_hist_ak_id, \n\twch_create_ts\n\tFROM EXP_DETECT_CHANGES_workers_comp_claimant_detail\n\tWHERE CHANGE_FLAG_OP<>'NOCHANGE'\n),\nSEQ_Workers_Comp_Claiment_Work_History AS (\n\tCREATE SEQUENCE SEQ_Workers_Comp_Claiment_Work_History\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_INSERT AS (\n\tSELECT\n\tSEQ_Workers_Comp_Claiment_Work_History.NEXTVAL,\n\tCHANGE_FLAG_OP,\n\tCRRNT_SNPSHT_FLAG,\n\tAUDIT_ID,\n\tEFF_FROM_DATE,\n\tEFF_TO_DATE,\n\tSOURCE_SYSTEM_ID,\n\tCREATED_DATE,\n\tMODIFIED_DATE,\n\tLKP_wc_claimant_det_ak_id,\n\t-- *INF*: IIF(CHANGE_FLAG_OP='NEW', NEXTVAL, IN_wc_claimant_work_hist_ak_id)\n\tIFF(CHANGE_FLAG_OP = 'NEW', NEXTVAL, IN_wc_claimant_work_hist_ak_id) AS WC_CLAIMANT_WORK_HIST_AK_ID,\n\tRETURN_TO_WORK_WITH_RESTRICTION_IND,\n\tEMPLYR_PAID_LITIGATED_IND,\n\tEMPLYR_PAID_AMT,\n\tEMP_LAST_DAY_WORKED,\n\tRETURN_TO_WORK_DATE,\n\tRETURN_TO_WORK_WITH_SAME_EMPLYR,\n\tRETURN_TO_WORK_TYPE,\n\twc_claimant_work_hist_ak_id AS IN_wc_claimant_work_hist_ak_id,\n\twch_create_ts\n\tFROM FIL_INSERT_workers_comp_claimant_detail\n),\nworkers_comp_claimant_work_history AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, wc_claimant_work_hist_ak_id, wc_claimant_det_ak_id, work_hist_created_date, emp_last_day_worked, return_to_work_date, return_to_work_type, return_to_work_with_same_emplyr_ind, return_to_work_with_restriction_ind, emplyr_paid_litigated_ind, emplyr_paid_amt)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE AS EFF_FROM_DATE, \n\tEFF_TO_DATE AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE AS CREATED_DATE, \n\tMODIFIED_DATE AS MODIFIED_DATE, \n\tWC_CLAIMANT_WORK_HIST_AK_ID AS WC_CLAIMANT_WORK_HIST_AK_ID, \n\tLKP_wc_claimant_det_ak_id AS WC_CLAIMANT_DET_AK_ID, \n\twch_create_ts AS WORK_HIST_CREATED_DATE, \n\tEMP_LAST_DAY_WORKED AS EMP_LAST_DAY_WORKED, \n\tRETURN_TO_WORK_DATE AS RETURN_TO_WORK_DATE, \n\tRETURN_TO_WORK_TYPE AS RETURN_TO_WORK_TYPE, \n\tRETURN_TO_WORK_WITH_SAME_EMPLYR AS RETURN_TO_WORK_WITH_SAME_EMPLYR_IND, \n\tRETURN_TO_WORK_WITH_RESTRICTION_IND AS RETURN_TO_WORK_WITH_RESTRICTION_IND, \n\tEMPLYR_PAID_LITIGATED_IND AS EMPLYR_PAID_LITIGATED_IND, \n\tEMPLYR_PAID_AMT AS EMPLYR_PAID_AMT\n\tFROM EXP_INSERT\n),\nSQ_workers_comp_claimant_work_history AS (\n\tSELECT a.wc_claimant_work_hist_id as wc_claimant_work_hist_id , \r\n\ta.wc_claimant_work_hist_ak_id   as wc_claimant_work_hist_ak_id , \r\n\ta.eff_from_date as eff_from_date,\r\n\t a.eff_to_date as  eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history b\r\n\t\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND b.crrnt_snpsht_flag = 1\r\n\t\t\tAND a.wc_claimant_work_hist_ak_id = b.wc_claimant_work_hist_ak_id\r\n\t\t\tGROUP BY wc_claimant_work_hist_ak_id\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY wc_claimant_work_hist_ak_id, eff_from_date  DESC\n),\nEXP_Lag_eff_from_date1 AS (\n\tSELECT\n\twc_claimant_work_hist_id,\n\twc_claimant_work_hist_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: IIF(wc_claimant_work_hist_ak_id = v_PREV_ROW_wc_claimant_det_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),orig_eff_to_date)\n\tIFF(wc_claimant_work_hist_ak_id = v_PREV_ROW_wc_claimant_det_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1), orig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\twc_claimant_work_hist_ak_id AS v_PREV_ROW_wc_claimant_det_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_workers_comp_claimant_work_history\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\twc_claimant_work_hist_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date1\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_workers_comp_claimant_work_history AS (\n\tSELECT\n\twc_claimant_work_hist_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nworkers_comp_claimant_work_history2 AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history AS T\n\tUSING UPD_workers_comp_claimant_work_history AS S\n\tON T.wc_claimant_work_hist_id = S.wc_claimant_work_hist_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}