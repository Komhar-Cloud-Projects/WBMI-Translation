{
    "name": "s_m_QTE_Load_QuoteDim",
    "properties": {
        "activities": [
            {
                "name": "m_QTE_Load_QuoteDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_ReleasedQuote AS (\n\tSELECT\n\tQuoteStatusCode,\n\tQuoteAKId\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteStatusCode,\n\t\t\tQuoteAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote\n\t\tWHERE exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=Quote.QuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand\r\n\t\tQuoteStatusCode='Released Quote'\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote a\r\n\t\twhere a.QuoteAKId=Quote.QuoteAKId\r\n\t\tand a.StatusDate>Quote.StatusDate\r\n\t\tand a.QuoteStatusCode='Reactivate')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAKId ORDER BY QuoteStatusCode) = 1\n),\nLKP_Bound AS (\n\tSELECT\n\tQuoteStatusCode,\n\tQuoteAKId\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteStatusCode,\n\t\t\tQuoteAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote\n\t\tWHERE exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=Quote.QuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand\r\n\t\tQuoteStatusCode='Bound'\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote a\r\n\t\twhere a.QuoteAKId=Quote.QuoteAKId\r\n\t\tand a.StatusDate>Quote.StatusDate\r\n\t\tand a.QuoteStatusCode='Reactivate')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAKId ORDER BY QuoteStatusCode) = 1\n),\nLKP_UnBound AS (\n\tSELECT\n\tQuoteStatusCode,\n\tQuoteAKId\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteStatusCode,\n\t\t\tQuoteAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote\n\t\tWHERE exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=Quote.QuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand\r\n\t\tQuoteStatusCode='UnBound'\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote a\r\n\t\twhere a.QuoteAKId=Quote.QuoteAKId\r\n\t\tand a.StatusDate>Quote.StatusDate\r\n\t\tand a.QuoteStatusCode='Reactivate')\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote b\r\n\t\twhere b.QuoteAKId=Quote.QuoteAKId\r\n\t\tand b.StatusDate>Quote.StatusDate\r\n\t\tand b.QuoteStatusCode='Bound')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAKId ORDER BY QuoteStatusCode) = 1\n),\nLKP_InitializedQuote AS (\n\tSELECT\n\tInternalExternalIndicator,\n\tQuoteAKId\n\tFROM (\n\t\tSELECT \n\t\t\tInternalExternalIndicator,\n\t\t\tQuoteAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote\n\t\tWHERE exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=Quote.QuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tand\r\n\t\tQuoteStatusCode='Initialized Quote'\r\n\t\tand not exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote b\r\n\t\twhere b.QuoteAKId=Quote.QuoteAKId\r\n\t\tand b.StatusDate>Quote.StatusDate\r\n\t\tand b.QuoteStatusCode='Initialized Quote')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAKId ORDER BY InternalExternalIndicator) = 1\n),\nLKP_WBPolicyStaging AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersionFormatted\n\tFROM (\n\t\tselect distinct W.PolicyNumber as PolicyNumber,\r\n\t\t W.PolicyVersionFormatted as PolicyVersionFormatted\r\n\t\tfrom @{pipeline().parameters.STAGE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPolicyStaging W with (nolock)\r\n\t\twhere W.PenguinTechGenerated=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyVersionFormatted ORDER BY PolicyNumber) = 1\n),\nSQ_Quote AS (\n\tSELECT\n\t\tQuoteAKId,\n\t\tQuoteNumber,\n\t\tQuoteVersion,\n\t\tQuoteStatusCode,\n\t\tQuoteCreatedDate,\n\t\tQuoteIssueCode,\n\t\tQuoteIssueCodeChangeDate,\n\t\tIssuedUWID,\n\t\tIssuedUnderwriter,\n\t\tQuoteChannel,\n\t\tLCSurveyOrderedIndicator,\n\t\tLCSurveyOrderedDate,\n\t\tQuoteChannelOrigin,\n\t\tRolloverPolicyIndicator,\n\t\tRolloverPriorCarrier,\n\t\tServCenterSupportCode\n\tFROM Quote\n\tON Quote.CurrentSnapshotFlag=1\r\n\tand exists (\r\n\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\twhere q.QuoteAKId=Quote.QuoteAKId\r\n\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Flags AS (\n\tSELECT\n\tQuoteAKId,\n\tQuoteNumber,\n\tQuoteVersion,\n\tQuoteStatusCode AS i_QuoteStatusCode,\n\tQuoteCreatedDate,\n\tQuoteIssueCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- QuoteIssueCode='N','New',\r\n\t-- QuoteIssueCode='R','Renewal',\r\n\t-- QuoteIssueCode)\n\tDECODE(\n\t    TRUE,\n\t    QuoteIssueCode = 'N', 'New',\n\t    QuoteIssueCode = 'R', 'Renewal',\n\t    QuoteIssueCode\n\t) AS o_QuoteIssueCodeDesc,\n\tQuoteIssueCodeChangeDate AS QuoteIssueCodeDescChangeDate,\n\t-- *INF*: IIF(i_QuoteStatusCode!='Initialized Quote','1','0')\n\tIFF(i_QuoteStatusCode != 'Initialized Quote', '1', '0') AS SubmittedFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_QuoteStatusCode='Issued','1',\r\n\t-- i_QuoteStatusCode='Released Quote','1',\r\n\t-- i_QuoteStatusCode='Declined','0',\r\n\t-- i_QuoteStatusCode='Bound','1',\r\n\t-- i_QuoteStatusCode='Unbound','1',\r\n\t-- NOT ISNULL(:LKP.LKP_RELEASEDQUOTE(QuoteAKId)),'1',\r\n\t-- i_QuoteStatusCode='Closed' AND NOT ISNULL(:LKP.LKP_BOUND(QuoteAKId)),'1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    i_QuoteStatusCode = 'Issued', '1',\n\t    i_QuoteStatusCode = 'Released Quote', '1',\n\t    i_QuoteStatusCode = 'Declined', '0',\n\t    i_QuoteStatusCode = 'Bound', '1',\n\t    i_QuoteStatusCode = 'Unbound', '1',\n\t    LKP_RELEASEDQUOTE_QuoteAKId.QuoteStatusCode IS NOT NULL, '1',\n\t    i_QuoteStatusCode = 'Closed' AND LKP_BOUND_QuoteAKId.QuoteStatusCode IS NOT NULL, '1',\n\t    '0'\n\t) AS ReleasedQuoteFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_QuoteStatusCode='Bound','1',\r\n\t-- NOT ISNULL(:LKP.LKP_BOUND(QuoteAKId)) AND ISNULL(:LKP.LKP_UNBOUND(QuoteAKId)),'1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    i_QuoteStatusCode = 'Bound', '1',\n\t    LKP_BOUND_QuoteAKId.QuoteStatusCode IS NULL AND LKP_UNBOUND_QuoteAKId.QuoteStatusCode IS NOT NULL, '1',\n\t    '0'\n\t) AS BoundFlag,\n\t-- *INF*: IIF(i_QuoteStatusCode='Issued','1','0')\n\tIFF(i_QuoteStatusCode = 'Issued', '1', '0') AS IssuedFlag,\n\t-- *INF*: IIF(i_QuoteStatusCode='Declined','1','0')\n\tIFF(i_QuoteStatusCode = 'Declined', '1', '0') AS DeclineFlag,\n\t-- *INF*: IIF(i_QuoteStatusCode='Closed','1','0')\n\tIFF(i_QuoteStatusCode = 'Closed', '1', '0') AS ClosedFlag,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_WBPOLICYSTAGING(QuoteNumber,QuoteVersion)),'0','1')\r\n\t-- --External = 1\r\n\t-- --Internal = 0\n\tIFF(LKP_WBPOLICYSTAGING_QuoteNumber_QuoteVersion.PolicyNumber IS NULL, '0', '1') AS v_ExtnternalInitializedFlag_Liferay,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- :LKP.LKP_INITIALIZEDQUOTE(QuoteAKId)='External','1',\r\n\t-- v_ExtnternalInitializedFlag_Liferay='1','1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    LKP_INITIALIZEDQUOTE_QuoteAKId.InternalExternalIndicator = 'External', '1',\n\t    v_ExtnternalInitializedFlag_Liferay = '1', '1',\n\t    '0'\n\t) AS ExternalInitializedQuoteFlag,\n\tIssuedUWID,\n\tIssuedUnderwriter,\n\tQuoteChannel,\n\tLCSurveyOrderedIndicator,\n\t-- *INF*: decode(LCSurveyOrderedIndicator,'T','1','F','0',NULL)\n\tdecode(\n\t    LCSurveyOrderedIndicator,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_LCSurveyOrderedIndicator,\n\tLCSurveyOrderedDate,\n\tQuoteChannelOrigin,\n\tRolloverPolicyIndicator,\n\tRolloverPriorCarrier,\n\tServCenterSupportCode\n\tFROM SQ_Quote\n\tLEFT JOIN LKP_RELEASEDQUOTE LKP_RELEASEDQUOTE_QuoteAKId\n\tON LKP_RELEASEDQUOTE_QuoteAKId.QuoteAKId = QuoteAKId\n\n\tLEFT JOIN LKP_BOUND LKP_BOUND_QuoteAKId\n\tON LKP_BOUND_QuoteAKId.QuoteAKId = QuoteAKId\n\n\tLEFT JOIN LKP_UNBOUND LKP_UNBOUND_QuoteAKId\n\tON LKP_UNBOUND_QuoteAKId.QuoteAKId = QuoteAKId\n\n\tLEFT JOIN LKP_WBPOLICYSTAGING LKP_WBPOLICYSTAGING_QuoteNumber_QuoteVersion\n\tON LKP_WBPOLICYSTAGING_QuoteNumber_QuoteVersion.PolicyNumber = QuoteNumber\n\tAND LKP_WBPOLICYSTAGING_QuoteNumber_QuoteVersion.PolicyVersionFormatted = QuoteVersion\n\n\tLEFT JOIN LKP_INITIALIZEDQUOTE LKP_INITIALIZEDQUOTE_QuoteAKId\n\tON LKP_INITIALIZEDQUOTE_QuoteAKId.QuoteAKId = QuoteAKId\n\n),\nLKP_QuoteDim AS (\n\tSELECT\n\tQuoteDimId,\n\tChangeAttributes,\n\tEDWQuoteAKId\n\tFROM (\n\t\tSELECT a.QuoteDimId as QuoteDimId,\r\n\t\tconvert(varchar(1),a.SubmittedFlag)+convert(varchar(1),a.ReleasedQuoteFlag)+convert(varchar(1),a.BoundFlag)+convert(varchar(1),a.IssuedFlag)+convert(varchar(1),a.DeclineFlag)+convert(varchar(1),a.ClosedFlag)+convert(varchar(1),a.ExternalInitializedQuoteFlag)+ISNULL(QuoteIssueCodeDesc,'')+ISNULL(IssuedUWID,'')+ISNULL(IssuedUnderwriter,'')+ISNULL(QuoteChannelOrigin,'') as ChangeAttributes,\r\n\t\ta.EDWQuoteAKId as EDWQuoteAKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteDim a\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.Quote q\r\n\t\twhere q.QuoteAKId=a.EDWQuoteAKId\r\n\t\tand q.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\torder by a.EDWQuoteAKId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWQuoteAKId ORDER BY QuoteDimId) = 1\n),\nEXP_Change AS (\n\tSELECT\n\tLKP_QuoteDim.QuoteDimId,\n\tLKP_QuoteDim.ChangeAttributes AS lkp_ChangeAttributes,\n\tEXP_Flags.QuoteAKId,\n\tEXP_Flags.QuoteNumber,\n\tEXP_Flags.QuoteCreatedDate,\n\tEXP_Flags.SubmittedFlag,\n\tEXP_Flags.ReleasedQuoteFlag,\n\tEXP_Flags.BoundFlag,\n\tEXP_Flags.IssuedFlag,\n\tEXP_Flags.DeclineFlag,\n\tEXP_Flags.ClosedFlag,\n\tEXP_Flags.ExternalInitializedQuoteFlag,\n\tEXP_Flags.o_QuoteIssueCodeDesc AS QuoteIssueCodeDesc,\n\t-- *INF*: IIF (ISNULL(QuoteIssueCodeDesc),'New',QuoteIssueCodeDesc)\n\tIFF(QuoteIssueCodeDesc IS NULL, 'New', QuoteIssueCodeDesc) AS v_QuoteIssueCodeDesc,\n\tv_QuoteIssueCodeDesc AS o_QuoteIssueCodeDesc,\n\tEXP_Flags.QuoteIssueCodeDescChangeDate,\n\tEXP_Flags.IssuedUWID,\n\t-- *INF*: IIF (ISNULL(IssuedUWID) Or IssuedUWID='0','N/A',IssuedUWID)\n\tIFF(IssuedUWID IS NULL Or IssuedUWID = '0', 'N/A', IssuedUWID) AS v_IssuedUWID,\n\tv_IssuedUWID AS o_IssuedUWID,\n\tEXP_Flags.IssuedUnderwriter,\n\t-- *INF*: IIF (ISNULL(IssuedUnderwriter),'N/A',IssuedUnderwriter)\n\tIFF(IssuedUnderwriter IS NULL, 'N/A', IssuedUnderwriter) AS v_IssuedUnderwriter,\n\tv_IssuedUnderwriter AS o_IssuedUnderwriter,\n\tEXP_Flags.QuoteChannel,\n\t-- *INF*: IIF (ISNULL(QuoteChannel),'N/A',QuoteChannel)\n\tIFF(QuoteChannel IS NULL, 'N/A', QuoteChannel) AS v_QuoteChannel,\n\tv_QuoteChannel AS o_QuoteChannel,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(QuoteDimId),1,\r\n\t-- lkp_ChangeAttributes<>SubmittedFlag||ReleasedQuoteFlag||BoundFlag||IssuedFlag||DeclineFlag||ClosedFlag||ExternalInitializedQuoteFlag||v_QuoteIssueCodeDesc||v_IssuedUWID||v_IssuedUnderwriter || v_QuoteChannel,2,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    QuoteDimId IS NULL, 1,\n\t    lkp_ChangeAttributes <> SubmittedFlag || ReleasedQuoteFlag || BoundFlag || IssuedFlag || DeclineFlag || ClosedFlag || ExternalInitializedQuoteFlag || v_QuoteIssueCodeDesc || v_IssuedUWID || v_IssuedUnderwriter || v_QuoteChannel, 2,\n\t    0\n\t) AS o_ChangeFlag,\n\tEXP_Flags.o_LCSurveyOrderedIndicator AS LCSurveyOrderedIndicator,\n\tEXP_Flags.LCSurveyOrderedDate,\n\tEXP_Flags.QuoteChannelOrigin AS i_QuoteChannelOrigin,\n\t-- *INF*: IIF (ISNULL(i_QuoteChannelOrigin),'N/A',i_QuoteChannelOrigin)\n\tIFF(i_QuoteChannelOrigin IS NULL, 'N/A', i_QuoteChannelOrigin) AS v_QuoteChannelOrigin,\n\tv_QuoteChannelOrigin AS o_QuoteChannelOrigin,\n\tEXP_Flags.RolloverPolicyIndicator AS i_RolloverPolicyIndicator,\n\tEXP_Flags.RolloverPriorCarrier,\n\t-- *INF*: DECODE(i_RolloverPolicyIndicator, 'T',1,'F',0,0)\n\tDECODE(\n\t    i_RolloverPolicyIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    0\n\t) AS o_rolloverPolicyIndicator,\n\tEXP_Flags.ServCenterSupportCode\n\tFROM EXP_Flags\n\tLEFT JOIN LKP_QuoteDim\n\tON LKP_QuoteDim.EDWQuoteAKId = EXP_Flags.QuoteAKId\n),\nRTR_InsertElseUpdate AS (\n\tSELECT\n\tQuoteDimId,\n\tQuoteAKId,\n\tQuoteNumber,\n\tQuoteCreatedDate,\n\tSubmittedFlag,\n\tReleasedQuoteFlag,\n\tBoundFlag,\n\tIssuedFlag,\n\tDeclineFlag,\n\tClosedFlag,\n\tExternalInitializedQuoteFlag,\n\to_AuditId AS AuditId,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_ChangeFlag AS ChangeFlag,\n\to_QuoteIssueCodeDesc AS QuoteIssueCodeDesc,\n\tQuoteIssueCodeDescChangeDate,\n\to_IssuedUWID AS IssuedUWID,\n\to_IssuedUnderwriter AS IssuedUnderwriter,\n\to_QuoteChannel,\n\tLCSurveyOrderedIndicator,\n\tLCSurveyOrderedDate,\n\to_QuoteChannelOrigin AS QuoteChannelOrigin,\n\to_rolloverPolicyIndicator AS RolloverPolicyIndicator,\n\tRolloverPriorCarrier,\n\tServCenterSupportCode\n\tFROM EXP_Change\n),\nRTR_InsertElseUpdate_INSERT AS (SELECT * FROM RTR_InsertElseUpdate WHERE ChangeFlag=1),\nRTR_InsertElseUpdate_UPDATE AS (SELECT * FROM RTR_InsertElseUpdate WHERE ChangeFlag=2),\nTGT_QuoteDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteDim\n\t(AuditId, CreatedDate, ModifiedDate, EDWQuoteAKId, QuoteNumber, QuoteCreatedDate, SubmittedFlag, ReleasedQuoteFlag, BoundFlag, IssuedFlag, DeclineFlag, ClosedFlag, ExternalInitializedQuoteFlag, QuoteIssueCodeDesc, QuoteIssueCodeDescChangeDate, IssuedUWID, IssuedUnderwriter, QuoteChannel, LCSurveyOrderedIndicator, LCSurveyOrderedDate, QuoteChannelOrigin, ServCenterSupportCode, RolloverPolicyIndicator, RolloverPriorCarrier)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tQuoteAKId AS EDWQUOTEAKID, \n\tQUOTENUMBER, \n\tQUOTECREATEDDATE, \n\tSUBMITTEDFLAG, \n\tRELEASEDQUOTEFLAG, \n\tBOUNDFLAG, \n\tISSUEDFLAG, \n\tDECLINEFLAG, \n\tCLOSEDFLAG, \n\tEXTERNALINITIALIZEDQUOTEFLAG, \n\tQUOTEISSUECODEDESC, \n\tQUOTEISSUECODEDESCCHANGEDATE, \n\tISSUEDUWID, \n\tISSUEDUNDERWRITER, \n\to_QuoteChannel AS QUOTECHANNEL, \n\tLCSURVEYORDEREDINDICATOR, \n\tLCSURVEYORDEREDDATE, \n\tQUOTECHANNELORIGIN, \n\tSERVCENTERSUPPORTCODE, \n\tROLLOVERPOLICYINDICATOR, \n\tROLLOVERPRIORCARRIER\n\tFROM RTR_InsertElseUpdate_INSERT\n),\nUPD_Target AS (\n\tSELECT\n\tQuoteDimId, \n\tModifiedDate, \n\tSubmittedFlag, \n\tReleasedQuoteFlag, \n\tBoundFlag, \n\tIssuedFlag, \n\tDeclineFlag, \n\tClosedFlag, \n\tExternalInitializedQuoteFlag, \n\tAuditId, \n\tQuoteIssueCodeDesc AS QuoteIssueCodeDesc3, \n\tQuoteIssueCodeDescChangeDate AS QuoteIssueCodeDescChangeDate3, \n\tIssuedUWID AS IssuedUWID3, \n\tIssuedUnderwriter AS IssuedUnderwriter3, \n\to_QuoteChannel, \n\tLCSurveyOrderedIndicator AS LCSurveyOrderedIndicator3, \n\tLCSurveyOrderedDate AS LCSurveyOrderedDate3, \n\tQuoteChannelOrigin AS QuoteChannelOrigin3, \n\tRolloverPolicyIndicator AS RolloverPolicyIndicator3, \n\tRolloverPriorCarrier AS RolloverPriorCarrier3, \n\tServCenterSupportCode AS ServCenterSupportCode3\n\tFROM RTR_InsertElseUpdate_UPDATE\n),\nTGT_QuoteDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteDim AS T\n\tUSING UPD_Target AS S\n\tON T.QuoteDimId = S.QuoteDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.ModifiedDate = S.ModifiedDate, T.SubmittedFlag = S.SubmittedFlag, T.ReleasedQuoteFlag = S.ReleasedQuoteFlag, T.BoundFlag = S.BoundFlag, T.IssuedFlag = S.IssuedFlag, T.DeclineFlag = S.DeclineFlag, T.ClosedFlag = S.ClosedFlag, T.ExternalInitializedQuoteFlag = S.ExternalInitializedQuoteFlag, T.QuoteIssueCodeDesc = S.QuoteIssueCodeDesc3, T.QuoteIssueCodeDescChangeDate = S.QuoteIssueCodeDescChangeDate3, T.IssuedUWID = S.IssuedUWID3, T.IssuedUnderwriter = S.IssuedUnderwriter3, T.QuoteChannel = S.o_QuoteChannel, T.LCSurveyOrderedIndicator = S.LCSurveyOrderedIndicator3, T.LCSurveyOrderedDate = S.LCSurveyOrderedDate3, T.QuoteChannelOrigin = S.QuoteChannelOrigin3, T.ServCenterSupportCode = S.ServCenterSupportCode3, T.RolloverPolicyIndicator = S.RolloverPolicyIndicator3, T.RolloverPriorCarrier = S.RolloverPriorCarrier3\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "STAGE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "QuoteDataMart/"
        },
        "annotations": []
    }
}