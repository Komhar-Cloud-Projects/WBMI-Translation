{
    "name": "s_m_CLM_FEED_Reinsurance_FinalLoad",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_FEED_Reinsurance_FinalLoad",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_SapiensReinsuranceClaim AS (\n\tSELECT\n\t\tSapiensReinsuranceClaimId,\n\t\tAuditId,\n\t\tCreatedDate,\n\t\tModifiedDate,\n\t\tClaimNumber,\n\t\tPolicyKey,\n\t\tProductCode,\n\t\tAccountingProductCode,\n\t\tStrategicProfitCenterAbbreviation,\n\t\tASLCode,\n\t\tSubASLCode,\n\t\tInsuranceReferenceLineOfBusinessCode,\n\t\tRiskStateCode,\n\t\tSubClaim,\n\t\tFinancialTypeCode,\n\t\tFinancialTypeCodeDescription,\n\t\tCauseOfLoss,\n\t\tClaimantNumber,\n\t\tClaimantFullName,\n\t\tClaimLossDate,\n\t\tClaimReportedDate,\n\t\tClaimCatastropheCode,\n\t\tClaimCatastropheStartDate,\n\t\tClaimTransactionDate,\n\t\tTransactionCode,\n\t\tTransactionCodeDescription,\n\t\tTransactionType,\n\t\tTransactionAmount,\n\t\tTransactionHistoryAmount,\n\t\tSourceSequenceNumber,\n\t\tTransactionNumber,\n\t\tWorkersCompensationMedicalLossPaid,\n\t\tWorkersCompensationMedicalExpensePaid,\n\t\tWorkersCompensationIndemnityExpensePaid,\n\t\tWorkersCompensationIndemnityLossPaid,\n\t\tPropertyCasualtyExpensePaid,\n\t\tPropertyCasualtyLossPaid,\n\t\tWorkersCompensationMedicalLossOutstanding,\n\t\tWorkersCompensationMedicalExpenseOutstanding,\n\t\tWorkersCompensationIndemnityExpenseOutstanding,\n\t\tWorkersCompensationIndemnityLossOutstanding,\n\t\tPropertyCasualtyExpenseOutstanding,\n\t\tPropertyCasualtyLossOutstanding,\n\t\tContainsOutstandingReserveAmountFlag,\n\t\tReinsuranceUmbrellaLayer,\n\t\tClaimRelationshipId,\n\t\tClaimTransactionCategory,\n\t\tSourceSystemID\n\tFROM SapiensReinsuranceClaim\n\tWHERE SapiensReinsuranceClaim.TransactionAmount <> 0.0 OR SapiensReinsuranceClaim.TransactionType = 'Reserve'\n),\nEXP_SRC AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tAccountingProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tASLCode,\n\tSubASLCode AS in_SubASLCode,\n\t-- *INF*: IIF(RTRIM(in_SubASLCode)='',\r\n\t-- NULL,\r\n\t-- in_SubASLCode)\n\tIFF(RTRIM(in_SubASLCode) = '', NULL, in_SubASLCode) AS v_SubASLCode,\n\tv_SubASLCode AS out_SubASLCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRiskStateCode,\n\tSubClaim,\n\tFinancialTypeCode,\n\tFinancialTypeCodeDescription,\n\tCauseOfLoss,\n\tClaimantNumber,\n\tClaimantFullName,\n\tClaimLossDate,\n\tClaimReportedDate,\n\tClaimCatastropheCode,\n\tClaimCatastropheStartDate,\n\tClaimTransactionDate,\n\tTransactionCode,\n\tTransactionCodeDescription,\n\tTransactionType,\n\tTransactionAmount,\n\tTransactionHistoryAmount,\n\tSourceSequenceNumber,\n\tTransactionNumber,\n\tWorkersCompensationMedicalLossPaid,\n\tWorkersCompensationMedicalExpensePaid,\n\tWorkersCompensationIndemnityExpensePaid,\n\tWorkersCompensationIndemnityLossPaid,\n\tPropertyCasualtyExpensePaid,\n\tPropertyCasualtyLossPaid,\n\tWorkersCompensationMedicalLossOutstanding,\n\tWorkersCompensationMedicalExpenseOutstanding,\n\tWorkersCompensationIndemnityExpenseOutstanding,\n\tWorkersCompensationIndemnityLossOutstanding,\n\tPropertyCasualtyExpenseOutstanding,\n\tPropertyCasualtyLossOutstanding,\n\tContainsOutstandingReserveAmountFlag,\n\tReinsuranceUmbrellaLayer,\n\tClaimRelationshipId,\n\tSapiensReinsuranceClaimId,\n\tAuditId,\n\t-- *INF*: IIF(ISNULL(@{pipeline().parameters.NUMBEROFPOLICYQUEUES}) or @{pipeline().parameters.NUMBEROFPOLICYQUEUES}=0,\r\n\t-- 1,\r\n\t-- @{pipeline().parameters.NUMBEROFPOLICYQUEUES}\r\n\t-- )\n\tIFF(@{pipeline().parameters.NUMBEROFPOLICYQUEUES} IS NULL or @{pipeline().parameters.NUMBEROFPOLICYQUEUES} = 0, 1, @{pipeline().parameters.NUMBEROFPOLICYQUEUES}) AS v_NumberOfPolicyQueues,\n\t-- *INF*: IIF(v_NumberOfPolicyQueues<=1 and (ISNULL(@{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}<=1),\r\n\t-- \t1,\t--Keep claims in the same queue as policies when both values are effectively 1\r\n\t-- \tv_NumberOfPolicyQueues\r\n\t-- \t+\r\n\t-- \tIIF(ISNULL(@{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}<=1,\r\n\t-- \t\t1,\r\n\t-- \t\tMOD(TO_INTEGER(REVERSE(SUBSTR(REVERSE(ClaimNumber),1,2))), @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) + 1\r\n\t-- \t)\r\n\t-- )\n\tIFF(\n\t    v_NumberOfPolicyQueues <= 1 and (@{pipeline().parameters.NUMBEROFCLAIMSQUEUES} IS NULL or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES} <= 1),\n\t    1,\n\t    v_NumberOfPolicyQueues + \n\t    IFF(\n\t        @{pipeline().parameters.NUMBEROFCLAIMSQUEUES} IS NULL\n\t    or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES} <= 1, 1,\n\t        MOD(CAST(REVERSE(SUBSTR(REVERSE(ClaimNumber), 1, 2)) AS INTEGER), @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) + 1\n\t    )\n\t) AS ClaimsQueueNumber,\n\tClaimTransactionCategory,\n\tSourceSystemID\n\tFROM SQ_SapiensReinsuranceClaim\n),\nRTR_Payments_Reserves AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tAccountingProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tASLCode,\n\tout_SubASLCode AS SubASLCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRiskStateCode,\n\tSubClaim,\n\tFinancialTypeCode,\n\tCauseOfLoss,\n\tClaimantNumber,\n\tClaimantFullName,\n\tClaimLossDate,\n\tClaimReportedDate,\n\tClaimCatastropheCode,\n\tClaimCatastropheStartDate,\n\tClaimTransactionDate,\n\tTransactionCode,\n\tTransactionCodeDescription,\n\tTransactionType,\n\tTransactionAmount,\n\tTransactionHistoryAmount,\n\tSourceSequenceNumber,\n\tTransactionNumber,\n\tWorkersCompensationMedicalLossPaid,\n\tWorkersCompensationMedicalExpensePaid,\n\tWorkersCompensationIndemnityExpensePaid,\n\tWorkersCompensationIndemnityLossPaid,\n\tPropertyCasualtyExpensePaid,\n\tPropertyCasualtyLossPaid,\n\tWorkersCompensationMedicalLossOutstanding,\n\tWorkersCompensationMedicalExpenseOutstanding,\n\tWorkersCompensationIndemnityExpenseOutstanding,\n\tWorkersCompensationIndemnityLossOutstanding,\n\tPropertyCasualtyExpenseOutstanding,\n\tPropertyCasualtyLossOutstanding,\n\tContainsOutstandingReserveAmountFlag AS ContainsOutstandingReserveAmount,\n\tReinsuranceUmbrellaLayer,\n\tClaimRelationshipId,\n\tSapiensReinsuranceClaimId,\n\tAuditId,\n\tClaimsQueueNumber,\n\tClaimTransactionCategory,\n\tSourceSystemID\n\tFROM EXP_SRC\n),\nRTR_Payments_Reserves_ReinsurancePayments AS (SELECT * FROM RTR_Payments_Reserves WHERE TransactionType='Payment'),\nRTR_Payments_Reserves_ReinsuranceReserves AS (SELECT * FROM RTR_Payments_Reserves WHERE TransactionType='Reserve' and ContainsOutstandingReserveAmount='T'),\nSRT_BySubClaim AS (\n\tSELECT\n\tSubClaim AS SubClaim3, \n\tSourceSequenceNumber AS SourceSequenceNumber3, \n\tClaimNumber AS ClaimNumber3, \n\tPolicyKey AS PolicyKey3, \n\tProductCode AS ProductCode3, \n\tAccountingProductCode AS AccountingProductCode3, \n\tStrategicProfitCenterAbbreviation AS StrategicProfitCenterAbbreviation3, \n\tASLCode AS ASLCode3, \n\tSubASLCode AS SubASLCode3, \n\tInsuranceReferenceLineOfBusinessCode AS InsuranceReferenceLineOfBusinessCode3, \n\tRiskStateCode AS RiskStateCode3, \n\tFinancialTypeCode AS FinancialTypeCode3, \n\tCauseOfLoss AS CauseOfLoss3, \n\tClaimantNumber AS ClaimantNumber3, \n\tClaimantFullName AS ClaimantFullName3, \n\tClaimLossDate AS ClaimLossDate3, \n\tClaimReportedDate AS ClaimReportedDate3, \n\tClaimCatastropheCode AS ClaimCatastropheCode3, \n\tClaimCatastropheStartDate AS ClaimCatastropheStartDate3, \n\tClaimTransactionDate AS ClaimTransactionDate3, \n\tTransactionCode AS TransactionCode3, \n\tTransactionCodeDescription AS TransactionCodeDescription3, \n\tTransactionType AS TransactionType3, \n\tTransactionAmount AS TransactionAmount3, \n\tTransactionHistoryAmount AS TransactionHistoryAmount3, \n\tTransactionNumber AS TransactionNumber3, \n\tWorkersCompensationMedicalLossOutstanding AS WorkersCompensationMedicalLossOutstanding3, \n\tWorkersCompensationMedicalExpenseOutstanding AS WorkersCompensationMedicalExpenseOutstanding3, \n\tWorkersCompensationIndemnityExpenseOutstanding AS WorkersCompensationIndemnityExpenseOutstanding3, \n\tWorkersCompensationIndemnityLossOutstanding AS WorkersCompensationIndemnityLossOutstanding3, \n\tPropertyCasualtyExpenseOutstanding AS PropertyCasualtyExpenseOutstanding3, \n\tPropertyCasualtyLossOutstanding AS PropertyCasualtyLossOutstanding3, \n\tContainsOutstandingReserveAmount AS ContainsOutstandingReserveAmount3, \n\tReinsuranceUmbrellaLayer AS ReinsuranceUmbrellaLayer3, \n\tClaimRelationshipId AS ClaimRelationshipId3, \n\tSapiensReinsuranceClaimId AS SapiensReinsuranceClaimId3, \n\tAuditId AS AuditId3, \n\tClaimsQueueNumber AS ClaimsQueueNumber3\n\tFROM RTR_Payments_Reserves_ReinsuranceReserves\n\tORDER BY SubClaim3 ASC, SourceSequenceNumber3 ASC\n),\nEXP_SameSSNAcrossFinancialTypes AS (\n\tSELECT\n\tSubClaim3,\n\tClaimNumber3,\n\tPolicyKey3,\n\tProductCode3,\n\tAccountingProductCode3,\n\tStrategicProfitCenterAbbreviation3,\n\tASLCode3,\n\tSubASLCode3,\n\tInsuranceReferenceLineOfBusinessCode3,\n\tRiskStateCode3,\n\tFinancialTypeCode3,\n\tCauseOfLoss3,\n\tClaimantNumber3,\n\tClaimantFullName3,\n\tClaimLossDate3,\n\tClaimReportedDate3,\n\tClaimCatastropheCode3,\n\tClaimCatastropheStartDate3,\n\tClaimTransactionDate3,\n\tTransactionCode3,\n\tTransactionCodeDescription3,\n\tTransactionType3,\n\tTransactionAmount3,\n\tTransactionHistoryAmount3,\n\tSourceSequenceNumber3,\n\tTransactionNumber3,\n\tWorkersCompensationMedicalLossOutstanding3,\n\tWorkersCompensationMedicalExpenseOutstanding3,\n\tWorkersCompensationIndemnityExpenseOutstanding3,\n\tWorkersCompensationIndemnityLossOutstanding3,\n\tPropertyCasualtyExpenseOutstanding3,\n\tPropertyCasualtyLossOutstanding3,\n\tContainsOutstandingReserveAmount3,\n\tReinsuranceUmbrellaLayer3,\n\tClaimRelationshipId3,\n\tSapiensReinsuranceClaimId3,\n\tAuditId3,\n\tSYSDATE AS CurrentDateTime,\n\tClaimsQueueNumber3,\n\t-- *INF*: IIF(SubClaim3=v_PreviousSubClaim,\r\n\t-- v_PreviousSSN,\r\n\t-- SourceSequenceNumber3)\n\tIFF(SubClaim3 = v_PreviousSubClaim, v_PreviousSSN, SourceSequenceNumber3) AS v_SSN,\n\tv_SSN AS o_SSN,\n\tv_SSN AS v_PreviousSSN,\n\t-- *INF*: IIF(SubClaim3=v_PreviousSubClaim,\r\n\t-- v_PreviousTransactionNumber,\r\n\t-- TransactionNumber3)\n\tIFF(SubClaim3 = v_PreviousSubClaim, v_PreviousTransactionNumber, TransactionNumber3) AS v_TransactionNumber,\n\tv_TransactionNumber AS o_TransactionNumber,\n\tv_TransactionNumber AS v_PreviousTransactionNumber,\n\tSubClaim3 AS v_PreviousSubClaim\n\tFROM SRT_BySubClaim\n),\nLKP_ArchSapiensReinsuranceClaim AS (\n\tSELECT\n\tArchSapiensReinsuranceClaimId,\n\ti_SapiensReinsuranceClaimId,\n\ti_AuditId,\n\tSapiensReinsuranceClaimId,\n\tAuditId\n\tFROM (\n\t\tSELECT \n\t\t\tArchSapiensReinsuranceClaimId,\n\t\t\ti_SapiensReinsuranceClaimId,\n\t\t\ti_AuditId,\n\t\t\tSapiensReinsuranceClaimId,\n\t\t\tAuditId\n\t\tFROM ArchSapiensReinsuranceClaim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SapiensReinsuranceClaimId,AuditId ORDER BY ArchSapiensReinsuranceClaimId) = 1\n),\nUPD_ArchSapiensReinsuranceClaim AS (\n\tSELECT\n\tLKP_ArchSapiensReinsuranceClaim.ArchSapiensReinsuranceClaimId, \n\tEXP_SameSSNAcrossFinancialTypes.o_SSN AS SourceSequenceNumber, \n\tEXP_SameSSNAcrossFinancialTypes.o_TransactionNumber AS TransactionNumber, \n\tEXP_SameSSNAcrossFinancialTypes.CurrentDateTime\n\tFROM EXP_SameSSNAcrossFinancialTypes\n\tLEFT JOIN LKP_ArchSapiensReinsuranceClaim\n\tON LKP_ArchSapiensReinsuranceClaim.SapiensReinsuranceClaimId = EXP_SameSSNAcrossFinancialTypes.SapiensReinsuranceClaimId3 AND LKP_ArchSapiensReinsuranceClaim.AuditId = EXP_SameSSNAcrossFinancialTypes.AuditId3\n),\nArchSapiensReinsuranceClaim AS (\n\tMERGE INTO ArchSapiensReinsuranceClaim AS T\n\tUSING UPD_ArchSapiensReinsuranceClaim AS S\n\tON T.ArchSapiensReinsuranceClaimId = S.ArchSapiensReinsuranceClaimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.CurrentDateTime, T.SourceSequenceNumber = S.SourceSequenceNumber, T.TransactionNumber = S.TransactionNumber\n),\nEXP_Accounting_Claims_Payments AS (\n\tSELECT\n\tSourceSequenceNumber AS Header_Source_Seq_Num,\n\tFinancialTypeCode AS i_FinancialTypeCode,\n\tProductCode AS i_ProductCode,\n\tCauseOfLoss AS i_CauseOfLoss,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tINDEXOF(i_FinancialTypeCode,'D','E') > 0,\r\n\t-- \tDECODE(TRUE,\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\t'WCM',\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\t'WME',\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\t'WCE',\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\t'WCI',\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode <> '100',\r\n\t-- \t\t'IDM',\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode <> '100',\r\n\t-- \t\t'EXP',\r\n\t-- \t\t''),\r\n\t-- \tINDEXOF(i_FinancialTypeCode,'R','S','B') > 0,\r\n\t-- \tDECODE(TRUE,\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\t'WCM',\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\t'WME',\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\t'WCE',\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\t'WCI',\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode <> '100',\r\n\t-- \t\t'IDM',\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode <> '100',\r\n\t-- \t\t'EXP',\r\n\t-- \t\t'')\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    INDEXOF(i_FinancialTypeCode, 'D', 'E') > 0, DECODE(\n\t        TRUE,\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'WCM',\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'WME',\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'WCE',\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'WCI',\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode <> '100', 'IDM',\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode <> '100', 'EXP',\n\t        ''\n\t    ),\n\t    INDEXOF(i_FinancialTypeCode, 'R', 'S', 'B') > 0, DECODE(\n\t        TRUE,\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'WCM',\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'WME',\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'WCE',\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'WCI',\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode <> '100', 'IDM',\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode <> '100', 'EXP',\n\t        ''\n\t    )\n\t) AS o_Accounting_Item,\n\tWorkersCompensationMedicalLossPaid AS i_WorkersCompensationMedicalLossPaid,\n\tWorkersCompensationMedicalExpensePaid AS i_WorkersCompensationMedicalExpensePaid,\n\tWorkersCompensationIndemnityExpensePaid AS i_WorkersCompensationIndemnityExpensePaid,\n\tWorkersCompensationIndemnityLossPaid AS i_WorkersCompensationIndemnityLossPaid,\n\tPropertyCasualtyExpensePaid AS i_PropertyCasualtyExpensePaid,\n\tPropertyCasualtyLossPaid AS i_PropertyCasualtyLossPaid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tINDEXOF(i_FinancialTypeCode,'D','E') > 0,\r\n\t-- \tDECODE(TRUE,\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\ti_WorkersCompensationMedicalLossPaid,\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\ti_WorkersCompensationMedicalExpensePaid,\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\ti_WorkersCompensationIndemnityExpensePaid,\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\ti_WorkersCompensationIndemnityLossPaid,\r\n\t-- \t\ti_FinancialTypeCode = 'D' AND i_ProductCode <> '100',\r\n\t-- \t\ti_PropertyCasualtyLossPaid,\r\n\t-- \t\ti_FinancialTypeCode = 'E' AND i_ProductCode <> '100',\r\n\t-- \t\ti_PropertyCasualtyExpensePaid,\r\n\t-- \t\tNULL),\r\n\t-- \tINDEXOF(i_FinancialTypeCode,'R','S','B') > 0,\r\n\t-- \tDECODE(TRUE,\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\ti_WorkersCompensationMedicalLossPaid,\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t\ti_WorkersCompensationMedicalExpensePaid,\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\ti_WorkersCompensationIndemnityExpensePaid,\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t\ti_WorkersCompensationIndemnityLossPaid,\r\n\t-- \t\tClaimTransactionCategory <> 'EX' AND i_ProductCode <> '100',\r\n\t-- \t\ti_PropertyCasualtyLossPaid,\r\n\t-- \t\tClaimTransactionCategory = 'EX' AND i_ProductCode <> '100',\r\n\t-- \t\ti_PropertyCasualtyExpensePaid,\r\n\t-- \t\tNULL)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    INDEXOF(i_FinancialTypeCode, 'D', 'E') > 0, DECODE(\n\t        TRUE,\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalLossPaid,\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalExpensePaid,\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityExpensePaid,\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityLossPaid,\n\t        i_FinancialTypeCode = 'D' AND i_ProductCode <> '100', i_PropertyCasualtyLossPaid,\n\t        i_FinancialTypeCode = 'E' AND i_ProductCode <> '100', i_PropertyCasualtyExpensePaid,\n\t        NULL\n\t    ),\n\t    INDEXOF(i_FinancialTypeCode, 'R', 'S', 'B') > 0, DECODE(\n\t        TRUE,\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalLossPaid,\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalExpensePaid,\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityExpensePaid,\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityLossPaid,\n\t        ClaimTransactionCategory <> 'EX' AND i_ProductCode <> '100', i_PropertyCasualtyLossPaid,\n\t        ClaimTransactionCategory = 'EX' AND i_ProductCode <> '100', i_PropertyCasualtyExpensePaid,\n\t        NULL\n\t    )\n\t) AS o_Accounting_Amount,\n\t'USD' AS Currency_Code,\n\tClaimTransactionCategory,\n\tSourceSystemID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM RTR_Payments_Reserves_ReinsurancePayments\n),\nSapiensReinsuranceAccountingItemsExtract_Payments AS (\n\tTRUNCATE TABLE SapiensReinsuranceAccountingItemsExtract;\n\tINSERT INTO SapiensReinsuranceAccountingItemsExtract\n\t(SOURCE_SEQ_NUM, ACCOUNTING_ITEM, ACOUNTING_AMOUNT, CURRENCY_CODE, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\to_Accounting_Item AS ACCOUNTING_ITEM, \n\to_Accounting_Amount AS ACOUNTING_AMOUNT, \n\tCurrency_Code AS CURRENCY_CODE, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Accounting_Claims_Payments\n),\nEXP_Dates_Claims_Payments AS (\n\tSELECT\n\tSourceSequenceNumber,\n\t'LSS' AS LossDateCode,\n\tClaimLossDate AS i_ClaimLossDate,\n\t-- *INF*: TO_CHAR(i_ClaimLossDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimLossDate, 'YYYYMMDD') AS o_ClaimLossDate,\n\t'OSP' AS TransactionDateCode,\n\tClaimTransactionDate AS i_ClaimTransactionDate,\n\t-- *INF*: TO_CHAR(i_ClaimTransactionDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimTransactionDate, 'YYYYMMDD') AS o_ClaimTransactionDate,\n\t'OPC' AS ClaimReportedDateCode,\n\tClaimReportedDate AS i_ClaimReportedDate,\n\t-- *INF*: TO_CHAR(i_ClaimReportedDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimReportedDate, 'YYYYMMDD') AS o_ClaimReportedDate,\n\t'PRC' AS ProcessDateCode,\n\t-- *INF*: TO_CHAR(i_ClaimTransactionDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimTransactionDate, 'YYYYMMDD') AS o_ProcessDate,\n\t'EVT' AS CatastropheDateCode,\n\tClaimCatastropheStartDate AS i_ClaimCatastropheStartDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tTO_CHAR(i_ClaimCatastropheStartDate,'YYYYMMDD')='18000101',\r\n\t-- \tNULL,\r\n\t-- \tTO_CHAR(i_ClaimCatastropheStartDate,'YYYYMMDD'))\n\tDECODE(\n\t    TRUE,\n\t    TO_CHAR(i_ClaimCatastropheStartDate, 'YYYYMMDD') = '18000101', NULL,\n\t    TO_CHAR(i_ClaimCatastropheStartDate, 'YYYYMMDD')\n\t) AS o_CatastropheDate\n\tFROM RTR_Payments_Reserves_ReinsurancePayments\n),\nNRM_Claims_Dates AS (\n),\nFIL_Claims_Dates AS (\n\tSELECT\n\tHeader_Source_Seq_Num, \n\tDate_Code, \n\tDave_Value AS Date_Value\n\tFROM NRM_Claims_Dates\n\tWHERE NOT ISNULL(Date_Value)\n),\nEXP_Claims_Dates_Tgt_DataCollect AS (\n\tSELECT\n\tHeader_Source_Seq_Num,\n\tDate_Code,\n\tDate_Value AS in_Date_Value,\n\t-- *INF*: to_date(in_Date_Value,'YYYYMMDD')\n\tTO_TIMESTAMP(in_Date_Value, 'YYYYMMDD') AS out_Date_Value,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM FIL_Claims_Dates\n),\nSapiensReinsuranceDatesExtract_Payments AS (\n\tTRUNCATE TABLE SapiensReinsuranceDatesExtract;\n\tINSERT INTO SapiensReinsuranceDatesExtract\n\t(SOURCE_SEQ_NUM, DATE_CODE, DATE_VALUE, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tDate_Code AS DATE_CODE, \n\tout_Date_Value AS DATE_VALUE, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Claims_Dates_Tgt_DataCollect\n),\nAGG_To_SubClaim AS (\n\tSELECT\n\tSubClaim3,\n\to_SSN AS SourceSequenceNumber,\n\tClaimLossDate3,\n\tClaimTransactionDate3,\n\t-- *INF*: MAX(ClaimTransactionDate3)\n\tMAX(ClaimTransactionDate3) AS o_ClaimTransactionDate,\n\tClaimReportedDate3,\n\tClaimCatastropheStartDate3,\n\tInsuranceReferenceLineOfBusinessCode3,\n\tProductCode3,\n\tAccountingProductCode3,\n\tASLCode3,\n\tSubASLCode3,\n\tStrategicProfitCenterAbbreviation3,\n\tRiskStateCode3,\n\tClaimCatastropheCode3,\n\tPolicyKey3,\n\to_TransactionNumber AS TransactionNumber3,\n\tClaimNumber3,\n\tReinsuranceUmbrellaLayer3,\n\tClaimRelationshipId3,\n\tClaimantFullName3,\n\tClaimsQueueNumber3\n\tFROM EXP_SameSSNAcrossFinancialTypes\n\tGROUP BY SubClaim3\n),\nEXP_Dates_Claims_Reserves AS (\n\tSELECT\n\tSourceSequenceNumber,\n\t'LSS' AS LossDateCode,\n\tClaimLossDate3 AS i_ClaimLossDate,\n\t-- *INF*: TO_CHAR(i_ClaimLossDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimLossDate, 'YYYYMMDD') AS o_ClaimLossDate,\n\t'OSP' AS TransactionDateCode,\n\to_ClaimTransactionDate AS i_ClaimTransactionDate,\n\t-- *INF*: TO_CHAR(i_ClaimTransactionDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimTransactionDate, 'YYYYMMDD') AS o_ClaimTransactionDate,\n\t'OPC' AS ClaimReportedDateCode,\n\tClaimReportedDate3 AS i_ClaimReportedDate,\n\t-- *INF*: TO_CHAR(i_ClaimReportedDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimReportedDate, 'YYYYMMDD') AS o_ClaimReportedDate,\n\t'PRC' AS ProcessDateCode,\n\t-- *INF*: TO_CHAR(i_ClaimTransactionDate,'YYYYMMDD')\n\tTO_CHAR(i_ClaimTransactionDate, 'YYYYMMDD') AS o_ProcessDate,\n\t'EVT' AS CatastropheDateCode,\n\tClaimCatastropheStartDate3 AS i_ClaimCatastropheStartDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tTO_CHAR(i_ClaimCatastropheStartDate,'YYYYMMDD')='18000101',\r\n\t-- \tNULL,\r\n\t-- \tTO_CHAR(i_ClaimCatastropheStartDate,'YYYYMMDD'))\n\tDECODE(\n\t    TRUE,\n\t    TO_CHAR(i_ClaimCatastropheStartDate, 'YYYYMMDD') = '18000101', NULL,\n\t    TO_CHAR(i_ClaimCatastropheStartDate, 'YYYYMMDD')\n\t) AS o_ClaimCatastropheDate\n\tFROM AGG_To_SubClaim\n),\nNRM_Claims_Dates1 AS (\n),\nFIL_Claims_Dates1 AS (\n\tSELECT\n\tHeader_Source_Seq_Num, \n\tDate_Code, \n\tDave_Value AS Date_Value\n\tFROM NRM_Claims_Dates1\n\tWHERE NOT ISNULL(Date_Value)\n),\nEXP_Claims_Dates_Tgt_DataCollect1 AS (\n\tSELECT\n\tHeader_Source_Seq_Num,\n\tDate_Code,\n\tDate_Value AS in_Date_Value,\n\t-- *INF*: to_date(in_Date_Value,'YYYYMMDD')\n\tTO_TIMESTAMP(in_Date_Value, 'YYYYMMDD') AS out_Date_Value,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM FIL_Claims_Dates1\n),\nSapiensReinsuranceDatesExtract_Reserves AS (\n\tINSERT INTO SapiensReinsuranceDatesExtract\n\t(SOURCE_SEQ_NUM, DATE_CODE, DATE_VALUE, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tDate_Code AS DATE_CODE, \n\tout_Date_Value AS DATE_VALUE, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Claims_Dates_Tgt_DataCollect1\n),\nEXP_Header_Claims_Payments AS (\n\tSELECT\n\tSourceSequenceNumber AS Header_Source_Seq_Num,\n\t'SRL' AS Data_Source,\n\t'WBMI' AS Company_Code,\n\tPolicyKey AS pol_key,\n\t'' AS Object_ID,\n\t'' AS Header_Endorsement_No,\n\tTransactionNumber AS Header_TransactionNumber,\n\t'A' AS Header_Document_Type,\n\tClaimNumber AS Claim_Number,\n\tSubClaim AS Sub_Claim_Id,\n\t'' AS Is_Borderaeu,\n\t'CED' AS Business_Ind,\n\t'' AS Exception_Ind,\n\t-- *INF*: IIF(ISNULL(@{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}=0,\r\n\t-- 1,\r\n\t-- @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}\r\n\t-- )\n\tIFF(@{pipeline().parameters.NUMBEROFCLAIMSQUEUES} IS NULL or @{pipeline().parameters.NUMBEROFCLAIMSQUEUES} = 0, 1, @{pipeline().parameters.NUMBEROFCLAIMSQUEUES}) AS v_NumberOfClaimsQueues,\n\tClaimsQueueNumber,\n\t'P&C' AS Business_Deprtmt,\n\t'' AS XOL_Allocation,\n\t'' AS Assumed_Company,\n\tClaimTransactionDate AS i_Accounting_Date,\n\t-- *INF*: TO_INTEGER(TO_CHAR(i_Accounting_Date,'YYYYMM'))\n\tCAST(TO_CHAR(i_Accounting_Date, 'YYYYMM') AS INTEGER) AS o_AccountingMonth,\n\t'1' AS Subsystem_Id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM RTR_Payments_Reserves_ReinsurancePayments\n),\nSapiensReinsuranceHeaderExtract_Payments AS (\n\tTRUNCATE TABLE SapiensReinsuranceHeaderExtract;\n\tINSERT INTO SapiensReinsuranceHeaderExtract\n\t(SOURCE_SEQ_NUM, DATA_SOURCE, COMPANY_CODE, POLICY_NO, OBJECT_ID, ENDORSEMENT_NO, TRAN_NO, DOCUMENT_TYPE, CLAIM_ID, SUB_CLAIM_ID, IS_BORDERAEU, BUSINESS_IND, EXCEPTION_IND, QUEUE_NO, BUSINESS_DEPRTMT, XOL_ALLOCATION, ASSUMED_COMPANY, ACCOUNTING_MONTH, SUBSYSTEM_ID, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tData_Source AS DATA_SOURCE, \n\tCompany_Code AS COMPANY_CODE, \n\tpol_key AS POLICY_NO, \n\tObject_ID AS OBJECT_ID, \n\tHeader_Endorsement_No AS ENDORSEMENT_NO, \n\tHeader_TransactionNumber AS TRAN_NO, \n\tHeader_Document_Type AS DOCUMENT_TYPE, \n\tClaim_Number AS CLAIM_ID, \n\tSub_Claim_Id AS SUB_CLAIM_ID, \n\tIs_Borderaeu AS IS_BORDERAEU, \n\tBusiness_Ind AS BUSINESS_IND, \n\tException_Ind AS EXCEPTION_IND, \n\tClaimsQueueNumber AS QUEUE_NO, \n\tBusiness_Deprtmt AS BUSINESS_DEPRTMT, \n\tXOL_Allocation AS XOL_ALLOCATION, \n\tAssumed_Company AS ASSUMED_COMPANY, \n\to_AccountingMonth AS ACCOUNTING_MONTH, \n\tSubsystem_Id AS SUBSYSTEM_ID, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Header_Claims_Payments\n),\nEXP_Header_Claims_Reserves AS (\n\tSELECT\n\tSourceSequenceNumber AS Header_Source_Seq_Num,\n\t'SRL' AS Data_Source,\n\t'WBMI' AS Company_Code,\n\tPolicyKey3 AS pol_key,\n\t'' AS Object_ID,\n\t'' AS Header_Endorsement_No,\n\tTransactionNumber3 AS Header_TransactionNumber,\n\t'O' AS Header_Document_Type,\n\tClaimNumber3 AS Claim_Number,\n\tSubClaim3 AS Sub_Claim_Id,\n\t'' AS Is_Borderaeu,\n\t'CED' AS Business_Ind,\n\t'' AS Exception_Ind,\n\t-- *INF*: IIF(ISNULL(@{pipeline().parameters.NUMBEROFPOLICYQUEUES}) or @{pipeline().parameters.NUMBEROFPOLICYQUEUES}=0,\r\n\t-- 1,\r\n\t-- @{pipeline().parameters.NUMBEROFPOLICYQUEUES}\r\n\t-- )\n\tIFF(@{pipeline().parameters.NUMBEROFPOLICYQUEUES} IS NULL or @{pipeline().parameters.NUMBEROFPOLICYQUEUES} = 0, 1, @{pipeline().parameters.NUMBEROFPOLICYQUEUES}) AS v_NumberOfPolicyQueues,\n\tClaimsQueueNumber3 AS ClaimsQueueNumber,\n\t'P&C' AS Business_Deprtmt,\n\t'' AS XOL_Allocation,\n\t'' AS Assumed_Company,\n\to_ClaimTransactionDate AS i_Accounting_Date,\n\t-- *INF*: TO_INTEGER(TO_CHAR(i_Accounting_Date,'YYYYMM'))\n\tCAST(TO_CHAR(i_Accounting_Date, 'YYYYMM') AS INTEGER) AS o_AccountingMonth,\n\t'1' AS Subsystem_Id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM AGG_To_SubClaim\n),\nSapiensReinsuranceHeaderExtract_Reserves AS (\n\tINSERT INTO SapiensReinsuranceHeaderExtract\n\t(SOURCE_SEQ_NUM, DATA_SOURCE, COMPANY_CODE, POLICY_NO, OBJECT_ID, ENDORSEMENT_NO, TRAN_NO, DOCUMENT_TYPE, CLAIM_ID, SUB_CLAIM_ID, IS_BORDERAEU, BUSINESS_IND, EXCEPTION_IND, QUEUE_NO, BUSINESS_DEPRTMT, XOL_ALLOCATION, ASSUMED_COMPANY, ACCOUNTING_MONTH, SUBSYSTEM_ID, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tData_Source AS DATA_SOURCE, \n\tCompany_Code AS COMPANY_CODE, \n\tpol_key AS POLICY_NO, \n\tObject_ID AS OBJECT_ID, \n\tHeader_Endorsement_No AS ENDORSEMENT_NO, \n\tHeader_TransactionNumber AS TRAN_NO, \n\tHeader_Document_Type AS DOCUMENT_TYPE, \n\tClaim_Number AS CLAIM_ID, \n\tSub_Claim_Id AS SUB_CLAIM_ID, \n\tIs_Borderaeu AS IS_BORDERAEU, \n\tBusiness_Ind AS BUSINESS_IND, \n\tException_Ind AS EXCEPTION_IND, \n\tClaimsQueueNumber AS QUEUE_NO, \n\tBusiness_Deprtmt AS BUSINESS_DEPRTMT, \n\tXOL_Allocation AS XOL_ALLOCATION, \n\tAssumed_Company AS ASSUMED_COMPANY, \n\to_AccountingMonth AS ACCOUNTING_MONTH, \n\tSubsystem_Id AS SUBSYSTEM_ID, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Header_Claims_Reserves\n),\nEXP_Attributes_Claims_Payments AS (\n\tSELECT\n\tClaimLossDate AS i_ClaimLossDate,\n\tSourceSequenceNumber AS Header_Source_Seq_Num,\n\t'LOB' AS out_LOB_Code,\n\tInsuranceReferenceLineOfBusinessCode AS LOB_Value,\n\t'PDT' AS out_ProductCode_Code,\n\tProductCode AS ProductCode_Value,\n\t'ACP' AS out_AccountingProduct_Code,\n\tAccountingProductCode,\n\t'ASL' AS out_asl_code_Code,\n\tASLCode AS asl_code_Value,\n\t'SAS' AS out_sub_asl_code_Code,\n\tSubASLCode AS sub_asl_code_Value,\n\t'PCN' AS out_StrategicProfitCenter_Code,\n\tStrategicProfitCenterAbbreviation AS StrategicProfitCenter_Value,\n\t-- *INF*: REPLACECHR(false,\r\n\t-- \tIIF(StrategicProfitCenter_Value='Argent',\r\n\t-- \t\t'A',\r\n\t-- \t\tStrategicProfitCenter_Value)\r\n\t-- , ' ', '')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        StrategicProfitCenter_Value = 'Argent', 'A', StrategicProfitCenter_Value\n\t    ),' ','') AS out_StrategicProfitCenter_Value,\n\t'RKS' AS out_RiskState_Code,\n\tRiskStateCode AS RiskState_Value,\n\t-- *INF*: substr(RiskState_Value, 1, 50)\n\tsubstr(RiskState_Value, 1, 50) AS out_RiskState_Value,\n\t'COM' AS out_Company_Code,\n\t'WBMI' AS Company_Value,\n\t'SNA' AS O_UmbrellaLayer_Code,\n\tReinsuranceUmbrellaLayer AS i_ReinsuranceUmbrellalayer,\n\t-- *INF*: IIF(NOT ISNULL(i_ReinsuranceUmbrellalayer),\r\n\t-- TO_CHAR(i_ReinsuranceUmbrellalayer),\r\n\t-- NULL)\n\tIFF(i_ReinsuranceUmbrellalayer IS NOT NULL, TO_CHAR(i_ReinsuranceUmbrellalayer), NULL) AS O_ReinsuranceUmbrellalayer,\n\t'EVT' AS o_Catastrophe_Attribute,\n\t'EVN' AS o_Catastrophe_Code,\n\tClaimCatastropheCode AS i_ClaimCatastropheCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_ClaimLossDate <\r\n\t-- TO_DATE('2018-01-01','YYYY-MM-DD'), NULL,\r\n\t-- i_ClaimCatastropheCode='N/A',\r\n\t-- NULL,\r\n\t-- 'CAT')\r\n\t-- -- Only send CAT for date of losses 2018 and after if there is a cat code\n\tDECODE(\n\t    TRUE,\n\t    i_ClaimLossDate < TO_TIMESTAMP('2018-01-01', 'YYYY-MM-DD'), NULL,\n\t    i_ClaimCatastropheCode = 'N/A', NULL,\n\t    'CAT'\n\t) AS o_ClaimCatastropheValue,\n\t-- *INF*: IIF(i_ClaimCatastropheCode='N/A',\r\n\t-- NULL,\r\n\t-- i_ClaimCatastropheCode)\n\tIFF(i_ClaimCatastropheCode = 'N/A', NULL, i_ClaimCatastropheCode) AS o_ClaimCatastropheCode,\n\t'HIS' AS o_HistoricalLoad_Code,\n\tClaimTransactionDate,\n\t-- *INF*: @{pipeline().parameters.HIS_VALUE}\r\n\t-- --IIF(RTRIM(@{pipeline().parameters.ACCOUNTINGFLAG})='', NULL, @{pipeline().parameters.ACCOUNTINGFLAG})\n\t@{pipeline().parameters.HIS_VALUE} AS o_HistoricalLoadValue,\n\t'EVR' AS o_ClaimRelationship_Code,\n\tClaimRelationshipId AS i_ClaimRelationshipId,\n\t-- *INF*: IIF(NOT ISNULL(i_ClaimRelationshipId),\r\n\t-- TO_CHAR(i_ClaimRelationshipId),\r\n\t-- NULL)\n\tIFF(i_ClaimRelationshipId IS NOT NULL, TO_CHAR(i_ClaimRelationshipId), NULL) AS o_ClaimRelationshipId,\n\t'CLT' AS o_ClaimantName_Code,\n\tClaimantFullName AS ClaimantName,\n\t0 AS Out_Obj_Val_Seq_no\n\tFROM RTR_Payments_Reserves_ReinsurancePayments\n),\nNRM_Claims_Attributes AS (\n),\nFIL_Claims_Attributes AS (\n\tSELECT\n\tHeader_Source_Seq_Num, \n\tAttr_Code, \n\tAttr_Value, \n\tObj_Val_Seq_no\n\tFROM NRM_Claims_Attributes\n\tWHERE NOT ISNULL(Attr_Value)\n),\nEXP_AddMetadata_Attributes_Payments AS (\n\tSELECT\n\tHeader_Source_Seq_Num,\n\tAttr_Code,\n\tAttr_Value,\n\tObj_Val_Seq_no,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM FIL_Claims_Attributes\n),\nSapiensReinsuranceAttributesExtract_Payments AS (\n\tTRUNCATE TABLE SapiensReinsuranceAttributesExtract;\n\tINSERT INTO SapiensReinsuranceAttributesExtract\n\t(SOURCE_SEQ_NUM, ATTR_CODE, ATTR_VAL, OBJ_VAL_SEQ_NO, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tAttr_Code AS ATTR_CODE, \n\tAttr_Value AS ATTR_VAL, \n\tObj_Val_Seq_no AS OBJ_VAL_SEQ_NO, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_AddMetadata_Attributes_Payments\n),\nEXP_Accounting_Claims_Reserves AS (\n\tSELECT\n\to_SSN AS Header_Source_Seq_Num,\n\tFinancialTypeCode3 AS i_FinancialTypeCode,\n\tProductCode3 AS i_ProductCode,\n\tCauseOfLoss3 AS i_CauseOfLoss,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t'OWM',\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \t'OWE',\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t'OWC',\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \t'OWI',\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode <> '100',\r\n\t-- \t'ODM',\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode <> '100',\r\n\t-- \t'OXP',\r\n\t-- \t'')\n\tDECODE(\n\t    TRUE,\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'OWM',\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', 'OWE',\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'OWC',\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', 'OWI',\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode <> '100', 'ODM',\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode <> '100', 'OXP',\n\t    ''\n\t) AS o_Accounting_Item,\n\tWorkersCompensationMedicalLossOutstanding3 AS i_WorkersCompensationMedicalLossOutstanding,\n\tWorkersCompensationMedicalExpenseOutstanding3 AS i_WorkersCompensationMedicalExpenseOutstanding,\n\tWorkersCompensationIndemnityExpenseOutstanding3 AS i_WorkersCompensationIndemnityExpenseOutstanding,\n\tWorkersCompensationIndemnityLossOutstanding3 AS i_WorkersCompensationIndemnityLossOutstanding,\n\tPropertyCasualtyExpenseOutstanding3 AS i_PropertyCasualtyExpenseOutstanding,\n\tPropertyCasualtyLossOutstanding3 AS i_PropertyCasualtyLossOutstanding,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \ti_WorkersCompensationMedicalLossOutstanding,\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06',\r\n\t-- \ti_WorkersCompensationMedicalExpenseOutstanding,\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \ti_WorkersCompensationIndemnityExpenseOutstanding,\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06',\r\n\t-- \ti_WorkersCompensationIndemnityLossOutstanding,\r\n\t-- \ti_FinancialTypeCode = 'D' AND i_ProductCode <> '100',\r\n\t-- \ti_PropertyCasualtyLossOutstanding,\r\n\t-- \ti_FinancialTypeCode = 'E' AND i_ProductCode <> '100',\r\n\t-- \ti_PropertyCasualtyExpenseOutstanding,\r\n\t-- \tNULL)\n\tDECODE(\n\t    TRUE,\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalLossOutstanding,\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss = '06', i_WorkersCompensationMedicalExpenseOutstanding,\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityExpenseOutstanding,\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode = '100' AND i_CauseOfLoss <> '06', i_WorkersCompensationIndemnityLossOutstanding,\n\t    i_FinancialTypeCode = 'D' AND i_ProductCode <> '100', i_PropertyCasualtyLossOutstanding,\n\t    i_FinancialTypeCode = 'E' AND i_ProductCode <> '100', i_PropertyCasualtyExpenseOutstanding,\n\t    NULL\n\t) AS o_Accounting_Amount,\n\t'USD' AS Currency_Code,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM EXP_SameSSNAcrossFinancialTypes\n),\nSapiensReinsuranceAccountingItemsExtract_Reserves AS (\n\tINSERT INTO SapiensReinsuranceAccountingItemsExtract\n\t(SOURCE_SEQ_NUM, ACCOUNTING_ITEM, ACOUNTING_AMOUNT, CURRENCY_CODE, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\to_Accounting_Item AS ACCOUNTING_ITEM, \n\to_Accounting_Amount AS ACOUNTING_AMOUNT, \n\tCurrency_Code AS CURRENCY_CODE, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_Accounting_Claims_Reserves\n),\nEXP_Attributes_Claims_Reserves AS (\n\tSELECT\n\tClaimLossDate3 AS i_ClaimLossDate,\n\tSourceSequenceNumber AS Header_Source_Seq_Num,\n\t'LOB' AS out_LOB_Code,\n\tInsuranceReferenceLineOfBusinessCode3 AS LOB_Value,\n\t'PDT' AS out_ProductCode_Code,\n\tProductCode3 AS ProductCode_Value,\n\t'ACP' AS out_AccountingProduct_Code,\n\tAccountingProductCode3,\n\t'ASL' AS out_asl_code_Code,\n\tASLCode3 AS asl_code_Value,\n\t'SAS' AS out_sub_asl_code_Code,\n\tSubASLCode3 AS sub_asl_code_Value,\n\t'PCN' AS out_StrategicProfitCenter_Code,\n\tStrategicProfitCenterAbbreviation3 AS StrategicProfitCenter_Value,\n\t-- *INF*: REPLACECHR(false,\r\n\t-- \tIIF(StrategicProfitCenter_Value='Argent',\r\n\t-- \t\t'A',\r\n\t-- \t\tStrategicProfitCenter_Value)\r\n\t-- , ' ', '')\n\tREGEXP_REPLACE(\n\t    IFF(\n\t        StrategicProfitCenter_Value = 'Argent', 'A', StrategicProfitCenter_Value\n\t    ),' ','') AS out_StrategicProfitCenter_Value,\n\t'RKS' AS out_RiskState_Code,\n\tRiskStateCode3 AS RiskState_Value,\n\t-- *INF*: substr(RiskState_Value, 1, 50)\n\tsubstr(RiskState_Value, 1, 50) AS out_RiskState_Value,\n\t'COM' AS out_Company_Code,\n\t'WBMI' AS Company_Value,\n\t'SNA' AS O_UmbrellaLayer_Code,\n\tReinsuranceUmbrellaLayer3 AS i_ReinsuranceUmbrellalayer,\n\t-- *INF*: IIF(NOT ISNULL(i_ReinsuranceUmbrellalayer),\r\n\t-- TO_CHAR(i_ReinsuranceUmbrellalayer),\r\n\t-- NULL)\n\tIFF(i_ReinsuranceUmbrellalayer IS NOT NULL, TO_CHAR(i_ReinsuranceUmbrellalayer), NULL) AS O_ReinsuranceUmbrellalayer,\n\t'EVN' AS o_Catastrophe_Code,\n\t'EVT' AS o_Catastrophe_Attribute,\n\tClaimCatastropheCode3 AS i_ClaimCatastropheCode,\n\t-- *INF*: IIF(i_ClaimCatastropheCode='N/A',\r\n\t-- NULL,\r\n\t-- i_ClaimCatastropheCode)\n\tIFF(i_ClaimCatastropheCode = 'N/A', NULL, i_ClaimCatastropheCode) AS o_ClaimCatastropheCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_ClaimLossDate <\r\n\t-- TO_DATE('2018-01-01','YYYY-MM-DD'), NULL,\r\n\t-- i_ClaimCatastropheCode='N/A',\r\n\t-- NULL,\r\n\t-- 'CAT')\r\n\t-- -- Only send CAT for date of losses 2018 and after if there is a cat code\n\tDECODE(\n\t    TRUE,\n\t    i_ClaimLossDate < TO_TIMESTAMP('2018-01-01', 'YYYY-MM-DD'), NULL,\n\t    i_ClaimCatastropheCode = 'N/A', NULL,\n\t    'CAT'\n\t) AS o_ClaimCatastropheValue,\n\t'HIS' AS o_HistoricalLoad_Code,\n\to_ClaimTransactionDate AS ClaimTransactionDate,\n\t-- *INF*: @{pipeline().parameters.HIS_VALUE}\r\n\t-- --IIF(RTRIM(@{pipeline().parameters.ACCOUNTINGFLAG})='', NULL, @{pipeline().parameters.ACCOUNTINGFLAG})\n\t@{pipeline().parameters.HIS_VALUE} AS o_HistoricalLoadValue,\n\t'EVR' AS o_ClaimRelationship_Code,\n\tClaimRelationshipId3 AS i_ClaimRelationshipId,\n\t-- *INF*: IIF(NOT ISNULL(i_ClaimRelationshipId),\r\n\t-- TO_CHAR(i_ClaimRelationshipId),\r\n\t-- NULL)\n\tIFF(i_ClaimRelationshipId IS NOT NULL, TO_CHAR(i_ClaimRelationshipId), NULL) AS o_ClaimRelationshipId,\n\t'CLT' AS o_ClaimantName_Code,\n\tClaimantFullName3 AS ClaimantName,\n\t0 AS Out_Obj_Val_Seq_no\n\tFROM AGG_To_SubClaim\n),\nNRM_Claims_Attributes1 AS (\n),\nFIL_Claims_Attributes1 AS (\n\tSELECT\n\tHeader_Source_Seq_Num, \n\tAttr_Code, \n\tAttr_Value, \n\tObj_Val_Seq_no\n\tFROM NRM_Claims_Attributes1\n\tWHERE NOT ISNULL(Attr_Value)\n),\nEXP_AddMetadata_Attributes_Reserves AS (\n\tSELECT\n\tHeader_Source_Seq_Num,\n\tAttr_Code,\n\tAttr_Value,\n\tObj_Val_Seq_no,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentDateTime\n\tFROM FIL_Claims_Attributes1\n),\nSapiensReinsuranceAttributesExtract_Reserves AS (\n\tINSERT INTO SapiensReinsuranceAttributesExtract\n\t(SOURCE_SEQ_NUM, ATTR_CODE, ATTR_VAL, OBJ_VAL_SEQ_NO, AuditId, CreatedDate, ModifiedDate)\n\tSELECT \n\tHeader_Source_Seq_Num AS SOURCE_SEQ_NUM, \n\tAttr_Code AS ATTR_CODE, \n\tAttr_Value AS ATTR_VAL, \n\tObj_Val_Seq_no AS OBJ_VAL_SEQ_NO, \n\tAUDITID, \n\tCurrentDateTime AS CREATEDDATE, \n\tCurrentDateTime AS MODIFIEDDATE\n\tFROM EXP_AddMetadata_Attributes_Reserves\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NUMBEROFPOLICYQUEUES": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUMBEROFCLAIMSQUEUES": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "HIS_VALUE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "ACCOUNTINGFLAG": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}