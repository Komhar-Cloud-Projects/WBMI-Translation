{
    "name": "s_m_CLM_LOAD_Reinsurance_SapiensClaimError",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_LOAD_Reinsurance_SapiensClaimError",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Target AS (\n\tSELECT\n\tSapiensClaimErrorId,\n\tClaimTransactionPKId\n\tFROM (\n\t\tSELECT \n\t\t\tSapiensClaimErrorId,\n\t\t\tClaimTransactionPKId\n\t\tFROM SapiensClaimError\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimTransactionPKId ORDER BY SapiensClaimErrorId) = 1\n),\nLKP_WorkSapiensValidCover AS (\n\tSELECT\n\tValue,\n\tCover,\n\tASL,\n\tSAS\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tCover,\n\t\t\tASL,\n\t\t\tSAS\n\t\tFROM WorkSapiensValidCover\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Cover,Value,ASL,SAS ORDER BY Value) = 1\n),\nSQ_SapiensReinsuranceClaim AS (\n\tSELECT\n\t\tSapiensReinsuranceClaimId,\n\t\tClaimNumber,\n\t\tPolicyKey,\n\t\tProductCode,\n\t\tAccountingProductCode,\n\t\tStrategicProfitCenterAbbreviation,\n\t\tASLCode,\n\t\tSubASLCode,\n\t\tInsuranceReferenceLineOfBusinessCode,\n\t\tRiskStateCode,\n\t\tSubClaim,\n\t\tFinancialTypeCode,\n\t\tFinancialTypeCodeDescription,\n\t\tCauseOfLoss,\n\t\tClaimantNumber,\n\t\tClaimantFullName,\n\t\tClaimLossDate,\n\t\tClaimReportedDate,\n\t\tClaimCatastropheCode,\n\t\tClaimCatastropheStartDate,\n\t\tClaimCatastropheEndDate,\n\t\tClaimTransactionDate,\n\t\tTransactionCode,\n\t\tTransactionCodeDescription,\n\t\tTransactionType,\n\t\tTransactionAmount,\n\t\tTransactionHistoryAmount,\n\t\tSourceSequenceNumber,\n\t\tTransactionNumber,\n\t\tWorkersCompensationMedicalLossPaid,\n\t\tWorkersCompensationMedicalExpensePaid,\n\t\tWorkersCompensationIndemnityExpensePaid,\n\t\tWorkersCompensationIndemnityLossPaid,\n\t\tPropertyCasualtyExpensePaid,\n\t\tPropertyCasualtyLossPaid,\n\t\tWorkersCompensationMedicalLossOutstanding,\n\t\tWorkersCompensationMedicalExpenseOutstanding,\n\t\tWorkersCompensationIndemnityExpenseOutstanding,\n\t\tWorkersCompensationIndemnityLossOutstanding,\n\t\tPropertyCasualtyExpenseOutstanding,\n\t\tPropertyCasualtyLossOutstanding,\n\t\tClaimTransactionPKId,\n\t\tContainsOutstandingReserveAmountFlag,\n\t\tReinsuranceUmbrellaLayer,\n\t\tClaimRelationshipId,\n\t\tClaimTransactionCategory,\n\t\tSourceSystemID\n\tFROM SapiensReinsuranceClaim\n),\nEXP_Evaluate_Covers AS (\n\tSELECT\n\tSapiensReinsuranceClaimId,\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\t-- *INF*: rtrim(ProductCode)\n\trtrim(ProductCode) AS v_ProductCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('PDT',v_ProductCode,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL.Value AS v_ProductCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ProductCode = v_ProductCode_Valid, '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_ProductCode = v_ProductCode_Valid, '1',\n\t    '0'\n\t) AS PDTInd,\n\tAccountingProductCode,\n\t-- *INF*: rtrim(AccountingProductCode)\n\trtrim(AccountingProductCode) AS v_AccountingProductCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('ACP',v_AccountingProductCode,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL.Value AS v_AccountingProductCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_AccountingProductCode = v_AccountingProductCode_Valid, '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_AccountingProductCode = v_AccountingProductCode_Valid, '1',\n\t    '0'\n\t) AS ACPInd,\n\tStrategicProfitCenterAbbreviation,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- StrategicProfitCenterAbbreviation  = 'NSI','NSI',\r\n\t-- StrategicProfitCenterAbbreviation =  'WB-PL', 'WB-PL',\r\n\t-- StrategicProfitCenterAbbreviation =  'WB - PL', 'WB-PL',\r\n\t-- StrategicProfitCenterAbbreviation =  'WB-CL', 'WB-CL',\r\n\t-- StrategicProfitCenterAbbreviation =  'WB - CL', 'WB-CL',\r\n\t-- StrategicProfitCenterAbbreviation =  'Argent', 'A'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    StrategicProfitCenterAbbreviation = 'NSI', 'NSI',\n\t    StrategicProfitCenterAbbreviation = 'WB-PL', 'WB-PL',\n\t    StrategicProfitCenterAbbreviation = 'WB - PL', 'WB-PL',\n\t    StrategicProfitCenterAbbreviation = 'WB-CL', 'WB-CL',\n\t    StrategicProfitCenterAbbreviation = 'WB - CL', 'WB-CL',\n\t    StrategicProfitCenterAbbreviation = 'Argent', 'A'\n\t) AS v_StrategicProfitCenterAbbreviation,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('PCN',v_StrategicProfitCenterAbbreviation,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL.Value AS v_StrategicProfitCenter_Valid,\n\tv_StrategicProfitCenterAbbreviation AS o_StrategicProfitCenterAbbreviation,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_StrategicProfitCenterAbbreviation = v_StrategicProfitCenter_Valid  AND  NOT ISNULL(v_StrategicProfitCenterAbbreviation), '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_StrategicProfitCenterAbbreviation = v_StrategicProfitCenter_Valid AND v_StrategicProfitCenterAbbreviation IS NOT NULL, '1',\n\t    '0'\n\t) AS PCNInd,\n\tASLCode,\n\t-- *INF*: rtrim(ASLCode)\n\trtrim(ASLCode) AS v_ASLCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('ASL',v_ASLCode,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL.Value AS v_ASLCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ASLCode = v_ASLCode_Valid, '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_ASLCode = v_ASLCode_Valid, '1',\n\t    '0'\n\t) AS ASLInd,\n\tSubASLCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LENGTH(rtrim(SubASLCode)) = 0, NULL, \r\n\t-- LENGTH(RTRIM(SubASLCode)) > 0, RTRIM(SubASLCode)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LENGTH(rtrim(SubASLCode)) = 0, NULL,\n\t    LENGTH(RTRIM(SubASLCode)) > 0, RTRIM(SubASLCode)\n\t) AS v_SubASLCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('SAS',v_SubASLCode,RTRIM(ASLCode),NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL.Value AS v_SubASLCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(v_SubASLCode),'1',\r\n\t-- v_SubASLCode = v_SubASLCode_Valid  AND  NOT ISNULL(v_SubASLCode), '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_SubASLCode IS NULL, '1',\n\t    v_SubASLCode = v_SubASLCode_Valid AND v_SubASLCode IS NOT NULL, '1',\n\t    '0'\n\t) AS SASInd,\n\tInsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: rtrim(InsuranceReferenceLineOfBusinessCode)\n\trtrim(InsuranceReferenceLineOfBusinessCode) AS v_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('LOB',v_InsuranceReferenceLineOfBusinessCode,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL.Value AS v_LineOfBusinessCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_InsuranceReferenceLineOfBusinessCode = v_LineOfBusinessCode_Valid, '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_InsuranceReferenceLineOfBusinessCode = v_LineOfBusinessCode_Valid, '1',\n\t    '0'\n\t) AS LOBInd,\n\tRiskStateCode,\n\t-- *INF*: rtrim(RiskStateCode)\n\trtrim(RiskStateCode) AS v_RiskStateCode,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('RKS',v_RiskStateCode,NULL,NULL)\n\tLKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL.Value AS v_RiskStateCode_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_RiskStateCode = v_RiskStateCode_Valid, '1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    v_RiskStateCode = v_RiskStateCode_Valid, '1',\n\t    '0'\n\t) AS RKSInd,\n\tReinsuranceUmbrellaLayer,\n\t-- *INF*: :LKP.LKP_WORKSAPIENSVALIDCOVER('SNA',ReinsuranceUmbrellaLayer,v_ASLCode,v_SubASLCode)\n\tLKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode.Value AS v_ReinsuranceUmbrellaLayer_Valid,\n\t-- *INF*: DECODE(TRUE,\r\n\t--  ReinsuranceUmbrellaLayer = v_ReinsuranceUmbrellaLayer_Valid, '1',\r\n\t-- '0')\r\n\t-- \r\n\t-- --commented out code where we treated specific returns because nullappears to be valid SNA for ASL/SNA of 220/220\r\n\t-- --(TRUE,\r\n\t-- --v_ASLCode = '220' AND v_SubASLCode = '220' AND isnull(ReinsuranceUmbrellaLayer),'0',\r\n\t-- --v_ASLCode = '220' AND v_SubASLCode = '220' AND NOT isnull(ReinsuranceUmbrellaLayer)  AND ReinsuranceUmbrellaLayer = v_ReinsuranceUmbrellaLayer_Valid, '1',\r\n\t-- --v_ASLCode  != '220' AND ReinsuranceUmbrellaLayer = v_ReinsuranceUmbrellaLayer_Valid, '1',\r\n\t-- --'0')\n\tDECODE(\n\t    TRUE,\n\t    ReinsuranceUmbrellaLayer = v_ReinsuranceUmbrellaLayer_Valid, '1',\n\t    '0'\n\t) AS SNAInd,\n\tClaimTransactionPKId\n\tFROM SQ_SapiensReinsuranceClaim\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL.Cover = 'PDT'\n\tAND LKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL.Value = v_ProductCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__PDT_v_ProductCode_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL.Cover = 'ACP'\n\tAND LKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL.Value = v_AccountingProductCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__ACP_v_AccountingProductCode_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL.Cover = 'PCN'\n\tAND LKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL.Value = v_StrategicProfitCenterAbbreviation\n\tAND LKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__PCN_v_StrategicProfitCenterAbbreviation_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL.Cover = 'ASL'\n\tAND LKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL.Value = v_ASLCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__ASL_v_ASLCode_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL.Cover = 'SAS'\n\tAND LKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL.Value = v_SubASLCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL.ASL = RTRIM(ASLCode)\n\tAND LKP_WORKSAPIENSVALIDCOVER__SAS_v_SubASLCode_RTRIM_ASLCode_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL.Cover = 'LOB'\n\tAND LKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL.Value = v_InsuranceReferenceLineOfBusinessCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__LOB_v_InsuranceReferenceLineOfBusinessCode_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL\n\tON LKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL.Cover = 'RKS'\n\tAND LKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL.Value = v_RiskStateCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL.ASL = NULL\n\tAND LKP_WORKSAPIENSVALIDCOVER__RKS_v_RiskStateCode_NULL_NULL.SAS = NULL\n\n\tLEFT JOIN LKP_WORKSAPIENSVALIDCOVER LKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode\n\tON LKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode.Cover = 'SNA'\n\tAND LKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode.Value = ReinsuranceUmbrellaLayer\n\tAND LKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode.ASL = v_ASLCode\n\tAND LKP_WORKSAPIENSVALIDCOVER__SNA_ReinsuranceUmbrellaLayer_v_ASLCode_v_SubASLCode.SAS = v_SubASLCode\n\n),\nRTR_InsertUpdateErrors_DeleteClaims AS (\n\tSELECT\n\tSapiensReinsuranceClaimId,\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tPDTInd,\n\tAccountingProductCode,\n\tACPInd,\n\to_StrategicProfitCenterAbbreviation AS StrategicProfitCenterAbbreviation,\n\tPCNInd,\n\tASLCode,\n\tASLInd,\n\tSubASLCode,\n\tSASInd,\n\tInsuranceReferenceLineOfBusinessCode,\n\tLOBInd,\n\tRiskStateCode,\n\tRKSInd,\n\tReinsuranceUmbrellaLayer,\n\tSNAInd,\n\tClaimTransactionPKId\n\tFROM EXP_Evaluate_Covers\n),\nRTR_InsertUpdateErrors_DeleteClaims_BadCovers AS (SELECT * FROM RTR_InsertUpdateErrors_DeleteClaims WHERE PDTInd = '0'  OR ACPInd = '0'  OR PCNInd = '0'  OR ASLInd = '0'  OR SASInd = '0' OR LOBInd= '0' OR RKSInd = '0' OR SNAInd = '0'),\nRTR_InsertUpdateErrors_DeleteClaims_GoodCovers AS (SELECT * FROM RTR_InsertUpdateErrors_DeleteClaims WHERE PDTInd = '1'  AND ACPInd = '1' AND PCNInd = '1' AND ASLInd = '1' AND SASInd = '1' AND LOBInd = '1' AND RKSInd = '1' AND SNAInd = '1'),\nAGG_Error_Records_by_CTPKID AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tPDTInd,\n\tAccountingProductCode,\n\tACPInd,\n\tStrategicProfitCenterAbbreviation,\n\tPCNInd,\n\tASLCode,\n\tASLInd,\n\tSubASLCode,\n\tSASInd,\n\tInsuranceReferenceLineOfBusinessCode,\n\tLOBInd,\n\tRiskStateCode,\n\tRKSInd,\n\tReinsuranceUmbrellaLayer,\n\tSNAInd,\n\tClaimTransactionPKId\n\tFROM RTR_InsertUpdateErrors_DeleteClaims_BadCovers\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimTransactionPKId ORDER BY NULL) = 1\n),\nEXP_Error_table_insert_update AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tPDTInd,\n\tAccountingProductCode,\n\tACPInd,\n\tStrategicProfitCenterAbbreviation,\n\tPCNInd,\n\tASLCode,\n\tASLInd,\n\tSubASLCode,\n\tSASInd,\n\tInsuranceReferenceLineOfBusinessCode,\n\tLOBInd,\n\tRiskStateCode,\n\tRKSInd,\n\tReinsuranceUmbrellaLayer,\n\tSNAInd,\n\tClaimTransactionPKId,\n\t-- *INF*: :LKP.LKP_TARGET(ClaimTransactionPKId)\n\tLKP_TARGET_ClaimTransactionPKId.SapiensClaimErrorId AS SapiensClaimErrorId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM AGG_Error_Records_by_CTPKID\n\tLEFT JOIN LKP_TARGET LKP_TARGET_ClaimTransactionPKId\n\tON LKP_TARGET_ClaimTransactionPKId.ClaimTransactionPKId = ClaimTransactionPKId\n\n),\nRTR_Insert_Update_Errors AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey,\n\tProductCode,\n\tPDTInd,\n\tAccountingProductCode,\n\tACPInd,\n\tStrategicProfitCenterAbbreviation,\n\tPCNInd,\n\tASLCode,\n\tASLInd,\n\tSubASLCode,\n\tSASInd,\n\tInsuranceReferenceLineOfBusinessCode,\n\tLOBInd,\n\tRiskStateCode,\n\tRKSInd,\n\tReinsuranceUmbrellaLayer,\n\tSNAInd,\n\tClaimTransactionPKId,\n\tSapiensClaimErrorId,\n\tCreatedDate,\n\tModifiedDate\n\tFROM EXP_Error_table_insert_update\n),\nRTR_Insert_Update_Errors_InsertErrors AS (SELECT * FROM RTR_Insert_Update_Errors WHERE ISNULL(SapiensClaimErrorId)),\nRTR_Insert_Update_Errors_UpdateErrors AS (SELECT * FROM RTR_Insert_Update_Errors WHERE NOT ISNULL(SapiensClaimErrorId)),\nSapiensClaimError_Insert AS (\n\tINSERT INTO SapiensClaimError\n\t(CreatedDate, ModifiedDate, ClaimTransactionPKId, ClaimNumber, PolicyKey, ProductCode, PDTFlag, AccountingProductCode, ACPFlag, StrategicProfitCenterAbbreviation, PCNFlag, ASLCode, ASLFlag, SubASLCode, SASFlag, InsuranceReferenceLineOfBusinessCode, LOBFlag, RiskStateCode, RKSFlag, ReinsuranceUmbrellaLayer, SNAFlag)\n\tSELECT \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCLAIMTRANSACTIONPKID, \n\tCLAIMNUMBER, \n\tPOLICYKEY, \n\tPRODUCTCODE, \n\tPDTInd AS PDTFLAG, \n\tACCOUNTINGPRODUCTCODE, \n\tACPInd AS ACPFLAG, \n\tSTRATEGICPROFITCENTERABBREVIATION, \n\tPCNInd AS PCNFLAG, \n\tASLCODE, \n\tASLInd AS ASLFLAG, \n\tSUBASLCODE, \n\tSASInd AS SASFLAG, \n\tINSURANCEREFERENCELINEOFBUSINESSCODE, \n\tLOBInd AS LOBFLAG, \n\tRISKSTATECODE, \n\tRKSInd AS RKSFLAG, \n\tREINSURANCEUMBRELLALAYER, \n\tSNAInd AS SNAFLAG\n\tFROM RTR_Insert_Update_Errors_InsertErrors\n),\nUPD_Error_Table AS (\n\tSELECT\n\tSapiensClaimErrorId, \n\tClaimTransactionPKId, \n\tClaimNumber, \n\tPolicyKey, \n\tProductCode, \n\tPDTInd AS PDTFlag, \n\tAccountingProductCode, \n\tACPInd AS ACPFlag, \n\tStrategicProfitCenterAbbreviation, \n\tPCNInd AS PCNFlag, \n\tASLCode, \n\tASLInd AS ASLFlag, \n\tSubASLCode, \n\tSASInd AS SASFlag, \n\tInsuranceReferenceLineOfBusinessCode, \n\tLOBInd AS IRLOBFlag, \n\tRiskStateCode, \n\tRKSInd AS RKSFlag, \n\tReinsuranceUmbrellaLayer, \n\tSNAInd AS SNAFlag, \n\tCreatedDate AS CreatedDate3, \n\tModifiedDate AS ModifiedDate3\n\tFROM RTR_Insert_Update_Errors_UpdateErrors\n),\nSapiensClaimError_Update AS (\n\tMERGE INTO SapiensClaimError AS T\n\tUSING UPD_Error_Table AS S\n\tON T.SapiensClaimErrorId = S.SapiensClaimErrorId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate3, T.ClaimTransactionPKId = S.ClaimTransactionPKId, T.ClaimNumber = S.ClaimNumber, T.PolicyKey = S.PolicyKey, T.ProductCode = S.ProductCode, T.PDTFlag = S.PDTFlag, T.AccountingProductCode = S.AccountingProductCode, T.ACPFlag = S.ACPFlag, T.StrategicProfitCenterAbbreviation = S.StrategicProfitCenterAbbreviation, T.PCNFlag = S.PCNFlag, T.ASLCode = S.ASLCode, T.ASLFlag = S.ASLFlag, T.SubASLCode = S.SubASLCode, T.SASFlag = S.SASFlag, T.InsuranceReferenceLineOfBusinessCode = S.InsuranceReferenceLineOfBusinessCode, T.LOBFlag = S.IRLOBFlag, T.RiskStateCode = S.RiskStateCode, T.RKSFlag = S.RKSFlag, T.ReinsuranceUmbrellaLayer = S.ReinsuranceUmbrellaLayer, T.SNAFlag = S.SNAFlag\n),\nUPD_Delete_Error_Claims AS (\n\tSELECT\n\tSapiensReinsuranceClaimId\n\tFROM RTR_InsertUpdateErrors_DeleteClaims_BadCovers\n),\nSapiensReinsuranceClaim_Delete AS (\n\tDELETE FROM SapiensReinsuranceClaim\n\tWHERE (SapiensReinsuranceClaimId) IN (SELECT  SAPIENSREINSURANCECLAIMID FROM UPD_Delete_Error_Claims)\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}