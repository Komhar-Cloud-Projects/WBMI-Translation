{
    "name": "s_m_CLM_Checks_and_Balances_EDW",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_Checks_and_Balances_EDW",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_curr_row_count AS (\n\t-- Claim_Party Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_ak_id from Claim_Party with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party' as target_name\r\n\tFROM (SELECT Claim_Party_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Party_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CP\r\n\t\r\n\tUNION \r\n\t-- Claim_Occurrence Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Occurrence_ak_id from Claim_Occurrence with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (SELECT Claim_occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CO\r\n\t\r\n\tUNION\r\n\t-- Claim_Party_Occurrence Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_Occurrence_ak_id from Claim_Party_Occurrence with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party_Cccurrence' as target_name\r\n\tFROM (SELECT Claim_Party_Occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Occurrence\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Party_Occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CPO\r\n\t\r\n\tUNION\r\n\t-- Claim Case Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Case_Ak_id from claim_case with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Case' as target_name FROM (SELECT Claim_Case_Ak_id, COUNT(*) AS Expr1\r\n\tFROM   dbo.Claim_Case\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_case_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CCase\r\n\t\r\n\tUNION\r\n\t-- Claim_Party_Relation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_Relation_ak_id from Claim_Party_Relation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party_Relation' as target_name\r\n\tFROM (SELECT Claim_Party_Relation_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Relation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Party_Relation_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CPR\r\n\t\r\n\tUNION\r\n\t-- Claim_Representative Table \r\n\tSELECT count(*) as EDW_count,'Count of Claim_Rep_ak_id from Claim_Representative with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Representative'  as target_name\r\n\tFROM (SELECT Claim_Rep_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Representative\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Rep_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CR\r\n\t\r\n\tUNION\r\n\t-- Claim_Representative_Occurrence Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Rep_Occurrence_ak_id from Claim_Representative_Occurrence with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Representative_Occurrence' as target_name\r\n\tFROM (SELECT Claim_Rep_Occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Representative_Occurrence\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Rep_Occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CRO\r\n\t\r\n\tUNION\r\n\t-- Claimant_Coverage_Detail Table\r\n\tSELECT count(*) as EDW_count,'Count of Claimant_Cov_det_ak_id from Claimant_Coverage_Detail with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claimant_Coverage_detail' as target_name\r\n\tFROM (SELECT Claimant_Cov_det_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claimant_Cov_det_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CCD\r\n\t\r\n\tUNION\r\n\t-- Workers_Comp_Claimant_Detail Table\r\n\tSELECT count(*) as EDW_count,'Count of claim_party_occurrence_ak_id from Workers_Comp_Claimant_Detail with more than one record with \r\n\tcrrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Workers_Comp_Claimant_Detail' as target_name\r\n\tFROM (SELECT claim_party_occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Workers_Comp_Claimant_Detail\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_party_occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) WCCD\r\n\t\r\n\tUNION\r\n\t-- Claim_Transaction Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Trans_ak_id from Claim_Transaction with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Transaction' as target_name\r\n\tFROM (SELECT Claim_Trans_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Transaction\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Trans_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CT\r\n\t\r\n\tUNION\r\n\t-- Claim_Payment Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Pay_ak_id from Claim_Payment with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Payment' as target_name\r\n\tFROM (SELECT claim_pay_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Payment\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_pay_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CPay\r\n\t\r\n\tUNION\r\n\t-- Claimant_Coverage_Detail_Reserve_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claimant_Cov_det_ak_id from Claimant_Coverage_Detail_Reserve_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Reserve_Calculation' as target_name\r\n\tFROM (SELECT claimant_cov_det_ak_id,financial_type_code, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Reserve_Calculation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claimant_cov_det_ak_id,financial_type_code\r\n\t             HAVING (COUNT(*) > 1)) CCDRC\r\n\t\r\n\tUNION\r\n\t-- Claimant_Coverage_Detail_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claimant_Cov_Det_ak_id from Claimant_Coverage_Detail_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Calculation' as target_name\r\n\tFROM (SELECT claimant_cov_det_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Calculation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claimant_cov_det_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CCDC\r\n\t\r\n\tUNION\r\n\t-- Claimant_Reserve_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_Occurrence_ak_id from Claimant_Reserve_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claimant_Reserve_Calculation' as target_name\r\n\tFROM (SELECT claim_party_occurrence_ak_id,financial_type_code, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Reserve_Calculation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_party_occurrence_ak_id,financial_type_code\r\n\t             HAVING (COUNT(*) > 1)) CRC\r\n\t\r\n\tUNION\r\n\t-- Claimant_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_Occurrence_ak_id from Claimant_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claimant_Calculation' as target_name\r\n\tFROM (SELECT claim_party_occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Calculation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_party_occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CC\r\n\t\r\n\tUNION\r\n\t-- Claim_Occurrence_Reserve_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Occurrence_ak_id from Claim_Occurrence_Reserve_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Occurrence_Reserve_Calculation' as target_name\r\n\tFROM (SELECT claim_occurrence_ak_id,financial_type_code, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Reserve_Calculation \r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_occurrence_ak_id,financial_type_code\r\n\t             HAVING (COUNT(*) > 1)) CORC\r\n\t\r\n\tUNION\r\n\t-- Claim_Occurrence_Calculation Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Occurrence_ak_id from Claim_Occurrence_Calculation with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message,'Claim_Occurrence_Calculation' as target_name\r\n\tFROM (SELECT claim_occurrence_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Calculation\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_occurrence_ak_id\r\n\t             HAVING (COUNT(*) > 1)) COC\r\n\t\r\n\tUNION\r\n\t--- Claim Payment Category Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Pay_Ctgry_Ak_id from Claim_Payment_Category with more than one record with crrnt snpsht flag 1 = ' \r\n\t+ convert(varchar,count(*)) as check_out_message, 'Claim_Payment_Category' as target_name\r\n\tFROM (SELECT claim_pay_ctgry_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   dbo.Claim_Payment_Category\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_pay_ctgry_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CPC\r\n\t\r\n\tUNION\r\n\t-- Claim Reinsurance Transaction Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Reins_Trans_ak_id from Claim_Reinsurance_Transaction with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Transaction' as target_name\r\n\tFROM (SELECT Claim_Reins_Trans_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   dbo.Claim_Reinsurance_Transaction\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Claim_Reins_Trans_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CT\r\n\t\r\n\tUNION\r\n\t-- Claim Party Occurrence Payment Table\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_Occurrence_Pay_ak_id from Claim_Party_Occurrence_Payment with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Claim_Party_Occurrence_Payment' as target_name\r\n\tFROM (SELECT claim_party_occurrence_pay_ak_id, COUNT(*) AS Expr1\r\n\t             FROM   dbo.claim_party_occurrence_payment\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY claim_party_occurrence_pay_ak_id\r\n\t             HAVING (COUNT(*) > 1)) CPOP\r\n\t\r\n\tUNION\r\n\t--Policy Table\r\n\tSELECT count(*) as EDW_count,'Count of Pol_Ak_id from Policy with more than one record with crrnt snpsht flag 1 = ' + convert(varchar,count(*)) as check_out_message, 'Policy' as target_name \r\n\tFROM (SELECT Pol_Ak_id, COUNT(*) AS Expr1\r\n\tFROM   V2.Policy\r\n\t             WHERE  (crrnt_snpsht_flag = 1)\r\n\t             GROUP BY Pol_Ak_id\r\n\t             HAVING (COUNT(*) > 1)) Policykey\r\n\t\r\n\tUNION\r\n\t----Count of Pol_ak_id from Policy where there are different Pol_key for same Pol_ak_id\r\n\tSELECT count(*) as EDW_count,'Count of Pol_Ak_id from Policy with different pol_key for same Ak_id = ' + convert(varchar,count(*)) as check_out_message,'Policy' as target_name\r\n\tFROM (select pol_ak_id,count(pol_key) as EXp1 from V2.policy \r\n\t      where crrnt_snpsht_flag =1 \r\n\t      group by pol_ak_id\r\n\t      having count(pol_key) > 1) PK\r\n\t\r\n\tUNION\r\n\t--- Count of Claim_Occurrence_ak_id from Claim_Occurrence with different Claim_Occurrence_key for same Ak_id\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Occurrence_ak_id from Claim_Occurrence with different Claim_Occurrence_key for same Ak_id = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party_Cccurrence' as target_name\r\n\tFROM (SELECT Claim_Occurrence_ak_id,count(Claim_Occurrence_key) as Exp1 FROM DBO.Claim_Occurrence \r\n\t                WHERE crrnt_snpsht_flag =1 \r\n\t                GROUP BY Claim_Occurrence_ak_id\r\n\t                HAVING count(Claim_Occurrence_key) > 1) CO1\r\n\t\r\n\tUNION\r\n\t---- Count of Claim_Party_ak_id from Claim_Party with different Party_key for same Ak_id\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Party_ak_id from Claim_Party with different Claim_Party_key for same Ak_id = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party_Cccurrence' as target_name\r\n\tFROM (SELECT Claim_Party_ak_id,count(Claim_Party_key) as Exp1 from DBO.Claim_Party \r\n\t      WHERE crrnt_snpsht_flag =1 \r\n\t      GROUP BY  Claim_Party_ak_id\r\n\t      HAVING count(Claim_Party_key) > 1) CP1\r\n\t\r\n\tUNION\r\n\t---- Count of Claim_Case_Ak_id from Claim_Case with different Claim_Case_key for same ak_id\r\n\tSELECT count(*) as EDW_count,'Count of Claim_Case_ak_id from Claim_Case with different Claim_Case_key for same Ak_id = ' + convert(varchar,count(*)) as check_out_message,'Claim_Party_Cccurrence' as target_name\r\n\tFROM (SELECT Claim_Case_ak_id,count(Claim_Case_key) as Exp1 from DBO.Claim_Case\r\n\t      WHERE crrnt_snpsht_flag =1 \r\n\t      GROUP BY  Claim_Case_ak_id\r\n\t      HAVING count(Claim_Case_key) > 1) CCase\n),\nEXP_default AS (\n\tSELECT\n\tEDW_count,\n\tcheck_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\ttarget_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_curr_row_count\n),\nFILTRANS AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default\n\tWHERE EDW_count>0\n),\nwbmi_checkout_curr_row_count AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS\n),\nSQ_Claim_Occurrence_not_in_CO_Calc AS (\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id from Claim_Occurrence table where Claim_Occurrence_ak_id not in Claim_Occurrence_Calculation id = ' + convert(varchar,count(*)) as Check_Out_Message, 'Claim_Occurrence' as Target_Name FROM \r\n\t(SELECT claim_occurrence_ak_id  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence WHERE  \r\n\tclaim_occurrence_ak_id NOT IN  (SELECT claim_occurrence_ak_id  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Calculation))COC\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_Count, 'Count of Claim_Party_Occurrence_ak_id from Claim_Party_Occurrence table where the Claim_Occurrence_ak_id = 0 is ' + CONVERT(varchar,COUNT(*))\r\n\t as Check_Out_Message, 'Claim_Party_Occurrence' as Target_Name  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Occurrence WHERE claim_occurrence_ak_id = 0\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_ak_id from Claim_party table where Claim_party_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claim_Party' as Target_Name FROM \r\n\t(SELECT claim_party_ak_id FROM claim_party a WHERE not exists (SELECT 1 FROM Claim_Party b where a.Claim_Party_ak_id = b.Claim_Party_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand (a.eff_to_date <> '2100-12-31 23:59:59.000'))CP\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id from Claim_Occurrence table where Claim_Occurrence_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claim_Occurrence' as Target_Name FROM \r\n\t(SELECT Claim_Occurrence_ak_id FROM Claim_Occurrence a WHERE not exists (SELECT 1 FROM Claim_Occurrence b where a.Claim_Occurrence_ak_id = b.Claim_Occurrence_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand (a.eff_to_date <> '2100-12-31 23:59:59.000'))CO\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Rep_ak_id from Claim_Representative table where Claim_Rep_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claim_Representative' as Target_Name FROM \r\n\t(SELECT Claim_Rep_ak_id FROM Claim_Representative a WHERE not exists (SELECT 1 FROM Claim_Representative b where a.Claim_Rep_ak_id = b.Claim_Rep_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand ( a.eff_to_date <> '2100-12-31 23:59:59.000'))CR\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Rep_Occurrence_ak_id from Claim_Representative_Occurrence table where Claim_Rep_Occurrence_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claim_Representative_Occurrence' as Target_Name FROM \r\n\t(SELECT Claim_Rep_Occurrence_ak_id FROM Claim_Representative_Occurrence a WHERE not exists (SELECT 1 FROM Claim_Representative_Occurrence b where a.Claim_Rep_Occurrence_ak_id = b.Claim_Rep_Occurrence_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand ( a.eff_to_date <> '2100-12-31 23:59:59.000'))CRO\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id from Claim_Party_Occurrence table where Claim_Party_Occurrence_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claim_Party_Occurrence' as Target_Name FROM \r\n\t(SELECT Claim_Party_Occurrence_ak_id FROM Claim_Party_Occurrence a WHERE not exists (SELECT 1 FROM Claim_Party_Occurrence b where a.Claim_Party_Occurrence_ak_id = b.Claim_Party_Occurrence_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand (a.eff_to_date <> '2100-12-31 23:59:59.000'))CPO\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claimant_Cov_Det_ak_id from Claimant_Coverage_Detail table where Claimant_Cov_Det_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Claimant_Coverage_Detail' as Target_Name FROM \r\n\t(SELECT Claimant_Cov_Det_ak_id FROM Claimant_Coverage_Detail a WHERE not exists (SELECT 1 FROM Claimant_Coverage_Detail b where a.Claimant_Cov_Det_ak_id = b.Claimant_Cov_Det_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand ( a.eff_to_date <> '2100-12-31 23:59:59.000'))CCD\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) as EDW_count, 'Count of WC_Claimant_Det_ak_id from Workers_Comp_Claimant_Detail table where WC_Claimant_Det_ak_id have no continuity in eff_from_date & eff_to_date = ' \r\n\t+ convert(varchar,count(*)) as Check_Out_Message, 'Workers_Comp_Claimant_Detail' as Target_Name FROM \r\n\t(SELECT WC_Claimant_Det_ak_id FROM Workers_Comp_Claimant_Detail a WHERE not exists (SELECT 1 FROM Workers_Comp_Claimant_Detail b where a.WC_Claimant_Det_ak_id = b.WC_Claimant_Det_ak_id and \r\n\tb.eff_from_date = dateadd(ss,1,a.eff_to_date) )\r\n\tand ( a.eff_to_date <> '2100-12-31 23:59:59.000'))WCD\n),\nEXP_default4 AS (\n\tSELECT\n\tEDW_count,\n\tCheck_Out_Message AS check_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\tTarget_Name AS target_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_Claim_Occurrence_not_in_CO_Calc\n),\nFILTRANS4 AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default4\n\tWHERE EDW_count>0\n),\nwbmi_checkout_Claim_Occurrence_not_in_CO_Calc AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS4\n),\nSQ_Policy_key AS (\n\t-- Policy Key table\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of Pol_ak_id in Policy table where Policy is balancing without its claims balancing = ' + CONVERT(varchar,count(*)) as Check_Out_Message,'Policy' as Target_Name\r\n\tFROM (SELECT pol_key FROM V2.policy WHERE err_flag_bal_txn = '1'and crrnt_snpsht_flag = '1' AND pol_key IN (\r\n\tSELECT distinct pol_key FROM Claim_Occurrence WHERE err_flag_bal_txn = - 1 and source_sys_id = 'PMS' and crrnt_snpsht_flag = '1')) pol\r\n\t\r\n\tUNION\r\n\t-- Counts of Policy where policies are not matching for normal Claim Transactions\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Policy_ak_id from V2.Policy table where Policy (Claim Txns) doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Policy' as target_name\r\n\tFROM (select Pol_ak_id\r\n\t\tfrom V2.policy\r\n\t\tWHERE err_flag_bal_txn = -1 and crrnt_snpsht_flag = 1)PK\r\n\t\r\n\tUNION\r\n\t-- Counts of Claims where Claims are not matching for normal Claim Transactions\r\n\tSELECT COUNT(*) as EDW_count, 'Count of PMS Claim_Occurrence_ak_id from Claim_Occurrence table where Claim Transaction Amt doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (select claim_occurrence_ak_id\r\n\t\tfrom dbo.claim_occurrence\r\n\t\tWHERE err_flag_bal_txn = -1 and crrnt_snpsht_flag = 1)CO\r\n\t\r\n\tUNION\r\n\t-- Counts of Claims where Claims are not matching for normal Claim Transactions\r\n\tSELECT COUNT(*) as EDW_count, 'Count of PMS Claim_Occurrence_ak_id from Claim_Occurrence table where Claim Transaction Rows doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (select claim_occurrence_ak_id\r\n\t\tfrom dbo.claim_occurrence\r\n\t\tWHERE err_flag_bal_txn = -2 and crrnt_snpsht_flag = 1)CO\r\n\t\r\n\tUNION\r\n\t-- Counts of Claims where Claims are not matching for normal Claim Transactions\r\n\tSELECT COUNT(*) as EDW_count, '_Count of EXCEED Claim_Occurrence_ak_id from Claim_Occurrence table where Claim Transaction Amt doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (select claim_occurrence_ak_id\r\n\t\tfrom dbo.claim_occurrence\r\n\t\tWHERE err_flag_bal_txn = -3 and crrnt_snpsht_flag = 1)CO\r\n\t\r\n\tUNION\r\n\t-- Counts of Claims where Claims are not matching for normal Claim Transactions\r\n\tSELECT COUNT(*) as EDW_count, '_Count of EXCEED Claim_Occurrence_ak_id from Claim_Occurrence table where Claim Transaction Rows doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (select claim_occurrence_ak_id\r\n\t\tfrom dbo.claim_occurrence\r\n\t\tWHERE err_flag_bal_txn = -4 and crrnt_snpsht_flag = 1)CO\r\n\t\r\n\tUNION\r\n\t-- Counts of Policy where policies are not matching for  Claim Reinsurance Transactions\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Policy_ak_id from Policy table where Policy (Claim Reins Txns) doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Policy' as target_name\r\n\tFROM (select Pol_ak_id\r\n\t\tfrom v2.policy\r\n\t\tWHERE err_flag_bal_reins = -1 and crrnt_snpsht_flag = 1)PK\r\n\t\r\n\tUNION\r\n\t-- Counts of Claims where Claims are not matching for Claim Reinsurance Transactions\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id from Claim_Occurrence table where Claim Reins Txns doesnt balance between Stage and EDW = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (select claim_occurrence_ak_id\r\n\t\tfrom dbo.claim_occurrence\r\n\t\tWHERE err_flag_bal_reins = -1 and crrnt_snpsht_flag = 1)CO\r\n\t\r\n\t--commneted for June 2010 release as this SQL started running much longer. This can be uncommented \r\n\t--when this runs within acceptable time\r\n\t\r\n\t--UNION\r\n\t---- Counts of Claim Case where it doesnt have a Claimant in Claim Party Occurrence\r\n\t--SELECT COUNT(*) as EDW_count, 'Count of Claim_Case_ak_id from Claim_Case table where Claim Case doesnt have a claimant in Claim_Party_Occurrence = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Case' as target_name\r\n\t--FROM (SELECT distinct Claim_Case_Ak_id\r\n\t--\tfrom dbo.Claim_Case\r\n\t--\tWHERE claim_case_ak_id not in (SELECT distinct claim_case_ak_id FROM Claim_Party_Occurrence))CCase\r\n\t\r\n\tUNION\r\n\t--- Count of Transactions where sar_id > 94\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Trans_ak_id from Claim_Transaction table where sar_id > 94 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name\r\n\tFROM (SELECT claim_trans_id FROM dbo.claim_transaction\r\n\t\tWHERE sar_id > '94' and sar_id <> 'N/A' and crrnt_snpsht_flag = 1)CTS\r\n\t\r\n\tUNION\r\n\t--- Count of payments where pay_issued_date > pay_cashed_date\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Pay_ak_id from Claim_Payment table where pay_issued_date > pay_cashed_date = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Payment' as target_name\r\n\tFROM (SELECT claim_pay_ak_id FROM dbo.claim_payment\r\n\tWHERE pay_issued_date > pay_cashed_date and pay_cashed_date != '01/01/1800 01:00:00' and pay_cashed_date != '01/01/1800 00:00:00' )CP\r\n\t\r\n\tUNION\r\n\t--count rows from Claim_transaction with Sar_id of N/A\r\n\tselect COUNT(*) as EDW_count,\r\n\t'Count of Claim Transaction joined to claimant_coverage_detail with Sar_id of N/A and Major Peril not 101 =  ' +CONVERT(varchar,Count(*)) as check_out_message,\r\n\t'Claim_Transaction and Claimant_Coverage_Detail' as target_name \r\n\tFROM  vw_claim_transaction CT, claimant_coverage_detail CCD where sar_id='N/A' and CT.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id and major_peril_code <> '101'\r\n\t\r\n\tUNION\r\n\t\r\n\t--count rows from Claim_transaction with Sar_id of N/A\r\n\tselect COUNT(*) as EDW_count,\r\n\t'Count of Claim Transaction joined to claimant_coverage_detail with Sar_id of N/A and Major Peril = 101 =  ' +CONVERT(varchar,Count(*)) as check_out_message,\r\n\t'Claim_Transaction and Claimant_Coverage_Detail' as target_name \r\n\tFROM  vw_claim_transaction CT, claimant_coverage_detail CCD where sar_id='N/A' and CT.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id and major_peril_code = '101'\r\n\t\r\n\tUNION\r\n\t\r\n\t--count rows from Claimant_Coverage_Detail where pmsTypeBureau=N/A\r\n\tselect COUNT(*) as EDW_count,\r\n\t'Count of Claimant_Coverage_Detail with pms type bureau of N/A and major peril NOT 101= ' + convert(varchar,count(*)) as check_out_message,\r\n\t'Claimant_Coverage_Detail' as target_name \r\n\tFROM  claimant_coverage_detail CCD \r\n\twhere CCD.pms_type_bureau_code='N/A' and CCD.major_peril_code<>'101'\n),\nEXP_default41 AS (\n\tSELECT\n\tEDW_count,\n\tCheck_Out_Message AS check_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\tTarget_Name AS target_name,\n\t-- *INF*: 'W'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'W' AS checkout_type_code\n\tFROM SQ_Policy_key\n),\nFILTRANS41 AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default41\n\tWHERE EDW_count>0\n),\nwbmi_checkout_Policy_key AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS41\n),\nSQ_EDW_curr_row_AND_eff_from_date AS (\n\t--- Policy Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Pol_ak_id in Policy table with crrnt_snpsht_flag = 1 that \r\n\thas Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Policy' as target_name \r\n\tfrom V2.Policy where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\t--- Claim_Occurrence Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id in Claim_Occurrence table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t--- Claim Party Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_ak_id in Claim_Party table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Party' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t-- Claim Party Occurrence Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id in Claim_Party_Occurrence table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Party_Occurrence' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Occurrence where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t-- Claim Party Relation Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id in Claim_Party_Relation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Party_Relation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Relation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t-- Claim Representative Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Rep_ak_id in Claim_Representative table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Representative' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Representative where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t-- Claim Representative Occurrence \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Rep_Occ_ak_id in Claim_Representative_Occurrence table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Representative_Occurrence' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Representative_Occurrence where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000' \r\n\t\r\n\tUNION\r\n\t -- Claimant Coverage Detail Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claimant_Cov_Det_ak_id in Claimant_Coverage_Detail table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 =  ' + CONVERT(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Workers Comp Claimant Detail Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id in Workers_Comp_Claimant_Detail table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Workers_Comp_Claimant_Detail' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Workers_Comp_Claimant_Detail where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Transaction Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Trans_ak_id in Claim_Transaction table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Transaction' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Transaction where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Payment Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Pay_ak_id in Claim_Payment table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Payment' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Payment where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claimant Coverage Detail Reserve Calculation Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claimant_Cov_Det_ak_id in Claimant_Coverage_Detail_Reserve_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Reserve_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Reserve_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claimant Coverage Detail Calculation Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claimant_Cov_Det_ak_id in Claimant_Coverage_Detail_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 =  ' + CONVERT(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claimant Reserve Calculation Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id in Claimant_Reserve_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 =  ' + CONVERT(varchar,count(*)) as check_out_message,'Claimant_Reserve_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Reserve_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claimant Calculation Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Party_Occurrence_ak_id in Claimant_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claimant_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Occurrence Reserve Calculation Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id in Claim_Occurrence_Reserve_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence_Reserve_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Reserve_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Occurrence Calculation Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Occurrence_ak_id in Claim_Occurrence_Calculation table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence_Calculation' as target_name from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Calculation where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Case Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Case_ak_id in Claim_Case table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' \r\n\t+  CONVERT(varchar,count(*)) as check_out_message,'Claim_Case' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Case where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Case Damage Detail Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Case_Dam_det_ak_id in Claim_Case_Damage_Detail table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Case_Damage_Detail' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Case_Damage_Detail where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Case Lien Detail Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Case_Lien_Det_ak_id in Claim_Case_Lien_Detail table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + \r\n\tCONVERT(varchar,count(*)) as check_out_message,'Claim_Case_Lien_Detail' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Case_Lien_Detail where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Reinsurance Transaction Table \r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Reins_trans_ak_id in Claim_Reinsurance_Transaction table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Reinsurance_Transaction' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Reinsurance_Transaction where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Payment Category Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Pay_Ctgry_ak_id in Claim_Payment_Category table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + CONVERT(varchar,count(*)) as check_out_message,'Claim_Payment_Category' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_payment_category where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\r\n\t\r\n\tUNION\r\n\t-- Claim Payment Occurrence Payment Table\r\n\tSELECT COUNT(*) as EDW_count, 'Count of Claim_Pay_Occurrence_pay_ak_id in Claim_Party_Occurrence_Payment table with crrnt_snpsht_flag = 1 that has Eff To Date not as 12/31/2100 = ' + \r\n\tCONVERT(varchar,count(*)) as check_out_message,'Claim_Party_Occurrence_Payment' as target_name \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Party_Occurrence_Payment where crrnt_snpsht_flag = 1 and eff_to_date <> '2100-12-31 23:59:59.000'\n),\nEXP_default1 AS (\n\tSELECT\n\tEDW_count,\n\tcheck_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\ttarget_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_EDW_curr_row_AND_eff_from_date\n),\nFILTRANS1 AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default1\n\tWHERE EDW_count>0\n),\nwbmi_checkout__EDW_curr_row_AND_eff_from_date AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS1\n),\nSQ_EDW_Calc_Highest_Eff_from_date AS (\n\tSELECT count(*), 'Count of Claimant_cov_det_ak_id from Claimant_Coverage_Detail_Reserve_Calculation table that does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Reserve_Calculation' as target_name\r\n\tFROM \r\n\t\t(select claimant_cov_det_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Reserve_Calculation                                                                                         \r\n\t\tgroup by claimant_cov_det_ak_id) A,\r\n\t\t(select claimant_cov_det_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Reserve_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claimant_cov_det_ak_id) B\r\n\tWHERE A.claimant_cov_det_ak_id = B.claimant_cov_det_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT count(*), 'Count of Claimant_cov_det_ak_id from Claimant_Coverage_Detail_Calculation table does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claimant_Coverage_Detail_Calculation' as target_name\r\n\tFROM \r\n\t\t(select claimant_cov_det_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Calculation\r\n\t\tgroup by claimant_cov_det_ak_id) A,\r\n\t\t(select claimant_cov_det_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Coverage_Detail_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claimant_cov_det_ak_id) B\r\n\tWHERE A.claimant_cov_det_ak_id = B.claimant_cov_det_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT count(*), 'Count of Claim_Party_Occurrence_ak_id from Claimant_Reserve_Calculation table does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claimant_Reserve_Calculation' as target_name\r\n\tFROM \r\n\t\t(select claim_party_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Reserve_Calculation\r\n\t\tgroup by claim_party_occurrence_ak_id) A,\r\n\t\t(select claim_party_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Reserve_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claim_party_occurrence_ak_id) B\r\n\tWHERE A.claim_party_occurrence_ak_id = B.claim_party_occurrence_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT count(*), 'Count of Claim_Party_Occurrence_ak_id from Claimant_Calculation table does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claimant_Calculation' as target_name \r\n\tFROM  \r\n\t\t(select claim_party_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Calculation\r\n\t\tgroup by claim_party_occurrence_ak_id) A,\r\n\t\t(select claim_party_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claimant_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claim_party_occurrence_ak_id) B\r\n\tWHERE A.claim_party_occurrence_ak_id = B.claim_party_occurrence_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT count(*), 'Count of Claim_Occurrence_ak_id from Claim_Occurrence_Reserve_Calculation table does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence_Reserve_Calculation' as target_name \r\n\tFROM \r\n\t\t(select claim_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Reserve_Calculation\r\n\t\tgroup by claim_occurrence_ak_id) A,\r\n\t\t(select claim_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Reserve_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claim_occurrence_ak_id) B\r\n\tWHERE A.claim_occurrence_ak_id = B.claim_occurrence_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT count(*), 'Count of Claim_Occurrence_ak_id from Claim_Occurrence_Calculation table does not have highest Eff_From_Date = '+ CONVERT(varchar,count(*)) as check_out_message,'Claim_Occurrence_Calculation' as target_name\r\n\tFROM \r\n\t\t(select claim_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Calculation\r\n\t\tgroup by claim_occurrence_ak_id) A,\r\n\t\t(select claim_occurrence_ak_id, MAX(eff_from_date) as MAX_EFF_FROM\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_Occurrence_Calculation\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tgroup by claim_occurrence_ak_id) B\r\n\tWHERE A.claim_occurrence_ak_id = B.claim_occurrence_ak_id\r\n\tand A.MAX_EFF_FROM <> B.MAX_EFF_FROM\n),\nEXP_default2 AS (\n\tSELECT\n\tEDW_count,\n\tcheck_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\ttarget_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_EDW_Calc_Highest_Eff_from_date\n),\nFILTRANS2 AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default2\n\tWHERE EDW_count>0\n),\nwbmi_checkout_EDW_Calc_Highest_Eff_from_date AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS2\n),\nSQ_wbmi_checkout AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code = 'E' and \r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\trtrim(wbmi_batch_control_run.batch_name) = 'CLAIMS_SUPPORT_DATAWAREHOUSE'\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject AS (\n\tSELECT\n\temail_address,\n\tcheckout_message,\n\t-- *INF*: 'There are errors in the Claims EDW data. Execution aborted (' || sysdate || ')'\n\t'There are errors in the Claims EDW data. Execution aborted (' || CURRENT_TIMESTAMP || ')' AS email_subject\n\tFROM SQ_wbmi_checkout\n),\nemail_body AS (\n\tINSERT INTO email_body\n\t(FIELD1)\n\tSELECT \n\tcheckout_message AS FIELD1\n\tFROM EXP_Email_Subject\n),\nAGG_Distinct_Email_Id AS (\n\tSELECT\n\temail_address,\n\temail_subject\n\tFROM EXP_Email_Subject\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY email_address, email_subject ORDER BY NULL) = 1\n),\nemail_subject AS (\n\tINSERT INTO email_subject\n\t(FIELD1)\n\tSELECT \n\temail_subject AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nemail_address AS (\n\tINSERT INTO email_address\n\t(FIELD1)\n\tSELECT \n\temail_address AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nSQ_wbmi_checkout1 AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code = 'E' and \r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\trtrim(wbmi_batch_control_run.batch_name)  = 'CLAIMS_SUPPORT_DATAWAREHOUSE'\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject1 AS (\n\tSELECT\n\temail_address,\n\tcheckout_message,\n\t-- *INF*: Abort('There are issues with the EDW data')\n\tAbort('There are issues with the EDW data') AS error\n\tFROM SQ_wbmi_checkout1\n),\nFIL_STOP_PROCESSING AS (\n\tSELECT\n\tcheckout_message, \n\terror\n\tFROM EXP_Email_Subject1\n\tWHERE FALSE\n),\nwbmi_checkout_dummy_target AS (\n\tINSERT INTO wbmi_checkout\n\t(checkout_message)\n\tSELECT \n\tCHECKOUT_MESSAGE\n\tFROM FIL_STOP_PROCESSING\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}