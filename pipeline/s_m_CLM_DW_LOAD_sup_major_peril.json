{
    "name": "s_m_CLM_DW_LOAD_sup_major_peril",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_sup_major_peril",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_gtam_xtsa01_stage AS (\n\tselect c.field_label as major_peril_code,\r\n\t             c.major_peril_translation as major_peril_description  \r\n\t       from      \r\n\t      (\r\n\t      SELECT \r\n\t      CASE LEN(LTRIM(RTRIM( a.field_label)))\r\n\t         WHEN 13 then SUBSTRING( RTRIM(LTRIM(a.field_label)),11,3)\r\n\t         ELSE a.field_label          \r\n\t      END  as field_label,\r\n\t      a.major_peril_translation as major_peril_translation         \r\n\t      FROM gtam_xtsa01_stage a  ) c\r\n\t     \r\n\t\r\n\t--- GET the last 3 characters of the column for the major_peril_code\n),\nEXP_Default_Values_xtsa01 AS (\n\tSELECT\n\tfield_label,\n\t-- *INF*: IIF(ISNULL( rtrim(ltrim(field_label))), 'N/A', rtrim(ltrim( field_label)))\n\tIFF(rtrim(ltrim(field_label)) IS NULL, 'N/A', rtrim(ltrim(field_label))) AS MAJOR_PERIL_OUT,\n\tmajor_peril_translation,\n\t-- *INF*: IIF(ISNULL(rtrim(ltrim(major_peril_translation))), 'N/A', rtrim(ltrim(major_peril_translation)))\n\tIFF(rtrim(ltrim(major_peril_translation)) IS NULL, 'N/A', rtrim(ltrim(major_peril_translation))) AS LONG_ALPHABETIC_DESCRIPTION_OUT\n\tFROM SQ_gtam_xtsa01_stage\n),\nLKP_sup_major_peril_xtsa01 AS (\n\tSELECT\n\tsup_major_peril_id,\n\tmajor_peril_descript,\n\tmajor_peril_code\n\tFROM (\n\t\tSELECT sup_major_peril.sup_major_peril_id as sup_major_peril_id, \r\n\t\tsup_major_peril.major_peril_descript as major_peril_descript, \r\n\t\tltrim(rtrim(sup_major_peril.major_peril_code)) as major_peril_code\r\n\t\t FROM sup_major_peril where crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY major_peril_code ORDER BY sup_major_peril_id) = 1\n),\nEXP_detect_changes_xtsa01 AS (\n\tSELECT\n\tLKP_sup_major_peril_xtsa01.sup_major_peril_id AS LKP_sup_major_peril_id,\n\tLKP_sup_major_peril_xtsa01.major_peril_descript AS LKP_major_peril_descript,\n\tEXP_Default_Values_xtsa01.MAJOR_PERIL_OUT,\n\tEXP_Default_Values_xtsa01.LONG_ALPHABETIC_DESCRIPTION_OUT,\n\t-- *INF*: IIF(ISNULL(LKP_sup_major_peril_id), 'NEW', IIF(LTRIM(RTRIM(LKP_major_peril_descript)) <> (LTRIM(RTRIM(LONG_ALPHABETIC_DESCRIPTION_OUT))), 'UPDATE', 'NOCHANGE'))\r\n\t-- \n\tIFF(LKP_sup_major_peril_id IS NULL, 'NEW', IFF(LTRIM(RTRIM(LKP_major_peril_descript)) <> ( LTRIM(RTRIM(LONG_ALPHABETIC_DESCRIPTION_OUT)) ), 'UPDATE', 'NOCHANGE')) AS v_CHANGED_FLAG,\n\tv_CHANGED_FLAG AS CHANGED_FLAG,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(v_CHANGED_FLAG='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_CHANGED_FLAG = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id\n\tFROM EXP_Default_Values_xtsa01\n\tLEFT JOIN LKP_sup_major_peril_xtsa01\n\tON LKP_sup_major_peril_xtsa01.major_peril_code = EXP_Default_Values_xtsa01.MAJOR_PERIL_OUT\n),\nFIL_sup_insurance_line_INS_xtsa01 AS (\n\tSELECT\n\tMAJOR_PERIL_OUT, \n\tLONG_ALPHABETIC_DESCRIPTION_OUT, \n\tCHANGED_FLAG, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tsource_sys_id\n\tFROM EXP_detect_changes_xtsa01\n\tWHERE CHANGED_FLAG = 'NEW' or CHANGED_FLAG = 'UPDATE'\n),\nINS_sup_major_peril_xtsa01 AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, major_peril_code, major_peril_descript, StandardMajorPerilCode, StandardMajorPerilDescription)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tMAJOR_PERIL_OUT AS MAJOR_PERIL_CODE, \n\tLONG_ALPHABETIC_DESCRIPTION_OUT AS MAJOR_PERIL_DESCRIPT, \n\tMAJOR_PERIL_OUT AS STANDARDMAJORPERILCODE, \n\tLONG_ALPHABETIC_DESCRIPTION_OUT AS STANDARDMAJORPERILDESCRIPTION\n\tFROM FIL_sup_insurance_line_INS_xtsa01\n),\nSQ_sup_major_peril AS (\n\tSELECT a.sup_major_peril_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date ,\r\n\ta.major_peril_code\r\n\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril b\r\n\t\t\tWHERE source_sys_id= '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.major_peril_code = b.major_peril_code\r\n\t             GROUP BY b.major_peril_code\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY a.major_peril_code ,a.eff_from_date  DESC\n),\nEXP_lag_eff_from_date AS (\n\tSELECT\n\tsup_major_peril_id,\n\tmajor_peril_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tmajor_peril_code= v_Prev_row_major_peril_code, ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\r\n\t-- \t\n\tDECODE(TRUE,\n\tmajor_peril_code = v_Prev_row_major_peril_code, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tmajor_peril_code AS v_Prev_row_major_peril_code,\n\teff_from_date AS v_prev_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_sup_major_peril\n),\nFIL_First_rown_inAKGroup AS (\n\tSELECT\n\tsup_major_peril_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_lag_eff_from_date\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_sup_major_peril AS (\n\tSELECT\n\tsup_major_peril_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_First_rown_inAKGroup\n),\nUPD_sup_major_peril AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril AS T\n\tUSING UPD_sup_major_peril AS S\n\tON T.sup_major_peril_id = S.sup_major_peril_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246507"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905524"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604410"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:26"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}