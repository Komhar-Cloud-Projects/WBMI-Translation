{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBBPPartyStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBBPPartyStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_BP_Party AS (\n\tWITH cte_WBBPParty(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.WB_CL_PartyId, \r\n\tX.WB_BP_PartyId, \r\n\tX.SessionId, \r\n\tX.NumberOfUnits, \r\n\tX.NumberOfPools, \r\n\tX.AnyDryCleaning, \r\n\tX.AnySaleOfAnimals, \r\n\tX.AnySaleOfTravelTickets, \r\n\tX.TaxidermyWork, \r\n\tX.InstallationServiceOrRepair, \r\n\tX.BOP_New_BusinessClassCode, \r\n\tX.BOP_New_BusinessSegment, \r\n\tX.BOP_New_COBLiabilityFactor, \r\n\tX.BOP_New_COBPropertyFactor, \r\n\tX.BOP_New_COBAllOtherFactor, \r\n\tX.LocationNumber, \r\n\tX.BuildingNumber, \r\n\tX.BuildingDescription, \r\n\tX.ConstructionCode, \r\n\tX.LocationProtectionClass, \r\n\tX.BOP_New_EquipmentBreakdownGroup, \r\n\tX.SelectLocationForCopy, \r\n\tX.SelectBuildingValidRefTest \r\n\tFROM\r\n\tWB_BP_Party X\r\n\tinner join\r\n\tcte_WBBPParty Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tWB_CL_PartyId,\n\tWB_BP_PartyId,\n\tSessionId,\n\tNumberOfUnits,\n\tNumberOfPools,\n\tAnyDryCleaning,\n\t-- *INF*: DECODE(AnyDryCleaning,'T','1','F','0')\n\tDECODE(\n\t    AnyDryCleaning,\n\t    'T', '1',\n\t    'F', '0'\n\t) AS o_AnyDryCleaning,\n\tAnySaleOfAnimals,\n\t-- *INF*: DECODE(AnySaleOfAnimals,'T','1','F','0')\n\tDECODE(\n\t    AnySaleOfAnimals,\n\t    'T', '1',\n\t    'F', '0'\n\t) AS o_AnySaleOfAnimals,\n\tAnySaleOfTravelTickets,\n\t-- *INF*: DECODE(AnySaleOfTravelTickets,'T','1','F','0')\r\n\t-- \n\tDECODE(\n\t    AnySaleOfTravelTickets,\n\t    'T', '1',\n\t    'F', '0'\n\t) AS o_AnySaleOfTravelTickets,\n\tTaxidermyWork,\n\t-- *INF*: DECODE(TaxidermyWork,'T','1','F','0')\n\tDECODE(\n\t    TaxidermyWork,\n\t    'T', '1',\n\t    'F', '0'\n\t) AS o_TaxidermyWork,\n\tInstallationServiceOrRepair,\n\t-- *INF*: DECODE(InstallationServiceOrRepair,'T','1','F','0')\n\tDECODE(\n\t    InstallationServiceOrRepair,\n\t    'T', '1',\n\t    'F', '0'\n\t) AS o_InstallationServiceOrRepair,\n\tBOP_New_BusinessClassCode,\n\tBOP_New_BusinessSegment,\n\tBOP_New_COBLiabilityFactor,\n\tBOP_New_COBPropertyFactor,\n\tBOP_New_COBAllOtherFactor,\n\tLocationNumber,\n\tBuildingNumber,\n\tBuildingDescription,\n\tConstructionCode,\n\tLocationProtectionClass,\n\tBOP_New_EquipmentBreakdownGroup,\n\tSelectLocationForCopy,\n\tSelectBuildingValidRefTest\n\tFROM SQ_WB_BP_Party\n),\nWBBPPartyStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBBPPartyStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBBPPartyStage\n\t(ExtractDate, SourceSystemId, WB_CL_PartyId, WB_BP_PartyId, SessionId, NumberOfUnits, NumberOfPools, AnyDryCleaning, AnySaleOfAnimals, AnySaleOfTravelTickets, TaxidermyWork, InstallationServiceOrRepair, BOP_New_BusinessClassCode, BOP_New_BusinessSegment, BOP_New_COBLiabilityFactor, BOP_New_COBPropertyFactor, BOP_New_COBAllOtherFactor, LocationNumber, BuildingNumber, BuildingDescription, ConstructionCode, LocationProtectionClass, BOP_New_EquipmentBreakdownGroup, SelectLocationForCopy, SelectBuildingValidRefTest)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tWB_CL_PARTYID, \n\tWB_BP_PARTYID, \n\tSESSIONID, \n\tNUMBEROFUNITS, \n\tNUMBEROFPOOLS, \n\to_AnyDryCleaning AS ANYDRYCLEANING, \n\to_AnySaleOfAnimals AS ANYSALEOFANIMALS, \n\to_AnySaleOfTravelTickets AS ANYSALEOFTRAVELTICKETS, \n\to_TaxidermyWork AS TAXIDERMYWORK, \n\to_InstallationServiceOrRepair AS INSTALLATIONSERVICEORREPAIR, \n\tBOP_NEW_BUSINESSCLASSCODE, \n\tBOP_NEW_BUSINESSSEGMENT, \n\tBOP_NEW_COBLIABILITYFACTOR, \n\tBOP_NEW_COBPROPERTYFACTOR, \n\tBOP_NEW_COBALLOTHERFACTOR, \n\tLOCATIONNUMBER, \n\tBUILDINGNUMBER, \n\tBUILDINGDESCRIPTION, \n\tCONSTRUCTIONCODE, \n\tLOCATIONPROTECTIONCLASS, \n\tBOP_NEW_EQUIPMENTBREAKDOWNGROUP, \n\tSELECTLOCATIONFORCOPY, \n\tSELECTBUILDINGVALIDREFTEST\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}