{
    "name": "m_CLM_DM_LOAD_NurseAssignmentTimeWorkedFact",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_NurseAssignmentTimeWorkedFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLkp_CALANDER_DIM AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_NurseAssignmentTimeWorked AS (\n\tSELECT \r\n\tN.NurseAssignmentTimeWorkedId, \r\n\tN.NurseAssignmentTimeWorkedAkId, \r\n\tN.NurseAssignmentAkId,\r\n\tN.TimeWorkedSequence, \r\n\tN.WorkedDate, \r\n\tN.TimeWorkedHours \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.NurseAssignmentTimeWorked N\r\n\t\r\n\twhere\r\n\tN.CurrentSnapshotFlag = 1\n),\nEXP_Scr_values_Default AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedId,\n\tNurseAssignmentTimeWorkedAkId,\n\tNurseAssignmentAkId,\n\tTimeWorkedSequence AS IN_TimeWorkedSequence,\n\t-- *INF*: iif(isnull(IN_TimeWorkedSequence),-1,IN_TimeWorkedSequence)\n\tIFF(IN_TimeWorkedSequence IS NULL, - 1, IN_TimeWorkedSequence) AS v_TimeWorkedSequence,\n\tv_TimeWorkedSequence AS TimeWorkedSequence,\n\tWorkedDate AS IN_WorkedDate,\n\t-- *INF*: :LKP.LKP_CALANDER_DIM(to_date(to_char(IN_WorkedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALANDER_DIM_to_date_to_char_IN_WorkedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_WorkedDate,\n\t-- *INF*: iif(isnull(v_WorkedDate),-1,v_WorkedDate)\n\tIFF(v_WorkedDate IS NULL, - 1, v_WorkedDate) AS TimeWorkedEnteredDateId,\n\tTimeWorkedHours AS IN_TimeWorkedHours,\n\t-- *INF*: iif(isnull(IN_TimeWorkedHours), 0,IN_TimeWorkedHours) \n\tIFF(IN_TimeWorkedHours IS NULL, 0, IN_TimeWorkedHours) AS v_TimeWorkedHours,\n\tv_TimeWorkedHours AS TimeWorkedHours\n\tFROM SQ_NurseAssignmentTimeWorked\n\tLEFT JOIN LKP_CALANDER_DIM LKP_CALANDER_DIM_to_date_to_char_IN_WorkedDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALANDER_DIM_to_date_to_char_IN_WorkedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(IN_WorkedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n),\nLKP_NurseAssignment AS (\n\tSELECT\n\tNurseAssignmentId,\n\tNurseAssignmentAkId,\n\tNurseCaseAkId\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseAssignmentId as NurseAssignmentId, \r\n\t\tN.NurseCaseAkId as NurseCaseAkId, \r\n\t\tN.claim_party_ak_id as claim_party_ak_id, \r\n\t\tN.NurseAssignmentAkId as NurseAssignmentAkId\r\n\t\t\r\n\t\t FROM\r\n\t\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.NurseAssignment N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseAssignmentAkId ORDER BY NurseAssignmentId) = 1\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tNurseAssignmentId,\n\tNurseAssignmentAkId,\n\tNurseCaseAkId\n\tFROM LKP_NurseAssignment\n),\nLKP_NurseAssignmentDim AS (\n\tSELECT\n\tNurseAssignmentDimId,\n\tEdwNurseAssignmentAkId\n\tFROM (\n\t\tSELECT \r\n\t\tN.NurseAssignmentDimId as NurseAssignmentDimId,\r\n\t\tN.EdwNurseAssignmentPkId as EdwNurseAssignmentPkId, \r\n\t\tN.EdwNurseAssignmentAkId as EdwNurseAssignmentAkId\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentDim N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EdwNurseAssignmentAkId ORDER BY NurseAssignmentDimId) = 1\n),\nmplt_Claimant_Occurrence_dim_ids AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_NurseCase_EDW_Scr AS (\n\t\tSELECT\n\t\tclaim_party_occurrence_ak_id,\n\t\tNurseCaseAkId\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tN.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\t\tN.NurseCaseAkId as NurseCaseAkId\r\n\t\t\t\r\n\t\t\t FROM \r\n\t\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.NurseCase N\r\n\t\t\t\r\n\t\t\twhere\r\n\t\t\tCurrentSnapshotFlag = 1\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseCaseAkId ORDER BY claim_party_occurrence_ak_id) = 1\n\t),\n\tLKP_claimant_dim_DM_Tgt AS (\n\t\tSELECT\n\t\tclaimant_dim_id,\n\t\tedw_claim_party_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tC.claimant_dim_id as claimant_dim_id, C.edw_claim_party_occurrence_ak_id as edw_claim_party_occurrence_ak_id\r\n\t\t\t\r\n\t\t\t FROM\r\n\t\t\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_dim C\r\n\t\t\t\r\n\t\t\twhere\r\n\t\t\tcrrnt_snpsht_flag = 1\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_party_occurrence_ak_id ORDER BY claimant_dim_id) = 1\n\t),\n\tLKP_claim_party_occurrence_EDW_Scr AS (\n\t\tSELECT\n\t\tclaim_occurrence_ak_id,\n\t\tclaim_party_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tC.claim_occurrence_ak_id as claim_occurrence_ak_id, C.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id\r\n\t\t\t\r\n\t\t\t FROM \r\n\t\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence C\r\n\t\t\t\r\n\t\t\twhere\r\n\t\t\tcrrnt_snpsht_flag = 1\r\n\t\t\tAND\r\n\t\t\tclaim_party_role_code in ('CLMT','CMT')\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claim_occurrence_ak_id) = 1\n\t),\n\tLKP_claim_occurrence_dim_DM_Tgt AS (\n\t\tSELECT\n\t\tclaim_occurrence_dim_id,\n\t\tedw_claim_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT\r\n\t\t\tC.claim_occurrence_dim_id as claim_occurrence_dim_id, C.edw_claim_occurrence_ak_id as edw_claim_occurrence_ak_id \r\n\t\t\t\r\n\t\t\tFROM \r\n\t\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence_dim C\r\n\t\t\t\r\n\t\t\twhere\r\n\t\t\tcrrnt_snpsht_flag = 1\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id ORDER BY claim_occurrence_dim_id) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tLKP_claimant_dim_DM_Tgt.claimant_dim_id, \n\t\tLKP_claim_occurrence_dim_DM_Tgt.claim_occurrence_dim_id\n\t\tFROM \n\t\tLEFT JOIN LKP_claim_occurrence_dim_DM_Tgt\n\t\tON LKP_claim_occurrence_dim_DM_Tgt.edw_claim_occurrence_ak_id = LKP_claim_party_occurrence_EDW_Scr.claim_occurrence_ak_id\n\t\tLEFT JOIN LKP_claimant_dim_DM_Tgt\n\t\tON LKP_claimant_dim_DM_Tgt.edw_claim_party_occurrence_ak_id = LKP_NurseCase_EDW_Scr.claim_party_occurrence_ak_id\n\t),\n),\nEXP_Defualt_Values AS (\n\tSELECT\n\tLKP_NurseAssignmentDim.NurseAssignmentDimId AS IN_NurseAssignmentDimId,\n\t-- *INF*: iif(isnull(IN_NurseAssignmentDimId), -1,IN_NurseAssignmentDimId)\n\tIFF(IN_NurseAssignmentDimId IS NULL, - 1, IN_NurseAssignmentDimId) AS v_NurseAssignmentDimId,\n\tv_NurseAssignmentDimId AS NurseAssignmentDimId,\n\tmplt_Claimant_Occurrence_dim_ids.claim_occurrence_dim_id AS IN_claim_occurrence_dim_id,\n\t-- *INF*: iif(isnull(IN_claim_occurrence_dim_id), -1,IN_claim_occurrence_dim_id)\n\tIFF(IN_claim_occurrence_dim_id IS NULL, - 1, IN_claim_occurrence_dim_id) AS v_claim_occurrence_dim_id,\n\tv_claim_occurrence_dim_id AS claim_occurrence_dim_id,\n\tmplt_Claimant_Occurrence_dim_ids.claimant_dim_id AS IN_claimant_dim_id,\n\t-- *INF*: iif(isnull(IN_claimant_dim_id),-1,IN_claimant_dim_id)\n\tIFF(IN_claimant_dim_id IS NULL, - 1, IN_claimant_dim_id) AS v_claimant_dim_id,\n\tv_claimant_dim_id AS claimant_dim_id,\n\tEXP_Scr_values_Default.NurseAssignmentTimeWorkedId,\n\tEXP_Scr_values_Default.TimeWorkedSequence,\n\tEXP_Scr_values_Default.TimeWorkedEnteredDateId,\n\tEXP_Scr_values_Default.TimeWorkedHours\n\tFROM EXP_Scr_values_Default\n\t -- Manually join with mplt_Claimant_Occurrence_dim_ids\n\tLEFT JOIN LKP_NurseAssignmentDim\n\tON LKP_NurseAssignmentDim.EdwNurseAssignmentAkId = EXP_Lkp_Values.NurseAssignmentAkId\n),\nLKP_NurseAssignmentTimeWorkedFact AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedFactId,\n\tEdwNurseAssignmentTimeWorkedPkId,\n\tclaimant_dim_id,\n\tclaim_occurrence_dim_id,\n\tNurseAssignmentDimId,\n\tTimeWorkedEnteredDateId,\n\tTimeWorkedSequence,\n\tTimeWorkedHours,\n\tIN_NurseAssignmentTimeWorkedPKId\n\tFROM (\n\t\tSELECT \n\t\t\tNurseAssignmentTimeWorkedFactId,\n\t\t\tEdwNurseAssignmentTimeWorkedPkId,\n\t\t\tclaimant_dim_id,\n\t\t\tclaim_occurrence_dim_id,\n\t\t\tNurseAssignmentDimId,\n\t\t\tTimeWorkedEnteredDateId,\n\t\t\tTimeWorkedSequence,\n\t\t\tTimeWorkedHours,\n\t\t\tIN_NurseAssignmentTimeWorkedPKId\n\t\tFROM NurseAssignmentTimeWorkedFact\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EdwNurseAssignmentTimeWorkedPkId ORDER BY NurseAssignmentTimeWorkedFactId) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseAssignmentTimeWorkedFact.NurseAssignmentTimeWorkedFactId AS Lkp_NurseAssignmentTimeWorkedFactId,\n\tLKP_NurseAssignmentTimeWorkedFact.EdwNurseAssignmentTimeWorkedPkId AS Lkp_EdwNurseAssignmentTimeWorkedPkId,\n\tLKP_NurseAssignmentTimeWorkedFact.claimant_dim_id AS Lkp_claimant_dim_id,\n\tLKP_NurseAssignmentTimeWorkedFact.claim_occurrence_dim_id AS Lkp_claim_occurrence_dim_id,\n\tLKP_NurseAssignmentTimeWorkedFact.NurseAssignmentDimId AS Lkp_NurseAssignmentDimId,\n\tLKP_NurseAssignmentTimeWorkedFact.TimeWorkedEnteredDateId AS Lkp_TimeWorkedEnteredDateId,\n\tLKP_NurseAssignmentTimeWorkedFact.TimeWorkedSequence AS Lkp_TimeWorkedSequence,\n\tLKP_NurseAssignmentTimeWorkedFact.TimeWorkedHours AS Lkp_TimeWorkedHours,\n\t-- *INF*: iif(isnull(Lkp_NurseAssignmentTimeWorkedFactId), 'NEW',\r\n\t-- \r\n\t-- iif (\r\n\t-- \r\n\t-- Lkp_EdwNurseAssignmentTimeWorkedPkId != NurseAssignmentTimeWorkedId\r\n\t--  OR \r\n\t-- Lkp_claimant_dim_id != claimant_dim_id\r\n\t--  OR \r\n\t-- Lkp_claim_occurrence_dim_id != claim_occurrence_dim_id\r\n\t--  OR \r\n\t-- Lkp_NurseAssignmentDimId != NurseAssignmentDimId\r\n\t--  OR \r\n\t-- Lkp_TimeWorkedEnteredDateId != TimeWorkedEnteredDateId\r\n\t--  OR \r\n\t-- Lkp_TimeWorkedSequence != TimeWorkedSequence\r\n\t--  OR \r\n\t-- Lkp_TimeWorkedHours != TimeWorkedHours,\r\n\t-- \r\n\t--   'UPDATE','NOCHANGE' )\r\n\t-- \r\n\t--   )       \n\tIFF(Lkp_NurseAssignmentTimeWorkedFactId IS NULL, 'NEW', IFF(Lkp_EdwNurseAssignmentTimeWorkedPkId != NurseAssignmentTimeWorkedId OR Lkp_claimant_dim_id != claimant_dim_id OR Lkp_claim_occurrence_dim_id != claim_occurrence_dim_id OR Lkp_NurseAssignmentDimId != NurseAssignmentDimId OR Lkp_TimeWorkedEnteredDateId != TimeWorkedEnteredDateId OR Lkp_TimeWorkedSequence != TimeWorkedSequence OR Lkp_TimeWorkedHours != TimeWorkedHours, 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\tEXP_Defualt_Values.NurseAssignmentDimId,\n\tEXP_Defualt_Values.claim_occurrence_dim_id,\n\tEXP_Defualt_Values.claimant_dim_id,\n\tEXP_Defualt_Values.NurseAssignmentTimeWorkedId,\n\tEXP_Defualt_Values.TimeWorkedSequence,\n\tEXP_Defualt_Values.TimeWorkedEnteredDateId,\n\tEXP_Defualt_Values.TimeWorkedHours,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId\n\tFROM EXP_Defualt_Values\n\tLEFT JOIN LKP_NurseAssignmentTimeWorkedFact\n\tON LKP_NurseAssignmentTimeWorkedFact.EdwNurseAssignmentTimeWorkedPkId = EXP_Defualt_Values.NurseAssignmentTimeWorkedId\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tLkp_NurseAssignmentTimeWorkedFactId,\n\tChangedFlag,\n\tNurseAssignmentDimId,\n\tclaim_occurrence_dim_id,\n\tclaimant_dim_id,\n\tNurseAssignmentTimeWorkedId,\n\tTimeWorkedSequence,\n\tTimeWorkedEnteredDateId,\n\tTimeWorkedHours,\n\to_AuditId AS AuditId\n\tFROM EXP_Detect_Changes\n),\nRTR_Insert_Update_Insert AS (SELECT * FROM RTR_Insert_Update WHERE ChangedFlag = 'NEW'),\nRTR_Insert_Update_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update WHERE NOT ( (ChangedFlag = 'NEW') )),\nUPD_Insert AS (\n\tSELECT\n\tNurseAssignmentDimId AS NurseAssignmentDimId1, \n\tclaim_occurrence_dim_id AS claim_occurrence_dim_id1, \n\tclaimant_dim_id AS claimant_dim_id1, \n\tNurseAssignmentTimeWorkedId AS NurseAssignmentTimeWorkedId1, \n\tTimeWorkedSequence AS TimeWorkedSequence1, \n\tTimeWorkedEnteredDateId AS TimeWorkedEnteredDateId1, \n\tTimeWorkedHours AS TimeWorkedHours1, \n\tAuditId AS AuditId1\n\tFROM RTR_Insert_Update_Insert\n),\nNurseAssignmentTimeWorkedFact_Insert AS (\n\tTRUNCATE TABLE NurseAssignmentTimeWorkedFact;\n\tINSERT INTO NurseAssignmentTimeWorkedFact\n\t(AuditId, EdwNurseAssignmentTimeWorkedPkId, claimant_dim_id, claim_occurrence_dim_id, NurseAssignmentDimId, TimeWorkedEnteredDateId, TimeWorkedSequence, TimeWorkedHours)\n\tSELECT \n\tAuditId1 AS AUDITID, \n\tNurseAssignmentTimeWorkedId1 AS EDWNURSEASSIGNMENTTIMEWORKEDPKID, \n\tclaimant_dim_id1 AS CLAIMANT_DIM_ID, \n\tclaim_occurrence_dim_id1 AS CLAIM_OCCURRENCE_DIM_ID, \n\tNurseAssignmentDimId1 AS NURSEASSIGNMENTDIMID, \n\tTimeWorkedEnteredDateId1 AS TIMEWORKEDENTEREDDATEID, \n\tTimeWorkedSequence1 AS TIMEWORKEDSEQUENCE, \n\tTimeWorkedHours1 AS TIMEWORKEDHOURS\n\tFROM UPD_Insert\n),\nUPD_Update AS (\n\tSELECT\n\tLkp_NurseAssignmentTimeWorkedFactId AS Lkp_NurseAssignmentTimeWorkedFactId2, \n\tNurseAssignmentDimId AS NurseAssignmentDimId2, \n\tclaim_occurrence_dim_id AS claim_occurrence_dim_id2, \n\tclaimant_dim_id AS claimant_dim_id2, \n\tNurseAssignmentTimeWorkedId AS NurseAssignmentTimeWorkedId2, \n\tTimeWorkedSequence AS TimeWorkedSequence2, \n\tTimeWorkedEnteredDateId AS TimeWorkedEnteredDateId2, \n\tTimeWorkedHours AS TimeWorkedHours2, \n\tAuditId AS AuditId2\n\tFROM RTR_Insert_Update_DEFAULT1\n),\nNurseAssignmentTimeWorkedFact_Update AS (\n\tMERGE INTO NurseAssignmentTimeWorkedFact AS T\n\tUSING UPD_Update AS S\n\tON T.NurseAssignmentTimeWorkedFactId = S.Lkp_NurseAssignmentTimeWorkedFactId2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId2, T.EdwNurseAssignmentTimeWorkedPkId = S.NurseAssignmentTimeWorkedId2, T.claimant_dim_id = S.claimant_dim_id2, T.claim_occurrence_dim_id = S.claim_occurrence_dim_id2, T.NurseAssignmentDimId = S.NurseAssignmentDimId2, T.TimeWorkedEnteredDateId = S.TimeWorkedEnteredDateId2, T.TimeWorkedSequence = S.TimeWorkedSequence2, T.TimeWorkedHours = S.TimeWorkedHours2\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246514"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905534"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604546"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 03:42:21"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 04:16:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}