{
    "name": "s_m_POL_STG_Insert_WorkDCTTransactionInsuranceLineLocationBridge",
    "properties": {
        "activities": [
            {
                "name": "m_POL_STG_Insert_WorkDCTTransactionInsuranceLineLoca_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_DCStatCode AS (\n\tSELECT\n\tValue,\n\tObjectId\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId\n\t\tFROM DCStatCodeStaging\n\t\tWHERE Type = 'Exposure'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId ORDER BY Value) = 1\n),\nLKP_WBGLCOVNS0453STG AS (\n\tSELECT\n\tRadonRetroactiveDate,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tRadonRetroactiveDate,\n\t\t\tCoverageId\n\t\tFROM WBGLCoverageNS0453Stage\n\t\tWHERE RadonRetroactiveDate IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY RadonRetroactiveDate) = 1\n),\nLKP_DCCFPersonalPropertyStaging AS (\n\tSELECT\n\tPropertyType,\n\tCF_RiskId\n\tFROM (\n\t\tSELECT \n\t\t\tPropertyType,\n\t\t\tCF_RiskId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFPersonalPropertyStaging\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CF_RiskId ORDER BY PropertyType) = 1\n),\nLKP_SupSpecialClassGroup AS (\n\tSELECT\n\tStandardSpecialClassGroupShortDescription,\n\tSpecialClassGroupCode\n\tFROM (\n\t\tSELECT \n\t\t\tStandardSpecialClassGroupShortDescription,\n\t\t\tSpecialClassGroupCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupSpecialClassGroup\n\t\tWHERE SourceSystemId='DCT' and CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SpecialClassGroupCode ORDER BY StandardSpecialClassGroupShortDescription) = 1\n),\nLKP_DCCFCoverageSpoilageStaging AS (\n\tSELECT\n\tSpoilageCoverageType,\n\tCoverageId\n\tFROM (\n\t\tSELECT case when BreakdownContamination=1 then 'BreakdownContamination' else '' end +\r\n\t\tcase when PowerOutage=1 then 'PowerOutage' else '' end\r\n\t\tas SpoilageCoverageType,\r\n\t\tCoverageId as CoverageId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFCoverageSpoilageStaging\r\n\t\torder by CoverageId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY SpoilageCoverageType) = 1\n),\nLKP_Exposure AS (\n\tSELECT\n\tValue,\n\tObjectId\n\tFROM (\n\t\tselect \r\n\t\tA.Value as Value,\r\n\t\tB.Coverageid as Objectid\r\n\t\tfrom\r\n\t\t(SELECT \r\n\t\tValue, \r\n\t\tObjectId\r\n\t\tFROM \r\n\t\tdbo.DCLimitStaging \r\n\t\twhere Type = 'UnitsOfExposure' and ObjectName = 'DC_Coverage')A\r\n\t\tinner join\r\n\t\t(select \r\n\t\tcase when (Type =  'USLandH') then ObjectId \r\n\t\t     else CoverageId  end as MatchId, \r\n\t\tCoverageId\r\n\t\tfrom dbo.DCCoverageStaging\r\n\t\twhere Type in  (\r\n\t\t'ManualPremium','USLandH')\r\n\t\t)B\r\n\t\ton A.ObjectId = B.MatchId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId ORDER BY Value) = 1\n),\nLKP_WBCDOCoverageDirectorsAndOfficersCondosStage AS (\n\tSELECT\n\tNumberOfUnits,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tNumberOfUnits,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCDOCoverageDirectorsAndOfficersCondosStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY NumberOfUnits) = 1\n),\nLKP_DCCFOccupancyStaging AS (\n\tSELECT\n\tOccupancyType,\n\tSessionId\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(OccupancyType)) AS OccupancyType,cf.SessionId AS Sessionid\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFRiskStaging cf \r\n\t\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFOccupancyStaging cfo\r\n\t\ton cfo.sessionid =cf.sessionid and cfo.cf_riskid=cf.cf_riskid\r\n\t\torder by cf.SessionId,cf.CF_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY OccupancyType) = 1\n),\nLKP_DCBPCoverageSpoilageStaging AS (\n\tSELECT\n\tType,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tType,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoverageSpoilageStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY Type) = 1\n),\nLKP_WBGLCoverageWB2525 AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionFinalCommissionValue,\n\t\t\tCoverageId\n\t\tFROM WBGLCoverageWB2525Stage\n\t\tWHERE TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_WBCFCoverageDataCompromise AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tselect CF.TransactionFinalCommissionValue as TransactionFinalCommissionValue,CL.CoverageID as CoverageID\r\n\t\t from WBCLCoverageDataCompromiseStage  CL\t\r\n\t\tinner join WBCFCoverageDataCompromiseStage CF\t\r\n\t\ton CF.WB_CL_CoverageDataCompromiseId = CL.WB_CL_CoverageDataCompromiseId\r\n\t\tWhere CF.TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_WBGLCoverageWB516GL AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionFinalCommissionValue,\n\t\t\tCoverageId\n\t\tFROM WBGLCoverageWB516GLStage\n\t\tWHERE TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_WBCFCoverageEquipmentBreakdown AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionFinalCommissionValue,\n\t\t\tCoverageId\n\t\tFROM WBCFCoverageEquipmentBreakdownStage\n\t\tWHERE TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_DCBPLocation AS (\n\tSELECT\n\tRetureValue,\n\tin_LineID,\n\tLineId\n\tFROM (\n\t\tselect DCBPBuildingStage.PredominantLiabilityLiabExpBase + '--' +\r\n\t\tDCBPBuildingStage.ConstructionCode  +  '~~' +\r\n\t\tWBBPLocationAccountStage.ProtectionClassOverride as RetureValue, \r\n\t\tDCLineStaging.LineId AS LineId, \r\n\t\tDCBPLocationStage.BPLocationId AS BPLocationId,\r\n\t\tDCLocationAssociationStaging.LocationAssociationId  as LocationAssociationId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging on DCLocationStaging.LocationId=DCLocationAssociationStaging.LocationId and ObjectName ='DC_BP_Location' and DCLocationStaging.Description ='Primary Location' \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPLocationStage on DCLocationAssociationStaging.ObjectId =DCBPLocationStage.BPLocationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPBuildingStage on DCBPLocationStage.BPLocationId = DCBPBuildingStage.BPLocationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationAccountStage on DCLocationStaging.LocationId = WBLocationAccountStage.LocationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLLocationAccountStage on WBLocationAccountStage.WBLocationAccountId  = WBCLLocationAccountStage.WBLocationAccountId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPLocationAccountStage on WBBPLocationAccountStage.WB_CL_LocationAccountId = WBCLLocationAccountStage.WBCLLocationAccountId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging on DCLocationStaging.SessionId =DCLineStaging.SessionId and DCLineStaging.Type = 'BusinessOwners'\r\n\t\torder by DCLineStaging.LineId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineId ORDER BY RetureValue) = 1\n),\nLKP_WBEPLCoverageEmploymentPracticesLiabilityStage AS (\n\tSELECT\n\tTotalNumberOfEmployees,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTotalNumberOfEmployees,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBEPLCoverageEmploymentPracticesLiabilityStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TotalNumberOfEmployees) = 1\n),\nLKP_DCCROccupancyStaging AS (\n\tSELECT\n\tOccupancyTypeMonoline,\n\tSessionId,\n\tCrimeClass\n\tFROM (\n\t\tSELECT \n\t\t\tOccupancyTypeMonoline,\n\t\t\tSessionId,\n\t\t\tCrimeClass\n\t\tFROM DCCROccupancyStage\n\t\tWHERE CrimeClass IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY OccupancyTypeMonoline DESC) = 1\n),\nLKP_DCCRRiskType AS (\n\tSELECT\n\tRiskType,\n\tin_SessionId,\n\tSessionId\n\tFROM (\n\t\tselect  \r\n\t\tCASE WHEN charindex(' ',DcCrRiskCrimeStage.Type)>1 THEN substring(DcCrRiskCrimeStage.Type,1,charindex('_',DcCrRiskCrimeStage.Type)-1)\r\n\t\tELSE DcCrRiskCrimeStage.Type END as RiskType,\r\n\t\tDCCRLineStage.SessionId as sessionid,\r\n\t\tDCCRLineStage.LineId as LineId,\r\n\t\tDcCrRiskStage.CRRiskId as RiskId\r\n\t\t from \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCROccupancyStage on DCLineStaging.SessionId = DCCROccupancyStage.SessionId and DCLineStaging.Type ='Crime'\r\n\t\tinner  join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLineStage on DCLineStaging.LineId = DCCRLineStage.LineId \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskStage on DCCROccupancyStage.CR_OccupancyId = DcCrRiskStage.CrOccupancyId  \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskCrimeStage on DcCrRiskStage.CrRiskId =DcCrRiskCrimeStage.CrRiskId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY RiskType) = 1\n),\nLKP_DCStatCodeStaging AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId,\n\t\t\tSessionId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging\n\t\tWHERE ObjectName='DC_Coverage' and Type='Class' and Value <> '9999'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DC_LIMIT AS (\n\tSELECT\n\tValue,\n\ti_CVG_Type,\n\tRiskId,\n\tType,\n\tCVG_Type\n\tFROM (\n\t\tSELECT\r\n\t\tl.value as Value,\r\n\t\tr.BPRiskId as RiskId,\r\n\t\tl.Type as Type,\r\n\t\tC.type as CVG_Type\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLimitStaging l\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging c\r\n\t\ton l.ObjectId=c.CoverageId and l.SessionId=c.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPRiskStage r\r\n\t\ton r.BPRiskId=c.ObjectId and r.SessionId=c.SessionId\r\n\t\tWHERE l.ObjectName='DC_Coverage' and l.Type in ('standard','payroll','GrossSales')\r\n\t\tAND c.Type in ('Building','PersonalProperty','RiskLiability','FunctionalBuildingValuation','PersonalPropertyOfOthers','ImprovementsAndBetterments')\r\n\t\tAND l.value<>'0'\r\n\t\t--Added additional Coverage types and exclude zero limit values\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId,Type,CVG_Type ORDER BY Value) = 1\n),\nLKP_DCBPCoverageBusinessIncomeExtendedPeriodStage AS (\n\tSELECT\n\tDays,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tDays,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoverageBusinessIncomeExtendedPeriodStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY Days DESC) = 1\n),\nLKP_DCBPCoverageBusinessIncomeOrdinaryPayrollStage AS (\n\tSELECT\n\tDays,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tDays,\n\t\t\tCoverageId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoverageBusinessIncomeOrdinaryPayrollStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY Days DESC) = 1\n),\nLKP_WBBPCoverageDataCompromiseStage AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tselect BP.TransactionFinalCommissionValue as TransactionFinalCommissionValue, CL.CoverageId as CoverageId\r\n\t\tfrom WBBPCoverageDataCompromiseStage BP\r\n\t\tjoin WBCLCoverageDataCompromiseStage CL  on BP.WB_CL_CoverageDataCompromiseId=CL.WB_CL_CoverageDataCompromiseId\r\n\t\twhere BP.TransactionFinalCommissionValue is not null\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_WBBPCoverageEmploymentPracticesLiabilityStage AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionFinalCommissionValue,\n\t\t\tCoverageId\n\t\tFROM WBBPCoverageEmploymentPracticesLiabilityStage\n\t\tWHERE TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_WBBPCoverageEquipBreakdownStage AS (\n\tSELECT\n\tTransactionFinalCommissionValue,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionFinalCommissionValue,\n\t\t\tCoverageId\n\t\tFROM WBBPCoverageEquipBreakdownStage\n\t\tWHERE TransactionFinalCommissionValue IS NOT NULL\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY TransactionFinalCommissionValue) = 1\n),\nLKP_RetroactiveDate AS (\n\tSELECT\n\tRetroactiveDate,\n\tCoverageId\n\tFROM (\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCDOCoverageDirectorsAndOfficersCondosStage\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBEPLCoverageEmploymentPracticesLiabilityStage\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBNDOCoverageDirectorsAndOfficersNFPStage\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGLCoverageWB516GLStage\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPCoverageEmploymentPracticesLiabilityStage\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect a.RetroactiveDate as RetroactiveDate,\r\n\t\tb.CoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCAEndorsementWB516Stage a\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCoverageStage b\r\n\t\ton a.WB_CoverageId=b.WBCoverageId\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect RetroactiveDate as RetroactiveDate,\r\n\t\tCoverageId as CoverageId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGLCoverageWB2579Stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY RetroactiveDate) = 1\n),\nLKP_WorkDCTPolicy AS (\n\tSELECT\n\tWBProductType,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tWBProductType,\n\t\t\tSessionId\n\t\tFROM WorkDCTPolicy\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY WBProductType) = 1\n),\nLKP_DCGLCoverageRailroadProtectiveLiabilityStaging AS (\n\tSELECT\n\tExposure,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tExposure,\n\t\t\tCoverageId\n\t\tFROM DCGLCoverageRailroadProtectiveLiabilityStaging\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY Exposure) = 1\n),\nLKP_DCGLCoverageOwnersContractorsOrPrincipalsStaging AS (\n\tSELECT\n\tExposure,\n\tCoverageId\n\tFROM (\n\t\tSELECT \n\t\t\tExposure,\n\t\t\tCoverageId\n\t\tFROM DCGLCoverageOwnersContractorsOrPrincipalsStaging\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY Exposure) = 1\n),\nSQ_WorkDCTCoverageTransaction AS (\n\tselect \r\n\tsessionid,\r\n\tParentCoverageObjectId,\r\n\tParentCoverageObjectName,\r\n\tCoverageId,\r\n\tParentCoverageType,\r\n\tSubCoverageType\r\n\t\r\n\tfrom dbo.WorkDCTCoverageTransaction\r\n\twhere\r\n\tNOT (WorkDCTCoverageTransaction.ParentCoverageObjectName IN ('DC_WC_State') and Not (Parentcoveragetype = 'RetrospectiveCalculation'))\n),\nEXP_Default AS (\n\tSELECT\n\tSessionId,\n\tParentCoverageObjectId,\n\tParentCoverageObjectName,\n\tCoverageId,\n\tParentCoverageType,\n\tSubCoverageType\n\tFROM SQ_WorkDCTCoverageTransaction\n),\nRTR_InsuranceLine AS (\n\tSELECT\n\tSessionId,\n\tParentCoverageObjectId,\n\tParentCoverageObjectName,\n\tCoverageId,\n\tParentCoverageType AS CoverageType,\n\tSubCoverageType\n\tFROM EXP_Default\n),\nRTR_InsuranceLine_DC_Line AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_Line'),\nRTR_InsuranceLine_DC_GL_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_GL_Risk'),\nRTR_InsuranceLine_DC_WC_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_WC_Risk'),\nRTR_InsuranceLine_DC_CR_RiskCrime AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CR_RiskCrime'),\nRTR_InsuranceLine_DC_IM_CoverageForm AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_IM_CoverageForm'),\nRTR_InsuranceLine_DC_IM_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_IM_Risk'),\nRTR_InsuranceLine_WB_HIO_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_HIO_Risk'),\nRTR_InsuranceLine_WB_HIO_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_HIO_State'),\nRTR_InsuranceLine_WB_GOC_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_GOC_Risk'),\nRTR_InsuranceLine_DC_BP_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_BP_Risk'),\nRTR_InsuranceLine_DC_BP_Location AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_BP_Location'),\nRTR_InsuranceLine_DC_CR_Endorsement AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CR_Endorsement'),\nRTR_InsuranceLine_DC_CF_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CF_Risk'),\nRTR_InsuranceLine_DC_CA_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CA_State'),\nRTR_InsuranceLine_DC_CA_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CA_Risk'),\nRTR_InsuranceLine_WB_CU_PremiumDetail AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_CU_PremiumDetail'),\nRTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CU_UmbrellaEmployersLiability'),\nRTR_InsuranceLine_DC_WC_StateTerm AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_WC_StateTerm'),\nRTR_InsuranceLine_WB_GOC_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_GOC_State'),\nRTR_InsuranceLine_WB_IM_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_IM_State'),\nRTR_InsuranceLine_DC_CR_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CR_Risk'),\nRTR_InsuranceLine_DC_CA_BusinessInterruption AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_CA_BusinessInterruptionOption'),\nRTR_InsuranceLine_WB_EC_Risk AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_EC_Risk'),\nRTR_InsuranceLine_WB_EC_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='WB_EC_State'),\nRTR_InsuranceLine_DC_Location AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_Location'),\nRTR_InsuranceLine_DC_WC_State AS (SELECT * FROM RTR_InsuranceLine WHERE ParentCoverageObjectName='DC_WC_State'),\nLKP_DC_BP_Location AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tPredominantLiabilityLiabExpBase,\n\tConstructionCode,\n\tProtectionClassOverride,\n\tBuildingNumber,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tBPLocationId\n\tFROM (\n\t\tSELECT DCLocationAssociationStaging.LocationAssociationId AS LocationAssociationID,\r\n\t\t\tDCLineStaging.LineId AS LineID,\r\n\t\t\tNull AS PredominantLiabilityLiabExpBase,\r\n\t\t\tNULL AS ConstructionCode,\r\n\t\t\tWBBPLocationAccountStage.ProtectionClassOverride AS ProtectionClassOverride,\r\n\t\t\tNULL AS BuildingNumber,\r\n\t\t\tNULL AS OccupancyClassDescription,\r\n\t\t\tNULL AS ActiveBuildingFlag,\r\n\t\t\tDCBPLocationStage.BPLocationId AS BPLocationID\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging\r\n\t\t\tON DCLocationStaging.SessionId = DCLocationAssociationStaging.SessionId\r\n\t\t\t\tAND DCLocationStaging.LocationId = DCLocationAssociationStaging.LocationId\r\n\t\t\t\tAND ObjectName = 'DC_BP_Location'\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPLocationStage\r\n\t\t\tON DCLocationAssociationStaging.SessionId = DCBPLocationStage.SessionId\r\n\t\t\t\tAND DCLocationAssociationStaging.ObjectId = DCBPLocationStage.BPLocationId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationAccountStage\r\n\t\t\tON DCLocationStaging.SessionId = WBLocationAccountStage.SessionId\r\n\t\t\t\tAND DCLocationStaging.LocationId = WBLocationAccountStage.LocationId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLLocationAccountStage\r\n\t\t\tON WBLocationAccountStage.SessionId = WBCLLocationAccountStage.SessionId\r\n\t\t\t\tAND WBLocationAccountStage.WBLocationAccountId = WBCLLocationAccountStage.WBLocationAccountId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPLocationAccountStage\r\n\t\t\tON WBBPLocationAccountStage.SessionId = WBCLLocationAccountStage.SessionId\r\n\t\t\t\tAND WBBPLocationAccountStage.WB_CL_LocationAccountId = WBCLLocationAccountStage.WBCLLocationAccountId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging\r\n\t\t\tON DCLocationStaging.SessionId = DCLineStaging.SessionId\r\n\t\t\t\tAND DCLineStaging.Type = 'BusinessOwners'\r\n\t\tORDER BY DCBPLocationStage.BPLocationId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BPLocationId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_BP_Location AS (\n\tSELECT\n\tLKP_DC_BP_Location.LocationAssociationId,\n\tRTR_InsuranceLine_DC_BP_Location.SessionId,\n\tLKP_DC_BP_Location.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_BP_Location.CoverageId,\n\tRTR_InsuranceLine_DC_BP_Location.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\tLKP_DC_BP_Location.PredominantLiabilityLiabExpBase,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\tLKP_DC_BP_Location.BuildingNumber AS i_BuildingNumber,\n\t-- *INF*: LPAD(TO_INTEGER(i_BuildingNumber),3,'0')\n\tLPAD(CAST(i_BuildingNumber AS INTEGER), 3, '0') AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_BP_Location.ConstructionCode,\n\tLKP_DC_BP_Location.ProtectionClassOverride,\n\tLKP_DC_BP_Location.OccupancyClassDescription,\n\tLKP_DC_BP_Location.ActiveBuildingFlag\n\tFROM RTR_InsuranceLine_DC_BP_Location\n\tLEFT JOIN LKP_DC_BP_Location\n\tON LKP_DC_BP_Location.BPLocationId = RTR_InsuranceLine.ParentCoverageObjectId12\n),\nLKP_DC_BP_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tConstructionCode,\n\tOccupancyType,\n\tBOPNewLiabExpBase,\n\tSprinkler,\n\tPredominantPersonalPropertyRateNumber,\n\tPredominantBuildingLiabClassGroup,\n\tProtectionClassOverride,\n\tOccupancyOccupied,\n\tOccupancyPercentage,\n\tBuildingNumber,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tYearBuilt,\n\tRiskId,\n\tPredominantBuildingBCCCode,\n\tPredominantBuildingClassCodeDescription\n\tFROM (\n\t\tSELECT DCLA.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tBPRisk.LineId AS LineId,\r\n\t\t\tBPBuilding.ConstructionCode AS ConstructionCode,\r\n\t\t\tDCBPO.OccupancyType AS OccupancyType,\r\n\t\t\tISNULL(DCBPO.BOPNewLiabExpBaseOverride, DCBPO.BOPNewLiabExpBase) AS BOPNewLiabExpBase,\r\n\t\t\tBPBuilding.Sprinkler AS Sprinkler,\r\n\t\t\tBPBuilding.PredominantPersonalPropertyRateNumber AS PredominantPersonalPropertyRateNumber,\r\n\t\t\tBPBuilding.PredominantBuildingLiabClassGroup AS PredominantBuildingLiabClassGroup,\r\n\t\t\tWBBPLocationAccountStage.ProtectionClassOverride AS ProtectionClassOverride,\r\n\t\t\tBPRisk.OccupancyOccupied AS OccupancyOccupied,\r\n\t\t\tBPRisk.OccupancyPercentage AS OccupancyPercentage,\r\n\t\t\tWBBPBuildingStage.LocationBuildingNumberShadow AS BuildingNumber,\r\n\t\t\tDCBPO.DescriptionBOP AS OccupancyClassDescription,\r\n\t\t\tCASE ISNULL(BPRisk.Deleted, 0)\r\n\t\t\t\tWHEN 0\r\n\t\t\t\t\tTHEN '1'\r\n\t\t\t\tELSE '0'\r\n\t\t\t\tEND AS ActiveBuildingFlag,\r\n\t\t\tBPBuilding.YearBuilt AS YearBuilt,\r\n\t\t\tBPRisk.BPRiskId AS RiskId,\r\n\t\t      WBBPBuildingStage.PredominantBuildingBCCCode AS PredominantBuildingBCCCode,\r\n\t\t      WBBPBuildingStage.PredominantBuildingClassCodeDescription AS PredominantBuildingClassCodeDescription\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPRiskStage BPRisk\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPBuildingStage BPBuilding\r\n\t\t\tON BPRisk.BPBuildingId = BPBuilding.BPBuildingId\r\n\t\t\t\tAND BPRisk.Sessionid = BPBuilding.Sessionid\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPBuildingStage\r\n\t\t\tON WBBPBuildingStage.BP_BuildingId = BPBuilding.BPBuildingId\r\n\t\t\t\tAND WBBPBuildingStage.Sessionid = BPBuilding.Sessionid\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCLA\r\n\t\t\tON DCLA.ObjectId = BPBuilding.BPLocationId\r\n\t\t\t\tAND DCLA.Sessionid = BPBuilding.Sessionid\r\n\t\t\t\tAND DCLA.ObjectName = 'DC_BP_Location'\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPOccupancyStage DCBPO\r\n\t\t\tON DCBPO.BPRiskId = BPRisk.BPRiskId\r\n\t\t\t\tAND DCBPO.Sessionid = BPRisk.Sessionid\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationAccountStage WBLocationAccountStage\r\n\t\t\tON DCLA.LocationId = WBLocationAccountStage.LocationId\r\n\t\t\t\tAND DCLA.Sessionid = WBLocationAccountStage.Sessionid\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLLocationAccountStage WBCLLocationAccountStage\r\n\t\t\tON WBLocationAccountStage.WBLocationAccountId = WBCLLocationAccountStage.WBLocationAccountId\r\n\t\t\t\tAND WBLocationAccountStage.Sessionid = WBCLLocationAccountStage.Sessionid\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPLocationAccountStage WBBPLocationAccountStage\r\n\t\t\tON WBBPLocationAccountStage.WB_CL_LocationAccountId = WBCLLocationAccountStage.WBCLLocationAccountId\r\n\t\t\t\tAND WBBPLocationAccountStage.Sessionid = WBCLLocationAccountStage.Sessionid\r\n\t\tORDER BY BPRisk.BPRiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_BP_Risk AS (\n\tSELECT\n\tLKP_DC_BP_Risk.OccupancyOccupied AS i_OccupancyOccupied,\n\tLKP_DC_BP_Risk.OccupancyPercentage AS i_OccupancyPercentage,\n\tRTR_InsuranceLine_DC_BP_Risk.CoverageType AS i_CoverageType,\n\tLKP_DC_BP_Risk.Sprinkler AS i_Sprinkler,\n\tLKP_DC_BP_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_BP_Risk.SessionId,\n\tLKP_DC_BP_Risk.LineId,\n\tRTR_InsuranceLine_DC_BP_Risk.CoverageId,\n\tLKP_DC_BP_Risk.RiskId,\n\tLKP_DC_BP_Risk.ConstructionCode,\n\tLKP_DC_BP_Risk.OccupancyType,\n\tLKP_DC_BP_Risk.BOPNewLiabExpBase,\n\tLKP_DC_BP_Risk.PredominantPersonalPropertyRateNumber,\n\tLKP_DC_BP_Risk.PredominantBuildingLiabClassGroup AS PredominantLiabilityLiabClassGroup,\n\tLKP_DC_BP_Risk.ProtectionClassOverride,\n\t'N/A' AS IndividualRiskPremiumModification,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_CoverageType)) != 'Spoilage',i_CoverageType,i_CoverageType || IIF(NOT ISNULL(:LKP.LKP_DCBPCOVERAGESPOILAGESTAGING(CoverageId)),:LKP.LKP_DCBPCOVERAGESPOILAGESTAGING(CoverageId),''))\n\tIFF(\n\t    LTRIM(RTRIM(i_CoverageType)) != 'Spoilage', i_CoverageType,\n\t    i_CoverageType || \n\t    IFF(\n\t        LKP_DCBPCOVERAGESPOILAGESTAGING_CoverageId.Type IS NOT NULL,\n\t        LKP_DCBPCOVERAGESPOILAGESTAGING_CoverageId.Type,\n\t        ''\n\t    )\n\t) AS v_CoverageType,\n\tv_CoverageType AS o_CoverageType,\n\t'N/A' AS RiskType,\n\t-- *INF*: :LKP.LKP_DC_LIMIT(RiskId,'standard','Building')\n\tLKP_DC_LIMIT_RiskId_standard_Building.Value AS v_Limit_BLDG,\n\t-- *INF*: :LKP.LKP_DC_LIMIT(RiskId,'standard','FunctionalBuildingValuation')\n\tLKP_DC_LIMIT_RiskId_standard_FunctionalBuildingValuation.Value AS v_Limit_BLDGFUNCVAL,\n\t-- *INF*: :LKP.LKP_DC_LIMIT(RiskId,'standard','ImprovementsAndBetterments')\n\tLKP_DC_LIMIT_RiskId_standard_ImprovementsAndBetterments.Value AS v_Limit_IMPROV,\n\t-- *INF*: :LKP.LKP_DC_LIMIT(RiskId,'standard','PersonalProperty')\n\tLKP_DC_LIMIT_RiskId_standard_PersonalProperty.Value AS v_Limit_BUSPTY,\n\t-- *INF*: :LKP.LKP_DC_LIMIT(RiskId,'standard','PersonalPropertyOfOthers')\n\tLKP_DC_LIMIT_RiskId_standard_PersonalPropertyOfOthers.Value AS v_Limit_PPTYO,\n\t-- *INF*: IIF(isnull(v_Limit_BLDG),IIF(ISNULL(v_Limit_BLDGFUNCVAL),v_Limit_IMPROV,v_Limit_BLDGFUNCVAL),v_Limit_BLDG)\n\tIFF(\n\t    v_Limit_BLDG IS NULL,\n\t    IFF(\n\t        v_Limit_BLDGFUNCVAL IS NULL, v_Limit_IMPROV, v_Limit_BLDGFUNCVAL\n\t    ),\n\t    v_Limit_BLDG\n\t) AS v_Owner_LT_10,\n\t-- *INF*: IIF(ISNULL(v_Limit_BUSPTY),v_Limit_PPTYO,v_Limit_BUSPTY)\n\tIFF(v_Limit_BUSPTY IS NULL, v_Limit_PPTYO, v_Limit_BUSPTY) AS v_Owner_GT_10_Tenant_CondoUnitOwner,\n\t-- *INF*: IIF( isnull(:LKP.LKP_DC_LIMIT(RiskId,'payroll','RiskLiability')), '0',:LKP.LKP_DC_LIMIT(RiskId,'payroll','RiskLiability'))\n\tIFF(\n\t    LKP_DC_LIMIT_RiskId_payroll_RiskLiability.Value IS NULL, '0',\n\t    LKP_DC_LIMIT_RiskId_payroll_RiskLiability.Value\n\t) AS v_Limit_Payroll,\n\t-- *INF*: IIF( isnull(:LKP.LKP_DC_LIMIT(RiskId,'GrossSales','RiskLiability')), '0',:LKP.LKP_DC_LIMIT(RiskId,'GrossSales','RiskLiability'))\n\tIFF(\n\t    LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability.Value IS NULL, '0',\n\t    LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability.Value\n\t) AS v_Limit_Sales,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- BOPNewLiabExpBase='LOI',\r\n\t-- DECODE(TRUE,\r\n\t-- i_OccupancyOccupied='Owner' AND (i_OccupancyPercentage<=10 OR ISNULL(i_OccupancyPercentage)) ,v_Owner_LT_10,\r\n\t-- IN(i_OccupancyOccupied,'Tenant','CondoUnitOwner') OR (i_OccupancyOccupied='Owner' AND i_OccupancyPercentage>10),v_Owner_GT_10_Tenant_CondoUnitOwner,\r\n\t-- '-1'),\r\n\t-- BOPNewLiabExpBase='PAY', v_Limit_Payroll,\r\n\t-- BOPNewLiabExpBase='SALES', v_Limit_Sales,\r\n\t-- '-1'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    BOPNewLiabExpBase = 'LOI', DECODE(\n\t        TRUE,\n\t        i_OccupancyOccupied = 'Owner' AND (i_OccupancyPercentage <= 10 OR i_OccupancyPercentage IS NULL), v_Owner_LT_10,\n\t        i_OccupancyOccupied IN ('Tenant','CondoUnitOwner') OR (i_OccupancyOccupied = 'Owner' AND i_OccupancyPercentage > 10), v_Owner_GT_10_Tenant_CondoUnitOwner,\n\t        '-1'\n\t    ),\n\t    BOPNewLiabExpBase = 'PAY', v_Limit_Payroll,\n\t    BOPNewLiabExpBase = 'SALES', v_Limit_Sales,\n\t    '-1'\n\t) AS v_Exposure,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(v_Exposure) OR NOT IS_NUMBER(v_Exposure),\r\n\t-- -1,TO_DECIMAL(v_Exposure))\n\tIFF(\n\t    v_Exposure IS NULL OR NOT REGEXP_LIKE(v_Exposure, '^[0-9]+$'), - 1,\n\t    CAST(v_Exposure AS FLOAT)\n\t) AS o_Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\tLKP_DC_BP_Risk.BuildingNumber AS i_BuildingNumber,\n\t-- *INF*: LPAD(TO_INTEGER(i_BuildingNumber),3,'0')\n\tLPAD(CAST(i_BuildingNumber AS INTEGER), 3, '0') AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: DECODE(i_Sprinkler, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    i_Sprinkler,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_Sprinkler,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_OccupancyOccupied='Owner' and i_OccupancyPercentage>10,'Occupant Liability',\r\n\t-- i_OccupancyOccupied='Owner' and i_OccupancyPercentage<=10,'Lessors Liability',\r\n\t-- i_OccupancyOccupied='Tenant' or i_OccupancyOccupied='CondoUnitOwner','Occupant Liability',\r\n\t-- 'N/A'\r\n\t-- )\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --DECODE(TRUE,i_OccupancyOccupied='Owner' and i_OccupancyPercentage>10,'Occupant Liability',\r\n\t-- --i_OccupancyOccupied='Owner' and i_OccupancyPercentage<=10,'Lessors Liability','N/A')\n\tDECODE(\n\t    TRUE,\n\t    i_OccupancyOccupied = 'Owner' and i_OccupancyPercentage > 10, 'Occupant Liability',\n\t    i_OccupancyOccupied = 'Owner' and i_OccupancyPercentage <= 10, 'Lessors Liability',\n\t    i_OccupancyOccupied = 'Tenant' or i_OccupancyOccupied = 'CondoUnitOwner', 'Occupant Liability',\n\t    'N/A'\n\t) AS o_ISOOccupancyType,\n\tLKP_DC_BP_Risk.OccupancyClassDescription,\n\tLKP_DC_BP_Risk.ActiveBuildingFlag,\n\tLKP_DC_BP_Risk.YearBuilt,\n\tLKP_DC_BP_Risk.PredominantBuildingBCCCode,\n\tLKP_DC_BP_Risk.PredominantBuildingClassCodeDescription\n\tFROM RTR_InsuranceLine_DC_BP_Risk\n\tLEFT JOIN LKP_DC_BP_Risk\n\tON LKP_DC_BP_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId11\n\tLEFT JOIN LKP_DCBPCOVERAGESPOILAGESTAGING LKP_DCBPCOVERAGESPOILAGESTAGING_CoverageId\n\tON LKP_DCBPCOVERAGESPOILAGESTAGING_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_standard_Building\n\tON LKP_DC_LIMIT_RiskId_standard_Building.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_standard_Building.Type = 'standard'\n\tAND LKP_DC_LIMIT_RiskId_standard_Building.CVG_Type = 'Building'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_standard_FunctionalBuildingValuation\n\tON LKP_DC_LIMIT_RiskId_standard_FunctionalBuildingValuation.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_standard_FunctionalBuildingValuation.Type = 'standard'\n\tAND LKP_DC_LIMIT_RiskId_standard_FunctionalBuildingValuation.CVG_Type = 'FunctionalBuildingValuation'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_standard_ImprovementsAndBetterments\n\tON LKP_DC_LIMIT_RiskId_standard_ImprovementsAndBetterments.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_standard_ImprovementsAndBetterments.Type = 'standard'\n\tAND LKP_DC_LIMIT_RiskId_standard_ImprovementsAndBetterments.CVG_Type = 'ImprovementsAndBetterments'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_standard_PersonalProperty\n\tON LKP_DC_LIMIT_RiskId_standard_PersonalProperty.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_standard_PersonalProperty.Type = 'standard'\n\tAND LKP_DC_LIMIT_RiskId_standard_PersonalProperty.CVG_Type = 'PersonalProperty'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_standard_PersonalPropertyOfOthers\n\tON LKP_DC_LIMIT_RiskId_standard_PersonalPropertyOfOthers.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_standard_PersonalPropertyOfOthers.Type = 'standard'\n\tAND LKP_DC_LIMIT_RiskId_standard_PersonalPropertyOfOthers.CVG_Type = 'PersonalPropertyOfOthers'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_payroll_RiskLiability\n\tON LKP_DC_LIMIT_RiskId_payroll_RiskLiability.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_payroll_RiskLiability.Type = 'payroll'\n\tAND LKP_DC_LIMIT_RiskId_payroll_RiskLiability.CVG_Type = 'RiskLiability'\n\n\tLEFT JOIN LKP_DC_LIMIT LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability\n\tON LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability.RiskId = RiskId\n\tAND LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability.Type = 'GrossSales'\n\tAND LKP_DC_LIMIT_RiskId_GrossSales_RiskLiability.CVG_Type = 'RiskLiability'\n\n),\nLKP_DC_CA_BusinessInterruption AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineType,\n\tLineId,\n\tCoverageForm,\n\tCommissionPercentage,\n\tCompositeRating,\n\tOptionRating,\n\tTotalExposureOptionB,\n\tCA_BusinessInterruptionOptionId\n\tFROM (\n\t\tSELECT \r\n\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances).\r\n\t\t\tLocationAssociationId.LocationAssociationId as LocationAssociationId,\r\n\t\t    DCLine.Type as LineType,\r\n\t\t\tDCLine.LineId AS LineId,\r\n\t\t\tISNULL(WBCALine.CoverageForm, WBCALine.PolicyType) AS CoverageForm,\r\n\t\t\tWBLine.FinalCommission AS CommissionPercentage,\r\n\t\t\tDCCALine.CompositeRating AS CompositeRating,\r\n\t\t\tDCCABIO.OptionType as OptionRating, \r\n\t\t\tDCCABIO.TotalExposureOptionB as TotalExposureOptionB,\r\n\t\t\tDCCABIO.CA_BusinessInterruptionOptionId as CA_BusinessInterruptionOptionId\r\n\t\tFROM DCCABusinessInterruptionOptionStage DCCABIO\r\n\t\tINNER JOIN DCCABusinessInterruptionEndorsementStage DCCABIE ON DCCABIE.CA_BusinessInterruptionEndorsementId = DCCABIO.CA_BusinessInterruptionEndorsementId \r\n\t\tINNER JOIN dbo.DCLineStaging DCLine ON DCLine.LineId = DCCABIE.LineId \r\n\t\tLEFT OUTER JOIN dbo.DCCALineStaging DCCALine ON DCLine.SessionId = DCCALine.SessionId AND DCLine.LineId = DCCALine.LineId\r\n\t\tLEFT OUTER JOIN dbo.WBCALineStaging WBCALine ON DCCALine.SessionId = WBCALine.SessionId AND DCCALine.CA_LineId = WBCALine.CA_LineId\r\n\t\tLEFT OUTER JOIN dbo.WBLineStaging WBLine ON WBCALine.SessionId = WBLine.SessionId AND DCline.LineId = WBLine.LineId\r\n\t\t-- Informatica doesn't like the correlated sub query so using a cross apply\r\n\t\tCross Apply\r\n\t\t(\r\n\t\tSELECT TOP 1 LocationAssociation.LocationAssociationId\r\n\t\t    FROM dbo.DCLocationAssociationStaging AS LocationAssociation\r\n\t\t    INNER JOIN dbo.WBLocationStaging AS WBLoc\r\n\t\t         ON WBLoc.LocationId = LocationAssociation.LocationId\r\n\t\t            AND WBLoc.SessionId = LocationAssociation.SessionId\r\n\t\t    WHERE WBLoc.SessionId = DCLine.SessionId\r\n\t\t          AND (ltrim(rtrim(LocationAssociation.LocationAssociationType)) = CASE\r\n\t\t                                                                WHEN DCLine.Type = 'BusinessOwners' THEN 'BP_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'CommercialAuto' THEN 'CA_Location'\r\n\t\t                                                                WHEN DCLine.Type IN('Property', 'SBOPProperty') THEN 'CF_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'Crime' THEN 'CR_Location'\r\n\t\t                                                                WHEN DCLine.Type IN('SBOPGeneralLiability', 'GeneralLiability') THEN 'GL_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'InlandMarine' THEN 'IM_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'WorkersCompensation' THEN 'WC_Location' ELSE 'Location'\r\n\t\t                                                            END\r\n\t\tOR ltrim(rtrim(LocationAssociation.LocationAssociationType))='Location')\r\n\t\t    ORDER BY CAST(ISNULL(WBLoc.LocationNumber, 9999) AS INT),case when LocationAssociationType='Location' then 2 else 1 end\r\n\t\t) AS LocationAssociationId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CA_BusinessInterruptionOptionId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CA_BusinessInterruption AS (\n\tSELECT\n\tLKP_DC_CA_BusinessInterruption.LocationAssociationId,\n\tLKP_DC_CA_BusinessInterruption.LineType,\n\tRTR_InsuranceLine_DC_CA_BusinessInterruption.SessionId,\n\tLKP_DC_CA_BusinessInterruption.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CA_BusinessInterruption.CoverageId,\n\tRTR_InsuranceLine_DC_CA_BusinessInterruption.CoverageType AS i_CoverageType,\n\t-- *INF*: IIF(i_CoverageType = 'MCCA', 'MCCA Identified',i_CoverageType)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --DECODE(TRUE,\r\n\t-- --i_CoverageType!='MCCA',i_CoverageType,\r\n\t-- --ISNULL(i_CoverageType),i_CoverageType,\r\n\t-- --ISNULL(i_CompositeRating),'MCCA Identified',\r\n\t-- --i_CompositeRating='0','MCCA Identified',\r\n\t-- --'MCCA Non-Identified')\n\tIFF(i_CoverageType = 'MCCA', 'MCCA Identified', i_CoverageType) AS CoverageType,\n\tRTR_InsuranceLine_DC_CA_BusinessInterruption.SubCoverageType,\n\tLKP_DC_CA_BusinessInterruption.CoverageForm,\n\t-1 AS RiskID,\n\tCoverageForm AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_CA_BusinessInterruption.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_CA_BusinessInterruption.CompositeRating AS i_CompositeRating,\n\tLKP_DC_CA_BusinessInterruption.OptionRating,\n\tLKP_DC_CA_BusinessInterruption.TotalExposureOptionB\n\tFROM RTR_InsuranceLine_DC_CA_BusinessInterruption\n\tLEFT JOIN LKP_DC_CA_BusinessInterruption\n\tON LKP_DC_CA_BusinessInterruption.CA_BusinessInterruptionOptionId = RTR_InsuranceLine.ParentCoverageObjectId23\n),\nLKP_DCCACoverageCollision AS (\n\tSELECT\n\tCoverageId,\n\tObjectName,\n\tCollisionType\n\tFROM (\n\t\tselect \r\n\t\tA.CoverageId as CoverageId,\r\n\t\tA.ObjectName as ObjectName,\r\n\t\tA.CollisionType as CollisionType\r\n\t\tfrom (\r\n\t\tselect C.coverageid, C.ObjectName, CollisionType from \r\n\t\tDCCoverageStaging C -- if object name is DC_CA_Risk then will exist in coverage collision , else parent may\r\n\t\tinner join DCCACoverageCollisionStaging A1 on A1.CoverageId=C.CoverageId and C.ObjectName='DC_CA_Risk'\r\n\t\tand A1.SessionId=C.SessionId\r\n\t\tunion\r\n\t\tselect C.CoverageId as coverageid, C.objectname , CollisionType\r\n\t\tfrom\r\n\t\t DCCoverageStaging C -- if object name is DC_CA_Risk then will exist in coverage collision , else parent may\r\n\t\tinner join DCCACoverageCollisionStaging A2 on A2.CoverageId=C.ObjectId and C.ObjectName='DC_Coverage'\r\n\t\tand A2.SessionId=C.SessionId\r\n\t\t) A\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY CoverageId) = 1\n),\nLKP_DC_CA_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tVehicleNumber,\n\tCommissionPercentage,\n\tGarageType,\n\tGarageCoverageType,\n\tFullCoverageGlass,\n\tCompositeRating,\n\tCA_RiskId\n\tFROM (\n\t\tSELECT DCLA.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tCAState.LineId AS LineId,\r\n\t\t\tISNULL(WBCALineStaging.CoverageForm, WBCALineStaging.PolicyType) AS CoverageForm,\r\n\t\t\tCARisk.Type AS RiskType,\r\n\t\t\tCARisk.VehicleNumber AS VehicleNumber,\r\n\t\t\tWBLineStaging.FinalCommission AS CommissionPercentage,\r\n\t\t\tCAGarage.GarageType AS GarageType,\r\n\t\t     CAGarage.coverageType AS GarageCoverageType,\r\n\t\t\tCARisk.FullCoverageGlass AS FullCoverageGlass,\r\n\t\t\tDCCALineStaging.CompositeRating AS CompositeRating,\r\n\t\t\tCARisk.CA_RiskId AS CA_RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCARiskStaging CARisk\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging CAState\r\n\t\t\tON CARisk.SessionId = CAState.SessionId\r\n\t\t\t\tAND CARisk.CA_StateId = CAState.CA_StateId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCALineStaging\r\n\t\t\tON CAState.SessionId = DCCALineStaging.SessionId\r\n\t\t\t\tAND CAState.LineId = DCCALineStaging.LineId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCALineStaging\r\n\t\t\tON DCCALineStaging.SessionId = WBCALineStaging.SessionId\r\n\t\t\t\tAND DCCALineStaging.CA_LineId = WBCALineStaging.CA_LineId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLineStaging\r\n\t\t\tON CAState.SessionId = WBLineStaging.SessionId\r\n\t\t\t\tAND CAState.LineId = WBLineStaging.LineId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCLA\r\n\t\t\tON CARisk.SessionId = DCLA.SessionId\r\n\t\t\t\tAND CARisk.CA_LocationId = DCLA.ObjectId\r\n\t\t\t\tAND DCLA.ObjectName = 'DC_CA_Location'\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAGarageStage CAGarage\r\n\t\t\tON CARisk.SessionId = CAGarage.SessionId\r\n\t\t\t\tAND CARisk.CA_RiskId = CAGarage.CARiskId\r\n\t\tORDER BY CARisk.CA_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CA_RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CA_Risk AS (\n\tSELECT\n\tLKP_DC_CA_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CA_Risk.SessionId,\n\tLKP_DC_CA_Risk.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CA_Risk.CoverageId,\n\tLKP_DC_CA_Risk.CoverageForm,\n\tLKP_DC_CA_Risk.CA_RiskId AS RiskId,\n\tLKP_DC_CA_Risk.RiskType AS i_RiskType,\n\tLKP_DCCACoverageCollision.CollisionType AS lkp_CollisionType,\n\tRTR_InsuranceLine_DC_CA_Risk.CoverageType AS i_CoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_CoverageType = 'MCCA' AND i_RiskType='Garage', 'MCCA Non-Identified',\r\n\t-- i_CoverageType = 'MCCA' AND i_RiskType !='Garage', 'MCCA Identified',\r\n\t-- i_CoverageType =  'Collision' AND in(lkp_CollisionType,'BroadColl','LmtdColl'),i_CoverageType||lkp_CollisionType,\r\n\t-- i_CoverageType\r\n\t-- )\r\n\t-- \r\n\t-- \r\n\t-- --IIF(i_CoverageType = 'MCCA', 'MCCA Identified',i_CoverageType)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --DECODE(TRUE,\r\n\t-- --i_CoverageType!='MCCA',i_CoverageType,\r\n\t-- --ISNULL(i_CoverageType),i_CoverageType,\r\n\t-- --ISNULL(i_CompositeRating),'MCCA Identified',\r\n\t-- --i_CompositeRating='0','MCCA Identified',\r\n\t-- --'MCCA Non-Identified')\n\tDECODE(\n\t    TRUE,\n\t    i_CoverageType = 'MCCA' AND i_RiskType = 'Garage', 'MCCA Non-Identified',\n\t    i_CoverageType = 'MCCA' AND i_RiskType != 'Garage', 'MCCA Identified',\n\t    i_CoverageType = 'Collision' AND lkp_CollisionType IN ('BroadColl','LmtdColl'), i_CoverageType || lkp_CollisionType,\n\t    i_CoverageType\n\t) AS CoverageType,\n\tLKP_DC_CA_Risk.GarageType AS i_GarageType,\n\t-- *INF*: IIF(ISNULL(i_GarageType), 'N/A',i_GarageType)\n\tIFF(i_GarageType IS NULL, 'N/A', i_GarageType) AS v_GarageType,\n\tLKP_DC_CA_Risk.GarageCoverageType AS i_GarageCoverageType,\n\t-- *INF*: IIF(ISNULL(i_GarageCoverageType),'N/A',i_GarageCoverageType)\n\tIFF(i_GarageCoverageType IS NULL, 'N/A', i_GarageCoverageType) AS v_GarageCoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(i_GarageType), CoverageForm  || i_RiskType  || v_GarageType  || v_GarageCoverageType,\r\n\t-- CoverageForm  || i_RiskType)\r\n\t-- \r\n\t-- \r\n\t-- ---- As part of PROD - 11525 and PROD-14500, added the above code.\r\n\t-- \r\n\t-- --DECODE(TRUE,\r\n\t-- --ISNULL(CoverageForm),i_RiskType,\r\n\t-- --i_RiskType=CoverageForm,i_RiskType,\r\n\t-- --ISNULL(i_GarageType),CoverageForm||i_RiskType,\r\n\t-- --CoverageForm||i_RiskType||i_GarageType)\n\tDECODE(\n\t    TRUE,\n\t    i_GarageType IS NOT NULL, CoverageForm || i_RiskType || v_GarageType || v_GarageCoverageType,\n\t    CoverageForm || i_RiskType\n\t) AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_CA_Risk.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_DCCFOCCUPANCYSTAGING(SessionId)),'N/A',:LKP.LKP_DCCFOCCUPANCYSTAGING(SessionId))\n\tIFF(\n\t    LKP_DCCFOCCUPANCYSTAGING_SessionId.OccupancyType IS NULL, 'N/A',\n\t    LKP_DCCFOCCUPANCYSTAGING_SessionId.OccupancyType\n\t) AS OccupancyType,\n\tLKP_DC_CA_Risk.VehicleNumber,\n\tLKP_DC_CA_Risk.FullCoverageGlass,\n\tLKP_DC_CA_Risk.CompositeRating AS i_CompositeRating\n\tFROM RTR_InsuranceLine_DC_CA_Risk\n\tLEFT JOIN LKP_DCCACoverageCollision\n\tON LKP_DCCACoverageCollision.CoverageId = RTR_InsuranceLine.CoverageId16\n\tLEFT JOIN LKP_DC_CA_Risk\n\tON LKP_DC_CA_Risk.CA_RiskId = RTR_InsuranceLine.ParentCoverageObjectId16\n\tLEFT JOIN LKP_DCCFOCCUPANCYSTAGING LKP_DCCFOCCUPANCYSTAGING_SessionId\n\tON LKP_DCCFOCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n),\nLKP_DC_CA_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tCommissionPercentage,\n\tVehicleNumber,\n\tCA_StateId\n\tFROM (\n\t\tselect A.LocationAssociationId as LocationAssociationId,   CAState.LineId AS LineId,\r\n\t\t       ISNULL(WBCALine.CoverageForm, WBCALine.PolicyType) AS CoverageForm,\r\n\t\t       WBLine.FinalCommission AS CommissionPercentage,\r\n\t\t       NULL As VehicleNumber,\r\n\t\tCAState.CA_StateId AS CA_StateId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging CAState\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCALineStaging CALine\r\n\t\t       ON CAState.LineId = CALine.LineId\r\n\t\t              AND CAState.SessionId = CALine.SessionId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCALineStaging WBCALine\r\n\t\t       ON CALine.CA_LineId = WBCALine.CA_LineId\r\n\t\t              AND CALine.SessionId = WBCALine.SessionId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLineStaging WBLine\r\n\t\t       ON WBLine.LineId = CALine.LineId\r\n\t\t              AND WBLine.SessionId = CALine.SessionId\r\n\t\tleft hash join \r\n\t\t(select SessionId,StateProv,LocationAssociationId from (\r\n\t\tSELECT B.SessionId,Q.StateProv,B.LocationAssociationId,Rank() over(partition by B.SessionId,Q.StateProv order by isnull(cast(c.LocationNumber as int), 9999),B.LocationAssociationId) Record_Rank\r\n\t\t              FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging B\r\n\t\t              INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCALocationStaging A\r\n\t\t                     ON B.SessionId = A.SessionId\r\n\t\t                           AND B.ObjectId = A.CA_LocationId\r\n\t\t              INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging Q\r\n\t\t                     ON Q.LocationId = B.LocationId\r\n\t\t                           AND Q.SessionId = B.SessionId\r\n\t\t              INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging C\r\n\t\t                     ON b.LocationId = C.LocationId\r\n\t\t                           AND b.SessionId = C.SessionId\r\n\t\t              --WHERE B.SessionId = CAState.SessionId\r\n\t\t              --     AND Q.StateProv = CAState.LineCoverageState\r\n\t\t                     where ISNULL(Q.Deleted,0)<>1\r\n\t\t) A\r\n\t\twhere A.Record_Rank=1) A\r\n\t\ton A.SessionId = CAState.SessionId\r\n\t\tAND A.StateProv = CAState.LineCoverageState\r\n\t\tORDER BY CAState.CA_StateId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CA_StateId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CA_State AS (\n\tSELECT\n\tLKP_DC_CA_State.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CA_State.SessionId,\n\tLKP_DC_CA_State.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CA_State.CoverageId,\n\tLKP_DC_CA_State.CoverageForm,\n\tRTR_InsuranceLine_DC_CA_State.CoverageType,\n\t-1 AS RiskId,\n\tCoverageForm AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_CA_State.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_DCCFOCCUPANCYSTAGING(SessionId)),'N/A',:LKP.LKP_DCCFOCCUPANCYSTAGING(SessionId))\n\tIFF(\n\t    LKP_DCCFOCCUPANCYSTAGING_SessionId.OccupancyType IS NULL, 'N/A',\n\t    LKP_DCCFOCCUPANCYSTAGING_SessionId.OccupancyType\n\t) AS OccupancyType,\n\tLKP_DC_CA_State.VehicleNumber\n\tFROM RTR_InsuranceLine_DC_CA_State\n\tLEFT JOIN LKP_DC_CA_State\n\tON LKP_DC_CA_State.CA_StateId = RTR_InsuranceLine.ParentCoverageObjectId15\n\tLEFT JOIN LKP_DCCFOCCUPANCYSTAGING LKP_DCCFOCCUPANCYSTAGING_SessionId\n\tON LKP_DCCFOCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n),\nLKP_DC_CF_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tCoverageType_WTE,\n\tSpecialClassLevel1,\n\tOccupancyType,\n\tBuildingNumber,\n\tPolicyCoverage,\n\tCauseOfLoss,\n\tAttachedSign,\n\tConstructionCode,\n\tMultipleLocationCreditFactor,\n\tOrginalPackageModifier,\n\tPreferredPropertyCreditFactor,\n\tProtectionClass,\n\tYearBuilt,\n\tBuildersRiskCoverageType,\n\tIRPM,\n\tWindCoverageFlag,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tRateType,\n\tPropertyType,\n\tOccupancyCategory,\n\tCF_RiskId\n\tFROM (\n\t\tSELECT \r\n\t\t  LA.LocationAssociationId AS LocationAssociationId,\r\n\t\t  CFB.LineId AS LineId,\r\n\t\t  WBCFLine.PolicyCoverage AS CoverageForm,\r\n\t\t  CFRisk.RiskType AS RiskType,\r\n\t\t  WBCFTE.CoverageType AS CoverageType_WTE,\r\n\t\t  CFBR.SpecialClassLevel1 AS SpecialClassLevel1,\r\n\t\t  CFO.OccupancyType AS OccupancyType,\r\n\t\t  WCFB.BuildingNumber AS BuildingNumber,\r\n\t\t  WBCFLine.PolicyCoverage AS PolicyCoverage,\r\n\t\t  CFP.CauseOfLoss AS CauseOfLoss,\r\n\t\t  WBCFP.AttachedSignSelect AS AttachedSign,\r\n\t\t  CFB.ConstructionCode AS ConstructionCode,\r\n\t\t  WBCFLocationProperty.MultipleLocationCreditFactor AS MultipleLocationCreditFactor,\r\n\t\t  WBCFRisk.OriginalPackageModifier AS OrginalPackageModifier,\r\n\t\t  WBCFLocationAccountStage.PreferredPropertyCreditFactor AS PreferredPropertyCreditFactor,\r\n\t\t  WBCFLocationProperty.ProtectionClassOverride as ProtectionClass,\r\n\t\t  CFB.YearBuilt AS YearBuilt,\r\n\t\t  CFRisk.RiskType + CASE \r\n\t\t    WHEN BLDR.TheftOfBuildingMaterials = 1\r\n\t\t       THEN 'TheftOfBuildingMaterials'\r\n\t\t\t      ELSE ''\r\n\t\t\t\tEND + CASE \r\n\t\t\t\tWHEN BLDR.Renovations = 1\r\n\t\t\t\t\tTHEN 'Renovations'\r\n\t\t\t\tELSE ''\r\n\t\t\t\tEND AS BuildersRiskCoverageType,\r\n\t\t\r\n\t\t\tDCM.Value AS IRPM,\r\n\t\t\r\n\t\t\tCASE CFB.WindHailExcludeSelect\r\n\t\t\t\tWHEN 0\r\n\t\t\t\t\tTHEN '1'\r\n\t\t\t\tWHEN 1\r\n\t\t\t\t\tTHEN '0'\r\n\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS WindCoverageFlag,\r\n\t\t\r\n\t\t\tCFO.Description AS OccupancyClassDescription,\r\n\t\t\r\n\t\t\tCASE ISNULL(CFB.Deleted, 0)\r\n\t\t\t\tWHEN 0\r\n\t\t\t\t\tTHEN '1'\r\n\t\t\t\tELSE '0'\r\n\t\t\t\tEND AS ActiveBuildingFlag,\r\n\t\t\r\n\t\t\t(\r\n\t\t\t\tCASE WBCFB.SpecificRatedStoredValue\r\n\t\t\t\t\tWHEN 1\r\n\t\t\t\t\t\tTHEN 'S'\r\n\t\t\t\t\tWHEN 0\r\n\t\t\t\t\t\tTHEN 'C'\r\n\t\t\t\t\tELSE 'N/A'\r\n\t\t\t\t\tEND\r\n\t\t\t\t) AS RateType,\r\n\t\t\r\n\t\t\tCFPP.PropertyType AS PropertyType,\r\n\t\t\tWBCFP.OccupancyCategory AS OccupancyCategory,\r\n\t\t\tCFRisk.CF_RiskId AS CF_RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFRiskStaging CFRisk\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFOccupancyStaging CFO\r\n\t\t\tON CFO.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND CFO.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFBuildingStage CFB\r\n\t\t\tON CFB.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND CFB.CFBuildingId = CFRisk.CF_BuildingId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFLineStaging CFLine\r\n\t\t\tON CFLine.SessionId = CFB.SessionId\r\n\t\t\t\tAND CFLine.LineId = CFB.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFBuildingRiskStaging CFBR\r\n\t\t\tON CFBR.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND CFBR.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFPropertyStaging CFP\r\n\t\t\tON CFP.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND CFP.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging LA\r\n\t\t\tON LA.SessionId = CFB.SessionId\r\n\t\t\t\tAND LA.ObjectId = CFB.CFLocationId\r\n\t\t\t\tAND LA.ObjectName = 'DC_CF_Location'\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFBuildingStage WCFB\r\n\t\t\tON WCFB.SessionId = CFB.SessionId\r\n\t\t\t\tAND WCFB.CFBuildingId = CFB.CFBuildingId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WbCfLineStage WBCFLine\r\n\t\t\tON CFLine.SessionId = WBCFLine.SessionId\r\n\t\t\t\tAND CFLine.CF_LineId = WBCFLine.CFLineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFLocationPropertyStaging CFLP\r\n\t\t\tON CFLP.SessionId = CFB.SessionId\r\n\t\t\t\tAND CFLP.CF_LocationId = CFB.CFLocationId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCModifierStaging DCM\r\n\t\t\tON DCM.SessionId = CFLP.SessionId\r\n\t\t\t\tAND DCM.ObjectId = CFLP.CF_LocationPropertyId\r\n\t\t\t\tAND DCM.ObjectName = 'DC_CF_LocationProperty'\r\n\t\t\t\tAND DCM.Type = 'LocationIRPMFactor'\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFLocationPropertyStage WBCFLocationProperty\r\n\t\t\tON WBCFLocationProperty.SessionId = CFLP.SessionId\r\n\t\t\t\tAND WBCFLocationProperty.CFLocationPropertyId = CFLP.CF_LocationPropertyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationAccountStage\r\n\t\t\tON WBLocationAccountStage.SessionId = LA.SessionId\r\n\t\t\t\tAND WBLocationAccountStage.LocationId = LA.LocationId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLLocationAccountStage\r\n\t\t\tON WBCLLocationAccountStage.SessionId = WBLocationAccountStage.SessionId\r\n\t\t\t\tAND WBCLLocationAccountStage.WBLocationAccountId = WBLocationAccountStage.WBLocationAccountId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WbCfLocationAccountStage\r\n\t\t\tON WbCfLocationAccountStage.SessionId = WBCLLocationAccountStage.SessionId\r\n\t\t\t\tAND WbCfLocationAccountStage.WBCLLocationAccountId = WBCLLocationAccountStage.WBCLLocationAccountId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFRiskStage WBCFRisk\r\n\t\t\tON WBCFRisk.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND WBCFRisk.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFBuilderStaging BLDR\r\n\t\t\tON BLDR.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND BLDR.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFPropertyStage WBCFP\r\n\t\t\tON WBCFP.SessionId = CFP.SessionId\r\n\t\t\t\tAND WBCFP.CF_PropertyId = CFP.CF_PropertyId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFTimeElementStaging DCCFTE\r\n\t\t\tON DCCFTE.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND DCCFTE.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFTimeElementStage WBCFTE\r\n\t\t\tON WBCFTE.SessionId = DCCFTE.SessionId\r\n\t\t\t\tAND WBCFTE.CF_TimeElementId = DCCFTE.CF_TimeElementId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCFBuildingStage WBCFB\r\n\t\t\tON WBCFB.SessionId = CFB.SessionId\r\n\t\t\t\tAND WBCFB.CFBuildingId = CFB.CFBuildingId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFPersonalPropertyStaging CFPP\r\n\t\t\tON CFPP.SessionId = CFRisk.SessionId\r\n\t\t\t\tAND CFPP.CF_RiskId = CFRisk.CF_RiskId\r\n\t\tORDER BY CFRisk.CF_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CF_RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CF_Risk AS (\n\tSELECT\n\tLKP_DC_CF_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CF_Risk.SessionId,\n\tLKP_DC_CF_Risk.LineId,\n\tLKP_DC_CF_Risk.CF_RiskId AS RiskId,\n\tRTR_InsuranceLine_DC_CF_Risk.CoverageId,\n\tRTR_InsuranceLine_DC_CF_Risk.CoverageType AS i_CoverageType,\n\tRTR_InsuranceLine_DC_CF_Risk.SubCoverageType AS i_SubCoverageType,\n\tLKP_DC_CF_Risk.CoverageForm,\n\tLKP_DC_CF_Risk.RiskType,\n\tLKP_DC_CF_Risk.CoverageType_WTE,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'' AS ILFTableAssignmentCode,\n\tLKP_DC_CF_Risk.SpecialClassLevel1,\n\t-- *INF*: IIF(RiskType='SPECIAL',SpecialClassLevel1,'N/A')\n\tIFF(RiskType = 'SPECIAL', SpecialClassLevel1, 'N/A') AS o_SpecialClassLevel1,\n\tLKP_DC_CF_Risk.OccupancyType AS i_OccupancyType,\n\t-- *INF*: IIF(NOT ISNULL(OrginalPackageModifier),i_OccupancyType,'N/A')\n\tIFF(OrginalPackageModifier IS NOT NULL, i_OccupancyType, 'N/A') AS OccupancyType,\n\tLKP_DC_CF_Risk.BuildingNumber,\n\tLKP_DC_CF_Risk.PolicyCoverage,\n\tLKP_DC_CF_Risk.CauseOfLoss,\n\tLKP_DC_CF_Risk.AttachedSign,\n\tLKP_DC_CF_Risk.ConstructionCode,\n\tLKP_DC_CF_Risk.MultipleLocationCreditFactor,\n\tLKP_DC_CF_Risk.PreferredPropertyCreditFactor,\n\tLKP_DC_CF_Risk.OrginalPackageModifier,\n\tLKP_DC_CF_Risk.ProtectionClass,\n\tLKP_DC_CF_Risk.YearBuilt,\n\tLKP_DC_CF_Risk.BuildersRiskCoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- -- reorganize by alphabetical RiskType so it's less confusing. 1 means it will be excluded, this is a blacklist\r\n\t-- -- I removed the terrorism CoverageTypes from the RiskType rules because they redundantly exist already in the long\r\n\t-- -- list of CoverageType rules\r\n\t-- RiskType='ALS' AND IN(\r\n\t-- \ti_CoverageType,\r\n\t-- \t'BusinessIncomeLandlordAsAdditionalInsured',\r\n\t-- \t'EarthquakeRisk')=1,1,\r\n\t-- RiskType='BIEE' AND i_CoverageType='BusinessIncomeLandlordAsAdditionalInsured',1,\r\n\t-- RiskType='BLDG' AND IN(\r\n\t-- \ti_CoverageType,\r\n\t-- \t'EarthquakeRisk',\r\n\t-- \t'MineSubsidence',\r\n\t-- \t'PierOrWharf')=1,1,\r\n\t-- RiskType='BLDRK' AND i_CoverageType='EarthquakeRisk',1,\r\n\t-- RiskType='Personal Property' AND i_CoverageType='EarthquakeRisk',1,\r\n\t-- RiskType='PO' AND IN (\r\n\t-- \ti_CoverageType,\r\n\t-- \t'BuildersRisk',\r\n\t-- \t'EarthquakeRisk',\r\n\t-- \t'LegalLiability',\r\n\t-- 'ReportingForm')=1,1,\r\n\t-- RiskType='PP' AND IN(\r\n\t-- \ti_CoverageType,\r\n\t-- \t'EarthquakeRisk',\r\n\t-- \t'LossAssessment',\r\n\t-- \t'MiscellaneousRealProperty',\r\n\t-- \t'PierOrWharf')=1, 1,\r\n\t-- RiskType='TENANTS' AND IN(\r\n\t-- \ti_CoverageType,\r\n\t-- \t'BuildersRisk',\r\n\t-- \t'FireDepartmentServiceChargeCoverage',\r\n\t-- \t'EarthquakeRisk')=1,1,\r\n\t-- RiskType='TIME' AND i_CoverageType='PierOrWharf',1,\r\n\t-- \r\n\t-- -- these are NoPeril across all RiskTypes. Keep this alphabatized\r\n\t-- IN(i_CoverageType,\r\n\t-- 'AlcoholicBeveragesTaxExclusion',\r\n\t-- 'AgreedValue',\r\n\t-- 'BrandsAndLabels',\r\n\t-- 'BusinessIncomeDiscretionaryPayroll',\r\n\t-- 'BusinessIncomeEducationalInstitutions',\r\n\t-- 'BusinessIncomeElectronicMedia',\r\n\t-- 'BusinessIncomeExtendedPeriodOfIndemnity',\r\n\t-- 'BusinessIncomeFoodContamination',\r\n\t-- 'BusinessIncomeManufacturingAndMining',\r\n\t-- 'BusinessIncomeMaxPeriodOfIndemnity',\r\n\t-- 'BusinessIncomeMercantileAndNonManufacturing',\r\n\t-- 'BusinessIncomeMiningProperties',\r\n\t-- 'BusinessIncomeMonthlyLimitOfIndemnity',\r\n\t-- 'BusinessIncomeOrdinaryPayroll',\r\n\t-- 'BusinessIncomePowerHeatRefrig',\r\n\t-- 'BusinessIncomeRentalProperties',\r\n\t-- 'BusinessIncomeSeasonalLease',\r\n\t-- 'CovGolfCourse',\r\n\t-- 'CovStationDamage',\r\n\t-- 'DischargeFromSewer',\r\n\t-- 'ExtraExpenseExpandedLimit',\r\n\t-- 'FoodContamination',\r\n\t-- 'FunctionalValuation',\r\n\t-- 'IncreaseInBuildingExpenses',\r\n\t-- 'ManufacturersConsequentialLossAssumption',\r\n\t-- 'MedicalEquipment',\r\n\t-- 'MineSubsidence',\r\n\t-- 'PollutantCleanupRisk',\r\n\t-- 'RadioTelevisionAntennasRisk',\r\n\t-- 'SprinklerLeakageEarthquakeExtension',\r\n\t-- 'TerrorismFireOnly',\r\n\t-- 'TerrorismRisk',\r\n\t-- 'UtilityServicesDirectDamage',\r\n\t-- 'UtilityServicesTimeElement',\r\n\t-- 'ReportingForm')=1,1,\r\n\t-- 0)\r\n\t-- \r\n\t-- -- original code for reference\r\n\t-- --IN(RiskType,'BIEE','ALS')=1 AND i_CoverageType='BusinessIncomeLandlordAsAdditionalInsured', 1,\r\n\t-- --IN(RiskType, 'BIEE', 'EXTRA', 'TIME')=1 AND IN(i_CoverageType,'TerrorismRisk','TerrorismFireOnly')=1, 1,\r\n\t-- --RiskType='BLDG' AND IN(i_CoverageType,\r\n\t-- --'EarthquakeRisk',\r\n\t-- --'MineSubsidence')=1, 1,\r\n\t-- --RiskType='PP' AND IN(i_CoverageType,'LossAssessment','MiscellaneousRealProperty','EarthquakeRisk')=1, 1,\r\n\t-- --RiskType='BLDRK' AND i_CoverageType='EarthquakeRisk', 1,\r\n\t-- --IN(RiskType, 'BLDG', 'PP', 'TIME')=1 AND i_CoverageType='PierOrWharf',1,\r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    RiskType = 'ALS' AND i_CoverageType IN ('BusinessIncomeLandlordAsAdditionalInsured','EarthquakeRisk') = 1, 1,\n\t    RiskType = 'BIEE' AND i_CoverageType = 'BusinessIncomeLandlordAsAdditionalInsured', 1,\n\t    RiskType = 'BLDG' AND i_CoverageType IN ('EarthquakeRisk','MineSubsidence','PierOrWharf') = 1, 1,\n\t    RiskType = 'BLDRK' AND i_CoverageType = 'EarthquakeRisk', 1,\n\t    RiskType = 'Personal Property' AND i_CoverageType = 'EarthquakeRisk', 1,\n\t    RiskType = 'PO' AND i_CoverageType IN ('BuildersRisk','EarthquakeRisk','LegalLiability','ReportingForm') = 1, 1,\n\t    RiskType = 'PP' AND i_CoverageType IN ('EarthquakeRisk','LossAssessment','MiscellaneousRealProperty','PierOrWharf') = 1, 1,\n\t    RiskType = 'TENANTS' AND i_CoverageType IN ('BuildersRisk','FireDepartmentServiceChargeCoverage','EarthquakeRisk') = 1, 1,\n\t    RiskType = 'TIME' AND i_CoverageType = 'PierOrWharf', 1,\n\t    i_CoverageType IN ('AlcoholicBeveragesTaxExclusion','AgreedValue','BrandsAndLabels','BusinessIncomeDiscretionaryPayroll','BusinessIncomeEducationalInstitutions','BusinessIncomeElectronicMedia','BusinessIncomeExtendedPeriodOfIndemnity','BusinessIncomeFoodContamination','BusinessIncomeManufacturingAndMining','BusinessIncomeMaxPeriodOfIndemnity','BusinessIncomeMercantileAndNonManufacturing','BusinessIncomeMiningProperties','BusinessIncomeMonthlyLimitOfIndemnity','BusinessIncomeOrdinaryPayroll','BusinessIncomePowerHeatRefrig','BusinessIncomeRentalProperties','BusinessIncomeSeasonalLease','CovGolfCourse','CovStationDamage','DischargeFromSewer','ExtraExpenseExpandedLimit','FoodContamination','FunctionalValuation','IncreaseInBuildingExpenses','ManufacturersConsequentialLossAssumption','MedicalEquipment','MineSubsidence','PollutantCleanupRisk','RadioTelevisionAntennasRisk','SprinklerLeakageEarthquakeExtension','TerrorismFireOnly','TerrorismRisk','UtilityServicesDirectDamage','UtilityServicesTimeElement','ReportingForm') = 1, 1,\n\t    0\n\t) AS v_NoPerilGroupFlag,\n\t-- *INF*: IIF(IN(i_CoverageType,'DebrisRemovalRisk','OrdinanceOrLaw','TreesShrubsPlants','BusinessIncomeDependentProperties','ExtraExpenseDependentProperties','VacancyRisk','PeakSeason','PeakSeason/PeakSeasonScheduled','InflationGuard','ExtendedReplacementCost','GuaranteedReplacementCost','ReplacementCost')=1,1,0)\n\tIFF(\n\t    i_CoverageType IN ('DebrisRemovalRisk','OrdinanceOrLaw','TreesShrubsPlants','BusinessIncomeDependentProperties','ExtraExpenseDependentProperties','VacancyRisk','PeakSeason','PeakSeason/PeakSeasonScheduled','InflationGuard','ExtendedReplacementCost','GuaranteedReplacementCost','ReplacementCost') = 1,\n\t    1,\n\t    0\n\t) AS v_TreesPlantsShrubsFlag,\n\t-- *INF*: IIF(IN(RiskType,'BLDG','BIEE','BLDRK','EXTRA','PP','SPECIAL','TIME')=1 AND v_TreesPlantsShrubsFlag!=1, 1, 0)\n\tIFF(\n\t    RiskType IN ('BLDG','BIEE','BLDRK','EXTRA','PP','SPECIAL','TIME') = 1\n\t    and v_TreesPlantsShrubsFlag != 1,\n\t    1,\n\t    0\n\t) AS v_NoRuleYetFlag,\n\t-- *INF*: IIF(IN(i_CoverageType, 'BG1', 'BG2', 'OtherPerils')=1,1,0)\n\tIFF(i_CoverageType IN ('BG1','BG2','OtherPerils') = 1, 1, 0) AS v_PPSPECIALFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- INSTR(i_SubCoverageType,'BG1')>0,'BG1',\r\n\t-- INSTR(i_SubCoverageType,'BG2')>0,'BG2',\r\n\t-- INSTR(i_SubCoverageType,'OtherPerils')>0,'OtherPerils',\r\n\t-- 'N/A')\r\n\t-- \r\n\t-- -- for 10x restrict valid values to BG1, BG2, OtherPerils\n\tDECODE(\n\t    TRUE,\n\t    REGEXP_INSTR(i_SubCoverageType, 'BG1') > 0, 'BG1',\n\t    REGEXP_INSTR(i_SubCoverageType, 'BG2') > 0, 'BG2',\n\t    REGEXP_INSTR(i_SubCoverageType, 'OtherPerils') > 0, 'OtherPerils',\n\t    'N/A'\n\t) AS v_SubCoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(i_CoverageType,'BusinessIncomeDependentProperties',\r\n\t-- 'DebrisRemovalRisk',\r\n\t-- 'ExtraExpenseDependentProperties',\r\n\t-- 'OrdinanceOrLaw',\r\n\t-- 'TreesShrubsPlants',\r\n\t-- 'VacancyRisk',\r\n\t-- 'LeaseholdInterest')=1,1,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    i_CoverageType IN ('BusinessIncomeDependentProperties','DebrisRemovalRisk','ExtraExpenseDependentProperties','OrdinanceOrLaw','TreesShrubsPlants','VacancyRisk','LeaseholdInterest') = 1, 1,\n\t    0\n\t) AS v_IXUP_Brkn_dwn_Coverages,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_IXUP_Brkn_dwn_Coverages=1, i_CoverageType,\r\n\t-- IN(RiskType,'BIEE','TIME') and v_PPSPECIALFlag=1,RiskType||CoverageType_WTE,\r\n\t-- RiskType='SPECIAL' AND i_CoverageType='InflationGuard',:LKP.LKP_SUPSPECIALCLASSGROUP(SpecialClassLevel1)||i_CoverageType,\r\n\t-- v_NoPerilGroupFlag=1, i_CoverageType,\r\n\t-- i_CoverageType='Spoilage',i_CoverageType||IIF(NOT ISNULL(:LKP.LKP_DCCFCOVERAGESPOILAGESTAGING(CoverageId)),:LKP.LKP_DCCFCOVERAGESPOILAGESTAGING(CoverageId),''),\r\n\t-- RiskType='SPECIAL' AND v_PPSPECIALFlag=1,:LKP.LKP_SUPSPECIALCLASSGROUP(SpecialClassLevel1),\r\n\t-- RiskType='PP' AND v_PPSPECIALFlag=1,:LKP.LKP_DCCFPERSONALPROPERTYSTAGING(RiskId),\r\n\t-- IN(RiskType, 'SPECIAL', 'PP')=1 AND v_PPSPECIALFlag=0, i_CoverageType,\r\n\t-- v_TreesPlantsShrubsFlag=1, i_CoverageType,\r\n\t-- RiskType='BLDRK',BuildersRiskCoverageType,\r\n\t-- v_PPSPECIALFlag=1,RiskType,\r\n\t-- v_NoRuleYetFlag=1,i_CoverageType,\r\n\t-- RiskType)\n\tDECODE(\n\t    TRUE,\n\t    v_IXUP_Brkn_dwn_Coverages = 1, i_CoverageType,\n\t    RiskType IN ('BIEE','TIME') and v_PPSPECIALFlag = 1, RiskType || CoverageType_WTE,\n\t    RiskType = 'SPECIAL' AND i_CoverageType = 'InflationGuard', LKP_SUPSPECIALCLASSGROUP_SpecialClassLevel1.StandardSpecialClassGroupShortDescription || i_CoverageType,\n\t    v_NoPerilGroupFlag = 1, i_CoverageType,\n\t    i_CoverageType = 'Spoilage', i_CoverageType || \n\t    IFF(\n\t        LKP_DCCFCOVERAGESPOILAGESTAGING_CoverageId.SpoilageCoverageType IS NOT NULL,\n\t        LKP_DCCFCOVERAGESPOILAGESTAGING_CoverageId.SpoilageCoverageType,\n\t        ''\n\t    ),\n\t    RiskType = 'SPECIAL' AND v_PPSPECIALFlag = 1, LKP_SUPSPECIALCLASSGROUP_SpecialClassLevel1.StandardSpecialClassGroupShortDescription,\n\t    RiskType = 'PP' AND v_PPSPECIALFlag = 1, LKP_DCCFPERSONALPROPERTYSTAGING_RiskId.PropertyType,\n\t    RiskType IN ('SPECIAL','PP') = 1 AND v_PPSPECIALFlag = 0, i_CoverageType,\n\t    v_TreesPlantsShrubsFlag = 1, i_CoverageType,\n\t    RiskType = 'BLDRK', BuildersRiskCoverageType,\n\t    v_PPSPECIALFlag = 1, RiskType,\n\t    v_NoRuleYetFlag = 1, i_CoverageType,\n\t    RiskType\n\t) AS CoverageType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_IXUP_Brkn_dwn_Coverages=1,v_SubCoverageType,\r\n\t-- v_NoPerilGroupFlag=1,'',\r\n\t-- i_CoverageType = 'Spoilage', '',\r\n\t-- v_TreesPlantsShrubsFlag=1, 'BG1',\r\n\t-- RiskType = 'BLDRK' AND i_CoverageType='BuildersRisk', 'BG1',\r\n\t-- v_PPSPECIALFlag=1,i_CoverageType,\r\n\t-- v_NoRuleYetFlag=1,'',\r\n\t-- i_CoverageType)\n\tDECODE(\n\t    TRUE,\n\t    v_IXUP_Brkn_dwn_Coverages = 1, v_SubCoverageType,\n\t    v_NoPerilGroupFlag = 1, '',\n\t    i_CoverageType = 'Spoilage', '',\n\t    v_TreesPlantsShrubsFlag = 1, 'BG1',\n\t    RiskType = 'BLDRK' AND i_CoverageType = 'BuildersRisk', 'BG1',\n\t    v_PPSPECIALFlag = 1, i_CoverageType,\n\t    v_NoRuleYetFlag = 1, '',\n\t    i_CoverageType\n\t) AS PerilGroup,\n\tLKP_DC_CF_Risk.IRPM AS IndividualRiskPremiumModification,\n\tLKP_DC_CF_Risk.WindCoverageFlag AS i_WindCoverageFlag,\n\t-- *INF*: IIF(ISNULL(i_WindCoverageFlag), '1', i_WindCoverageFlag)\n\tIFF(i_WindCoverageFlag IS NULL, '1', i_WindCoverageFlag) AS WindCoverageIndicator,\n\tLKP_DC_CF_Risk.OccupancyClassDescription,\n\tLKP_DC_CF_Risk.ActiveBuildingFlag,\n\tLKP_DC_CF_Risk.RateType,\n\tLKP_DC_CF_Risk.PropertyType,\n\tLKP_DC_CF_Risk.OccupancyCategory\n\tFROM RTR_InsuranceLine_DC_CF_Risk\n\tLEFT JOIN LKP_DC_CF_Risk\n\tON LKP_DC_CF_Risk.CF_RiskId = RTR_InsuranceLine.ParentCoverageObjectId14\n\tLEFT JOIN LKP_SUPSPECIALCLASSGROUP LKP_SUPSPECIALCLASSGROUP_SpecialClassLevel1\n\tON LKP_SUPSPECIALCLASSGROUP_SpecialClassLevel1.SpecialClassGroupCode = SpecialClassLevel1\n\n\tLEFT JOIN LKP_DCCFCOVERAGESPOILAGESTAGING LKP_DCCFCOVERAGESPOILAGESTAGING_CoverageId\n\tON LKP_DCCFCOVERAGESPOILAGESTAGING_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCCFPERSONALPROPERTYSTAGING LKP_DCCFPERSONALPROPERTYSTAGING_RiskId\n\tON LKP_DCCFPERSONALPROPERTYSTAGING_RiskId.CF_RiskId = RiskId\n\n),\nLKP_DC_CR_Endorsement AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tRiskId,\n\tCREndorsementId\n\tFROM (\n\t\tSELECT \r\n\t\tB.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances).\r\n\t\t\tCRRisk.LineId AS LineId,\r\n\t\t\tCRLine.PolicyType AS CoverageForm,\r\n\t\t\tCASE WHEN charindex('_',CRRiskCrime.Type)>1 THEN substring(CRRiskCrime.Type,1,charindex('_',CRRiskCrime.Type)-1)\r\n\t\tELSE CRRiskCrime.Type END as RiskType,\r\n\t\t\tCRRisk.CRRiskId AS RiskId,\r\n\t\t\tCREndorsement.CREndorsementId AS CREndorsementId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCREndorsementStage CREndorsement\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskStage CRRisk\r\n\t\t\tON CREndorsement.SessionId = CRRisk.SessionId\r\n\t\t\t\tAND CREndorsement.CRRiskId = CRRisk.CRRiskId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskCrimeStage CRRiskCrime\r\n\t\t\tON CREndorsement.CRRiskId=CRRiskCrime.CrRiskId\r\n\t\t\t\tAND CREndorsement.Sessionid=CRRiskCrime.Sessionid\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCRRiskStage WBCRRisk\r\n\t\t\tON CRRisk.SessionId = WBCRRisk.SessionId\r\n\t\t\t\tAND CRRisk.CRRiskId = WBCRRisk.CRRiskId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLineStage CRLine\r\n\t\t\tON CRLine.SessionId = CRRisk.SessionId\r\n\t\t\t\tAND CRLine.LineId = CRRisk.LineId\r\n\t\tLEFT HASH JOIN\r\n\t\t(SELECT * FROM \r\n\t\t(\r\n\t\t\t\tSELECT la.SessionId , LocationAssociationId , \r\n\t\t\t\tRank() over(partition by wbLoc.SessionId ORDER BY IsNull(cast(wbLoc.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging la\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DCLoc\r\n\t\t\t\t\tON DCLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCLoc.LocationId = la.LocationId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging wbLoc\r\n\t\t\t\t\tON wbLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND wbLoc.LocationId = dcloc.LocationId\r\n\t\t\t\t-- The inner join below ensures that only records associated to DC_CR_Location are considered\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLocationStage DCCRLoc\r\n\t\t\t\t\tON DCCRLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCCRLoc.CR_LocationId = la.ObjectId\r\n\t\t\t\t--WHERE la.SessionID = CRRisk.SessionId\r\n\t\t\t\tand ISNULL(DCLoc.Deleted,0)<>1\r\n\t\t\t\t\t\t)A WHERE A.Record_Rank =1)B\r\n\t\tON B.SessionID = CRRisk.SessionId\r\n\t\tORDER BY CREndorsement.CREndorsementId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CREndorsementId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CR_Endorsement AS (\n\tSELECT\n\tLKP_DC_CR_Endorsement.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CR_Endorsement.SessionId,\n\tLKP_DC_CR_Endorsement.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CR_Endorsement.CoverageId,\n\tRTR_InsuranceLine_DC_CR_Endorsement.CoverageType,\n\tLKP_DC_CR_Endorsement.CoverageForm,\n\tLKP_DC_CR_Endorsement.RiskId,\n\tLKP_DC_CR_Endorsement.RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_DCCROccupancyStaging(SessionId)),'N/A',:LKP.LKP_DCCROccupancyStaging(SessionId))\r\n\t-- --5/9/2014 Anisha\r\n\t-- --'N/A'\n\tIFF(\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline IS NULL, 'N/A',\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline\n\t) AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_CR_Endorsement\n\tLEFT JOIN LKP_DC_CR_Endorsement\n\tON LKP_DC_CR_Endorsement.CREndorsementId = RTR_InsuranceLine.ParentCoverageObjectId13\n\tLEFT JOIN LKP_DCCROCCUPANCYSTAGING LKP_DCCROCCUPANCYSTAGING_SessionId\n\tON LKP_DCCROCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n),\nLKP_DC_CR_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tRiskId,\n\tin_ParentCoverageObjectId\n\tFROM (\n\t\tSELECT\r\n\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances).\r\n\t\t\t LocationAssociationId  as LocationAssociationId,\r\n\t\t\tCRRisk.LineId AS LineId,\r\n\t\t\tCRLine.PolicyType AS CoverageForm,\r\n\t\t\tCRRiskCrime.Type as RiskType,\r\n\t\t\tCRRisk.CRRiskId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskStage CRRisk\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRRiskCrimeStage CRRiskCrime\r\n\t\tON CRRiskCrime.CRRiskId=CRRisk.CRRiskId\r\n\t\tAND CRRiskCrime.Sessionid=CRRisk.Sessionid\r\n\t\tAND NOT EXISTS (\r\n\t\tSELECT 1 FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRRiskCrimeStage A\r\n\t\tWHERE A.CRRiskCrimeId>CRRiskCrime.CRRiskCrimeId\r\n\t\tAND A.CRRiskId=CRRiskCrime.CRRiskId)\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCRRiskStage WBCRRisk\r\n\t\t\tON CRRisk.SessionId = WBCRRisk.SessionId\r\n\t\t\t\tAND CRRisk.CRRiskId = WBCRRisk.CRRiskId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLineStage CRLine\r\n\t\t\tON CRLine.SessionId = CRRisk.SessionId\r\n\t\t\t\tAND CRLine.LineId = CRRisk.LineId\r\n\t\tleft HASH  join \r\n\t\t\t(select SessionId,LocationAssociationId from (\r\n\t\t\t\tSELECT la.SessionId,la.LocationAssociationId,\r\n\t\t\t\tRank() over(partition by DCLoc.SessionId \t order by IsNull(cast(wbLoc.LocationNumber as int), 9999)) AS Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging la\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DCLoc\r\n\t\t\t\t\tON DCLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCLoc.LocationId = la.LocationId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging wbLoc\r\n\t\t\t\t\tON wbLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND wbLoc.LocationId = dcloc.LocationId\r\n\t\t\t\t-- The inner join below ensures that only records associated to DC_CR_Location are considered\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLocationStage DCCRLoc\r\n\t\t\t\t\tON DCCRLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCCRLoc.CR_LocationId = la.ObjectId\r\n\t\t\t\t---WHERE la.SessionID = CRRisk.SessionId\r\n\t\t\t\tand ISNULL(DCLoc.Deleted,0)<>1\r\n\t\t\t\t) a where a.Record_Rank=1)b \r\n\t\t\t\ton b.SessionId=CRRisk.SessionId\r\n\t\t\t\tORDER BY CRRisk.CrRiskId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CR_Risk AS (\n\tSELECT\n\tLKP_DC_CR_Risk.LocationAssociationId,\n\tLKP_DC_CR_Risk.LineId,\n\tLKP_DC_CR_Risk.CoverageForm,\n\tLKP_DC_CR_Risk.RiskId,\n\tLKP_DC_CR_Risk.RiskType,\n\tRTR_InsuranceLine_DC_CR_Risk.SessionId,\n\t'N/A' AS IndividualRiskPremiumModificationFactor,\n\tRTR_InsuranceLine_DC_CR_Risk.CoverageId,\n\tRTR_InsuranceLine_DC_CR_Risk.CoverageType AS CoverageRiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS SpecialClassLevel1,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_DCCROccupancyStaging(SessionId)),'N/A',:LKP.LKP_DCCROccupancyStaging(SessionId))\n\tIFF(\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline IS NULL, 'N/A',\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline\n\t) AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_CR_Risk\n\tLEFT JOIN LKP_DC_CR_Risk\n\tON LKP_DC_CR_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId22\n\tLEFT JOIN LKP_DCCROCCUPANCYSTAGING LKP_DCCROCCUPANCYSTAGING_SessionId\n\tON LKP_DCCROCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n),\nLKP_DC_CR_RiskCrime AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tRiskId,\n\tCRRiskCrimeId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances).\r\n\t\t\t\tCRRisk.LineId AS LineId,\r\n\t\t\tCRLine.PolicyType AS CoverageForm,\r\n\t\t\tCRRiskCrime.Type as RiskType,\r\n\t\t\tCRRisk.CRRiskId AS RiskId,\r\n\t\t\tCRRiskCrime.CRRiskCrimeId AS CRRiskCrimeId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskCrimeStage CRRiskCrime\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DcCrRiskStage CRRisk\r\n\t\t\tON CRRiskCrime.SessionId = CRRisk.SessionId\r\n\t\t\t\tAND CRRiskCrime.CRRiskId = CRRisk.CRRiskId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCRRiskStage WBCRRisk\r\n\t\t\tON CRRisk.SessionId = WBCRRisk.SessionId\r\n\t\t\t\tAND CRRisk.CRRiskId = WBCRRisk.CRRiskId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLineStage CRLine\r\n\t\t\tON CRLine.SessionId = CRRisk.SessionId\r\n\t\t\t\tAND CRLine.LineId = CRRisk.LineId\r\n\t\tLEFT HASH JOIN\r\n\t\t(SELECT LocationAssociationId , SessionID ,Record_Rank FROM (\r\n\t\t\t\tSELECT LocationAssociationId , la.SessionID ,\r\n\t\t\t\tRank() over(partition by la.SessionID ORDER BY IsNull(cast(wbLoc.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging la\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DCLoc\r\n\t\t\t\t\tON DCLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCLoc.LocationId = la.LocationId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging wbLoc\r\n\t\t\t\t\tON wbLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND wbLoc.LocationId = dcloc.LocationId\r\n\t\t\t\t-- The inner join below ensures that only records associated to DC_CR_Location are considered\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLocationStage DCCRLoc\r\n\t\t\t\t\tON DCCRLoc.SessionId = la.SessionId\r\n\t\t\t\t\t\tAND DCCRLoc.CR_LocationId = la.ObjectId\r\n\t\t\t\t--WHERE la.SessionID = CRRisk.SessionId\r\n\t\t\t\tand ISNULL(dcloc.Deleted,0)<>1\r\n\t\t\t\t\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\tON B.SessionID = CRRisk.SessionId\r\n\t\tORDER BY CRRiskCrime.CrRiskCrimeId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CRRiskCrimeId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CR_RiskCrime AS (\n\tSELECT\n\tLKP_DC_CR_RiskCrime.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CR_RiskCrime.SessionId,\n\tLKP_DC_CR_RiskCrime.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CR_RiskCrime.CoverageId,\n\tRTR_InsuranceLine_DC_CR_RiskCrime.CoverageType,\n\tLKP_DC_CR_RiskCrime.CoverageForm,\n\tLKP_DC_CR_RiskCrime.RiskId,\n\tLKP_DC_CR_RiskCrime.RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_DCCROccupancyStaging(SessionId)),'N/A',:LKP.LKP_DCCROccupancyStaging(SessionId))\r\n\t-- --5/9/2014 Anisha\r\n\t-- --'N/A'\n\tIFF(\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline IS NULL, 'N/A',\n\t    LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline\n\t) AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_CR_RiskCrime\n\tLEFT JOIN LKP_DC_CR_RiskCrime\n\tON LKP_DC_CR_RiskCrime.CRRiskCrimeId = RTR_InsuranceLine.ParentCoverageObjectId5\n\tLEFT JOIN LKP_DCCROCCUPANCYSTAGING LKP_DCCROCCUPANCYSTAGING_SessionId\n\tON LKP_DCCROCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n),\nLKP_DC_CU_UmbrellaEmployersLiability AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tCommissionPercentage,\n\tCU_UmbrellaEmployersLiabilityId\n\tFROM (\n\t\tSELECT   LocationAssociationId.LocationAssociationId as LocationAssociationId,\r\n\t\t\tDCCUUmbrellaEL.LineId AS LineId,\r\n\t\t\tLTRIM(RTRIM(CULine.Description)) AS CoverageForm,\r\n\t\t\tWBLine.FinalCommission AS CommissionPercentage,\r\n\t\t\tDCCUUmbrellaEL.CU_UmbrellaEmployersLiabilityId AS CU_UmbrellaEmployersLiabilityId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCUUmbrellaEmployersLiabilityStaging DCCUUmbrellaEL\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCULineStaging CULine\r\n\t\t\tON DCCUUmbrellaEL.SessionId = CULine.SessionId\r\n\t\t\t\tAND DCCUUmbrellaEL.LineId = CULine.LineId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLineStaging WBLine\r\n\t\t\tON WBLine.SessionId = CULine.SessionId\r\n\t\t\t\tAND WBLine.LineId = CULine.LineId\r\n\t\tLEFT HASH JOIN\r\n\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT  la.LocationAssociationId , WBLoc.SessionId ,\r\n\t\t\t\tRank() over(partition by WBLoc.SessionId order by  ISNULL(cast(wbLoc.LocationNumber as int),999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging la\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging WBLoc\r\n\t\t\t\t\tON WBLoc.LocationId = la.LocationId\r\n\t\t\t\t\t\tAND WBLoc.SessionId = la.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DCLoc\r\n\t\t\t\ton la.Locationid=DCLoc.LocationId\r\n\t\t\t\tand la.Sessionid=DCLoc.Sessionid\r\n\t\t\t\t--WHERE WBLoc.SessionId = DCCUUmbrellaEL.SessionId\r\n\t\t\t\t\tAND la.LocationAssociationType = 'Location'\r\n\t\t\t\t\tAND ISNULL(DCLoc.Deleted,0)<>1\r\n\t\t\t\t)A WHERE A.Record_Rank = 1) LocationAssociationId\r\n\t\t\t\ton LocationAssociationId.SessionId = DCCUUmbrellaEL.SessionId\r\n\t\tORDER BY DCCUUmbrellaEL.CU_UmbrellaEmployersLiabilityId--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CU_UmbrellaEmployersLiabilityId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_CU_UmbrellaEmployersLiability AS (\n\tSELECT\n\tLKP_DC_CU_UmbrellaEmployersLiability.LocationAssociationId,\n\tRTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability.SessionId,\n\tLKP_DC_CU_UmbrellaEmployersLiability.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability.CoverageId,\n\tRTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability.CoverageType,\n\tLKP_DC_CU_UmbrellaEmployersLiability.CoverageForm,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_CU_UmbrellaEmployersLiability.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability\n\tLEFT JOIN LKP_DC_CU_UmbrellaEmployersLiability\n\tON LKP_DC_CU_UmbrellaEmployersLiability.CU_UmbrellaEmployersLiabilityId = RTR_InsuranceLine.ParentCoverageObjectId18\n),\nLKP_DC_GL_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tRiskType,\n\tExposure,\n\tCommissionPercentage,\n\tCoverageVersion,\n\tILFTableAssignmentCode,\n\tOccupancyType,\n\tRetroactiveDate,\n\tGLPremiumBasis,\n\tLineType,\n\tRiskId\n\tFROM (\n\t\tSELECT DCLA.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tGLRisk.LineId AS LineId,\r\n\t\t\tGLLine.PolicyType AS CoverageForm,\r\n\t\t\tGLRisk.Type AS RiskType,\r\n\t\t\tGLRisk.Exposure AS Exposure,\r\n\t\t\tGLLine.CommissionPercentage AS CommissionPercentage,\r\n\t\t\tGLLine.CoverageForm AS CoverageVersion,\r\n\t\t\tWBGLR.ILFTableAssignmentCode AS ILFTableAssignmentCode,\r\n\t\t\tGLO.Type AS OccupancyType,\r\n\t\t\tCASE DCLine.Type\r\n\t\t\t\tWHEN 'SBOPGeneralLiability'\r\n\t\t\t\t\tTHEN WBGL.EmploymentPracticesRetroDate\r\n\t\t\t\tELSE GLLine.RetroactiveDate\r\n\t\t\t\tEND AS RetroactiveDate,\r\n\t\t\tGLO.GLPremiumBasis AS GLPremiumBasis,\r\n\t\t\tDCLine.Type AS LineType,\r\n\t\t\tGLRisk.GL_RiskId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCGLRiskStaging GLRisk\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCLA\r\n\t\t\tON DCLA.SessionId = GLRisk.SessionId\r\n\t\t\t\tAND DCLA.ObjectId = GLRisk.GL_LocationId\r\n\t\t\t\tAND DCLA.ObjectName = 'DC_GL_Location'\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCGLOccupancyStaging GLO\r\n\t\t\tON GLO.SessionId = GLRisk.SessionId\r\n\t\t\t\tAND GLO.GL_RiskId = GLRisk.GL_RiskId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCGLLineStaging GLLine\r\n\t\t\tON GLLine.SessionId = GLRisk.SessionId\r\n\t\t\t\tAND GLLine.LineId = GLRisk.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WbGlRiskStage WBGLR\r\n\t\t\tON GLRisk.SessionId = WBGLR.SessionId\r\n\t\t\t\tAND GLRisk.GL_RiskId = WBGLR.GLRiskId\r\n\t\t--- Added as part of PROD-14731 to get Retroactive date for SBOP EPLI policies\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging DCLine\r\n\t\t\tON GLLine.LineId = DCLine.LineId\r\n\t\t\tand GLLine.SessionId = DCLine.SessionId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGLLineStage WBGL\r\n\t\t\tON GLLine.SessionId = WBGL.SessionId\r\n\t\t\t\tAND GLLine.GL_LineId = WBGL.GL_LineId\r\n\t\t--- Added as part of PROD-14731 to get Retroactive date for SBOP EPLI policies\r\n\t\tORDER BY GLRisk.GL_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_GL_Risk AS (\n\tSELECT\n\tLKP_DC_GL_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_GL_Risk.SessionId,\n\tLKP_DC_GL_Risk.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_GL_Risk.CoverageId,\n\tRTR_InsuranceLine_DC_GL_Risk.CoverageType,\n\tLKP_DC_GL_Risk.CoverageForm,\n\tLKP_DC_GL_Risk.RiskId,\n\tLKP_DC_GL_Risk.RiskType,\n\tLKP_DC_GL_Risk.Exposure,\n\tLKP_DC_GL_Risk.CommissionPercentage,\n\tLKP_DC_GL_Risk.CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\tLKP_DC_GL_Risk.ILFTableAssignmentCode,\n\tLKP_DC_GL_Risk.OccupancyType,\n\tLKP_DC_GL_Risk.RetroactiveDate,\n\tLKP_DC_GL_Risk.GLPremiumBasis,\n\t-- *INF*: DECODE(LOWER(SUBSTR(LTRIM(RTRIM(GLPremiumBasis)),1,1)),\r\n\t-- 'a','Area',\r\n\t-- 'c','Total Cost',\r\n\t-- 'm','Admissions',\r\n\t-- 'o','Total Operating Expenses',\r\n\t-- 'p','Payroll',\r\n\t-- 's','Gross Sales',\r\n\t-- 't','Units',\r\n\t-- 'u','Units',\r\n\t-- 'g',\t'Games',\r\n\t-- 'f','Flat Charge',\r\n\t-- 'b','Bed',\r\n\t-- 'd','Days',\r\n\t-- 'e','Camper Days',\r\n\t-- 'n','Contacts',\r\n\t-- 'r','Members',\r\n\t-- 'l','Licensed',\r\n\t-- 'h','Each',\r\n\t-- 'i','Receipts',\r\n\t-- 'k','Sales',\r\n\t-- 'j','Attendant',\r\n\t-- 'q','Squre Foot',\r\n\t-- 'v','Animals',\r\n\t-- 'w','Booth',\r\n\t-- 'z','Employees',\r\n\t-- 'x','Event',\r\n\t-- 'y','Location',\r\n\t-- '1','Admission',\r\n\t-- '2','Attendee',\r\n\t-- '3','Participants',\r\n\t-- 'Units')\r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(\n\t    LOWER(SUBSTR(LTRIM(RTRIM(GLPremiumBasis)), 1, 1)),\n\t    'a', 'Area',\n\t    'c', 'Total Cost',\n\t    'm', 'Admissions',\n\t    'o', 'Total Operating Expenses',\n\t    'p', 'Payroll',\n\t    's', 'Gross Sales',\n\t    't', 'Units',\n\t    'u', 'Units',\n\t    'g', 'Games',\n\t    'f', 'Flat Charge',\n\t    'b', 'Bed',\n\t    'd', 'Days',\n\t    'e', 'Camper Days',\n\t    'n', 'Contacts',\n\t    'r', 'Members',\n\t    'l', 'Licensed',\n\t    'h', 'Each',\n\t    'i', 'Receipts',\n\t    'k', 'Sales',\n\t    'j', 'Attendant',\n\t    'q', 'Squre Foot',\n\t    'v', 'Animals',\n\t    'w', 'Booth',\n\t    'z', 'Employees',\n\t    'x', 'Event',\n\t    'y', 'Location',\n\t    '1', 'Admission',\n\t    '2', 'Attendee',\n\t    '3', 'Participants',\n\t    'Units'\n\t) AS o_ExposureBasis,\n\tLKP_DC_GL_Risk.LineType\n\tFROM RTR_InsuranceLine_DC_GL_Risk\n\tLEFT JOIN LKP_DC_GL_Risk\n\tON LKP_DC_GL_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId3\n),\nLKP_DC_IM_CoverageForm AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskType,\n\tRiskId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances)\r\n\t\t\t\tIMCoverageForm.LineId AS LineId,\r\n\t\t\tIMCoverageForm.Type AS RiskType,\r\n\t\t\tIMCoverageForm.IM_CoverageFormId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMCoverageFormStage IMCoverageForm\r\n\t\tLEFT HASH JOIN\r\n\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT DCL.SessionId , LocationAssociationId , \r\n\t\t\t\tRank() over(partition by DCL.SessionId ORDER BY isnull(cast(WBL.LocationNumber as int), 9999) ASC) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCL\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DL\r\n\t\t\t\t\tON DCL.Locationid = DL.LocationId\r\n\t\t\t\t\t\tAND DCL.Sessionid = DL.Sessionid\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging WBL\r\n\t\t\t\t\tON DCL.SessionId = WBL.SessionId\r\n\t\t\t\t\t\tAND DCL.LocationId = WBL.LocationId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMLocationStage DCIL\r\n\t\t\t\t\tON DCIL.SessionId = DCL.SessionId\r\n\t\t\t\t\t\tAND DCIL.IMLocationId = DCL.ObjectId\r\n\t\t\t\t\t\tAND DCL.objectname = 'DC_IM_Location'\r\n\t\t\t\tWHERE --DCL.SessionId = IMCoverageForm.SessionId AND\r\n\t\t\t\t\t ISNULL(DL.Deleted,0) <> 1\r\n\t\t\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\tON B.SessionId = IMCoverageForm.SessionId \r\n\t\tORDER BY IMCoverageForm.IM_CoverageFormId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_IM_CoverageForm AS (\n\tSELECT\n\tLKP_DC_IM_CoverageForm.LocationAssociationId,\n\tRTR_InsuranceLine_DC_IM_CoverageForm.SessionId,\n\tLKP_DC_IM_CoverageForm.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_IM_CoverageForm.CoverageId,\n\tRTR_InsuranceLine_DC_IM_CoverageForm.CoverageType,\n\t-1 AS RiskId,\n\tLKP_DC_IM_CoverageForm.RiskType AS i_RiskType,\n\t-- *INF*: IIF(UPPER(SUBSTR(CoverageType,1,4))='LINE',i_RiskType,'N/A')\n\tIFF(UPPER(SUBSTR(CoverageType, 1, 4)) = 'LINE', i_RiskType, 'N/A') AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_IM_CoverageForm\n\tLEFT JOIN LKP_DC_IM_CoverageForm\n\tON LKP_DC_IM_CoverageForm.RiskId = RTR_InsuranceLine.ParentCoverageObjectId6\n),\nLKP_DC_IM_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tIndividualRiskPremiumModification,\n\tRiskType,\n\tRiskId\n\tFROM (\n\t\tSELECT DCLA.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tIMRisk.LineId AS LineId,\r\n\t\t\tNull As IndividualRiskPremiumModification,\r\n\t\t\tIMRisk.Description AS RiskType,\r\n\t\t\tIMRisk.IM_RiskId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMRiskStage IMRisk\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBIMRiskStage WBIMRisk\r\n\t\t\tON IMRisk.SessionId = WBIMRisk.SessionId\r\n\t\t\t\tAND IMRisk.IM_RiskId = WBIMRisk.IMRiskId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMLocationStage DCIMLocation\r\n\t\t\tON WBIMRisk.SessionId = DCIMLocation.SessionId\r\n\t\t\t\tAND WBIMRisk.IMLocationXmlId = DCIMLocation.Id\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCLA\r\n\t\t\tON DCLA.ObjectId = DCIMLocation.IMLocationId\r\n\t\t\tand DCLA.SessionId = DCIMLocation.SessionId\r\n\t\t\t\tAND DCLA.ObjectName = 'DC_IM_Location'\r\n\t\tORDER BY IMRisk.IM_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_IM_Risk AS (\n\tSELECT\n\tLKP_DC_IM_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_IM_Risk.SessionId,\n\tLKP_DC_IM_Risk.LineId,\n\tLKP_DC_IM_Risk.IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_IM_Risk.CoverageId,\n\tRTR_InsuranceLine_DC_IM_Risk.CoverageType,\n\tNULL AS CoverageForm,\n\tLKP_DC_IM_Risk.RiskId,\n\tLKP_DC_IM_Risk.RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_DC_IM_Risk\n\tLEFT JOIN LKP_DC_IM_Risk\n\tON LKP_DC_IM_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId7\n),\nLKP_DC_Line AS (\n\tSELECT\n\tLocationAssociationId,\n\tSessionId,\n\tCoverageForm,\n\tCommissionPercentage,\n\tRetroactiveDate,\n\tRatingPlan,\n\tRiskType,\n\tCoverageVersion,\n\tLineType,\n\tConstructionCode,\n\tProtectionClass,\n\ti_ParentCoverageObjectId,\n\tLineId\n\tFROM (\n\t\tSELECT \r\n\t\t\r\n\t\tLocationTables.LocationAssociationId as LocationAssociationId, \r\n\t\tLocationTables.SessionId AS SessionId,\r\n\t\t\t\t\tCASE DCLine.Type\r\n\t\t\t\tWHEN 'CommercialUmbrella'\r\n\t\t\t\t\tTHEN LTRIM(RTRIM(CULine.Description))\r\n\t\t\t\tWHEN 'CommercialAuto'\r\n\t\t\t\t\tTHEN ISNULL(WBCALine.CoverageForm, WBCALine.PolicyType)\r\n\t\t\t\tWHEN 'Crime'\r\n\t\t\t\t\tTHEN CRLine.PolicyType\r\n\t\t\t\tELSE 'N/A'\r\n\t\t\t\tEND AS CoverageForm,\r\n\t\t\tWBLine.FinalCommission AS CommissionPercentage,\r\n\t\t\tCASE DCLine.Type\r\n\t\t\t\tWHEN 'SBOPGeneralLiability'\r\n\t\t\t\t\tTHEN WBGL.EmploymentPracticesRetroDate\r\n\t\t\t\tELSE GLLine.RetroactiveDate\r\n\t\t\t\tEND AS RetroactiveDate,\r\n\t\t\tWCLine.RatingPlan AS RatingPlan,\r\n\t\t\tCASE DCLine.Type\r\n\t\t\t\tWHEN 'CommercialAuto'\r\n\t\t\t\t\tTHEN ISNULL(WBCALine.CoverageForm, WBCALine.PolicyType)\r\n\t\t\t\tELSE 'N/A'\r\n\t\t\t\tEND AS RiskType,\r\n\t\t\tGLLine.CoverageForm AS CoverageVersion,\r\n\t\t\tDCLine.Type AS LineType,\r\n\t\tNULL AS ConstructionCode,\r\n\t\tNULL AS ProtectionClass,\r\n\t\t\tDCLine.LineId AS LineId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging DCLine\r\n\t\t\r\n\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the the lowest location number (usually location 1 in most instances).\r\n\t\t-- in order to preserve rules within where clause as opposed to bringing them out into main query this has been \r\n\t\t-- changed to a Cross Apply as opposed to correlated sub-query\r\n\t\t\r\n\t\tCROSS APPLY \r\n\t\t(\r\n\t\t\tSELECT TOP 1 LocationAssociation.LocationAssociationId, LocationAssociation.SessionId, DCLine.LineId\r\n\t\t     FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging AS LocationAssociation\r\n\t\t    INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging AS WBLoc\r\n\t\t         ON WBLoc.LocationId = LocationAssociation.LocationId\r\n\t\t            AND WBLoc.SessionId = LocationAssociation.SessionId\r\n\t\t    WHERE WBLoc.SessionId = DCLine.SessionId\r\n\t\t          AND (ltrim(rtrim(LocationAssociation.LocationAssociationType)) = CASE\r\n\t\t                                                                WHEN DCLine.Type = 'BusinessOwners'\r\n\t\t                                                                THEN 'BP_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'CommercialAuto'\r\n\t\t                                                                THEN 'CA_Location'\r\n\t\t                                                                WHEN DCLine.Type IN('Property', 'SBOPProperty')\r\n\t\t                                                                THEN 'CF_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'Crime'\r\n\t\t                                                                THEN 'CR_Location'\r\n\t\t                                                                WHEN DCLine.Type IN('SBOPGeneralLiability', 'GeneralLiability')\r\n\t\t                                                                THEN 'GL_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'InlandMarine'\r\n\t\t                                                                THEN 'IM_Location'\r\n\t\t                                                                WHEN DCLine.Type = 'WorkersCompensation'\r\n\t\t                                                                THEN 'WC_Location'\r\n\t\t                                                                ELSE 'Location'\r\n\t\t                                                            END\r\n\t\t\t\t\tOR ltrim(rtrim(LocationAssociation.LocationAssociationType))='Location')\r\n\t\t    ORDER BY CAST(ISNULL(WBLoc.LocationNumber, 9999) AS INT),case when LocationAssociationType='Location' then 2 else 1 end\r\n\t\t\t) AS LocationTables\r\n\t\t\r\n\t\t\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLineStaging WBLine\r\n\t\t\tON WBLine.LineId = DCLine.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCULineStaging CULine\r\n\t\t\tON CULine.LineId = DCLine.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCALineStaging CALine\r\n\t\t\tON DCLine.LineId = CALine.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCRLineStage CRLine\r\n\t\t\tON DCLine.LineId = CRLine.LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCALineStaging WBCALine\r\n\t\t\tON CALine.CA_LineId = WBCALine.CA_LineId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCGLLineStaging GLLine\r\n\t\t\tON GLLine.LineId = DCLine.LineId\r\n\t\t--- Added as part of PROD-14731 to get Retroactive date for SBOP EPLI policies\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGLLineStage WBGL\r\n\t\t\tON GLLine.GL_LineId = WBGL.GL_LineId\r\n\t\t--- Added as part of PROD-14731 to get Retroactive date for SBOP EPLI policies\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCLineStaging WCLine\r\n\t\t\tON WCLine.LineId = DCLine.LineId\r\n\t\tORDER BY DCLine.LineId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineId ORDER BY LocationAssociationId) = 1\n),\nLKP_StateTerm AS (\n\tSELECT\n\tExperienceModEffectiveDate,\n\tRateEffectiveDate,\n\tLocationAssociationId\n\tFROM (\n\t\tselect WCStateTerm.ExperienceModEffectiveDate AS ExperienceModEffectiveDate,\r\n\t\t\tWCStateTerm.RateEffectiveDate AS RateEffectiveDate,\r\n\t\t\tA.LocationAssociationId as LocationAssociationId\r\n\t\t from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging A\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging B\r\n\t\ton A.SessionId=B.SessionId\r\n\t\tand A.LocationId=B.LocationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateStaging WCState\r\n\t\t\tON A.SessionId=WCState.SessionId\r\n\t\t\t\tAND WCState.STATE = B.StateProv\r\n\t\tinner JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateTermStaging WCStateTerm\r\n\t\t\tON WCStateTerm.WC_StateId = WCState.WC_StateId\r\n\t\t\t\tAND WCStateTerm.TermType = 'ORG'\r\n\t\torder by A.LocationAssociationId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LocationAssociationId ORDER BY ExperienceModEffectiveDate) = 1\n),\nEXP_DC_Line AS (\n\tSELECT\n\tLKP_DC_Line.LocationAssociationId,\n\tRTR_InsuranceLine_DC_Line.SessionId,\n\tRTR_InsuranceLine_DC_Line.ParentCoverageObjectId AS LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_Line.CoverageId,\n\tRTR_InsuranceLine_DC_Line.CoverageType,\n\t-- *INF*: :LKP.LKP_WORKDCTPOLICY(SessionId)\n\tLKP_WORKDCTPOLICY_SessionId.WBProductType AS v_ProductType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='DirectorsAndOffsCondos' OR IN(LTRIM(RTRIM(v_ProductType)),'Railroad Protective','Owners Contractors Protective'),\r\n\t-- :LKP.LKP_DCSTATCODESTAGING(CoverageId,SessionId)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LineType = 'DirectorsAndOffsCondos' OR LTRIM(RTRIM(v_ProductType)) IN ('Railroad Protective','Owners Contractors Protective'), LKP_DCSTATCODESTAGING_CoverageId_SessionId.Value\n\t) AS v_lkp_Statcode,\n\t-- *INF*: ---EDWP -4436\r\n\t-- iif( CoverageType = 'DirectorsAndOfficersCondos' and  in (v_lkp_Statcode,'80051','80052','80053','80057') ,\r\n\t-- 'DirectorsAndOfficersCondosResidential',\r\n\t--  iif (CoverageType = 'DirectorsAndOfficersCondos'  and in(v_lkp_Statcode,'80054','80055','80056','80058'),\r\n\t-- \t'DirectorsAndOfficersCondosCommercial',CoverageType))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    CoverageType = 'DirectorsAndOfficersCondos'\n\t    and v_lkp_Statcode IN ('80051','80052','80053','80057'),\n\t    'DirectorsAndOfficersCondosResidential',\n\t    IFF(\n\t        CoverageType = 'DirectorsAndOfficersCondos'\n\t        and v_lkp_Statcode IN ('80054','80055','80056','80058'),\n\t        'DirectorsAndOfficersCondosCommercial',\n\t        CoverageType\n\t    )\n\t) AS out_CoverageType,\n\tLKP_DC_Line.CoverageForm,\n\t-1 AS RiskId,\n\tLKP_DC_Line.RiskType,\n\t-- *INF*: --Commented - US-387727\r\n\t-- --DECODE(TRUE,\r\n\t-- --LineType='Crime', \r\n\t-- --IIF(ISNULL(:LKP.LKP_DCCRRiskType(SessionId)),'N/A',:LKP.LKP_DCCRRiskType(SessionId)),\r\n\t-- --RiskType)\r\n\t-- IIF(ISNULL(RiskType),'N/A', RiskType)\n\tIFF(RiskType IS NULL, 'N/A', RiskType) AS o_RiskType,\n\tLKP_DC_Line.LineType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='DirectorsAndOffsCondos', :LKP.LKP_WBCDOCoverageDirectorsAndOfficersCondosStage(CoverageId),\r\n\t-- LineType='EmploymentPracticesLiab' OR \r\n\t-- CoverageType='EmploymentPracticesLiability' OR \r\n\t-- INSTR(CoverageType,'WB516',1,1) OR \r\n\t-- CoverageType='NS0279', :LKP.LKP_WBEPLCoverageEmploymentPracticesLiabilityStage(CoverageId),\r\n\t-- CoverageType='BusinessIncomeExtendedPeriod', :LKP.LKP_DCBPCoverageBusinessIncomeExtendedPeriodStage(CoverageId),\r\n\t-- CoverageType='BusinessIncomeOrdinaryPayroll', :LKP.LKP_DCBPCoverageBusinessIncomeOrdinaryPayrollStage(CoverageId),\r\n\t-- LTRIM(RTRIM(v_ProductType))='Liquor Liability',:LKP.LKP_DCSTATCODE(CoverageId),\r\n\t-- LTRIM(RTRIM(v_ProductType))='Railroad Protective',:LKP.LKP_DCGLCOVERAGERAILROADPROTECTIVELIABILITYSTAGING(CoverageId),\r\n\t-- LTRIM(RTRIM(v_ProductType))='Owners Contractors Protective',:LKP.LKP_DCGLCOVERAGEOWNERSCONTRACTORSORPRINCIPALSSTAGING(CoverageId),\r\n\t-- 0)\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    LineType = 'DirectorsAndOffsCondos', LKP_WBCDOCOVERAGEDIRECTORSANDOFFICERSCONDOSSTAGE_CoverageId.NumberOfUnits,\n\t    LineType = 'EmploymentPracticesLiab' OR CoverageType = 'EmploymentPracticesLiability' OR REGEXP_INSTR(CoverageType, 'WB516', 1, 1) OR CoverageType = 'NS0279', LKP_WBEPLCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId.TotalNumberOfEmployees,\n\t    CoverageType = 'BusinessIncomeExtendedPeriod', LKP_DCBPCOVERAGEBUSINESSINCOMEEXTENDEDPERIODSTAGE_CoverageId.Days,\n\t    CoverageType = 'BusinessIncomeOrdinaryPayroll', LKP_DCBPCOVERAGEBUSINESSINCOMEORDINARYPAYROLLSTAGE_CoverageId.Days,\n\t    LTRIM(RTRIM(v_ProductType)) = 'Liquor Liability', LKP_DCSTATCODE_CoverageId.Value,\n\t    LTRIM(RTRIM(v_ProductType)) = 'Railroad Protective', LKP_DCGLCOVERAGERAILROADPROTECTIVELIABILITYSTAGING_CoverageId.Exposure,\n\t    LTRIM(RTRIM(v_ProductType)) = 'Owners Contractors Protective', LKP_DCGLCOVERAGEOWNERSCONTRACTORSORPRINCIPALSSTAGING_CoverageId.Exposure,\n\t    0\n\t) AS v_Exposure,\n\t-- *INF*: IIF(ISNULL(v_Exposure),0,v_Exposure)\n\tIFF(v_Exposure IS NULL, 0, v_Exposure) AS Exposure,\n\tLKP_DC_Line.CommissionPercentage,\n\tLKP_DC_Line.CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='Crime', IIF(ISNULL(:LKP.LKP_DCCROccupancyStaging(SessionId)),'N/A',:LKP.LKP_DCCROccupancyStaging(SessionId)),\r\n\t-- 'N/A')\r\n\t-- \r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    LineType = 'Crime', IFF(\n\t        LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline IS NULL, 'N/A',\n\t        LKP_DCCROCCUPANCYSTAGING_SessionId.OccupancyTypeMonoline\n\t    ),\n\t    'N/A'\n\t) AS OccupancyType,\n\tLKP_DC_Line.RetroactiveDate,\n\tLKP_StateTerm.ExperienceModEffectiveDate,\n\tLKP_DC_Line.ConstructionCode AS i_ConstructionCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='BusinessOwners',\r\n\t--  IIF(ISNULL(:LKP.LKP_DCBPLocation(LineId)),'N/A',\r\n\t-- SUBSTR(:LKP.LKP_DCBPLocation(LineId) , INSTR(:LKP.LKP_DCBPLocation(LineId), '--')+2 , INSTR(:LKP.LKP_DCBPLocation(LineId), '~~') -2 -INSTR(:LKP.LKP_DCBPLocation(LineId), '--')   )),\r\n\t--  NOT ISNULL(i_ConstructionCode),\r\n\t-- i_ConstructionCode,\r\n\t-- 'N/A')\n\tDECODE(\n\t    TRUE,\n\t    LineType = 'BusinessOwners', IFF(\n\t        LKP_DCBPLOCATION_LineId.RetureValue IS NULL, 'N/A',\n\t        SUBSTR(LKP_DCBPLOCATION_LineId.RetureValue, REGEXP_INSTR(LKP_DCBPLOCATION_LineId.RetureValue, '--') + 2, REGEXP_INSTR(LKP_DCBPLOCATION_LineId.RetureValue, '~~') - 2 - REGEXP_INSTR(LKP_DCBPLOCATION_LineId.RetureValue, '--'))\n\t    ),\n\t    i_ConstructionCode IS NOT NULL, i_ConstructionCode,\n\t    'N/A'\n\t) AS o_ConstructionCode,\n\tLKP_StateTerm.RateEffectiveDate,\n\tLKP_DC_Line.RatingPlan,\n\tLKP_DC_Line.ProtectionClass AS i_ProtectionClass,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='BusinessOwners', IIF(ISNULL(:LKP.LKP_DCBPLocation(LineId)),'N/A',SUBSTR(:LKP.LKP_DCBPLocation(LineId) , INSTR(:LKP.LKP_DCBPLocation(LineId), '~~')+2 )),\r\n\t--  NOT ISNULL(i_ProtectionClass),\r\n\t-- i_ProtectionClass,\r\n\t-- 'N/A')\r\n\t-- \r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    LineType = 'BusinessOwners', IFF(\n\t        LKP_DCBPLOCATION_LineId.RetureValue IS NULL, 'N/A',\n\t        SUBSTR(LKP_DCBPLOCATION_LineId.RetureValue, REGEXP_INSTR(LKP_DCBPLOCATION_LineId.RetureValue, '~~') + 2)\n\t    ),\n\t    i_ProtectionClass IS NOT NULL, i_ProtectionClass,\n\t    'N/A'\n\t) AS o_ProtectionClass,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(v_ProductType))='Liquor Liability','Sales',\r\n\t-- LTRIM(RTRIM(v_ProductType))='Railroad Protective' and IN(v_lkp_Statcode,'40011','40012','40013','40014'),'Total Cost',\r\n\t-- LTRIM(RTRIM(v_ProductType))='Owners Contractors Protective' and IN(v_lkp_Statcode,'16291','91181','16292','17982','93161','93163','93040'),'Total Cost of Work',\r\n\t-- LTRIM(RTRIM(v_ProductType))='Owners Contractors Protective' and IN(v_lkp_Statcode,'27111','27112'),'Newcarriers',\r\n\t-- LTRIM(RTRIM(v_ProductType))='Owners Contractors Protective' and IN(v_lkp_Statcode,'15191','15192'),'Independent Contractors'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(v_ProductType)) = 'Liquor Liability', 'Sales',\n\t    LTRIM(RTRIM(v_ProductType)) = 'Railroad Protective' and v_lkp_Statcode IN ('40011','40012','40013','40014'), 'Total Cost',\n\t    LTRIM(RTRIM(v_ProductType)) = 'Owners Contractors Protective' and v_lkp_Statcode IN ('16291','91181','16292','17982','93161','93163','93040'), 'Total Cost of Work',\n\t    LTRIM(RTRIM(v_ProductType)) = 'Owners Contractors Protective' and v_lkp_Statcode IN ('27111','27112'), 'Newcarriers',\n\t    LTRIM(RTRIM(v_ProductType)) = 'Owners Contractors Protective' and v_lkp_Statcode IN ('15191','15192'), 'Independent Contractors'\n\t) AS o_ExposureBasis,\n\tLKP_DC_Line.i_ParentCoverageObjectId AS lkp_LineId_DCLine,\n\tLKP_DC_Line.SessionId AS lkp_SessionId_DCLine\n\tFROM RTR_InsuranceLine_DC_Line\n\tLEFT JOIN LKP_DC_Line\n\tON LKP_DC_Line.LineId = RTR_InsuranceLine.ParentCoverageObjectId1\n\tLEFT JOIN LKP_StateTerm\n\tON LKP_StateTerm.LocationAssociationId = LKP_DC_Line.LocationAssociationId\n\tLEFT JOIN LKP_WORKDCTPOLICY LKP_WORKDCTPOLICY_SessionId\n\tON LKP_WORKDCTPOLICY_SessionId.SessionId = SessionId\n\n\tLEFT JOIN LKP_DCSTATCODESTAGING LKP_DCSTATCODESTAGING_CoverageId_SessionId\n\tON LKP_DCSTATCODESTAGING_CoverageId_SessionId.ObjectId = CoverageId\n\tAND LKP_DCSTATCODESTAGING_CoverageId_SessionId.SessionId = SessionId\n\n\tLEFT JOIN LKP_WBCDOCOVERAGEDIRECTORSANDOFFICERSCONDOSSTAGE LKP_WBCDOCOVERAGEDIRECTORSANDOFFICERSCONDOSSTAGE_CoverageId\n\tON LKP_WBCDOCOVERAGEDIRECTORSANDOFFICERSCONDOSSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBEPLCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE LKP_WBEPLCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId\n\tON LKP_WBEPLCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCBPCOVERAGEBUSINESSINCOMEEXTENDEDPERIODSTAGE LKP_DCBPCOVERAGEBUSINESSINCOMEEXTENDEDPERIODSTAGE_CoverageId\n\tON LKP_DCBPCOVERAGEBUSINESSINCOMEEXTENDEDPERIODSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCBPCOVERAGEBUSINESSINCOMEORDINARYPAYROLLSTAGE LKP_DCBPCOVERAGEBUSINESSINCOMEORDINARYPAYROLLSTAGE_CoverageId\n\tON LKP_DCBPCOVERAGEBUSINESSINCOMEORDINARYPAYROLLSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCSTATCODE LKP_DCSTATCODE_CoverageId\n\tON LKP_DCSTATCODE_CoverageId.ObjectId = CoverageId\n\n\tLEFT JOIN LKP_DCGLCOVERAGERAILROADPROTECTIVELIABILITYSTAGING LKP_DCGLCOVERAGERAILROADPROTECTIVELIABILITYSTAGING_CoverageId\n\tON LKP_DCGLCOVERAGERAILROADPROTECTIVELIABILITYSTAGING_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCGLCOVERAGEOWNERSCONTRACTORSORPRINCIPALSSTAGING LKP_DCGLCOVERAGEOWNERSCONTRACTORSORPRINCIPALSSTAGING_CoverageId\n\tON LKP_DCGLCOVERAGEOWNERSCONTRACTORSORPRINCIPALSSTAGING_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_DCCROCCUPANCYSTAGING LKP_DCCROCCUPANCYSTAGING_SessionId\n\tON LKP_DCCROCCUPANCYSTAGING_SessionId.SessionId = SessionId\n\n\tLEFT JOIN LKP_DCBPLOCATION LKP_DCBPLOCATION_LineId\n\tON LKP_DCBPLOCATION_LineId.LineId = LineId\n\n),\nLKP_DC_Location AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tPredominantLiabilityLiabExpBase,\n\tConstructionCode,\n\tProtectionClassOverride,\n\tBuildingNumber,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tLocationId\n\tFROM (\n\t\tSELECT DCLocationAssociationStaging.LocationAssociationId AS LocationAssociationID,\r\n\t\t\tDCLineStaging.LineId AS LineID,\r\n\t\t\tNull AS PredominantLiabilityLiabExpBase,\r\n\t\t\tNULL AS ConstructionCode,\r\n\t\t\tWBBPLocationAccountStage.ProtectionClassOverride AS ProtectionClassOverride,\r\n\t\t\tNULL AS BuildingNumber,\r\n\t\t\tNULL AS OccupancyClassDescription,\r\n\t\t\tNULL AS ActiveBuildingFlag,\r\n\t\t\tDCLocationStaging.LocationId AS LocationID\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging\r\n\t\t\tON DCLocationStaging.SessionId = DCLocationAssociationStaging.SessionId\r\n\t\t\t\tAND DCLocationStaging.LocationId = DCLocationAssociationStaging.LocationId\r\n\t\t\t\tAND ObjectName = 'DC_BP_Location'\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPLocationStage\r\n\t\t\tON DCLocationAssociationStaging.SessionId = DCBPLocationStage.SessionId\r\n\t\t\t\tAND DCLocationAssociationStaging.ObjectId = DCBPLocationStage.BPLocationId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationAccountStage\r\n\t\t\tON DCLocationStaging.SessionId = WBLocationAccountStage.SessionId\r\n\t\t\t\tAND DCLocationStaging.LocationId = WBLocationAccountStage.LocationId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCLLocationAccountStage\r\n\t\t\tON WBLocationAccountStage.SessionId = WBCLLocationAccountStage.SessionId\r\n\t\t\t\tAND WBLocationAccountStage.WBLocationAccountId = WBCLLocationAccountStage.WBLocationAccountId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBBPLocationAccountStage\r\n\t\t\tON WBBPLocationAccountStage.SessionId = WBCLLocationAccountStage.SessionId\r\n\t\t\t\tAND WBBPLocationAccountStage.WB_CL_LocationAccountId = WBCLLocationAccountStage.WBCLLocationAccountId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging\r\n\t\t\tON DCLocationStaging.SessionId = DCLineStaging.SessionId\r\n\t\t\t\tAND DCLineStaging.Type = 'BusinessOwners'\r\n\t\tORDER BY DCBPLocationStage.BPLocationId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LocationId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_Location AS (\n\tSELECT\n\tLKP_DC_Location.LocationAssociationId,\n\tRTR_InsuranceLine_DC_Location.SessionId,\n\tLKP_DC_Location.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_Location.CoverageId,\n\tRTR_InsuranceLine_DC_Location.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\tLKP_DC_Location.PredominantLiabilityLiabExpBase,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\tLKP_DC_Location.BuildingNumber AS i_BuildingNumber,\n\t-- *INF*: LPAD(TO_INTEGER(i_BuildingNumber),3,'0')\n\tLPAD(CAST(i_BuildingNumber AS INTEGER), 3, '0') AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_Location.ConstructionCode,\n\tLKP_DC_Location.ProtectionClassOverride,\n\tLKP_DC_Location.OccupancyClassDescription,\n\tLKP_DC_Location.ActiveBuildingFlag,\n\tRTR_InsuranceLine_DC_Location.SubCoverageType AS SubCoverageType26\n\tFROM RTR_InsuranceLine_DC_Location\n\tLEFT JOIN LKP_DC_Location\n\tON LKP_DC_Location.LocationId = RTR_InsuranceLine.ParentCoverageObjectId26\n),\nLKP_DC_WC_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tExposureBasis,\n\tClassCode,\n\tCoverageForm,\n\tCommissionPercentage,\n\tExperienceModEffectiveDate,\n\tRateEffectiveDate,\n\tRatingPlan,\n\tRiskId\n\tFROM (\n\t\tSELECT LA.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tWCRisk.LineId AS LineId,\r\n\t\t\tWCRisk.ExposureBasis AS ExposureBasis,\r\n\t\t\tDCC.Value AS ClassCode,\r\n\t\t\tWCLine.PolicyRatingType AS CoverageForm,\r\n\t\t\tWCLine.CommissionPercentage AS CommissionPercentage,\r\n\t\t\tWCT.PeriodStartDate AS ExperienceModEffectiveDate,\r\n\t\t\tWCT.TermRateEffectiveDate AS RateEffectiveDate,\r\n\t\t\tWCLine.RatingPlan AS RatingPlan,\r\n\t\t\tWCRisk.WC_RiskId AS RiskId\r\n\t\tFROM DCWCRiskStaging WCRisk\r\n\t\tLEFT JOIN DCClassCodeStaging DCC\r\n\t\t\tON DCC.ObjectId = WCRisk.WC_RiskId\r\n\t\t\t\tAND DCC.SessionId = WCRisk.SessionId\r\n\t\t\t\tAND DCC.ObjectName = 'DC_WC_Risk'\r\n\t\tLEFT JOIN DCWCLocationStaging WCL\r\n\t\t\tON WCL.WC_LocationId = WCRisk.WC_LocationId\r\n\t\t\t\tAND WCL.SessionId = WCRisk.SessionId\r\n\t\tLEFT JOIN DCLocationAssociationStaging LA\r\n\t\t\tON LA.ObjectId = WCL.WC_LocationId\r\n\t\t\t\tAND LA.ObjectName = 'DC_WC_Location'\r\n\t\t\t\tAND LA.SessionId = WCL.SessionId\r\n\t\tLEFT JOIN DCLocationStaging DCL\r\n\t\t\tON DCL.LocationId = LA.LocationId\r\n\t\t\t\tAND DCL.SessionId = LA.SessionId\r\n\t\tLEFT JOIN DCWCLineStaging WCLine\r\n\t\t\tON WCLine.LineId = WCRisk.LineId\r\n\t\t\t\tAND WCLine.SessionId = WCRisk.SessionId\r\n\t\tLEFT JOIN DCCoverageStaging DC\r\n\t\t\tON WCRisk.WC_RiskId = DC.ObjectId\r\n\t\t\t\tAND DC.ObjectName = 'DC_WC_Risk'\r\n\t\t\t\tAND WCRisk.SessionId = DC.SessionId\r\n\t\tLEFT JOIN WBCoverageStage WC\r\n\t\t\tON DC.CoverageId = WC.CoverageId\r\n\t\t\t\tAND DC.SessionId = WC.SessionId\r\n\t\tLEFT JOIN WBWCCoverageTermStage WCT\r\n\t\t\tON WC.WBCoverageId = WCT.WB_CoverageId\r\n\t\t\t\tAND WC.SessionId = WCT.SessionId\r\n\t\tORDER BY WCRisk.WC_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_WC_Risk AS (\n\tSELECT\n\tLKP_DC_WC_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_DC_WC_Risk.SessionId,\n\tLKP_DC_WC_Risk.LineId,\n\tLKP_DC_WC_Risk.ExposureBasis AS i_ExposureBasis,\n\tLKP_DC_WC_Risk.ClassCode,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_WC_Risk.CoverageId,\n\tRTR_InsuranceLine_DC_WC_Risk.CoverageType,\n\tLKP_DC_WC_Risk.CoverageForm,\n\tLKP_DC_WC_Risk.RiskId,\n\t'N/A' AS RiskType,\n\t-- *INF*: :LKP.LKP_EXPOSURE(CoverageId)\n\tLKP_EXPOSURE_CoverageId.Value AS v_Exposure,\n\t-- *INF*: IIF(\r\n\t-- ISNULL(v_Exposure) OR NOT IS_NUMBER(v_Exposure),\r\n\t-- 0,TO_DECIMAL(v_Exposure))\n\tIFF(\n\t    v_Exposure IS NULL OR NOT REGEXP_LIKE(v_Exposure, '^[0-9]+$'), 0, CAST(v_Exposure AS FLOAT)\n\t) AS Exposure,\n\tLKP_DC_WC_Risk.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_WC_Risk.ExperienceModEffectiveDate,\n\tLKP_DC_WC_Risk.RateEffectiveDate,\n\tLKP_DC_WC_Risk.RatingPlan,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ClassCode = '0908','Y',\r\n\t-- ClassCode = '0913','Y',\r\n\t-- ClassCode = '7709','Y',\r\n\t-- 'N')\r\n\t-- --Flag eligible class codes of Exposure Basis 'Unit' to compensate for issue where ExampleData doesn't always correctly pass along correct exposure basis. See AP-118 and PROD-9417. Once this is fixed in ExampleIDO for good, this class code based override needs to be removed \n\tDECODE(\n\t    TRUE,\n\t    ClassCode = '0908', 'Y',\n\t    ClassCode = '0913', 'Y',\n\t    ClassCode = '7709', 'Y',\n\t    'N'\n\t) AS v_UnitTypeFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_UnitTypeFlag = 'Y','Unit',\r\n\t-- v_UnitTypeFlag = 'N','Payroll'\r\n\t-- )\r\n\t-- -- We override lookup values with with a value depending on hard coded class codes for Unit ExposureBasis per PROD-9417 until it is fixed.\n\tDECODE(\n\t    TRUE,\n\t    v_UnitTypeFlag = 'Y', 'Unit',\n\t    v_UnitTypeFlag = 'N', 'Payroll'\n\t) AS o_ExposureBasis\n\tFROM RTR_InsuranceLine_DC_WC_Risk\n\tLEFT JOIN LKP_DC_WC_Risk\n\tON LKP_DC_WC_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId4\n\tLEFT JOIN LKP_EXPOSURE LKP_EXPOSURE_CoverageId\n\tON LKP_EXPOSURE_CoverageId.ObjectId = CoverageId\n\n),\nLKP_DC_WC_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCommissionPercentage,\n\tExperienceModEffectiveDate,\n\tRateEffectiveDate,\n\tRatingPlan,\n\tCoverageForm,\n\tRiskId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\r\n\t\tWCState.LineId AS LineId,\r\n\t\t\r\n\t\tWCLine.CommissionPercentage AS CommissionPercentage,\r\n\t\t\r\n\t\tWCST.PeriodStartDate AS ExperienceModEffectiveDate,\r\n\t\t\r\n\t\tWCST.RateEffectiveDate AS RateEffectiveDate,\r\n\t\t\r\n\t\tWCLine.RatingPlan AS RatingPlan,\r\n\t\t\r\n\t\tWCLine.PolicyRatingType AS CoverageForm,\r\n\t\t\r\n\t\tWCS.WC_StateId AS RiskId\r\n\t\t\r\n\t\tFROM dbo.DCWCStateStaging WCState\r\n\t\t\r\n\t\tINNER JOIN dbo.DCWCStateStaging WCS\r\n\t\t\r\n\t\tON WCState.WC_StateId = WCS.WC_StateId\r\n\t\t\r\n\t\tAND WCState.SessionId = WCS.SessionId\r\n\t\tINNER JOIN dbo.DCWCStatetermStaging WCST\r\n\t\t\r\n\t\tON WCState.WC_StateId = WCST.WC_StateId\r\n\t\t\r\n\t\tAND WCState.SessionId = WCST.SessionId\r\n\t\t\r\n\t\tLEFT JOIN dbo.DCWCLineStaging WCLine\r\n\t\t\r\n\t\tON WCLine.LineId = WCState.LineId\r\n\t\t\r\n\t\tAND WCLine.SessionId = WCState.SessionId\r\n\t\t\r\n\t\tLEFT HASH JOIN\r\n\t\t\r\n\t\t(SELECT * FROM (\r\n\t\t\r\n\t\tSELECT A.SessionId , B.LocationAssociationId , A.StateProv ,\r\n\t\t\r\n\t\tRank() over(partition by A.SessionId,A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\r\n\t\tFROM dbo.DCLocationstaging A\r\n\t\t\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B\r\n\t\t\r\n\t\tON A.LocationId = B.LocationId\r\n\t\t\r\n\t\tAND A.SessionId = B.SessionId\r\n\t\t\r\n\t\tINNER JOIN dbo.WBLocationStaging C\r\n\t\t\r\n\t\tON A.LocationId = C.LocationId\r\n\t\t\r\n\t\tAND A.SessionId = C.SessionId\r\n\t\t\r\n\t\tINNER JOIN dbo.DCWCLocationStaging D\r\n\t\t\r\n\t\tON B.ObjectId = D.WC_LocationId\r\n\t\t\r\n\t\tAND B.SessionId = D.SessionId\r\n\t\t\r\n\t\tWHERE B.LocationAssociationType = 'WC_Location'\r\n\t\t\r\n\t\t--AND A.SessionId = WCState.SessionId\r\n\t\t\r\n\t\t--AND A.StateProv = WCState.STATE\r\n\t\t\r\n\t\tAND ISNULL(A.Deleted,0)<>1\r\n\t\t\r\n\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\t\r\n\t\tON B.SessionId = WCState.SessionId\r\n\t\t\r\n\t\tAND B.StateProv = WCState.STATE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_WC_State AS (\n\tSELECT\n\tLKP_DC_WC_State.LocationAssociationId,\n\tRTR_InsuranceLine_DC_WC_State.SessionId,\n\tLKP_DC_WC_State.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_WC_State.CoverageId,\n\tRTR_InsuranceLine_DC_WC_State.CoverageType,\n\tLKP_DC_WC_State.CoverageForm,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_WC_State.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_WC_State.ExperienceModEffectiveDate,\n\tLKP_DC_WC_State.RateEffectiveDate,\n\tLKP_DC_WC_State.RatingPlan\n\tFROM RTR_InsuranceLine_DC_WC_State\n\tLEFT JOIN LKP_DC_WC_State\n\tON LKP_DC_WC_State.RiskId = RTR_InsuranceLine.ParentCoverageObjectId27\n),\nLKP_DC_WC_StateTerm AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCommissionPercentage,\n\tExperienceModEffectiveDate,\n\tRateEffectiveDate,\n\tRatingPlan,\n\tCoverageForm,\n\tRiskId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId, \r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances) for\r\n\t\t\t-- for a given state in question.\r\n\t\t\tWCState.LineId AS LineId,\r\n\t\t\tWCLine.CommissionPercentage AS CommissionPercentage,\r\n\t\t\tWCST.PeriodStartDate AS ExperienceModEffectiveDate,\r\n\t\t\tWCST.RateEffectiveDate AS RateEffectiveDate,\r\n\t\t\tWCLine.RatingPlan AS RatingPlan,\r\n\t\t\tWCLine.PolicyRatingType AS CoverageForm,\r\n\t\t\tWCST.WC_StateTermId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateStaging WCState\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateTermStaging WCST\r\n\t\t\tON WCState.WC_StateId = WCST.WC_StateId\r\n\t\t\t\tAND WCState.SessionId = WCST.SessionId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCLineStaging WCLine\r\n\t\t\tON WCLine.LineId = WCState.LineId\r\n\t\t\t\tAND WCLine.SessionId = WCState.SessionId\r\n\t\tLEFT HASH JOIN\r\n\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT A.SessionId , B.LocationAssociationId , A.StateProv ,\r\n\t\t\t\tRank() over(partition by A.SessionId,A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging A\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging B\r\n\t\t\t\t\tON A.LocationId = B.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = B.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging C\r\n\t\t\t\t\tON A.LocationId = C.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = C.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCLocationStaging D\r\n\t\t\t\t\tON B.ObjectId = D.WC_LocationId\r\n\t\t\t\t\t\tAND B.SessionId = D.SessionId\r\n\t\t\t\tWHERE B.LocationAssociationType = 'WC_Location'\r\n\t\t\t\t\t--AND A.SessionId = WCState.SessionId\r\n\t\t\t\t\t--AND A.StateProv = WCState.STATE\r\n\t\t\t\t\tAND ISNULL(A.Deleted,0)<>1\r\n\t\t\t\t\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\tON B.SessionId = WCState.SessionId\r\n\t\tAND B.StateProv = WCState.STATE\r\n\t\tORDER BY WCST.WC_StateTermId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_DC_WC_StateTerm AS (\n\tSELECT\n\tLKP_DC_WC_StateTerm.LocationAssociationId,\n\tRTR_InsuranceLine_DC_WC_StateTerm.SessionId,\n\tLKP_DC_WC_StateTerm.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_DC_WC_StateTerm.CoverageId,\n\tRTR_InsuranceLine_DC_WC_StateTerm.CoverageType,\n\tLKP_DC_WC_StateTerm.CoverageForm,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\tLKP_DC_WC_StateTerm.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType,\n\tLKP_DC_WC_StateTerm.ExperienceModEffectiveDate,\n\tLKP_DC_WC_StateTerm.RateEffectiveDate,\n\tLKP_DC_WC_StateTerm.RatingPlan\n\tFROM RTR_InsuranceLine_DC_WC_StateTerm\n\tLEFT JOIN LKP_DC_WC_StateTerm\n\tON LKP_DC_WC_StateTerm.RiskId = RTR_InsuranceLine.ParentCoverageObjectId19\n),\nLKP_WB_CU_PremiumDetail AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tCoverageForm,\n\tCommissionPercentage,\n\tWBCUPremiumDetailId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances). It\r\n\t\t\t-- focuses in on risk locations by only grabbing records with a type of Location.\r\n\t\t\tWBCUPremiumDetail.LineId AS LineId,\r\n\t\t\tLTRIM(RTRIM(CULine.Description)) AS CoverageForm,\r\n\t\t\tWBLine.FinalCommission AS CommissionPercentage,\r\n\t\t\tWBCUPremiumDetail.WBCUPremiumDetailId AS WBCUPremiumDetailId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCUPremiumDetailStage WBCUPremiumDetail\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCULineStaging CULine\r\n\t\t\tON WBCUPremiumDetail.SessionId = CULine.SessionId\r\n\t\t\t\tAND WBCUPremiumDetail.LineId = CULine.LineId\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLineStaging WBLine\r\n\t\t\tON WBLine.SessionId = CULine.SessionId\r\n\t\t\t\tAND WBLine.LineId = CULine.LineId\r\n\t\tLEFT HASH JOIN \r\n\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT WBLoc.SessionId, la.LocationAssociationId ,\r\n\t\t\t\tRank() over(partition by WBLoc.SessionId order by ISNULL(cast(wbLoc.LocationNumber as int),999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging la\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging WBLoc\r\n\t\t\t\t\tON WBLoc.LocationId = la.LocationId\r\n\t\t\t\t\t\tAND WBLoc.SessionId = la.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging DCLoc\r\n\t\t\t\ton la.Locationid=DCLoc.LocationId\r\n\t\t\t\tand la.Sessionid=DCLoc.Sessionid\r\n\t\t\t\t--WHERE WBLoc.SessionId = WBCUPremiumDetail.SessionId\r\n\t\t\t\t\tAND la.LocationAssociationType = 'Location'\r\n\t\t\t\t\tAND ISNULL(DCLoc.Deleted,0)<>1\r\n\t\t\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\tON B.SessionId = WBCUPremiumDetail.SessionId\r\n\t\tORDER BY WBCUPremiumDetail.WBCUPremiumDetailId--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WBCUPremiumDetailId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_CU_PremiumDetail AS (\n\tSELECT\n\tLKP_WB_CU_PremiumDetail.LocationAssociationId,\n\tRTR_InsuranceLine_WB_CU_PremiumDetail.SessionId,\n\tLKP_WB_CU_PremiumDetail.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_CU_PremiumDetail.CoverageId,\n\tRTR_InsuranceLine_WB_CU_PremiumDetail.CoverageType,\n\tLKP_WB_CU_PremiumDetail.CoverageForm,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\tLKP_WB_CU_PremiumDetail.CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_CU_PremiumDetail\n\tLEFT JOIN LKP_WB_CU_PremiumDetail\n\tON LKP_WB_CU_PremiumDetail.WBCUPremiumDetailId = RTR_InsuranceLine.ParentCoverageObjectId17\n),\nLKP_WB_EC_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT DCL.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tECRisk.LineId AS LineId,\r\n\t\t\tECRisk.WB_EC_RiskId AS RiskId\r\n\t\tFROM WBECRiskStage ECRisk\r\n\t\tLEFT OUTER JOIN DCLocationAssociationStaging DCL\r\n\t\t\tON DCL.LocationXmlId = ECRisk.LocationId\r\n\t\t\t\tAND DCL.SessionId = ECRisk.SessionId\r\n\t\tORDER BY ECRisk.WB_EC_RiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_EC_Risk AS (\n\tSELECT\n\tLKP_WB_EC_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_WB_EC_Risk.SessionId,\n\tLKP_WB_EC_Risk.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_EC_Risk.CoverageId,\n\tRTR_InsuranceLine_WB_EC_Risk.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_EC_Risk\n\tLEFT JOIN LKP_WB_EC_Risk\n\tON LKP_WB_EC_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId24\n),\nLKP_WB_EC_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances).\r\n\t\t\tECState.LineId AS LineId,\r\n\t\t\tECState.WB_EC_StateId AS RiskId\r\n\t\tFROM .WBECStateStage ECState\r\n\t\tLEFT HASH JOIN\r\n\t\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT A.SessionId , B.LocationAssociationId ,A.StateProv\r\n\t\t\t\t,Rank() over(partition by A.SessionId,A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM DCLocationStaging A\r\n\t\t\t\tINNER JOIN DCLocationAssociationStaging B\r\n\t\t\t\t\tON A.LocationId = B.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = B.SessionId\r\n\t\t\t\tINNER JOIN WBLocationStaging C\r\n\t\t\t\t\tON A.LocationId = C.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = C.SessionId\r\n\t\t\t\tWHERE B.LocationAssociationType = 'Location'\r\n\t\t\t\t\tAND ISNULL(A.Deleted,0)<>1\r\n\t\t\t)A\r\n\t\tWHERE A.Record_Rank = 1\r\n\t\t)B\r\n\t\tON \r\n\t\tB.SessionId = ECState.SessionId\r\n\t\tAND B.StateProv = ECState.StateAbbreviation\t\t\r\n\t\tORDER BY ECState.WB_EC_StateId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_EC_State AS (\n\tSELECT\n\tLKP_WB_EC_State.LocationAssociationId,\n\tRTR_InsuranceLine_WB_EC_State.SessionId,\n\tLKP_WB_EC_State.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_EC_State.CoverageId,\n\tRTR_InsuranceLine_WB_EC_State.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_EC_State\n\tLEFT JOIN LKP_WB_EC_State\n\tON LKP_WB_EC_State.RiskId = RTR_InsuranceLine.ParentCoverageObjectId25\n),\nLKP_WB_GOC_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT DCL.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tGOCRisk.LineId AS LineId,\r\n\t\t\tGOCRisk.WBGOCRiskId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGOCRiskStage GOCRisk\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCL\r\n\t\t\tON DCL.LocationXmlId = GOCRisk.LocationId\r\n\t\t\t\tAND DCL.SessionId = GOCRisk.SessionId\r\n\t\tORDER BY GOCRisk.WBGOCRiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_GOC_Risk AS (\n\tSELECT\n\tLKP_WB_GOC_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_WB_GOC_Risk.SessionId,\n\tLKP_WB_GOC_Risk.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_GOC_Risk.CoverageId,\n\tRTR_InsuranceLine_WB_GOC_Risk.CoverageType,\n\tLKP_WB_GOC_Risk.RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_GOC_Risk\n\tLEFT JOIN LKP_WB_GOC_Risk\n\tON LKP_WB_GOC_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId10\n),\nLKP_WB_GOC_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT\r\n\t\t\tB.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances).\r\n\t\t\tGOCState.LineId AS LineId,\r\n\t\t\tGOCState.WBGOCStateId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBGOCStateStage GOCState\r\n\t\tLEFT HASH JOIN\r\n\t\t(\r\n\t\tSELECT A.SessionId , A.StateProv , LocationAssociationId ,Record_Rank FROM (\r\n\t\t\t\tSELECT A.SessionId , A.StateProv , B.LocationAssociationId ,\r\n\t\t\t\tRank() over(partition by A.SessionId , A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging A\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging B\r\n\t\t\t\t\tON A.LocationId = B.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = B.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging C\r\n\t\t\t\t\tON A.LocationId = C.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = C.SessionId\r\n\t\t\t\tWHERE B.LocationAssociationType = 'Location'\r\n\t\t\t\tand ISNULL(A.Deleted,0)<>1\r\n\t\t\t\t--\tAND A.SessionId = GOCState.SessionId\r\n\t\t\t\t--\tAND A.StateProv = GOCState.StateAbbreviation\r\n\t\t\t\t)A WHERE A.Record_Rank = 1)B\r\n\t\tON \r\n\t\tB.SessionId = GOCState.SessionId\r\n\t\tAND B.StateProv = GOCState.StateAbbreviation\r\n\t\tORDER BY GOCState.WBGOCStateId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_GOC_State AS (\n\tSELECT\n\tLKP_WB_GOC_State.LocationAssociationId,\n\tRTR_InsuranceLine_WB_GOC_State.SessionId,\n\tLKP_WB_GOC_State.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_GOC_State.CoverageId,\n\tRTR_InsuranceLine_WB_GOC_State.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_GOC_State\n\tLEFT JOIN LKP_WB_GOC_State\n\tON LKP_WB_GOC_State.RiskId = RTR_InsuranceLine.ParentCoverageObjectId20\n),\nLKP_WB_HIO_Risk AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT DCL.LocationAssociationId AS LocationAssociationId,\r\n\t\t\tHIORisk.LineId AS LineId,\r\n\t\t\tHIORisk.WBHIORiskId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBHIORiskStage HIORisk\r\n\t\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging DCL\r\n\t\t\tON DCL.SessionId = hiorisk.SessionId\r\n\t\t\t\tAND dcl.LocationXmlId = HIORisk.LocationId\r\n\t\tORDER BY HIORisK.WBHIORiskId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_HIO_Risk AS (\n\tSELECT\n\tLKP_WB_HIO_Risk.LocationAssociationId,\n\tRTR_InsuranceLine_WB_HIO_Risk.SessionId,\n\tLKP_WB_HIO_Risk.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_HIO_Risk.CoverageId,\n\tRTR_InsuranceLine_WB_HIO_Risk.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_HIO_Risk\n\tLEFT JOIN LKP_WB_HIO_Risk\n\tON LKP_WB_HIO_Risk.RiskId = RTR_InsuranceLine.ParentCoverageObjectId8\n),\nLKP_WB_HIO_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tRiskId\n\tFROM (\n\t\tSELECT B.LocationAssociationId as LocationAssociationId,\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances).\r\n\t\t\tHIOState.LineId AS LineId,\r\n\t\t\tHIOState.WBHIOStateId AS RiskId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBHIOStateStage HIOState\r\n\t\tLEFT HASH JOIN\r\n\t\t\t(SELECT * FROM (\r\n\t\t\t\tSELECT A.SessionId , B.LocationAssociationId ,A.StateProv\r\n\t\t\t\t,Rank() over(partition by A.SessionId,A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 9999)) Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging A\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging B\r\n\t\t\t\t\tON A.LocationId = B.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = B.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging C\r\n\t\t\t\t\tON A.LocationId = C.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = C.SessionId\r\n\t\t\t\tWHERE B.LocationAssociationType = 'Location'\r\n\t\t\t\t\t--AND A.SessionId = HIOState.SessionId\r\n\t\t\t\t\t--AND A.StateProv = HIOState.StateAbbreviation\r\n\t\t\t\t\tAND ISNULL(A.Deleted,0)<>1\r\n\t\t\t)A\r\n\t\tWHERE A.Record_Rank = 1\r\n\t\t)B\r\n\t\tON \r\n\t\tB.SessionId = HIOState.SessionId\r\n\t\tAND B.StateProv = HIOState.StateAbbreviation\t\t\r\n\t\tORDER BY HIOState.WBHIOStateId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_HIO_State AS (\n\tSELECT\n\tLKP_WB_HIO_State.LocationAssociationId,\n\tRTR_InsuranceLine_WB_HIO_State.SessionId,\n\tLKP_WB_HIO_State.LineId,\n\t'N/A' AS IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_HIO_State.CoverageId,\n\tRTR_InsuranceLine_WB_HIO_State.CoverageType,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_HIO_State\n\tLEFT JOIN LKP_WB_HIO_State\n\tON LKP_WB_HIO_State.RiskId = RTR_InsuranceLine.ParentCoverageObjectId9\n),\nLKP_WB_IM_State AS (\n\tSELECT\n\tLocationAssociationId,\n\tLineId,\n\tIndividualRiskPremiumModification,\n\tWBIMStateId\n\tFROM (\n\t\tSELECT\r\n\t\t\t-- There can be multiple locations for a given risk and there is no direct linkage between the coverage and location, so the \r\n\t\t\t-- correlated sub-query below grabs the location with the lowest location number (usually location 1 in most instances).\r\n\t\t\t LocationAssociationId as LocationAssociationId,\r\n\t\t\tDCIML.LineId AS LineId,\r\n\t\t\tNull AS IndividualRiskPremiumModification,\r\n\t\t\tIMState.WBIMStateId AS WBIMStateId\r\n\t\tFROM WBIMStateStage IMState\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBIMLineStage WBIML\r\n\t\t\tON IMState.WBIMLineId = WBIML.WB_IM_LineId\r\n\t\t\t\tAND IMState.SessionId = WBIML.SessionId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMLineStage DCIML\r\n\t\t\tON WBIML.IM_LineId = DCIML.IM_LineId\r\n\t\t\t\tAND WBIML.SessionId = DCIML.SessionId\r\n\t\tleft HASH join \r\n\t\t(\r\n\t\tselect SessionId,StateProv,LocationAssociationId from (\r\n\t\t\t\tSELECT  a.SessionId,A.StateProv,B.LocationAssociationId,\r\n\t\t\t\tRank() over(partition by a.SessionId,A.StateProv ORDER BY isnull(cast(c.LocationNumber as int), 999),B.LocationAssociationId) AS Record_Rank\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationStaging A\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLocationAssociationStaging B\r\n\t\t\t\t\tON A.LocationId = B.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = B.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBLocationStaging C\r\n\t\t\t\t\tON A.LocationId = C.LocationId\r\n\t\t\t\t\t\tAND A.SessionId = C.SessionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCIMLocationStage D\r\n\t\t\t\t\tON B.ObjectId = D.IMLocationId\r\n\t\t\t\t\t\tAND B.SessionId = D.SessionId\r\n\t\t\t\tWHERE B.LocationAssociationType = 'IM_Location'\r\n\t\t\t\t--\tAND A.SessionId = IMState.SessionId\r\n\t\t\t\t--\tAND A.StateProv = IMState.StateAbbreviation\r\n\t\t\t\t\tand ISNULL(A.Deleted,0)<>1\r\n\t\t\t\t\t\t) a where a.Record_Rank=1)b\r\n\t\t\t\t\t\ton b.sessionid=IMState.SessionId\r\n\t\t\t\t\t\tand b.StateProv=IMState.StateAbbreviation\r\n\t\tORDER BY IMState.WBIMStateId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WBIMStateId ORDER BY LocationAssociationId) = 1\n),\nEXP_WB_IM_State AS (\n\tSELECT\n\tLKP_WB_IM_State.LocationAssociationId,\n\tRTR_InsuranceLine_WB_IM_State.SessionId,\n\tLKP_WB_IM_State.LineId,\n\tLKP_WB_IM_State.IndividualRiskPremiumModification,\n\tRTR_InsuranceLine_WB_IM_State.CoverageId,\n\tRTR_InsuranceLine_WB_IM_State.CoverageType,\n\tNULL AS CoverageForm,\n\t-1 AS RiskId,\n\t'N/A' AS RiskType,\n\t0 AS Exposure,\n\t-1 AS CommissionPercentage,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS SpecialClassLevel1,\n\t'000' AS BuildingNumber,\n\t'' AS ILFTableAssignmentCode,\n\t'N/A' AS OccupancyType\n\tFROM RTR_InsuranceLine_WB_IM_State\n\tLEFT JOIN LKP_WB_IM_State\n\tON LKP_WB_IM_State.WBIMStateId = RTR_InsuranceLine.ParentCoverageObjectId21\n),\nUnion_InsuranceLines AS (\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, out_CoverageType AS CoverageType, CoverageForm, RiskId, o_RiskType AS RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, RetroactiveDate, ExperienceModEffectiveDate, o_ConstructionCode AS ConstructionCode, RateEffectiveDate, RatingPlan, o_ProtectionClass AS ProtectionClass, o_ExposureBasis AS ExposureBasis, SubCoverageType, LineType, lkp_LineId_DCLine, lkp_SessionId_DCLine\n\tFROM EXP_DC_Line\n\t-- Manually join with RTR_InsuranceLine_DC_Line\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, RetroactiveDate, o_ExposureBasis AS ExposureBasis, SubCoverageType, LineType\n\tFROM EXP_DC_GL_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_GL_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, ExperienceModEffectiveDate, RateEffectiveDate, RatingPlan, o_ExposureBasis AS ExposureBasis, SubCoverageType\n\tFROM EXP_DC_WC_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_WC_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_CR_RiskCrime\n\t-- Manually join with RTR_InsuranceLine_DC_CR_RiskCrime\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_IM_CoverageForm\n\t-- Manually join with RTR_InsuranceLine_DC_IM_CoverageForm\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_IM_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_IM_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, ExperienceModEffectiveDate, RateEffectiveDate, RatingPlan, SubCoverageType\n\tFROM EXP_DC_WC_StateTerm\n\t-- Manually join with RTR_InsuranceLine_DC_WC_StateTerm\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_HIO_Risk\n\t-- Manually join with RTR_InsuranceLine_WB_HIO_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_HIO_State\n\t-- Manually join with RTR_InsuranceLine_WB_HIO_State\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_GOC_Risk\n\t-- Manually join with RTR_InsuranceLine_WB_GOC_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, o_CoverageType AS CoverageType, RiskId, RiskType, o_Exposure AS Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, YearBuilt, ConstructionCode, ProtectionClassOverride AS ProtectionClass, BOPNewLiabExpBase AS ExposureBasis, o_Sprinkler AS Sprinkler, PredominantPersonalPropertyRateNumber, PredominantLiabilityLiabClassGroup, o_ISOOccupancyType AS ISOOccupancyType, OccupancyClassDescription, ActiveBuildingFlag, SubCoverageType, PredominantBuildingBCCCode, PredominantBuildingClassCodeDescription\n\tFROM EXP_DC_BP_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_BP_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, ConstructionCode, ProtectionClassOverride AS ProtectionClass, PredominantLiabilityLiabExpBase AS ExposureBasis, OccupancyClassDescription, ActiveBuildingFlag, SubCoverageType\n\tFROM EXP_DC_BP_Location\n\t-- Manually join with RTR_InsuranceLine_DC_BP_Location\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_CR_Endorsement\n\t-- Manually join with RTR_InsuranceLine_DC_CR_Endorsement\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, o_SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, PolicyCoverage, CauseOfLoss, ILFTableAssignmentCode, OccupancyType, OrginalPackageModifier, YearBuilt, ConstructionCode, ProtectionClass, MultipleLocationCreditFactor, PreferredPropertyCreditFactor, PerilGroup, WindCoverageIndicator, OccupancyClassDescription, ActiveBuildingFlag, SubCoverageType, RateType, PropertyType, OccupancyCategory AS OccupanyCategory\n\tFROM EXP_DC_CF_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_CF_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, VehicleNumber, SubCoverageType\n\tFROM EXP_DC_CA_State\n\t-- Manually join with RTR_InsuranceLine_DC_CA_State\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, VehicleNumber, FullCoverageGlass, SubCoverageType\n\tFROM EXP_DC_CA_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_CA_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_CU_PremiumDetail\n\t-- Manually join with RTR_InsuranceLine_WB_CU_PremiumDetail\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_CU_UmbrellaEmployersLiability\n\t-- Manually join with RTR_InsuranceLine_DC_CU_UmbrellaEmployersLiability\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_GOC_State\n\t-- Manually join with RTR_InsuranceLine_WB_GOC_State\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_WB_IM_State\n\t-- Manually join with RTR_InsuranceLine_WB_IM_State\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModificationFactor AS IndividualRiskPremiumModification, CoverageId, CoverageRiskType AS CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType\n\tFROM EXP_DC_CR_Risk\n\t-- Manually join with RTR_InsuranceLine_DC_CR_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskID AS RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, SubCoverageType, LineType\n\tFROM EXP_DC_CA_BusinessInterruption\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType\n\tFROM EXP_WB_EC_State\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType\n\tFROM EXP_WB_EC_Risk\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, RiskId, RiskType, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, ConstructionCode, ProtectionClassOverride AS ProtectionClass, PredominantLiabilityLiabExpBase AS ExposureBasis, OccupancyType AS ISOOccupancyType, OccupancyClassDescription, ActiveBuildingFlag, SubCoverageType26 AS SubCoverageType\n\tFROM EXP_DC_Location\n\tUNION\n\tSELECT LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1 AS SpecialClassLevel, BuildingNumber, ILFTableAssignmentCode, OccupancyType, ExperienceModEffectiveDate, RateEffectiveDate, RatingPlan\n\tFROM EXP_DC_WC_State\n),\nEXP_SetWBLocationAccountInputs AS (\n\tSELECT\n\tLocationAssociationId,\n\tCoverageId,\n\tSessionId AS i_SessionId,\n\tLineId AS i_LineId,\n\tlkp_LineId_DCLine,\n\tlkp_SessionId_DCLine,\n\t-- *INF*: IIF(NOT ISNULL(lkp_SessionId_DCLine), lkp_SessionId_DCLine,i_SessionId)\r\n\t-- \r\n\t-- -- DC SessionId is the only one that writes to lkp_Sessionid_id\r\n\t-- \r\n\t-- \n\tIFF(lkp_SessionId_DCLine IS NOT NULL, lkp_SessionId_DCLine, i_SessionId) AS o_SessionId,\n\t-- *INF*: IIF(NOT ISNULL(lkp_LineId_DCLine), lkp_LineId_DCLine,i_LineId)\r\n\t-- \r\n\t-- -- DC LIne is the only one that writes to lkp_Line_id\n\tIFF(lkp_LineId_DCLine IS NOT NULL, lkp_LineId_DCLine, i_LineId) AS o_LineId\n\tFROM Union_InsuranceLines\n),\nLKP_WBLocationAccount_And_Territory AS (\n\tSELECT\n\tLatitude,\n\tLongitude,\n\tCBG,\n\tTerritoryCode,\n\tTerritoryCodeEarthQuake,\n\tCoverageType,\n\tCoverageId,\n\tLocationAssociationId,\n\tSessionId,\n\tLineId\n\tFROM (\n\t\tSELECT Latitude as Latitude, Longitude as Longitude, CBG as CBG, TerritoryCode as TerritoryCode, \r\n\t\tTerritoryCodeEarthQuake  as TerritoryCodeEarthQuake, CoverageType as CoverageType, \r\n\t\tLocationAssociationId  as LocationAssociationId, SessionId as SessionId, \r\n\t\tLineId as LineId, CoverageId as CoverageId\r\n\t\tFROM \r\n\t\t(\r\n\t\tSELECT  isnull(ltrim(rtrim(A.Latitude)),'0') AS Latitude,  isnull(ltrim(rtrim(A.Longitude)),'0') AS Longitude,  \r\n\t\tisnull(ltrim(rtrim(A.CBG)),'N/A') AS CBG,  Case \r\n\t\twhen C.LineType in ('Property') then isnull(ltrim(rtrim(A.TerritoryCodeProperty)),'N/A')\r\n\t\twhen C.LineType in ('SBOPProperty') then isnull(ltrim(rtrim(A.TerritoryCodeProperty)),'N/A')\r\n\t\telse 'N/A'\r\n\t\tend AS TerritoryCode,  isnull(ltrim(rtrim(A.TerritoryCodeEarthQuake)),'N/A') AS TerritoryCodeEarthQuake, \r\n\t\t D.CoverageType AS CoverageType,  B.LocationAssociationId AS LocationAssociationId,  A.SessionId AS SessionId,  \r\n\t\t C.LineId AS LineId,  D.CoverageId AS CoverageId \r\n\t\t FROM dbo.WBLocationAccountStage A with (nolock)\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B  with (nolock) on \r\n\t\tB.LocationId=A.LocationId and B.SessionId=A.SessionId and B.LocationAssociationType ='Location' \r\n\t\tINNER JOIN dbo.WorkDCTInsuranceLine C  with (nolock) on A.SessionId=C.SessionId  and linetype not in ('BusinessOwners','SBOPGeneralLiability',\r\n\t\t'GeneralLiability','CommercialAuto','Property','SBOPProperty')\r\n\t\tINNER JOIN dbo.WorkDCTCoverageTransaction D with (nolock) on \tD.SessionId=A.SessionId\r\n\t\tINNER JOIN dbo.WBEDWIncrementalDataQualitySessions EDQS with (nolock) on EDQS.sessionid = A.SessionId and  indicator = 1 \r\n\t\tand autoshred = 0\r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tSELECT  isnull(ltrim(rtrim(A.Latitude)),'0') AS Latitude,  isnull(ltrim(rtrim(A.Longitude)),'0') AS Longitude,  \r\n\t\tisnull(ltrim(rtrim(A.CBG)),'N/A') AS CBG,  Case \r\n\t\twhen C.LineType in ('Property') then isnull(ltrim(rtrim(A.TerritoryCodeProperty)),'N/A')\r\n\t\twhen C.LineType in ('SBOPProperty') then isnull(ltrim(rtrim(A.TerritoryCodeProperty)),'N/A')\r\n\t\telse 'N/A'\r\n\t\tend AS TerritoryCode,  isnull(ltrim(rtrim(A.TerritoryCodeEarthQuake)),'N/A') AS TerritoryCodeEarthQuake, \r\n\t\t D.CoverageType AS CoverageType,  B.LocationAssociationId AS LocationAssociationId,  A.SessionId AS SessionId,  \r\n\t\t C.LineId AS LineId,  D.CoverageId AS CoverageId \r\n\t\t FROM dbo.WBLocationAccountStage A with (nolock)\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B  with (nolock) on \r\n\t\tB.LocationId=A.LocationId and B.SessionId=A.SessionId and B.LocationAssociationType ='CF_Location'\r\n\t\tINNER JOIN dbo.WorkDCTInsuranceLine C  with (nolock) on A.SessionId=C.SessionId  and linetype  in ('Property','SBOPProperty')\r\n\t\tINNER JOIN dbo.WorkDCTCoverageTransaction D with (nolock) on \tD.SessionId=A.SessionId\r\n\t\tINNER JOIN dbo.WBEDWIncrementalDataQualitySessions EDQS with (nolock) on EDQS.sessionid = A.SessionId and  indicator = 1 and autoshred = 0\r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tSELECT  isnull(ltrim(rtrim(A.Latitude)),'0') AS Latitude,  isnull(ltrim(rtrim(A.Longitude)),'0') AS Longitude, \r\n\t\tisnull(ltrim(rtrim(A.CBG)),'N/A') AS CBG,  Case \r\n\t\twhen C.linetype in ('BusinessOwners') then isnull(ltrim(rtrim(BP.Territory)),'N/A')\r\n\t\telse 'N/A'\r\n\t\tend AS TerritoryCode,  isnull(ltrim(rtrim(A.TerritoryCodeEarthQuake)),'N/A') AS TerritoryCodeEarthQuake,  \r\n\t\tD.CoverageType AS CoverageType,  B.LocationAssociationId AS LocationAssociationId,  A.SessionId AS SessionId,  \r\n\t\tC.LineId AS LineId,  D.CoverageId AS CoverageId \r\n\t\tFROM dbo.WBLocationAccountStage A with (nolock)\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B  with (nolock) on \r\n\t\tB.LocationId=A.LocationId and B.SessionId=A.SessionId and B.LocationAssociationType = 'BP_Location' \r\n\t\tINNER JOIN dbo.WorkDCTInsuranceLine C  with (nolock) on A.SessionId=C.SessionId and linetype = 'BusinessOwners'\r\n\t\tINNER JOIN dbo.WorkDCTCoverageTransaction D with (nolock) on D.SessionId=A.SessionId\r\n\t\tINNER JOIN dbo.WBEDWIncrementalDataQualitySessions EDQS with (nolock) on EDQS.sessionid = A.SessionId and  indicator = 1 and autoshred = 0\r\n\t\tLEFT JOIN DCBPLocationStage BP  with (nolock) on A.SessionId=BP.SessionId and B.objectid=BPLocationId and B.ObjectName='DC_BP_Location'\r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\t SELECT  isnull(ltrim(rtrim(A.Latitude)),'0') AS Latitude,  isnull(ltrim(rtrim(A.Longitude)),'0') AS Longitude,  \r\n\t\t isnull(ltrim(rtrim(A.CBG)),'N/A') AS CBG,  Case \r\n\t\twhen C.LineType in ('CommercialAuto') then isnull(convert(varchar(3),CA.Territory),'N/A')\r\n\t\telse 'N/A'\r\n\t\tend AS TerritoryCode,  isnull(ltrim(rtrim(A.TerritoryCodeEarthQuake)),'N/A') AS TerritoryCodeEarthQuake,  \r\n\t\tD.CoverageType AS CoverageType,  B.LocationAssociationId AS LocationAssociationId,  A.SessionId AS SessionId,  C.LineId AS LineId,  \r\n\t\tD.CoverageId AS CoverageId \r\n\t\tFROM dbo.WBLocationAccountStage A with (nolock)\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B  with (nolock) on \r\n\t\tB.LocationId=A.LocationId and B.SessionId=A.SessionId and B.LocationAssociationType = 'CA_Location'\r\n\t\tINNER JOIN dbo.WorkDCTInsuranceLine C  with (nolock) on A.SessionId=C.SessionId and linetype = 'CommercialAuto'\r\n\t\tINNER JOIN dbo.WorkDCTCoverageTransaction D with (nolock) on \tD.SessionId=A.SessionId\r\n\t\tINNER JOIN dbo.WBEDWIncrementalDataQualitySessions EDQS with (nolock) on EDQS.sessionid = A.SessionId and  indicator = 1 and autoshred = 0\r\n\t\tLEFT JOIN DCCALocationStaging CA with (nolock) on A.sessionid=CA.sessionid and  B.objectid=CA_LocationId and B.ObjectName='DC_CA_Location' \r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tSELECT  isnull(ltrim(rtrim(A.Latitude)),'0') AS Latitude,  isnull(ltrim(rtrim(A.Longitude)),'0') AS Longitude,  \r\n\t\tisnull(ltrim(rtrim(A.CBG)),'N/A') AS CBG,  \r\n\t\tCase \r\n\t\twhen C.LineType in ('GeneralLiability') then isnull(ltrim(rtrim(GL.Territory)),'N/A')\r\n\t\twhen C.LineType in ('SBOPGeneralLiability') then isnull(ltrim(rtrim(GL.Territory)),'N/A')\r\n\t\telse 'N/A'\r\n\t\tend AS TerritoryCode,  isnull(ltrim(rtrim(A.TerritoryCodeEarthQuake)),'N/A') AS TerritoryCodeEarthQuake,  \r\n\t\tD.CoverageType AS CoverageType,  B.LocationAssociationId AS LocationAssociationId,  A.SessionId AS SessionId,  \r\n\t\tC.LineId AS LineId,  D.CoverageId AS CoverageId \r\n\t\tFROM dbo.WBLocationAccountStage A with (nolock)\r\n\t\tINNER JOIN dbo.DCLocationAssociationStaging B  with (nolock) on \r\n\t\tB.LocationId=A.LocationId and B.SessionId=A.SessionId and B.LocationAssociationType = 'GL_Location'\r\n\t\tINNER JOIN dbo.WorkDCTInsuranceLine C  with (nolock) on A.SessionId=C.SessionId and linetype in ('GeneralLiability','SBOPGeneralLiability')\r\n\t\tINNER JOIN dbo.WorkDCTCoverageTransaction D with (nolock) on D.SessionId=A.SessionId\r\n\t\tINNER JOIN dbo.WBEDWIncrementalDataQualitySessions EDQS with (nolock) on EDQS.sessionid = A.SessionId and  indicator = 1 and autoshred = 0\r\n\t\tLEFT JOIN DCGLLocationStaging GL with (nolock) on A.SessionId=GL.SessionId and B.objectid=GL_LocationId and B.ObjectName='DC_GL_Location'\r\n\t\t\r\n\t\t) A\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE_LKP}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LocationAssociationId,SessionId,LineId,CoverageId ORDER BY Latitude) = 1\n),\nEXP_Target AS (\n\tSELECT\n\tSYSDATE AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tUnion_InsuranceLines.LocationAssociationId,\n\tUnion_InsuranceLines.SessionId,\n\tUnion_InsuranceLines.LineId,\n\tUnion_InsuranceLines.IndividualRiskPremiumModification,\n\tUnion_InsuranceLines.CoverageId,\n\tUnion_InsuranceLines.CoverageType AS CoverageRiskType,\n\tUnion_InsuranceLines.CoverageForm AS i_CoverageForm,\n\t-- *INF*: IIF(NOT ISNULL(i_CoverageForm), i_CoverageForm, 'N/A')\n\tIFF(i_CoverageForm IS NOT NULL, i_CoverageForm, 'N/A') AS CoverageForm,\n\tUnion_InsuranceLines.RiskId,\n\tUnion_InsuranceLines.RiskType,\n\tUnion_InsuranceLines.Exposure,\n\tUnion_InsuranceLines.CommissionPercentage,\n\tUnion_InsuranceLines.CoverageVersion,\n\tUnion_InsuranceLines.SpecialClassLevel AS SpecialClassLevel1,\n\tUnion_InsuranceLines.BuildingNumber,\n\tUnion_InsuranceLines.PolicyCoverage,\n\tUnion_InsuranceLines.CauseOfLoss,\n\tUnion_InsuranceLines.ILFTableAssignmentCode,\n\tUnion_InsuranceLines.OccupancyType,\n\tUnion_InsuranceLines.LineType,\n\tUnion_InsuranceLines.RetroactiveDate AS i_RetroactiveDate,\n\t-- *INF*: :LKP.LKP_RETROACTIVEDATE(CoverageId)\n\tLKP_RETROACTIVEDATE_CoverageId.RetroactiveDate AS v_RetroactiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LineType='SBOPGeneralLiability',IIF( NOT ISNULL(i_RetroactiveDate), i_RetroactiveDate,v_RetroactiveDate),\r\n\t-- IIF( NOT ISNULL(v_RetroactiveDate), v_RetroactiveDate, i_RetroactiveDate)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LineType = 'SBOPGeneralLiability', IFF(\n\t        i_RetroactiveDate IS NOT NULL, i_RetroactiveDate, v_RetroactiveDate\n\t    ),\n\t    IFF(\n\t        v_RetroactiveDate IS NOT NULL, v_RetroactiveDate, i_RetroactiveDate\n\t    )\n\t) AS o_RetroactiveDate,\n\tUnion_InsuranceLines.OrginalPackageModifier,\n\tUnion_InsuranceLines.YearBuilt,\n\tUnion_InsuranceLines.ExperienceModEffectiveDate,\n\tUnion_InsuranceLines.ConstructionCode,\n\tUnion_InsuranceLines.RateEffectiveDate,\n\tUnion_InsuranceLines.RatingPlan,\n\tUnion_InsuranceLines.ProtectionClass AS i_ProtectionClass,\n\t-- *INF*: SUBSTR(i_ProtectionClass,1,5)\n\tSUBSTR(i_ProtectionClass, 1, 5) AS o_ProtectionClass,\n\tUnion_InsuranceLines.MultipleLocationCreditFactor,\n\tUnion_InsuranceLines.PreferredPropertyCreditFactor,\n\tUnion_InsuranceLines.PerilGroup,\n\tUnion_InsuranceLines.WindCoverageIndicator,\n\tUnion_InsuranceLines.VehicleNumber,\n\tUnion_InsuranceLines.ExposureBasis,\n\tUnion_InsuranceLines.Sprinkler,\n\tUnion_InsuranceLines.PredominantPersonalPropertyRateNumber,\n\tUnion_InsuranceLines.PredominantLiabilityLiabClassGroup,\n\tUnion_InsuranceLines.FullCoverageGlass,\n\tUnion_InsuranceLines.ISOOccupancyType,\n\tUnion_InsuranceLines.OccupancyClassDescription,\n\tUnion_InsuranceLines.ActiveBuildingFlag,\n\tUnion_InsuranceLines.SubCoverageType,\n\tUnion_InsuranceLines.RateType,\n\tUnion_InsuranceLines.PropertyType,\n\tUnion_InsuranceLines.OccupanyCategory,\n\tLKP_WBLocationAccount_And_Territory.Latitude AS i_Latitude,\n\tLKP_WBLocationAccount_And_Territory.Longitude AS i_Longitude,\n\tLKP_WBLocationAccount_And_Territory.CBG AS i_CBG,\n\tLKP_WBLocationAccount_And_Territory.TerritoryCode AS i_TerritoryCode,\n\tLKP_WBLocationAccount_And_Territory.TerritoryCodeEarthQuake AS i_TerritoryCodeEarthQuake,\n\tLKP_WBLocationAccount_And_Territory.CoverageType AS i_CoverageType,\n\t-- *INF*: REG_MATCH(UPPER(i_CoverageType),'.*EARTHQUAKE.*')\r\n\t-- --REG_MATCH(UPPER(CoverageRiskType),'.*EARTHQUAKE.*')\n\tREGEXP_LIKE(UPPER(i_CoverageType), '.*EARTHQUAKE.*') AS v_EarthquakeFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_EarthquakeFlag = 1 and NOT ISNULL( i_TerritoryCodeEarthQuake), i_TerritoryCodeEarthQuake,\r\n\t-- v_EarthquakeFlag = 0 and NOT ISNULL(i_TerritoryCode),i_TerritoryCode,\r\n\t-- 'N/A'\r\n\t-- )\r\n\t-- \r\n\t-- -- output rules regarding territory lookup can be combined here\n\tDECODE(\n\t    TRUE,\n\t    v_EarthquakeFlag = 1 and i_TerritoryCodeEarthQuake IS NOT NULL, i_TerritoryCodeEarthQuake,\n\t    v_EarthquakeFlag = 0 and i_TerritoryCode IS NOT NULL, i_TerritoryCode,\n\t    'N/A'\n\t) AS v_TerritoryCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CBG),'N/A',\r\n\t-- length(i_CBG) < 10, 'N/A',\r\n\t-- i_CBG)\r\n\t-- \r\n\t-- -- Only accept CBG values that contain all 10 of the characters\n\tDECODE(\n\t    TRUE,\n\t    i_CBG IS NULL, 'N/A',\n\t    length(i_CBG) < 10, 'N/A',\n\t    i_CBG\n\t) AS o_CBG,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(i_Latitude) and IS_NUMBER(i_Latitude), TO_DECIMAL(i_Latitude,6),\r\n\t-- 0\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_Latitude IS NULL and REGEXP_LIKE(i_Latitude, '^[0-9]NOT +$'), CAST(i_Latitude AS FLOAT),\n\t    0\n\t) AS o_Latitude,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(i_Longitude) and IS_NUMBER(i_Longitude), TO_DECIMAL(i_Longitude,6),\r\n\t-- 0\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_Longitude IS NULL and REGEXP_LIKE(i_Longitude, '^[0-9]NOT +$'), CAST(i_Longitude AS FLOAT),\n\t    0\n\t) AS o_Longitude,\n\tv_TerritoryCode AS o_TerritoryCode,\n\tUnion_InsuranceLines.PredominantBuildingBCCCode,\n\tUnion_InsuranceLines.PredominantBuildingClassCodeDescription\n\tFROM Union_InsuranceLines\n\tLEFT JOIN LKP_WBLocationAccount_And_Territory\n\tON LKP_WBLocationAccount_And_Territory.LocationAssociationId = EXP_SetWBLocationAccountInputs.LocationAssociationId AND LKP_WBLocationAccount_And_Territory.SessionId = EXP_SetWBLocationAccountInputs.o_SessionId AND LKP_WBLocationAccount_And_Territory.LineId = EXP_SetWBLocationAccountInputs.o_LineId AND LKP_WBLocationAccount_And_Territory.CoverageId = EXP_SetWBLocationAccountInputs.CoverageId\n\tLEFT JOIN LKP_RETROACTIVEDATE LKP_RETROACTIVEDATE_CoverageId\n\tON LKP_RETROACTIVEDATE_CoverageId.CoverageId = CoverageId\n\n),\nLKP_WorkDCTInsuranceLine AS (\n\tSELECT\n\tLineType,\n\tLineId,\n\ti_LineId\n\tFROM (\n\t\tSELECT \n\t\t\tLineType,\n\t\t\tLineId,\n\t\t\ti_LineId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTInsuranceLine\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineId ORDER BY LineType) = 1\n),\nEXP_ComissionPercentage AS (\n\tSELECT\n\tLKP_WorkDCTInsuranceLine.LineType,\n\tEXP_Target.CoverageId,\n\tEXP_Target.CoverageRiskType,\n\tEXP_Target.CommissionPercentage,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Substr(CoverageRiskType,1,5)= 'WB516'  \r\n\t-- OR \r\n\t-- (LineType = 'BusinessOwners'\r\n\t-- AND CoverageRiskType = 'EmploymentPracticesLiability' ),\r\n\t-- IIF(ISNULL(:LKP.LKP_WBGLCOVERAGEWB516GL(CoverageId)),:LKP.LKP_WBBPCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE(CoverageId), :LKP.LKP_WBGLCOVERAGEWB516GL(CoverageId)),\r\n\t-- CoverageRiskType = 'DataCompromise',\r\n\t-- IIF(ISNULL(:LKP.LKP_WBCFCOVERAGEDATACOMPROMISE(CoverageId)), :LKP.LKP_WBBPCOVERAGEDATACOMPROMISESTAGE(CoverageId), :LKP.LKP_WBCFCOVERAGEDATACOMPROMISE(CoverageId)),\r\n\t-- CoverageRiskType = 'EquipBreakdown' or CoverageRiskType = 'EquipmentBreakdown',\r\n\t-- IIF(ISNULL(:LKP.LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN(CoverageId)), :LKP.LKP_WBBPCOVERAGEEQUIPBREAKDOWNSTAGE(CoverageId), :LKP.LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN(CoverageId)),\r\n\t-- CoverageRiskType = 'WB2525',:LKP.LKP_WBGLCOVERAGEWB2525(CoverageId),\r\n\t-- CommissionPercentage)\n\tDECODE(\n\t    TRUE,\n\t    Substr(CoverageRiskType, 1, 5) = 'WB516' OR (LineType = 'BusinessOwners' AND CoverageRiskType = 'EmploymentPracticesLiability'), IFF(\n\t        LKP_WBGLCOVERAGEWB516GL_CoverageId.TransactionFinalCommissionValue IS NULL,\n\t        LKP_WBBPCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId.TransactionFinalCommissionValue,\n\t        LKP_WBGLCOVERAGEWB516GL_CoverageId.TransactionFinalCommissionValue\n\t    ),\n\t    CoverageRiskType = 'DataCompromise', IFF(\n\t        LKP_WBCFCOVERAGEDATACOMPROMISE_CoverageId.TransactionFinalCommissionValue IS NULL,\n\t        LKP_WBBPCOVERAGEDATACOMPROMISESTAGE_CoverageId.TransactionFinalCommissionValue,\n\t        LKP_WBCFCOVERAGEDATACOMPROMISE_CoverageId.TransactionFinalCommissionValue\n\t    ),\n\t    CoverageRiskType = 'EquipBreakdown' or CoverageRiskType = 'EquipmentBreakdown', IFF(\n\t        LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN_CoverageId.TransactionFinalCommissionValue IS NULL,\n\t        LKP_WBBPCOVERAGEEQUIPBREAKDOWNSTAGE_CoverageId.TransactionFinalCommissionValue,\n\t        LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN_CoverageId.TransactionFinalCommissionValue\n\t    ),\n\t    CoverageRiskType = 'WB2525', LKP_WBGLCOVERAGEWB2525_CoverageId.TransactionFinalCommissionValue,\n\t    CommissionPercentage\n\t) AS v_CommissionPercentage,\n\tv_CommissionPercentage AS o_CommissionPercentage\n\tFROM EXP_Target\n\tLEFT JOIN LKP_WorkDCTInsuranceLine\n\tON LKP_WorkDCTInsuranceLine.LineId = EXP_Target.LineId\n\tLEFT JOIN LKP_WBGLCOVERAGEWB516GL LKP_WBGLCOVERAGEWB516GL_CoverageId\n\tON LKP_WBGLCOVERAGEWB516GL_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBBPCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE LKP_WBBPCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId\n\tON LKP_WBBPCOVERAGEEMPLOYMENTPRACTICESLIABILITYSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBCFCOVERAGEDATACOMPROMISE LKP_WBCFCOVERAGEDATACOMPROMISE_CoverageId\n\tON LKP_WBCFCOVERAGEDATACOMPROMISE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBBPCOVERAGEDATACOMPROMISESTAGE LKP_WBBPCOVERAGEDATACOMPROMISESTAGE_CoverageId\n\tON LKP_WBBPCOVERAGEDATACOMPROMISESTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN_CoverageId\n\tON LKP_WBCFCOVERAGEEQUIPMENTBREAKDOWN_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBBPCOVERAGEEQUIPBREAKDOWNSTAGE LKP_WBBPCOVERAGEEQUIPBREAKDOWNSTAGE_CoverageId\n\tON LKP_WBBPCOVERAGEEQUIPBREAKDOWNSTAGE_CoverageId.CoverageId = CoverageId\n\n\tLEFT JOIN LKP_WBGLCOVERAGEWB2525 LKP_WBGLCOVERAGEWB2525_CoverageId\n\tON LKP_WBGLCOVERAGEWB2525_CoverageId.CoverageId = CoverageId\n\n),\nLKP_DCLocationAssocation_GetAccountLocation AS (\n\tSELECT\n\tLocationAssociationId,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tLocationAssociationId,\n\t\t\tSessionId\n\t\tFROM DCLocationAssociationStaging\n\t\tWHERE LocationAssociationType='Account'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId ORDER BY LocationAssociationId) = 1\n),\nEXP_PreInsert AS (\n\tSELECT\n\tEXP_Target.o_ExtractDate AS ExtractDate,\n\tEXP_Target.o_SourceSystemId AS SourceSystemId,\n\tEXP_Target.LocationAssociationId,\n\tLKP_DCLocationAssocation_GetAccountLocation.LocationAssociationId AS LKP_Account_LocationAssociationId,\n\t-- *INF*: IIF(ISNULL(LocationAssociationId),LKP_Account_LocationAssociationId,LocationAssociationId)\n\tIFF(LocationAssociationId IS NULL, LKP_Account_LocationAssociationId, LocationAssociationId) AS O_LocationAssociationid,\n\tEXP_Target.SessionId,\n\tEXP_Target.LineId,\n\tEXP_Target.IndividualRiskPremiumModification,\n\tEXP_Target.CoverageId,\n\tEXP_Target.CoverageRiskType,\n\tEXP_Target.CoverageForm,\n\tEXP_Target.RiskId,\n\tEXP_Target.RiskType,\n\tEXP_Target.Exposure,\n\tEXP_ComissionPercentage.o_CommissionPercentage AS CommissionPercentage,\n\tEXP_Target.CoverageVersion,\n\tEXP_Target.SpecialClassLevel1,\n\tEXP_Target.BuildingNumber,\n\tEXP_Target.PolicyCoverage,\n\tEXP_Target.CauseOfLoss,\n\tEXP_Target.ILFTableAssignmentCode,\n\tEXP_Target.OccupancyType,\n\t-- *INF*: IIF(Substr(CoverageRiskType,1,6) = 'NS0453',(:LKP.LKP_WBGLCOVNS0453STG (CoverageId)),RetroactiveDate)\n\tIFF(\n\t    Substr(CoverageRiskType, 1, 6) = 'NS0453',\n\t    (LKP_WBGLCOVNS0453STG_CoverageId.RadonRetroactiveDate),\n\t    RetroactiveDate\n\t) AS v_RetroactiveDate,\n\t-- *INF*: IIF (isNull(v_RetroactiveDate),TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),v_RetroactiveDate)\n\tIFF(\n\t    v_RetroactiveDate IS NULL, TO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),\n\t    v_RetroactiveDate\n\t) AS o_RetroactiveDate,\n\tEXP_Target.o_RetroactiveDate AS RetroactiveDate,\n\tEXP_Target.OrginalPackageModifier,\n\tEXP_Target.YearBuilt,\n\tEXP_Target.ExperienceModEffectiveDate,\n\tEXP_Target.ConstructionCode,\n\tEXP_Target.RateEffectiveDate,\n\tEXP_Target.RatingPlan,\n\tEXP_Target.o_ProtectionClass AS ProtectionClass,\n\tEXP_Target.MultipleLocationCreditFactor,\n\tEXP_Target.PreferredPropertyCreditFactor,\n\tEXP_Target.PerilGroup,\n\tEXP_Target.WindCoverageIndicator,\n\tEXP_Target.VehicleNumber,\n\tEXP_Target.PredominantPersonalPropertyRateNumber,\n\tEXP_Target.PredominantLiabilityLiabClassGroup,\n\tEXP_Target.ExposureBasis,\n\tEXP_Target.Sprinkler AS SprinkerFlag,\n\tEXP_Target.FullCoverageGlass,\n\t-- *INF*: Decode(True, isnull(FullCoverageGlass)=1,0,FullCoverageGlass='F',0,1)\n\tDecode(\n\t    True,\n\t    FullCoverageGlass IS NULL = 1, 0,\n\t    FullCoverageGlass = 'F', 0,\n\t    1\n\t) AS O_FullCoverageGlass,\n\tEXP_Target.ISOOccupancyType,\n\tEXP_Target.OccupancyClassDescription,\n\tEXP_Target.ActiveBuildingFlag,\n\tEXP_Target.RateType,\n\tEXP_Target.PropertyType,\n\tEXP_Target.OccupanyCategory,\n\tEXP_Target.o_CBG AS CBG,\n\tEXP_Target.o_Latitude AS Latitude,\n\tEXP_Target.o_Longitude AS Longitude,\n\tEXP_Target.o_TerritoryCode AS TerritoryCode,\n\tEXP_Target.PredominantBuildingBCCCode,\n\tEXP_Target.PredominantBuildingClassCodeDescription\n\tFROM EXP_ComissionPercentage\n\t -- Manually join with EXP_Target\n\tLEFT JOIN LKP_DCLocationAssocation_GetAccountLocation\n\tON LKP_DCLocationAssocation_GetAccountLocation.SessionId = EXP_Target.SessionId\n\tLEFT JOIN LKP_WBGLCOVNS0453STG LKP_WBGLCOVNS0453STG_CoverageId\n\tON LKP_WBGLCOVNS0453STG_CoverageId.CoverageId = CoverageId\n\n),\nWorkDCTTransactionInsuranceLineLocationBridge AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTTransactionInsuranceLineLocationBridge;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTTransactionInsuranceLineLocationBridge\n\t(ExtractDate, SourceSystemId, LocationAssociationId, SessionId, LineId, IndividualRiskPremiumModification, CoverageId, CoverageRiskType, CoverageForm, RiskId, RiskType, Exposure, CommissionPercentage, CoverageVersion, SpecialClassLevel1, BuildingNumber, PolicyCoverage, CauseOfLoss, ILFTableAssignmentCode, OccupancyType, RetroactiveDate, OrginalPackageModifier, YearBuilt, ExperienceModEffectiveDate, ConstructionCode, RateEffectiveDate, RatingPlan, ProtectionClass, MultipleLocationCreditFactor, PreferredPropertyCreditFactor, PerilGroup, WindCoverageIndicator, VehicleNumber, ExposureBasis, SprinkerFlag, PredominantPersonalPropertyRateNumber, PredominantLiabilityLiabClassGroup, FullCoverageGlass, ISOOccupancyType, OccupancyClassDescription, ActiveBuildingFlag, RateType, PropertyType, OccupancyCategory, CensusBlockGroup, Latitude, Longitude, RatingTerritoryCode, PredominantBuildingBCCCode, PredominantBuildingClassCodeDescription)\n\tSELECT \n\tEXTRACTDATE, \n\tSOURCESYSTEMID, \n\tO_LocationAssociationid AS LOCATIONASSOCIATIONID, \n\tSESSIONID, \n\tLINEID, \n\tINDIVIDUALRISKPREMIUMMODIFICATION, \n\tCOVERAGEID, \n\tCOVERAGERISKTYPE, \n\tCOVERAGEFORM, \n\tRISKID, \n\tRISKTYPE, \n\tEXPOSURE, \n\tCOMMISSIONPERCENTAGE, \n\tCOVERAGEVERSION, \n\tSPECIALCLASSLEVEL1, \n\tBUILDINGNUMBER, \n\tPOLICYCOVERAGE, \n\tCAUSEOFLOSS, \n\tILFTABLEASSIGNMENTCODE, \n\tOCCUPANCYTYPE, \n\to_RetroactiveDate AS RETROACTIVEDATE, \n\tORGINALPACKAGEMODIFIER, \n\tYEARBUILT, \n\tEXPERIENCEMODEFFECTIVEDATE, \n\tCONSTRUCTIONCODE, \n\tRATEEFFECTIVEDATE, \n\tRATINGPLAN, \n\tPROTECTIONCLASS, \n\tMULTIPLELOCATIONCREDITFACTOR, \n\tPREFERREDPROPERTYCREDITFACTOR, \n\tPERILGROUP, \n\tWINDCOVERAGEINDICATOR, \n\tVEHICLENUMBER, \n\tEXPOSUREBASIS, \n\tSPRINKERFLAG, \n\tPREDOMINANTPERSONALPROPERTYRATENUMBER, \n\tPREDOMINANTLIABILITYLIABCLASSGROUP, \n\tO_FullCoverageGlass AS FULLCOVERAGEGLASS, \n\tISOOCCUPANCYTYPE, \n\tOCCUPANCYCLASSDESCRIPTION, \n\tACTIVEBUILDINGFLAG, \n\tRATETYPE, \n\tPROPERTYTYPE, \n\tOccupanyCategory AS OCCUPANCYCATEGORY, \n\tCBG AS CENSUSBLOCKGROUP, \n\tLATITUDE, \n\tLONGITUDE, \n\tTerritoryCode AS RATINGTERRITORYCODE, \n\tPREDOMINANTBUILDINGBCCCODE, \n\tPREDOMINANTBUILDINGCLASSCODEDESCRIPTION\n\tFROM EXP_PreInsert\n),\nSQ_WorkDCTTransactionInsuranceLineLocationBridge_AllElse AS (\n\twith WorkCTE as (\r\n\tselect   A.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\tA.LineId, \r\n\tA.LocationAssociationId, \r\n\tA.SessionId, \r\n\tA.CoverageRiskType,\r\n\tDCLAS.LocationId,\r\n\tA.RatingTerritoryCode,\r\n\tA.Latitude, \r\n\tA.Longitude, \r\n\tA.CensusBlockGroup\r\n\tfrom \r\n\tDBO.WorkDCTTransactionInsuranceLineLocationBridge A\r\n\tINNER JOIN \r\n\tdbo.WorkDCTInsuranceLine C  with (nolock) on \r\n\t\tA.SessionId=C.SessionId and\r\n\t\tA.LineId=C.LineId and\t\r\n\t\tC.LineType NOT IN ('BusinessOwners','SBOPGeneralLiability','GeneralLiability','CommercialAuto','Property','SBOPProperty')\r\n\tINNER JOIN dbo.DCLocationAssociationStaging DCLAS  with (nolock) on   \r\n\t\tDCLAS.LocationAssociationId=A.LocationAssociationId and\r\n\t\tDCLAS.SessionId=A.SessionId and\r\n\t\tDCLAS.LocationAssociationType ='Location'\r\n\twhere \r\n\tA.CensusBlockGroup='N/A'  and NOT A.LineId is null and NOT A.LocationAssociationId is null\r\n\t)\r\n\t\r\n\tselect \r\n\tA.WorkDCTTransactionInsuranceLineLocationBridgeId as WorkDCTTransactionInsuranceLineLocationBridgeId, \r\n\tA.TerritoryCode as RatingTerritoryCode, \r\n\tA.Latitude as Latitude, \r\n\tA.Longitude as Longitude, \r\n\tA.CBG  as CensusBlockGroup\r\n\tFROM \r\n\t(\r\n\t\tSelect \r\n\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\t\tB.LocationAssociationId as LocationAssociationId, \r\n\t\tA.SessionId as SessionId,\r\n\t\tB.LineId as LineId,\r\n\t\tISNULL(WBLAS.Latitude,'0') as Latitude, \r\n\t\tISNULL(WBLAS.Longitude,'0') as Longitude, \r\n\t\tISNULL(WBLAS.CBG,'N/A') as CBG, \r\n\t\t'N/A' as TerritoryCode,\r\n\t\tB.RatingTerritoryCode as cte_TerritoryCode,\r\n\t\tB.Latitude as cte_latitude,\r\n\t\tB.Longitude as cte_longitude,\r\n\t\tB.CensusBlockGroup as cte_CensusBlockGroup\r\n\t\tFROM\r\n\t\tWorkDCTTransactionInsuranceLineLocationBridge A  \r\n\t\tinner join WorkCTE B on \r\n\t\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId=B.WorkDCTTransactionInsuranceLineLocationBridgeId\t\r\n\t\t\tand A.LineId=B.LineId\r\n\t\t\tand A.LocationAssociationId=B.LocationAssociationId\r\n\t\t\tand A.SessionId=B.SessionId\r\n\t\tinner join WBLocationAccountStage WBLAS with (nolock) on \r\n\t\t\tWBLAS.SessionId=B.SessionId and \t\r\n\t\t\tWBLAS.LocationId=B.LocationId\r\n\t\tinner join WorkDCTCoverageTransaction C with (nolock) on \r\n\t\t\tC.SessionId=A.SessionId and \r\n\t\t\tC.CoverageId=A.CoverageId\r\n\t) A\r\n\tWHERE\r\n\t(\r\n\t\tA.TerritoryCode != A.cte_TerritoryCode OR\r\n\t\tA.Latitude != A.cte_latitude OR\r\n\t\tA.Longitude != A.cte_longitude OR\r\n\t\tA.cte_CensusBlockGroup != A.CBG\r\n\t)\n),\nSQ_WorkDCTTransactionInsuranceLineLocationBridge_BP AS (\n\twith WorkCTE as (\r\n\tselect   A.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\tA.LineId, \r\n\tA.LocationAssociationId, \r\n\tA.SessionId, \r\n\tA.CoverageRiskType,\r\n\tDCLAS.LocationId,\r\n\tA.RatingTerritoryCode,\r\n\tA.Latitude, \r\n\tA.Longitude, \r\n\tA.CensusBlockGroup,\r\n\tDCLAS.ObjectId\r\n\tfrom \r\n\tDBO.WorkDCTTransactionInsuranceLineLocationBridge A\r\n\tINNER JOIN \r\n\tdbo.WorkDCTInsuranceLine C  with (nolock) on \r\n\t\tA.SessionId=C.SessionId and\r\n\t\tA.LineId=C.LineId and\t\r\n\t\tC.LineType in('BusinessOwners')\r\n\tINNER JOIN dbo.DCLocationAssociationStaging DCLAS  with (nolock) on   \r\n\t\tDCLAS.LocationAssociationId=A.LocationAssociationId and\r\n\t\tDCLAS.SessionId=A.SessionId and\r\n\t\tDCLAS.ObjectName='DC_BP_Location'\r\n\twhere \r\n\tA.RatingTerritoryCode='N/A'  and NOT A.LineId is null and NOT A.LocationAssociationId is null\r\n\t)\r\n\t\r\n\tselect \r\n\tA.WorkDCTTransactionInsuranceLineLocationBridgeId as WorkDCTTransactionInsuranceLineLocationBridgeId, \r\n\tA.TerritoryCode as RatingTerritoryCode, \r\n\tA.Latitude as Latitude, \r\n\tA.Longitude as Longitude, \r\n\tA.CBG  as CensusBlockGroup\r\n\tFROM \r\n\t(\r\n\t\tSelect \r\n\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\t\tB.LocationAssociationId as LocationAssociationId, \r\n\t\tA.SessionId as SessionId,\r\n\t\tB.LineId as LineId,\r\n\t\tISNULL(WBLAS.Latitude,'0') as Latitude, \r\n\t\tISNULL(WBLAS.Longitude,'0') as Longitude, \r\n\t\tISNULL(WBLAS.CBG,'N/A') as CBG, \r\n\t\tCASE \r\n\t\tWHEN UPPER(C.CoverageType) like '%EARTHQUAKE%' then isnull(WBLAS.TerritoryCodeEarthQuake,'N/A')\r\n\t\tELSE ISNULL(BP.Territory,'N/A')\r\n\t\tEND as TerritoryCode,\r\n\t\tB.RatingTerritoryCode as cte_TerritoryCode,\r\n\t\tB.Latitude as cte_latitude,\r\n\t\tB.Longitude as cte_longitude,\r\n\t\tB.CensusBlockGroup as cte_CensusBlockGroup\r\n\t\tFROM\r\n\t\tWorkDCTTransactionInsuranceLineLocationBridge A  \r\n\t\tinner join WorkCTE B on \r\n\t\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId=B.WorkDCTTransactionInsuranceLineLocationBridgeId\r\n\t\t\tand A.LineId=B.LineId\r\n\t\t\tand A.LocationAssociationId=B.LocationAssociationId\r\n\t\t\tand A.SessionId=B.SessionId\r\n\t\tinner join WBLocationAccountStage WBLAS with (nolock) on \r\n\t\t\tWBLAS.SessionId=B.SessionId and \t\r\n\t\t\tWBLAS.LocationId=B.LocationId\r\n\t\tinner join WorkDCTCoverageTransaction C with (nolock) on \r\n\t\t\tC.SessionId=A.SessionId and \r\n\t\t\tC.CoverageId=A.CoverageId\r\n\t\tINNER JOIN DCBPLocationStage BP  with (nolock) on \r\n\t\t\tB.SessionId=BP.SessionId and \r\n\t\t\tB.objectid=BP.BPLocationId \t\t\r\n\t) A\r\n\tWHERE\r\n\t(\r\n\t\tA.TerritoryCode != A.cte_TerritoryCode OR\r\n\t\tA.Latitude != A.cte_latitude OR\r\n\t\tA.Longitude != A.cte_longitude OR\r\n\t\tA.cte_CensusBlockGroup != A.CBG\r\n\t)\n),\nSQ_WorkDCTTransactionInsuranceLineLocationBridge_CA AS (\n\twith WorkCTE as (\r\n\tselect   A.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\tA.LineId, \r\n\tA.LocationAssociationId, \r\n\tA.SessionId, \r\n\tA.CoverageRiskType,\r\n\tDCLAS.LocationId,\r\n\tA.RatingTerritoryCode,\r\n\tA.Latitude, \r\n\tA.Longitude, \r\n\tA.CensusBlockGroup,\r\n\tDCLAS.ObjectId\r\n\tfrom \r\n\tDBO.WorkDCTTransactionInsuranceLineLocationBridge A\r\n\tINNER JOIN \r\n\tdbo.WorkDCTInsuranceLine C  with (nolock) on \r\n\t\tA.SessionId=C.SessionId and\r\n\t\tA.LineId=C.LineId and\t\r\n\t\tC.LineType in('CommercialAuto')\r\n\tINNER JOIN dbo.DCLocationAssociationStaging DCLAS  with (nolock) on   \r\n\t\tDCLAS.LocationAssociationId=A.LocationAssociationId and\r\n\t\tDCLAS.SessionId=A.SessionId and\r\n\t\tDCLAS.ObjectName='DC_CA_Location'\r\n\twhere \r\n\tA.RatingTerritoryCode='N/A'  and NOT A.LineId is null and NOT A.LocationAssociationId is null\r\n\t)\r\n\t\r\n\tselect \r\n\tA.WorkDCTTransactionInsuranceLineLocationBridgeId as WorkDCTTransactionInsuranceLineLocationBridgeId, \r\n\tA.TerritoryCode as RatingTerritoryCode, \r\n\tA.Latitude as Latitude, \r\n\tA.Longitude as Longitude, \r\n\tA.CBG  as CensusBlockGroup\r\n\tFROM \r\n\t(\r\n\t\tSelect \r\n\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\t\tB.LocationAssociationId as LocationAssociationId, \r\n\t\tA.SessionId as SessionId,\r\n\t\tB.LineId as LineId,\r\n\t\tISNULL(WBLAS.Latitude,'0') as Latitude, \r\n\t\tISNULL(WBLAS.Longitude,'0') as Longitude, \r\n\t\tISNULL(WBLAS.CBG,'N/A') as CBG, \r\n\t\tCASE \r\n\t\tWHEN UPPER(C.CoverageType) like '%EARTHQUAKE%' THEN ISNULL(WBLAS.TerritoryCodeEarthQuake,'N/A')\r\n\t\tELSE\tISNULL(convert(varchar(3),CA.Territory),'N/A')\r\n\t\tEND as TerritoryCode,\r\n\t\tB.RatingTerritoryCode as cte_TerritoryCode,\r\n\t\tB.Latitude as cte_latitude,\r\n\t\tB.Longitude as cte_longitude,\r\n\t\tB.CensusBlockGroup as cte_CensusBlockGroup\r\n\t\tFROM\r\n\t\tWorkDCTTransactionInsuranceLineLocationBridge A  \r\n\t\tinner join WorkCTE B on \r\n\t\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId=B.WorkDCTTransactionInsuranceLineLocationBridgeId\r\n\t\t\tand A.LineId=B.LineId\r\n\t\t\tand A.LocationAssociationId=B.LocationAssociationId\r\n\t\t\tand A.SessionId=B.SessionId\r\n\t\tinner join WBLocationAccountStage WBLAS with (nolock) on \r\n\t\t\tWBLAS.SessionId=B.SessionId and \t\r\n\t\t\tWBLAS.LocationId=B.LocationId\r\n\t\tinner join WorkDCTCoverageTransaction C with (nolock) on \r\n\t\t\tC.SessionId=A.SessionId and \r\n\t\t\tC.CoverageId=A.CoverageId\r\n\t\tINNER JOIN DCCALocationStaging CA  with (nolock) on \r\n\t\t\tB.SessionId=CA.SessionId and \r\n\t\t\tB.objectid=CA.CA_LocationId \t\t\r\n\t) A\r\n\tWHERE\r\n\t(\r\n\t\tA.TerritoryCode != A.cte_TerritoryCode OR\r\n\t\tA.Latitude != A.cte_latitude OR\r\n\t\tA.Longitude != A.cte_longitude OR\r\n\t\tA.cte_CensusBlockGroup != A.CBG\r\n\t)\n),\nSQ_WorkDCTTransactionInsuranceLineLocationBridge_GL AS (\n\twith WorkCTE as (\r\n\tselect   A.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\tA.LineId, \r\n\tA.LocationAssociationId, \r\n\tA.SessionId, \r\n\tA.CoverageRiskType,\r\n\tDCLAS.LocationId,\r\n\tA.RatingTerritoryCode,\r\n\tA.Latitude, \r\n\tA.Longitude, \r\n\tA.CensusBlockGroup,\r\n\tDCLAS.ObjectId\r\n\tfrom \r\n\tDBO.WorkDCTTransactionInsuranceLineLocationBridge A\r\n\tINNER JOIN \r\n\tdbo.WorkDCTInsuranceLine C  with (nolock) on \r\n\t\tA.SessionId=C.SessionId and\r\n\t\tA.LineId=C.LineId and\t\r\n\t\tC.LineType in('GeneralLiability','SBOPGeneralLiability')\r\n\tINNER JOIN dbo.DCLocationAssociationStaging DCLAS  with (nolock) on   \r\n\t\tDCLAS.LocationAssociationId=A.LocationAssociationId and\r\n\t\tDCLAS.SessionId=A.SessionId and\r\n\t\tDCLAS.ObjectName='DC_GL_Location'\r\n\twhere \r\n\tA.RatingTerritoryCode='N/A'  and NOT A.LineId is null and NOT A.LocationAssociationId is null\r\n\t)\r\n\t\r\n\tselect \r\n\tA.WorkDCTTransactionInsuranceLineLocationBridgeId as WorkDCTTransactionInsuranceLineLocationBridgeId, \r\n\tA.TerritoryCode as RatingTerritoryCode, \r\n\tA.Latitude as Latitude, \r\n\tA.Longitude as Longitude, \r\n\tA.CBG  as CensusBlockGroup\r\n\tFROM \r\n\t(\r\n\t\tSelect \r\n\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\t\tB.LocationAssociationId as LocationAssociationId, \r\n\t\tA.SessionId as SessionId,\r\n\t\tB.LineId as LineId,\r\n\t\tISNULL(WBLAS.Latitude,'0') as Latitude, \r\n\t\tISNULL(WBLAS.Longitude,'0') as Longitude, \r\n\t\tISNULL(WBLAS.CBG,'N/A') as CBG, \r\n\t\tCASE \r\n\t\tWHEN UPPER(C.CoverageType) like '%EARTHQUAKE%' THEN ISNULL(WBLAS.TerritoryCodeEarthQuake,'N/A')\r\n\t\tELSE\tISNULL(GL.Territory,'N/A') \r\n\t\tEND as TerritoryCode,\r\n\t\tB.RatingTerritoryCode as cte_TerritoryCode,\r\n\t\tB.Latitude as cte_latitude,\r\n\t\tB.Longitude as cte_longitude,\r\n\t\tB.CensusBlockGroup as cte_CensusBlockGroup\r\n\t\tFROM\r\n\t\tWorkDCTTransactionInsuranceLineLocationBridge A  \r\n\t\tinner join WorkCTE B on \r\n\t\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId=B.WorkDCTTransactionInsuranceLineLocationBridgeId\r\n\t\t\tand A.LineId=B.LineId\r\n\t\t\tand A.LocationAssociationId=B.LocationAssociationId\r\n\t\t\tand A.SessionId=B.SessionId\r\n\t\tinner join WBLocationAccountStage WBLAS with (nolock) on \r\n\t\t\tWBLAS.SessionId=B.SessionId and \t\r\n\t\t\tWBLAS.LocationId=B.LocationId\r\n\t\tinner join WorkDCTCoverageTransaction C with (nolock) on \r\n\t\t\tC.SessionId=A.SessionId and \r\n\t\t\tC.CoverageId=A.CoverageId\r\n\t\tINNER JOIN DCGLLocationStaging GL  with (nolock) on \r\n\t\t\tB.SessionId=GL.SessionId and \r\n\t\t\tB.objectid=GL.GL_LocationId \t\t\r\n\t) A\r\n\tWHERE\r\n\t(\r\n\t\tA.TerritoryCode != A.cte_TerritoryCode OR\r\n\t\tA.Latitude != A.cte_latitude OR\r\n\t\tA.Longitude != A.cte_longitude OR\r\n\t\tA.cte_CensusBlockGroup != A.CBG\r\n\t)\n),\nSQ_WorkDCTTransactionInsuranceLineLocationBridge_Property AS (\n\twith WorkCTE as (\r\n\tselect   A.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\tA.LineId, \r\n\tA.LocationAssociationId, \r\n\tA.SessionId, \r\n\tA.CoverageRiskType,\r\n\tDCLAS.LocationId,\r\n\tA.RatingTerritoryCode,\r\n\tA.Latitude, \r\n\tA.Longitude, \r\n\tA.CensusBlockGroup\r\n\tfrom \r\n\tDBO.WorkDCTTransactionInsuranceLineLocationBridge A\r\n\tINNER JOIN \r\n\tdbo.WorkDCTInsuranceLine C  with (nolock) on \r\n\t\tA.SessionId=C.SessionId and\r\n\t\tA.LineId=C.LineId and\t\r\n\t\tC.LineType in('Property','SBOPProperty')\r\n\tINNER JOIN dbo.DCLocationAssociationStaging DCLAS  with (nolock) on   \r\n\t\tDCLAS.LocationAssociationId=A.LocationAssociationId and\r\n\t\tDCLAS.SessionId=A.SessionId and\r\n\t\tDCLAS.LocationAssociationType ='CF_Location'\r\n\twhere \r\n\tA.RatingTerritoryCode='N/A'  and NOT A.LineId is null and NOT A.LocationAssociationId is null\r\n\t)\r\n\t\r\n\tselect \r\n\tA.WorkDCTTransactionInsuranceLineLocationBridgeId as WorkDCTTransactionInsuranceLineLocationBridgeId, \r\n\tA.TerritoryCode as RatingTerritoryCode, \r\n\tA.Latitude as Latitude, \r\n\tA.Longitude as Longitude, \r\n\tA.CBG  as CensusBlockGroup\r\n\tFROM \r\n\t(\r\n\t\tSelect \r\n\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId,\r\n\t\tB.LocationAssociationId as LocationAssociationId, \r\n\t\tA.SessionId as SessionId,\r\n\t\tB.LineId as LineId,\r\n\t\tISNULL(WBLAS.Latitude,'0') as Latitude, \r\n\t\tISNULL(WBLAS.Longitude,'0') as Longitude, \r\n\t\tISNULL(WBLAS.CBG,'N/A') as CBG, \r\n\t\tCASE \r\n\t\tWHEN UPPER(C.CoverageType) like '%EARTHQUAKE%' then isnull(WBLAS.TerritoryCodeEarthQuake,'N/A')\r\n\t\tELSE ISNULL(WBLAS.TerritoryCodeProperty,'N/A')\r\n\t\tEND as TerritoryCode,\r\n\t\tB.RatingTerritoryCode as cte_TerritoryCode,\r\n\t\tB.Latitude as cte_latitude,\r\n\t\tB.Longitude as cte_longitude,\r\n\t\tB.CensusBlockGroup as cte_CensusBlockGroup\r\n\t\tFROM\r\n\t\tWorkDCTTransactionInsuranceLineLocationBridge A  \r\n\t\tinner join WorkCTE B on \r\n\t\t\tA.WorkDCTTransactionInsuranceLineLocationBridgeId=B.WorkDCTTransactionInsuranceLineLocationBridgeId\t\r\n\t\t\tand A.LineId=B.LineId\r\n\t\t\tand A.LocationAssociationId=B.LocationAssociationId\r\n\t\t\tand A.SessionId=B.SessionId\r\n\t\tinner join WBLocationAccountStage WBLAS with (nolock) on \r\n\t\t\tWBLAS.SessionId=B.SessionId and \t\r\n\t\t\tWBLAS.LocationId=B.LocationId\r\n\t\tinner join WorkDCTCoverageTransaction C with (nolock) on \r\n\t\t\tC.SessionId=A.SessionId and \r\n\t\t\tC.CoverageId=A.CoverageId\r\n\t) A\r\n\tWHERE\r\n\t(\r\n\t\tA.TerritoryCode != A.cte_TerritoryCode OR\r\n\t\tA.Latitude != A.cte_latitude OR\r\n\t\tA.Longitude != A.cte_longitude OR\r\n\t\tA.cte_CensusBlockGroup != A.CBG\r\n\t)\n),\nUnion_CBG_TerrCodes AS (\n\tSELECT WorkDCTTransactionInsuranceLineLocationBridgeId, RatingTerritoryCode, Latitude, Longitude, CensusBlockGroup\n\tFROM SQ_WorkDCTTransactionInsuranceLineLocationBridge_Property\n\tUNION\n\tSELECT WorkDCTTransactionInsuranceLineLocationBridgeId, RatingTerritoryCode, Latitude, Longitude, CensusBlockGroup\n\tFROM SQ_WorkDCTTransactionInsuranceLineLocationBridge_CA\n\tUNION\n\tSELECT WorkDCTTransactionInsuranceLineLocationBridgeId, RatingTerritoryCode, Latitude, Longitude, CensusBlockGroup\n\tFROM SQ_WorkDCTTransactionInsuranceLineLocationBridge_GL\n\tUNION\n\tSELECT WorkDCTTransactionInsuranceLineLocationBridgeId, RatingTerritoryCode, Latitude, Longitude, CensusBlockGroup\n\tFROM SQ_WorkDCTTransactionInsuranceLineLocationBridge_BP\n\tUNION\n\tSELECT WorkDCTTransactionInsuranceLineLocationBridgeId, RatingTerritoryCode, Latitude, Longitude, CensusBlockGroup\n\tFROM SQ_WorkDCTTransactionInsuranceLineLocationBridge_AllElse\n),\nEXP_Territory_Input AS (\n\tSELECT\n\tWorkDCTTransactionInsuranceLineLocationBridgeId,\n\tRatingTerritoryCode,\n\tLatitude,\n\tLongitude,\n\tCensusBlockGroup\n\tFROM Union_CBG_TerrCodes\n),\nUPD_Territory AS (\n\tSELECT\n\tWorkDCTTransactionInsuranceLineLocationBridgeId, \n\tRatingTerritoryCode, \n\tLatitude, \n\tLongitude, \n\tCensusBlockGroup\n\tFROM EXP_Territory_Input\n),\nWorkDCTTransactionInsuranceLineLocationBridge_UPDATE_Territory AS (\n\tMERGE INTO WorkDCTTransactionInsuranceLineLocationBridge AS T\n\tUSING UPD_Territory AS S\n\tON T.WorkDCTTransactionInsuranceLineLocationBridgeId = S.WorkDCTTransactionInsuranceLineLocationBridgeId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CensusBlockGroup = S.CensusBlockGroup, T.Latitude = S.Latitude, T.Longitude = S.Longitude, T.RatingTerritoryCode = S.RatingTerritoryCode\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_LKP": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}