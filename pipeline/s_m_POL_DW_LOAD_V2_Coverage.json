{
    "name": "s_m_POL_DW_LOAD_V2_Coverage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_V2_Coverage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_pif_4514_stage AS (\n\tSELECT DISTINCT A.pif_symbol,\r\n\t                A.pif_policy_number,\r\n\t                A.pif_module,\r\n\t                sar_insurance_line,\r\n\t                sar_location_x,\r\n\t                sar_sub_location_x,\r\n\t                sar_risk_unit_group,\r\n\t                sar_class_code_grp_x,\r\n\t                sar_class_code_mem_x,\r\n\t                (sar_unit + sar_risk_unit_continued) as sar_unit, \r\n\t                CASE Len(Ltrim(Rtrim(Coalesce(sar_seq_rsk_unt_a, '')))) WHEN '0' THEN 'N/A'  ELSE \r\n\t\t\t        CASE Len(Ltrim(Rtrim(Coalesce(sar_seq_rsk_unt_a, '')))) WHEN '1' THEN Ltrim(Rtrim(sar_seq_rsk_unt_a)) + '0' \r\n\t\t\t        ELSE Ltrim(Rtrim(sar_seq_rsk_unt_a))   END   END     AS sar_seq_rsk_unt_a,\r\n\t                sar_type_exposure,\r\n\t                sar_major_peril,\r\n\t                sar_seq_no,\r\n\t                sar_cov_eff_year,\r\n\t                sar_cov_eff_month,\r\n\t                sar_cov_eff_day,\r\n\t                sar_type_bureau\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_4514_stage A, @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_02_stage B\r\n\tWHERE A.pif_symbol + A.pif_policy_number + A.pif_module = B.pif_symbol + B.pif_policy_number + B.pif_module \r\n\tAND (LTRIM(RTRIM(pif_eff_yr_a)) <> '9999' OR LTRIM(RTRIM(pif_exp_yr_a)) <> '9999') AND\r\n\tLTRIM(RTRIM(SUBSTRING(CAST(pif_full_agency_number AS char(7)),1,2)+SUBSTRING(CAST(pif_full_agency_number AS char(7)),5,3))) <> '99999'\r\n\t\r\n\t\r\n\t---- By joining to PIF_02_stage table we are not reading the data from PIF_4514_Stage where policy_eff_year or policy_exp_year <> '9999' or Policy which belongs to --- internal agency.\n),\nEXP_Default AS (\n\tSELECT\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\t-- *INF*: (pif_symbol  || pif_policy_number || pif_module)\n\t(pif_symbol || pif_policy_number || pif_module) AS Pol_Key,\n\tsar_insurance_line,\n\tsar_location_x,\n\tsar_sub_location_x,\n\tsar_risk_unit_group,\n\tsar_class_code_grp_x,\n\tsar_class_code_mem_x,\n\tsar_unit_complete,\n\tsar_seq_rsk_unt_a,\n\tsar_type_exposure,\n\tsar_major_peril,\n\tsar_seq_no,\n\tsar_cov_eff_year,\n\tsar_cov_eff_month,\n\tsar_cov_eff_day,\n\tsar_type_bureau\n\tFROM SQ_pif_4514_stage\n),\nLKP_Policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT policy.pol_ak_id as pol_ak_id, policy.pol_key as pol_key FROM V2.policy\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id DESC) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_Policy.pol_ak_id,\n\tEXP_Default.sar_insurance_line,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_insurance_line)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_insurance_line) AS sar_insurance_line_Out,\n\tEXP_Default.sar_location_x,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_location_x)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_location_x) AS sar_location_Out,\n\tEXP_Default.sar_sub_location_x,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_sub_location_x)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_sub_location_x) AS sar_sub_location_x1,\n\tEXP_Default.sar_risk_unit_group,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group) AS sar_risk_unit_group_Out,\n\tEXP_Default.sar_class_code_grp_x,\n\tEXP_Default.sar_class_code_mem_x,\n\t-- *INF*:  ( sar_class_code_grp_x || sar_class_code_mem_x)\n\t(sar_class_code_grp_x || sar_class_code_mem_x) AS v_risk_unit_group_seq,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_risk_unit_group_seq)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(v_risk_unit_group_seq) AS risk_unit_group_seq_Out,\n\tEXP_Default.sar_unit_complete,\n\t-- *INF*: IIF(LENGTH(LTRIM(RTRIM(sar_unit_complete)))= 0 OR IS_SPACES(LTRIM(RTRIM(sar_unit_complete))), '000000',sar_unit_complete)\n\tIFF(\n\t    LENGTH(LTRIM(RTRIM(sar_unit_complete))) = 0\n\t    or LENGTH(LTRIM(RTRIM(sar_unit_complete)))>0\n\t    and TRIM(LTRIM(RTRIM(sar_unit_complete)))='',\n\t    '000000',\n\t    sar_unit_complete\n\t) AS v_sar_unit,\n\tv_sar_unit AS sar_risk_unit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit) AS sar_risk_unit_Out,\n\tEXP_Default.sar_seq_rsk_unt_a,\n\t-- *INF*: RPAD(LTRIM(RTRIM(sar_seq_rsk_unt_a)),2,'0')\n\tRPAD(LTRIM(RTRIM(sar_seq_rsk_unt_a)), 2, '0') AS v_sar_seq_rsk_unt_a,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_seq_rsk_unt_a)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_seq_rsk_unt_a) AS sar_rsk_unit_seq_out,\n\tEXP_Default.sar_type_exposure,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_type_exposure)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_type_exposure) AS sar_type_exposure_out,\n\tEXP_Default.sar_major_peril,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_major_peril)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_major_peril) AS sar_major_peril_out,\n\tEXP_Default.sar_seq_no,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_seq_no)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_seq_no) AS sar_major_peril_seq_no,\n\tEXP_Default.sar_cov_eff_year,\n\t-- *INF*: TO_CHAR(sar_cov_eff_year)\n\tTO_CHAR(sar_cov_eff_year) AS v_sar_cov_eff_year,\n\tEXP_Default.sar_cov_eff_month,\n\t-- *INF*: LPAD(TO_CHAR(sar_cov_eff_month),2,'0')\n\tLPAD(TO_CHAR(sar_cov_eff_month), 2, '0') AS v_sar_cov_eff_month,\n\tEXP_Default.sar_cov_eff_day,\n\t-- *INF*: LPAD(TO_CHAR(sar_cov_eff_day),2,'0')\n\tLPAD(TO_CHAR(sar_cov_eff_day), 2, '0') AS v_sar_cov_eff_day,\n\t-- *INF*: LPAD(TO_CHAR(sar_cov_eff_month),2,'0') || '/' || LPAD(TO_CHAR(sar_cov_eff_day),2,'0')\t||\t'/'\t||\r\n\t-- TO_CHAR(sar_cov_eff_year)\n\tLPAD(TO_CHAR(sar_cov_eff_month), 2, '0') || '/' || LPAD(TO_CHAR(sar_cov_eff_day), 2, '0') || '/' || TO_CHAR(sar_cov_eff_year) AS v_sar_cov_eff_date,\n\t-- *INF*: TO_DATE(v_sar_cov_eff_month  || '/'  || v_sar_cov_eff_day  || '/'  || v_sar_cov_eff_year, 'MM/DD/YYYY')\n\tTO_TIMESTAMP(v_sar_cov_eff_month || '/' || v_sar_cov_eff_day || '/' || v_sar_cov_eff_year, 'MM/DD/YYYY') AS sar_cov_eff_date,\n\tEXP_Default.sar_type_bureau,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_type_bureau)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_type_bureau) AS sar_type_bureau_out,\n\t'N/A' AS default_NA,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59' , 'MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id\n\tFROM EXP_Default\n\tLEFT JOIN LKP_Policy\n\tON LKP_Policy.pol_key = EXP_Default.Pol_Key\n),\nLKP_TGT_V2_Coverage AS (\n\tSELECT\n\tcov_id,\n\tcov_ak_id,\n\tpol_ak_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq_num,\n\tpms_type_exposure,\n\ttype_bureau_code,\n\tcov_eff_date\n\tFROM (\n\t\tSELECT C.cov_id                 AS cov_id,\r\n\t\t       C.crrnt_snpsht_flag      AS crrnt_snpsht_flag,\r\n\t\t       C.audit_id               AS audit_id,\r\n\t\t       C.eff_from_date          AS eff_from_date,\r\n\t\t       C.eff_to_date            AS eff_to_date,\r\n\t\t       C.source_sys_id          AS source_sys_id,\r\n\t\t       C.created_date           AS created_date,\r\n\t\t       C.modified_date          AS modified_date,\r\n\t\t       C.cov_ak_id              AS cov_ak_id,\r\n\t\t       RTRIM(C.type_bureau_code)       AS type_bureau_code,\r\n\t\t       C.pol_ak_id              AS pol_ak_id,\r\n\t\t       RTRIM(C.ins_line)               AS ins_line,\r\n\t\t       RTRIM(C.loc_unit_num)           AS loc_unit_num,\r\n\t\t       RTRIM(C.sub_loc_unit_num)       AS sub_loc_unit_num,\r\n\t\t       RTRIM(C.risk_unit_grp)          AS risk_unit_grp,\r\n\t\t       RTRIM(C.risk_unit_grp_seq_num)  AS risk_unit_grp_seq_num,\r\n\t\t       RTRIM(C.risk_unit)              AS risk_unit,\r\n\t\t       RTRIM(C.risk_unit_seq_num)      AS risk_unit_seq_num,\r\n\t\t       RTRIM(C.major_peril_code)       AS major_peril_code,\r\n\t\t       RTRIM(C.major_peril_seq_num)    AS major_peril_seq_num,\r\n\t\t       RTRIM(C.pms_type_exposure)      AS pms_type_exposure,\r\n\t\t       C.cov_eff_date           AS cov_eff_date\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.coverage C, @{pipeline().parameters.TARGET_TABLE_OWNER}.policy P \r\n\t\tWHERE C.pol_ak_id = P.pol_ak_id\r\n\t\tAND  C.crrnt_snpsht_flag =1 and P.crrnt_snpsht_flag =1\r\n\t\tAND P.pol_key IN (SELECT DISTINCT (A.pif_symbol + A.pif_policy_number + A.pif_module) \r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}..pif_4514_stage A)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,ins_line,loc_unit_num,sub_loc_unit_num,risk_unit_grp,risk_unit_grp_seq_num,risk_unit,risk_unit_seq_num,major_peril_code,major_peril_seq_num,pms_type_exposure,cov_eff_date ORDER BY cov_id DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_TGT_V2_Coverage.cov_id AS lkp_cov_id,\n\tLKP_TGT_V2_Coverage.cov_ak_id AS lkp_cov_ak_id,\n\tLKP_TGT_V2_Coverage.pol_ak_id AS lkp_pol_ak_id,\n\tLKP_TGT_V2_Coverage.ins_line AS lkp_ins_line,\n\tLKP_TGT_V2_Coverage.loc_unit_num AS lkp_loc_unit_num,\n\tLKP_TGT_V2_Coverage.sub_loc_unit_num AS lkp_sub_loc_unit_num,\n\tLKP_TGT_V2_Coverage.risk_unit_grp AS lkp_risk_unit_grp,\n\tLKP_TGT_V2_Coverage.risk_unit_grp_seq_num AS lkp_risk_unit_grp_seq_num,\n\tLKP_TGT_V2_Coverage.risk_unit AS lkp_risk_unit,\n\tLKP_TGT_V2_Coverage.risk_unit_seq_num AS lkp_risk_unit_seq_num,\n\tLKP_TGT_V2_Coverage.major_peril_code AS lkp_major_peril_code,\n\tLKP_TGT_V2_Coverage.major_peril_seq_num AS lkp_major_peril_seq_num,\n\tLKP_TGT_V2_Coverage.pms_type_exposure AS lkp_pms_type_exposure,\n\tLKP_TGT_V2_Coverage.type_bureau_code AS lkp_type_bureau_code,\n\tLKP_TGT_V2_Coverage.cov_eff_date AS lkp_cov_eff_date,\n\tEXP_Values.pol_ak_id,\n\tEXP_Values.sar_insurance_line_Out,\n\tEXP_Values.sar_location_Out,\n\tEXP_Values.sar_sub_location_x1,\n\tEXP_Values.sar_risk_unit_group_Out,\n\tEXP_Values.risk_unit_group_seq_Out,\n\tEXP_Values.sar_risk_unit_Out,\n\tEXP_Values.sar_rsk_unit_seq_out,\n\tEXP_Values.sar_type_exposure_out,\n\tEXP_Values.sar_major_peril_out,\n\tEXP_Values.sar_major_peril_seq_no,\n\tEXP_Values.sar_cov_eff_date,\n\tEXP_Values.sar_type_bureau_out,\n\t-- *INF*: IIF(ISNULL(lkp_cov_id),'NEW',\r\n\t-- \tIIF (\r\n\t-- \r\n\t-- lkp_type_bureau_code <>sar_type_bureau_out  ,\r\n\t-- \r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(\n\t    lkp_cov_id IS NULL, 'NEW',\n\t    IFF(\n\t        lkp_type_bureau_code <> sar_type_bureau_out, 'UPDATE', 'NOCHANGE'\n\t    )\n\t) AS v_Changed_Flag,\n\tv_Changed_Flag AS Changed_Flag,\n\tEXP_Values.default_NA,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(\n\t    v_Changed_Flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS v_eff_from_date,\n\tv_eff_from_date AS eff_from_date,\n\tEXP_Values.eff_to_date,\n\tEXP_Values.created_date,\n\tEXP_Values.crrnt_snpsht_flag,\n\tEXP_Values.audit_id,\n\tEXP_Values.source_sys_id\n\tFROM EXP_Values\n\tLEFT JOIN LKP_TGT_V2_Coverage\n\tON LKP_TGT_V2_Coverage.pol_ak_id = EXP_Values.pol_ak_id AND LKP_TGT_V2_Coverage.ins_line = EXP_Values.sar_insurance_line_Out AND LKP_TGT_V2_Coverage.loc_unit_num = EXP_Values.sar_location_Out AND LKP_TGT_V2_Coverage.sub_loc_unit_num = EXP_Values.sar_sub_location_x1 AND LKP_TGT_V2_Coverage.risk_unit_grp = EXP_Values.sar_risk_unit_group_Out AND LKP_TGT_V2_Coverage.risk_unit_grp_seq_num = EXP_Values.risk_unit_group_seq_Out AND LKP_TGT_V2_Coverage.risk_unit = EXP_Values.sar_risk_unit_Out AND LKP_TGT_V2_Coverage.risk_unit_seq_num = EXP_Values.sar_rsk_unit_seq_out AND LKP_TGT_V2_Coverage.major_peril_code = EXP_Values.sar_major_peril_out AND LKP_TGT_V2_Coverage.major_peril_seq_num = EXP_Values.sar_major_peril_seq_no AND LKP_TGT_V2_Coverage.pms_type_exposure = EXP_Values.sar_type_exposure_out AND LKP_TGT_V2_Coverage.cov_eff_date = EXP_Values.sar_cov_eff_date\n),\nFIL_Insert_rows AS (\n\tSELECT\n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tcreated_date AS modified_date, \n\tlkp_cov_ak_id, \n\tpol_ak_id, \n\tsar_insurance_line_Out AS ins_line, \n\tsar_location_Out AS loc_unit_num, \n\tsar_sub_location_x1 AS sub_loc_unit_num, \n\tsar_risk_unit_group_Out AS risk_unit_grp, \n\trisk_unit_group_seq_Out AS risk_unit_grp_seq_num, \n\tsar_risk_unit_Out AS risk_unit, \n\tsar_rsk_unit_seq_out AS risk_unit_seq_num, \n\tsar_major_peril_out AS major_peril_code, \n\tsar_major_peril_seq_no AS major_peril_seq_num, \n\tsar_type_exposure_out AS pms_type_exposure, \n\tsar_type_bureau_out AS type_bureau_code, \n\tsar_cov_eff_date AS cov_eff_date, \n\tChanged_Flag\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_Cov_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Cov_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tlkp_cov_ak_id,\n\t-- *INF*: IIF(ISNULL(lkp_cov_ak_id),NEXTVAL,lkp_cov_ak_id)\n\tIFF(lkp_cov_ak_id IS NULL, NEXTVAL, lkp_cov_ak_id) AS cov_ak_id_out,\n\tpol_ak_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq_num,\n\tpms_type_exposure,\n\ttype_bureau_code,\n\tcov_eff_date,\n\tSEQ_Cov_AK_ID.NEXTVAL\n\tFROM FIL_Insert_rows\n),\ncoverage_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.coverage\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, cov_ak_id, pol_ak_id, ins_line, loc_unit_num, sub_loc_unit_num, risk_unit_grp, risk_unit_grp_seq_num, risk_unit, risk_unit_seq_num, major_peril_code, major_peril_seq_num, pms_type_exposure, cov_eff_date, type_bureau_code)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tcov_ak_id_out AS COV_AK_ID, \n\tPOL_AK_ID, \n\tINS_LINE, \n\tLOC_UNIT_NUM, \n\tSUB_LOC_UNIT_NUM, \n\tRISK_UNIT_GRP, \n\tRISK_UNIT_GRP_SEQ_NUM, \n\tRISK_UNIT, \n\tRISK_UNIT_SEQ_NUM, \n\tMAJOR_PERIL_CODE, \n\tMAJOR_PERIL_SEQ_NUM, \n\tPMS_TYPE_EXPOSURE, \n\tCOV_EFF_DATE, \n\tTYPE_BUREAU_CODE\n\tFROM EXP_Detemine_AK_ID\n),\nSQ_coverage AS (\n\tSELECT \r\n\ta.cov_id,\r\n\ta.eff_from_date,\r\n\ta.eff_to_date,\r\n\ta.ins_line,\r\n\ta.loc_unit_num,\r\n\ta.sub_loc_unit_num,\r\n\ta.risk_unit_grp,\r\n\ta.risk_unit_grp_seq_num,\r\n\ta.risk_unit,\r\n\ta.risk_unit_seq_num,\r\n\ta.major_peril_code,\r\n\ta.major_peril_seq_num,\r\n\ta.pms_type_exposure,\r\n\ta.cov_eff_date\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.coverage a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.coverage b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t      AND a.cov_ak_id = b.cov_ak_id\r\n\t      AND a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.cov_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.cov_ak_id, a.eff_from_date desc\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tcov_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq_num,\n\tpms_type_exposure,\n\tcov_eff_date,\n\teff_from_date,\n\teff_to_date AS Orig_eff_to_date,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- ins_line = v_PREV_ROW_ins_line  AND \r\n\t-- loc_unit_num  = v_PREV_ROW_loc_unit_num  AND \r\n\t-- sub_loc_unit_num  =  v_PREV_ROW_sub_loc_unit_num  AND  \r\n\t-- risk_unit_grp  =  v_PREV_ROW_risk_unit_grp  AND \r\n\t-- risk_unit_grp_seq_num  = v_PREV_ROW_risk_unit_grp_seq_num  AND \r\n\t-- risk_unit  = v_PREV_ROW_risk_unit  AND \r\n\t-- risk_unit_seq_num  = v_PREV_ROW_risk_unit_seq_num  AND \r\n\t-- major_peril_code  = v_PREV_ROW_major_peril_code  AND \r\n\t-- major_peril_seq_num  = v_PEV_ROW_major_peril_seq_num  AND \r\n\t-- pms_type_exposure  =  v_PEV_ROW_pms_type_exposure  AND \r\n\t-- cov_eff_date  =  v_PEV_ROW_cov_eff_date\r\n\t-- \r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1)\r\n\t-- ,Orig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    ins_line = v_PREV_ROW_ins_line AND loc_unit_num = v_PREV_ROW_loc_unit_num AND sub_loc_unit_num = v_PREV_ROW_sub_loc_unit_num AND risk_unit_grp = v_PREV_ROW_risk_unit_grp AND risk_unit_grp_seq_num = v_PREV_ROW_risk_unit_grp_seq_num AND risk_unit = v_PREV_ROW_risk_unit AND risk_unit_seq_num = v_PREV_ROW_risk_unit_seq_num AND major_peril_code = v_PREV_ROW_major_peril_code AND major_peril_seq_num = v_PEV_ROW_major_peril_seq_num AND pms_type_exposure = v_PEV_ROW_pms_type_exposure AND cov_eff_date = v_PEV_ROW_cov_eff_date, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    Orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\t0 AS crrnt_snapshot_flag,\n\tsysdate AS modified_date,\n\tins_line AS v_PREV_ROW_ins_line,\n\tloc_unit_num AS v_PREV_ROW_loc_unit_num,\n\tsub_loc_unit_num AS v_PREV_ROW_sub_loc_unit_num,\n\trisk_unit_grp AS v_PREV_ROW_risk_unit_grp,\n\trisk_unit_grp_seq_num AS v_PREV_ROW_risk_unit_grp_seq_num,\n\trisk_unit AS v_PREV_ROW_risk_unit,\n\trisk_unit_seq_num AS v_PREV_ROW_risk_unit_seq_num,\n\tmajor_peril_code AS v_PREV_ROW_major_peril_code,\n\tmajor_peril_seq_num AS v_PEV_ROW_major_peril_seq_num,\n\tpms_type_exposure AS v_PEV_ROW_pms_type_exposure,\n\tcov_eff_date AS v_PEV_ROW_cov_eff_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date\n\tFROM SQ_coverage\n),\nFIL_Coverage AS (\n\tSELECT\n\tcov_id, \n\tOrig_eff_to_date AS orig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\tcov_id, \n\teff_to_date, \n\tcrrnt_snapshot_flag AS crrnt_snapsht_flag, \n\tmodified_date\n\tFROM FIL_Coverage\n),\ncoverage_EXPIRE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.coverage AS T\n\tUSING UPD_Update_Target AS S\n\tON T.cov_id = S.cov_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataWarehouse/"
        },
        "annotations": []
    }
}