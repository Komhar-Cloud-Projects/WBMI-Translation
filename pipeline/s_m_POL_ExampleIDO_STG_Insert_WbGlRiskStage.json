{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WbGlRiskStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WbGlRiskStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_GL_Risk AS (\n\tWITH cte_WBGLRisk(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.GL_RiskId, \r\n\tX.WB_GL_RiskId, \r\n\tX.SessionId, \r\n\tX.XCUCoverage, \r\n\tX.ExcludeExplosionCollapse1UndergroundAll, \r\n\tX.ExcludeExplosionCollapse2AndOrUnderground, \r\n\tX.IncludeExplosion, \r\n\tX.IncludeCollapse, \r\n\tX.IncludeUnderground, \r\n\tX.ExcludeExplosionCollapse3AndOrUndergroundSpecOps, \r\n\tX.ExcludeCollapse, \r\n\tX.ExcludeExplosion, \r\n\tX.ExcludeUnderground, \r\n\tX.WestBendAuditable, \r\n\tX.ILFTableAssignmentCode, \r\n\tX.ProductsCompletedOpsTableAssignmentCode \r\n\tFROM\r\n\tWB_GL_Risk X\r\n\tinner join\r\n\tcte_WBGLRisk Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tGL_RiskId AS i_GL_RiskId,\n\tWB_GL_RiskId AS i_WB_GL_RiskId,\n\tSessionId AS i_SessionId,\n\tXCUCoverage AS i_XCUCoverage,\n\tExcludeExplosionCollapse1UndergroundAll AS i_ExcludeExplosionCollapse1UndergroundAll,\n\tExcludeExplosionCollapse2AndOrUnderground AS i_ExcludeExplosionCollapse2AndOrUnderground,\n\tIncludeExplosion AS i_IncludeExplosion,\n\tIncludeCollapse AS i_IncludeCollapse,\n\tIncludeUnderground AS i_IncludeUnderground,\n\tExcludeExplosionCollapse3AndOrUndergroundSpecOps AS i_ExcludeExplosionCollapse3AndOrUndergroundSpecOps,\n\tExcludeCollapse AS i_ExcludeCollapse,\n\tExcludeExplosion AS i_ExcludeExplosion,\n\tExcludeUnderground AS i_ExcludeUnderground,\n\tWestBendAuditable AS i_WestBendAuditable,\n\tILFTableAssignmentCode AS i_ILFTableAssignmentCode,\n\tProductsCompletedOpsTableAssignmentCode AS i_ProductsCompletedOpsTableAssignmentCode,\n\ti_GL_RiskId AS o_GL_RiskId,\n\ti_WB_GL_RiskId AS o_WB_GL_RiskId,\n\ti_SessionId AS o_SessionId,\n\t-- *INF*: DECODE(i_XCUCoverage,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_XCUCoverage,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_XCUCoverage,\n\t-- *INF*: DECODE(i_ExcludeExplosionCollapse1UndergroundAll,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeExplosionCollapse1UndergroundAll,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeExplosionCollapse1UndergroundAll,\n\t-- *INF*: DECODE(i_ExcludeExplosionCollapse2AndOrUnderground,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeExplosionCollapse2AndOrUnderground,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeExplosionCollapse2AndOrUnderground,\n\t-- *INF*: DECODE(i_IncludeExplosion,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_IncludeExplosion,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_IncludeExplosion,\n\t-- *INF*: DECODE(i_IncludeCollapse,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_IncludeCollapse,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_IncludeCollapse,\n\t-- *INF*: DECODE(i_IncludeUnderground,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_IncludeUnderground,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_IncludeUnderground,\n\t-- *INF*: DECODE(i_ExcludeExplosionCollapse3AndOrUndergroundSpecOps,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeExplosionCollapse3AndOrUndergroundSpecOps,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeExplosionCollapse3AndOrUndergroundSpecOps,\n\t-- *INF*: DECODE(i_ExcludeCollapse,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeCollapse,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeCollapse,\n\t-- *INF*: DECODE(i_ExcludeExplosion,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeExplosion,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeExplosion,\n\t-- *INF*: DECODE(i_ExcludeUnderground,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_ExcludeUnderground,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_ExcludeUnderground,\n\t-- *INF*: DECODE(i_WestBendAuditable,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_WestBendAuditable,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_WestBendAuditable,\n\ti_ILFTableAssignmentCode AS o_ILFTableAssignmentCode,\n\ti_ProductsCompletedOpsTableAssignmentCode AS o_ProductsCompletedOpsTableAssignmentCode,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_WB_GL_Risk\n),\nWbGlRiskStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WbGlRiskStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WbGlRiskStage\n\t(GlRiskId, WbGlRiskId, SessionId, XCUCoverage, ExcludeExplosionCollapse1UndergroundAll, ExcludeExplosionCollapse2AndOrUnderground, IncludeExplosion, IncludeCollapse, IncludeUnderground, ExcludeExplosionCollapse3AndOrUndergroundSpecOps, ExcludeCollapse, ExcludeExplosion, ExcludeUnderground, WestBendAuditable, ILFTableAssignmentCode, ProductsCompletedOpsTableAssignmentCode, ExtractDate, SourceSystemId)\n\tSELECT \n\to_GL_RiskId AS GLRISKID, \n\to_WB_GL_RiskId AS WBGLRISKID, \n\to_SessionId AS SESSIONID, \n\to_XCUCoverage AS XCUCOVERAGE, \n\to_ExcludeExplosionCollapse1UndergroundAll AS EXCLUDEEXPLOSIONCOLLAPSE1UNDERGROUNDALL, \n\to_ExcludeExplosionCollapse2AndOrUnderground AS EXCLUDEEXPLOSIONCOLLAPSE2ANDORUNDERGROUND, \n\to_IncludeExplosion AS INCLUDEEXPLOSION, \n\to_IncludeCollapse AS INCLUDECOLLAPSE, \n\to_IncludeUnderground AS INCLUDEUNDERGROUND, \n\to_ExcludeExplosionCollapse3AndOrUndergroundSpecOps AS EXCLUDEEXPLOSIONCOLLAPSE3ANDORUNDERGROUNDSPECOPS, \n\to_ExcludeCollapse AS EXCLUDECOLLAPSE, \n\to_ExcludeExplosion AS EXCLUDEEXPLOSION, \n\to_ExcludeUnderground AS EXCLUDEUNDERGROUND, \n\to_WestBendAuditable AS WESTBENDAUDITABLE, \n\to_ILFTableAssignmentCode AS ILFTABLEASSIGNMENTCODE, \n\to_ProductsCompletedOpsTableAssignmentCode AS PRODUCTSCOMPLETEDOPSTABLEASSIGNMENTCODE, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}