{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCFRatingGroupStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCFRatingGroupStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_CF_RatingGroup AS (\n\tWITH cte_DCCFRatingGroup(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CF_RiskId, \r\n\tX.CF_RatingGroupId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.CauseOfLoss, \r\n\tX.DeductibleIncreasedTheft, \r\n\tX.DeductibleWindHail, \r\n\tX.Earthquake, \r\n\tX.EarthquakeLimit, \r\n\tX.EarthquakeLimitOverrideSelect, \r\n\tX.Flood, \r\n\tX.FloodLimit, \r\n\tX.FloodLimitCalc, \r\n\tX.FloodLimitOverrideSelect, \r\n\tX.HurricaneCalculationChoice, \r\n\tX.HurricaneDeductible, \r\n\tX.Number, \r\n\tX.RatingType \r\n\tFROM\r\n\tDC_CF_RatingGroup X\r\n\tinner join\r\n\tcte_DCCFRatingGroup Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tCF_RiskId,\n\tCF_RatingGroupId,\n\tSessionId,\n\tId,\n\tCauseOfLoss,\n\tDeductibleIncreasedTheft,\n\tDeductibleWindHail,\n\tEarthquake,\n\t-- *INF*: DECODE(Earthquake,'T',1,'F',0,NULL)\n\tDECODE(\n\t    Earthquake,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_Earthquake,\n\tEarthquakeLimit,\n\tEarthquakeLimitOverrideSelect,\n\t-- *INF*: DECODE(EarthquakeLimitOverrideSelect,'T',1,'F',0,NULL)\n\tDECODE(\n\t    EarthquakeLimitOverrideSelect,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_EarthquakeLimitOverrideSelect,\n\tFlood,\n\t-- *INF*: DECODE(Flood,'T',1,'F',0,NULL)\n\tDECODE(\n\t    Flood,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_Flood,\n\tFloodLimit,\n\tFloodLimitCalc,\n\tFloodLimitOverrideSelect,\n\t-- *INF*: DECODE(FloodLimitOverrideSelect,'T',1,'F',0,NULL)\n\tDECODE(\n\t    FloodLimitOverrideSelect,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_FloodLimitOverrideSelect,\n\tHurricaneCalculationChoice,\n\tHurricaneDeductible,\n\tNumber,\n\tRatingType,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYS_ID,\n\tsysdate AS ExtractDate\n\tFROM SQ_DC_CF_RatingGroup\n),\nDCCFRatingGroupStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCFRatingGroupStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCFRatingGroupStaging\n\t(CF_RatingGroupId, SessionId, Id, CauseOfLoss, DeductibleIncreasedTheft, DeductibleWindHail, Earthquake, EarthquakeLimit, EarthquakeLimitOverrideSelect, Flood, FloodLimit, FloodLimitCalc, FloodLimitOverrideSelect, HurricaneCalculationChoice, HurricaneDeductible, Number, RatingType, ExtractDate, SourceSystemId, CF_RiskId)\n\tSELECT \n\tCF_RATINGGROUPID, \n\tSESSIONID, \n\tID, \n\tCAUSEOFLOSS, \n\tDEDUCTIBLEINCREASEDTHEFT, \n\tDEDUCTIBLEWINDHAIL, \n\to_Earthquake AS EARTHQUAKE, \n\tEARTHQUAKELIMIT, \n\to_EarthquakeLimitOverrideSelect AS EARTHQUAKELIMITOVERRIDESELECT, \n\to_Flood AS FLOOD, \n\tFLOODLIMIT, \n\tFLOODLIMITCALC, \n\to_FloodLimitOverrideSelect AS FLOODLIMITOVERRIDESELECT, \n\tHURRICANECALCULATIONCHOICE, \n\tHURRICANEDEDUCTIBLE, \n\tNUMBER, \n\tRATINGTYPE, \n\tEXTRACTDATE, \n\tSOURCE_SYS_ID AS SOURCESYSTEMID, \n\tCF_RISKID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}