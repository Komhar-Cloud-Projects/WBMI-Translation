{
    "name": "s_m_CLM_DW_LOAD_EOR_medical_bill_service_CLogic",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_EOR_medical_bill_service_CLogic",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_med_bill_service_stage AS (\n\tSELECT \r\n\tRTRIM(med_bill_service_stage.med_bill_id) ,\r\n\tCASE med_bill_service_stage.serv_seq_num WHEN '' THEN NULL ELSE med_bill_service_stage.serv_seq_num END,\r\n\tCASE med_bill_service_stage.serv_from_date WHEN '' THEN NULL ELSE med_bill_service_stage.serv_from_date  END,\r\n\tCASE med_bill_service_stage.serv_to_date WHEN '' THEN NULL ELSE med_bill_service_stage.serv_to_date END,\r\n\tCASE RTRIM(med_bill_service_stage.serv_place_code) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.serv_place_code) END,\r\n\tCASE RTRIM(med_bill_service_stage.serv_type_code) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.serv_type_code) END,\r\n\tCASE RTRIM(med_bill_service_stage.adjusted_code1) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.adjusted_code1) END,\r\n\tCASE RTRIM(med_bill_service_stage.adjusted_code2) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.adjusted_code2) END,\r\n\tCASE RTRIM(med_bill_service_stage.mod_proc_code1) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.mod_proc_code1) END,\r\n\tCASE RTRIM(med_bill_service_stage.mod_proc_descript1) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.mod_proc_descript1) END,\r\n\tCASE RTRIM(med_bill_service_stage.mod_proc_code2) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.mod_proc_code2) END,\r\n\tCASE RTRIM(med_bill_service_stage.mod_proc_descript2) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.mod_proc_descript2) END,\r\n\tmed_bill_service_stage.serv_minutes ,\r\n\tmed_bill_service_stage.serv_units,\r\n\tmed_bill_service_stage.drug_qty_dispensed ,\r\n\tmed_bill_service_stage.drug_qty_allowed,\r\n\tmed_bill_service_stage.drug_awp,\r\n\tCASE RTRIM(med_bill_service_stage.proc_drug_rev_ind) WHEN '' THEN NULL ELSE  RTRIM(med_bill_service_stage.proc_drug_rev_ind) END,\r\n\tCASE RTRIM(med_bill_service_stage.proc_drug_rev_code) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.proc_drug_rev_code) END,\r\n\tCASE RTRIM(med_bill_service_stage.proc_drug_rev_des) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.proc_drug_rev_des) END,\r\n\tmed_bill_service_stage.serv_charge ,\r\n\tmed_bill_service_stage.serv_red ,\r\n\tmed_bill_service_stage.serv_network_red ,\r\n\tmed_bill_service_stage.serv_recom_pay ,\r\n\tCASE RTRIM(med_bill_service_stage.serv_review_cmnt) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.serv_review_cmnt)  END,\r\n\tCASE RTRIM(med_bill_service_stage.diagnose_cross_ref) WHEN '' THEN NULL ELSE RTRIM(med_bill_service_stage.diagnose_cross_ref)  END\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.med_bill_service_stage med_bill_service_stage\r\n\twhere 1=1 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nLKP_MED_BILL_KEY AS (\n\tSELECT\n\tmed_bill_ak_id,\n\tmed_bill_key,\n\tmed_bill_id\n\tFROM (\n\t\tSELECT \r\n\t\tmedical_bill.med_bill_ak_id as med_bill_ak_id, \r\n\t\tRTRIM(medical_bill.med_bill_key) as med_bill_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill medical_bill\r\n\t\tWHERE\r\n\t\tmedical_bill.CRRNT_SNPSHT_FLAG = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY med_bill_key ORDER BY med_bill_ak_id) = 1\n),\nEXP_ASSIGN_DEFAULTS1 AS (\n\tSELECT\n\tLKP_MED_BILL_KEY.med_bill_ak_id,\n\tSQ_med_bill_service_stage.serv_seq_num,\n\tSQ_med_bill_service_stage.serv_from_date AS in_serv_from_date,\n\t-- *INF*: IIF(ISNULL(in_serv_from_date),TO_DATE('1/1/1800','MM/DD/YYYY'),in_serv_from_date)\n\tIFF(in_serv_from_date IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_serv_from_date) AS serv_from_date,\n\tSQ_med_bill_service_stage.serv_to_date AS in_serv_to_date,\n\t-- *INF*: IIF(ISNULL(in_serv_to_date),TO_DATE('12/31/2100','MM/DD/YYYY'),in_serv_to_date)\n\tIFF(in_serv_to_date IS NULL, TO_TIMESTAMP('12/31/2100', 'MM/DD/YYYY'), in_serv_to_date) AS serv_to_date,\n\tSQ_med_bill_service_stage.serv_place_code AS in_serv_place_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_serv_place_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_serv_place_code) AS serv_place_code,\n\tSQ_med_bill_service_stage.serv_type_code AS in_serv_type_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_serv_type_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_serv_type_code) AS serv_type_code,\n\tSQ_med_bill_service_stage.adjusted_code1 AS in_adjusted_code1,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_adjusted_code1)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_adjusted_code1) AS adjusted_code1,\n\tSQ_med_bill_service_stage.adjusted_code2 AS in_adjusted_code2,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_adjusted_code2)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_adjusted_code2) AS adjusted_code2,\n\tSQ_med_bill_service_stage.mod_proc_code1 AS in_mod_proc_code1,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_code1)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_code1) AS mod_proc_code1,\n\tSQ_med_bill_service_stage.mod_proc_descript1 AS in_mod_proc_descript1,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_descript1)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_descript1) AS mod_proc_descript1,\n\tSQ_med_bill_service_stage.mod_proc_code2 AS in_mod_proc_code2,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_code2)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_code2) AS mod_proc_code2,\n\tSQ_med_bill_service_stage.mod_proc_descript2 AS in_mod_proc_descript2,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_descript2)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_mod_proc_descript2) AS mod_proc_descript2,\n\tSQ_med_bill_service_stage.serv_minutes,\n\tSQ_med_bill_service_stage.serv_units,\n\tSQ_med_bill_service_stage.drug_qty_dispensed,\n\tSQ_med_bill_service_stage.drug_qty_allowed,\n\tSQ_med_bill_service_stage.drug_awp,\n\tSQ_med_bill_service_stage.proc_drug_rev_ind AS in_proc_drug_rev_ind,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_ind)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_ind) AS proc_drug_rev_ind,\n\tSQ_med_bill_service_stage.proc_drug_rev_code AS in_proc_drug_rev_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_code) AS proc_drug_rev_code,\n\tSQ_med_bill_service_stage.proc_drug_rev_des AS in_proc_drug_rev_des,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_des)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_proc_drug_rev_des) AS proc_drug_rev_des,\n\tSQ_med_bill_service_stage.serv_charge,\n\tSQ_med_bill_service_stage.serv_red,\n\tSQ_med_bill_service_stage.serv_network_red,\n\tSQ_med_bill_service_stage.serv_recom_pay,\n\tSQ_med_bill_service_stage.serv_review_cmnt AS in_serv_review_cmnt,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_serv_review_cmnt)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_serv_review_cmnt) AS serv_review_cmnt,\n\tSQ_med_bill_service_stage.diagnose_cross_ref AS in_diagnose_cross_ref,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_diagnose_cross_ref)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_diagnose_cross_ref) AS diagnose_cross_ref\n\tFROM SQ_med_bill_service_stage\n\tLEFT JOIN LKP_MED_BILL_KEY\n\tON LKP_MED_BILL_KEY.med_bill_key = SQ_med_bill_service_stage.med_bill_id\n),\nLKP_medical_bill_service1 AS (\n\tSELECT\n\tmed_bill_serv_ak_id,\n\tserv_seq_num,\n\tserv_from_date,\n\tserv_to_date,\n\tserv_place_code,\n\tserv_type_code,\n\tbill_review_adjusted_code1,\n\tbill_review_adjusted_code2,\n\tmodified_proc_code1,\n\tmodified_proc_descript,\n\tmodified_proc_code2,\n\tmodified_proc_descript2,\n\tserv_minutes,\n\tserv_units,\n\tdrug_qty_dispensed,\n\tdrug_qty_allowed,\n\tdrug_actual_wholesale_price,\n\tproc_drug_revenue_type_ind,\n\tproc_drug_revenue_code,\n\tproc_drug_revenue_descript,\n\tserv_charge,\n\tserv_bill_review_red,\n\tserv_network_red,\n\tserv_recommend_pay,\n\tserv_review_comment,\n\tdiagnose_cross_ref,\n\tin_med_bill_ak_id,\n\tin_serv_seq_num,\n\tin_serv_units,\n\tin_proc_drug_rev_des,\n\tin_serv_charge,\n\tin_serv_red,\n\tin_serv_network_red,\n\tin_serv_recom_pay,\n\tin_serv_review_cmnt,\n\tmed_bill_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\t  MBS.med_bill_serv_ak_id as med_bill_serv_ak_id, \r\n\t\t  MBS.med_bill_ak_id as med_bill_ak_id, \r\n\t\t  MBS.serv_seq_num as serv_seq_num, \r\n\t\t  MBS.serv_from_date as serv_from_date, \r\n\t\t  MBS.serv_to_date as serv_to_date,\r\n\t\t  MBS.serv_place_code as serv_place_code,\r\n\t\t  MBS.serv_type_code as serv_type_code,\r\n\t\t  MBS.bill_review_adjusted_code1 as bill_review_adjusted_code1,\r\n\t\t  MBS.bill_review_adjusted_code2 as bill_review_adjusted_code2,\r\n\t\t  MBS.modified_proc_code1 as modified_proc_code1,\r\n\t\t  MBS.modified_proc_descript as modified_proc_descript,\r\n\t\t  MBS.modified_proc_code2 as modified_proc_code2,\r\n\t\t  MBS.modified_proc_descript2 as modified_proc_descript2,\r\n\t\t  MBS.serv_minutes as serv_minutes,\r\n\t\t  MBS.serv_units as serv_units,\r\n\t\t  MBS.drug_qty_dispensed as drug_qty_dispensed,\r\n\t\t  MBS.drug_qty_allowed as drug_qty_allowed,\r\n\t\t  MBS.drug_actual_wholesale_price as drug_actual_wholesale_price,\r\n\t\t  MBS.proc_drug_revenue_type_ind as proc_drug_revenue_type_ind,\r\n\t\t  MBS.proc_drug_revenue_code as proc_drug_revenue_code,\r\n\t\t  MBS.proc_drug_revenue_descript as proc_drug_revenue_descript,\r\n\t\t  MBS.serv_charge as serv_charge,\r\n\t\t  MBS.serv_bill_review_red as serv_bill_review_red,\r\n\t\t  MBS.serv_network_red as serv_network_red,\r\n\t\t  MBS.serv_recommend_pay as serv_recommend_pay,\r\n\t\t  MBS.serv_review_comment as serv_review_comment,\r\n\t\t  MBS.diagnose_cross_ref as diagnose_cross_ref \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill_service MBS\r\n\t\tWHERE MBS.crrnt_snpsht_flag = 1 AND MBS.source_sys_id = 'DCT'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY med_bill_ak_id,serv_seq_num,serv_units,serv_charge,proc_drug_revenue_descript,serv_bill_review_red,serv_network_red,serv_recommend_pay,serv_review_comment ORDER BY med_bill_serv_ak_id) = 1\n),\nSEQ_medical_bill_service_ak_id AS (\n\tCREATE SEQUENCE SEQ_medical_bill_service_ak_id\n\tSTART = 7000000\n\tINCREMENT = 1;\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_ASSIGN_DEFAULTS1.med_bill_ak_id,\n\tEXP_ASSIGN_DEFAULTS1.serv_seq_num,\n\tEXP_ASSIGN_DEFAULTS1.serv_from_date,\n\tEXP_ASSIGN_DEFAULTS1.serv_to_date,\n\tEXP_ASSIGN_DEFAULTS1.serv_place_code,\n\tEXP_ASSIGN_DEFAULTS1.serv_type_code,\n\tEXP_ASSIGN_DEFAULTS1.adjusted_code1,\n\tEXP_ASSIGN_DEFAULTS1.adjusted_code2,\n\tEXP_ASSIGN_DEFAULTS1.mod_proc_code1,\n\tEXP_ASSIGN_DEFAULTS1.mod_proc_descript1,\n\tEXP_ASSIGN_DEFAULTS1.mod_proc_code2,\n\tEXP_ASSIGN_DEFAULTS1.mod_proc_descript2,\n\tEXP_ASSIGN_DEFAULTS1.serv_minutes,\n\tEXP_ASSIGN_DEFAULTS1.serv_units,\n\tEXP_ASSIGN_DEFAULTS1.drug_qty_dispensed,\n\tEXP_ASSIGN_DEFAULTS1.drug_qty_allowed,\n\tEXP_ASSIGN_DEFAULTS1.drug_awp,\n\tEXP_ASSIGN_DEFAULTS1.proc_drug_rev_ind,\n\tEXP_ASSIGN_DEFAULTS1.proc_drug_rev_code,\n\tEXP_ASSIGN_DEFAULTS1.proc_drug_rev_des,\n\tEXP_ASSIGN_DEFAULTS1.serv_charge,\n\tEXP_ASSIGN_DEFAULTS1.serv_red,\n\tEXP_ASSIGN_DEFAULTS1.serv_network_red,\n\tEXP_ASSIGN_DEFAULTS1.serv_recom_pay,\n\tEXP_ASSIGN_DEFAULTS1.serv_review_cmnt,\n\tEXP_ASSIGN_DEFAULTS1.diagnose_cross_ref,\n\tSEQ_medical_bill_service_ak_id.NEXTVAL,\n\tLKP_medical_bill_service1.med_bill_serv_ak_id AS LKP_med_bill_serv_ak_id,\n\t-- *INF*: IIF(ISNULL(LKP_med_bill_serv_ak_id)\r\n\t--    , NEXTVAL\r\n\t-- -- else --\r\n\t--    , LKP_med_bill_serv_ak_id\r\n\t-- )\r\n\t-- \n\tIFF(LKP_med_bill_serv_ak_id IS NULL, NEXTVAL, LKP_med_bill_serv_ak_id) AS out_med_bill_serv_ak_id,\n\tLKP_medical_bill_service1.serv_from_date AS LKP_serv_from_date,\n\tLKP_medical_bill_service1.serv_to_date AS LKP_serv_to_date,\n\tLKP_medical_bill_service1.serv_place_code AS LKP_serv_place_code,\n\tLKP_medical_bill_service1.serv_type_code AS LKP_serv_type_code,\n\tLKP_medical_bill_service1.bill_review_adjusted_code1 AS LKP_bill_review_adjusted_code1,\n\tLKP_medical_bill_service1.bill_review_adjusted_code2 AS LKP_bill_review_adjusted_code2,\n\tLKP_medical_bill_service1.modified_proc_code1 AS LKP_modified_proc_code1,\n\tLKP_medical_bill_service1.modified_proc_descript AS LKP_modified_proc_descript1,\n\tLKP_medical_bill_service1.modified_proc_code2 AS LKP_modified_proc_code2,\n\tLKP_medical_bill_service1.modified_proc_descript2 AS LKP_modified_proc_descript2,\n\tLKP_medical_bill_service1.serv_minutes AS LKP_serv_minutes,\n\tLKP_medical_bill_service1.serv_units AS LKP_serv_units,\n\tLKP_medical_bill_service1.drug_qty_dispensed AS LKP_drug_qty_dispensed,\n\tLKP_medical_bill_service1.drug_qty_allowed AS LKP_drug_qty_allowed,\n\tLKP_medical_bill_service1.drug_actual_wholesale_price AS LKP_drug_actual_wholesale_price,\n\tLKP_medical_bill_service1.proc_drug_revenue_type_ind AS LKP_proc_drug_revenue_type_ind,\n\tLKP_medical_bill_service1.proc_drug_revenue_code AS LKP_proc_drug_revenue_code,\n\tLKP_medical_bill_service1.proc_drug_revenue_descript AS LKP_proc_drug_revenue_descript,\n\tLKP_medical_bill_service1.serv_charge AS LKP_serv_charge,\n\tLKP_medical_bill_service1.serv_bill_review_red AS LKP_serv_bill_review_red,\n\tLKP_medical_bill_service1.serv_network_red AS LKP_serv_network_red,\n\tLKP_medical_bill_service1.serv_recommend_pay AS LKP_serv_recommend_pay,\n\tLKP_medical_bill_service1.serv_review_comment AS LKP_serv_review_comment,\n\tLKP_medical_bill_service1.diagnose_cross_ref AS LKP_diagnose_cross_ref,\n\t-- *INF*: iif(isnull(LKP_med_bill_serv_ak_id)\r\n\t--    , 'NEW'\r\n\t-- -- else --\r\n\t--    , iif(\r\n\t-- \tLKP_serv_from_date  != serv_from_date OR \r\n\t-- \tLKP_serv_to_date != serv_to_date OR \r\n\t--      ltrim(rtrim(LKP_serv_place_code)) != ltrim(rtrim(serv_place_code))  OR\r\n\t--      ltrim(rtrim(LKP_serv_type_code)) != ltrim(rtrim(serv_type_code))  OR\r\n\t--      ltrim(rtrim(LKP_bill_review_adjusted_code1)) != ltrim(rtrim(adjusted_code1))  OR\r\n\t--      ltrim(rtrim(LKP_bill_review_adjusted_code2)) != ltrim(rtrim(adjusted_code2))  OR\r\n\t--      ltrim(rtrim(LKP_modified_proc_code1)) != ltrim(rtrim(mod_proc_code1))  OR\r\n\t--      ltrim(rtrim(LKP_modified_proc_descript1)) != ltrim(rtrim(mod_proc_descript1))  OR\r\n\t--      ltrim(rtrim(LKP_modified_proc_code2)) != ltrim(rtrim(mod_proc_code2))  OR\r\n\t--      ltrim(rtrim(LKP_modified_proc_descript2)) != ltrim(rtrim(mod_proc_descript2))  OR \r\n\t-- \tLKP_serv_minutes != serv_minutes OR \r\n\t-- \tLKP_serv_units != serv_units OR \r\n\t-- \tLKP_drug_qty_dispensed != drug_qty_dispensed OR \r\n\t-- \tLKP_drug_qty_allowed != drug_qty_allowed OR \r\n\t-- \tLKP_drug_actual_wholesale_price != drug_awp OR \r\n\t--      ltrim(rtrim(LKP_proc_drug_revenue_type_ind)) != ltrim(rtrim(proc_drug_rev_ind))  OR\r\n\t--      ltrim(rtrim(LKP_proc_drug_revenue_code)) != ltrim(rtrim(proc_drug_rev_code))  OR\r\n\t--      ltrim(rtrim(LKP_proc_drug_revenue_descript)) != ltrim(rtrim(proc_drug_rev_des))  OR\r\n\t-- \tLKP_serv_charge != serv_charge OR \r\n\t-- \tLKP_serv_bill_review_red != serv_red OR \r\n\t-- \tLKP_serv_network_red != serv_network_red OR \r\n\t-- \tLKP_serv_recommend_pay != serv_recom_pay OR \r\n\t-- \tltrim(rtrim(LKP_serv_review_comment)) != ltrim(rtrim(serv_review_cmnt))  OR\r\n\t--      ltrim(rtrim(LKP_diagnose_cross_ref)) != ltrim(rtrim(diagnose_cross_ref))\r\n\t--         , 'UPDATE'\r\n\t--    -- else --\r\n\t--         , 'NOCHANGE'\r\n\t--    )\r\n\t-- )\n\tIFF(\n\t    LKP_med_bill_serv_ak_id IS NULL, 'NEW',\n\t    IFF(\n\t        LKP_serv_from_date != serv_from_date\n\t        or LKP_serv_to_date != serv_to_date\n\t        or ltrim(rtrim(LKP_serv_place_code)) != ltrim(rtrim(serv_place_code))\n\t        or ltrim(rtrim(LKP_serv_type_code)) != ltrim(rtrim(serv_type_code))\n\t        or ltrim(rtrim(LKP_bill_review_adjusted_code1)) != ltrim(rtrim(adjusted_code1))\n\t        or ltrim(rtrim(LKP_bill_review_adjusted_code2)) != ltrim(rtrim(adjusted_code2))\n\t        or ltrim(rtrim(LKP_modified_proc_code1)) != ltrim(rtrim(mod_proc_code1))\n\t        or ltrim(rtrim(LKP_modified_proc_descript1)) != ltrim(rtrim(mod_proc_descript1))\n\t        or ltrim(rtrim(LKP_modified_proc_code2)) != ltrim(rtrim(mod_proc_code2))\n\t        or ltrim(rtrim(LKP_modified_proc_descript2)) != ltrim(rtrim(mod_proc_descript2))\n\t        or LKP_serv_minutes != serv_minutes\n\t        or LKP_serv_units != serv_units\n\t        or LKP_drug_qty_dispensed != drug_qty_dispensed\n\t        or LKP_drug_qty_allowed != drug_qty_allowed\n\t        or LKP_drug_actual_wholesale_price != drug_awp\n\t        or ltrim(rtrim(LKP_proc_drug_revenue_type_ind)) != ltrim(rtrim(proc_drug_rev_ind))\n\t        or ltrim(rtrim(LKP_proc_drug_revenue_code)) != ltrim(rtrim(proc_drug_rev_code))\n\t        or ltrim(rtrim(LKP_proc_drug_revenue_descript)) != ltrim(rtrim(proc_drug_rev_des))\n\t        or LKP_serv_charge != serv_charge\n\t        or LKP_serv_bill_review_red != serv_red\n\t        or LKP_serv_network_red != serv_network_red\n\t        or LKP_serv_recommend_pay != serv_recom_pay\n\t        or ltrim(rtrim(LKP_serv_review_comment)) != ltrim(rtrim(serv_review_cmnt))\n\t        or ltrim(rtrim(LKP_diagnose_cross_ref)) != ltrim(rtrim(diagnose_cross_ref)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(v_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(\n\t    v_changed_flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t'DCT' AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM EXP_ASSIGN_DEFAULTS1\n\tLEFT JOIN LKP_medical_bill_service1\n\tON LKP_medical_bill_service1.med_bill_ak_id = EXP_ASSIGN_DEFAULTS1.med_bill_ak_id AND LKP_medical_bill_service1.serv_seq_num = EXP_ASSIGN_DEFAULTS1.serv_seq_num AND LKP_medical_bill_service1.serv_units = EXP_ASSIGN_DEFAULTS1.serv_units AND LKP_medical_bill_service1.serv_charge = EXP_ASSIGN_DEFAULTS1.serv_charge AND LKP_medical_bill_service1.proc_drug_revenue_descript = EXP_ASSIGN_DEFAULTS1.proc_drug_rev_des AND LKP_medical_bill_service1.serv_bill_review_red = EXP_ASSIGN_DEFAULTS1.serv_red AND LKP_medical_bill_service1.serv_network_red = EXP_ASSIGN_DEFAULTS1.serv_network_red AND LKP_medical_bill_service1.serv_recommend_pay = EXP_ASSIGN_DEFAULTS1.serv_recom_pay AND LKP_medical_bill_service1.serv_review_comment = EXP_ASSIGN_DEFAULTS1.serv_review_cmnt\n),\nFIL_Insert AS (\n\tSELECT\n\tmed_bill_ak_id, \n\tserv_seq_num, \n\tserv_from_date, \n\tserv_to_date, \n\tserv_place_code, \n\tserv_type_code, \n\tadjusted_code1, \n\tadjusted_code2, \n\tmod_proc_code1, \n\tmod_proc_descript1, \n\tmod_proc_code2, \n\tmod_proc_descript2, \n\tserv_minutes, \n\tserv_units, \n\tdrug_qty_dispensed, \n\tdrug_qty_allowed, \n\tdrug_awp, \n\tproc_drug_rev_ind, \n\tproc_drug_rev_code, \n\tproc_drug_rev_des, \n\tserv_charge, \n\tserv_red, \n\tserv_network_red, \n\tserv_recom_pay, \n\tserv_review_cmnt, \n\tdiagnose_cross_ref, \n\tout_med_bill_serv_ak_id AS LKP_med_bill_serv_ak_id, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag = 'NEW' OR changed_flag = 'UPDATE'\n),\nmedical_bill_service_insert AS (\n\tINSERT INTO medical_bill_service\n\t(med_bill_serv_ak_id, med_bill_ak_id, serv_seq_num, serv_from_date, serv_to_date, serv_place_code, serv_type_code, bill_review_adjusted_code1, bill_review_adjusted_code2, modified_proc_code1, modified_proc_descript, modified_proc_code2, modified_proc_descript2, serv_minutes, serv_units, drug_qty_dispensed, drug_qty_allowed, drug_actual_wholesale_price, proc_drug_revenue_type_ind, proc_drug_revenue_code, proc_drug_revenue_descript, serv_charge, serv_bill_review_red, serv_network_red, serv_recommend_pay, serv_review_comment, diagnose_cross_ref, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tLKP_med_bill_serv_ak_id AS MED_BILL_SERV_AK_ID, \n\tMED_BILL_AK_ID, \n\tSERV_SEQ_NUM, \n\tSERV_FROM_DATE, \n\tSERV_TO_DATE, \n\tSERV_PLACE_CODE, \n\tSERV_TYPE_CODE, \n\tadjusted_code1 AS BILL_REVIEW_ADJUSTED_CODE1, \n\tadjusted_code2 AS BILL_REVIEW_ADJUSTED_CODE2, \n\tmod_proc_code1 AS MODIFIED_PROC_CODE1, \n\tmod_proc_descript1 AS MODIFIED_PROC_DESCRIPT, \n\tmod_proc_code2 AS MODIFIED_PROC_CODE2, \n\tmod_proc_descript2 AS MODIFIED_PROC_DESCRIPT2, \n\tSERV_MINUTES, \n\tSERV_UNITS, \n\tDRUG_QTY_DISPENSED, \n\tDRUG_QTY_ALLOWED, \n\tdrug_awp AS DRUG_ACTUAL_WHOLESALE_PRICE, \n\tproc_drug_rev_ind AS PROC_DRUG_REVENUE_TYPE_IND, \n\tproc_drug_rev_code AS PROC_DRUG_REVENUE_CODE, \n\tproc_drug_rev_des AS PROC_DRUG_REVENUE_DESCRIPT, \n\tSERV_CHARGE, \n\tserv_red AS SERV_BILL_REVIEW_RED, \n\tSERV_NETWORK_RED, \n\tserv_recom_pay AS SERV_RECOMMEND_PAY, \n\tserv_review_cmnt AS SERV_REVIEW_COMMENT, \n\tDIAGNOSE_CROSS_REF, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM FIL_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}