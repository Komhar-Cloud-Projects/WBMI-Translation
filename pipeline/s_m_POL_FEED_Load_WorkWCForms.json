{
    "name": "s_m_POL_FEED_Load_WorkWCForms",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WorkWCForms",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_CL_PrintDoc AS (\n\tselect \r\n\tDT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tPJ.PolicyId,\r\n\tPD.Caption,\r\n\tPD.FormName,\r\n\tPD.[Order] FormOrder,\r\n\tPD.PrintDefault,\r\n\tPD.Selected,\r\n\tPD.OnPolicy,\r\n\tPD.[Add],\r\n\tPD.[Remove]\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintDoc PD\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintJob PJ\r\n\ton PD.WB_CL_PrintJobId=PJ.WB_CL_PrintJobId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton PJ.SessionId=DL.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DL.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DL.SessionId=DT.SessionId\r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DT.State='Committed'\r\n\tand DS.Purpose='Onset'\r\n\tand DT.Type<>'Endorse'\r\n\tand PD.[Order] is NOT NULL\r\n\tand (PD.OnPolicy=1 OR PD.[Add] = 1) AND (PD.Remove is null OR PD.Remove = 0) and PD.[Order] is NOT NULL\r\n\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_SRCDataCollect AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tPolicyId,\n\tCaption,\n\tFormName,\n\tFormOrder,\n\tPrintDefault,\n\tSelected,\n\tOnPolicy,\n\tAdd,\n\tRemove\n\tFROM SQ_WB_CL_PrintDoc\n),\nSQ_WB_CL_PrintDoc_Endorse AS (\n\tselect \r\n\tDT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tPJ.PolicyId,\r\n\tPD.Caption,\r\n\tPD.FormName,\r\n\tPD.[Order] FormOrder,\r\n\tPD.PrintDefault,\r\n\tPD.Selected,\r\n\tISNULL(PD.OnPolicy,0) OnPolicy,\r\n\tISNULL(PD.[Add],0) [Add],\r\n\tISNULL(PD.[Remove],0) [Remove],\r\n\tPolKey\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintDoc PD\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintJob PJ\r\n\ton PD.WB_CL_PrintJobId=PJ.WB_CL_PrintJobId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton PJ.SessionId=DL.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DL.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DL.SessionId=DT.SessionId\r\n\tinner JOIN\r\n\t(Select PolKey,MaxHistoryID,Max(B.SessionID) MaxSessionID from\r\n\t(Select distinct WP.PolicyNumber+WP.PolicyVersionFormatted PolKey,(T.HistoryID) MaxHistoryID from WB_Policy WP\r\n\tinner join DC_Transaction T with(nolock)\r\n\ton WP.SessionId=T.SessionId\r\n\tinner join DC_Line DL with(nolock)\r\n\ton T.Sessionid=DL.Sessionid\r\n\tinner join DC_Session S\r\n\ton WP.SessionID=S.SessionID\r\n\tinner join @{pipeline().parameters.DATABASE_EXAMPLEDATA}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.History H with (NOLOCK)\r\n\ton H.HistoryID=T.HistoryID\r\n\tand S.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand T.State='Committed'\r\n\tand DL.Type='WorkersCompensation'\r\n\tand S.Purpose='Onset'\r\n\tand T.State='Committed'\r\n\tand T.Type='Endorse'\r\n\tand H.Change<>'OSEAdjustment'\r\n\t--and H.DeprecatedBy IS NULL\r\n\t--group by WP.PolicyNumber+WP.PolicyVersionFormatted\r\n\t@{pipeline().parameters.WHERE_CLAUSE_ENDORSE}\r\n\t) D\r\n\tinner join DC_Transaction A\r\n\ton A.HistoryID=D.MaxHistoryID\r\n\tinner join DC_Session B\r\n\ton A.SessionId=B.SessionId\r\n\twhere B.Purpose='Onset'\r\n\tgroup by PolKey,MaxHistoryID) C\r\n\tON C.MaxHistoryID=DT.HistoryID and C.MaxSessionID=DT.SessionId\r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DT.State='Committed'\r\n\tand DS.Purpose='Onset'\r\n\tand PD.[Order] is NOT NULL\r\n\tand DT.Type='Endorse'\r\n\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\torder by PolKey,FormName\n),\nEXPTRANS_ENDORSE AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tPolicyId,\n\tCaption,\n\tFormName,\n\tFormOrder,\n\tPrintDefault,\n\tSelected,\n\tOnPolicy,\n\tAdd,\n\tRemove,\n\tPolicyKey\n\tFROM SQ_WB_CL_PrintDoc_Endorse\n),\nSQ_WB_CL_PrintDoc_EndorseMissingForms AS (\n\tselect \r\n\tDT.HistoryID,\r\n\tDS.Purpose,\r\n\tDS.SessionId,\r\n\tPJ.PolicyId,\r\n\tPD.Caption,\r\n\tPD.FormName,\r\n\tPD.[Order] FormOrder,\r\n\tPD.PrintDefault,\r\n\tPD.Selected,\r\n\tISNULL(PD.OnPolicy,0) OnPolicy,\r\n\tISNULL(PD.[Add],0) [Add],\r\n\tISNULL(PD.[Remove],0) [Remove],\r\n\tPolKey\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintDoc PD\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CL_PrintJob PJ\r\n\ton PD.WB_CL_PrintJobId=PJ.WB_CL_PrintJobId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\ton PJ.SessionId=DL.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\ton DL.SessionId=DS.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\ton DL.SessionId=DT.SessionId\r\n\tinner JOIN\r\n\t(Select TR.HistoryID CurrHistID,TR.SessionId CurrSessionID,PolKey,D.MaxHistoryID,RANK() OVER (PARTITION BY PolKey ORDER BY TR.HistoryID DESC,P.SessionId DESC) RANK from DC_Transaction TR with (NOLOCK) \r\n\tinner join WB_Policy P with (NOLOCK)\r\n\ton P.SessionId=TR.SessionId\r\n\tinner join @{pipeline().parameters.DATABASE_EXAMPLEDATA}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.History HI with (NOLOCK)\r\n\ton HI.HistoryID=TR.HistoryID \r\n\tand HI.DeprecatedBy IS NULL\r\n\tinner join DC_Session S with (NOLOCK)\r\n\ton S.SessionId=TR.SessionId\r\n\tinner join \r\n\t(Select distinct WP.PolicyNumber+WP.PolicyVersionFormatted PolKey,Max(T.HistoryID) MaxHistoryID from WB_Policy WP\r\n\tinner join DC_Transaction T with(nolock)\r\n\ton WP.SessionId=T.SessionId\r\n\tinner join DC_Line DL with(nolock)\r\n\ton T.Sessionid=DL.Sessionid\r\n\tinner join DC_Session S\r\n\ton WP.SessionID=S.SessionID\r\n\tinner join @{pipeline().parameters.DATABASE_EXAMPLEDATA}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.History H with (NOLOCK)\r\n\ton H.HistoryID=T.HistoryID\r\n\tand S.CreateDateTime  between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand T.State='Committed'\r\n\tand DL.Type='WorkersCompensation'\r\n\tand S.Purpose='Onset'\r\n\tand T.State='Committed'\r\n\tand T.Type='Endorse'\r\n\tand H.Change<>'OSEAdjustment'\r\n\t--and H.DeprecatedBy IS NULL\r\n\tgroup by WP.PolicyNumber+WP.PolicyVersionFormatted\r\n\t@{pipeline().parameters.WHERE_CLAUSE_FORMS}\r\n\t) D\r\n\ton D.PolKey=(P.PolicyNumber+P.PolicyVersionFormatted)\r\n\twhere TR.State='Committed'\r\n\tand TR.HistoryID<>D.MaxHistoryID\r\n\t--and HI.DeprecatedBy IS NULL\r\n\tand S.Purpose='Onset' \r\n\t) B\r\n\tON B.CurrHistID=DT.HistoryID and B.CurrSessionID=DT.SessionId and B.RANK=1 \r\n\twhere DL.Type='WorkersCompensation'\r\n\tand DT.State='Committed'\r\n\tand DS.Purpose='Onset'\r\n\tand PD.[Order] is NOT NULL\r\n\tand (PD.OnPolicy=1 OR PD.[Add] = 1) AND (PD.Remove is null OR PD.Remove = 0) and PD.[Order] is NOT NULL\r\n\tand B.RANK=1\r\n\torder by PolKey,FormName\n),\nEXPTRANS_FORMS AS (\n\tSELECT\n\tHistoryID,\n\tPurpose,\n\tSessionId,\n\tPolicyId,\n\tCaption,\n\tFormName,\n\tFormOrder,\n\tPrintDefault,\n\tSelected,\n\tOnPolicy,\n\tAdd,\n\tRemove,\n\tPolicyKey\n\tFROM SQ_WB_CL_PrintDoc_EndorseMissingForms\n),\nJNR_ENDORSE AS (SELECT\n\tEXPTRANS_ENDORSE.HistoryID AS HistoryID_End, \n\tEXPTRANS_ENDORSE.Purpose AS Purpose_End, \n\tEXPTRANS_ENDORSE.SessionId AS SessionId_End, \n\tEXPTRANS_ENDORSE.PolicyId AS PolicyId_End, \n\tEXPTRANS_ENDORSE.Caption AS Caption_End, \n\tEXPTRANS_ENDORSE.FormName AS FormName_End, \n\tEXPTRANS_ENDORSE.FormOrder AS FormOrder_End, \n\tEXPTRANS_ENDORSE.PrintDefault AS PrintDefault_End, \n\tEXPTRANS_ENDORSE.Selected AS Selected_End, \n\tEXPTRANS_ENDORSE.OnPolicy AS OnPolicy_End, \n\tEXPTRANS_ENDORSE.Add AS Add_End, \n\tEXPTRANS_ENDORSE.Remove AS Remove_End, \n\tEXPTRANS_ENDORSE.PolicyKey AS PolicyKey_End, \n\tEXPTRANS_FORMS.HistoryID AS HistoryID_Forms, \n\tEXPTRANS_FORMS.Purpose AS Purpose_Forms, \n\tEXPTRANS_FORMS.SessionId AS SessionId_Forms, \n\tEXPTRANS_FORMS.PolicyId AS PolicyId_Forms, \n\tEXPTRANS_FORMS.Caption AS Caption_Forms, \n\tEXPTRANS_FORMS.FormName AS FormName_Forms, \n\tEXPTRANS_FORMS.FormOrder AS FormOrder_Forms, \n\tEXPTRANS_FORMS.PrintDefault AS PrintDefault_Forms, \n\tEXPTRANS_FORMS.Selected AS Selected_Forms, \n\tEXPTRANS_FORMS.OnPolicy AS OnPolicy_Forms, \n\tEXPTRANS_FORMS.Add AS Add_Forms, \n\tEXPTRANS_FORMS.Remove AS Remove_Forms, \n\tEXPTRANS_FORMS.PolicyKey AS PolicyKey_Forms\n\tFROM EXPTRANS_ENDORSE\n\tLEFT OUTER JOIN EXPTRANS_FORMS\n\tON EXPTRANS_FORMS.PolicyKey = EXPTRANS_ENDORSE.PolicyKey AND EXPTRANS_FORMS.FormName = EXPTRANS_ENDORSE.FormName\n),\nEXP_FormFlags AS (\n\tSELECT\n\tHistoryID_End,\n\tPurpose_End,\n\tSessionId_End,\n\tPolicyId_End,\n\tCaption_End,\n\tFormName_End,\n\tFormOrder_End,\n\tPrintDefault_End,\n\tSelected_End,\n\tOnPolicy_End,\n\tAdd_End,\n\tRemove_End,\n\tHistoryID_Forms,\n\tPurpose_Forms,\n\tSessionId_Forms,\n\tPolicyId_Forms,\n\tCaption_Forms,\n\tFormName_Forms,\n\tFormOrder_Forms,\n\tPrintDefault_Forms,\n\tSelected_Forms,\n\tOnPolicy_Forms,\n\tAdd_Forms,\n\tRemove_Forms,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Remove_End<>'1' AND (OnPolicy_End='1' OR OnPolicy_Forms='1'),'1',\r\n\t-- '0')\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    Remove_End <> '1' AND (OnPolicy_End = '1' OR OnPolicy_Forms = '1'), '1',\n\t    '0'\n\t) AS v_OnPolicy,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Remove_End<>'1' AND (Add_End='1' OR Add_Forms='1'),'1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    Remove_End <> '1' AND (Add_End = '1' OR Add_Forms = '1'), '1',\n\t    '0'\n\t) AS v_Add,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Remove_End='1','1',\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    Remove_End = '1', '1',\n\t    '0'\n\t) AS v_Remove,\n\tv_OnPolicy AS OnPolicy,\n\tv_Add AS Add,\n\tv_Remove AS Remove\n\tFROM JNR_ENDORSE\n),\nFIL_Forms AS (\n\tSELECT\n\tHistoryID_End AS HistoryID, \n\tPurpose_End AS Purpose, \n\tSessionId_End AS SessionId, \n\tPolicyId_End AS PolicyId, \n\tCaption_End AS Caption, \n\tFormName_End AS FormName, \n\tFormOrder_End AS FormOrder, \n\tPrintDefault_End AS PrintDefault, \n\tSelected_End AS Selected, \n\tOnPolicy, \n\tAdd, \n\tRemove\n\tFROM EXP_FormFlags\n\tWHERE (OnPolicy='1' OR Add = '1') AND Remove='0'\n),\nUnion AS (\n\tSELECT HistoryID, Purpose, SessionId, PolicyId, Caption, FormName, FormOrder, PrintDefault, Selected, OnPolicy, Add, Remove\n\tFROM EXP_SRCDataCollect\n\tUNION\n\tSELECT HistoryID, Purpose, SessionId, PolicyId, Caption, FormName, FormOrder, PrintDefault, Selected, OnPolicy, Add, Remove\n\tFROM FIL_Forms\n),\nLKP_LatestSession AS (\n\tSELECT\n\tSessionId,\n\tPurpose,\n\tHistoryID\n\tFROM (\n\t\tSelect distinct DT.HistoryID AS HistoryID,\r\n\t\tDS.Purpose AS Purpose,\r\n\t\tMax(DS.Sessionid) AS Sessionid\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS with(nolock)\r\n\t\ton DT.Sessionid=DS.Sessionid\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line DL with(nolock)\r\n\t\ton DT.Sessionid=DL.Sessionid\r\n\t\twhere DL.Type='WorkersCompensation'\r\n\t\tand DS.Purpose='Onset'\r\n\t\tand DT.State='Committed'\r\n\t\tand DS.CreateDateTime between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}'\r\n\t\tgroup by DT.HistoryID,DS.Purpose\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,Purpose,HistoryID ORDER BY SessionId) = 1\n),\nLKP_WorkWCTrackHistory AS (\n\tSELECT\n\tWCTrackHistoryID,\n\tAuditid,\n\tHistoryID,\n\tPurpose\n\tFROM (\n\t\tSELECT \r\n\t\tWorkWCTrackHistory.WCTrackHistoryID as WCTrackHistoryID, \r\n\t\tWorkWCTrackHistory.Auditid as Auditid, \r\n\t\tWorkWCTrackHistory.HistoryID as HistoryID, \r\n\t\tWorkWCTrackHistory.Purpose as Purpose \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkWCTrackHistory\r\n\t\torder by WorkWCTrackHistory.HistoryID,WorkWCTrackHistory.Purpose,WorkWCTrackHistory.Auditid ASC\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY HistoryID,Purpose ORDER BY WCTrackHistoryID) = 1\n),\nEXP_RecordFlagging AS (\n\tSELECT\n\tLKP_WorkWCTrackHistory.WCTrackHistoryID AS lkp_WCTrackHistoryID,\n\tLKP_WorkWCTrackHistory.Auditid AS lkp_Auditid,\n\tCURRENT_TIMESTAMP AS ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\t-- *INF*: IIF(lkp_Auditid=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND (NOT ISNULL(lkp_SessionId)),'1','0')\n\tIFF(lkp_Auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND (lkp_SessionId IS NOT NULL), '1', '0') AS FilterFlag,\n\tUnion.PolicyId,\n\tUnion.Caption,\n\tUnion.FormName,\n\tUnion.FormOrder,\n\tUnion.PrintDefault,\n\tUnion.Selected,\n\tUnion.OnPolicy,\n\tUnion.Add,\n\tUnion.Remove,\n\tLKP_LatestSession.SessionId AS lkp_SessionId\n\tFROM Union\n\tLEFT JOIN LKP_LatestSession\n\tON LKP_LatestSession.SessionId = Union.SessionId AND LKP_LatestSession.Purpose = Union.Purpose AND LKP_LatestSession.HistoryID = Union.HistoryID\n\tLEFT JOIN LKP_WorkWCTrackHistory\n\tON LKP_WorkWCTrackHistory.HistoryID = Union.HistoryID AND LKP_WorkWCTrackHistory.Purpose = Union.Purpose\n),\nFIL_ExcludeSubmittedRecords AS (\n\tSELECT\n\tlkp_WCTrackHistoryID AS WCTrackHistoryID, \n\tExtractDate, \n\tAuditid, \n\tFilterFlag, \n\tPolicyId, \n\tCaption, \n\tFormName, \n\tFormOrder, \n\tPrintDefault, \n\tSelected, \n\tOnPolicy, \n\tAdd, \n\tRemove\n\tFROM EXP_RecordFlagging\n\tWHERE FilterFlag='1'\n),\nWorkWCForms AS (\n\tTRUNCATE TABLE WorkWCForms;\n\tINSERT INTO WorkWCForms\n\t(Auditid, ExtractDate, WCTrackHistoryID, PolicyId, Caption, FormName, FormOrder, PrintDefault, Selected, OnPolicy, Add, Remove)\n\tSELECT \n\tAUDITID, \n\tEXTRACTDATE, \n\tWCTRACKHISTORYID, \n\tPOLICYID, \n\tCAPTION, \n\tFORMNAME, \n\tFORMORDER, \n\tPRINTDEFAULT, \n\tSELECTED, \n\tONPOLICY, \n\tADD, \n\tREMOVE\n\tFROM FIL_ExcludeSubmittedRecords\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DATABASE_EXAMPLEDATA": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_ENDORSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_FORMS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}