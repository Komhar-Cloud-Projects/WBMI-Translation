{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCWCCoverageMeritRatingStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCWCCoverageMeritRatingS_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_WC_CoverageMeritRating AS (\n\tWITH cte_DCWCCoverageMeritRating(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CoverageId, \r\n\tX.WC_CoverageMeritRatingId, \r\n\tX.SessionId, \r\n\tX.ALMeritRatingSelections, \r\n\tX.ARMeritRatingSelections, \r\n\tX.DEMeritRatingSelections, \r\n\tX.GAMeritRatingSelections, \r\n\tX.HIMeritRatingSelections, \r\n\tX.MAMeritRatingSelections, \r\n\tX.MEMeritRatingSelections, \r\n\tX.MIMeritRatingSelections, \r\n\tX.NYMeritRatingSelections, \r\n\tX.OKMeritRatingSelections, \r\n\tX.ORMeritRatingSelections, \r\n\tX.PAMeritRatingSelections, \r\n\tX.SDMeritRatingSelections \r\n\tFROM\r\n\tDC_WC_CoverageMeritRating X\r\n\tinner join\r\n\tcte_DCWCCoverageMeritRating Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tCoverageId,\n\tWC_CoverageMeritRatingId,\n\tSessionId,\n\tALMeritRatingSelections,\n\tARMeritRatingSelections,\n\tDEMeritRatingSelections,\n\tGAMeritRatingSelections,\n\tHIMeritRatingSelections,\n\tMAMeritRatingSelections,\n\tMEMeritRatingSelections,\n\tMIMeritRatingSelections,\n\tNYMeritRatingSelections,\n\tOKMeritRatingSelections,\n\tORMeritRatingSelections,\n\tPAMeritRatingSelections,\n\tSDMeritRatingSelections,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_WC_CoverageMeritRating\n),\nDCWCCoverageMeritRatingStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCWCCoverageMeritRatingStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCWCCoverageMeritRatingStaging\n\t(CoverageId, WC_CoverageMeritRatingId, SessionId, ALMeritRatingSelections, ARMeritRatingSelections, DEMeritRatingSelections, GAMeritRatingSelections, HIMeritRatingSelections, MAMeritRatingSelections, MEMeritRatingSelections, MIMeritRatingSelections, NYMeritRatingSelections, OKMeritRatingSelections, ORMeritRatingSelections, PAMeritRatingSelections, SDMeritRatingSelections, ExtractDate, SourceSystemId)\n\tSELECT \n\tCOVERAGEID, \n\tWC_COVERAGEMERITRATINGID, \n\tSESSIONID, \n\tALMERITRATINGSELECTIONS, \n\tARMERITRATINGSELECTIONS, \n\tDEMERITRATINGSELECTIONS, \n\tGAMERITRATINGSELECTIONS, \n\tHIMERITRATINGSELECTIONS, \n\tMAMERITRATINGSELECTIONS, \n\tMEMERITRATINGSELECTIONS, \n\tMIMERITRATINGSELECTIONS, \n\tNYMERITRATINGSELECTIONS, \n\tOKMERITRATINGSELECTIONS, \n\tORMERITRATINGSELECTIONS, \n\tPAMERITRATINGSELECTIONS, \n\tSDMERITRATINGSELECTIONS, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}