{
    "name": "m_POL_DM_Load_PolicyAuditDim",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_Load_PolicyAuditDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PolicyAudit AS (\n\tSELECT\n\t\tCurrentSnapshotFlag,\n\t\tEffectiveDate,\n\t\tExpirationDate,\n\t\tPolicyAuditAKId,\n\t\tAssignedAuditor,\n\t\tAuditFrequency,\n\t\tAuditType,\n\t\tAuditContactCity,\n\t\tAuditContactStateAbbreviation,\n\t\tPermanentOverrideFlag,\n\t\tPolicyPeriodOverrideFlag,\n\t\tFrontingPolicyFlag,\n\t\tAuditCloseOutFlag,\n\t\tAuditStatus,\n\t\tAuditableFlag,\n\t\tAssignedAuditorOveride AS AssignedAuditorOverideFlag,\n\t\tAuditTypeOverride AS AuditTypeOverrideFlag,\n\t\tAuditablePremium,\n\t\tIsAuditableFlag,\n\t\tNoncomplianceofWCPoolAudit\n\tFROM PolicyAudit\n\tWHERE PolicyAudit.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_PassThrough AS (\n\tSELECT\n\tCurrentSnapshotFlag AS i_CurrentSnapshotFlag,\n\t-- *INF*: DECODE(i_CurrentSnapshotFlag,'T','1','F','0','0')\n\tDECODE(i_CurrentSnapshotFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate,\n\tPolicyAuditAKId,\n\tAssignedAuditor,\n\tAuditFrequency,\n\tAuditType,\n\tAuditContactCity,\n\tAuditContactStateAbbreviation,\n\tPermanentOverrideFlag AS i_PermanentOverrideFlag,\n\t-- *INF*: DECODE(i_PermanentOverrideFlag,'T','1','F','0','0')\n\tDECODE(i_PermanentOverrideFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_PermanentOverrideFlag,\n\tPolicyPeriodOverrideFlag AS i_PolicyPeriodOverrideFlag,\n\t-- *INF*: DECODE(i_PolicyPeriodOverrideFlag,'T','1','F','0','0')\n\tDECODE(i_PolicyPeriodOverrideFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_PolicyPeriodOverrideFlag,\n\tFrontingPolicyFlag AS i_FrontingPolicyFlag,\n\t-- *INF*: DECODE(i_FrontingPolicyFlag,'T','1','F','0','0')\n\tDECODE(i_FrontingPolicyFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_FrontingPolicyFlag,\n\tAuditCloseOutFlag AS i_AuditCloseOutFlag,\n\t-- *INF*: DECODE(i_AuditCloseOutFlag,'T','1','F','0','0')\n\tDECODE(i_AuditCloseOutFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_AuditCloseOutFlag,\n\tAuditStatus,\n\tAuditableFlag AS i_AuditableFlag,\n\t-- *INF*: DECODE(i_AuditableFlag,'T','1','F','0','0')\n\tDECODE(i_AuditableFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_AuditableFlag,\n\tAssignedAuditorOverideFlag AS i_AssignedAuditorOverideFlag,\n\t-- *INF*: i_AssignedAuditorOverideFlag\r\n\t-- --DECODE(i_AssignedAuditorOverideFlag,'T','1','F','0','0')\n\ti_AssignedAuditorOverideFlag AS o_AssignedAuditorOverideFlag,\n\tAuditTypeOverrideFlag AS i_AuditTypeOverrideFlag,\n\t-- *INF*: i_AuditTypeOverrideFlag\r\n\t-- --DECODE(i_AuditTypeOverrideFlag,'T','1','F','0','0')\n\ti_AuditTypeOverrideFlag AS o_AuditTypeOverrideFlag,\n\tAuditablePremium,\n\tIsAuditableFlag AS i_IsAuditableFlag,\n\t-- *INF*: DECODE(i_IsAuditableFlag,'T','1','F','0','0')\n\tDECODE(i_IsAuditableFlag,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_IsAuditableFlag,\n\tNoncomplianceofWCPoolAudit AS i_NoncomplianceofWCPoolAudit,\n\t-- *INF*: DECODE(i_NoncomplianceofWCPoolAudit,'T','1','F','0','0')\n\tDECODE(i_NoncomplianceofWCPoolAudit,\n\t'T', '1',\n\t'F', '0',\n\t'0') AS o_NoncomplianceofWCPoolAudit\n\tFROM SQ_PolicyAudit\n),\nLKP_PolicyAuditDim AS (\n\tSELECT\n\tPolicyAuditDimId,\n\tEDWPolicyAuditAKId,\n\tEffectiveDate\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyAuditDimId,\n\t\t\tEDWPolicyAuditAKId,\n\t\t\tEffectiveDate\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyAuditDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPolicyAuditAKId,EffectiveDate ORDER BY PolicyAuditDimId) = 1\n),\nLKP_sup_state AS (\n\tSELECT\n\tstate_descript,\n\tstate_code\n\tFROM (\n\t\tSELECT \n\t\t\tstate_descript,\n\t\t\tstate_code\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY state_descript) = 1\n),\nEXPTRANS AS (\n\tSELECT\n\tLKP_PolicyAuditDim.PolicyAuditDimId,\n\t-- *INF*: IIF(ISNULL(PolicyAuditDimId),1,0)\n\tIFF(PolicyAuditDimId IS NULL, 1, 0) AS v_ChangeFlag,\n\tEXP_PassThrough.o_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\tEXP_PassThrough.EffectiveDate,\n\tEXP_PassThrough.ExpirationDate,\n\tEXP_PassThrough.PolicyAuditAKId AS EDWPolicyAuditAKId,\n\tEXP_PassThrough.AssignedAuditor,\n\tEXP_PassThrough.AuditFrequency,\n\tEXP_PassThrough.AuditType,\n\tEXP_PassThrough.AuditContactCity,\n\tEXP_PassThrough.AuditContactStateAbbreviation,\n\tLKP_sup_state.state_descript AS i_AuditContactStateDescription,\n\t-- *INF*: IIF(NOT ISNULL(i_AuditContactStateDescription),i_AuditContactStateDescription,'N/A')\n\tIFF(NOT i_AuditContactStateDescription IS NULL, i_AuditContactStateDescription, 'N/A') AS o_AuditContactStateDescription,\n\tEXP_PassThrough.o_PermanentOverrideFlag AS PermanentOverrideFlag,\n\tEXP_PassThrough.o_PolicyPeriodOverrideFlag AS PolicyPeriodOverrideFlag,\n\tEXP_PassThrough.o_FrontingPolicyFlag AS FrontingPolicyFlag,\n\tEXP_PassThrough.o_AuditCloseOutFlag AS AuditCloseOutFlag,\n\tEXP_PassThrough.AuditStatus,\n\tEXP_PassThrough.o_AuditableFlag AS AuditableFlag,\n\tEXP_PassThrough.o_AssignedAuditorOverideFlag AS AssignedAuditorOverideFlag,\n\tEXP_PassThrough.o_AuditTypeOverrideFlag AS AuditTypeOverrideFlag,\n\tEXP_PassThrough.AuditablePremium,\n\tEXP_PassThrough.o_IsAuditableFlag AS IsAuditableFlag,\n\tEXP_PassThrough.o_NoncomplianceofWCPoolAudit,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\tv_ChangeFlag AS o_ChangeFlag\n\tFROM EXP_PassThrough\n\tLEFT JOIN LKP_PolicyAuditDim\n\tON LKP_PolicyAuditDim.EDWPolicyAuditAKId = EXP_PassThrough.PolicyAuditAKId AND LKP_PolicyAuditDim.EffectiveDate = EXP_PassThrough.EffectiveDate\n\tLEFT JOIN LKP_sup_state\n\tON LKP_sup_state.state_code = EXP_PassThrough.AuditContactStateAbbreviation\n),\nRTR_Insert AS (\n\tSELECT\n\tPolicyAuditDimId,\n\tCurrentSnapshotFlag,\n\to_AuditId AS AuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\tEDWPolicyAuditAKId,\n\tAssignedAuditor,\n\tAuditFrequency,\n\tAuditType,\n\tAuditContactCity,\n\tAuditContactStateAbbreviation,\n\to_AuditContactStateDescription AS AuditContactStateDescription,\n\tPermanentOverrideFlag,\n\tPolicyPeriodOverrideFlag,\n\tFrontingPolicyFlag,\n\tAuditCloseOutFlag,\n\tAuditStatus,\n\tAuditableFlag,\n\tAssignedAuditorOverideFlag,\n\tAuditTypeOverrideFlag,\n\tAuditablePremium,\n\tIsAuditableFlag,\n\to_ChangeFlag AS ChangeFlag,\n\to_NoncomplianceofWCPoolAudit\n\tFROM EXPTRANS\n),\nRTR_Insert_INSERT AS (SELECT * FROM RTR_Insert WHERE ChangeFlag=1),\nRTR_Insert_UPDATE AS (SELECT * FROM RTR_Insert WHERE ChangeFlag=0),\nUPDTRANS AS (\n\tSELECT\n\tPolicyAuditDimId, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tEDWPolicyAuditAKId, \n\tAssignedAuditor, \n\tAuditFrequency, \n\tAuditType, \n\tAuditContactCity, \n\tAuditContactStateAbbreviation, \n\tAuditContactStateDescription, \n\tPermanentOverrideFlag, \n\tPolicyPeriodOverrideFlag, \n\tFrontingPolicyFlag, \n\tAuditCloseOutFlag, \n\tAuditStatus, \n\tAuditableFlag, \n\tAssignedAuditorOverideFlag, \n\tAuditTypeOverrideFlag, \n\tAuditablePremium, \n\tIsAuditableFlag, \n\to_NoncomplianceofWCPoolAudit\n\tFROM RTR_Insert_UPDATE\n),\nTGT_PolicyAuditDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyAuditDim AS T\n\tUSING UPDTRANS AS S\n\tON T.PolicyAuditDimId = S.PolicyAuditDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.AuditID = S.AuditID, T.EffectiveDate = S.EffectiveDate, T.ExpirationDate = S.ExpirationDate, T.CreatedDate = S.CreatedDate, T.ModifiedDate = S.ModifiedDate, T.EDWPolicyAuditAKId = S.EDWPolicyAuditAKId, T.AssignedAuditor = S.AssignedAuditor, T.AuditFrequency = S.AuditFrequency, T.AuditType = S.AuditType, T.AuditContactCity = S.AuditContactCity, T.AuditContactStateAbbreviation = S.AuditContactStateAbbreviation, T.AuditContactStateDescription = S.AuditContactStateDescription, T.PermanentOverrideFlag = S.PermanentOverrideFlag, T.PolicyPeriodOverrideFlag = S.PolicyPeriodOverrideFlag, T.FrontingPolicyFlag = S.FrontingPolicyFlag, T.AuditCloseOutFlag = S.AuditCloseOutFlag, T.AuditStatus = S.AuditStatus, T.AuditableFlag = S.AuditableFlag, T.AssignedAuditorOveride = S.AssignedAuditorOverideFlag, T.AuditTypeOverride = S.AuditTypeOverrideFlag, T.AuditablePremium = S.AuditablePremium, T.IsAuditableFlag = S.IsAuditableFlag, T.NoncomplianceofWCPoolAudit = S.o_NoncomplianceofWCPoolAudit\n),\nTGT_PolicyAuditDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyAuditDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, EDWPolicyAuditAKId, AssignedAuditor, AuditFrequency, AuditType, AuditContactCity, AuditContactStateAbbreviation, AuditContactStateDescription, PermanentOverrideFlag, PolicyPeriodOverrideFlag, FrontingPolicyFlag, AuditCloseOutFlag, AuditStatus, AuditableFlag, AssignedAuditorOveride, AuditTypeOverride, AuditablePremium, IsAuditableFlag, NoncomplianceofWCPoolAudit)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tEDWPOLICYAUDITAKID, \n\tASSIGNEDAUDITOR, \n\tAUDITFREQUENCY, \n\tAUDITTYPE, \n\tAUDITCONTACTCITY, \n\tAUDITCONTACTSTATEABBREVIATION, \n\tAUDITCONTACTSTATEDESCRIPTION, \n\tPERMANENTOVERRIDEFLAG, \n\tPOLICYPERIODOVERRIDEFLAG, \n\tFRONTINGPOLICYFLAG, \n\tAUDITCLOSEOUTFLAG, \n\tAUDITSTATUS, \n\tAUDITABLEFLAG, \n\tAssignedAuditorOverideFlag AS ASSIGNEDAUDITOROVERIDE, \n\tAuditTypeOverrideFlag AS AUDITTYPEOVERRIDE, \n\tAUDITABLEPREMIUM, \n\tISAUDITABLEFLAG, \n\to_NoncomplianceofWCPoolAudit AS NONCOMPLIANCEOFWCPOOLAUDIT\n\tFROM RTR_Insert_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246511"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905531"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604506"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:57:01"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 03:31:13"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}