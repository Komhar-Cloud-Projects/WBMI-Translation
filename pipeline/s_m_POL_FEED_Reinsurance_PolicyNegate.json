{
    "name": "s_m_POL_FEED_Reinsurance_PolicyNegate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Reinsurance_PolicyNegate",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupReinsuranceUmbrellaLayer AS (\n\tSELECT\n\tReinsuranceUmbrellaLayer,\n\tStrategicProfitCenterAbbreviation,\n\tSourceUmbrellaLayerStart,\n\tSourceUmbrellaLayerEnd,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tReinsuranceUmbrellaLayer,\n\t\t\tStrategicProfitCenterAbbreviation,\n\t\t\tSourceUmbrellaLayerStart,\n\t\t\tSourceUmbrellaLayerEnd,\n\t\t\tEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM SapiensReinsuranceUmbrellaLayer\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAbbreviation,SourceUmbrellaLayerStart,SourceUmbrellaLayerEnd,EffectiveDate,ExpirationDate ORDER BY ReinsuranceUmbrellaLayer DESC) = 1\n),\nLKP_Existing_Policy AS (\n\tSELECT\n\tPOLICYDATES,\n\tPOLICY_NO,\n\tAccountingProductCode,\n\tAnnualStatementLineCode,\n\tCompanyCode,\n\tLineOfBusiness,\n\tStrategicProfitCenter,\n\tProductCode,\n\tRiskState,\n\tSubASLCode,\n\tReinsuranceUmbrellaLayer\n\tFROM (\n\t\tselect ltrim(rtrim(A.POLICY_NO)) as POLICY_NO,ltrim(rtrim(AccountingProductCode)) as AccountingProductCode, ltrim(rtrim(AnnualStatementLineCode)) as AnnualStatementLineCode, ltrim(rtrim(CompanyCode)) as CompanyCode, ltrim(rtrim(InsuredName)) as InsuredName, ltrim(rtrim(LineOfBusiness)) as LineOfBusiness, ltrim(rtrim(StrategicProfitCenter)) as StrategicProfitCenter, ltrim(rtrim(ProductCode)) as ProductCode, ltrim(rtrim(RiskState)) as RiskState, ltrim(rtrim(ISNULL(SubASLCode,'0'))) as SubASLCode, RatingPlanAbbrevation as RatingPlanAbbrevation,ltrim(rtrim(ISNULL(ReinsuranceUmbrellaLayer,'0'))) as ReinsuranceUmbrellaLayer ,C.POLICYDATES as POLICYDATES\r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract A\r\n\t\tinner join (select SOURCE_SEQ_NUM,ACP AccountingProductCode,ASL AnnualStatementLineCode,COM CompanyCode,INM InsuredName,LOB LineOfBusiness,PCN StrategicProfitCenter,PDT ProductCode,RKS RiskState,SAS SubASLCode,ZRP RatingPlanAbbrevation,SNA ReinsuranceUmbrellaLayer,ZRS EntryProcess from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceAttributesExtract\r\n\t\tpivot\r\n\t\t(\r\n\t\tmax(ATTR_VAL)\r\n\t\tfor ATTR_CODE in (ACP,ASL,COM,INM,LOB,PCN,PDT,RKS,SAS,ZRP,SNA,ZRS)\r\n\t\t) PV) B\r\n\t\ton A.SOURCE_SEQ_NUM=B.SOURCE_SEQ_NUM\r\n\t\tinner join (select cast(PLS as varchar)+'|'+cast(PLE as varchar)+'|' POLICYDATES,SOURCE_SEQ_NUM \r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceDatesExtract\r\n\t\tpivot\r\n\t\t(\r\n\t\tmax(DATE_VALUE)\r\n\t\tfor DATE_CODE in (PLE,PLS)\r\n\t\t) DT\r\n\t\twhere PLE is not NULL and PLS is not NULL) C\r\n\t\ton A.SOURCE_SEQ_NUM=C.SOURCE_SEQ_NUM\r\n\t\tinner join\r\n\t\t(select POLICY_NO,max(case when DOCUMENT_TYPE='N' then SOURCE_SEQ_NUM else 0 end) max_SOURCE_SEQ_NUM \r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract E\r\n\t\twhere DATA_SOURCE='SRP'\r\n\t\tgroup by POLICY_NO) D\r\n\t\ton A.POLICY_NO=D.POLICY_NO\r\n\t\tand A.SOURCE_SEQ_NUM>max_SOURCE_SEQ_NUM\r\n\t\twhere DATA_SOURCE='SRP'\r\n\t\tand DOCUMENT_TYPE='P'\r\n\t\tand EntryProcess='POLICY-CLAIMSMADE'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY POLICY_NO,AccountingProductCode,AnnualStatementLineCode,CompanyCode,LineOfBusiness,StrategicProfitCenter,ProductCode,RiskState,SubASLCode,ReinsuranceUmbrellaLayer ORDER BY POLICYDATES DESC) = 1\n),\nSQ_Shortcut_to_WorkSapiensPolicyRestateClaimsMade AS (\n\tselect \r\n\tltrim(rtrim(A.POLICY_NO)) as POLICY_NO,\r\n\tltrim(rtrim(AccountingProductCode)) as AccountingProductCode,\r\n\t ltrim(rtrim(AnnualStatementLineCode)) as AnnualStatementLineCode,\r\n\t ltrim(rtrim(CompanyCode)) as CompanyCode,\r\n\t ltrim(rtrim(InsuredName)) as InsuredName,\r\n\t ltrim(rtrim(LineOfBusiness)) as LineOfBusiness,\r\n\t ltrim(rtrim(StrategicProfitCenter)) as StrategicProfitCenter,\r\n\t ltrim(rtrim(ProductCode)) as ProductCode,\r\n\t ltrim(rtrim(RiskState)) as RiskState,\r\n\t ltrim(rtrim(ISNULL(SubASLCode,'0'))) as SubASLCode,\r\n\t RatingPlanAbbrevation as RatingPlanAbbrevation,\r\n\t ltrim(rtrim(ISNULL(ReinsuranceUmbrellaLayer,'0'))) as ReinsuranceUmbrellaLayer ,\r\n\t C.POLICYDATES as POLICYDATES\r\n\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract A\r\n\tinner join (select SOURCE_SEQ_NUM,ACP AccountingProductCode,ASL AnnualStatementLineCode,COM CompanyCode,INM InsuredName,LOB LineOfBusiness,PCN StrategicProfitCenter,PDT ProductCode,RKS RiskState,SAS SubASLCode,ZRP RatingPlanAbbrevation,SNA ReinsuranceUmbrellaLayer,ZRS EntryProcess from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceAttributesExtract\r\n\tpivot\r\n\t(\r\n\tmax(ATTR_VAL)\r\n\tfor ATTR_CODE in (ACP,ASL,COM,INM,LOB,PCN,PDT,RKS,SAS,ZRP,SNA,ZRS)\r\n\t) PV) B\r\n\ton A.SOURCE_SEQ_NUM=B.SOURCE_SEQ_NUM\r\n\tinner join (select cast(PLS as varchar)+'|'+cast(PLE as varchar)+'|' POLICYDATES,SOURCE_SEQ_NUM \r\n\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceDatesExtract\r\n\tpivot\r\n\t(\r\n\tmax(DATE_VALUE)\r\n\tfor DATE_CODE in (PLE,PLS)\r\n\t) DT\r\n\twhere PLE is not NULL and PLS is not NULL) C\r\n\ton A.SOURCE_SEQ_NUM=C.SOURCE_SEQ_NUM\r\n\tinner join\r\n\t(select POLICY_NO,max(case when DOCUMENT_TYPE='N' then SOURCE_SEQ_NUM else 0 end) max_SOURCE_SEQ_NUM \r\n\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract E\r\n\twhere DATA_SOURCE='SRP'\r\n\tgroup by POLICY_NO) D\r\n\ton A.POLICY_NO=D.POLICY_NO\r\n\tand A.SOURCE_SEQ_NUM>max_SOURCE_SEQ_NUM\r\n\twhere DATA_SOURCE='SRP'\r\n\tand DOCUMENT_TYPE='P'\r\n\tand EntryProcess='POLICY-CLAIMSMADE'\n),\nexp_Source_Fields AS (\n\tSELECT\n\tPolicyKey,\n\tAccountingProductCode,\n\tAnnualStatementLineCode,\n\tCompanyCode,\n\tInsuredName,\n\tLineOfBusiness,\n\tStrategicProfitCenter,\n\tProductCode,\n\tRiskState,\n\tSubASLCode,\n\tRatingPlanAbbrevation,\n\tReinsuranceUmbrellaLayer,\n\tPolicyDates,\n\tCURRENT_TIMESTAMP AS CreatedDate\n\tFROM SQ_Shortcut_to_WorkSapiensPolicyRestateClaimsMade\n),\nWorkSapiensPolicyRestateClaimsMade1 AS (\n\tTRUNCATE TABLE Shortcut_to_WorkSapiensPolicyRestateClaimsMade;\n\tINSERT INTO Shortcut_to_WorkSapiensPolicyRestateClaimsMade\n\t(PolicyKey, AccountingProductCode, AnnualStatementLineCode, CompanyCode, InsuredName, LineOfBusiness, StrategicProfitCenter, ProductCode, RiskState, SubASLCode, RatingPlanAbbrevation, ReinsuranceUmbrellaLayer, PolicyDates, CreatedDate)\n\tSELECT \n\tPOLICYKEY, \n\tACCOUNTINGPRODUCTCODE, \n\tANNUALSTATEMENTLINECODE, \n\tCOMPANYCODE, \n\tINSUREDNAME, \n\tLINEOFBUSINESS, \n\tSTRATEGICPROFITCENTER, \n\tPRODUCTCODE, \n\tRISKSTATE, \n\tSUBASLCODE, \n\tRATINGPLANABBREVATION, \n\tREINSURANCEUMBRELLALAYER, \n\tPOLICYDATES, \n\tCREATEDDATE\n\tFROM exp_Source_Fields\n),\nSQ_PremiumMasterFact AS (\n\tDeclare @Date1 as datetime,\r\n\t                 @Date2 as datetime\r\n\tSet @Date1=dateadd(dd,-1,dateadd(MM,-@{pipeline().parameters.NO_OF_MONTHS},dateadd(mm,Datediff(mm,0,getdate()),0)))\r\n\tSet @Date2='2001-01-01 00:00:00'\r\n\t\r\n\tselect Pol_key,\r\n\tPremiumTransactionCode,PremiumTypeCode,\r\n\tAccounting_Date,PersonalUmbrellaLayer2Premium,PersonalUmbrellaLayer1Premium,\r\n\tPremiumMasterDirectWrittenPremium,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,\r\n\tCASE \r\n\t\tWHEN asl_code in ('440','500') \r\n\t\t\tTHEN CASE WHEN sub_asl_code = 'N/A' THEN NULL ELSE sub_asl_code END\r\n\t\tWHEN asl_code = '220' then '220'\r\n\t\tELSE NULL\r\n\tEND AS sub_asl_code,\r\n\tstate_of_domicile_code,\r\n\tEndorsement_Start_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEDWPremiumMasterCalculationPKID,\r\n\tUmbrellaLayer,\r\n\tPolicy_Issue_Date,\r\n\tPolicy_Start_Date,\r\n\tPolicy_End_Date,\r\n\tRatingPlanAbbreviation,\r\n\tName\r\n\tfrom\r\n\t(\r\n\tselect Pol_Sym,Pol_key,\r\n\tPremiumTransactionCode,PremiumTypeCode,\r\n\tAccounting_Date,PersonalUmbrellaLayer2Premium,PersonalUmbrellaLayer1Premium,\r\n\tPremiumMasterDirectWrittenPremium,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,sub_asl_code,state_of_domicile_code,\r\n\tEndorsement_Start_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEDWPremiumMasterCalculationPKID,\r\n\tUmbrellaLayer,\r\n\tmin(Policy_Issue_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code)  Policy_Issue_Date,\r\n\tmin(Policy_Start_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code) Policy_Start_Date,\r\n\tmax(Policy_End_Date) over(partition by Pol_key,ProductCode,StrategicProfitCenterAbbreviation,AccountingProductCode,InsuranceReferenceLineOfBusinessCode,asl_code,sub_asl_code,state_of_domicile_code) Policy_End_Date,\r\n\tRatingPlanAbbreviation,\r\n\tName,\r\n\tpol_eff_date\r\n\tfrom \r\n\t(select P.Pol_Sym,P.Pol_key,\r\n\tPTT.PremiumTransactionCode,PTT.PremiumTypeCode,\r\n\tRD.clndr_date Accounting_Date,\r\n\tcase when P.Pol_Sym<>'000' and IRD.StrategicProfitCenterAbbreviation='WB - PL' and IRD.ProductCode='890' then PM.PremiumMasterCededWrittenPremium else 0.0 end PersonalUmbrellaLayer2Premium,\r\n\tcase when P.Pol_Sym<>'000' and IRD.StrategicProfitCenterAbbreviation='WB - PL' and IRD.ProductCode='890' then PM.PremiumMasterDirectWrittenPremium-PM.PremiumMasterCededWrittenPremium else 0.0 end PersonalUmbrellaLayer1Premium,\r\n\tPM.PremiumMasterDirectWrittenPremium,\r\n\tIRD.ProductCode,\r\n\treplace(CASE WHEN IRD.StrategicProfitCenterAbbreviation = 'Argent' THEN 'A' ELSE IRD.StrategicProfitCenterAbbreviation END,' ','') StrategicProfitCenterAbbreviation,IRD.AccountingProductCode,\r\n\tIRD.InsuranceReferenceLineOfBusinessCode,\r\n\tASL.asl_code,\r\n\tCASE \r\n\t\tWHEN ASL.asl_code in ('440','500') \r\n\t\t\tTHEN CASE WHEN ASL.sub_asl_code = 'N/A' THEN NULL ELSE ASL.sub_asl_code END\r\n\t\tWHEN ASL.asl_code = '220' then '220'\r\n\t\tELSE NULL\r\n\tEND AS sub_asl_code,\r\n\tcase when IRD.InsuranceReferenceLineOfBusinessCode in ('590','812') then RL.StateProvinceCode else P.state_of_domicile_code end state_of_domicile_code,\r\n\tEFD.clndr_date Endorsement_Start_Date,\r\n\tETD.clndr_date Endorsement_Issue_Date,\r\n\tPM.EDWPremiumMasterCalculationPKID,\r\n\tISNULL(CUD.UmbrellaLayer,0) UmbrellaLayer,\r\n\tETD.clndr_date Policy_Issue_Date\r\n\t,EFD.clndr_date Policy_Start_Date\r\n\t,EXD.clndr_date Policy_End_Date,ISNULL(IRD.RatingPlanAbbreviation,'NULL') RatingPlanAbbreviation,ISNULL(CCD.Name,'NULL') Name,P.pol_eff_date\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PM\r\n\tinner JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim P\r\n\tON PM.PolicyDimID=P.pol_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactionTypeDim PTT\r\n\ton PM.PremiumTransactionTypeDimID=PTT.PremiumTransactionTypeDimID\r\n\tInner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim RD\r\n\ton PM.PremiumMasterRunDateID=RD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim EFD\r\n\ton PM.PremiumMasterCoverageEffectiveDateID=EFD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim ETD\r\n\ton PM.PremiumTransactionEnteredDateID=ETD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim IRD\r\n\ton PM.InsuranceReferenceDimID=IRD.InsuranceReferenceDimId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton PM.AnnualStatementLineDimID=ASL.asl_dim_id\r\n\tLeft join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrellaDim CUD\r\n\ton PM.CoverageDetailDimId=CUD.CoverageDetailDimId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim EXD\r\n\ton PM.PremiumMasterCoverageExpirationDateID=EXD.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim CCD\r\n\ton PM.ContractCustomerDimID=CCD.contract_cust_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocationDim RL\r\n\ton PM.RiskLocationDimID=RL.RiskLocationDimID\r\n\tinner join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkSapiensPolicyRestateClaimsMade WT\r\n\ton WT.PolicyKey=P.Pol_key\r\n\t--where (PM.PremiumMasterDirectWrittenPremium<>0.0 or PM.PremiumMasterCededWrittenPremium<>0.0)\r\n\t@{pipeline().parameters.WHERE}\r\n\t) A ) A \r\n\tWhere A.Accounting_Date between @Date2 and @Date1\r\n\tand A.pol_eff_date>=@Date2\r\n\tand case when Pol_Sym<>'000' and StrategicProfitCenterAbbreviation='WB-PL' and ProductCode='890' then 1 when PremiumTypeCode='D' then 1 else 0 end=1\r\n\tOrder By  Pol_key,\r\n\tProductCode,\r\n\tStrategicProfitCenterAbbreviation,\r\n\tAccountingProductCode,\r\n\tInsuranceReferenceLineOfBusinessCode,\r\n\tasl_code,\r\n\tsub_asl_code,\r\n\tstate_of_domicile_code,\r\n\tPolicy_Issue_Date,\r\n\tPolicy_Start_Date,\r\n\tPolicy_End_Date,\r\n\tAccounting_Date,\r\n\tEndorsement_Issue_Date,\r\n\tEndorsement_Start_Date,\r\n\tEDWPremiumMasterCalculationPKID\n),\nEXP_Src_DataCollect AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer2Premium,\n\tPersonalUmbrellaLayer1Premium,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\t2 AS PersonalUmbrellaLayer2,\n\t1 AS PersonalUmbrellaLayer1,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\t-- *INF*: IIF(substr(pol_key,1,3)<>'000' and StrategicProfitCenterAbbreviation='WB-PL' and ProductCode='890','Y','N')\n\tIFF(\n\t    substr(pol_key, 1, 3) <> '000'\n\t    and StrategicProfitCenterAbbreviation = 'WB-PL'\n\t    and ProductCode = '890',\n\t    'Y',\n\t    'N'\n\t) AS Split_Flag\n\tFROM SQ_PremiumMasterFact\n),\nRTR_PLSplit AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer2Premium,\n\tPersonalUmbrellaLayer1Premium,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tPersonalUmbrellaLayer2,\n\tPersonalUmbrellaLayer1,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\tSplit_Flag\n\tFROM EXP_Src_DataCollect\n),\nRTR_PLSplit_PersonalLinesUmbrella AS (SELECT * FROM RTR_PLSplit WHERE Split_Flag='Y'),\nRTR_PLSplit_CommercialLines AS (SELECT * FROM RTR_PLSplit WHERE Split_Flag='N'),\nEXP_CLines_DataCollect AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM RTR_PLSplit_CommercialLines\n),\nEXP_PLines_DataCollect AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tPersonalUmbrellaLayer1Premium,\n\tPersonalUmbrellaLayer2Premium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tPersonalUmbrellaLayer AS PersonalUmbrellaLayer1,\n\tPersonalUmbrellaLayer2,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname\n\tFROM RTR_PLSplit_PersonalLinesUmbrella\n),\nNRM_Covert_Columns_Rows AS (\n),\nFIL_Drop_Zero_Premiums AS (\n\tSELECT\n\tPol_Key, \n\tPremiumTransactionCode, \n\tPremiumTypeCode, \n\tAccountingDate, \n\tMonthlyDirectWrittenPremium, \n\tProductCode, \n\tStrategicProfitCenterAbbrevation, \n\tAccountingProductCode, \n\tInsuranceReferenceLineCode, \n\tasl_code, \n\tsub_asl_code, \n\tstate_of_domicile_code, \n\tEndorsement_Start_Date, \n\tEndorsement_Issue_Date, \n\tEDWPremiumMasterCalculationPKID, \n\tUmbrellaLayer, \n\tPolicy_Issue_Date, \n\tPolicy_Start_Date, \n\tPolicy_End_Date, \n\tRatingPlanAbbrevation, \n\tname\n\tFROM NRM_Covert_Columns_Rows\n\tWHERE MonthlyDirectWrittenPremium<>0.0\n),\nUN_PLines_CLines AS (\n\tSELECT Pol_Key AS pol_key, PremiumTransactionCode, PremiumTypeCode, AccountingDate AS Accounting_Date, MonthlyDirectWrittenPremium AS MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbrevation AS StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineCode AS InsuranceReferenceLineOfBusinessCode, asl_code, sub_asl_code, state_of_domicile_code, Endorsement_Start_Date, Endorsement_Issue_Date, EDWPremiumMasterCalculationPKID, UmbrellaLayer, Policy_Issue_Date, Policy_Start_Date, Policy_End_Date, RatingPlanAbbrevation AS RatingPlanAbbreviation, name\n\tFROM FIL_Drop_Zero_Premiums\n\tUNION\n\tSELECT pol_key, PremiumTransactionCode, PremiumTypeCode, Accounting_Date, MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineOfBusinessCode, asl_code, sub_asl_code, state_of_domicile_code, Endorsement_Start_Date, Endorsement_Issue_Date, EDWPremiumMasterCalculationPKID, UmbrellaLayer, Policy_Issue_Date, Policy_Start_Date, Policy_End_Date, RatingPlanAbbreviation, name\n\tFROM EXP_CLines_DataCollect\n),\nEXP_Get_Umbrella AS (\n\tSELECT\n\tpol_key,\n\tPremiumTransactionCode,\n\tPremiumTypeCode,\n\tAccounting_Date,\n\tMonthlyTotalDirectWrittenPremium,\n\tProductCode,\n\tStrategicProfitCenterAbbreviation,\n\tAccountingProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tasl_code,\n\tsub_asl_code,\n\t-- *INF*: IIF(ISNULL(sub_asl_code),'0',sub_asl_code)\n\tIFF(sub_asl_code IS NULL, '0', sub_asl_code) AS v_sub_asl_code,\n\tstate_of_domicile_code,\n\tEndorsement_Start_Date,\n\t-- *INF*: IIF(Endorsement_Start_Date>Policy_End_Date,Policy_End_Date,Endorsement_Start_Date)\n\tIFF(Endorsement_Start_Date > Policy_End_Date, Policy_End_Date, Endorsement_Start_Date) AS v_Endorsement_Start_Date,\n\tv_Endorsement_Start_Date AS O_Endorsement_Start_Date,\n\tEndorsement_Issue_Date,\n\t-- *INF*: IIF(Endorsement_Issue_Date>Policy_End_Date,Policy_End_Date,Endorsement_Issue_Date)\n\tIFF(Endorsement_Issue_Date > Policy_End_Date, Policy_End_Date, Endorsement_Issue_Date) AS v_Endorsement_Issue_Date,\n\tv_Endorsement_Issue_Date AS O_Endorsement_Issue_Date,\n\tEDWPremiumMasterCalculationPKID,\n\tUmbrellaLayer,\n\tPolicy_Issue_Date,\n\tPolicy_Start_Date,\n\tPolicy_End_Date,\n\tRatingPlanAbbreviation,\n\tname,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SUPREINSURANCEUMBRELLALAYER(StrategicProfitCenterAbbreviation,UmbrellaLayer,v_Endorsement_Start_Date)),0,:LKP.LKP_SUPREINSURANCEUMBRELLALAYER(StrategicProfitCenterAbbreviation,UmbrellaLayer,v_Endorsement_Start_Date))\n\tIFF(\n\t    LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date.ReinsuranceUmbrellaLayer IS NULL,\n\t    0,\n\t    LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date.ReinsuranceUmbrellaLayer\n\t) AS v_ReinsuranceUmbrellaLayer,\n\t-- *INF*: :LKP.LKP_EXISTING_POLICY(pol_key,AccountingProductCode,asl_code,'WBMI',InsuranceReferenceLineOfBusinessCode,StrategicProfitCenterAbbreviation,ProductCode,state_of_domicile_code,v_sub_asl_code,to_char(v_ReinsuranceUmbrellaLayer))\n\tLKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.POLICYDATES AS LKP_ASL,\n\t-- *INF*: to_date(substr(LKP_ASL,1,INSTR(LKP_ASL,'|',1,1)-1),'YYYY/MM/DD')\n\tTO_TIMESTAMP(substr(LKP_ASL, 1, REGEXP_INSTR(LKP_ASL, '|', 1, 1) - 1), 'YYYY/MM/DD') AS LKP_Policy_Start_Date,\n\t-- *INF*: to_date(substr(LKP_ASL,INSTR(LKP_ASL,'|',1,1)+1,INSTR(LKP_ASL,'|',1,2)-(INSTR(LKP_ASL,'|',1,1)+1)),'YYYY/MM/DD')\n\tTO_TIMESTAMP(substr(LKP_ASL, REGEXP_INSTR(LKP_ASL, '|', 1, 1) + 1, REGEXP_INSTR(LKP_ASL, '|', 1, 2) - (REGEXP_INSTR(LKP_ASL, '|', 1, 1) + 1)), 'YYYY/MM/DD') AS LKP_Policy_End_Date,\n\t-- *INF*: IIF(ISNULL(LKP_ASL),'N',IIF(LKP_Policy_Start_Date<>Policy_Start_Date or LKP_Policy_End_Date<>Policy_End_Date,'Y','N'))\n\tIFF(\n\t    LKP_ASL IS NULL, 'N',\n\t    IFF(\n\t        LKP_Policy_Start_Date <> Policy_Start_Date\n\t    or LKP_Policy_End_Date <> Policy_End_Date,\n\t        'Y',\n\t        'N'\n\t    )\n\t) AS Filter_Flag\n\tFROM UN_PLines_CLines\n\tLEFT JOIN LKP_SUPREINSURANCEUMBRELLALAYER LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date\n\tON LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date.StrategicProfitCenterAbbreviation = StrategicProfitCenterAbbreviation\n\tAND LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date.SourceUmbrellaLayerStart = UmbrellaLayer\n\tAND LKP_SUPREINSURANCEUMBRELLALAYER_StrategicProfitCenterAbbreviation_UmbrellaLayer_v_Endorsement_Start_Date.SourceUmbrellaLayerEnd = v_Endorsement_Start_Date\n\n\tLEFT JOIN LKP_EXISTING_POLICY LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer\n\tON LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.POLICY_NO = pol_key\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.AccountingProductCode = AccountingProductCode\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.AnnualStatementLineCode = asl_code\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.CompanyCode = 'WBMI'\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.LineOfBusiness = InsuranceReferenceLineOfBusinessCode\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.StrategicProfitCenter = StrategicProfitCenterAbbreviation\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.ProductCode = ProductCode\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.RiskState = state_of_domicile_code\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.SubASLCode = v_sub_asl_code\n\tAND LKP_EXISTING_POLICY_pol_key_AccountingProductCode_asl_code_WBMI_InsuranceReferenceLineOfBusinessCode_StrategicProfitCenterAbbreviation_ProductCode_state_of_domicile_code_v_sub_asl_code_to_char_v_ReinsuranceUmbrellaLayer.ReinsuranceUmbrellaLayer = to_char(v_ReinsuranceUmbrellaLayer)\n\n),\nFIL_CorrectedPolicyInfo AS (\n\tSELECT\n\tpol_key, \n\tFilter_Flag\n\tFROM EXP_Get_Umbrella\n\tWHERE Filter_Flag='Y'\n),\nEXP_Tgt AS (\n\tSELECT\n\tpol_key,\n\t'Y' AS NegateFlag,\n\t'ClaimsMade' AS UserName,\n\tCURRENT_TIMESTAMP AS DateTime\n\tFROM FIL_CorrectedPolicyInfo\n),\nAGG_EliminatePolicyDuplicates AS (\n\tSELECT\n\tpol_key,\n\tNegateFlag,\n\tUserName,\n\tDateTime\n\tFROM EXP_Tgt\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY NULL) = 1\n),\nSapiensPolicyRestateClaimsMade AS (\n\tINSERT INTO SapiensPolicyRestateClaimsMade\n\t(Policy, NegateFlag, UserName, DateTime)\n\tSELECT \n\tpol_key AS POLICY, \n\tNEGATEFLAG, \n\tUSERNAME, \n\tDATETIME\n\tFROM AGG_EliminatePolicyDuplicates\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}