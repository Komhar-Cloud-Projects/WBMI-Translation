{
    "name": "s_m_POL_STG_Load_Driver_DriverIncidentStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_STG_Load_Driver_DriverIncidentStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nearsinfile_DriverandIncidentsTable AS (\n),\nEXPTRANS3 AS (\n\tSELECT\n\tLicenseNumber AS in_LicenseNumber,\n\t-- *INF*: RTRIM(in_LicenseNumber)\n\tRTRIM(in_LicenseNumber) AS out_LicenseNumber\n\tFROM earsinfile_DriverandIncidentsTable\n),\nLKP_ExploreEARSDriverRecord AS (\n\tSELECT\n\tBirthdate,\n\tFirstName,\n\tMiddleName,\n\tLastName,\n\tGender,\n\tLicenseNumber,\n\tLicenseState\n\tFROM (\n\t\tSELECT \n\t\t\tBirthdate,\n\t\t\tFirstName,\n\t\t\tMiddleName,\n\t\t\tLastName,\n\t\t\tGender,\n\t\t\tLicenseNumber,\n\t\t\tLicenseState\n\t\tFROM ExploreEARSDriverRecord\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LicenseNumber,LicenseState ORDER BY Birthdate DESC) = 1\n),\nEXP_Convert_To_Date AS (\n\tSELECT\n\tearsinfile_DriverandIncidentsTable.FileCreationDate,\n\t-- *INF*: TO_Char(SYSDATE)\n\tTO_Char(CURRENT_TIMESTAMP) AS test_PolicyExpirationDate,\n\t-- *INF*: TO_DATE(FileCreationDate,'YYYYMMDD')\n\tTO_TIMESTAMP(FileCreationDate, 'YYYYMMDD') AS out_FileCreationDate,\n\tLKP_ExploreEARSDriverRecord.Birthdate AS LKP_DateOfBirth,\n\tearsinfile_DriverandIncidentsTable.BirthDate,\n\t-- *INF*: IIF (Is_Spaces(BirthDate),\r\n\t-- LKP_DateOfBirth, \r\n\t-- TO_DATE(BirthDate,'YYYYMMDD'))\n\tIFF(\n\t    LENGTH(BirthDate)>0 AND TRIM(BirthDate)='', LKP_DateOfBirth,\n\t    TO_TIMESTAMP(BirthDate, 'YYYYMMDD')\n\t) AS out_BirthDate,\n\tearsinfile_DriverandIncidentsTable.PolicyExpirationDate,\n\t-- *INF*: TO_DATE(PolicyExpirationDate,'MM/DD/YYYY')\n\tTO_TIMESTAMP(PolicyExpirationDate, 'MM/DD/YYYY') AS out_PolicyExpiratonDate,\n\tearsinfile_DriverandIncidentsTable.IncidentEndDate,\n\t-- *INF*: --TO_DATE(IncidentEndDate,'YYYYMMDD')\r\n\t-- \r\n\t-- IIF (Is_Spaces(IncidentEndDate),\r\n\t-- TO_DATE(PolicyExpirationDate,'MM/DD/YYYY'),\r\n\t-- TO_DATE(IncidentEndDate,'YYYYMMDD'))\n\tIFF(\n\t    LENGTH(IncidentEndDate)>0 AND TRIM(IncidentEndDate)='',\n\t    TO_TIMESTAMP(PolicyExpirationDate, 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP(IncidentEndDate, 'YYYYMMDD')\n\t) AS out_IncidentEndDate,\n\tearsinfile_DriverandIncidentsTable.IncidentStartDate,\n\t-- *INF*: IIF (Is_Spaces(IncidentStartDate),\r\n\t-- TO_DATE(PolicyExpirationDate,'MM/DD/YYYY'),\r\n\t-- TO_DATE(IncidentStartDate,'YYYYMMDD'))\r\n\t-- \r\n\t-- \r\n\t-- --TO_DATE(IncidentStartDate,'YYYYMMDD')\n\tIFF(\n\t    LENGTH(IncidentStartDate)>0 AND TRIM(IncidentStartDate)='',\n\t    TO_TIMESTAMP(PolicyExpirationDate, 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP(IncidentStartDate, 'YYYYMMDD')\n\t) AS out_IncedentStartDate,\n\t-- *INF*: RTRIM(in_LicenseNumber)\n\tRTRIM(in_LicenseNumber) AS out_LicenseNumber,\n\tearsinfile_DriverandIncidentsTable.LicenseState AS in_LicenseState,\n\tearsinfile_DriverandIncidentsTable.LastName AS in_LastName,\n\tearsinfile_DriverandIncidentsTable.FirstName AS in_FirstName,\n\tearsinfile_DriverandIncidentsTable.MiddleName AS in_MiddleName,\n\tearsinfile_DriverandIncidentsTable.Gender AS in_Gender,\n\tLKP_ExploreEARSDriverRecord.FirstName AS LKP_FirstName,\n\tLKP_ExploreEARSDriverRecord.MiddleName AS LKP_MiddleInitial,\n\tLKP_ExploreEARSDriverRecord.LastName AS LKP_LastName,\n\tLKP_ExploreEARSDriverRecord.Gender AS LKP_Gender,\n\t-- *INF*: IIF ((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_FirstName, in_FirstName)\r\n\t-- \r\n\t-- \n\tIFF((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_FirstName, in_FirstName) AS out_FirstName,\n\t-- *INF*: IIF ((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_MiddleInitial, in_MiddleName)\n\tIFF((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_MiddleInitial, in_MiddleName) AS out_MiddleInitial,\n\t-- *INF*: IIF ((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_LastName, in_LastName)\r\n\t-- \n\tIFF((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_LastName, in_LastName) AS out_LastName,\n\t-- *INF*: IIF ((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_Gender, in_Gender)\n\tIFF((in_LicenseState = 'IN' OR in_LicenseState = 'IL'), LKP_Gender, in_Gender) AS out_Gender\n\tFROM earsinfile_DriverandIncidentsTable\n\tLEFT JOIN LKP_ExploreEARSDriverRecord\n\tON LKP_ExploreEARSDriverRecord.LicenseNumber = EXPTRANS3.out_LicenseNumber AND LKP_ExploreEARSDriverRecord.LicenseState = earsinfile_DriverandIncidentsTable.LicenseState\n),\nLKP_DriverStage AS (\n\tSELECT\n\tLicenseNumber,\n\tin_FileCreationDate,\n\tin_LicenseState,\n\tin_LicenseNumber,\n\tFileCreationDate,\n\tLicenseState\n\tFROM (\n\t\tSELECT \n\t\t\tLicenseNumber,\n\t\t\tin_FileCreationDate,\n\t\t\tin_LicenseState,\n\t\t\tin_LicenseNumber,\n\t\t\tFileCreationDate,\n\t\t\tLicenseState\n\t\tFROM DriverStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FileCreationDate,LicenseState,LicenseNumber ORDER BY LicenseNumber) = 1\n),\nFIL_Null_LicenseNumber AS (\n\tSELECT\n\tLKP_DriverStage.LicenseNumber AS lkp_LicenseNumber, \n\tEXP_Convert_To_Date.out_FileCreationDate AS CreatedDate, \n\tEXP_Convert_To_Date.out_FileCreationDate AS FileCreationDate, \n\tearsinfile_DriverandIncidentsTable.FileIDCode, \n\tearsinfile_DriverandIncidentsTable.SenderName, \n\tearsinfile_DriverandIncidentsTable.LicenseState, \n\tEXPTRANS3.out_LicenseNumber AS LicenseNumber, \n\tearsinfile_DriverandIncidentsTable.Quoteback AS QuoteBack, \n\tEXP_Convert_To_Date.out_LastName AS LastName, \n\tEXP_Convert_To_Date.out_FirstName AS FirstName, \n\tEXP_Convert_To_Date.out_MiddleInitial AS MiddleName, \n\tearsinfile_DriverandIncidentsTable.StreetAddress, \n\tearsinfile_DriverandIncidentsTable.City, \n\tearsinfile_DriverandIncidentsTable.State AS StateCode, \n\tearsinfile_DriverandIncidentsTable.ZipCode, \n\tEXP_Convert_To_Date.out_BirthDate AS BirthDate, \n\tearsinfile_DriverandIncidentsTable.Weight AS BodyWeight, \n\tearsinfile_DriverandIncidentsTable.Height, \n\tearsinfile_DriverandIncidentsTable.EyeColor, \n\tearsinfile_DriverandIncidentsTable.PolicyNumber, \n\tEXP_Convert_To_Date.out_PolicyExpiratonDate AS PolicyExpirationDate, \n\tearsinfile_DriverandIncidentsTable.PreviousLicense, \n\tEXP_Convert_To_Date.out_Gender AS Gender, \n\tearsinfile_DriverandIncidentsTable.AccountNumber, \n\tearsinfile_DriverandIncidentsTable.IncidentResult, \n\tearsinfile_DriverandIncidentsTable.CustomerCode, \n\tEXP_Convert_To_Date.out_IncedentStartDate AS IncidentStartDate, \n\tearsinfile_DriverandIncidentsTable.IncidentDescription, \n\tEXP_Convert_To_Date.out_IncidentEndDate AS IncidentEndDate, \n\tearsinfile_DriverandIncidentsTable.IncidentPoints, \n\tearsinfile_DriverandIncidentsTable.StateNatCode AS StateCode1\n\tFROM EXPTRANS3\n\t -- Manually join with EXP_Convert_To_Date\n\t -- Manually join with earsinfile_DriverandIncidentsTable\n\tLEFT JOIN LKP_DriverStage\n\tON LKP_DriverStage.FileCreationDate = EXP_Convert_To_Date.out_FileCreationDate AND LKP_DriverStage.LicenseState = earsinfile_DriverandIncidentsTable.LicenseState AND LKP_DriverStage.LicenseNumber = EXPTRANS3.out_LicenseNumber\n\tWHERE ISNULL(lkp_LicenseNumber)\n),\nSEQ_DriverStageID AS (\n\tCREATE SEQUENCE SEQ_DriverStageID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_EARS_File AS (\n\tSELECT\n\tSEQ_DriverStageID.NEXTVAL,\n\t-- *INF*: IIF(ISNULL(v_LAST_LicenseState) OR ISNULL(v_LAST_LicenseNumber),'Y', IIF(LicenseState != v_LAST_LicenseState OR LicenseNumber != v_LAST_LicenseNumber, 'Y', 'N'))\n\tIFF(\n\t    v_LAST_LicenseState IS NULL OR v_LAST_LicenseNumber IS NULL, 'Y',\n\t    IFF(\n\t        LicenseState != v_LAST_LicenseState\n\t    or LicenseNumber != v_LAST_LicenseNumber, 'Y',\n\t        'N'\n\t    )\n\t) AS v_New_Driver_Ind,\n\tv_New_Driver_Ind AS out_New_Driver_Ind,\n\t-- *INF*: IIF(v_New_Driver_Ind = 'Y', NEXTVAL, v_DriverStageId)\n\tIFF(v_New_Driver_Ind = 'Y', NEXTVAL, v_DriverStageId) AS v_DriverStageId,\n\tv_DriverStageId AS out_DriverStageId,\n\tFileCreationDate,\n\tFileIDCode,\n\tSenderName,\n\tLicenseState,\n\tLicenseState AS v_LAST_LicenseState,\n\tLicenseNumber,\n\tLicenseNumber AS v_LAST_LicenseNumber,\n\tQuoteBack AS Quoteback,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tStreetAddress,\n\tCity,\n\tStateCode AS State,\n\tZipCode,\n\tBirthDate,\n\tBodyWeight AS Weight,\n\tHeight,\n\tEyeColor,\n\tPolicyNumber,\n\t-- *INF*: SUBSTR(PolicyNumber,1,7)\n\tSUBSTR(PolicyNumber, 1, 7) AS out_PolicyNumber,\n\tPolicyExpirationDate,\n\tPreviousLicense,\n\tGender,\n\tAccountNumber,\n\tIncidentResult,\n\tCustomerCode,\n\tIncidentStartDate,\n\tIncidentDescription,\n\tIncidentEndDate,\n\tIncidentPoints,\n\tStateCode1 AS StateCode,\n\tNationalCode\n\tFROM FIL_Null_LicenseNumber\n),\nEXPTRANS2 AS (\n\tSELECT\n\tout_New_Driver_Ind,\n\tout_DriverStageId,\n\tFileCreationDate,\n\tFileIDCode,\n\tSenderName,\n\tVersionNumber,\n\tLicenseState,\n\tLicenseNumber,\n\tQuoteback,\n\tReportType,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tStreetAddress,\n\tCity,\n\tState,\n\tZipCode,\n\tBirthDate,\n\tWeight,\n\tHeight,\n\tEyeColor,\n\tAlias,\n\tout_PolicyNumber AS PolicyNumber,\n\tPolicyExpirationDate,\n\tPreviousLicense,\n\tGender,\n\tAccountNumber,\n\tIncidentResult,\n\tCustomerCode,\n\tIncidentStartDate,\n\tIncidentDescription,\n\tIncidentEndDate,\n\tIncidentPoints,\n\tStateCode,\n\tNationalCode\n\tFROM EXP_EARS_File\n),\nTC_NewDriver_Commit AS (\n),\nLKP_SupState AS (\n\tSELECT\n\tSupStateId,\n\tStateAbbreviation\n\tFROM (\n\t\tSELECT \n\t\t\tSupStateId,\n\t\t\tStateAbbreviation\n\t\tFROM SupState\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateAbbreviation ORDER BY SupStateId) = 1\n),\nLKP_Violation AS (\n\tSELECT\n\tViolationId,\n\tin_ViolationCode,\n\tViolationCode\n\tFROM (\n\t\tSELECT \n\t\t\tViolationId,\n\t\t\tin_ViolationCode,\n\t\t\tViolationCode\n\t\tFROM Violation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ViolationCode ORDER BY ViolationId) = 1\n),\nLKP_StateViolationCategory AS (\n\tSELECT\n\tViolationCategoryId,\n\tViolationId,\n\tSupStateId\n\tFROM (\n\t\tSELECT \n\t\t\tViolationCategoryId,\n\t\t\tViolationId,\n\t\t\tSupStateId\n\t\tFROM StateViolationCategory\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ViolationId,SupStateId ORDER BY ViolationCategoryId) = 1\n),\nLKP_ViolationCategory AS (\n\tSELECT\n\tModifiedUserId,\n\tModifiedDate,\n\tViolationCategoryDescription,\n\tViolationCategoryId\n\tFROM (\n\t\tSELECT \n\t\t\tModifiedUserId,\n\t\t\tModifiedDate,\n\t\t\tViolationCategoryDescription,\n\t\t\tViolationCategoryId\n\t\tFROM ViolationCategory\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ViolationCategoryId ORDER BY ModifiedUserId) = 1\n),\nEXPTRANS AS (\n\tSELECT\n\tPolicyNumber,\n\t-- *INF*: RTRIM(PolicyNumber,' ')\n\tRTRIM(PolicyNumber, ' ') AS out_PolicyNumber\n\tFROM TC_NewDriver_Commit\n),\nLKP_WB_Policy AS (\n\tSELECT\n\tSessionId,\n\tAssignedUnderwriterFirstName,\n\tAssignedUnderwriterLastName,\n\tPolicyNumber\n\tFROM (\n\t\tSELECT WB_Policy.SessionId as SessionId, \r\n\t\tWB_Policy.AssignedUnderwriterFirstName as AssignedUnderwriterFirstName, \r\n\t\tWB_Policy.AssignedUnderwriterLastName as AssignedUnderwriterLastName, \r\n\t\tWB_Policy.PolicyNumber as PolicyNumber FROM WB_Policy\r\n\t\torder by SessionId asc\r\n\t\t--where WB_Policy.PolicyNumber = in_PolicyNumber\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber ORDER BY SessionId DESC) = 1\n),\nEXP_DriverIncidentStage AS (\n\tSELECT\n\tTC_NewDriver_Commit.FileCreationDate,\n\tTC_NewDriver_Commit.IncidentResult,\n\tTC_NewDriver_Commit.CustomerCode,\n\tTC_NewDriver_Commit.IncidentStartDate,\n\tTC_NewDriver_Commit.IncidentDescription,\n\tTC_NewDriver_Commit.IncidentEndDate,\n\tTC_NewDriver_Commit.IncidentPoints,\n\tTC_NewDriver_Commit.StateCode,\n\tTC_NewDriver_Commit.NationalCode,\n\tTC_NewDriver_Commit.out_DriverStageId AS DriverStageId,\n\tLKP_ViolationCategory.ViolationCategoryDescription AS in_Category,\n\t-- *INF*: IIF(ISNULL(in_Category),'Not found',in_Category) \n\tIFF(in_Category IS NULL, 'Not found', in_Category) AS out_Category,\n\tTC_NewDriver_Commit.LicenseState,\n\tTC_NewDriver_Commit.LicenseNumber,\n\tTC_NewDriver_Commit.LastName,\n\tTC_NewDriver_Commit.FirstName,\n\tTC_NewDriver_Commit.MiddleName,\n\tLKP_WB_Policy.AssignedUnderwriterFirstName,\n\tLKP_WB_Policy.AssignedUnderwriterLastName,\n\tTC_NewDriver_Commit.PolicyNumber,\n\tLKP_WB_Policy.SessionId\n\tFROM TC_NewDriver_Commit\n\tLEFT JOIN LKP_ViolationCategory\n\tON LKP_ViolationCategory.ViolationCategoryId = LKP_StateViolationCategory.ViolationCategoryId\n\tLEFT JOIN LKP_WB_Policy\n\tON LKP_WB_Policy.PolicyNumber = EXPTRANS.out_PolicyNumber\n),\nFIL_Info_Trans AS (\n\tSELECT\n\tFileCreationDate, \n\tIncidentResult, \n\tCustomerCode, \n\tIncidentStartDate, \n\tIncidentDescription, \n\tIncidentEndDate, \n\tIncidentPoints, \n\tStateCode, \n\tNationalCode, \n\tDriverStageId, \n\tout_Category\n\tFROM EXP_DriverIncidentStage\n\tWHERE IncidentResult != 'INFO      '\n),\nTGT_DriverIncidentStage AS (\n\tINSERT INTO DriverIncidentStage\n\t(DriverStageId, CreatedDate, ModifiedDate, IncidentResult, CustomerCode, IncidentStartDate, IncidentDescription, IncidentEndDate, IncidentPoints, StateCode, NationalCode, Category)\n\tSELECT \n\tDRIVERSTAGEID, \n\tFileCreationDate AS CREATEDDATE, \n\tFileCreationDate AS MODIFIEDDATE, \n\tINCIDENTRESULT, \n\tCUSTOMERCODE, \n\tINCIDENTSTARTDATE, \n\tINCIDENTDESCRIPTION, \n\tINCIDENTENDDATE, \n\tINCIDENTPOINTS, \n\tSTATECODE, \n\tNATIONALCODE, \n\tout_Category AS CATEGORY\n\tFROM FIL_Info_Trans\n),\nFILTRANS AS (\n\tSELECT\n\tLicenseState, \n\tLicenseNumber, \n\tLastName, \n\tFirstName, \n\tMiddleName, \n\tIncidentStartDate, \n\tIncidentDescription, \n\tIncidentEndDate, \n\tIncidentPoints, \n\tCustomerCode, \n\tAssignedUnderwriterFirstName, \n\tAssignedUnderwriterLastName, \n\tout_Category AS in_Category, \n\tPolicyNumber\n\tFROM EXP_DriverIncidentStage\n\tWHERE in_Category='Major'\n),\nEXPTRANS1 AS (\n\tSELECT\n\tLicenseState,\n\tLicenseNumber AS i_LicenseNumber,\n\t-- *INF*: REPLACESTR(1, i_LicenseNumber, SUBSTR(i_LicenseNumber, 1, LENGTH(RTRIM\t(i_LicenseNumber)) - 4), LPAD('', 8,  '*'))\n\tREGEXP_REPLACE(i_LicenseNumber,SUBSTR(i_LicenseNumber, 1, LENGTH(RTRIM(i_LicenseNumber)) - 4),LPAD('', 8, '*')) AS v_MaskedLicenseNumber,\n\tv_MaskedLicenseNumber AS o_LicenseNumber,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tIncidentStartDate,\n\tIncidentDescription,\n\tIncidentEndDate,\n\tIncidentPoints,\n\tCustomerCode,\n\tAssignedUnderwriterFirstName,\n\tAssignedUnderwriterLastName,\n\tPolicyNumber\n\tFROM FILTRANS\n),\nDriverIncidentFile AS (\n\tINSERT INTO DriverIncidentFile\n\t(PolNumber, DriverState, DriverLicense, LastName, FirstName, MiddleName, IncidentStart, IncicentEnd, IncidentDesc, IncidentPoints, IncidentCode, UnderwriterFirstName, UnderwriterLastName)\n\tSELECT \n\tPolicyNumber AS POLNUMBER, \n\tLicenseState AS DRIVERSTATE, \n\to_LicenseNumber AS DRIVERLICENSE, \n\tLASTNAME, \n\tFIRSTNAME, \n\tMIDDLENAME, \n\tIncidentStartDate AS INCIDENTSTART, \n\tIncidentEndDate AS INCICENTEND, \n\tIncidentDescription AS INCIDENTDESC, \n\tINCIDENTPOINTS, \n\tCustomerCode AS INCIDENTCODE, \n\tAssignedUnderwriterFirstName AS UNDERWRITERFIRSTNAME, \n\tAssignedUnderwriterLastName AS UNDERWRITERLASTNAME\n\tFROM EXPTRANS1\n),\nAGG_LicenseInfo AS (\n\tSELECT\n\tout_DriverStageId AS DriverStageId,\n\tFileCreationDate,\n\tFileIDCode,\n\tSenderName,\n\tVersionNumber,\n\tLicenseState,\n\tLicenseNumber,\n\tQuoteback,\n\tReportType,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tStreetAddress,\n\tCity,\n\tState,\n\tZipCode,\n\tBirthDate,\n\tWeight,\n\tHeight,\n\tEyeColor,\n\tAlias,\n\tPolicyNumber,\n\tPolicyExpirationDate,\n\tPreviousLicense,\n\tGender,\n\tAccountNumber\n\tFROM TC_NewDriver_Commit\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FileCreationDate, LicenseState, LicenseNumber ORDER BY NULL) = 1\n),\nEXP_DriverStage AS (\n\tSELECT\n\tDriverStageId,\n\t'Request' AS out_ProcessStatus,\n\tFileCreationDate AS CreatedDate,\n\tFileCreationDate,\n\tFileIDCode,\n\tSenderName,\n\tLicenseState,\n\tLicenseNumber,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tStreetAddress,\n\tCity,\n\tState AS StateCode,\n\tZipCode,\n\tBirthDate,\n\tGender,\n\tWeight AS BodyWeight,\n\tHeight,\n\tEyeColor,\n\tPolicyNumber,\n\tPolicyExpirationDate,\n\t-- *INF*: SUBSTR(QuoteBack,1,12)\n\tSUBSTR(QuoteBack, 1, 12) AS QuoteBackPolicyNumber,\n\t-- *INF*: SUBSTR(QuoteBack,14,7)\n\tSUBSTR(QuoteBack, 14, 7) AS QuoteBackAgencyNumber,\n\t-- *INF*: SUBSTR(QuoteBack,22,3)\n\tSUBSTR(QuoteBack, 22, 3) AS QuoteBackLineOfBusiness,\n\t-- *INF*: SUBSTR(QuoteBack,26,2)\n\tSUBSTR(QuoteBack, 26, 2) AS QuoteBackDriverId,\n\t-- *INF*: SUBSTR(QuoteBack,29,2)\n\tSUBSTR(QuoteBack, 29, 2) AS QuoteBackState,\n\t-- *INF*: SUBSTR(QuoteBack,32,3)\n\tSUBSTR(QuoteBack, 32, 3) AS QuoteBackUnderwriterNumber,\n\tQuoteback AS QuoteBack,\n\tAccountNumber,\n\t1 AS SupProcessStatusId,\n\tPreviousLicense\n\tFROM AGG_LicenseInfo\n),\nLKP_SupProcessStatus AS (\n\tSELECT\n\tSupProcessStatusId,\n\tProcessStatus\n\tFROM (\n\t\tSELECT \n\t\t\tSupProcessStatusId,\n\t\t\tProcessStatus\n\t\tFROM SupProcessStatus\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProcessStatus ORDER BY SupProcessStatusId) = 1\n),\nTGT_DriverStage AS (\n\tINSERT INTO DriverStage\n\t(DriverStageId, CreatedDate, ModifiedDate, FileCreationDate, FileIDCode, SenderName, LicenseState, LicenseNumber, LastName, FirstName, MiddleName, StreetAddress, City, StateCode, ZipCode, BirthDate, Gender, BodyWeight, EyeColor, PolicyNumber, PolicyExpirationDate, QuoteBackPolicyNumber, QuoteBackAgencyNumber, QuoteBackLineOfBusiness, QuoteBackDriverId, QuoteBackState, QuoteBackUnderwriterNumber, QuoteBack, InsuranceIndicator, SupProcessStatusId, Height, PreviousLicense)\n\tSELECT \n\tEXP_DriverStage.DRIVERSTAGEID, \n\tEXP_DriverStage.CREATEDDATE, \n\tEXP_DriverStage.MODIFIEDDATE, \n\tEXP_DriverStage.FILECREATIONDATE, \n\tEXP_DriverStage.FILEIDCODE, \n\tEXP_DriverStage.SENDERNAME, \n\tEXP_DriverStage.LICENSESTATE, \n\tEXP_DriverStage.LICENSENUMBER, \n\tEXP_DriverStage.LASTNAME, \n\tEXP_DriverStage.FIRSTNAME, \n\tEXP_DriverStage.MIDDLENAME, \n\tEXP_DriverStage.STREETADDRESS, \n\tEXP_DriverStage.CITY, \n\tEXP_DriverStage.STATECODE, \n\tEXP_DriverStage.ZIPCODE, \n\tEXP_DriverStage.BIRTHDATE, \n\tEXP_DriverStage.GENDER, \n\tEXP_DriverStage.BODYWEIGHT, \n\tEXP_DriverStage.EYECOLOR, \n\tEXP_DriverStage.POLICYNUMBER, \n\tEXP_DriverStage.POLICYEXPIRATIONDATE, \n\tEXP_DriverStage.QUOTEBACKPOLICYNUMBER, \n\tEXP_DriverStage.QUOTEBACKAGENCYNUMBER, \n\tEXP_DriverStage.QUOTEBACKLINEOFBUSINESS, \n\tEXP_DriverStage.QUOTEBACKDRIVERID, \n\tEXP_DriverStage.QUOTEBACKSTATE, \n\tEXP_DriverStage.QUOTEBACKUNDERWRITERNUMBER, \n\tEXP_DriverStage.QUOTEBACK, \n\tEXP_DriverStage.INSURANCEINDICATOR, \n\tLKP_SupProcessStatus.SUPPROCESSSTATUSID, \n\tEXP_DriverStage.HEIGHT, \n\tEXP_DriverStage.PREVIOUSLICENSE\n\tFROM EXP_DriverStage\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}