{
    "name": "s_m_CLM_Check_Valid_SSN_Data_in_STG_EDW_DM",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_Check_Valid_SSN_Data_in_STG_EDW_DM",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkNcciMitchell AS (\n\tSELECT Distinct  WorkNcciMitchell.SocialSecurityNumber from WorkNcciMitchell\r\n\t@{pipeline().parameters.WHERE_WORKNCCIMITCHELL}\n),\nEXP_WorkNcciMitchell AS (\n\tSELECT\n\tSocialSecurityNumber\n\tFROM SQ_WorkNcciMitchell\n),\nSQ_arch_pif_42gj_stage AS (\n\tSELECT Distinct arch_pif_42gj_stage.ipfc4j_id_number \r\n\tFROM\r\n\t arch_pif_42gj_stage\r\n\t@{pipeline().parameters.WHERE_ARCH_PIF_42GJ_STAGE}\n),\nEXP_arch_pif_42gj_stage AS (\n\tSELECT\n\tipfc4j_id_number\n\tFROM SQ_arch_pif_42gj_stage\n),\nSQ_arch_pms_adjuster_master_stage AS (\n\tSELECT Distinct arch_pms_adjuster_master_stage.adnm_taxid_ssn \r\n\tFROM\r\n\t arch_pms_adjuster_master_stage\r\n\t@{pipeline().parameters.WHERE_ARCH_PMS_ADJUSTER_MASTER_STAGE}\n),\nEXP_arch_pms_adjuster_master_stage AS (\n\tSELECT\n\tadnm_taxid_ssn\n\tFROM SQ_arch_pms_adjuster_master_stage\n),\nSQ_claim_loss_transaction_fact AS (\n\tselect Distinct  claim_loss_transaction_fact.tax_id from claim_loss_transaction_fact\r\n\t@{pipeline().parameters.WHERE_CLAIM_LOSS_TRANSACTION_FACT}\n),\nEXP_claim_loss_transaction_fact AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_claim_loss_transaction_fact\n),\nSQ_claim_party AS (\n\tSELECT Distinct  claim_party.tax_ssn_id FROM claim_party\r\n\t@{pipeline().parameters.WHERE_CLAIM_PARTY}\n),\nEXP_claim_party AS (\n\tSELECT\n\ttax_ssn_id\n\tFROM SQ_claim_party\n),\nSQ_claim_party_dim AS (\n\tselect  Distinct claim_party_dim.tax_ssn_id from claim_party_dim\r\n\t@{pipeline().parameters.WHERE_CLAIM_PARTY_DIM}\n),\nEXP_claim_party_dim AS (\n\tSELECT\n\ttax_ssn_id\n\tFROM SQ_claim_party_dim\n),\nSQ_claim_payment_dim AS (\n\tselect  Distinct  claim_payment_dim.prim_payee_tax_id from claim_payment_dim\r\n\t@{pipeline().parameters.WHERE_CLAIM_PAYMENT_DIM}\n),\nEXP_claim_payment_dim AS (\n\tSELECT\n\tprim_payee_tax_id\n\tFROM SQ_claim_payment_dim\n),\nSQ_claim_transaction AS (\n\tselect Distinct claim_transaction.tax_id from claim_transaction\r\n\t@{pipeline().parameters.WHERE_CLAIM_TRANSACTION}\n),\nEXP_claim_transaction AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_claim_transaction\n),\nSQ_claimant_dim AS (\n\tselect Distinct  claimant_dim.claimant_tax_ssn_id from claimant_dim\r\n\t@{pipeline().parameters.WHERE_CLAIMANT_DIM}\n),\nEXP_claimant_dim AS (\n\tSELECT\n\tclaimant_tax_ssn_id\n\tFROM SQ_claimant_dim\n),\nSQ_pif_42gj_stage AS (\n\tselect Distinct  pif_42gj_stage.ipfc4j_id_number from pif_42gj_stage\r\n\t@{pipeline().parameters.WHERE_PIF_42GJ_STAGE}\n),\nEXP_pif_42gj_stage AS (\n\tSELECT\n\tipfc4j_id_number\n\tFROM SQ_pif_42gj_stage\n),\nSQ_pms_adjuster_master_stage AS (\n\tselect Distinct pms_adjuster_master_stage.adnm_taxid_ssn from pms_adjuster_master_stage\r\n\t@{pipeline().parameters.WHERE_PMS_ADJUSTER_MASTER_STAGE}\n),\nEXP_pms_adjuster_master_stage AS (\n\tSELECT\n\tadnm_taxid_ssn\n\tFROM SQ_pms_adjuster_master_stage\n),\nSQ_work_claim_cms_detail_extract AS (\n\tSELECT  Distinct work_claim_cms_detail_extract.injured_party_ssn FROM work_claim_cms_detail_extract\r\n\t@{pipeline().parameters.WHERE_WORK_CLAIM_CMS_DETAIL_EXTRACT}\n),\nEXP_work_claim_cms_detail_extract AS (\n\tSELECT\n\tinjured_party_ssn\n\tFROM SQ_work_claim_cms_detail_extract\n),\nSQ_work_claim_cms_query_extract AS (\n\tSELECT Distinct  work_claim_cms_query_extract.injured_party_ssn \r\n\tFROM\r\n\t work_claim_cms_query_extract\r\n\t@{pipeline().parameters.WHERE_WORK_CLAIM_CMS_QUERY_EXTRACT}\n),\nEXP_work_claim_cms_query_extract AS (\n\tSELECT\n\tinjured_party_ssn\n\tFROM SQ_work_claim_cms_query_extract\n),\nSQ_work_claim_matters_extract AS (\n\tSELECT  Distinct work_claim_matters_extract.matter_firm_tax_id FROM work_claim_matters_extract\r\n\t@{pipeline().parameters.WHERE_WORK_CLAIM_MATTERS_EXTRACT}\n),\nEXP_work_claim_matters_extract AS (\n\tSELECT\n\tmatter_firm_tax_id\n\tFROM SQ_work_claim_matters_extract\n),\nSQ_work_workers_comp_first_report_of_injury_extract AS (\n\tSELECT  Distinct work_workers_comp_first_report_of_injury_extract.employee_ssn \r\n\tFROM\r\n\t work_workers_comp_first_report_of_injury_extract\r\n\t@{pipeline().parameters.WHERE_WORK_WORKERS_COMP_FIRST_REPORT_OF_INJURY_EXTRACT}\n),\nEXP_work_workers_comp_first_report_of_injury_extract AS (\n\tSELECT\n\temployee_ssn\n\tFROM SQ_work_workers_comp_first_report_of_injury_extract\n),\nUnion_Input_Values AS (\n\tSELECT adnm_taxid_ssn\n\tFROM EXP_pms_adjuster_master_stage\n\tUNION\n\tSELECT ipfc4j_id_number AS adnm_taxid_ssn\n\tFROM EXP_pif_42gj_stage\n\tUNION\n\tSELECT matter_firm_tax_id AS adnm_taxid_ssn\n\tFROM EXP_work_claim_matters_extract\n\tUNION\n\tSELECT injured_party_ssn AS adnm_taxid_ssn\n\tFROM EXP_work_claim_cms_detail_extract\n\tUNION\n\tSELECT tax_ssn_id AS adnm_taxid_ssn\n\tFROM EXP_claim_party\n\tUNION\n\tSELECT SocialSecurityNumber AS adnm_taxid_ssn\n\tFROM EXP_WorkNcciMitchell\n\tUNION\n\tSELECT prim_payee_tax_id AS adnm_taxid_ssn\n\tFROM EXP_claim_payment_dim\n\tUNION\n\tSELECT tax_ssn_id AS adnm_taxid_ssn\n\tFROM EXP_claim_party_dim\n\tUNION\n\tSELECT claimant_tax_ssn_id AS adnm_taxid_ssn\n\tFROM EXP_claimant_dim\n\tUNION\n\tSELECT tax_id AS adnm_taxid_ssn\n\tFROM EXP_claim_loss_transaction_fact\n\tUNION\n\tSELECT ipfc4j_id_number AS adnm_taxid_ssn\n\tFROM EXP_arch_pif_42gj_stage\n\tUNION\n\tSELECT tax_id AS adnm_taxid_ssn\n\tFROM EXP_claim_transaction\n\tUNION\n\tSELECT employee_ssn AS adnm_taxid_ssn\n\tFROM EXP_work_workers_comp_first_report_of_injury_extract\n\tUNION\n\tSELECT adnm_taxid_ssn\n\tFROM EXP_arch_pms_adjuster_master_stage\n\tUNION\n\tSELECT injured_party_ssn AS adnm_taxid_ssn\n\tFROM EXP_work_claim_cms_query_extract\n),\nmplt_SSN_Check AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_SSN_FEIN_TAXID AS (\n\t\tSELECT\n\t\tIN_id AS id,\n\t\tIN_ssn_fein_id AS ssn_fein_taxid,\n\t\t-- *INF*: LTRIM(RTRIM(ssn_fein_taxid))\n\t\tLTRIM(RTRIM(ssn_fein_taxid)) AS V_ssn_fein_taxid,\n\t\t-- *INF*: IIF( SUBSTR(V_ssn_fein_taxid,3,1)='-' OR  (SUBSTR(V_ssn_fein_taxid,1,3)='000' AND (LENGTH(V_ssn_fein_taxid)=9 ) ) OR SUBSTR(V_ssn_fein_taxid,2,1)='-'  OR   (TO_INTEGER(SUBSTR(V_ssn_fein_taxid,1,3))>=750 AND (LENGTH(V_ssn_fein_taxid)=9 ) )OR ISNULL(V_ssn_fein_taxid) OR (V_ssn_fein_taxid='N/A')   OR REG_MATCH(V_ssn_fein_taxid,'[*]*') OR(REG_MATCH(V_ssn_fein_taxid,'[\\da-zA-Z]+') AND (LENGTH(V_ssn_fein_taxid)=11 OR LENGTH(V_ssn_fein_taxid)=10) )\r\n\t\t--  OR ((SUBSTR(V_ssn_fein_taxid,4,1)='-')  AND  (LENGTH(V_ssn_fein_taxid) != 11 )) OR (LENGTH(V_ssn_fein_taxid)<=6 ) OR  (LENGTH(V_ssn_fein_taxid)>11 ) ,'FEIN','NONFEIN')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(SUBSTR(V_ssn_fein_taxid, 3, 1) = '-' OR ( SUBSTR(V_ssn_fein_taxid, 1, 3) = '000' AND ( LENGTH(V_ssn_fein_taxid) = 9 ) ) OR SUBSTR(V_ssn_fein_taxid, 2, 1) = '-' OR ( TO_INTEGER(SUBSTR(V_ssn_fein_taxid, 1, 3)) >= 750 AND ( LENGTH(V_ssn_fein_taxid) = 9 ) ) OR V_ssn_fein_taxid IS NULL OR ( V_ssn_fein_taxid = 'N/A' ) OR REG_MATCH(V_ssn_fein_taxid, '[*]*') OR ( REG_MATCH(V_ssn_fein_taxid, '[\\da-zA-Z]+') AND ( LENGTH(V_ssn_fein_taxid) = 11 OR LENGTH(V_ssn_fein_taxid) = 10 ) ) OR ( ( SUBSTR(V_ssn_fein_taxid, 4, 1) = '-' ) AND ( LENGTH(V_ssn_fein_taxid) != 11 ) ) OR ( LENGTH(V_ssn_fein_taxid) <= 6 ) OR ( LENGTH(V_ssn_fein_taxid) > 11 ), 'FEIN', 'NONFEIN') AS V_flag,\n\t\tV_flag AS flag,\n\t\t-- *INF*: IIF(LENGTH(V_ssn_fein_taxid)>=7 AND LENGTH(V_ssn_fein_taxid)<=8,LPAD(V_ssn_fein_taxid,9,'0'),V_ssn_fein_taxid)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(V_ssn_fein_taxid) >= 7 AND LENGTH(V_ssn_fein_taxid) <= 8, LPAD(V_ssn_fein_taxid, 9, '0'), V_ssn_fein_taxid) AS V_taxid,\n\t\t-- *INF*: IIF(REG_MATCH(V_taxid,'[0-9-]*') ,V_taxid,'X')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(REG_MATCH(V_taxid, '[0-9-]*'), V_taxid, 'X') AS V_valid_taxid,\n\t\tV_valid_taxid AS flag_TaxId,\n\t\t-- *INF*: IIF(LENGTH(V_valid_taxid)=9  AND (REG_MATCH(V_valid_taxid,'^[0-9]*$'))  ,(SUBSTR(V_valid_taxid, 1, 3) ||'-'||SUBSTR(V_valid_taxid, 4, 2)||'-'||SUBSTR(V_valid_taxid, 6, 4)) ,V_valid_taxid)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(V_valid_taxid) = 9 AND ( REG_MATCH(V_valid_taxid, '^[0-9]*$') ), ( SUBSTR(V_valid_taxid, 1, 3) || '-' || SUBSTR(V_valid_taxid, 4, 2) || '-' || SUBSTR(V_valid_taxid, 6, 4) ), V_valid_taxid) AS OUT_taxid\n\t\tFROM INPUT\n\t),\n\tRTR_SSN_FEIN_TAXID AS (\n\t\tSELECT\n\t\tid,\n\t\tflag,\n\t\tssn_fein_taxid AS fein_taxid,\n\t\tOUT_taxid AS ssn,\n\t\tflag_TaxId\n\t\tFROM EXP_SSN_FEIN_TAXID\n\t),\n\tRTR_SSN_FEIN_TAXID_FEIN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag = 'FEIN'),\n\tRTR_SSN_FEIN_TAXID_SSN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag='NONFEIN'  AND flag_TaxId != 'X'),\n\tAGGTRANS AS (\n\t\tSELECT\n\t\tid AS Id, \n\t\tssn AS SSN\n\t\tFROM RTR_SSN_FEIN_TAXID_SSN\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Id ORDER BY NULL) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tId AS OUT_id, \n\t\tSSN AS OUT_valid_ssn\n\t\tFROM AGGTRANS\n\t),\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tOUT_id AS o_ID, \n\tOUT_valid_ssn AS adnm_taxid_ssn\n\tFROM mplt_SSN_Check\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY o_ID, adnm_taxid_ssn ORDER BY NULL) = 1\n),\nSQ_arch_claim_draft_stage AS (\n\tselect Distinct dft_tax_id_nbr from arch_claim_draft_stage\r\n\twhere dft_tax_id_type_cd='S' AND  @{pipeline().parameters.WHERE_ARCH_CLAIM_DRAFT_STAGE}\n),\nEXP_ARCH_CLAIM_DRAFT_STAGE AS (\n\tSELECT\n\tdft_tax_id_nbr\n\tFROM SQ_arch_claim_draft_stage\n),\nSQ_CLAIM_DRAFT_STAGE AS (\n\tSELECT Distinct dft_tax_id_nbr FROM claim_draft_stage\r\n\tWHERE dft_tax_id_type_cd='S' AND  @{pipeline().parameters.WHERE_CLAIM_DRAFT_STAGE}\n),\nEXP_CLAIM_DRAFT_STAGE AS (\n\tSELECT\n\tDFT_TAX_ID_NBR AS dft_tax_id_nbr\n\tFROM SQ_CLAIM_DRAFT_STAGE\n),\nSQ_ClaimDraftMonthlyStage AS (\n\tSELECT Distinct ClaimDraftMonthlyStage.dft_tax_id_nbr \r\n\tFROM\r\n\t ClaimDraftMonthlyStage\r\n\twhere ClaimDraftMonthlyStage.dft_tax_id_type_cd='S' AND @{pipeline().parameters.WHERE_CLAIMDRAFTMONTHLYSTAGE}\n),\nEXP_ClaimDraftMonthlyStage AS (\n\tSELECT\n\tdft_tax_id_nbr\n\tFROM SQ_ClaimDraftMonthlyStage\n),\nSQ_Master1099ListMonthlyStage AS (\n\tselect Distinct  Master1099ListMonthlyStage.tax_id\r\n\tfrom Master1099ListMonthlyStage\r\n\twhere Master1099ListMonthlyStage.tax_id_type = 'S' AND @{pipeline().parameters.WHERE_MASTER1099LISTMONTHLYSTAGE}\r\n\tUNION\r\n\tselect Distinct Master1099ListMonthlyStage.search_tax_id \r\n\tfrom Master1099ListMonthlyStage\r\n\twhere Master1099ListMonthlyStage.tax_id_type = 'S' AND @{pipeline().parameters.WHERE_MASTER1099LISTMONTHLYSTAGE}\n),\nEXP_Master1099ListMonthlyStage AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_Master1099ListMonthlyStage\n),\nSQ_Work1099Reporting AS (\n\tSELECT  Distinct Work1099Reporting.TaxId FROM Work1099Reporting\r\n\tWhere Work1099Reporting.TaxIdType ='S' AND  @{pipeline().parameters.WHERE_WORK1099REPORTING}\r\n\tUNION\r\n\tSELECT  Distinct Work1099Reporting.SearchTaxId FROM Work1099Reporting\r\n\tWhere Work1099Reporting.TaxIdType ='S' AND  @{pipeline().parameters.WHERE_WORK1099REPORTING}\n),\nEXP_Work1099Reporting AS (\n\tSELECT\n\tTaxId\n\tFROM SQ_Work1099Reporting\n),\nSQ_arch_client_tax_stage AS (\n\tSELECT Distinct arch_client_tax_stage.citx_tax_id \r\n\tFROM\r\n\t arch_client_tax_stage\r\n\tWHERE arch_client_tax_stage.tax_type_cd='SSN'\r\n\tAND @{pipeline().parameters.WHERE_ARCH_CLIENT_TAX_STAGE}\n),\nEXP_arch_client_tax_stage AS (\n\tSELECT\n\tcitx_tax_id\n\tFROM SQ_arch_client_tax_stage\n),\nSQ_arch_master_1099_list_stage AS (\n\tSELECT Distinct arch_master_1099_list_stage.tax_id\r\n\tFROM\r\n\t arch_master_1099_list_stage \r\n\tWHERE arch_master_1099_list_stage.tax_id_type='S' AND @{pipeline().parameters.WHERE_ARCH_MASTER_1099_LIST_STAGE}\r\n\tUNION\r\n\tSELECT Distinct  arch_master_1099_list_stage.search_tax_id \r\n\tFROM\r\n\t arch_master_1099_list_stage \r\n\tWHERE arch_master_1099_list_stage.tax_id_type='S' AND @{pipeline().parameters.WHERE_ARCH_MASTER_1099_LIST_STAGE}\n),\nEXP_arch_master_1099_list_stage AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_arch_master_1099_list_stage\n),\nSQ_claim_master_1099_list_dim AS (\n\tSELECT Distinct claim_master_1099_list_dim.tax_id\r\n\tFROM\r\n\t claim_master_1099_list_dim\r\n\tWHERE claim_master_1099_list_dim.tax_id_type='S' AND @{pipeline().parameters.WHERE_CLAIM_MASTER_1099_LIST_DIM}\r\n\tUNION\r\n\tSELECT Distinct claim_master_1099_list_dim.irs_tax_id \r\n\tFROM\r\n\t claim_master_1099_list_dim\r\n\tWHERE claim_master_1099_list_dim.tax_id_type='S' AND @{pipeline().parameters.WHERE_CLAIM_MASTER_1099_LIST_DIM}\n),\nEXP_claim_master_1099_list_dim AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_claim_master_1099_list_dim\n),\nSQ_client_tax_stage AS (\n\tselect Distinct  client_tax_stage.citx_tax_id from client_tax_stage\r\n\tWHERE client_tax_stage.tax_type_cd='SSN'\r\n\tAND @{pipeline().parameters.WHERE_CLIENT_TAX_STAGE}\n),\nEXP_client_tax_stage AS (\n\tSELECT\n\tcitx_tax_id\n\tFROM SQ_client_tax_stage\n),\nSQ_master_1099_list_stage AS (\n\tSELECT  Distinct master_1099_list_stage.tax_id\r\n\tFROM\r\n\t master_1099_list_stage\r\n\twhere master_1099_list_stage.tax_id_type='S' AND  @{pipeline().parameters.WHERE_MASTER_1099_LIST_STAGE}\r\n\tUNION\r\n\tSELECT  Distinct master_1099_list_stage.search_tax_id \r\n\tFROM\r\n\t master_1099_list_stage\r\n\twhere master_1099_list_stage.tax_id_type='S' AND @{pipeline().parameters.WHERE_MASTER_1099_LIST_STAGE}\n),\nEXP_master_1099_list_stage AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_master_1099_list_stage\n),\nSQ_vendor_dba_1099_stage AS (\n\tSELECT Distinct vendor_dba_1099_stage.tax_id \r\n\tFROM\r\n\t vendor_dba_1099_stage\r\n\t@{pipeline().parameters.WHERE_VENDOR_DBA_1099_STAGE}\n),\nEXP_vendor_dba_1099_stage AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_vendor_dba_1099_stage\n),\nSQ_claim_master_1099_list AS (\n\tSELECT Distinct claim_master_1099_list.tax_id FROM claim_master_1099_list\r\n\tWHERE claim_master_1099_list.tax_id_type='S' AND @{pipeline().parameters.WHERE_CLAIM_MASTER_1099_LIST}\r\n\tUNION\r\n\tSELECT Distinct claim_master_1099_list.irs_tax_id FROM claim_master_1099_list\r\n\tWHERE claim_master_1099_list.tax_id_type='S' AND @{pipeline().parameters.WHERE_CLAIM_MASTER_1099_LIST}\n),\nclaim_master_1099_list AS (\n\tSELECT\n\ttax_id\n\tFROM SQ_claim_master_1099_list\n),\nUnion_Input_Values_TaxIdTypes AS (\n\tSELECT tax_id\n\tFROM EXP_master_1099_list_stage\n\tUNION\n\tSELECT tax_id\n\tFROM EXP_claim_master_1099_list_dim\n\tUNION\n\tSELECT citx_tax_id AS tax_id\n\tFROM EXP_client_tax_stage\n\tUNION\n\tSELECT tax_id\n\tFROM EXP_Master1099ListMonthlyStage\n\tUNION\n\tSELECT TaxId AS tax_id\n\tFROM EXP_Work1099Reporting\n\tUNION\n\tSELECT tax_id\n\tFROM claim_master_1099_list\n\tUNION\n\tSELECT tax_id\n\tFROM EXP_arch_master_1099_list_stage\n\tUNION\n\tSELECT citx_tax_id AS tax_id\n\tFROM EXP_arch_client_tax_stage\n\tUNION\n\tSELECT dft_tax_id_nbr AS tax_id\n\tFROM EXP_ClaimDraftMonthlyStage\n\tUNION\n\tSELECT tax_id\n\tFROM EXP_vendor_dba_1099_stage\n\tUNION\n\tSELECT dft_tax_id_nbr AS tax_id\n\tFROM EXP_CLAIM_DRAFT_STAGE\n\tUNION\n\tSELECT dft_tax_id_nbr AS tax_id\n\tFROM EXP_ARCH_CLAIM_DRAFT_STAGE\n),\nEXP_SSN_FEIN_TAXID AS (\n\tSELECT\n\ttax_id AS id,\n\ttax_id AS ssn_fein_taxid,\n\t-- *INF*: LTRIM(RTRIM(ssn_fein_taxid))\n\tLTRIM(RTRIM(ssn_fein_taxid)) AS V_ssn_fein_taxid,\n\t-- *INF*: IIF(SUBSTR(V_ssn_fein_taxid,3,1)='-'OR (SUBSTR(V_ssn_fein_taxid,1,3)='000' AND (LENGTH(V_ssn_fein_taxid)=9 ))OR SUBSTR(V_ssn_fein_taxid,2,1)='-'  OR ISNULL(V_ssn_fein_taxid) OR (V_ssn_fein_taxid='N/A')   OR REG_MATCH(V_ssn_fein_taxid,'[*]*') OR(REG_MATCH(V_ssn_fein_taxid,'[\\da-zA-Z]+') AND (LENGTH(V_ssn_fein_taxid)=11 OR LENGTH(V_ssn_fein_taxid)=10) )\r\n\t--  OR ((SUBSTR(V_ssn_fein_taxid,4,1)='-')  AND  (LENGTH(V_ssn_fein_taxid) != 11 )) OR (LENGTH(V_ssn_fein_taxid)<=6 ) OR  (LENGTH(V_ssn_fein_taxid)>11 ) ,'NOTVALID','VALID')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(SUBSTR(V_ssn_fein_taxid, 3, 1) = '-' OR ( SUBSTR(V_ssn_fein_taxid, 1, 3) = '000' AND ( LENGTH(V_ssn_fein_taxid) = 9 ) ) OR SUBSTR(V_ssn_fein_taxid, 2, 1) = '-' OR V_ssn_fein_taxid IS NULL OR ( V_ssn_fein_taxid = 'N/A' ) OR REG_MATCH(V_ssn_fein_taxid, '[*]*') OR ( REG_MATCH(V_ssn_fein_taxid, '[\\da-zA-Z]+') AND ( LENGTH(V_ssn_fein_taxid) = 11 OR LENGTH(V_ssn_fein_taxid) = 10 ) ) OR ( ( SUBSTR(V_ssn_fein_taxid, 4, 1) = '-' ) AND ( LENGTH(V_ssn_fein_taxid) != 11 ) ) OR ( LENGTH(V_ssn_fein_taxid) <= 6 ) OR ( LENGTH(V_ssn_fein_taxid) > 11 ), 'NOTVALID', 'VALID') AS V_flag,\n\tV_flag AS flag,\n\t-- *INF*: IIF(LENGTH(V_ssn_fein_taxid)>=7 AND LENGTH(V_ssn_fein_taxid)<=8,LPAD(V_ssn_fein_taxid,9,'0'),V_ssn_fein_taxid)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(LENGTH(V_ssn_fein_taxid) >= 7 AND LENGTH(V_ssn_fein_taxid) <= 8, LPAD(V_ssn_fein_taxid, 9, '0'), V_ssn_fein_taxid) AS V_taxid,\n\t-- *INF*: IIF(REG_MATCH(V_taxid,'[0-9-]*') ,V_taxid,'X')\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(REG_MATCH(V_taxid, '[0-9-]*'), V_taxid, 'X') AS V_valid_taxid,\n\tV_valid_taxid AS flag_TaxId,\n\t-- *INF*: IIF(LENGTH(V_valid_taxid)=9  AND (REG_MATCH(V_valid_taxid,'^[0-9]*$'))  ,(SUBSTR(V_valid_taxid, 1, 3) ||'-'||SUBSTR(V_valid_taxid, 4, 2)||'-'||SUBSTR(V_valid_taxid, 6, 4)) ,V_valid_taxid)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(LENGTH(V_valid_taxid) = 9 AND ( REG_MATCH(V_valid_taxid, '^[0-9]*$') ), ( SUBSTR(V_valid_taxid, 1, 3) || '-' || SUBSTR(V_valid_taxid, 4, 2) || '-' || SUBSTR(V_valid_taxid, 6, 4) ), V_valid_taxid) AS OUT_taxid\n\tFROM Union_Input_Values_TaxIdTypes\n),\nRTR_SSN_FEIN_TAXID AS (\n\tSELECT\n\tid,\n\tflag,\n\tssn_fein_taxid AS fein_taxid,\n\tOUT_taxid AS ssn,\n\tflag_TaxId\n\tFROM EXP_SSN_FEIN_TAXID\n),\nRTR_SSN_FEIN_TAXID_NOTVALID_SSN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag = 'NOTVALID'),\nRTR_SSN_FEIN_TAXID_VALID_SSN AS (SELECT * FROM RTR_SSN_FEIN_TAXID WHERE flag='VALID'  AND flag_TaxId != 'X'),\nAGG_Removes_Duplicates AS (\n\tSELECT\n\tid AS o_ID, \n\tssn AS adnm_taxid_ssn\n\tFROM RTR_SSN_FEIN_TAXID_VALID_SSN\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY o_ID, adnm_taxid_ssn ORDER BY NULL) = 1\n),\nUnion_Inputs AS (\n\tSELECT o_ID, adnm_taxid_ssn\n\tFROM AGG_Remove_Duplicates\n\tUNION\n\tSELECT o_ID, adnm_taxid_ssn\n\tFROM AGG_Removes_Duplicates\n),\nEXP_Abort AS (\n\tSELECT\n\to_ID,\n\tadnm_taxid_ssn,\n\t-- *INF*: IIF((SUBSTR(adnm_taxid_ssn,4,1)='-'),Abort ('Found Valid SSN Data and Aborting the job. Please tokenize the valid SSN data'))\n\tIFF(( SUBSTR(adnm_taxid_ssn, 4, 1) = '-' ), Abort('Found Valid SSN Data and Aborting the job. Please tokenize the valid SSN data')) AS Abort\n\tFROM Union_Inputs\n),\nFIL_Abort AS (\n\tSELECT\n\to_ID, \n\tadnm_taxid_ssn, \n\tAbort\n\tFROM EXP_Abort\n\tWHERE FALSE\n),\nClaims_OneTime_Conversion_Batch_File AS (\n\tINSERT INTO TEST_File\n\t(ID, SSN_TOKENS)\n\tSELECT \n\to_ID AS ID, \n\tadnm_taxid_ssn AS SSN_TOKENS\n\tFROM FIL_Abort\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "DBCONNECTION_SOURCE1": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_SOURCE2": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_SOURCE3": {
                "type": "string",
                "defaultValue": "SQLServer_DataFeedMart_Policy"
            },
            "DBCONNECTION_SOURCE4": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "OUTPUTFILENAME": {
                "type": "string",
                "defaultValue": "\\\\wiwpfil03.file.core.windows.net\\infasharedprod\\TgtFiles\\Check_Valid_Sensitive_Data\\Claims_OneTime_Conversion_BatchFile.csv"
            },
            "WHERE_CLAIM_PARTY": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(tax_ssn_id,4,1)='-'"
            },
            "WHERE_CLAIM_PAYMENT_DIM": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(prim_payee_tax_id,4,1)='-'"
            },
            "WHERE_CLAIM_TRANSACTION": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(tax_id,4,1)='-' AND LEN(tax_id)> 10"
            },
            "WHERE_WORKNCCIMITCHELL": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(SocialSecurityNumber,4,1)='-'"
            },
            "WHERE_PMS_ADJUSTER_MASTER_STAGE": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(adnm_taxid_ssn,4,1)='-'"
            },
            "WHERE_WORK_CLAIM_MATTERS_EXTRACT": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(matter_firm_tax_id,4,1)='-'"
            },
            "WHERE_PIF_42GJ_STAGE": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(ipfc4j_id_number,4,1)='-'"
            },
            "WHERE_WORK_CLAIM_CMS_QUERY_EXTRACT": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(injured_party_ssn,4,1)='-'"
            },
            "WHERE_ARCH_PMS_ADJUSTER_MASTER_STAGE": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(adnm_taxid_ssn,4,1)='-'"
            },
            "WHERE_CLAIM_PARTY_DIM": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(tax_ssn_id,4,1)='-'"
            },
            "WHERE_WORK_CLAIM_CMS_DETAIL_EXTRACT": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(injured_party_ssn,4,1)='-'"
            },
            "WHERE_WORK_WORKERS_COMP_FIRST_REPORT_OF_INJURY_EXTRACT": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(employee_ssn,4,1)='-'"
            },
            "WHERE_CLAIMANT_DIM": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(claimant_tax_ssn_id,4,1)='-'"
            },
            "WHERE_CLAIM_LOSS_TRANSACTION_FACT": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(tax_id,4,1)='-' and LEN(tax_id)> 10"
            },
            "WHERE_ARCH_PIF_42GJ_STAGE": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(ipfc4j_id_number,4,1)='-'"
            },
            "WHERE_ARCH_CLIENT_TAX_STAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(citx_tax_id,4,1)='-'"
            },
            "WHERE_CLAIM_MASTER_1099_LIST": {
                "type": "string",
                "defaultValue": "SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_ARCH_MASTER_1099_LIST_STAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_WORK1099REPORTING": {
                "type": "string",
                "defaultValue": "SUBSTRING(TaxId,4,1)='-'"
            },
            "WHERE_MASTER1099LISTMONTHLYSTAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_CLIENT_TAX_STAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(citx_tax_id,4,1)='-'"
            },
            "WHERE_MASTER_1099_LIST_STAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_CLAIM_MASTER_1099_LIST_DIM": {
                "type": "string",
                "defaultValue": "SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_CLAIMDRAFTMONTHLYSTAGE": {
                "type": "string",
                "defaultValue": "SUBSTRING(dft_tax_id_nbr,4,1)='-'"
            },
            "WHERE_VENDOR_DBA_1099_STAGE": {
                "type": "string",
                "defaultValue": "WHERE SUBSTRING(tax_id,4,1)='-'"
            },
            "WHERE_CLAIM_DRAFT_STAGE ": {
                "type": "string",
                "defaultValue": "SUBSTRING(dft_tax_id_nbr,4,1)='-'"
            },
            "WHERE_ARCH_CLAIM_DRAFT_STAGE ": {
                "type": "string",
                "defaultValue": "SUBSTRING(dft_tax_id_nbr,4,1)='-' and LEN(dft_tax_id_nbr)> 10"
            },
            "WHERE_ARCH_CLAIM_DRAFT_STAGE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAIM_DRAFT_STAGE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}