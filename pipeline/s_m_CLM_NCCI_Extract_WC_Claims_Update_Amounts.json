{
    "name": "s_m_CLM_NCCI_Extract_WC_Claims_Update_Amounts",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_NCCI_Extract_WC_Claims_Update_Amounts",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_GetTotalPaidMedAmt AS (\n\tSELECT\n\ttotal_paid_med_amt,\n\twork_claim_ncci_rpt_extract_id\n\tFROM (\n\t\tSELECT \n\t\t\ttotal_paid_med_amt,\n\t\t\twork_claim_ncci_rpt_extract_id\n\t\tFROM work_claim_ncci_report_extract\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY work_claim_ncci_rpt_extract_id ORDER BY total_paid_med_amt) = 1\n),\nSQ_work_claim_ncci_report_extract AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t       ncci_extract_tab.edw_claim_occurrence_ak_id,\r\n\t       ncci_extract_tab.edw_claim_party_occurrence_ak_id,\r\n\t       ncci_extract_tab.edw_pol_ak_id,\r\n\t       ncci_extract_tab.jurisdiction_state,\r\n\t       ncci_extract_tab.claim_status_code,\r\n\t       clmt.ttd_rate,\r\n\t       clmt.ppd_rate,\r\n\t       clmt.ptd_rate,\r\n\t       clmt.dtd_rate,\r\n\t       clmt_cov.cause_of_loss,\r\n\t       fin_dim.financial_type_code,\r\n\t       pay_dim.micro_ecd_draft_num,\r\n\t       ( CASE clmt_cov.cause_of_loss\r\n\t           WHEN '05' THEN SUM(loss_fact.direct_loss_paid_excluding_recoveries)\r\n\t           ELSE 0\r\n\t         END )                                                     AS indemnity_payment_amt,\r\n\t       SUM(loss_fact.direct_loss_outstanding_excluding_recoveries) AS open_reserve_amt,\r\n\t       SUM(loss_fact.direct_loss_paid_excluding_recoveries)        AS benefit_amt,\r\n\t       SUM(loss_fact.direct_alae_paid_excluding_recoveries)        AS emeployer_legal_amount_paid,\r\n\t       SUM(loss_fact.direct_subrogation_incurred)                  AS Subrogation_Recoveries,\r\n\t       ( CASE trans_dim.trans_ctgry_code\r\n\t           WHEN 'SI' THEN SUM(loss_fact.direct_other_recovery_loss_incurred)\r\n\t           ELSE 0\r\n\t         END )                                                     AS Other_Recoveries_For_Second_Injury_Fund,\r\n\t       ( CASE trans_dim.trans_ctgry_code\r\n\t           WHEN 'EX' THEN SUM(loss_fact.direct_other_recovery_alae_incurred)\r\n\t           ELSE 0\r\n\t         END )                                                     AS Recovery_Expenses\r\n\tFROM   work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\t       INNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\t       INNER JOIN claim_occurrence_dim co WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\t       INNER JOIN policy_dim pol WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\t       INNER JOIN claim_loss_transaction_fact loss_fact WITH (NOLOCK)\r\n\t         ON clmt.claimant_dim_id = loss_fact.claimant_dim_id\r\n\t            AND co.claim_occurrence_dim_id = loss_fact.claim_occurrence_dim_id\r\n\t            AND pol.pol_dim_id = loss_fact.pol_dim_id\r\n\t       INNER JOIN claimant_coverage_dim clmt_cov WITH (NOLOCK)\r\n\t         ON loss_fact.claimant_cov_dim_id = clmt_cov.claimant_cov_dim_id\r\n\t       INNER JOIN claim_financial_type_dim fin_dim WITH (NOLOCK)\r\n\t         ON loss_fact.claim_financial_type_dim_id = fin_dim.claim_financial_type_dim_id\r\n\t       LEFT OUTER JOIN claim_transaction_type_dim trans_dim\r\n\t         ON loss_fact.claim_trans_type_dim_id = trans_dim.claim_trans_type_dim_id\r\n\t       left outer join claim_payment_dim pay_dim\r\n\t       on loss_fact.claim_pay_dim_id = pay_dim.claim_pay_dim_id\r\n\tWHERE  co.crrnt_snpsht_flag = 1\r\n\t       AND pol.crrnt_snpsht_flag = 1\r\n\t       AND clmt.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.crrnt_snpsht_flag = 1\r\n\t       AND ncci_extract_tab.transm_status IN ( 'O', 'Y' ) --only those records that are to be transmitted\r\n\t       AND ncci_extract_tab.valuation_lvl_code <> '999' --discard anything that is older than 10 years\r\n\tGROUP  BY ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t          ncci_extract_tab.edw_claim_occurrence_ak_id,\r\n\t          ncci_extract_tab.edw_claim_party_occurrence_ak_id,\r\n\t          ncci_extract_tab.edw_pol_ak_id,\r\n\t       ncci_extract_tab.jurisdiction_state,\r\n\t          ncci_extract_tab.claim_status_code,\r\n\t          clmt.dtd_rate,\r\n\t          clmt.ptd_rate,\r\n\t          clmt.ttd_rate,\r\n\t          clmt.ppd_rate,\r\n\t          clmt_cov.cause_of_loss,\r\n\t          fin_dim.financial_type_code,\r\n\t          trans_dim.trans_ctgry_code,\r\n\t          pay_dim.micro_ecd_draft_num\n),\nExp_Get_Source_Data AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_occurrence_ak_id1,\n\tedw_pol_ak_id,\n\tjurisdiction_state,\n\tclaim_status_code,\n\tttd_rate,\n\tppd_rate,\n\tptd_rate,\n\tdtd_rate,\n\tcause_of_loss,\n\tfinancial_type_code,\n\tmicro_ecd_draft_num,\n\tdirect_loss_paid_excluding_recoveries AS indemnity_payment_amt,\n\tdirect_loss_outstanding_excluding_recoveries AS open_reserve_amt,\n\tdirect_loss_incurred_excluding_recoveries AS benefit_amt,\n\tdirect_alae_paid_excluding_recoveries AS employer_legal_amount_paid,\n\tdirect_subrogation_incurred AS Subrogation_Recoveries,\n\tdirect_other_recovery_loss_incurred AS Other_Recoveries_For_Second_Injury_Fund,\n\tdirect_other_recovery_alae_incurred AS Recovery_Expenses,\n\t-- *INF*: iif(Recovery_Expenses > (Subrogation_Recoveries+Other_Recoveries_For_Second_Injury_Fund) or Subrogation_Recoveries = 0 or Other_Recoveries_For_Second_Injury_Fund = 0\r\n\t-- ,0\r\n\t-- ,Subrogation_Recoveries+Other_Recoveries_For_Second_Injury_Fund)\n\tIFF(\n\t    Recovery_Expenses > (Subrogation_Recoveries + Other_Recoveries_For_Second_Injury_Fund)\n\t    or Subrogation_Recoveries = 0\n\t    or Other_Recoveries_For_Second_Injury_Fund = 0,\n\t    0,\n\t    Subrogation_Recoveries + Other_Recoveries_For_Second_Injury_Fund\n\t) AS Recovery_Reimbursement_Amount\n\tFROM SQ_work_claim_ncci_report_extract\n),\nSQ_work_claim_ncci_report_extract1 AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t\tpay_dim.micro_ecd_draft_num,\r\n\t\tpay_dim.prim_payee_role_code,\r\n\t    ctgry_dim.claim_pay_ctgry_type,\r\n\t    ctgry_dim.claim_pay_ctgry_lump_sum_ind,\r\n\t    payfact.claim_pay_ctgry_amt,\r\n\t    (case claim_pay_ctgry_type\r\n\t    when 'PD' THEN payfact.claim_pay_ctgry_amt\r\n\t    ELSE 0 END) AS TPD_AMT,\r\n\t    (CASE claim_pay_ctgry_type\r\n\t    WHEN 'PD' THEN payfact.claim_pay_ctgry_end_date_id\r\n\t    ELSE 0 END) AS END_DATE,\r\n\t    (CASE claim_pay_ctgry_type\r\n\t    WHEN 'PD' THEN payfact.claim_pay_ctgry_start_date_id\r\n\t    ELSE 0 END) AS start_DATE\r\n\tFROM  work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\t       INNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\t       INNER JOIN claim_occurrence_dim co WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\t       INNER JOIN policy_dim pol WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\t       INNER JOIN claim_payment_category_fact payfact\r\n\t         ON co.claim_occurrence_dim_id = payfact.claim_occurrence_dim_id\r\n\t         and clmt.claimant_dim_id = payfact.claimant_dim_id\r\n\t         and pol.pol_dim_id = payfact.pol_dim_id\r\n\t       INNER JOIN claim_payment_category_type_dim ctgry_dim\r\n\t         ON payfact.claim_pay_ctgry_type_dim_id = ctgry_dim.claim_pay_ctgry_type_dim_id\r\n\t       INNER JOIN claim_payment_dim cp\r\n\t         ON payfact.claim_pay_dim_id = cp.claim_pay_dim_id\r\n\t       INNER JOIN claim_payment_dim pay_dim\r\n\t       on payfact.claim_pay_dim_id = pay_dim.claim_pay_dim_id\r\n\tWHERE  co.crrnt_snpsht_flag = 1\r\n\tand clmt.crrnt_snpsht_flag = 1\r\n\tand pol.crrnt_snpsht_flag = 1\r\n\t       AND ctgry_dim.crrnt_snpsht_flag = 1\r\n\t       AND cp.crrnt_snpsht_flag = 1\r\n\t       AND ncci_extract_tab.transm_status IN ( 'O', 'Y' ) --only those records that are to be transmitted\r\n\t       AND ncci_extract_tab.valuation_lvl_code <> '999' --discard anything that is older than 10 years\r\n\tORDER BY ncci_extract_tab.work_claim_ncci_rpt_extract_id,END_DATE,START_DATE,payfact.claim_pay_ctgry_fact_id \r\n\t\r\n\t--for benefit type code =11, we are interested in claim_pay_ctgry_type = 'PD' corresponding to the most recent payment date (payfact.claim_pay_ctgry_end_date_id). If end dates are same, then we go by Start_Date. later on this data is sorted and then sent to Aggregator.\n),\nExp_Payment_Data AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tmicro_ecd_draft_num,\n\tprim_payee_role_code,\n\tclaim_pay_ctgry_type,\n\tclaim_pay_ctgry_lump_sum_ind,\n\t-- *INF*: iif(claim_pay_ctgry_lump_sum_ind = 'N/A'\r\n\t-- ,'N'\r\n\t-- ,claim_pay_ctgry_lump_sum_ind)\n\tIFF(claim_pay_ctgry_lump_sum_ind = 'N/A', 'N', claim_pay_ctgry_lump_sum_ind) AS o_claim_pay_ctgry_lump_sum_ind,\n\tclaim_pay_ctgry_amt,\n\tclaim_pay_ctgry_earned_amt AS TPD_AMT,\n\tclaim_pay_ctgry_start_date_id,\n\tclaim_pay_ctgry_end_date_id\n\tFROM SQ_work_claim_ncci_report_extract1\n),\nJNR_Combine_Loss_Payment_Data AS (SELECT\n\tExp_Get_Source_Data.work_claim_ncci_rpt_extract_id, \n\tExp_Get_Source_Data.edw_claim_occurrence_ak_id, \n\tExp_Get_Source_Data.edw_claim_party_occurrence_ak_id1, \n\tExp_Get_Source_Data.edw_pol_ak_id, \n\tExp_Get_Source_Data.jurisdiction_state, \n\tExp_Get_Source_Data.claim_status_code, \n\tExp_Get_Source_Data.ttd_rate, \n\tExp_Get_Source_Data.ppd_rate, \n\tExp_Get_Source_Data.ptd_rate, \n\tExp_Get_Source_Data.dtd_rate, \n\tExp_Get_Source_Data.cause_of_loss, \n\tExp_Get_Source_Data.financial_type_code, \n\tExp_Get_Source_Data.micro_ecd_draft_num AS micro_ecd_draft_num1, \n\tExp_Get_Source_Data.indemnity_payment_amt, \n\tExp_Get_Source_Data.open_reserve_amt, \n\tExp_Get_Source_Data.benefit_amt, \n\tExp_Get_Source_Data.employer_legal_amount_paid, \n\tExp_Get_Source_Data.Subrogation_Recoveries, \n\tExp_Get_Source_Data.Other_Recoveries_For_Second_Injury_Fund, \n\tExp_Get_Source_Data.Recovery_Expenses, \n\tExp_Get_Source_Data.Recovery_Reimbursement_Amount, \n\tExp_Payment_Data.work_claim_ncci_rpt_extract_id AS work_claim_ncci_rpt_extract_id1, \n\tExp_Payment_Data.micro_ecd_draft_num, \n\tExp_Payment_Data.prim_payee_role_code, \n\tExp_Payment_Data.claim_pay_ctgry_type, \n\tExp_Payment_Data.o_claim_pay_ctgry_lump_sum_ind AS claim_pay_ctgry_lump_sum_ind, \n\tExp_Payment_Data.claim_pay_ctgry_amt, \n\tExp_Payment_Data.TPD_AMT, \n\tExp_Payment_Data.claim_pay_ctgry_start_date_id, \n\tExp_Payment_Data.claim_pay_ctgry_end_date_id\n\tFROM Exp_Payment_Data\n\tRIGHT OUTER JOIN Exp_Get_Source_Data\n\tON Exp_Get_Source_Data.work_claim_ncci_rpt_extract_id = Exp_Payment_Data.work_claim_ncci_rpt_extract_id AND Exp_Get_Source_Data.micro_ecd_draft_num = Exp_Payment_Data.micro_ecd_draft_num\n),\nSRT_Sort_Data AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id, \n\tedw_claim_occurrence_ak_id, \n\tedw_claim_party_occurrence_ak_id1, \n\tedw_pol_ak_id, \n\tjurisdiction_state, \n\tclaim_status_code, \n\tttd_rate, \n\tppd_rate, \n\tptd_rate, \n\tdtd_rate, \n\tcause_of_loss, \n\tfinancial_type_code, \n\tindemnity_payment_amt, \n\topen_reserve_amt, \n\tbenefit_amt, \n\temployer_legal_amount_paid, \n\tSubrogation_Recoveries, \n\tOther_Recoveries_For_Second_Injury_Fund, \n\tRecovery_Expenses, \n\tRecovery_Reimbursement_Amount, \n\tprim_payee_role_code, \n\tclaim_pay_ctgry_type, \n\tclaim_pay_ctgry_lump_sum_ind, \n\tclaim_pay_ctgry_amt, \n\tTPD_AMT, \n\tclaim_pay_ctgry_end_date_id, \n\tclaim_pay_ctgry_start_date_id\n\tFROM JNR_Combine_Loss_Payment_Data\n\tORDER BY work_claim_ncci_rpt_extract_id ASC, claim_pay_ctgry_end_date_id ASC, claim_pay_ctgry_start_date_id ASC\n),\nAgg_Calculate_Payments_And_Benefits AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_occurrence_ak_id1,\n\tedw_pol_ak_id,\n\tjurisdiction_state,\n\tclaim_status_code,\n\tttd_rate,\n\tppd_rate,\n\tptd_rate,\n\tdtd_rate,\n\tcause_of_loss,\n\tclaim_pay_ctgry_type,\n\tclaim_pay_ctgry_lump_sum_ind,\n\tprim_payee_role_code,\n\tfinancial_type_code,\n\tindemnity_payment_amt AS indemnity_payment_amt_loss_trans,\n\t-- *INF*: sum(indemnity_payment_amt_loss_trans)\n\tsum(indemnity_payment_amt_loss_trans) AS o_indemnity_payment_amt_loss_trans,\n\tclaim_pay_ctgry_amt AS indemnity_payment_amt_pay_fact,\n\t-- *INF*: sum(indemnity_payment_amt_pay_fact)\n\tsum(indemnity_payment_amt_pay_fact) AS o_indemnity_payment_amt_pay_fact,\n\topen_reserve_amt,\n\t-- *INF*: sum(open_reserve_amt)\n\tsum(open_reserve_amt) AS o_open_reserve_amt,\n\tclaim_pay_ctgry_amt AS benefit_amt,\n\temployer_legal_amount_paid,\n\tSubrogation_Recoveries,\n\tOther_Recoveries_For_Second_Injury_Fund,\n\tRecovery_Expenses,\n\tRecovery_Reimbursement_Amount AS Recovery_Reimbursement_Amount1,\n\t-- *INF*: iif(Recovery_Expenses > (Subrogation_Recoveries+Other_Recoveries_For_Second_Injury_Fund) or Subrogation_Recoveries = 0 or Other_Recoveries_For_Second_Injury_Fund = 0\r\n\t-- ,0\r\n\t-- ,Subrogation_Recoveries+Other_Recoveries_For_Second_Injury_Fund)\n\tIFF(\n\t    Recovery_Expenses > (Subrogation_Recoveries + Other_Recoveries_For_Second_Injury_Fund)\n\t    or Subrogation_Recoveries = 0\n\t    or Other_Recoveries_For_Second_Injury_Fund = 0,\n\t    0,\n\t    Subrogation_Recoveries + Other_Recoveries_For_Second_Injury_Fund\n\t) AS Recovery_Reimbursement_Amount,\n\tclaim_pay_ctgry_amt AS claimant_legal_amount_paid,\n\tclaim_pay_ctgry_end_date_id,\n\tclaim_pay_ctgry_start_date_id,\n\t-- *INF*: sum(claimant_legal_amount_paid,(financial_type_code = 'D' and claim_pay_ctgry_type = 'CL'))\n\tsum(claimant_legal_amount_paid, (financial_type_code = 'D' and claim_pay_ctgry_type = 'CL')) AS o_claimanat_legal_amount_paid,\n\t-- *INF*: sum(employer_legal_amount_paid,(prim_payee_role_code = 'WDAT' and (claim_pay_ctgry_type = 'LF' OR claim_pay_ctgry_type = 'LS')))\n\tsum(employer_legal_amount_paid, (prim_payee_role_code = 'WDAT' and (claim_pay_ctgry_type = 'LF' OR claim_pay_ctgry_type = 'LS'))) AS o_employer_legal_amount_paid,\n\t-- *INF*: count(work_claim_ncci_rpt_extract_id,prim_payee_role_code = 'WPLA')\n\tcount(work_claim_ncci_rpt_extract_id, prim_payee_role_code = 'WPLA') AS Attorny_Authorized_Representative_Ind,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'DT' or claim_pay_ctgry_type = 'FN') and claim_pay_ctgry_lump_sum_ind = 'N'))\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'DT' or claim_pay_ctgry_type = 'FN') and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'PT' or claim_pay_ctgry_type = 'PS') and claim_pay_ctgry_lump_sum_ind = 'N') )\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'PT' or claim_pay_ctgry_type = 'PS') and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PP' and claim_pay_ctgry_lump_sum_ind = 'N') )\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PP' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_PP,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PB' and claim_pay_ctgry_lump_sum_ind = 'N') )\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PB' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_PB,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'TD' \r\n\t-- or claim_pay_ctgry_type = 'PL'\r\n\t-- or claim_pay_ctgry_type = 'TC')\r\n\t-- --or claim_pay_ctgry_type = 'VC'\r\n\t-- --or claim_pay_ctgry_type = 'VD'\r\n\t-- --or claim_pay_ctgry_type = 'VE'\r\n\t-- --or claim_pay_ctgry_type = 'VR'\r\n\t-- --or claim_pay_ctgry_type = 'VT')\r\n\t-- and claim_pay_ctgry_lump_sum_ind = 'N'\r\n\t-- ))\r\n\t-- \r\n\t-- --VC, VD,VE,VR,VT - all vocational codes taken out from the logic as per NCCI edit 0092-03.\r\n\t-- \r\n\t-- \n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'TD' or claim_pay_ctgry_type = 'PL' or claim_pay_ctgry_type = 'TC') and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'MP' and claim_pay_ctgry_lump_sum_ind = 'N') )\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'MP' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_MP,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'DF' and claim_pay_ctgry_lump_sum_ind = 'N'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'DF' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_DF,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PD' and claim_pay_ctgry_lump_sum_ind = 'N'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PD' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_PD,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'EP' and claim_pay_ctgry_lump_sum_ind = 'N'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'EP' and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_EP,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'AL' OR claim_pay_ctgry_type = 'UI') and claim_pay_ctgry_lump_sum_ind = 'N'))\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'AL' OR claim_pay_ctgry_type = 'UI') and claim_pay_ctgry_lump_sum_ind = 'N')) AS Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'DT' or claim_pay_ctgry_type = 'FN') and claim_pay_ctgry_lump_sum_ind = 'Y'))\r\n\t-- \r\n\t-- \n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'DT' or claim_pay_ctgry_type = 'FN') and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_DT_FN,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'PT'  or claim_pay_ctgry_type = 'PS') and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'PT' or claim_pay_ctgry_type = 'PS') and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_PT_PS,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PP' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PP' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_PP,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PB' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PB' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_PB,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'TD' \r\n\t-- or claim_pay_ctgry_type = 'PL'\r\n\t-- or claim_pay_ctgry_type = 'TC')\r\n\t-- --or claim_pay_ctgry_type = 'VC'\r\n\t-- --or claim_pay_ctgry_type = 'VD'\r\n\t-- --or claim_pay_ctgry_type = 'VE'\r\n\t-- --or claim_pay_ctgry_type = 'VR'\r\n\t-- --or claim_pay_ctgry_type = 'VT')\r\n\t-- and claim_pay_ctgry_lump_sum_ind = 'Y'))\r\n\t-- \r\n\t-- \r\n\t-- --Vocational amounts are excluded as part of DDRR-60\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'TD' or claim_pay_ctgry_type = 'PL' or claim_pay_ctgry_type = 'TC') and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_TD_PL_TC,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'MP' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'MP' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_MP,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'DF' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'DF' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_DF,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'PD' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'PD' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_PD,\n\t-- *INF*: sum(benefit_amt,(claim_pay_ctgry_type = 'EP' and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, (claim_pay_ctgry_type = 'EP' and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_EP,\n\t-- *INF*: sum(benefit_amt,((claim_pay_ctgry_type = 'AL' OR claim_pay_ctgry_type = 'UI') and claim_pay_ctgry_lump_sum_ind = 'Y'))\n\tsum(benefit_amt, ((claim_pay_ctgry_type = 'AL' OR claim_pay_ctgry_type = 'UI') and claim_pay_ctgry_lump_sum_ind = 'Y')) AS Benefit_Covered_By_Lump_Sump_AL_UI,\n\t-- *INF*: sum(indemnity_payment_amt_pay_fact,(cause_of_loss = '05' and claim_pay_ctgry_type = 'VE'))\r\n\t-- \r\n\t-- \n\tsum(indemnity_payment_amt_pay_fact, (cause_of_loss = '05' and claim_pay_ctgry_type = 'VE')) AS Vocational_Rehab_Evaluation_Expense_Amount_Paid,\n\t-- *INF*: sum(indemnity_payment_amt_pay_fact,(cause_of_loss = '05' and claim_pay_ctgry_type = 'VM'))\r\n\t-- \n\tsum(indemnity_payment_amt_pay_fact, (cause_of_loss = '05' and claim_pay_ctgry_type = 'VM')) AS Vocational_Rehab_Maintenance_Benefit_Amount_Paid,\n\t-- *INF*: sum(indemnity_payment_amt_pay_fact,(cause_of_loss = '05' and claim_pay_ctgry_type = 'VD' ))\r\n\t-- \r\n\t-- \n\tsum(indemnity_payment_amt_pay_fact, (cause_of_loss = '05' and claim_pay_ctgry_type = 'VD')) AS Vocational_Rehab_Education_Expense_Amount_Paid,\n\t-- *INF*: sum(indemnity_payment_amt_pay_fact,(cause_of_loss = '05' and (claim_pay_ctgry_type = 'VC' or claim_pay_ctgry_type = 'VT' )))\r\n\t-- \r\n\t-- \n\tsum(indemnity_payment_amt_pay_fact, (cause_of_loss = '05' and (claim_pay_ctgry_type = 'VC' or claim_pay_ctgry_type = 'VT'))) AS Vocational_Rehab_Other_Amount_Paid,\n\tTPD_AMT\n\tFROM SRT_Sort_Data\n\tGROUP BY work_claim_ncci_rpt_extract_id, edw_claim_occurrence_ak_id, edw_claim_party_occurrence_ak_id1, edw_pol_ak_id\n),\nEXP_Calculate_Payments_And_Benefits AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_occurrence_ak_id1,\n\tttd_rate,\n\tppd_rate,\n\tptd_rate,\n\tjurisdiction_state,\n\tdtd_rate,\n\tedw_pol_ak_id,\n\tclaim_status_code,\n\to_indemnity_payment_amt_loss_trans AS indemnity_payment_amt_loss_trans,\n\to_indemnity_payment_amt_pay_fact AS indemnity_payment_amt_pay_fact,\n\t-- *INF*: lpad(to_char(to_integer(indemnity_payment_amt_pay_fact,false)),9,'0')\n\tlpad(to_char(CAST(indemnity_payment_amt_pay_fact AS INTEGER)), 9, '0') AS o_indemnity_payment_amt,\n\to_open_reserve_amt AS open_reserve_amt,\n\t-- *INF*: lpad(to_char(to_integer(open_reserve_amt,false)),9,'0')\n\tlpad(to_char(CAST(open_reserve_amt AS INTEGER)), 9, '0') AS o_open_reserve_amt,\n\tRecovery_Reimbursement_Amount,\n\t-- *INF*: iif(isnull(Recovery_Reimbursement_Amount) or Recovery_Reimbursement_Amount = 0 ,'000000000' \r\n\t-- ,lpad(to_char(to_integer(claimanat_legal_amount_paid,false)),9,'0'))\n\tIFF(\n\t    Recovery_Reimbursement_Amount IS NULL or Recovery_Reimbursement_Amount = 0, '000000000',\n\t    lpad(to_char(CAST(claimanat_legal_amount_paid AS INTEGER)), 9, '0')\n\t) AS o_Recovery_Reimbursement_Amount,\n\to_claimanat_legal_amount_paid AS claimanat_legal_amount_paid,\n\t-- *INF*: iif(isnull(claimanat_legal_amount_paid)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(claimanat_legal_amount_paid,false)),9,'0'))\n\tIFF(\n\t    claimanat_legal_amount_paid IS NULL, '000000000',\n\t    lpad(to_char(CAST(claimanat_legal_amount_paid AS INTEGER)), 9, '0')\n\t) AS o_claimant_legal_amount_paid,\n\to_employer_legal_amount_paid AS employer_legal_amount_paid,\n\t-- *INF*: iif(isnull(employer_legal_amount_paid)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(employer_legal_amount_paid,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    employer_legal_amount_paid IS NULL, '000000000',\n\t    lpad(to_char(CAST(employer_legal_amount_paid AS INTEGER)), 9, '0')\n\t) AS o_employer_legal_amount_paid,\n\tAttorny_Authorized_Representative_Ind,\n\t-- *INF*: iif(Attorny_Authorized_Representative_Ind >=1, 'Y','N')\n\tIFF(Attorny_Authorized_Representative_Ind >= 1, 'Y', 'N') AS o_Attorny_Authorized_Representative_Ind,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_DT_FN,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_PT_PS,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_PP,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_PB,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_MP,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_DF,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_PD,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_EP,\n\tBenefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00', --if it is a medical claim, then 00\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN>0  AND indemnity_payment_amt_pay_fact > 0,'01',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS>0 AND indemnity_payment_amt_pay_fact > 0,'02',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0  AND  indemnity_payment_amt_pay_fact > 0,'03',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 AND  indemnity_payment_amt_pay_fact > 0,'04',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 AND  indemnity_payment_amt_pay_fact > 0 ,'05',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 AND  indemnity_payment_amt_pay_fact > 0 ,'06',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 AND  indemnity_payment_amt_pay_fact > 0 ,'09',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 AND  indemnity_payment_amt_pay_fact > 0,'11',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 AND  indemnity_payment_amt_pay_fact > 0,'12',\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 AND  indemnity_payment_amt > 0,'49', - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- (open_reserve_amt>0 and indemnity_payment_amt_loss_trans = 0),'05', --Anticipation of the benefit type\r\n\t-- '00')\r\n\t-- \n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN > 0 AND indemnity_payment_amt_pay_fact > 0, '01',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS > 0 AND indemnity_payment_amt_pay_fact > 0, '02',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0 AND indemnity_payment_amt_pay_fact > 0, '03',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0 AND indemnity_payment_amt_pay_fact > 0, '04',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0 AND indemnity_payment_amt_pay_fact > 0, '05',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0 AND indemnity_payment_amt_pay_fact > 0, '06',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0 AND indemnity_payment_amt_pay_fact > 0, '09',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0 AND indemnity_payment_amt_pay_fact > 0, '11',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0 AND indemnity_payment_amt_pay_fact > 0, '12',\n\t    (open_reserve_amt > 0 and indemnity_payment_amt_loss_trans = 0), '05',\n\t    '00'\n\t) AS v_Benefit_Type_Code1,\n\tv_Benefit_Type_Code1 AS o_Benefit_Type_Code1,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS>0 and v_Benefit_Type_Code1 < '02'  AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0,'02',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0 and v_Benefit_Type_Code1 < '03' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 ,'03',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code1 < '04' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 ,'04',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code1 < '05'  AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 , '05',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code1 < '06' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 ,'06',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code1 < '07' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 ,'09',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code1 < '11' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 ,'11',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code1 < '12' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt_pay_fact > 0 , '12',\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code1 < '49' AND v_Benefit_Type_Code1 > '00' AND  indemnity_payment_amt > 0 ,'49', - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS > 0 and v_Benefit_Type_Code1 < '02' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '02',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0 and v_Benefit_Type_Code1 < '03' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '03',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0 and v_Benefit_Type_Code1 < '04' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '04',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code1 < '05' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '05',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0 and v_Benefit_Type_Code1 < '06' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '06',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0 and v_Benefit_Type_Code1 < '07' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '09',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0 and v_Benefit_Type_Code1 < '11' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '11',\n\t    Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0 and v_Benefit_Type_Code1 < '12' AND v_Benefit_Type_Code1 > '00' AND indemnity_payment_amt_pay_fact > 0, '12',\n\t    '00'\n\t) AS v_Benefit_Type_Code2,\n\tv_Benefit_Type_Code2 AS o_Benefit_Type_Code2,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0,\r\n\t-- decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0 and v_Benefit_Type_Code2 < '03' and v_Benefit_Type_Code2 > '00','03',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code2 < '04' and v_Benefit_Type_Code2 > '00','04',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code2 < '05' and v_Benefit_Type_Code2 > '00', '05',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code2 < '06' and v_Benefit_Type_Code2 > '00','06',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code2 < '07' and v_Benefit_Type_Code2 > '00','09',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code2 < '11' and v_Benefit_Type_Code2 > '00','11',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code2 < '12' and v_Benefit_Type_Code2 > '00', '12',\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code2 < '49' and v_Benefit_Type_Code2 > '00','49', - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- '00')\r\n\t-- ,'00')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    decode(\n\t        true,\n\t        claim_status_code = '5', '00',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0\n\t    and v_Benefit_Type_Code2 < '03'\n\t    and v_Benefit_Type_Code2 > '00', '03',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0\n\t    and v_Benefit_Type_Code2 < '04'\n\t    and v_Benefit_Type_Code2 > '00', '04',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code2 < '05'\n\t    and v_Benefit_Type_Code2 > '00', '05',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code2 < '06'\n\t    and v_Benefit_Type_Code2 > '00', '06',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code2 < '07'\n\t    and v_Benefit_Type_Code2 > '00', '09',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code2 < '11'\n\t    and v_Benefit_Type_Code2 > '00', '11',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code2 < '12'\n\t    and v_Benefit_Type_Code2 > '00', '12',\n\t        '00'\n\t    ),\n\t    '00'\n\t) AS v_Benefit_Type_Code3,\n\tv_Benefit_Type_Code3 AS o_Benefit_Type_Code3,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0,\r\n\t-- decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code3 < '04' and v_Benefit_Type_Code3 > '00' ,'04',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code3 < '05' and v_Benefit_Type_Code3 > '00', '05',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code3 < '06' and v_Benefit_Type_Code3 > '00','06',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code3 < '07' and v_Benefit_Type_Code3 > '00','09',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code3 < '11'  and v_Benefit_Type_Code3 > '00','11',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code3 < '12' and v_Benefit_Type_Code3 > '00', '12',\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code3 < '49'  and v_Benefit_Type_Code3 > '00','49', - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- '00')\r\n\t-- ,'00')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    decode(\n\t        true,\n\t        claim_status_code = '5', '00',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0\n\t    and v_Benefit_Type_Code3 < '04'\n\t    and v_Benefit_Type_Code3 > '00', '04',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code3 < '05'\n\t    and v_Benefit_Type_Code3 > '00', '05',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code3 < '06'\n\t    and v_Benefit_Type_Code3 > '00', '06',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code3 < '07'\n\t    and v_Benefit_Type_Code3 > '00', '09',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code3 < '11'\n\t    and v_Benefit_Type_Code3 > '00', '11',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code3 < '12'\n\t    and v_Benefit_Type_Code3 > '00', '12',\n\t        '00'\n\t    ),\n\t    '00'\n\t) AS v_Benefit_Type_Code4,\n\tv_Benefit_Type_Code4 AS o_Benefit_Type_Code4,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0,\r\n\t-- decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code4 < '05' and v_Benefit_Type_Code4 > '00', '05',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code4 < '06' and v_Benefit_Type_Code4 > '00','06',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code4< '07' and v_Benefit_Type_Code4 > '00','09',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code4 < '11'  and v_Benefit_Type_Code4 > '00','11',\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code4 < '12' and v_Benefit_Type_Code4 > '00', '12',\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code4 < '49' and v_Benefit_Type_Code4 > '00','49', - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- '00')\r\n\t-- ,'00')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    decode(\n\t        true,\n\t        claim_status_code = '5', '00',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code4 < '05'\n\t    and v_Benefit_Type_Code4 > '00', '05',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code4 < '06'\n\t    and v_Benefit_Type_Code4 > '00', '06',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code4 < '07'\n\t    and v_Benefit_Type_Code4 > '00', '09',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code4 < '11'\n\t    and v_Benefit_Type_Code4 > '00', '11',\n\t        Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code4 < '12'\n\t    and v_Benefit_Type_Code4 > '00', '12',\n\t        '00'\n\t    ),\n\t    '00'\n\t) AS v_Benefit_Type_Code5,\n\tv_Benefit_Type_Code5 AS o_Benefit_Type_Code5,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN>0 AND indemnity_payment_amt_pay_fact > 0,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS>0 AND indemnity_payment_amt_pay_fact > 0,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0 AND indemnity_payment_amt_pay_fact > 0,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 AND indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PB,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 AND indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 AND indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_MP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 AND indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DF,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 AND indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PD,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 AND indemnity_payment_amt_pay_fact > 0,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_EP,false),\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 AND indemnity_payment_amt > 0,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,false), - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- 00000000)),9,'0')\r\n\t-- \n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DT_FN AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PP AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0 AND indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_EP AS INTEGER),\n\t            00000000\n\t        )), 9, '0') AS Benefit_Amount_Paid1,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS>0 and v_Benefit_Type_Code1 < '02' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0 and v_Benefit_Type_Code1 < '03' and v_Benefit_Type_Code1 > '00' and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code1 < '04' and v_Benefit_Type_Code1 > '00' and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PB,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code1 < '05' and v_Benefit_Type_Code1 > '00'  and  indemnity_payment_amt_pay_fact > 0  ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code1 < '06' and v_Benefit_Type_Code1 > '00'  and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_MP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code1 < '07' and v_Benefit_Type_Code1 > '00' and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DF,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code1 < '11' and v_Benefit_Type_Code1 > '00' and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PD,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code1 < '12' and v_Benefit_Type_Code1 > '00' and  indemnity_payment_amt_pay_fact > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_EP,false),\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code1 < '49'  and v_Benefit_Type_Code1 > '00'  and  indemnity_payment_amt > 0 ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,false), - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS > 0 and v_Benefit_Type_Code1 < '02' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PT_PS AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0 and v_Benefit_Type_Code1 < '03' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PP AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0 and v_Benefit_Type_Code1 < '04' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code1 < '05' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0 and v_Benefit_Type_Code1 < '06' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0 and v_Benefit_Type_Code1 < '07' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0 and v_Benefit_Type_Code1 < '11' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0 and v_Benefit_Type_Code1 < '12' and v_Benefit_Type_Code1 > '00' and indemnity_payment_amt_pay_fact > 0, CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_EP AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Benefit_Amount_Paid2,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0 ,\r\n\t-- lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PP>0 and v_Benefit_Type_Code2 < '03' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code2 < '04' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PB,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code2 < '05' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code2 < '06' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_MP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code2 < '07' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DF,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code2 < '11' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PD,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code2 < '12' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_EP,false),\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code2 < '49' and v_Benefit_Type_Code2 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,false), - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- 0)),9,'0')\r\n\t-- ,'000000000')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    lpad(to_char(decode(\n\t                true,\n\t                claim_status_code = '5', 0,\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PP > 0\n\t    and v_Benefit_Type_Code2 < '03'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PP AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0\n\t    and v_Benefit_Type_Code2 < '04'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PB AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code2 < '05'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code2 < '06'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_MP AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code2 < '07'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DF AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code2 < '11'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PD AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code2 < '12'\n\t    and v_Benefit_Type_Code2 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_EP AS INTEGER),\n\t                0\n\t            )), 9, '0'),\n\t    '000000000'\n\t) AS Benefit_Amount_Paid3,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0 ,\r\n\t-- lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PB>0 and v_Benefit_Type_Code3 < '04' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PB,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code3 < '05' and v_Benefit_Type_Code3 > '00' ,to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code3 < '06' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_MP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code3 < '07' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DF,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code3 < '11' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PD,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code3 < '12' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_EP,false),\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code3 < '49' and v_Benefit_Type_Code3 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,false), - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- 0)),9,'0')\r\n\t-- ,'000000000')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    lpad(to_char(decode(\n\t                true,\n\t                claim_status_code = '5', 0,\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PB > 0\n\t    and v_Benefit_Type_Code3 < '04'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PB AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code3 < '05'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code3 < '06'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_MP AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code3 < '07'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DF AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code3 < '11'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PD AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code3 < '12'\n\t    and v_Benefit_Type_Code3 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_EP AS INTEGER),\n\t                0\n\t            )), 9, '0'),\n\t    '000000000'\n\t) AS Benefit_Amount_Paid4,\n\t-- *INF*: iif(indemnity_payment_amt_pay_fact > 0,\r\n\t-- lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code4 < '05' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_MP>0 and v_Benefit_Type_Code4 < '06' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_MP,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_DF>0 and v_Benefit_Type_Code4 < '07' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_DF,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_PD>0 and v_Benefit_Type_Code4 < '11' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_PD,false),\r\n\t-- Benefit_Amount_Paid_Excluding_Lump_Sump_EP>0 and v_Benefit_Type_Code4 < '12' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_EP,false),\r\n\t-- --Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code4 < '49' and v_Benefit_Type_Code4 > '00',to_integer(Benefit_Amount_Paid_Excluding_Lump_Sump_AL_UI,false), - removed from the logic as per meetings with Andrea and Mike Doyle\r\n\t-- 0)),9,'0')\r\n\t-- ,'000000000')\n\tIFF(\n\t    indemnity_payment_amt_pay_fact > 0,\n\t    lpad(to_char(decode(\n\t                true,\n\t                claim_status_code = '5', 0,\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC > 0\n\t    and v_Benefit_Type_Code4 < '05'\n\t    and v_Benefit_Type_Code4 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_TD_PL_TC AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_MP > 0\n\t    and v_Benefit_Type_Code4 < '06'\n\t    and v_Benefit_Type_Code4 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_MP AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_DF > 0\n\t    and v_Benefit_Type_Code4 < '07'\n\t    and v_Benefit_Type_Code4 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_DF AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_PD > 0\n\t    and v_Benefit_Type_Code4 < '11'\n\t    and v_Benefit_Type_Code4 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_PD AS INTEGER),\n\t                Benefit_Amount_Paid_Excluding_Lump_Sump_EP > 0\n\t    and v_Benefit_Type_Code4 < '12'\n\t    and v_Benefit_Type_Code4 > '00', CAST(Benefit_Amount_Paid_Excluding_Lump_Sump_EP AS INTEGER),\n\t                0\n\t            )), 9, '0'),\n\t    '000000000'\n\t) AS Benefit_Amount_Paid5,\n\tTPD_AMT,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- indemnity_payment_amt_loss_trans = 0 and open_reserve_amt >0,0,\r\n\t-- v_Benefit_Type_Code1 = '02',to_integer(ptd_rate,false),\r\n\t-- v_Benefit_Type_Code1 = '03' or v_Benefit_Type_Code1 = '04' ,to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code1 = '05',to_integer(ttd_rate,false),\r\n\t-- v_Benefit_Type_Code1 = '09' ,to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code1 = '11',to_integer(TPD_AMT,false),\r\n\t-- 0)),6,'0')\r\n\t-- \r\n\t-- \r\n\t-- \n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            indemnity_payment_amt_loss_trans = 0 and open_reserve_amt > 0, 0,\n\t            v_Benefit_Type_Code1 = '02', CAST(ptd_rate AS INTEGER),\n\t            v_Benefit_Type_Code1 = '03' or v_Benefit_Type_Code1 = '04', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code1 = '05', CAST(ttd_rate AS INTEGER),\n\t            v_Benefit_Type_Code1 = '09', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code1 = '11', CAST(TPD_AMT AS INTEGER),\n\t            0\n\t        )), 6, '0') AS Weekly_Benefit1,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- indemnity_payment_amt_loss_trans = 0 and open_reserve_amt >0,0,\r\n\t-- --v_Benefit_Type_Code2 = '01',to_integer(dtd_rate,false),\r\n\t-- v_Benefit_Type_Code2 = '02',to_integer(ptd_rate,false),\r\n\t-- v_Benefit_Type_Code2 = '03' or v_Benefit_Type_Code2 = '04' ,to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code2 = '05' ,to_integer(ttd_rate,false),\r\n\t-- v_Benefit_Type_Code2 = '09',to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code2 = '11',to_integer(TPD_AMT,false),\r\n\t-- 0)),6,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            indemnity_payment_amt_loss_trans = 0 and open_reserve_amt > 0, 0,\n\t            v_Benefit_Type_Code2 = '02', CAST(ptd_rate AS INTEGER),\n\t            v_Benefit_Type_Code2 = '03' or v_Benefit_Type_Code2 = '04', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code2 = '05', CAST(ttd_rate AS INTEGER),\n\t            v_Benefit_Type_Code2 = '09', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code2 = '11', CAST(TPD_AMT AS INTEGER),\n\t            0\n\t        )), 6, '0') AS Weekly_Benefit2,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- indemnity_payment_amt_loss_trans = 0 and open_reserve_amt >0,0,\r\n\t-- --v_Benefit_Type_Code3 = '01',to_integer(dtd_rate,false),\r\n\t-- v_Benefit_Type_Code3 = '02',to_integer(ptd_rate,false),\r\n\t-- v_Benefit_Type_Code3 = '03' or v_Benefit_Type_Code3 = '04' ,to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code3 = '05' ,to_integer(ttd_rate,false),\r\n\t-- v_Benefit_Type_Code3 = '09',to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code3 = '11',to_integer(TPD_AMT,false),\r\n\t-- 0)),6,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            indemnity_payment_amt_loss_trans = 0 and open_reserve_amt > 0, 0,\n\t            v_Benefit_Type_Code3 = '02', CAST(ptd_rate AS INTEGER),\n\t            v_Benefit_Type_Code3 = '03' or v_Benefit_Type_Code3 = '04', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code3 = '05', CAST(ttd_rate AS INTEGER),\n\t            v_Benefit_Type_Code3 = '09', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code3 = '11', CAST(TPD_AMT AS INTEGER),\n\t            0\n\t        )), 6, '0') AS Weekly_Benefit3,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- indemnity_payment_amt_loss_trans = 0 and open_reserve_amt >0,0,\r\n\t-- --v_Benefit_Type_Code4 = '01',to_integer(dtd_rate,false),\r\n\t-- v_Benefit_Type_Code4 = '02',to_integer(ptd_rate,false),\r\n\t-- v_Benefit_Type_Code4 = '03' or v_Benefit_Type_Code4 = '04' ,to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code4 = '05',to_integer(ttd_rate,false),\r\n\t-- v_Benefit_Type_Code4 = '09',to_integer(ppd_rate,false),\r\n\t-- v_Benefit_Type_Code4 = '11',to_integer(TPD_AMT,false),\r\n\t-- 0)),6,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            indemnity_payment_amt_loss_trans = 0 and open_reserve_amt > 0, 0,\n\t            v_Benefit_Type_Code4 = '02', CAST(ptd_rate AS INTEGER),\n\t            v_Benefit_Type_Code4 = '03' or v_Benefit_Type_Code4 = '04', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code4 = '05', CAST(ttd_rate AS INTEGER),\n\t            v_Benefit_Type_Code4 = '09', CAST(ppd_rate AS INTEGER),\n\t            v_Benefit_Type_Code4 = '11', CAST(TPD_AMT AS INTEGER),\n\t            0\n\t        )), 6, '0') AS Weekly_Benefit4,\n\t'000000' AS Weekly_Benefit5,\n\tBenefit_Covered_By_Lump_Sump_DT_FN,\n\tBenefit_Covered_By_Lump_Sump_PT_PS,\n\tBenefit_Covered_By_Lump_Sump_PP,\n\tBenefit_Covered_By_Lump_Sump_PB,\n\tBenefit_Covered_By_Lump_Sump_TD_PL_TC,\n\tBenefit_Covered_By_Lump_Sump_MP,\n\tBenefit_Covered_By_Lump_Sump_DF,\n\tBenefit_Covered_By_Lump_Sump_PD,\n\tBenefit_Covered_By_Lump_Sump_EP,\n\tBenefit_Covered_By_Lump_Sump_AL_UI,\n\tVocational_Rehab_Evaluation_Expense_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Evaluation_Expense_Amount_Paid) or claim_status_code = '5'\r\n\t-- ,0\r\n\t-- ,Vocational_Rehab_Evaluation_Expense_Amount_Paid)\n\tIFF(\n\t    Vocational_Rehab_Evaluation_Expense_Amount_Paid IS NULL or claim_status_code = '5', 0,\n\t    Vocational_Rehab_Evaluation_Expense_Amount_Paid\n\t) AS v_Vocational_Rehab_Evaluation_Expense_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Evaluation_Expense_Amount_Paid) or claim_status_code = '5' or jurisdiction_state = '21'\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Vocational_Rehab_Evaluation_Expense_Amount_Paid,false)),9,'0')\r\n\t-- )\r\n\t-- \r\n\t-- --for MICHIGAN, state 21, we don't report vocational amounts\n\tIFF(\n\t    Vocational_Rehab_Evaluation_Expense_Amount_Paid IS NULL\n\t    or claim_status_code = '5'\n\t    or jurisdiction_state = '21',\n\t    '000000000',\n\t    lpad(to_char(CAST(Vocational_Rehab_Evaluation_Expense_Amount_Paid AS INTEGER)), 9, '0')\n\t) AS o_Vocational_Rehab_Evaluation_Expense_Amount_Paid,\n\tVocational_Rehab_Maintenance_Benefit_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Maintenance_Benefit_Amount_Paid) or claim_status_code = '5'\r\n\t-- ,0\r\n\t-- ,Vocational_Rehab_Maintenance_Benefit_Amount_Paid)\n\tIFF(\n\t    Vocational_Rehab_Maintenance_Benefit_Amount_Paid IS NULL or claim_status_code = '5', 0,\n\t    Vocational_Rehab_Maintenance_Benefit_Amount_Paid\n\t) AS v_Vocational_Rehab_Maintenance_Benefit_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Maintenance_Benefit_Amount_Paid) or claim_status_code = '5'  or jurisdiction_state = '21'\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Vocational_Rehab_Maintenance_Benefit_Amount_Paid,false)),9,'0'))\r\n\t-- \r\n\t-- --for MICHIGAN, state 21, we don't report vocational amounts\n\tIFF(\n\t    Vocational_Rehab_Maintenance_Benefit_Amount_Paid IS NULL\n\t    or claim_status_code = '5'\n\t    or jurisdiction_state = '21',\n\t    '000000000',\n\t    lpad(to_char(CAST(Vocational_Rehab_Maintenance_Benefit_Amount_Paid AS INTEGER)), 9, '0')\n\t) AS o_Vocational_Rehab_Maintenance_Benefit_Amount_Paid,\n\tVocational_Rehab_Education_Expense_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Education_Expense_Amount_Paid) or claim_status_code = '5'\r\n\t-- ,0\r\n\t-- ,Vocational_Rehab_Education_Expense_Amount_Paid)\n\tIFF(\n\t    Vocational_Rehab_Education_Expense_Amount_Paid IS NULL or claim_status_code = '5', 0,\n\t    Vocational_Rehab_Education_Expense_Amount_Paid\n\t) AS v_Vocational_Rehab_Education_Expense_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Education_Expense_Amount_Paid) or claim_status_code = '5' or jurisdiction_state = '21'\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Vocational_Rehab_Education_Expense_Amount_Paid,false)),9,'0'))\r\n\t-- \r\n\t-- --for MICHIGAN, state 21, we don't report vocational amounts\n\tIFF(\n\t    Vocational_Rehab_Education_Expense_Amount_Paid IS NULL\n\t    or claim_status_code = '5'\n\t    or jurisdiction_state = '21',\n\t    '000000000',\n\t    lpad(to_char(CAST(Vocational_Rehab_Education_Expense_Amount_Paid AS INTEGER)), 9, '0')\n\t) AS o_Vocational_Rehab_Education_Expense_Amount_Paid,\n\tVocational_Rehab_Other_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Other_Amount_Paid) or claim_status_code = '5'\r\n\t-- ,0\r\n\t-- ,Vocational_Rehab_Other_Amount_Paid)\n\tIFF(\n\t    Vocational_Rehab_Other_Amount_Paid IS NULL or claim_status_code = '5', 0,\n\t    Vocational_Rehab_Other_Amount_Paid\n\t) AS v_Vocational_Rehab_Other_Amount_Paid,\n\t-- *INF*: iif(isnull(Vocational_Rehab_Other_Amount_Paid) or claim_status_code = '5' or jurisdiction_state = '21'\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Vocational_Rehab_Other_Amount_Paid,false)),9,'0')\r\n\t-- )\r\n\t-- \r\n\t-- --for MICHIGAN, state 21, we don't report vocational amounts\n\tIFF(\n\t    Vocational_Rehab_Other_Amount_Paid IS NULL\n\t    or claim_status_code = '5'\n\t    or jurisdiction_state = '21',\n\t    '000000000',\n\t    lpad(to_char(CAST(Vocational_Rehab_Other_Amount_Paid AS INTEGER)), 9, '0')\n\t) AS o_Vocational_Rehab_Other_Amount_Paid,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_DT_FN>0,'01',\r\n\t-- Benefit_Covered_By_Lump_Sump_PT_PS>0,'02',\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0,'03',\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0,'04',\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0,'05',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0,'06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0,'09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0,'12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0,'49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_DT_FN > 0, '01',\n\t    Benefit_Covered_By_Lump_Sump_PT_PS > 0, '02',\n\t    Benefit_Covered_By_Lump_Sump_PP > 0, '03',\n\t    Benefit_Covered_By_Lump_Sump_PB > 0, '04',\n\t    Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0, '05',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0, '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0, '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0, '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0, '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0, '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind1,\n\tv_Benefit_Type_Code_Lump_Sump_Ind1 AS o_Benefit_Type_Code_Lump_Sump_Ind1,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_PT_PS>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '02' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00' ,'02',\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00' ,'03',\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00' ,'04',\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '05'  and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00', '05',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00' ,'06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '07'  and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00','09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00' ,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00', '12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind1 >'00','49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_PT_PS > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '02' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '02',\n\t    Benefit_Covered_By_Lump_Sump_PP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '03',\n\t    Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '04',\n\t    Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '05',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind2,\n\tv_Benefit_Type_Code_Lump_Sump_Ind2 AS o_Benefit_Type_Code_Lump_Sump_Ind2,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00' ,'03',\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00' ,'04',\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '05',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00','06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00','09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00' ,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00','49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_PP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '03',\n\t    Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '04',\n\t    Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '05',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind3,\n\tv_Benefit_Type_Code_Lump_Sump_Ind3 AS o_Benefit_Type_Code_Lump_Sump_Ind3,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00' ,'04',\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '05'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '05',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '06'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00','06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '07'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00' ,'09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '11'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00' ,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '12'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00','49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '04',\n\t    Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '05',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind4,\n\tv_Benefit_Type_Code_Lump_Sump_Ind4 AS o_Benefit_Type_Code_Lump_Sump_Ind4,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '05'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '05',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '06'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00' ,'06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind4< '07'   and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00','09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '11'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00' ,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '12'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00' ,'49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '05',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind5,\n\tv_Benefit_Type_Code_Lump_Sump_Ind5 AS o_Benefit_Type_Code_Lump_Sump_Ind5,\n\t-- *INF*: decode(true,\r\n\t-- claim_status_code = '5','00',\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '06'  and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00' ,'06',\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind5< '07' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00' ,'09',\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00' ,'11',\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '12',\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00','49',\r\n\t-- '00')\n\tdecode(\n\t    true,\n\t    claim_status_code = '5', '00',\n\t    Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '06',\n\t    Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '09',\n\t    Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '11',\n\t    Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '12',\n\t    Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', '49',\n\t    '00'\n\t) AS v_Benefit_Type_Code_Lump_Sump_Ind6,\n\tv_Benefit_Type_Code_Lump_Sump_Ind6 AS o_Benefit_Type_Code_Lump_Sump_Ind6,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_DT_FN>0,to_integer(Benefit_Covered_By_Lump_Sump_DT_FN,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PT_PS>0,to_integer(Benefit_Covered_By_Lump_Sump_PT_PS,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0,to_integer(Benefit_Covered_By_Lump_Sump_PP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0,to_integer(Benefit_Covered_By_Lump_Sump_PB,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0,to_integer(Benefit_Covered_By_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 ,to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 ,to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 ,to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 ,to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 ,to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\r\n\t-- \n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_DT_FN > 0, CAST(Benefit_Covered_By_Lump_Sump_DT_FN AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PT_PS > 0, CAST(Benefit_Covered_By_Lump_Sump_PT_PS AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PP > 0, CAST(Benefit_Covered_By_Lump_Sump_PP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PB > 0, CAST(Benefit_Covered_By_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0, CAST(Benefit_Covered_By_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_MP > 0, CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0, CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0, CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0, CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0, CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid1,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_PT_PS>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '02'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00' ,to_integer(Benefit_Covered_By_Lump_Sump_PT_PS,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '03'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '04'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00' ,to_integer(Benefit_Covered_By_Lump_Sump_PB,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '05'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '06'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '07'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '11'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '12'  and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '49'   and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00',to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_PT_PS > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '02' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_PT_PS AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_PP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind1 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind1 > '00', CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid2,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_PP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '03'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '04'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00' ,to_integer(Benefit_Covered_By_Lump_Sump_PB,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '05'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '06'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '07'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '11'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '12'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00',to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00' ,to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_PP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '03' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_PP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind2 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind2 > '00', CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid3,\n\t-- *INF*: lpad(to_char(decode(true,\r\n\t-- claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_PB>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '04'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PB,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '05'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '06'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '07'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '11'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '12'   and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '49'    and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00',to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_PB > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '04' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_PB AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind3 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind3 > '00', CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid4,\n\t-- *INF*: lpad(to_char(decode(true,claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_TD_PL_TC>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_TD_PL_TC,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00',to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_TD_PL_TC > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '05' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_TD_PL_TC AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind4 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind4 > '00', CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid5,\n\t-- *INF*: lpad(to_char(decode(true,claim_status_code = '5',0,\r\n\t-- Benefit_Covered_By_Lump_Sump_MP>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00',to_integer(Benefit_Covered_By_Lump_Sump_MP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_DF>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00',to_integer(Benefit_Covered_By_Lump_Sump_DF,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_PD>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00',to_integer(Benefit_Covered_By_Lump_Sump_PD,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_EP>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00',to_integer(Benefit_Covered_By_Lump_Sump_EP,false),\r\n\t-- Benefit_Covered_By_Lump_Sump_AL_UI>0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '49'  and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00',to_integer(Benefit_Covered_By_Lump_Sump_AL_UI,false),\r\n\t-- 0)),9,'0')\n\tlpad(to_char(decode(\n\t            true,\n\t            claim_status_code = '5', 0,\n\t            Benefit_Covered_By_Lump_Sump_MP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '06' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', CAST(Benefit_Covered_By_Lump_Sump_MP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_DF > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '07' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', CAST(Benefit_Covered_By_Lump_Sump_DF AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_PD > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '11' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', CAST(Benefit_Covered_By_Lump_Sump_PD AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_EP > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '12' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', CAST(Benefit_Covered_By_Lump_Sump_EP AS INTEGER),\n\t            Benefit_Covered_By_Lump_Sump_AL_UI > 0 and v_Benefit_Type_Code_Lump_Sump_Ind5 < '49' and v_Benefit_Type_Code_Lump_Sump_Ind5 > '00', CAST(Benefit_Covered_By_Lump_Sump_AL_UI AS INTEGER),\n\t            0\n\t        )), 9, '0') AS Lump_Sump_Settlement_Amount_Paid6,\n\t-- *INF*: to_integer((v_Vocational_Rehab_Evaluation_Expense_Amount_Paid + v_Vocational_Rehab_Maintenance_Benefit_Amount_Paid + \r\n\t-- v_Vocational_Rehab_Education_Expense_Amount_Paid+v_Vocational_Rehab_Other_Amount_Paid),false)\n\tCAST((v_Vocational_Rehab_Evaluation_Expense_Amount_Paid + v_Vocational_Rehab_Maintenance_Benefit_Amount_Paid + v_Vocational_Rehab_Education_Expense_Amount_Paid + v_Vocational_Rehab_Other_Amount_Paid) AS INTEGER) AS v_Total_Vocational_Amounts,\n\t-- *INF*: to_integer(:LKP.LKP_GETTOTALPAIDMEDAMT(work_claim_ncci_rpt_extract_id))\r\n\t-- \n\tCAST(LKP_GETTOTALPAIDMEDAMT_work_claim_ncci_rpt_extract_id.total_paid_med_amt AS INTEGER) AS v_Total_Paid_Med_Amount,\n\t-- *INF*: lpad(to_char(iif(jurisdiction_state = '21'\r\n\t-- ,v_Total_Vocational_Amounts+v_Total_Paid_Med_Amount\r\n\t-- ,v_Total_Paid_Med_Amount)),9,'0')\n\tlpad(to_char(\n\t        IFF(\n\t            jurisdiction_state = '21',\n\t            v_Total_Vocational_Amounts + v_Total_Paid_Med_Amount,\n\t            v_Total_Paid_Med_Amount\n\t        )), 9, '0') AS Upd_Total_Paid_Med_Amounts\n\tFROM Agg_Calculate_Payments_And_Benefits\n\tLEFT JOIN LKP_GETTOTALPAIDMEDAMT LKP_GETTOTALPAIDMEDAMT_work_claim_ncci_rpt_extract_id\n\tON LKP_GETTOTALPAIDMEDAMT_work_claim_ncci_rpt_extract_id.work_claim_ncci_rpt_extract_id = work_claim_ncci_rpt_extract_id\n\n),\nUpd_Target AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id, \n\to_Recovery_Reimbursement_Amount, \n\to_claimant_legal_amount_paid AS o_claimanat_legal_amount_paid, \n\to_employer_legal_amount_paid, \n\to_Attorny_Authorized_Representative_Ind, \n\to_Benefit_Type_Code1, \n\to_Benefit_Type_Code2, \n\to_Benefit_Type_Code3, \n\to_Benefit_Type_Code4, \n\to_Benefit_Type_Code5, \n\tBenefit_Amount_Paid1, \n\tBenefit_Amount_Paid2, \n\tBenefit_Amount_Paid3, \n\tBenefit_Amount_Paid4, \n\tBenefit_Amount_Paid5, \n\tWeekly_Benefit1, \n\tWeekly_Benefit2, \n\tWeekly_Benefit3, \n\tWeekly_Benefit4, \n\tWeekly_Benefit5, \n\to_Vocational_Rehab_Evaluation_Expense_Amount_Paid AS Vocational_Rehab_Evaluation_Expense_Amount_Paid, \n\to_Vocational_Rehab_Maintenance_Benefit_Amount_Paid AS Vocational_Rehab_Maintenance_Benefit_Amount_Paid, \n\to_Vocational_Rehab_Education_Expense_Amount_Paid AS Vocational_Rehab_Education_Expense_Amount_Paid, \n\to_Vocational_Rehab_Other_Amount_Paid AS Vocational_Rehab_Other_Amount_Paid, \n\to_Benefit_Type_Code_Lump_Sump_Ind1, \n\to_Benefit_Type_Code_Lump_Sump_Ind2, \n\to_Benefit_Type_Code_Lump_Sump_Ind3, \n\to_Benefit_Type_Code_Lump_Sump_Ind4, \n\to_Benefit_Type_Code_Lump_Sump_Ind5, \n\to_Benefit_Type_Code_Lump_Sump_Ind6, \n\tLump_Sump_Settlement_Amount_Paid1, \n\tLump_Sump_Settlement_Amount_Paid2, \n\tLump_Sump_Settlement_Amount_Paid3, \n\tLump_Sump_Settlement_Amount_Paid4, \n\tLump_Sump_Settlement_Amount_Paid5, \n\tLump_Sump_Settlement_Amount_Paid6, \n\tUpd_Total_Paid_Med_Amounts\n\tFROM EXP_Calculate_Payments_And_Benefits\n),\nwork_claim_ncci_report_extract AS (\n\tMERGE INTO work_claim_ncci_report_extract AS T\n\tUSING Upd_Target AS S\n\tON T.work_claim_ncci_rpt_extract_id = S.work_claim_ncci_rpt_extract_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.bnft_type_code_1 = S.o_Benefit_Type_Code1, T.bnft_amt_paid_1 = S.Benefit_Amount_Paid1, T.wkly_bnft_1 = S.Weekly_Benefit1, T.bnft_type_code_2 = S.o_Benefit_Type_Code2, T.bnft_amt_paid_2 = S.Benefit_Amount_Paid2, T.wkly_bnft_2 = S.Weekly_Benefit2, T.bnft_type_code_3 = S.o_Benefit_Type_Code3, T.bnft_amt_paid_3 = S.Benefit_Amount_Paid3, T.wkly_bnft_3 = S.Weekly_Benefit3, T.bnft_type_code_4 = S.o_Benefit_Type_Code4, T.bnft_amt_paid_4 = S.Benefit_Amount_Paid4, T.wkly_bnft_4 = S.Weekly_Benefit4, T.bnft_type_code_5 = S.o_Benefit_Type_Code5, T.bnft_amt_paid_5 = S.Benefit_Amount_Paid5, T.wkly_bnft_5 = S.Weekly_Benefit5, T.vocational_rehabilitation_evaluation_exp_amt_paid = S.Vocational_Rehab_Evaluation_Expense_Amount_Paid, T.vocational_rehabilitation_maint_bnft_amt_paid = S.Vocational_Rehab_Maintenance_Benefit_Amount_Paid, T.vocational_rehabilitation_education_exp_amt_paid = S.Vocational_Rehab_Education_Expense_Amount_Paid, T.vocational_rehabilitation_other_amt_paid = S.Vocational_Rehab_Other_Amount_Paid, T.total_paid_med_amt = S.Upd_Total_Paid_Med_Amounts, T.attorney_or_au_rep_ind = S.o_Attorny_Authorized_Representative_Ind, T.claimant_lgl_amt_paid = S.o_claimanat_legal_amount_paid, T.emplyr_lgl_amt_paid = S.o_employer_legal_amount_paid, T.bnft_cvrd_by_lump_sum_settlement_code_1 = S.o_Benefit_Type_Code_Lump_Sump_Ind1, T.lump_sum_settlement_amt_paid_1 = S.Lump_Sump_Settlement_Amount_Paid1, T.bnft_cvrd_by_lump_sum_settlement_code_2 = S.o_Benefit_Type_Code_Lump_Sump_Ind2, T.lump_sum_settlement_amt_paid_2 = S.Lump_Sump_Settlement_Amount_Paid2, T.bnft_cvrd_by_lump_sum_settlement_code_3 = S.o_Benefit_Type_Code_Lump_Sump_Ind3, T.lump_sum_settlement_amt_paid_3 = S.Lump_Sump_Settlement_Amount_Paid3, T.bnft_cvrd_by_lump_sum_settlement_code_4 = S.o_Benefit_Type_Code_Lump_Sump_Ind4, T.lump_sum_settlement_amt_paid_4 = S.Lump_Sump_Settlement_Amount_Paid4, T.bnft_cvrd_by_lump_sum_settlement_code_5 = S.o_Benefit_Type_Code_Lump_Sump_Ind5, T.lump_sum_settlement_amt_paid_5 = S.Lump_Sump_Settlement_Amount_Paid5, T.bnft_cvrd_by_lump_sum_settlement_code_6 = S.o_Benefit_Type_Code_Lump_Sump_Ind6, T.lump_sum_settlement_amt_paid_6 = S.Lump_Sump_Settlement_Amount_Paid6, T.recovery_reimb_amt = S.o_Recovery_Reimbursement_Amount\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "DataFeed -Informatica/ClaimDataServices/"
        },
        "annotations": []
    }
}