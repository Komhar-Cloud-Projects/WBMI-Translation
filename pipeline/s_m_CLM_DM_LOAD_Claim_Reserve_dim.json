{
    "name": "s_m_CLM_DM_LOAD_Claim_Reserve_dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Claim_Reserve_dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Claim_Transaction AS (\n\tselect rc.claimant_cov_det_reserve_calculation_id, rc.claimant_cov_det_reserve_calculation_ak_id, \r\n\t\trc.claimant_cov_det_ak_id, rc.financial_type_code, rc.reserve_date, rc.reserve_date_type\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail_reserve_calculation rc with (nolock) \r\n\tjoin (select distinct ct.claimant_cov_det_ak_id, ct.financial_type_code\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction ct with (nolock) \r\n\t\twhere ct.trans_date > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tand ct.crrnt_snpsht_flag = 1) t\r\n\t\ton t.claimant_cov_det_ak_id = rc.claimant_cov_det_ak_id \r\n\t    \t\tand t.financial_type_code = rc.financial_type_code\r\n\twhere rc.crrnt_snpsht_flag = 1\n),\nEXP_Input AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type\n\tFROM SQ_Claim_Transaction\n),\nLKP_First_Payment_Date AS (\n\tSELECT\n\ttrans_date,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code\n\tFROM (\n\t\tSELECT ct.trans_date as trans_date, ct.claimant_cov_det_ak_id as claimant_cov_det_ak_id, ct.financial_type_code as financial_type_code \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction ct with (nolock)\r\n\t\twhere ct.trans_code in ('20','21','22','23','24','28','29','42','43')\r\n\t\tand ct.trans_offset_onset_ind in ('N','N/A')\r\n\t\tand ct.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,financial_type_code ORDER BY trans_date) = 1\n),\nEXP_Collect_Reserve_Information AS (\n\tSELECT\n\tEXP_Input.claimant_cov_det_reserve_calculation_id AS ClaimantCoverageDetailReserveCalcId,\n\tEXP_Input.claimant_cov_det_reserve_calculation_ak_id AS ClaimantCoverageDetailReserveCalcAkId,\n\tEXP_Input.claimant_cov_det_ak_id AS ClaimantCoverageDetailAkId,\n\tEXP_Input.financial_type_code AS FinancialTypeCode,\n\tEXP_Input.reserve_date AS ReserveDate,\n\tEXP_Input.reserve_date_type AS ReserveDateType,\n\tLKP_First_Payment_Date.trans_date AS FirstPaymentDate,\n\t-- *INF*: IIF(ISNULL(FirstPaymentDate),\r\n\t-- TO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\r\n\t-- FirstPaymentDate)\n\tIFF(FirstPaymentDate IS NULL,\n\t\tTO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t),\n\t\tFirstPaymentDate\n\t) AS FirstPaymentDateFromSource,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ReserveDateType='2OPEN',\r\n\t-- ReserveDate,\r\n\t-- TO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'))\n\tDECODE(TRUE,\n\t\tReserveDateType = '2OPEN', ReserveDate,\n\t\tTO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t)\n\t) AS ReserveOpenDateFromSource,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ReserveDateType='3CLOSED',\r\n\t-- ReserveDate,\r\n\t-- TO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'))\n\tDECODE(TRUE,\n\t\tReserveDateType = '3CLOSED', ReserveDate,\n\t\tTO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t)\n\t) AS ReserveCloseDateFromSource,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ReserveDateType='4REOPEN',\r\n\t-- ReserveDate,\r\n\t-- TO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'))\n\tDECODE(TRUE,\n\t\tReserveDateType = '4REOPEN', ReserveDate,\n\t\tTO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t)\n\t) AS ReserveReopenDateFromSource,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ReserveDateType='5CLOSEDAFTERREOPEN',\r\n\t-- ReserveDate,\r\n\t-- TO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'))\n\tDECODE(TRUE,\n\t\tReserveDateType = '5CLOSEDAFTERREOPEN', ReserveDate,\n\t\tTO_DATE('1/1/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t\t)\n\t) AS ReserveCloseAfterReopenDateFromSource,\n\tSYSDATE AS created_modified_date,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId\n\tFROM EXP_Input\n\tLEFT JOIN LKP_First_Payment_Date\n\tON LKP_First_Payment_Date.claimant_cov_det_ak_id = EXP_Input.claimant_cov_det_ak_id AND LKP_First_Payment_Date.financial_type_code = EXP_Input.financial_type_code\n),\nmplt_ClaimReserveDim AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_Get_Values AS (\n\t\tSELECT\n\t\tclaimant_coverage_detail_ak_id AS ClaimantCoverageDetailAkId,\n\t\tfinancial_type_code AS in_FinancialTypeCode,\n\t\t-- *INF*: RTRIM(in_FinancialTypeCode)\n\t\tRTRIM(in_FinancialTypeCode\n\t\t) AS out_FinancialTypeCode\n\t\tFROM INPUT\n\t),\n\tLKP_Existing_Reserve AS (\n\t\tSELECT\n\t\tClaimReserveDimId,\n\t\tReserveOpenDate,\n\t\tReserveCloseDate,\n\t\tReserveReopenDate,\n\t\tReserveCloseAfterReopenDate,\n\t\tFirstPaymentDate,\n\t\tEDWClaimantCoverageDetailAKId,\n\t\tFinancialTypeCode\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tClaimReserveDimId,\n\t\t\t\tReserveOpenDate,\n\t\t\t\tReserveCloseDate,\n\t\t\t\tReserveReopenDate,\n\t\t\t\tReserveCloseAfterReopenDate,\n\t\t\t\tFirstPaymentDate,\n\t\t\t\tEDWClaimantCoverageDetailAKId,\n\t\t\t\tFinancialTypeCode\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.ClaimReserveDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWClaimantCoverageDetailAKId,FinancialTypeCode ORDER BY ClaimReserveDimId DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tClaimReserveDimId, \n\t\tReserveOpenDate, \n\t\tReserveCloseDate, \n\t\tReserveReopenDate, \n\t\tReserveCloseAfterReopenDate, \n\t\tFirstPaymentDate\n\t\tFROM LKP_Existing_Reserve\n\t),\n),\nRTR_Insert_or_Update AS (\n\tSELECT\n\tmplt_ClaimReserveDim.ClaimReserveDimId,\n\tEXP_Collect_Reserve_Information.ClaimantCoverageDetailReserveCalcId,\n\tEXP_Collect_Reserve_Information.ClaimantCoverageDetailReserveCalcAkId,\n\tEXP_Collect_Reserve_Information.ClaimantCoverageDetailAkId,\n\tEXP_Collect_Reserve_Information.FinancialTypeCode,\n\tEXP_Collect_Reserve_Information.FirstPaymentDateFromSource,\n\tEXP_Collect_Reserve_Information.ReserveOpenDateFromSource,\n\tEXP_Collect_Reserve_Information.ReserveCloseDateFromSource,\n\tEXP_Collect_Reserve_Information.ReserveReopenDateFromSource,\n\tEXP_Collect_Reserve_Information.ReserveCloseAfterReopenDateFromSource,\n\tEXP_Collect_Reserve_Information.created_modified_date,\n\tEXP_Collect_Reserve_Information.AuditId,\n\tmplt_ClaimReserveDim.ReserveOpenDate AS LKP_ReserveOpenDate,\n\tmplt_ClaimReserveDim.ReserveCloseDate AS LKP_ReserveCloseDate,\n\tmplt_ClaimReserveDim.ReserveReopenDate AS LKP_ReserveReopenDate,\n\tmplt_ClaimReserveDim.ReserveCloseAfterReopenDate AS LKP_ReserveCloseAfterReopenDate,\n\tmplt_ClaimReserveDim.FirstPaymentDate AS LKP_FirstPaymentDate\n\tFROM EXP_Collect_Reserve_Information\n\t -- Manually join with mplt_ClaimReserveDim\n),\nRTR_Insert_or_Update_Insert AS (SELECT * FROM RTR_Insert_or_Update WHERE ISNULL(ClaimReserveDimId)),\nRTR_Insert_or_Update_Update AS (SELECT * FROM RTR_Insert_or_Update WHERE (NOT ISNULL(ClaimReserveDimId)) AND\r\n((ReserveOpenDateFromSource<>LKP_ReserveOpenDate)\r\n\tOR (ReserveCloseDateFromSource<>LKP_ReserveCloseDate)\r\n\tOR (ReserveReopenDateFromSource<>LKP_ReserveReopenDate)\r\n\tOR (ReserveCloseAfterReopenDateFromSource<>LKP_ReserveCloseAfterReopenDate) \r\n\tOR (FirstPaymentDateFromSource<>LKP_FirstPaymentDate))),\nUPD_existing_records AS (\n\tSELECT\n\tClaimReserveDimId, \n\tClaimantCoverageDetailReserveCalcId, \n\tClaimantCoverageDetailReserveCalcAkId, \n\tClaimantCoverageDetailAkId, \n\tFinancialTypeCode, \n\tFirstPaymentDateFromSource AS FirstPaymentDate, \n\tReserveOpenDateFromSource AS ReserveOpenDate, \n\tReserveCloseDateFromSource AS ReserveCloseDate, \n\tReserveReopenDateFromSource AS ReserveReopenDate, \n\tReserveCloseAfterReopenDateFromSource AS ReserveCloseAfterReopenDate, \n\tcreated_modified_date, \n\tAuditId\n\tFROM RTR_Insert_or_Update_Update\n),\nClaimReserveDim_Update AS (\n\tMERGE INTO ClaimReserveDim AS T\n\tUSING UPD_existing_records AS S\n\tON T.ClaimReserveDimId = S.ClaimReserveDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.ModifiedDate = S.created_modified_date, T.EDWClaimantCoverageDetailReserveCalculationPKId = S.ClaimantCoverageDetailReserveCalcId, T.EDWClaimantCoverageDetReserveCalculationAKId = S.ClaimantCoverageDetailReserveCalcAkId, T.EDWClaimantCoverageDetailAKId = S.ClaimantCoverageDetailAkId, T.FinancialTypeCode = S.FinancialTypeCode, T.ReserveOpenDate = S.ReserveOpenDate, T.ReserveCloseDate = S.ReserveCloseDate, T.ReserveReopenDate = S.ReserveReopenDate, T.ReserveCloseAfterReopenDate = S.ReserveCloseAfterReopenDate, T.FirstPaymentDate = S.FirstPaymentDate\n),\nClaimReserveDim_Insert AS (\n\tINSERT INTO ClaimReserveDim\n\t(AuditId, CreatedDate, ModifiedDate, EDWClaimantCoverageDetailReserveCalculationPKId, EDWClaimantCoverageDetReserveCalculationAKId, EDWClaimantCoverageDetailAKId, FinancialTypeCode, ReserveOpenDate, ReserveCloseDate, ReserveReopenDate, ReserveCloseAfterReopenDate, FirstPaymentDate)\n\tSELECT \n\tAUDITID, \n\tcreated_modified_date AS CREATEDDATE, \n\tcreated_modified_date AS MODIFIEDDATE, \n\tClaimantCoverageDetailReserveCalcId AS EDWCLAIMANTCOVERAGEDETAILRESERVECALCULATIONPKID, \n\tClaimantCoverageDetailReserveCalcAkId AS EDWCLAIMANTCOVERAGEDETRESERVECALCULATIONAKID, \n\tClaimantCoverageDetailAkId AS EDWCLAIMANTCOVERAGEDETAILAKID, \n\tFINANCIALTYPECODE, \n\tReserveOpenDateFromSource AS RESERVEOPENDATE, \n\tReserveCloseDateFromSource AS RESERVECLOSEDATE, \n\tReserveReopenDateFromSource AS RESERVEREOPENDATE, \n\tReserveCloseAfterReopenDateFromSource AS RESERVECLOSEAFTERREOPENDATE, \n\tFirstPaymentDateFromSource AS FIRSTPAYMENTDATE\n\tFROM RTR_Insert_or_Update_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246509"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905529"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604468"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:45"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:48"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS AND EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}