{
    "name": "m_POL_DM_LOAD_StopLossAdjustmentCatastropheFact",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_StopLossAdjustmentCatastropheFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_StopLossAdjustmentCatastropheFact_PreviousInstance AS (\n\tSELECT\n\tStopLossAdjustmentAmount,\n\tAgencyCode,\n\tCatastropheCode\n\tFROM (\n\t\tSELECT A.AgencyCode AS AgencyCode,\r\n\t\tC.CatastropheCode AS CatastropheCode,\r\n\t\tSLA.StopLossAdjustmentAmount AS StopLossAdjustmentAmount\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentCatastropheFact SLA,\r\n\t\t      @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim cd,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER_V3}.AgencyDim A,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.CatastropheDim C\r\n\t\tWHERE  SLA.RunDateId = cd.clndr_id\r\n\t\tAND SLA.CatastropheDimId=C.CatastropheDimId\r\n\t\tAND SLA.PrimaryAgencyDimId=A.AgencyDimID\r\n\t\tand cd.CalendarMonthOfYear = 12\r\n\t\torder by \r\n\t\tA.AgencyCode,\r\n\t\tC.CatastropheCode,SLA.RunDateid --\r\n\t\t--AND cd.clndr_date=DATEADD(DD,-1,DATEADD(YY,DATEDIFF(YY,0,dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0))),0))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode,CatastropheCode ORDER BY StopLossAdjustmentAmount DESC) = 1\n),\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_claim_loss_transaction_fact_Catastrophe_Agency14508_CAT_H4_G7 AS (\n\tDECLARE @DATE1 as datetime\r\n\t\r\n\tSET @DATE1 = dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\r\n\tSELECT\r\n\tA.LegalPrimaryAgencyCode,\r\n\tA.claim_cat_code,\r\n\tA.total_direct_loss_recovery_incurred,\r\n\tA.Loss_Year,\r\n\tA.Rundate,\r\n\tcast(convert(varchar(4),A.Rundate,112) as int) Run_Year,\r\n\tB.SalesDivisionDimId,\r\n\tB.AgencyDimId,\r\n\tB.PrimaryAgencyDimId,\r\n\tB.CatastropheDimId,\r\n\tB.DirectIncurredLossInceptionToDate,\r\n\tB.StopLossLimit,\r\n\tB.StopLossAdjustmentAmount,\r\n\tB.Rundate StopLossRundate\r\n\tFROM\r\n\t(select LegalPrimaryAgencyCode,\r\n\tB.claim_cat_code,\r\n\tsum(case when claim_rpted_date<='2013-12-31 00:00:00' then (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR) \r\n\telse (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR+DirectALAEOutstandingIR) end) total_direct_loss_recovery_incurred,\r\n\tMin(convert(varchar(8),claim_loss_date,112)) Loss_Year,\r\n\tMin(claim_loss_date) Loss_Date,\r\n\t@DATE1 Rundate\r\n\tFROM\r\n\t(SELECT\r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\t(CASE  \r\n\t     WHEN ard.legalprimaryagencycode \r\n\t  is null THEN a.agencycode  \r\n\t      ELSE ard.legalprimaryagencycode\r\n\tEND) as LegalPrimaryAgencyCode,\r\n\tVLMF.DirectLossPaidIR,\r\n\tVLMF.DirectALAEPaidIR,\r\n\tVLMF.DirectLossOutstandingER,\r\n\tVLMF.DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date AS RunDate,\r\n\tOCC.claim_loss_date,\r\n\tOCC.edw_claim_occurrence_ak_id\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact VLMF\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD on VLMF.loss_master_run_date_id = CD.clndr_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC  on VLMF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A ON VLMF.AgencyDimId=A.AgencyDimID\r\n\t\r\n\tleft join \r\n\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t on (A.edwagencyakid=ard.edwagencyakid \r\n\t and cd.clndr_date between ard.agencyrelationshipeffectivedate and ard.agencyrelationshipexpirationdate)\r\n\t\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL ON VLMF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird ON VLMF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd ON VLMF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd ON VLMF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd ON VLMF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\twhere \r\n\tCD.clndr_date>='01/01/2001 00:00:00'\r\n\tand CASE WHEN (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\tAND CD.clndr_date Between '01/01/2022' and @DATE1\r\n\t) A,\r\n\t(SELECT claim_cat_code,edw_claim_occurrence_ak_id  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim\r\n\tWHERE  @DATE1 BETWEEN eff_from_date AND eff_to_date) B\r\n\tWHERE A.edw_claim_occurrence_ak_id = B.edw_claim_occurrence_ak_id\r\n\tand B.claim_cat_code<>'N/A'\r\n\tAND RunDate <= @DATE1\r\n\tgroup by LegalPrimaryAgencyCode,B.claim_cat_code) A\r\n\tfull outer join\r\n\t(\r\n\tSelect AB.EDWAgencyAKID,AB.AgencyCode,\r\n\t(CASE  WHEN ard.legalprimaryagencycode is null THEN ab.agencycode  ELSE ard.legalprimaryagencycode END) as legalprimaryagencycode, \r\n\tAB.CatastropheCode,AB.DirectIncurredLossInceptionToDate,AB.StopLossAdjustmentAmount,\r\n\tAB.clndr_date,AB.AgencyDimId,AB.PrimaryAgencyDimId,AB.SalesDivisionDimId,AB.CatastropheDimId,AB.StopLossLimit,AB.Rundate from \r\n\t(select B.EDWAgencyAKID,B.AgencyCode,C.CatastropheCode,A.DirectIncurredLossInceptionToDate,A.StopLossAdjustmentAmount,\r\n\tD.clndr_date,A.AgencyDimId,A.PrimaryAgencyDimId,A.SalesDivisionDimId,A.CatastropheDimId,A.StopLossLimit,@DATE1 Rundate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.StopLossAdjustmentCatastropheFact A,@{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim B,@{pipeline().parameters.SOURCE_TABLE_OWNER}.CatastropheDim C,\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim D\r\n\twhere A.PrimaryAgencyDimId=B.AgencyDimID\r\n\tand A.CatastropheDimId=C.CatastropheDimId\r\n\tand A.RunDateId=D.clndr_id\r\n\tand D.clndr_date=dateadd(dd,-1,DATEADD(yy,DATEDIFF(yy,0,@DATE1),0))) AB \r\n\tleft join   (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t on (AB.edwagencyakid=ard.edwagencyakid \r\n\t and AB.clndr_date between ard.agencyrelationshipeffectivedate and ard.agencyrelationshipexpirationdate) \r\n\t) B\r\n\ton A.LegalPrimaryAgencyCode=B.AgencyCode\r\n\tand A.claim_cat_code=B.CatastropheCode\r\n\t@{pipeline().parameters.WHERECLAUSECATASTROPHE_1}\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/*Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from \"AgencyRelationshipDim\" table*/\n),\nEXP_Default AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tCatastropheCode,\n\ttotal_direct_loss_recovery_incurred,\n\tLoss_Year,\n\tRundate,\n\tRun_Year,\n\tSalesDivisionDimId,\n\tAgencyDimId,\n\tPrimaryAgencyDimId,\n\tCatastropheDimId,\n\tDirectIncurredLossInceptionToDate,\n\tStopLossLimit,\n\tStopLossAdjustmentAmount,\n\tStopLossRundate\n\tFROM SQ_claim_loss_transaction_fact_Catastrophe_Agency14508_CAT_H4_G7\n),\nSQ_claim_loss_transaction_fact_Catastrophe AS (\n\tDECLARE @DATE1 as datetime\r\n\t\r\n\tSET @DATE1 = dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\r\n\tSELECT\r\n\tA.LegalPrimaryAgencyCode,\r\n\tA.claim_cat_code,\r\n\tA.total_direct_loss_recovery_incurred,\r\n\tA.Loss_Year,\r\n\tA.Rundate,\r\n\tcast(convert(varchar(4),A.Rundate,112) as int) Run_Year,\r\n\tB.SalesDivisionDimId,\r\n\tB.AgencyDimId,\r\n\tB.PrimaryAgencyDimId,\r\n\tB.CatastropheDimId,\r\n\tB.DirectIncurredLossInceptionToDate,\r\n\tB.StopLossLimit,\r\n\tB.StopLossAdjustmentAmount,\r\n\tB.Rundate StopLossRundate\r\n\tFROM \r\n\t(SELECT LegalPrimaryAgencyCode,\r\n\tB.claim_cat_code,\r\n\tSUM(case WHEN claim_rpted_date<='2013-12-31 00:00:00' THEN (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR) \r\n\tELSE (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR+DirectALAEOutstandingIR) end) total_direct_loss_recovery_incurred,\r\n\tMin(convert(varchar(8),claim_loss_date,112)) Loss_Year,\r\n\tMin(claim_loss_date) Loss_Date,\r\n\t@DATE1 Rundate\r\n\tFROM \r\n\t(SELECT\r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\t(CASE  WHEN ard.legalprimaryagencycode is null THEN a.agencycode ELSE ard.legalprimaryagencycode END) as LegalPrimaryAgencyCode,\r\n\tVLMF.DirectLossPaidIR,\r\n\tVLMF.DirectALAEPaidIR,\r\n\tVLMF.DirectLossOutstandingER,\r\n\tVLMF.DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date AS RunDate,\r\n\tOCC.claim_loss_date,\r\n\tOCC.edw_claim_occurrence_ak_id\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact VLMF\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD on VLMF.loss_master_run_date_id = CD.clndr_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC  on VLMF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A ON VLMF.AgencyDimId=A.AgencyDimID\r\n\tLEFT JOIN\r\n\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t on (A.edwagencyakid=ard.edwagencyakid \r\n\t and cd.clndr_date between ard.agencyrelationshipeffectivedate and ard.agencyrelationshipexpirationdate)\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL ON VLMF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird ON VLMF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd ON VLMF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd ON VLMF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd ON VLMF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE \r\n\tCD.clndr_date>='01/01/2001 00:00:00'\r\n\tand CASE WHEN (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t) A,\r\n\t(SELECT claim_cat_code,edw_claim_occurrence_ak_id  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim\r\n\tWHERE  @DATE1 BETWEEN eff_from_date AND eff_to_date) B\r\n\tWHERE A.edw_claim_occurrence_ak_id = B.edw_claim_occurrence_ak_id\r\n\tand B.claim_cat_code<>'N/A'\r\n\tAND RunDate <= @DATE1\r\n\tgroup by LegalPrimaryAgencyCode,B.claim_cat_code) A\r\n\tFULL OUTER JOIN \r\n\t(\r\n\tSELECT AB.EDWAgencyAKID,AB.AgencyCode,\r\n\t(CASE WHEN ard.legalprimaryagencycode is null THEN ab.agencycode  ELSE ard.legalprimaryagencycode END) as legalprimaryagencycode, \r\n\tAB.CatastropheCode,AB.DirectIncurredLossInceptionToDate,AB.StopLossAdjustmentAmount,\r\n\tAB.clndr_date,AB.AgencyDimId,AB.PrimaryAgencyDimId,AB.SalesDivisionDimId,AB.CatastropheDimId,AB.StopLossLimit,AB.Rundate from \r\n\t(select B.EDWAgencyAKID,B.AgencyCode,C.CatastropheCode,A.DirectIncurredLossInceptionToDate,A.StopLossAdjustmentAmount,\r\n\tD.clndr_date,A.AgencyDimId,A.PrimaryAgencyDimId,A.SalesDivisionDimId,A.CatastropheDimId,A.StopLossLimit,@DATE1 Rundate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.StopLossAdjustmentCatastropheFact A,@{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim B,@{pipeline().parameters.SOURCE_TABLE_OWNER}.CatastropheDim C,\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim D\r\n\twhere A.PrimaryAgencyDimId=B.AgencyDimID\r\n\tand A.CatastropheDimId=C.CatastropheDimId\r\n\tand A.RunDateId=D.clndr_id\r\n\tand D.clndr_date=dateadd(dd,-1,DATEADD(yy,DATEDIFF(yy,0,@DATE1),0))) AB \r\n\tleft join   (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t on (AB.edwagencyakid=ard.edwagencyakid \r\n\t and AB.clndr_date between ard.agencyrelationshipeffectivedate and ard.agencyrelationshipexpirationdate) \r\n\t) B\r\n\ton A.LegalPrimaryAgencyCode=B.AgencyCode\r\n\tand A.claim_cat_code=B.CatastropheCode\r\n\t@{pipeline().parameters.WHERECLAUSECATASTROPHE}\r\n\t\r\n\t/*Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from \"AgencyRelationshipDim\" table*/\n),\nEXP_SRC_DataCollect AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tCatastropheCode,\n\ttotal_direct_loss_recovery_incurred,\n\tLoss_Year,\n\tRundate,\n\tRun_Year,\n\tSalesDivisionDimId,\n\tAgencyDimId,\n\tPrimaryAgencyDimId,\n\tCatastropheDimId,\n\tDirectIncurredLossInceptionToDate,\n\tStopLossLimit,\n\tStopLossAdjustmentAmount,\n\tStopLossRundate\n\tFROM SQ_claim_loss_transaction_fact_Catastrophe\n),\nUnion AS (\n\tSELECT LegalPrimaryAgencyCode, CatastropheCode, total_direct_loss_recovery_incurred, Loss_Year, Rundate, Run_Year, SalesDivisionDimId, AgencyDimId, PrimaryAgencyDimId, CatastropheDimId, DirectIncurredLossInceptionToDate, StopLossLimit, StopLossAdjustmentAmount, StopLossRundate\n\tFROM EXP_Default\n\tUNION\n\tSELECT LegalPrimaryAgencyCode, CatastropheCode, total_direct_loss_recovery_incurred, Loss_Year, Rundate, Run_Year, SalesDivisionDimId, AgencyDimId, PrimaryAgencyDimId, CatastropheDimId, DirectIncurredLossInceptionToDate, StopLossLimit, StopLossAdjustmentAmount, StopLossRundate\n\tFROM EXP_SRC_DataCollect\n),\nRTR_Split_New_Balance AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tCatastropheCode,\n\ttotal_direct_loss_recovery_incurred,\n\tLoss_Year,\n\tRundate,\n\tRun_Year,\n\tSalesDivisionDimId,\n\tAgencyDimId,\n\tPrimaryAgencyDimId,\n\tCatastropheDimId,\n\tDirectIncurredLossInceptionToDate,\n\tStopLossLimit,\n\tStopLossAdjustmentAmount,\n\tStopLossRundate\n\tFROM Union\n),\nRTR_Split_New_Balance_New AS (SELECT * FROM RTR_Split_New_Balance WHERE NOT ISNULL(LegalPrimaryAgencyCode) and Run_Year-to_integer(substr(Loss_Year,1,4))<=2),\nRTR_Split_New_Balance_Balance AS (SELECT * FROM RTR_Split_New_Balance WHERE ISNULL(LegalPrimaryAgencyCode) AND Run_Year-to_integer(substr(Loss_Year,1,4))<=2\r\n\r\n-----  This Group is used to write the balancing transaction if CAT Loss becomes Non CAT Loss and Non CAT Loss becomes a CAT Loss. We are writing a balancing transcation to balance the previously written Stop Loss AdjustmentAmount.\r\n\r\n---- Added the condition to filter out the rows if CAT loss is more than 3 years.),\nEXP_StopLossCat_Balance AS (\n\tSELECT\n\t-1000 AS AuditId,\n\tSalesDivisionDimId,\n\tAgencyDimId,\n\tPrimaryAgencyDimId,\n\tCatastropheDimId,\n\tDirectIncurredLossInceptionToDate,\n\tStopLossLimit,\n\tStopLossAdjustmentAmount,\n\t0.00 AS O_StopLossAdjustmentAmount,\n\t0-StopLossAdjustmentAmount AS ChangeINStopLossAdjustmentAmount,\n\tStopLossRundate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(StopLossRundate,'HH',0),'MI',0),'SS',0))\n\tLKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_StopLossRundate_HH_0_MI_0_SS_0.clndr_id AS RunDateID\n\tFROM RTR_Split_New_Balance_Balance\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_StopLossRundate_HH_0_MI_0_SS_0\n\tON LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_StopLossRundate_HH_0_MI_0_SS_0.clndr_date = SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(StopLossRundate, 'HH', 0), 'MI', 0), 'SS', 0)\n\n),\nTGT_StopLossAdjustmentCatastropheFact_Balance AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentCatastropheFact\n\t(AuditId, SalesDivisionDimId, AgencyDimId, PrimaryAgencyDimId, CatastropheDimId, RunDateId, DirectIncurredLossInceptionToDate, StopLossLimit, StopLossAdjustmentAmount, ChangeInStopLossAdjustmentAmount)\n\tSELECT \n\tAUDITID, \n\tSALESDIVISIONDIMID, \n\tAGENCYDIMID, \n\tPRIMARYAGENCYDIMID, \n\tCATASTROPHEDIMID, \n\tRunDateID AS RUNDATEID, \n\tDIRECTINCURREDLOSSINCEPTIONTODATE, \n\tSTOPLOSSLIMIT, \n\tO_StopLossAdjustmentAmount AS STOPLOSSADJUSTMENTAMOUNT, \n\tChangeINStopLossAdjustmentAmount AS CHANGEINSTOPLOSSADJUSTMENTAMOUNT\n\tFROM EXP_StopLossCat_Balance\n),\nEXP_GetValues_Catastrophe AS (\n\tSELECT\n\t'99999' AS AgencyCode,\n\tCatastropheCode,\n\ttotal_direct_loss_recovery_incurred,\n\tLoss_Year,\n\t-- *INF*: substr(Loss_Year,1,4)\n\tsubstr(Loss_Year, 1, 4) AS O_Loss_Year,\n\tRundate AS RunDate,\n\tLegalPrimaryAgencyCode\n\tFROM RTR_Split_New_Balance_New\n),\nLKP_CatastropheDim AS (\n\tSELECT\n\tCatastropheDimId,\n\tCatastropheCode\n\tFROM (\n\t\tSELECT \n\t\t\tCatastropheDimId,\n\t\t\tCatastropheCode\n\t\tFROM CatastropheDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CatastropheCode ORDER BY CatastropheDimId DESC) = 1\n),\nLKP_V3_AgencyDimID AS (\n\tSELECT\n\tagency_dim_id,\n\tAgencyCode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id,\r\n\t\t AgencyDim.Agencycode as Agencycode,\r\n\t\t  AgencyDim.EffectiveDate as eff_from_date,\r\n\t\t   AgencyDim.ExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n),\nLKP_V3_PrimaryAgencyDimID_Primary AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tIN_Trans_Date,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \r\n\t\t\r\n\t\tard. LegalPrimaryAgencyCode as LegalPrimaryAgencyCode , \r\n\t\t \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tArd.AgencyrelationshipEffectiveDate as eff_from_date, \r\n\t\tArd.AgencyrelationshipExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\r\n\t\t \r\n\t\t left join \r\n\t\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t\t on (AgencyDim.edwagencyakid=ard.edwagencyakid) \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t--Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from --\"AgencyRelationshipDim\" table\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY LegalPrimaryAgencyCode DESC) = 1\n),\nEXP_LegalPrimaryAgencycode AS (\n\tSELECT\n\tEXP_GetValues_Catastrophe.LegalPrimaryAgencyCode,\n\tLKP_V3_PrimaryAgencyDimID_Primary.LegalPrimaryAgencyCode AS LKP_LegalPrimaryAgencyCode,\n\t-- *INF*: iif(isnull(LKP_LegalPrimaryAgencyCode),LegalPrimaryAgencyCode,LKP_LegalPrimaryAgencyCode)\n\tIFF(LKP_LegalPrimaryAgencyCode IS NULL, LegalPrimaryAgencyCode, LKP_LegalPrimaryAgencyCode) AS o_LegalPrimaryAgencyCode\n\tFROM EXP_GetValues_Catastrophe\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_Primary\n\tON LKP_V3_PrimaryAgencyDimID_Primary.Agencycode = EXP_GetValues_Catastrophe.LegalPrimaryAgencyCode AND LKP_V3_PrimaryAgencyDimID_Primary.eff_from_date <= EXP_GetValues_Catastrophe.RunDate AND LKP_V3_PrimaryAgencyDimID_Primary.eff_to_date >= EXP_GetValues_Catastrophe.RunDate\n),\nLKP_V3_PrimaryAgencyDimID_CAT AS (\n\tSELECT\n\tagency_dim_id,\n\tSalesDivisionDimId,\n\tIN_LegalPrimaryAgencyCode,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tAgencyDim.EffectiveDate as eff_from_date, \r\n\t\tAgencyDim.ExpirationDate as eff_to_date,\r\n\t\tAgencyDim.SalesDivisionDimId as SalesDivisionDimId\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n),\nLKP_WorkStopLossLimit_Catastrophe AS (\n\tSELECT\n\tPrimaryAgencyCode,\n\tStopLossLimit,\n\tAgencyPreviousYearDirectWrittenPremium,\n\tLoss_Year\n\tFROM (\n\t\tSELECT WSL.PrimaryAgencyCode AS PrimaryAgencyCode,\r\n\t\tWSL.StopLossLimit AS StopLossLimit,\r\n\t\tWSL.AgencyPreviousYearDirectWrittenPremium AS AgencyPreviousYearDirectWrittenPremium,\r\n\t\tconvert(varchar(4),rundate,112) AS Loss_Year\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkStopLossLimit WSL\r\n\t\tWHERE WSL.CurrentSnapshotFlag=1\r\n\t\t--AND YEAR(WSL.RunDate)=YEAR(@{pipeline().parameters.RUNDATEEND})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PrimaryAgencyCode,Loss_Year ORDER BY PrimaryAgencyCode DESC) = 1\n),\nLKP_WorkStopLossLimit_Catastrophe_Primary AS (\n\tSELECT\n\tPrimaryAgencyCode,\n\tStopLossLimit,\n\tAgencyPreviousYearDirectWrittenPremium,\n\tLoss_Year\n\tFROM (\n\t\tSELECT WSL.PrimaryAgencyCode AS PrimaryAgencyCode,\r\n\t\tWSL.StopLossLimit AS StopLossLimit,\r\n\t\tWSL.AgencyPreviousYearDirectWrittenPremium AS AgencyPreviousYearDirectWrittenPremium,\r\n\t\tconvert(varchar(4),rundate,112) AS Loss_Year\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkStopLossLimit WSL\r\n\t\tWHERE WSL.CurrentSnapshotFlag=1\r\n\t\t--AND YEAR(WSL.RunDate)=YEAR(@{pipeline().parameters.RUNDATEEND})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PrimaryAgencyCode,Loss_Year ORDER BY PrimaryAgencyCode DESC) = 1\n),\nEXP_CalValues_Catastrophe AS (\n\tSELECT\n\tEXP_GetValues_Catastrophe.total_direct_loss_recovery_incurred AS i_TotalDirectIncurredLoss,\n\tEXP_GetValues_Catastrophe.AgencyCode,\n\tEXP_GetValues_Catastrophe.CatastropheCode,\n\tEXP_GetValues_Catastrophe.RunDate AS i_RunDate,\n\tLKP_WorkStopLossLimit_Catastrophe.StopLossLimit AS lkp_StopLossLimit,\n\tLKP_WorkStopLossLimit_Catastrophe_Primary.StopLossLimit AS lkp_StopLossLimit2,\n\tLKP_V3_PrimaryAgencyDimID_CAT.IN_LegalPrimaryAgencyCode AS lkp_LegalPrimaryAgencyCode2,\n\tLKP_WorkStopLossLimit_Catastrophe.AgencyPreviousYearDirectWrittenPremium AS lkp_AgencyPreviousYearDirectWrittenPremium,\n\tLKP_WorkStopLossLimit_Catastrophe_Primary.AgencyPreviousYearDirectWrittenPremium AS lkp_AgencyPreviousYearDirectWrittenPremium2,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tLKP_V3_PrimaryAgencyDimID_CAT.SalesDivisionDimId AS IN_SalesDivisionDimId,\n\t-- *INF*: IIF(ISNULL(IN_SalesDivisionDimId),-1,IN_SalesDivisionDimId)\n\tIFF(IN_SalesDivisionDimId IS NULL, - 1, IN_SalesDivisionDimId) AS SalesDivisionDimId,\n\tLKP_V3_AgencyDimID.agency_dim_id AS AgencyDimId,\n\tLKP_CatastropheDim.CatastropheDimId,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(i_RunDate,'HH',0),'MI',0),'SS',0))\n\tLKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_id AS o_RunDateId,\n\tEXP_GetValues_Catastrophe.Loss_Year,\n\t-- *INF*: substr(Loss_Year,1,4)\n\tsubstr(Loss_Year, 1, 4) AS V_LOSS_YEAR,\n\t-- *INF*: substr(Loss_Year,5,2)\n\tsubstr(Loss_Year, 5, 2) AS V_LOSS_MONTH,\n\ti_TotalDirectIncurredLoss AS o_TotalDirectIncurredLoss,\n\t-- *INF*: Decode(TRUE,IN(LegalPrimaryAgencyCode,'12176','13176'),\r\n\t-- DECODE(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997'),200000,\r\n\t-- IN(V_LOSS_YEAR,'1998','1999','2000','2001'),400000,\r\n\t-- V_LOSS_YEAR>'2001',1000000),\r\n\t-- IN(LegalPrimaryAgencyCode,'12651','13651'),\r\n\t-- DECODE(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- V_LOSS_YEAR='2005' and IN(V_LOSS_MONTH,'04','05','06','07','08','09','10','11','12'),500000,lkp_StopLossLimit),\r\n\t-- Decode(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- V_LOSS_YEAR>='2015' AND lkp_AgencyPreviousYearDirectWrittenPremium<=20000000,500000,\r\n\t-- V_LOSS_YEAR>='2015' AND V_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2 > 20000000,500000,\r\n\t-- V_LOSS_YEAR>='2022' AND lkp_AgencyPreviousYearDirectWrittenPremium>20000000,1000000,\r\n\t-- lkp_StopLossLimit))\r\n\t-- \r\n\t-- --The above decode statement has been implemented to catch the stoplosslimit as per the mainframe code WB11002B\n\tDecode(TRUE,\n\tIN(LegalPrimaryAgencyCode, '12176', '13176'), DECODE(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997'), 200000,\n\tIN(V_LOSS_YEAR, '1998', '1999', '2000', '2001'), 400000,\n\tV_LOSS_YEAR > '2001', 1000000),\n\tIN(LegalPrimaryAgencyCode, '12651', '13651'), DECODE(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tV_LOSS_YEAR = '2005' AND IN(V_LOSS_MONTH, '04', '05', '06', '07', '08', '09', '10', '11', '12'), 500000,\n\tlkp_StopLossLimit),\n\tDecode(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tV_LOSS_YEAR >= '2015' AND lkp_AgencyPreviousYearDirectWrittenPremium <= 20000000, 500000,\n\tV_LOSS_YEAR >= '2015' AND V_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2 > 20000000, 500000,\n\tV_LOSS_YEAR >= '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium > 20000000, 1000000,\n\tlkp_StopLossLimit)) AS V_STOP_LOSS_LIMIT,\n\t-- *INF*: Decode(TRUE,IN(lkp_LegalPrimaryAgencyCode2,'12176','13176'),\r\n\t-- DECODE(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997'),200000,\r\n\t-- IN(V_LOSS_YEAR,'1998','1999','2000','2001'),400000,\r\n\t-- V_LOSS_YEAR>'2001',1000000),\r\n\t-- IN(lkp_LegalPrimaryAgencyCode2,'12651','13651'),\r\n\t-- DECODE(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- V_LOSS_YEAR='2005' and IN(V_LOSS_MONTH,'04','05','06','07','08','09','10','11','12'),500000,lkp_StopLossLimit2),\r\n\t-- Decode(TRUE,V_LOSS_YEAR<'1995',100000,\r\n\t-- V_LOSS_YEAR='1995',125000,\r\n\t-- IN(V_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- V_LOSS_YEAR>='2015' AND lkp_AgencyPreviousYearDirectWrittenPremium2<=20000000,500000,\r\n\t-- V_LOSS_YEAR>='2015' AND V_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2 > 20000000,500000,\r\n\t-- V_LOSS_YEAR>='2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2>20000000,1000000,\r\n\t-- lkp_StopLossLimit2))\n\tDecode(TRUE,\n\tIN(lkp_LegalPrimaryAgencyCode2, '12176', '13176'), DECODE(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997'), 200000,\n\tIN(V_LOSS_YEAR, '1998', '1999', '2000', '2001'), 400000,\n\tV_LOSS_YEAR > '2001', 1000000),\n\tIN(lkp_LegalPrimaryAgencyCode2, '12651', '13651'), DECODE(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tV_LOSS_YEAR = '2005' AND IN(V_LOSS_MONTH, '04', '05', '06', '07', '08', '09', '10', '11', '12'), 500000,\n\tlkp_StopLossLimit2),\n\tDecode(TRUE,\n\tV_LOSS_YEAR < '1995', 100000,\n\tV_LOSS_YEAR = '1995', 125000,\n\tIN(V_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tV_LOSS_YEAR >= '2015' AND lkp_AgencyPreviousYearDirectWrittenPremium2 <= 20000000, 500000,\n\tV_LOSS_YEAR >= '2015' AND V_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2 > 20000000, 500000,\n\tV_LOSS_YEAR >= '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium2 > 20000000, 1000000,\n\tlkp_StopLossLimit2)) AS V_STOP_LOSS_LIMIT2,\n\t-- *INF*: IIF(ISNULL(V_STOP_LOSS_LIMIT) or V_STOP_LOSS_LIMIT=0.0,200000,V_STOP_LOSS_LIMIT)\r\n\t-- \r\n\t-- --As per the Cobol code, if a given Agency does not have stop loss limit then we assign 200000 as the default stop loss limit.\n\tIFF(V_STOP_LOSS_LIMIT IS NULL OR V_STOP_LOSS_LIMIT = 0.0, 200000, V_STOP_LOSS_LIMIT) AS V_Final_Stop_Loss_Limit,\n\t-- *INF*: IIF(ISNULL(V_STOP_LOSS_LIMIT2) or V_STOP_LOSS_LIMIT2=0.0,200000,V_STOP_LOSS_LIMIT2)\r\n\t-- \r\n\t-- --As per the Cobol code, if a given Agency does not have stop loss limit then we assign 200000 as the default stop loss limit.\n\tIFF(V_STOP_LOSS_LIMIT2 IS NULL OR V_STOP_LOSS_LIMIT2 = 0.0, 200000, V_STOP_LOSS_LIMIT2) AS V_Final_Stop_Loss_Limit2,\n\tV_Final_Stop_Loss_Limit AS o_StopLossLimit,\n\tV_Final_Stop_Loss_Limit2 AS o_StopLossLimit2,\n\t-- *INF*: IIF(i_TotalDirectIncurredLoss<=V_Final_Stop_Loss_Limit, 0.0 , i_TotalDirectIncurredLoss-V_Final_Stop_Loss_Limit)\n\tIFF(i_TotalDirectIncurredLoss <= V_Final_Stop_Loss_Limit, 0.0, i_TotalDirectIncurredLoss - V_Final_Stop_Loss_Limit) AS V_StopLossAdjustmentAmount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LegalPrimaryAgencyCode = '14508' AND IN(CatastropheCode,'0G7','0H4'), i_TotalDirectIncurredLoss,\r\n\t-- V_StopLossAdjustmentAmount>0.0,V_StopLossAdjustmentAmount,0.0)\n\tDECODE(TRUE,\n\tLegalPrimaryAgencyCode = '14508' AND IN(CatastropheCode, '0G7', '0H4'), i_TotalDirectIncurredLoss,\n\tV_StopLossAdjustmentAmount > 0.0, V_StopLossAdjustmentAmount,\n\t0.0) AS o_StopLossAdjustmentAmount,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE(LegalPrimaryAgencyCode,CatastropheCode)),0.0,:LKP.LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE(LegalPrimaryAgencyCode,CatastropheCode))\n\tIFF(LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE_LegalPrimaryAgencyCode_CatastropheCode.StopLossAdjustmentAmount IS NULL, 0.0, LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE_LegalPrimaryAgencyCode_CatastropheCode.StopLossAdjustmentAmount) AS Lkp_Previous_StopLossAdjustmentAmount,\n\tV_StopLossAdjustmentAmount-Lkp_Previous_StopLossAdjustmentAmount AS v_ChangeInStopLossAdjustmentAmount,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LegalPrimaryAgencyCode = '14508' AND IN(CatastropheCode,'0G7','0H4'), i_TotalDirectIncurredLoss,\r\n\t-- LegalPrimaryAgencyCode = '48755' AND CatastropheCode ='0H5', 0.00,\r\n\t-- v_ChangeInStopLossAdjustmentAmount)\r\n\t-- \r\n\t-- ----- Above is work around fix for ChangeInStopLossAdjusmentAmount field called out in INC0271757/US-413136, this is temporary fix as CAT loss more than 3 years won't get written to target fact table. Above CAT's have originated in 2020 so no data gets written in 2023.\r\n\t-- \n\tDECODE(TRUE,\n\tLegalPrimaryAgencyCode = '14508' AND IN(CatastropheCode, '0G7', '0H4'), i_TotalDirectIncurredLoss,\n\tLegalPrimaryAgencyCode = '48755' AND CatastropheCode = '0H5', 0.00,\n\tv_ChangeInStopLossAdjustmentAmount) AS O_ChangeInStopLossAdjustmentAmount,\n\tEXP_GetValues_Catastrophe.LegalPrimaryAgencyCode,\n\tLKP_WorkStopLossLimit_Catastrophe.PrimaryAgencyCode,\n\t-- *INF*: IIF(ISNULL(PrimaryAgencyCode),LegalPrimaryAgencyCode,PrimaryAgencyCode)\n\tIFF(PrimaryAgencyCode IS NULL, LegalPrimaryAgencyCode, PrimaryAgencyCode) AS v_LegalPrimaryAgencyCode,\n\tLKP_V3_PrimaryAgencyDimID_CAT.agency_dim_id AS IN_PrimaryAgencyDimId,\n\t-- *INF*: IIF(ISNULL(IN_PrimaryAgencyDimId),-1,IN_PrimaryAgencyDimId)\n\tIFF(IN_PrimaryAgencyDimId IS NULL, - 1, IN_PrimaryAgencyDimId) AS PrimaryAgencyDimId\n\tFROM EXP_GetValues_Catastrophe\n\tLEFT JOIN LKP_CatastropheDim\n\tON LKP_CatastropheDim.CatastropheCode = RTR_Split_New_Balance.CatastropheCode1\n\tLEFT JOIN LKP_V3_AgencyDimID\n\tON LKP_V3_AgencyDimID.AgencyCode = EXP_GetValues_Catastrophe.AgencyCode AND LKP_V3_AgencyDimID.eff_from_date <= EXP_GetValues_Catastrophe.RunDate AND LKP_V3_AgencyDimID.eff_to_date >= EXP_GetValues_Catastrophe.RunDate\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_CAT\n\tON LKP_V3_PrimaryAgencyDimID_CAT.Agencycode = EXP_LegalPrimaryAgencycode.o_LegalPrimaryAgencyCode AND LKP_V3_PrimaryAgencyDimID_CAT.eff_from_date <= LKP_V3_PrimaryAgencyDimID_Primary.IN_Trans_Date AND LKP_V3_PrimaryAgencyDimID_CAT.eff_to_date >= LKP_V3_PrimaryAgencyDimID_Primary.IN_Trans_Date\n\tLEFT JOIN LKP_WorkStopLossLimit_Catastrophe\n\tON LKP_WorkStopLossLimit_Catastrophe.PrimaryAgencyCode = EXP_GetValues_Catastrophe.LegalPrimaryAgencyCode AND LKP_WorkStopLossLimit_Catastrophe.Loss_Year = EXP_GetValues_Catastrophe.O_Loss_Year\n\tLEFT JOIN LKP_WorkStopLossLimit_Catastrophe_Primary\n\tON LKP_WorkStopLossLimit_Catastrophe_Primary.PrimaryAgencyCode = EXP_LegalPrimaryAgencycode.o_LegalPrimaryAgencyCode AND LKP_WorkStopLossLimit_Catastrophe_Primary.Loss_Year = EXP_GetValues_Catastrophe.O_Loss_Year\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0\n\tON LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_date = SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(i_RunDate, 'HH', 0), 'MI', 0), 'SS', 0)\n\n\tLEFT JOIN LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE_LegalPrimaryAgencyCode_CatastropheCode\n\tON LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE_LegalPrimaryAgencyCode_CatastropheCode.AgencyCode = LegalPrimaryAgencyCode\n\tAND LKP_STOPLOSSADJUSTMENTCATASTROPHEFACT_PREVIOUSINSTANCE_LegalPrimaryAgencyCode_CatastropheCode.CatastropheCode = CatastropheCode\n\n),\nAGG_ByPrimaryAgencyCode AS (\n\tSELECT\n\to_TotalDirectIncurredLoss AS i_TotalDirectIncurredLoss, \n\to_StopLossAdjustmentAmount AS i_StopLossAdjustmentAmount, \n\tO_ChangeInStopLossAdjustmentAmount AS i_ChangeInStopLossAdjustmentAmount, \n\to_AuditId AS AuditId, \n\tSalesDivisionDimId, \n\tAgencyDimId, \n\tCatastropheDimId, \n\to_RunDateId AS RunDateId, \n\to_StopLossLimit2 AS StopLossLimit, \n\tPrimaryAgencyDimId, \n\tSUM(i_TotalDirectIncurredLoss) AS o_TotalDirectIncurredLoss, \n\tSUM(i_StopLossAdjustmentAmount) AS o_StopLossAdjustmentAmount, \n\tSUM(i_ChangeInStopLossAdjustmentAmount) AS o_ChangeInStopLossAdjustmentAmount\n\tFROM EXP_CalValues_Catastrophe\n\tGROUP BY CatastropheDimId, RunDateId, PrimaryAgencyDimId\n),\nFIL_StopLossAdjustmentAmount_Catastrophe AS (\n\tSELECT\n\tAuditId, \n\tSalesDivisionDimId, \n\tAgencyDimId, \n\tCatastropheDimId, \n\tRunDateId, \n\to_TotalDirectIncurredLoss AS TotalDirectIncurredLoss, \n\tStopLossLimit, \n\to_StopLossAdjustmentAmount AS StopLossAdjustmentAmount, \n\to_ChangeInStopLossAdjustmentAmount AS ChangeInStopLossAdjustmentAmount, \n\tPrimaryAgencyDimId\n\tFROM AGG_ByPrimaryAgencyCode\n\tWHERE IIF(ChangeInStopLossAdjustmentAmount=0.0 and StopLossAdjustmentAmount<>0.0,'Y',\r\nIIF(ChangeInStopLossAdjustmentAmount<>0.0,'Y','N'))='Y' --AND StopLossLimit>0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0 OR StopLossAdjustmentAmount<>0.0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0 AND StopLossLimit>0\n),\nLKP_StopLossAdjustmentCatastropheFact AS (\n\tSELECT\n\tStopLossAdjustmentCatastropheFactId,\n\tSalesDivisionDimID,\n\tAgencyDimId,\n\tCatastropheDimId,\n\tRunDateId\n\tFROM (\n\t\tSELECT a.AgencyDimId                         AS AgencyDimId,\r\n\t\t       a.CatastropheDimId                    AS CatastropheDimId,\r\n\t\t       a.SalesDivisionDimID                  AS SalesDivisionDimID,\r\n\t\t       a.RunDateId                           AS RunDateId,\r\n\t\t       a.StopLossAdjustmentCatastropheFactId AS StopLossAdjustmentCatastropheFactId\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentCatastropheFact a,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim cd\r\n\t\tWHERE  a.RunDateId = cd.clndr_id\r\n\t\t       AND cd.clndr_yr = Year(dateadd(dd,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0)))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SalesDivisionDimID,AgencyDimId,CatastropheDimId,RunDateId ORDER BY StopLossAdjustmentCatastropheFactId DESC) = 1\n),\nRTR_Insert_Update_Catastrophe AS (\n\tSELECT\n\tLKP_StopLossAdjustmentCatastropheFact.StopLossAdjustmentCatastropheFactId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.AuditId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.SalesDivisionDimId AS SalesDivisionDimID,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.AgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.PrimaryAgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.CatastropheDimId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.RunDateId,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.TotalDirectIncurredLoss AS DirectIncurredLossInceptionToDate,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.StopLossLimit,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.StopLossAdjustmentAmount,\n\tFIL_StopLossAdjustmentAmount_Catastrophe.ChangeInStopLossAdjustmentAmount AS O_ChangeInStopLossAdjustmentAmount\n\tFROM FIL_StopLossAdjustmentAmount_Catastrophe\n\tLEFT JOIN LKP_StopLossAdjustmentCatastropheFact\n\tON LKP_StopLossAdjustmentCatastropheFact.SalesDivisionDimID = FIL_StopLossAdjustmentAmount_Catastrophe.SalesDivisionDimId AND LKP_StopLossAdjustmentCatastropheFact.AgencyDimId = FIL_StopLossAdjustmentAmount_Catastrophe.AgencyDimId AND LKP_StopLossAdjustmentCatastropheFact.CatastropheDimId = FIL_StopLossAdjustmentAmount_Catastrophe.CatastropheDimId AND LKP_StopLossAdjustmentCatastropheFact.RunDateId = FIL_StopLossAdjustmentAmount_Catastrophe.RunDateId\n),\nRTR_Insert_Update_Catastrophe_INSERT AS (SELECT * FROM RTR_Insert_Update_Catastrophe WHERE ISNULL(StopLossAdjustmentCatastropheFactId)),\nRTR_Insert_Update_Catastrophe_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update_Catastrophe WHERE NOT ( (ISNULL(StopLossAdjustmentCatastropheFactId)) )),\nTGT_StopLossAdjustmentCatastropheFact_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentCatastropheFact\n\t(AuditId, SalesDivisionDimId, AgencyDimId, PrimaryAgencyDimId, CatastropheDimId, RunDateId, DirectIncurredLossInceptionToDate, StopLossLimit, StopLossAdjustmentAmount, ChangeInStopLossAdjustmentAmount)\n\tSELECT \n\tAUDITID, \n\tSalesDivisionDimID AS SALESDIVISIONDIMID, \n\tPrimaryAgencyDimId AS AGENCYDIMID, \n\tPRIMARYAGENCYDIMID, \n\tCATASTROPHEDIMID, \n\tRUNDATEID, \n\tDIRECTINCURREDLOSSINCEPTIONTODATE, \n\tSTOPLOSSLIMIT, \n\tSTOPLOSSADJUSTMENTAMOUNT, \n\tO_ChangeInStopLossAdjustmentAmount AS CHANGEINSTOPLOSSADJUSTMENTAMOUNT\n\tFROM RTR_Insert_Update_Catastrophe_INSERT\n),\nUPD_CatastropheFact AS (\n\tSELECT\n\tStopLossAdjustmentCatastropheFactId, \n\tAuditId, \n\tSalesDivisionDimID, \n\tPrimaryAgencyDimId AS AgencyDimId, \n\tPrimaryAgencyDimId AS PrimaryAgencyDimId2, \n\tCatastropheDimId, \n\tRunDateId, \n\tDirectIncurredLossInceptionToDate, \n\tStopLossLimit, \n\tStopLossAdjustmentAmount, \n\tO_ChangeInStopLossAdjustmentAmount AS O_ChangeInStopLossAdjustmentAmount2\n\tFROM RTR_Insert_Update_Catastrophe_DEFAULT1\n),\nTGT_StopLossAdjustmentCatastropheFact_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentCatastropheFact AS T\n\tUSING UPD_CatastropheFact AS S\n\tON T.StopLossAdjustmentCatastropheFactId = S.StopLossAdjustmentCatastropheFactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.SalesDivisionDimId = S.SalesDivisionDimID, T.AgencyDimId = S.AgencyDimId, T.PrimaryAgencyDimId = S.PrimaryAgencyDimId2, T.CatastropheDimId = S.CatastropheDimId, T.RunDateId = S.RunDateId, T.DirectIncurredLossInceptionToDate = S.DirectIncurredLossInceptionToDate, T.StopLossLimit = S.StopLossLimit, T.StopLossAdjustmentAmount = S.StopLossAdjustmentAmount, T.ChangeInStopLossAdjustmentAmount = S.O_ChangeInStopLossAdjustmentAmount2\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244879"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893608"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7545030"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 12:24:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/02/2023 12:45:34"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "EDW_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "DBCONNECTION_SOURCE_EDM": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "LOAD": {
                "type": "string",
                "defaultValue": "ONGOING"
            },
            "NO_OF_YEARS": {
                "type": "string",
                "defaultValue": "0"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "0"
            },
            "FILTERCLAUSE": {
                "type": "string",
                "defaultValue": "true"
            },
            "WHERECLAUSEOCCURRENCE": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERECLAUSECATASTROPHE": {
                "type": "string",
                "defaultValue": "WHERE (A.LegalPrimaryAgencyCode + '|' + A.claim_cat_code  NOT IN ('14508|0H4','14508|0G7'))"
            },
            "WHERECLAUSECATASTROPHE_1": {
                "type": "string",
                "defaultValue": "WHERE A.claim_cat_code in ('0H4','0G7') and A.LegalPrimaryAgencyCode in ('14508')"
            },
            "RUNDATEEND": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}