{
    "name": "s_m_CLM_FEED_Reinsurance_Negate_SourceData",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_FEED_Reinsurance_Negate_SourceData",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Get_Max_Sapiens_SourceSequenceNumber AS (\n\tSELECT\n\tSource_Seq_Num,\n\tID\n\tFROM (\n\t\tSELECT MAX(A.SourceSequenceNumber) AS Source_Seq_Num,\r\n\t\t\t1 AS ID\r\n\t\tFROM (\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaimRestate\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaimRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicyRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicyRestate\t) A\r\n\t\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY Source_Seq_Num DESC) = 1\n),\nSQ_claim_occurrence_dim AS (\n\t-- Retrieve all values since they might be useful for audit purposes\r\n\tselect distinct FINAL.SapiensClaimNumber, \r\n\t\tFINAL.prev_loss_date, FINAL.curr_loss_date, FINAL.prev_cat_code, FINAL.curr_cat_code, FINAL.prev_rel_claim_id, FINAL.curr_rel_claim_id, FINAL.prev_pol_key, FINAL.curr_pol_key,\r\n\t\t FINAL.Rank_value\r\n\tfrom (select RelevantChanges.SapiensClaimNumber, \r\n\t\t\tFIRST_VALUE(RelevantChanges.prev_loss_date) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as prev_loss_date,\r\n\t\t\tLAST_VALUE(RelevantChanges.curr_loss_date) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as curr_loss_date,\r\n\t\t\tFIRST_VALUE(RelevantChanges.prev_cat_code) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as prev_cat_code,\r\n\t\t\tLAST_VALUE(RelevantChanges.curr_cat_code) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as curr_cat_code,\r\n\t\t\tFIRST_VALUE(prev_rel_claim_id) over (partition by SapiensClaimNumber order by NegateDate) as prev_rel_claim_id,\r\n\t\t\tLAST_VALUE(curr_rel_claim_id) over (partition by SapiensClaimNumber order by NegateDate) as curr_rel_claim_id, \r\n\t\t\tFIRST_VALUE(RelevantChanges.prev_pol_key) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as prev_pol_key,\r\n\t\t\tLAST_VALUE(RelevantChanges.curr_pol_key) over (partition by SapiensClaimNumber order by RelevantChanges.NegateDate) as curr_pol_key,\r\n\t\t\tLAST_VALUE(RelevantChanges.NegateDate) over (partition by SapiensClaimNumber order by NegateDate) as NegateDate, \r\n\t\t\tROW_NUMBER() over (partition by RelevantChanges.SapiensClaimNumber order by RelevantChanges.NegateDate desc) as Rank_value\r\n\t\tfrom (select AllType2Changes.SapiensClaimNumber, \r\n\t\t\t\tAllType2Changes.prev_loss_date, AllType2Changes.curr_loss_date, AllType2Changes.prev_cat_code, AllType2Changes.curr_cat_code, case when ISNUMERIC(AllType2Changes.prev_rel_claim_id)=0 then 0 else AllType2Changes.prev_rel_claim_id end as prev_rel_claim_id,\r\n\t\t\t\tAllType2Changes.curr_rel_claim_id, AllType2Changes.prev_pol_key, AllType2Changes.curr_pol_key,AllType2Changes.NegateDate\r\n\t\t\tfrom\r\n\t\t\t(\r\n\t\t\t\tselect ROW_NUMBER() over (partition by cod.edw_claim_occurrence_ak_id order by cod.eff_from_date desc) as RowNum, \r\n\t\t\t\t\tcast(cod.eff_from_date as date) as NegateDate, \r\n\t\t\t\t\tCASE cod.claim_num when 'N/A' then SUBSTRING(cod.claim_occurrence_key, 1, 20) else cod.claim_num END as SapiensClaimNumber, \r\n\t\t\t\t\tlag(cast(cod.claim_loss_date as date)) over (partition by cod.edw_claim_occurrence_ak_id order by cod.eff_from_date) as prev_loss_date, \r\n\t\t\t\t\tcast(cod.claim_loss_date as date) as curr_loss_date,\r\n\t\t\t\t\tlag(cod.claim_cat_code) over (partition by cod.edw_claim_occurrence_ak_id order by cod.eff_from_date) as prev_cat_code, \r\n\t\t\t\t\tcod.claim_cat_code as curr_cat_code,\r\n\t\t\t\t\tlag (case when ISNUMERIC(cod.ClaimRelationshipKey)=0 then 0 else cod.ClaimRelationshipKey end) over (partition by cod.edw_claim_occurrence_ak_id order by cod.eff_from_date) as prev_rel_claim_id, \r\n\t\t\t\t\t(case when ISNUMERIC(cod.ClaimRelationshipKey)=0 then 0 else cod.ClaimRelationshipKey end) as curr_rel_claim_id,\r\n\t\t\t\t\tlag(co.pol_key) over (partition by cod.edw_claim_occurrence_ak_id order by cod.eff_from_date) as prev_pol_key,\r\n\t\t\t\t\tco.pol_key as curr_pol_key,\r\n\t\t\t\t\tcod.edw_claim_occurrence_ak_id, cod.eff_from_date, cod.eff_to_date, cod.modified_date, cod.created_date\r\n\t\t\t\tfrom dbo.claim_occurrence_dim cod\r\n\t\t\t\tjoin @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.claim_occurrence co on cod.edw_claim_occurrence_pk_id = co.claim_occurrence_id\r\n\t\t\t) AllType2Changes\r\n\t\t\twhere ((AllType2Changes.prev_loss_date <> AllType2Changes.curr_loss_date AND AllType2Changes.prev_loss_date IS NOT NULL)\r\n\t\t\t\tOR (AllType2Changes.prev_cat_code <> AllType2Changes.curr_cat_code AND AllType2Changes.prev_cat_code IS NOT NULL)\r\n\t\t\t\t--OR (AllType2Changes.prev_rel_claim_id <> AllType2Changes.curr_rel_claim_id AND AllType2Changes.prev_rel_claim_id IS NOT NULL)\r\n\t\t\t\tOR (case when AllType2Changes.prev_rel_claim_id is NULL OR ISNUMERIC(AllType2Changes.prev_rel_claim_id)=0 then 0 else AllType2Changes.prev_rel_claim_id end  <> AllType2Changes.curr_rel_claim_id)\r\n\t\t\t\tOR (AllType2Changes.prev_pol_key <> AllType2Changes.curr_pol_key AND AllType2Changes.prev_pol_key IS NOT NULL)\r\n\t\t\t\t)\r\n\t\t\tAND AllType2Changes.created_date > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t) RelevantChanges \r\n\t) FINAL\r\n\twhere FINAL.Rank_value = 1\r\n\t @{pipeline().parameters.WHERE} \r\n\torder by FINAL.SapiensClaimNumber\n),\nEXP_Collect AS (\n\tSELECT\n\tSapiensClaimNumber AS i_SapiensClaimNumber,\n\t-- *INF*: LTRIM(RTRIM(i_SapiensClaimNumber))\n\tLTRIM(RTRIM(i_SapiensClaimNumber)) AS o_SapiensClaimNumber,\n\tprev_loss_date,\n\tcurr_loss_date,\n\tprev_cat_code,\n\tcurr_cat_code,\n\tprev_rel_claim_id,\n\tcurr_rel_claim_id,\n\tprev_pol_key,\n\tcurr_pol_key\n\tFROM SQ_claim_occurrence_dim\n),\nSQ_SapiensClaimRestate_CSV AS (\n\n-- TODO Manual --\n\n),\nEXP_Collect_ManualRequests AS (\n\tSELECT\n\tSapiensClaimNumber AS i_SapiensClaimNumber,\n\t-- *INF*: LTRIM(RTRIM(i_SapiensClaimNumber))\n\tLTRIM(RTRIM(i_SapiensClaimNumber)) AS o_SapiensClaimNumber\n\tFROM SQ_SapiensClaimRestate_CSV\n),\nFIL_Ensure_Valid_SapiensClaimNumber_Format AS (\n\tSELECT\n\to_SapiensClaimNumber AS SapiensClaimNumber\n\tFROM EXP_Collect_ManualRequests\n\tWHERE LENGTH(SapiensClaimNumber)=7 or LENGTH(SapiensClaimNumber)=20\n),\nAGG_UniqueClaims AS (\n\tSELECT\n\tSapiensClaimNumber\n\tFROM FIL_Ensure_Valid_SapiensClaimNumber_Format\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SapiensClaimNumber ORDER BY NULL) = 1\n),\nLKP_Most_Recent_Policy_For_Claim AS (\n\tSELECT\n\tPOLICY_NO,\n\tCLAIM_ID\n\tFROM (\n\t\tSELECT a.MAX_SOURCE_SEQ_NUM AS SOURCE_SEQ_NUM,\r\n\t\t\tRTRIM(maxforclaim.POLICY_NO) AS POLICY_NO,\r\n\t\t\tRTRIM(a.CLAIM_ID) AS CLAIM_ID\r\n\t\tFROM (\r\n\t\t\tSELECT ac.CLAIM_ID,\r\n\t\t\t\tMAX(ac.SOURCE_SEQ_NUM) AS MAX_SOURCE_SEQ_NUM\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract ac WITH (NOLOCK)\r\n\t\t\tWHERE ac.DATA_SOURCE = 'SRL'\r\n\t\t\tAND ac.DOCUMENT_TYPE <> 'G'\r\n\t\t\tGROUP BY ac.CLAIM_ID\r\n\t\t\t) a\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract maxforclaim WITH (NOLOCK) ON a.MAX_SOURCE_SEQ_NUM = maxforclaim.SOURCE_SEQ_NUM\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CLAIM_ID ORDER BY POLICY_NO) = 1\n),\nLKP_claim_occurrence AS (\n\tSELECT\n\tpol_key,\n\tEDWSapiensClaimNumber\n\tFROM (\n\t\tselect co.pol_key as pol_key,\r\n\t\t\tSUBSTRING(co.claim_occurrence_key, 1, 20) as EDWSapiensClaimNumber\r\n\t\tfrom @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.claim_occurrence co with (nolock)\r\n\t\twhere co.crrnt_snpsht_flag = 1\r\n\t\tand co.source_sys_id = 'PMS'\r\n\t\tunion all \r\n\t\tselect co.pol_key as pol_key,\r\n\t\t\tRTRIM(co.s3p_claim_num) as EDWSapiensClaimNumber\r\n\t\tfrom @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.claim_occurrence co with (nolock)\r\n\t\twhere co.crrnt_snpsht_flag = 1\r\n\t\tand co.source_sys_id = 'EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWSapiensClaimNumber ORDER BY pol_key) = 1\n),\nEXP_ManualRestateRequest AS (\n\tSELECT\n\tLKP_Most_Recent_Policy_For_Claim.POLICY_NO,\n\tLKP_claim_occurrence.pol_key,\n\t-- *INF*: IIF(ISNULL(POLICY_NO) OR LENGTH(RTRIM(POLICY_NO))=0,\r\n\t-- pol_key,\r\n\t-- POLICY_NO)\n\tIFF(POLICY_NO IS NULL OR LENGTH(RTRIM(POLICY_NO)) = 0, pol_key, POLICY_NO) AS o_prev_pol_key,\n\tLKP_claim_occurrence.EDWSapiensClaimNumber AS SapiensClaimNumber,\n\t'' AS DefaultChar,\n\t0 AS DefaultNum\n\tFROM \n\tLEFT JOIN LKP_Most_Recent_Policy_For_Claim\n\tON LKP_Most_Recent_Policy_For_Claim.CLAIM_ID = AGG_UniqueClaims.SapiensClaimNumber\n\tLEFT JOIN LKP_claim_occurrence\n\tON LKP_claim_occurrence.EDWSapiensClaimNumber = AGG_UniqueClaims.SapiensClaimNumber\n),\nJNR_Automated_and_Manual_Restates AS (SELECT\n\tEXP_Collect.o_SapiensClaimNumber AS automated_SapiensClaimNumber, \n\tEXP_Collect.prev_loss_date AS automated_prev_loss_date, \n\tEXP_Collect.curr_loss_date AS automated_curr_loss_date, \n\tEXP_Collect.prev_cat_code AS automated_prev_cat_code, \n\tEXP_Collect.curr_cat_code AS automated_curr_cat_code, \n\tEXP_Collect.prev_rel_claim_id AS automated_prev_rel_claim_id, \n\tEXP_Collect.curr_rel_claim_id AS automated_curr_rel_claim_id, \n\tEXP_Collect.prev_pol_key AS automated_prev_pol_key, \n\tEXP_Collect.curr_pol_key AS automated_curr_pol_key, \n\tEXP_ManualRestateRequest.SapiensClaimNumber AS manual_SapiensClaimNumber, \n\tEXP_ManualRestateRequest.DefaultChar AS manual_prev_cat_code, \n\tEXP_ManualRestateRequest.DefaultChar AS manual_curr_cat_code, \n\tEXP_ManualRestateRequest.DefaultNum AS manual_prev_rel_claim_id, \n\tEXP_ManualRestateRequest.DefaultNum AS manual_curr_rel_claim_id, \n\tEXP_ManualRestateRequest.o_prev_pol_key AS manual_prev_pol_key\n\tFROM EXP_Collect\n\tFULL OUTER JOIN EXP_ManualRestateRequest\n\tON EXP_ManualRestateRequest.SapiensClaimNumber = EXP_Collect.o_SapiensClaimNumber\n),\nEXP_Combine_Automatic_And_Manual AS (\n\tSELECT\n\tautomated_SapiensClaimNumber,\n\tautomated_prev_loss_date,\n\tautomated_curr_loss_date,\n\tautomated_prev_cat_code,\n\tautomated_curr_cat_code,\n\tautomated_prev_rel_claim_id,\n\tautomated_curr_rel_claim_id,\n\tautomated_prev_pol_key,\n\tautomated_curr_pol_key,\n\tmanual_SapiensClaimNumber,\n\tmanual_prev_loss_date,\n\tmanual_curr_loss_date,\n\tmanual_prev_cat_code,\n\tmanual_curr_cat_code,\n\tmanual_prev_rel_claim_id,\n\tmanual_curr_rel_claim_id,\n\tmanual_prev_pol_key,\n\tmanual_curr_pol_key,\n\t-- *INF*: IIF(ISNULL(automated_SapiensClaimNumber),\r\n\t-- manual_SapiensClaimNumber,\r\n\t-- automated_SapiensClaimNumber)\n\tIFF(\n\t    automated_SapiensClaimNumber IS NULL, manual_SapiensClaimNumber,\n\t    automated_SapiensClaimNumber\n\t) AS o_SapiensClaimNumber,\n\t-- *INF*: IIF(ISNULL(automated_prev_loss_date),\r\n\t-- manual_prev_loss_date,\r\n\t-- automated_prev_loss_date)\n\tIFF(automated_prev_loss_date IS NULL, manual_prev_loss_date, automated_prev_loss_date) AS o_prev_loss_date,\n\t-- *INF*: IIF(ISNULL(automated_curr_loss_date),\r\n\t-- manual_curr_loss_date,\r\n\t-- automated_curr_loss_date)\n\tIFF(automated_curr_loss_date IS NULL, manual_curr_loss_date, automated_curr_loss_date) AS o_curr_loss_date,\n\t-- *INF*: IIF(ISNULL(automated_prev_cat_code),\r\n\t-- manual_prev_cat_code,\r\n\t-- automated_prev_cat_code)\n\tIFF(automated_prev_cat_code IS NULL, manual_prev_cat_code, automated_prev_cat_code) AS o_prev_cat_code,\n\t-- *INF*: IIF(ISNULL(automated_curr_cat_code),\r\n\t-- manual_curr_cat_code,\r\n\t-- automated_curr_cat_code)\n\tIFF(automated_curr_cat_code IS NULL, manual_curr_cat_code, automated_curr_cat_code) AS o_curr_cat_code,\n\t-- *INF*: IIF(ISNULL(automated_prev_rel_claim_id),\r\n\t-- manual_prev_rel_claim_id,\r\n\t-- automated_prev_rel_claim_id)\n\tIFF(\n\t    automated_prev_rel_claim_id IS NULL, manual_prev_rel_claim_id, automated_prev_rel_claim_id\n\t) AS o_prev_rel_claim_id,\n\t-- *INF*: IIF(ISNULL(automated_curr_rel_claim_id),\r\n\t-- manual_curr_rel_claim_id,\r\n\t-- automated_curr_rel_claim_id)\n\tIFF(\n\t    automated_curr_rel_claim_id IS NULL, manual_curr_rel_claim_id, automated_curr_rel_claim_id\n\t) AS o_curr_rel_claim_id,\n\t-- *INF*: IIF(ISNULL(automated_prev_pol_key),\r\n\t-- manual_prev_pol_key,\r\n\t-- automated_prev_pol_key)\n\tIFF(automated_prev_pol_key IS NULL, manual_prev_pol_key, automated_prev_pol_key) AS o_prev_pol_key,\n\t-- *INF*: IIF(ISNULL(automated_curr_pol_key),\r\n\t-- manual_curr_pol_key,\r\n\t-- automated_curr_pol_key)\n\tIFF(automated_curr_pol_key IS NULL, manual_curr_pol_key, automated_curr_pol_key) AS o_curr_pol_key\n\tFROM JNR_Automated_and_Manual_Restates\n),\nLKP_SapiensReinsuranceClaimRestate_Exists AS (\n\tSELECT\n\tSapiensReinsuranceClaimRestateId,\n\tClaimNumber\n\tFROM (\n\t\tSELECT \n\t\t\tSapiensReinsuranceClaimRestateId,\n\t\t\tClaimNumber\n\t\tFROM SapiensReinsuranceClaimRestate\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimNumber ORDER BY SapiensReinsuranceClaimRestateId) = 1\n),\nFIL_Claim_Not_In_SapiensReinsuranceClaimRestate AS (\n\tSELECT\n\tEXP_Combine_Automatic_And_Manual.o_SapiensClaimNumber AS claim_num, \n\tEXP_Combine_Automatic_And_Manual.o_prev_loss_date AS prev_loss_date, \n\tEXP_Combine_Automatic_And_Manual.o_curr_loss_date AS curr_loss_date, \n\tEXP_Combine_Automatic_And_Manual.o_prev_cat_code AS prev_cat_code, \n\tEXP_Combine_Automatic_And_Manual.o_curr_cat_code AS curr_cat_code, \n\tEXP_Combine_Automatic_And_Manual.o_prev_rel_claim_id AS prev_rel_claim_id, \n\tEXP_Combine_Automatic_And_Manual.o_curr_rel_claim_id AS curr_rel_claim_id, \n\tEXP_Combine_Automatic_And_Manual.o_prev_pol_key AS prev_pol_key, \n\tEXP_Combine_Automatic_And_Manual.o_curr_pol_key AS curr_pol_key, \n\tLKP_SapiensReinsuranceClaimRestate_Exists.SapiensReinsuranceClaimRestateId\n\tFROM EXP_Combine_Automatic_And_Manual\n\tLEFT JOIN LKP_SapiensReinsuranceClaimRestate_Exists\n\tON LKP_SapiensReinsuranceClaimRestate_Exists.ClaimNumber = EXP_Combine_Automatic_And_Manual.o_SapiensClaimNumber\n\tWHERE ISNULL(SapiensReinsuranceClaimRestateId)\n),\nLKP_Most_Recent_DocType_For_Claim AS (\n\tSELECT\n\tDOCUMENT_TYPE,\n\tCLAIM_ID\n\tFROM (\n\t\tselect a.MAX_SOURCE_SEQ_NUM as SOURCE_SEQ_NUM,\r\n\t\t\tmaxforclaim.DOCUMENT_TYPE as DOCUMENT_TYPE,\r\n\t\t\tRTRIM(a.CLAIM_ID) as CLAIM_ID \r\n\t\tfrom (select ac.CLAIM_ID, \r\n\t\t\t\tMAX(ac.SOURCE_SEQ_NUM) as MAX_SOURCE_SEQ_NUM\r\n\t\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract ac with (nolock)\r\n\t\t\twhere ac.DATA_SOURCE = 'SRL'\r\n\t\t\tgroup by ac.CLAIM_ID) a\r\n\t\tjoin @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract maxforclaim with (nolock) \r\n\t\t\ton a.MAX_SOURCE_SEQ_NUM = maxforclaim.SOURCE_SEQ_NUM\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CLAIM_ID ORDER BY DOCUMENT_TYPE) = 1\n),\nEXP_Set_SSN_NegateFlag AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tSYSDATE AS o_CurrentTimestamp,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1)),\r\n\t--  0,\r\n\t--  :LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1))\n\tIFF(\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num IS NULL, 0,\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num\n\t) AS v_lkp_Source_Seq_Num,\n\tv_count + 1 AS v_count,\n\tv_lkp_Source_Seq_Num + v_count AS o_Source_Seq_Num,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.claim_num AS SapiensClaimNumber,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.prev_loss_date,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.curr_loss_date,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.prev_cat_code,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.curr_cat_code,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.prev_rel_claim_id,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.curr_rel_claim_id,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.prev_pol_key,\n\tFIL_Claim_Not_In_SapiensReinsuranceClaimRestate.curr_pol_key,\n\t@{pipeline().parameters.SELECTION_START_TS} AS NegateDate,\n\tLKP_Most_Recent_DocType_For_Claim.DOCUMENT_TYPE AS i_DOCUMENT_TYPE,\n\t-- *INF*: IIF(ISNULL(i_DOCUMENT_TYPE),'0',\r\n\t--     IIF(i_DOCUMENT_TYPE='G',\r\n\t-- '0',\r\n\t-- '1')\r\n\t-- )\n\tIFF(i_DOCUMENT_TYPE IS NULL, '0', IFF(\n\t        i_DOCUMENT_TYPE = 'G', '0', '1'\n\t    )) AS NegateFlag\n\tFROM FIL_Claim_Not_In_SapiensReinsuranceClaimRestate\n\tLEFT JOIN LKP_Most_Recent_DocType_For_Claim\n\tON LKP_Most_Recent_DocType_For_Claim.CLAIM_ID = FIL_Claim_Not_In_SapiensReinsuranceClaimRestate.claim_num\n\tLEFT JOIN LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1\n\tON LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.ID = 1\n\n),\nSapiensReinsuranceClaimRestate AS (\n\tINSERT INTO SapiensReinsuranceClaimRestate\n\t(AuditId, CreatedDate, ModifiedDate, ClaimNumber, PreviousLossDate, CurrentLossDate, PreviousCatastropheCode, CurrentCatastropheCode, NegateDate, SourceSequenceNumber, TransactionNumber, PreviousClaimRelationshipId, CurrentClaimRelationshipId, PreviousPolicyKey, CurrentPolicyKey, NegateFlag)\n\tSELECT \n\to_AuditId AS AUDITID, \n\to_CurrentTimestamp AS CREATEDDATE, \n\to_CurrentTimestamp AS MODIFIEDDATE, \n\tSapiensClaimNumber AS CLAIMNUMBER, \n\tprev_loss_date AS PREVIOUSLOSSDATE, \n\tcurr_loss_date AS CURRENTLOSSDATE, \n\tprev_cat_code AS PREVIOUSCATASTROPHECODE, \n\tcurr_cat_code AS CURRENTCATASTROPHECODE, \n\tNEGATEDATE, \n\to_Source_Seq_Num AS SOURCESEQUENCENUMBER, \n\to_Source_Seq_Num AS TRANSACTIONNUMBER, \n\tprev_rel_claim_id AS PREVIOUSCLAIMRELATIONSHIPID, \n\tcurr_rel_claim_id AS CURRENTCLAIMRELATIONSHIPID, \n\tprev_pol_key AS PREVIOUSPOLICYKEY, \n\tcurr_pol_key AS CURRENTPOLICYKEY, \n\tNEGATEFLAG\n\tFROM EXP_Set_SSN_NegateFlag\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LKP_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LKP_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}