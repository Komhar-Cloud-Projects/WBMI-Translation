{
    "name": "s_m_Do_EARS_RejectFlatFile_Tokenization",
    "properties": {
        "activities": [
            {
                "name": "m_Do_EARS_RejectFlatFile_Tokenization",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_EARS_RejectFile_FF AS (\n\n-- TODO Manual --\n\n),\nEXP_Fields AS (\n\tSELECT\n\tEARSData,\n\t-- *INF*: SUBSTR(EARSData, 1, 2)\n\tSUBSTR(EARSData, 1, 2) AS State,\n\t-- *INF*: SUBSTR(EARSData, 3, 22)\n\tSUBSTR(EARSData, 3, 22) AS LicenseNumber,\n\t-- *INF*: SUBSTR(EARSData, 25, 188)\n\tSUBSTR(EARSData, 25, 188) AS InBetween,\n\t-- *INF*: SUBSTR(EARSData, 213, 22)\n\tSUBSTR(EARSData, 213, 22) AS Quoteback,\n\t-- *INF*: SUBSTR(EARSData, 235, 71)\n\tSUBSTR(EARSData, 235, 71) AS Remaining,\n\t-- *INF*: LTRIM(RTRIM(SUBSTR(EARSData, 3, 22)))\n\tLTRIM(RTRIM(SUBSTR(EARSData, 3, 22))) AS v_LicenseNumber,\n\t-- *INF*: LENGTH(v_LicenseNumber)\n\tLENGTH(v_LicenseNumber) AS v_LicenseNumber_LEN1,\n\t-- *INF*: LTRIM(v_LicenseNumber,'0')\n\tLTRIM(v_LicenseNumber, '0') AS v_LicenseNumber_Remove0,\n\t-- *INF*: LENGTH(v_LicenseNumber_Remove0)\n\tLENGTH(v_LicenseNumber_Remove0) AS v_LicenseNumber_LEN2,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_LicenseNumber_LEN2<8,v_LicenseNumber_LEN1-8,\r\n\t-- v_LicenseNumber_LEN1-v_LicenseNumber_LEN2\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_LicenseNumber_LEN2 < 8, v_LicenseNumber_LEN1 - 8,\n\t    v_LicenseNumber_LEN1 - v_LicenseNumber_LEN2\n\t) AS v_LicenseNumber_LEN_Diff,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_LicenseNumber_LEN_Diff>0,SUBSTR(v_LicenseNumber,1,v_LicenseNumber_LEN_Diff),\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    v_LicenseNumber_LEN_Diff > 0, SUBSTR(v_LicenseNumber, 1, v_LicenseNumber_LEN_Diff),\n\t    ''\n\t) AS v_SubString_LicenseNumber,\n\t-- *INF*: LTRIM(RTRIM(SUBSTR(EARSData, 213, 22)))\n\tLTRIM(RTRIM(SUBSTR(EARSData, 213, 22))) AS v_Quoteback,\n\t-- *INF*: LENGTH(v_Quoteback)\n\tLENGTH(v_Quoteback) AS v_Quoteback_LEN1,\n\t-- *INF*: LTRIM(v_Quoteback,'0')\n\tLTRIM(v_Quoteback, '0') AS v_Quoteback_Remove0,\n\t-- *INF*: LENGTH(v_Quoteback_Remove0)\n\tLENGTH(v_Quoteback_Remove0) AS v_Quoteback_LEN2,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_Quoteback_LEN2<8,v_Quoteback_LEN1-8,\r\n\t-- v_Quoteback_LEN1-v_Quoteback_LEN2\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    v_Quoteback_LEN2 < 8, v_Quoteback_LEN1 - 8,\n\t    v_Quoteback_LEN1 - v_Quoteback_LEN2\n\t) AS v_Quoteback_LEN_Diff,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_Quoteback_LEN_Diff>0,SUBSTR(v_Quoteback,1,v_Quoteback_LEN_Diff),\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    v_Quoteback_LEN_Diff > 0, SUBSTR(v_Quoteback, 1, v_Quoteback_LEN_Diff),\n\t    ''\n\t) AS v_SubString_Quoteback,\n\t-- *INF*: IIF(LENGTH(v_LicenseNumber) < 8, UPPER(LPAD(v_LicenseNumber, 8, '@')), UPPER(v_LicenseNumber))\r\n\t-- \r\n\t-- --IIF(LENGTH(LTRIM(RTRIM(v_LicenseNumber_Remove0))) < 8, LPAD(LTRIM(RTRIM(v_LicenseNumber_Remove0)), 8, '@'), LTRIM(RTRIM(v_LicenseNumber_Remove0)))\n\tIFF(\n\t    LENGTH(v_LicenseNumber) < 8, UPPER(LPAD(v_LicenseNumber, 8, '@')), UPPER(v_LicenseNumber)\n\t) AS lkp_LicenseNumber,\n\t-- *INF*: IIF(LENGTH(v_Quoteback) < 8, UPPER(LPAD(v_Quoteback, 8, '@')), UPPER(v_Quoteback))\r\n\t-- \r\n\t-- --IIF(LENGTH(LTRIM(RTRIM(v_Quoteback_Remove0))) < 8, LPAD(LTRIM(RTRIM(v_Quoteback_Remove0)), 8, '@'), LTRIM(RTRIM(v_Quoteback_Remove0)))\r\n\t-- \r\n\t-- \n\tIFF(LENGTH(v_Quoteback) < 8, UPPER(LPAD(v_Quoteback, 8, '@')), UPPER(v_Quoteback)) AS lkp_Quoteback,\n\tv_SubString_LicenseNumber AS o_SubString_LicenseNumber,\n\tv_SubString_Quoteback AS o_SubString_Quoteback\n\tFROM SQ_EARS_RejectFile_FF\n),\nLKP_TokenExFile_DriverStage AS (\n),\nLKP_TokenExFile_DriverStage_Quoteback AS (\n),\nEXP_TokenFields AS (\n\tSELECT\n\tEXP_Fields.State,\n\tEXP_Fields.LicenseNumber AS i_LicenseNumber,\n\tEXP_Fields.InBetween,\n\tEXP_Fields.Quoteback AS i_Quoteback,\n\tEXP_Fields.Remaining,\n\tLKP_TokenExFile_DriverStage.o_LicenseNumber AS lkp_LicenseNumber,\n\tLKP_TokenExFile_DriverStage_Quoteback.o_Quoteback AS lkp_Quoteback,\n\t-- *INF*: LTRIM(RTRIM(lkp_LicenseNumber))\n\tLTRIM(RTRIM(lkp_LicenseNumber)) AS v_lkp_LicenseNumber,\n\t-- *INF*: LTRIM(RTRIM(lkp_Quoteback))\n\tLTRIM(RTRIM(lkp_Quoteback)) AS v_lkp_Quoteback,\n\t-- *INF*: IIF(ISNULL(lkp_LicenseNumber),RPAD(LTRIM( i_LicenseNumber, '@'),22,' '), RPAD(LTRIM(RTRIM(v_lkp_LicenseNumber)),22, ' '))\n\tIFF(\n\t    lkp_LicenseNumber IS NULL, RPAD(LTRIM(i_LicenseNumber, '@'), 22, ' '),\n\t    RPAD(LTRIM(RTRIM(v_lkp_LicenseNumber)), 22, ' ')\n\t) AS v_LicenseNumber,\n\t-- *INF*: IIF(ISNULL(lkp_Quoteback),RPAD(LTRIM(i_Quoteback, '@'),22,' '), RPAD(LTRIM(RTRIM(v_lkp_Quoteback)),22, ' '))\n\tIFF(\n\t    lkp_Quoteback IS NULL, RPAD(LTRIM(i_Quoteback, '@'), 22, ' '),\n\t    RPAD(LTRIM(RTRIM(v_lkp_Quoteback)), 22, ' ')\n\t) AS v_Quoteback,\n\tv_LicenseNumber AS o_LicenseNumber,\n\tv_Quoteback AS o_Quoteback\n\tFROM EXP_Fields\n\tLEFT JOIN LKP_TokenExFile_DriverStage\n\tON LKP_TokenExFile_DriverStage.lkp_LicenseNumber = EXP_Fields.lkp_LicenseNumber\n\tLEFT JOIN LKP_TokenExFile_DriverStage_Quoteback\n\tON LKP_TokenExFile_DriverStage_Quoteback.lkp_Quoteback = EXP_Fields.lkp_Quoteback\n),\nEXP_Token_DL_Rows AS (\n\tSELECT\n\tState AS i_State,\n\ti_LicenseNumber,\n\tInBetween AS i_InBetween,\n\ti_Quoteback,\n\tRemaining AS i_Remaining,\n\to_LicenseNumber AS TokenLicenseNumber,\n\to_Quoteback AS TokenQuoteback,\n\t-- *INF*: DECODE(TRUE, i_State = 'FH', LTRIM(i_LicenseNumber, '@'),\r\n\t-- i_State = 'FT', LTRIM(i_LicenseNumber, '@'),\r\n\t-- TokenLicenseNumber)\n\tDECODE(\n\t    TRUE,\n\t    i_State = 'FH', LTRIM(i_LicenseNumber, '@'),\n\t    i_State = 'FT', LTRIM(i_LicenseNumber, '@'),\n\t    TokenLicenseNumber\n\t) AS v_LicenseNumber,\n\t-- *INF*: DECODE(TRUE, i_State = 'FH', LTRIM(i_Quoteback, '@'),\r\n\t-- i_State = 'FT', LTRIM(i_Quoteback, '@'),\r\n\t-- TokenQuoteback)\n\tDECODE(\n\t    TRUE,\n\t    i_State = 'FH', LTRIM(i_Quoteback, '@'),\n\t    i_State = 'FT', LTRIM(i_Quoteback, '@'),\n\t    TokenQuoteback\n\t) AS v_Quoteback,\n\ti_State || v_LicenseNumber || i_InBetween || v_Quoteback || i_Remaining AS v_EARSData,\n\tv_EARSData AS o_EARSData\n\tFROM EXP_TokenFields\n),\nEARS_RejectFile_FF AS (\n\tINSERT INTO EARS_RejectFile_FF\n\t(EARSData)\n\tSELECT \n\to_EARSData AS EARSDATA\n\tFROM EXP_Token_DL_Rows\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}