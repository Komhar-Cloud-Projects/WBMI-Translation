{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCBPCoverageEarthQuakeStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCBPCoverageEarthQuakeStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_BP_CoverageEarthquake AS (\n\tWITH cte_DCBPCoverageEarthquake(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CoverageId, \r\n\tX.BP_CoverageEarthquakeId, \r\n\tX.SessionId, \r\n\tX.Additional, \r\n\tX.ARateAdditionalPremium, \r\n\tX.BlanketBuildingPremium, \r\n\tX.BlanketPersonalPropertyPremium, \r\n\tX.BuildingClass, \r\n\tX.ContentsGrade, \r\n\tX.Earthquake, \r\n\tX.EQMasonry, \r\n\tX.Limited, \r\n\tX.RoofTank, \r\n\tX.SubLimitBPPPremium, \r\n\tX.SubLimitPremium, \r\n\tX.SusceptibilityGrade, \r\n\tX.Territory, \r\n\tX.Zone \r\n\tFROM\r\n\t DC_BP_CoverageEarthquake X\r\n\tinner join\r\n\tcte_DCBPCoverageEarthquake Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tCoverageId,\n\tBP_CoverageEarthquakeId,\n\tSessionId,\n\tAdditional,\n\tARateAdditionalPremium,\n\tBlanketBuildingPremium,\n\tBlanketPersonalPropertyPremium,\n\tBuildingClass,\n\tContentsGrade,\n\tEarthquake,\n\tEQMasonry AS i_EQMasonry,\n\t-- *INF*: IIF(i_EQMasonry='T','1','0')\n\tIFF(i_EQMasonry = 'T', '1', '0') AS o_EQMasonry1,\n\tLimited AS i_Limited,\n\t-- *INF*: IIF(i_Limited='T','1','0')\n\tIFF(i_Limited = 'T', '1', '0') AS o_Limited,\n\tRoofTank AS i_RoofTank,\n\t-- *INF*: IIF(i_RoofTank='T','1','0')\n\tIFF(i_RoofTank = 'T', '1', '0') AS o_RoofTank,\n\tSubLimitBPPPremium,\n\tSubLimitPremium,\n\tSusceptibilityGrade,\n\tTerritory,\n\tZone\n\tFROM SQ_DC_BP_CoverageEarthquake\n),\nDCBPCoverageEarthQuakeStage AS (\n\tTRUNCATE TABLE DCBPCoverageEarthQuakeStage;\n\tINSERT INTO DCBPCoverageEarthQuakeStage\n\t(ExtractDate, SourceSystemId, CoverageId, BP_CoverageEarthquakeId, SessionId, Additional, ARateAdditionalPremium, BlanketBuildingPremium, BlanketPersonalPropertyPremium, BuildingClass, ContentsGrade, Earthquake, EQMasonry, Limited, RoofTank, SubLimitBPPPremium, SubLimitPremium, SusceptibilityGrade, Territory, Zone)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCOVERAGEID, \n\tBP_COVERAGEEARTHQUAKEID, \n\tSESSIONID, \n\tADDITIONAL, \n\tARATEADDITIONALPREMIUM, \n\tBLANKETBUILDINGPREMIUM, \n\tBLANKETPERSONALPROPERTYPREMIUM, \n\tBUILDINGCLASS, \n\tCONTENTSGRADE, \n\tEARTHQUAKE, \n\to_EQMasonry1 AS EQMASONRY, \n\to_Limited AS LIMITED, \n\to_RoofTank AS ROOFTANK, \n\tSUBLIMITBPPPREMIUM, \n\tSUBLIMITPREMIUM, \n\tSUSCEPTIBILITYGRADE, \n\tTERRITORY, \n\tZONE\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}