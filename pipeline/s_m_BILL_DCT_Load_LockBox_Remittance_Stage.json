{
    "name": "s_m_BILL_DCT_Load_LockBox_Remittance_Stage",
    "properties": {
        "activities": [
            {
                "name": "m_BILL_DCT_Load_LockBox_Remittance_Stage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_LockBoxHeaderFile AS (\n\n-- TODO Manual --\n\n),\nfil_Process_Header_Record_Type AS (\n\tSELECT\n\tRecord_Type, \n\tHeader_filler AS Hearder_Filler, \n\tHeader_Process_Date, \n\tHeader_filler1 AS Header_Filler1, \n\tHeader_File_Description\n\tFROM SQ_LockBoxHeaderFile\n\tWHERE Record_Type = 'H'\n),\nexp_Header_Prep_4_Join AS (\n\tSELECT\n\tRecord_Type,\n\tHearder_Filler,\n\tHeader_Process_Date,\n\tHeader_Filler1,\n\tHeader_File_Description,\n\t'1' AS hdr_join_condition\n\tFROM fil_Process_Header_Record_Type\n),\nSQ_LockBoxFile AS (\n\n-- TODO Manual --\n\n),\nexp_Lockbox AS (\n\tSELECT\n\tRecord_Type,\n\tBatch_number,\n\tBatch_Seq,\n\tFile_ID,\n\tFiller_1,\n\tAccount_Number,\n\tFiller_2,\n\tFull_Pay_Amt,\n\tMin_Pay_Amt,\n\tFile_Filler,\n\tAmount_Paid,\n\t'1' AS detail_join_condition\n\tFROM SQ_LockBoxFile\n),\nfil_Process_Detail_S_M_Types AS (\n\tSELECT\n\tRecord_Type, \n\tBatch_number, \n\tBatch_Seq, \n\tFile_ID, \n\tFiller_1, \n\tAccount_Number, \n\tFiller_2, \n\tFull_Pay_Amt, \n\tMin_Pay_Amt, \n\tFile_Filler, \n\tAmount_Paid, \n\tdetail_join_condition\n\tFROM exp_Lockbox\n\tWHERE Record_Type = 'S'  OR  Record_Type = 'M'\n),\njnr_Join_HeaderDate_2_DetailData AS (SELECT\n\tfil_Process_Detail_S_M_Types.Record_Type, \n\tfil_Process_Detail_S_M_Types.Batch_number, \n\tfil_Process_Detail_S_M_Types.Batch_Seq, \n\tfil_Process_Detail_S_M_Types.File_ID, \n\tfil_Process_Detail_S_M_Types.Filler_1, \n\tfil_Process_Detail_S_M_Types.Account_Number, \n\tfil_Process_Detail_S_M_Types.Filler_2, \n\tfil_Process_Detail_S_M_Types.Full_Pay_Amt, \n\tfil_Process_Detail_S_M_Types.Min_Pay_Amt, \n\tfil_Process_Detail_S_M_Types.File_Filler, \n\tfil_Process_Detail_S_M_Types.Amount_Paid, \n\tfil_Process_Detail_S_M_Types.detail_join_condition, \n\texp_Header_Prep_4_Join.Record_Type AS Record_Type1, \n\texp_Header_Prep_4_Join.Header_Process_Date, \n\texp_Header_Prep_4_Join.Header_File_Description, \n\texp_Header_Prep_4_Join.hdr_join_condition\n\tFROM fil_Process_Detail_S_M_Types\n\tINNER JOIN exp_Header_Prep_4_Join\n\tON exp_Header_Prep_4_Join.hdr_join_condition = fil_Process_Detail_S_M_Types.detail_join_condition\n),\nexp_Prepare_Data_4_Stage_Load AS (\n\tSELECT\n\tRecord_Type,\n\tBatch_number,\n\tBatch_Seq,\n\tFile_ID,\n\tFiller_1,\n\tAccount_Number,\n\tFiller_2,\n\tFull_Pay_Amt,\n\tMin_Pay_Amt,\n\tFile_Filler,\n\tAmount_Paid,\n\tHeader_Process_Date AS Header_Process_Date1,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP() AS out_ModifyDate,\n\t'L' AS out_RemittanceSource,\n\t'N' AS out_ProcessStatus,\n\tBatch_number || Batch_Seq  ||  Header_Process_Date1 AS out_TransactionID,\n\t'Payment' AS out_Transaction_Type,\n\t'InformS' AS out_ModifiedUserID,\n\t'LockBox' AS out_AuthorizeBy,\n\tRecord_Type  ||  Batch_number  ||  Batch_Seq  ||  File_ID  || Account_Number  ||  Full_Pay_Amt  ||  Min_Pay_Amt  ||  Amount_Paid  ||  Header_Process_Date1 AS out_TransactionData,\n\t'LCK' AS out_PaymentMode,\n\t-- *INF*: (TO_DECIMAL(Full_Pay_Amt)  *  .01)\n\t(CAST(Full_Pay_Amt AS FLOAT) * .01) AS out_Full_Pay_Amt,\n\t-- *INF*: (TO_DECIMAL(Amount_Paid)  *  .01)\n\t(CAST(Amount_Paid AS FLOAT) * .01) AS out_Amount_Paid,\n\t-- *INF*: (TO_DECIMAL(Min_Pay_Amt) * .01)\n\t(CAST(Min_Pay_Amt AS FLOAT) * .01) AS out_Min_Pay_Amt,\n\t-- *INF*: TO_DATE(Header_Process_Date1,'MMDDYY')\r\n\t-- \r\n\t--  --TO_CHAR(Header_Process_Date,'DD-MM-YYYY');\n\tTO_TIMESTAMP(Header_Process_Date1, 'MMDDYY') AS o_Header_process_date,\n\t-- *INF*: SUBSTR(Account_Number,1,1)\n\tSUBSTR(Account_Number, 1, 1) AS v_CC_1,\n\t-- *INF*: DECODE(true,v_CC_1 ='9',\r\n\t-- SUBSTR(Account_Number,3,7),\r\n\t-- ' ' \r\n\t-- )\n\tDECODE(\n\t    true,\n\t    v_CC_1 = '9', SUBSTR(Account_Number, 3, 7),\n\t    ' '\n\t) AS v_CC_2_7,\n\t-- *INF*: DECODE(true,SUBSTR(Account_Number,10,1) = '4',\r\n\t--    'D',\r\n\t-- SUBSTR(Account_Number,10,1)= '8',\r\n\t--    'H',\r\n\t-- ' ')\n\tDECODE(\n\t    true,\n\t    SUBSTR(Account_Number, 10, 1) = '4', 'D',\n\t    SUBSTR(Account_Number, 10, 1) = '8', 'H',\n\t    ' '\n\t) AS v_CC_8,\n\t-- *INF*: SUBSTR(Account_Number,11,2)\n\tSUBSTR(Account_Number, 11, 2) AS v_CC_9_10,\n\t-- *INF*: DECODE(true,v_CC_1 ='9',\r\n\t-- SUBSTR(Account_Number,2,2),\r\n\t-- SUBSTR(Account_Number,2,2))\n\tDECODE(\n\t    true,\n\t    v_CC_1 = '9', SUBSTR(Account_Number, 2, 2),\n\t    SUBSTR(Account_Number, 2, 2)\n\t) AS v_CC_1_2,\n\t-- *INF*: DECODE(true,v_CC_1_2 = '01','A',\r\n\t-- v_CC_1_2 = '01','A',\r\n\t-- v_CC_1_2 = '02','B',\r\n\t-- v_CC_1_2 = '03','C',\r\n\t-- v_CC_1_2 = '04','D',\r\n\t-- v_CC_1_2 = '05','E',\r\n\t-- v_CC_1_2 = '06','F',\r\n\t-- v_CC_1_2 = '07','G',\r\n\t-- v_CC_1_2 = '08','H',\r\n\t-- v_CC_1_2 = '09','I',\r\n\t-- v_CC_1_2 = '10','J',\r\n\t-- v_CC_1_2 = '11','K',\r\n\t-- v_CC_1_2 = '12','L',\r\n\t-- v_CC_1_2 = '13','M',\r\n\t-- v_CC_1_2 = '14','N',\r\n\t-- v_CC_1_2 = '15','O',\r\n\t-- v_CC_1_2 = '16','P',\r\n\t-- v_CC_1_2 = '17','Q',\r\n\t-- v_CC_1_2 = '18','R',\r\n\t-- v_CC_1_2 = '19','S',\r\n\t-- v_CC_1_2 = '20','T',\r\n\t-- v_CC_1_2 = '21','U',\r\n\t-- v_CC_1_2 = '22','V',\r\n\t-- v_CC_1_2 = '23','W',\r\n\t-- v_CC_1_2 = '24','X',\r\n\t-- v_CC_1_2 = '25','Y',\r\n\t-- v_CC_1_2 = '26','Z',\r\n\t-- ' ')  \r\n\t-- \n\tDECODE(\n\t    true,\n\t    v_CC_1_2 = '01', 'A',\n\t    v_CC_1_2 = '01', 'A',\n\t    v_CC_1_2 = '02', 'B',\n\t    v_CC_1_2 = '03', 'C',\n\t    v_CC_1_2 = '04', 'D',\n\t    v_CC_1_2 = '05', 'E',\n\t    v_CC_1_2 = '06', 'F',\n\t    v_CC_1_2 = '07', 'G',\n\t    v_CC_1_2 = '08', 'H',\n\t    v_CC_1_2 = '09', 'I',\n\t    v_CC_1_2 = '10', 'J',\n\t    v_CC_1_2 = '11', 'K',\n\t    v_CC_1_2 = '12', 'L',\n\t    v_CC_1_2 = '13', 'M',\n\t    v_CC_1_2 = '14', 'N',\n\t    v_CC_1_2 = '15', 'O',\n\t    v_CC_1_2 = '16', 'P',\n\t    v_CC_1_2 = '17', 'Q',\n\t    v_CC_1_2 = '18', 'R',\n\t    v_CC_1_2 = '19', 'S',\n\t    v_CC_1_2 = '20', 'T',\n\t    v_CC_1_2 = '21', 'U',\n\t    v_CC_1_2 = '22', 'V',\n\t    v_CC_1_2 = '23', 'W',\n\t    v_CC_1_2 = '24', 'X',\n\t    v_CC_1_2 = '25', 'Y',\n\t    v_CC_1_2 = '26', 'Z',\n\t    ' '\n\t) AS out_Conv_CC_1,\n\t-- *INF*: DECODE(true,v_CC_1 ='9',\r\n\t-- (out_Conv_CC_1 || v_CC_2_7 ||  ' ' || v_CC_8 || v_CC_9_10),\r\n\t-- SUBSTR(Account_Number,1,12) \r\n\t-- \r\n\t-- )\n\tDECODE(\n\t    true,\n\t    v_CC_1 = '9', (out_Conv_CC_1 || v_CC_2_7 || ' ' || v_CC_8 || v_CC_9_10),\n\t    SUBSTR(Account_Number, 1, 12)\n\t) AS v_Conv_acct_num,\n\t-- *INF*: DECODE(true,\r\n\t-- v_CC_1 <> '9',SUBSTR(Account_Number,1,12),\r\n\t-- null)\n\tDECODE(\n\t    true,\n\t    v_CC_1 <> '9', SUBSTR(Account_Number, 1, 12),\n\t    null\n\t) AS out_account,\n\t-- *INF*: DECODE(true,\r\n\t-- v_CC_1 ='9',v_Conv_acct_num,\r\n\t-- null) \n\tDECODE(\n\t    true,\n\t    v_CC_1 = '9', v_Conv_acct_num,\n\t    null\n\t) AS out_Policy_number\n\tFROM jnr_Join_HeaderDate_2_DetailData\n),\nLKP_WB_Bill_Remittance_stage AS (\n\tSELECT\n\tTransactionId,\n\tIn_TransactionId,\n\tIN_RemittanceSource,\n\tRemittanceSource\n\tFROM (\n\t\tSELECT \n\t\t\tTransactionId,\n\t\t\tIn_TransactionId,\n\t\t\tIN_RemittanceSource,\n\t\t\tRemittanceSource\n\t\tFROM WB_BIL_RemittanceStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TransactionId,RemittanceSource ORDER BY TransactionId) = 1\n),\nfil_Load_Ready_2_Stage_Data AS (\n\tSELECT\n\tLKP_WB_Bill_Remittance_stage.TransactionId AS Transaction_Id_Lookup, \n\tLKP_WB_Bill_Remittance_stage.In_TransactionId AS IN_TransactionId, \n\texp_Prepare_Data_4_Stage_Load.Account_Number, \n\texp_Prepare_Data_4_Stage_Load.out_ModifyDate, \n\texp_Prepare_Data_4_Stage_Load.out_RemittanceSource, \n\texp_Prepare_Data_4_Stage_Load.out_ProcessStatus, \n\texp_Prepare_Data_4_Stage_Load.out_TransactionID, \n\texp_Prepare_Data_4_Stage_Load.out_ModifiedUserID, \n\texp_Prepare_Data_4_Stage_Load.out_Transaction_Type, \n\texp_Prepare_Data_4_Stage_Load.o_Header_process_date AS out_DateInitiated, \n\texp_Prepare_Data_4_Stage_Load.out_ModifyDate AS out_EffectiveDate, \n\texp_Prepare_Data_4_Stage_Load.out_account, \n\texp_Prepare_Data_4_Stage_Load.out_AuthorizeBy, \n\texp_Prepare_Data_4_Stage_Load.out_TransactionData, \n\texp_Prepare_Data_4_Stage_Load.out_PaymentMode, \n\texp_Prepare_Data_4_Stage_Load.out_Full_Pay_Amt, \n\texp_Prepare_Data_4_Stage_Load.out_Amount_Paid, \n\texp_Prepare_Data_4_Stage_Load.out_Min_Pay_Amt, \n\texp_Prepare_Data_4_Stage_Load.out_Policy_number AS out_policy_number\n\tFROM exp_Prepare_Data_4_Stage_Load\n\tLEFT JOIN LKP_WB_Bill_Remittance_stage\n\tON LKP_WB_Bill_Remittance_stage.TransactionId = exp_Prepare_Data_4_Stage_Load.out_TransactionID AND LKP_WB_Bill_Remittance_stage.RemittanceSource = exp_Prepare_Data_4_Stage_Load.out_RemittanceSource\n\tWHERE ISNULL(Transaction_Id_Lookup)\n),\nWB_BIL_RemittanceStage AS (\n\tINSERT INTO WB_BIL_RemittanceStage\n\t(ModifiedUserId, ModifiedDate, TransactionId, TransactionType, TransactionData, RemittanceSource, ProcessedStatusCode, ReconciliationDate, VendorAccountNumber, EffectiveDate, DateInitiated, BillAmount, PaidAmount, PaymentMode, AuthorizedBy, MinimumPayment, PolicyNumber)\n\tSELECT \n\tout_ModifiedUserID AS MODIFIEDUSERID, \n\tout_ModifyDate AS MODIFIEDDATE, \n\tIN_TransactionId AS TRANSACTIONID, \n\tout_Transaction_Type AS TRANSACTIONTYPE, \n\tout_TransactionData AS TRANSACTIONDATA, \n\tout_RemittanceSource AS REMITTANCESOURCE, \n\tout_ProcessStatus AS PROCESSEDSTATUSCODE, \n\tout_ModifyDate AS RECONCILIATIONDATE, \n\tout_account AS VENDORACCOUNTNUMBER, \n\tout_EffectiveDate AS EFFECTIVEDATE, \n\tout_DateInitiated AS DATEINITIATED, \n\tout_Full_Pay_Amt AS BILLAMOUNT, \n\tout_Amount_Paid AS PAIDAMOUNT, \n\tout_PaymentMode AS PAYMENTMODE, \n\tout_AuthorizeBy AS AUTHORIZEDBY, \n\tout_Min_Pay_Amt AS MINIMUMPAYMENT, \n\tout_policy_number AS POLICYNUMBER\n\tFROM fil_Load_Ready_2_Stage_Data\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "DataFeed -Informatica/BillingDataServices/"
        },
        "annotations": []
    }
}