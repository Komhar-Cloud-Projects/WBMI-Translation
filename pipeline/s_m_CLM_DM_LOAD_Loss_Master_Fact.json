{
    "name": "s_m_CLM_DM_LOAD_Loss_Master_Fact",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Loss_Master_Fact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Claim_Transaction AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttype_disability,\n\tfinancial_type_code,\n\ttrans_code,\n\ttrans_date\n\tFROM (\n\t\tSELECT \n\t\t\tclaimant_cov_det_ak_id,\n\t\t\tcause_of_loss,\n\t\t\treserve_ctgry,\n\t\t\ttype_disability,\n\t\t\tfinancial_type_code,\n\t\t\ttrans_code,\n\t\t\ttrans_date\n\t\tFROM claim_transaction\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,cause_of_loss,reserve_ctgry,type_disability,financial_type_code,trans_code,trans_date ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nLKP_Claim_payment_dim AS (\n\tSELECT\n\tclaim_pay_dim_id,\n\tedw_claim_pay_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_pay_dim_id,\n\t\t\tedw_claim_pay_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM claim_payment_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_pay_ak_id,eff_from_date,eff_to_date ORDER BY claim_pay_dim_id DESC) = 1\n),\nSQ_loss_master_calculation AS (\n\tSELECT loss_master_calculation.loss_master_calculation_id, \r\n\tloss_master_calculation.source_sys_id, \r\n\tloss_master_calculation.claim_trans_pk_id, \r\n\tloss_master_calculation.claim_reins_trans_pk_id, \r\n\tloss_master_calculation.claimant_cov_det_ak_id, \r\n\tloss_master_calculation.claim_pay_ak_id, \r\n\tloss_master_calculation.reins_cov_ak_id, \r\n\tloss_master_calculation.trans_kind_code, \r\n\tloss_master_calculation.variation_code, \r\n\tloss_master_calculation.pol_type, \r\n\tloss_master_calculation.incptn_date, \r\n\tloss_master_calculation.loss_master_run_date, \r\n\tloss_master_calculation.new_claim_count, \r\n\tloss_master_calculation.outstanding_amt, \r\n\tloss_master_calculation.paid_loss_amt, \r\n\tloss_master_calculation.paid_exp_amt, \r\n\tloss_master_calculation.eom_unpaid_loss_adjust_exp, \r\n\tloss_master_calculation.orig_reserve, \r\n\tloss_master_calculation.auto_reins_facility, \r\n\tloss_master_calculation.statistical_brkdwn_line, \r\n\tloss_master_calculation.statistical_code1, \r\n\tloss_master_calculation.statistical_code2, \r\n\tloss_master_calculation.statistical_code3, \r\n\tloss_master_calculation.statistical_line, \r\n\tloss_master_calculation.loss_master_cov_code, \r\n\tloss_master_calculation.risk_state_prov_code, \r\n\tloss_master_calculation.risk_zip_code, \r\n\tloss_master_calculation.terr_code, \r\n\tloss_master_calculation.tax_loc, \r\n\tloss_master_calculation.class_code, \r\n\tloss_master_calculation.exposure, \r\n\tloss_master_calculation.sub_line_code, \r\n\tloss_master_calculation.source_sar_asl, \r\n\tloss_master_calculation.source_sar_prdct_line, \r\n\tloss_master_calculation.source_sar_sp_use_code, \r\n\tloss_master_calculation.pms_trans_code, \r\n\tloss_master_calculation.trans_date,\r\n\tloss_master_calculation.pms_acct_entered_date, \r\n\tloss_master_calculation.trans_offset_onset_ind, \r\n\tloss_master_calculation.claim_trans_amt, \r\n\tloss_master_calculation.claim_trans_hist_amt, \r\n\tloss_master_calculation.FinancialTypeCode,\r\n\tloss_master_calculation.TransactionCode,\r\n\tCase when claimant_coverage_detail.policysourceid in ('PMS','ESU') or claimant_coverage_detail.source_sys_id= 'PMS' then StatisticalCoverage.CoverageGUID\r\n\twhen claimant_coverage_detail.policysourceid in ('DUC','PDC') then claimant_coverage_detail.CoverageGUID end as CoverageGUID,\r\n\tclaimant_coverage_detail.InsuranceReferenceLineOfBusinessAKId, \r\n\tclaimant_coverage_detail.ProductAKId, \r\n\tCase when claimant_coverage_detail.policysourceid in ('PMS','ESU') or claimant_coverage_detail.source_sys_id = 'PMS'  then SCSIL.StandardInsuranceLineCode \r\n\twhen claimant_coverage_detail.policysourceid in ('DUC','PDC') then RCSIL.StandardInsuranceLineCode end as StandardInsuranceLineCode,\r\n\tCase when claimant_coverage_detail.policysourceid in ('PMS','ESU') or claimant_coverage_detail.source_sys_id = 'PMS' then StatisticalCoverage.ClassCode\r\n\twhen claimant_coverage_detail.policysourceid in ('DUC','PDC') then RCPC.ClassCode end as ClassCode,\r\n\tCase when claimant_coverage_detail.policysourceid = 'PMS' or claimant_coverage_detail.source_sys_id = 'PMS'  then 'PMS'\r\n\twhen claimant_coverage_detail.policysourceid = 'ESU' or claimant_coverage_detail.source_sys_id = 'ESU'  then 'ESU'\r\n\twhen claimant_coverage_detail.policysourceid in ('DUC','PDC') then 'DUC' end as PolicySourceId,\r\n\tStatisticalCoverage.RiskUnitGroup,\r\n\tStatisticalCoverage.RiskUnit,\r\n\tStatisticalCoverage.MajorPerilCode,\r\n\tRCPC.RiskType,\r\n\tRCPC.CoverageType,\r\n\tSCPC.TypeBureauCode,\r\n\tCASE WHEN StatisticalCoverage.RiskUnitSequenceNumber='N/A' then '' ELSE \r\n\tSUBSTRING(StatisticalCoverage.RiskUnitSequenceNumber,2,1) END as ProductTypeCode,\r\n\tRCPC.PerilGroup,\r\n\tRCPC.CoverageForm,\r\n\tRCPC.SubCoverageTypeCode,\r\n\tRCPC.CoverageVersion,\r\n\tCase when claimant_coverage_detail.policysourceid in ('PMS','ESU') or claimant_coverage_detail.source_sys_id = 'PMS'  then SCPC.RatingPlanAKId\r\n\twhen claimant_coverage_detail.policysourceid in ('DUC','PDC') then RCPC.RatingPlanAKId end as RatingPlanAKId,\r\n\tISNULL(RCPC.Policyakid,SCPC.PolicyAkid) PolicyAkid\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation\r\n\tLEFT JOIN claimant_coverage_detail \r\n\tON\r\n\t(case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between claimant_coverage_detail.eff_from_date and claimant_coverage_detail.eff_to_date\r\n\tand claimant_coverage_detail.claimant_cov_det_ak_id=loss_master_calculation.claimant_cov_det_ak_id\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage \r\n\tON claimant_coverage_detail.StatisticalCoverageAKID = StatisticalCoverage.StatisticalCoverageAKID and\r\n\t(case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between StatisticalCoverage.EffectiveDate and StatisticalCoverage.ExpirationDate\r\n\tand StatisticalCoverage.SourceSystemID = 'PMS' \r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage SCPC ON SCPC.PolicyCoverageAKID = StatisticalCoverage.PolicyCoverageAKID\r\n\tand (case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between SCPC.EffectiveDate and SCPC.ExpirationDate\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SCSIL ON SCSIL.ins_line_code = SCPC.InsuranceLine\r\n\tand (case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between SCSIL.eff_from_date and SCSIL.eff_to_date\r\n\t\r\n\tLEFT JOIN ( select RatingCoverageAKID,RatingCoverage.EffectiveDate RatingCoverageRecordEffectivadate,RatingCoverage.ExpirationDate RatingCoverageRecordExpirationdate,PolicyCoverage.Policyakid,PolicyCoverage.EffectiveDate PolicyCoverageRecordEffectivadate,PolicyCoverage.ExpirationDate PolicyCoverageRecordExpirationdate,InsuranceLine,RatingCoverage.ClassCode,RatingCoverage.RiskType,RatingCoverage.CoverageType,RatingCoverage.PerilGroup,\r\n\tRatingCoverage.CoverageForm,RatingCoverage.SubCoverageTypeCode,RatingCoverage.CoverageVersion,PolicyCoverage.RatingPlanAKId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage \r\n\t inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage\r\n\t on PolicyCoverage.PolicyCoverageAKID=RatingCoverage.PolicyCoverageAKID\r\n\t and PolicyCoverage.CurrentSnapshotFlag=1\r\n\t and PolicyCoverage.SourceSystemID='DCT') RCPC\r\n\tON claimant_coverage_detail.RatingCoverageAKID = RCPC.RatingCoverageAKID\r\n\tand loss_master_calculation.pol_ak_id=RCPC.PolicyAKID\r\n\tand (case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between RCPC.RatingCoverageRecordEffectivadate and RCPC.RatingCoverageRecordExpirationdate\r\n\tand (case when  loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between RCPC.PolicyCoverageRecordEffectivadate and RCPC.PolicyCoverageRecordExpirationdate\r\n\t\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line RCSIL ON RCSIL.ins_line_code = RCPC.InsuranceLine and\r\n\t(case when loss_master_calculation.trans_offset_onset_ind='O' \r\n\tthen loss_master_calculation.pms_acct_entered_date\r\n\telse DATEADD(D,1,loss_master_calculation.loss_master_run_date)  end) between RCSIL.eff_from_date and RCSIL.eff_to_date\r\n\tWHERE\r\n\t loss_master_calculation.created_date > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t@{pipeline().parameters.WHERECLAUSE}\n),\nEXP_Loss_Master_Calc_Input AS (\n\tSELECT\n\tloss_master_calculation_id,\n\tsource_sys_id,\n\tclaim_trans_pk_id,\n\tclaim_reins_trans_pk_id,\n\tclaimant_cov_det_ak_id,\n\tclaim_pay_ak_id,\n\treins_cov_ak_id,\n\ttrans_kind_code,\n\tvariation_code,\n\tpol_type,\n\t-- *INF*: IIF(isnull(pol_type) or length(rtrim(ltrim(pol_type)))=0,'N/A',rtrim(ltrim(pol_type)))\n\tIFF(pol_type IS NULL or length(rtrim(ltrim(pol_type))) = 0, 'N/A', rtrim(ltrim(pol_type))) AS pol_type_out,\n\tincptn_date,\n\tloss_master_run_date,\n\tnew_claim_count,\n\toutstanding_amt,\n\tpaid_loss_amt,\n\tpaid_exp_amt,\n\teom_unpaid_loss_adjust_exp,\n\torig_reserve,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\t-- *INF*: IIF(isnull(statistical_brkdwn_line) or length(ltrim(rtrim(statistical_brkdwn_line)))=0,'N/A',ltrim(rtrim(statistical_brkdwn_line)))\r\n\t-- \r\n\t-- \r\n\t-- -- different column lengths\n\tIFF(\n\t    statistical_brkdwn_line IS NULL or length(ltrim(rtrim(statistical_brkdwn_line))) = 0, 'N/A',\n\t    ltrim(rtrim(statistical_brkdwn_line))\n\t) AS statistical_brkdwn_line_out,\n\tstatistical_code1,\n\t-- *INF*: IIF(isnull(statistical_code1) or length(rtrim(ltrim(statistical_code1)))=0  ,'N/A',rtrim(ltrim(statistical_code1)))\n\tIFF(\n\t    statistical_code1 IS NULL or length(rtrim(ltrim(statistical_code1))) = 0, 'N/A',\n\t    rtrim(ltrim(statistical_code1))\n\t) AS statistical_code1_out,\n\tstatistical_code2,\n\t-- *INF*: IIF(isnull(statistical_code2) or length(ltrim(rtrim(statistical_code2)))=0,'N/A',ltrim(rtrim(statistical_code2))) \n\tIFF(\n\t    statistical_code2 IS NULL or length(ltrim(rtrim(statistical_code2))) = 0, 'N/A',\n\t    ltrim(rtrim(statistical_code2))\n\t) AS statistical_code2_out,\n\tstatistical_code3,\n\t-- *INF*: IIF(isnull(statistical_code3) or length(ltrim(rtrim(statistical_code3)))=0,'N/A',ltrim(rtrim(statistical_code3)))\n\tIFF(\n\t    statistical_code3 IS NULL or length(ltrim(rtrim(statistical_code3))) = 0, 'N/A',\n\t    ltrim(rtrim(statistical_code3))\n\t) AS statistical_code3_out,\n\tstatistical_line,\n\t-- *INF*: IIF(isnull(statistical_line) or length(rtrim(ltrim(statistical_line)))=0,'N/A', rtrim(ltrim(statistical_line)))\n\tIFF(\n\t    statistical_line IS NULL or length(rtrim(ltrim(statistical_line))) = 0, 'N/A',\n\t    rtrim(ltrim(statistical_line))\n\t) AS statistical_line_out,\n\tloss_master_cov_code,\n\t-- *INF*: IIF(isnull(loss_master_cov_code) or length(rtrim(ltrim(loss_master_cov_code)))=0,'N/A', rtrim(ltrim(loss_master_cov_code)))\n\tIFF(\n\t    loss_master_cov_code IS NULL or length(rtrim(ltrim(loss_master_cov_code))) = 0, 'N/A',\n\t    rtrim(ltrim(loss_master_cov_code))\n\t) AS loss_master_cov_code_out,\n\trisk_state_prov_code,\n\trisk_zip_code,\n\t-- *INF*: IIF(isnull(risk_zip_code) or length(rtrim(ltrim(risk_zip_code)))=0,'N/A', rtrim(ltrim(risk_zip_code)))\n\tIFF(\n\t    risk_zip_code IS NULL or length(rtrim(ltrim(risk_zip_code))) = 0, 'N/A',\n\t    rtrim(ltrim(risk_zip_code))\n\t) AS risk_zip_code_out,\n\tterr_code,\n\ttax_loc,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRING_NUMERIC(tax_loc)\r\n\t-- \n\tUDF_DEFAULT_VALUE_FOR_STRING_NUMERIC(tax_loc) AS tax_loc_out,\n\tclass_code,\n\t-- *INF*: IIF(isnull(class_code) or length(rtrim(ltrim(class_code)))=0,'N/A',rtrim(ltrim(class_code)))\n\tIFF(\n\t    class_code IS NULL or length(rtrim(ltrim(class_code))) = 0, 'N/A', rtrim(ltrim(class_code))\n\t) AS class_code_out,\n\texposure,\n\tsub_line_code,\n\t-- *INF*: IIF(isnull(sub_line_code) or length(rtrim(ltrim(sub_line_code)))=0,'N/A',rtrim(ltrim(sub_line_code)))\n\tIFF(\n\t    sub_line_code IS NULL or length(rtrim(ltrim(sub_line_code))) = 0, 'N/A',\n\t    rtrim(ltrim(sub_line_code))\n\t) AS sub_line_code_out,\n\tsource_sar_asl,\n\t-- *INF*: IIF(isnull(source_sar_asl) or length(rtrim(ltrim(source_sar_asl)))=0,'N/A',rtrim(ltrim(source_sar_asl)))\n\tIFF(\n\t    source_sar_asl IS NULL or length(rtrim(ltrim(source_sar_asl))) = 0, 'N/A',\n\t    rtrim(ltrim(source_sar_asl))\n\t) AS source_sar_asl_out,\n\tsource_sar_prdct_line,\n\t-- *INF*: IIF(isnull(source_sar_prdct_line) or length(rtrim(ltrim(source_sar_prdct_line)))=0,'N/A',rtrim(ltrim(source_sar_prdct_line)))\n\tIFF(\n\t    source_sar_prdct_line IS NULL or length(rtrim(ltrim(source_sar_prdct_line))) = 0, 'N/A',\n\t    rtrim(ltrim(source_sar_prdct_line))\n\t) AS source_sar_prdct_line_out,\n\tsource_sar_sp_use_code,\n\t-- *INF*: IIF(isnull(source_sar_sp_use_code) or length(rtrim(ltrim(source_sar_sp_use_code)))=0,'N/A',rtrim(ltrim(source_sar_sp_use_code)))\n\tIFF(\n\t    source_sar_sp_use_code IS NULL or length(rtrim(ltrim(source_sar_sp_use_code))) = 0, 'N/A',\n\t    rtrim(ltrim(source_sar_sp_use_code))\n\t) AS source_sar_sp_use_code_out,\n\tpms_trans_code,\n\ttrans_date,\n\tpms_acct_entered_date,\n\ttrans_offset_onset_ind,\n\t-- *INF*: IIF(trans_offset_onset_ind = 'O', pms_acct_entered_date, ADD_TO_DATE(loss_master_run_date,'dd',1))\r\n\t-- \r\n\t-- --- Above logic is very important for Loss Master generation for EDW. We had to use above so that for EXCEED Offset Transactions we can get the attributes from Dim tables as that day so we are using pms_acct_entered_date. And for other transactions we use loss_master_run_date.\n\tIFF(trans_offset_onset_ind = 'O', pms_acct_entered_date, DATEADD(dd,1,loss_master_run_date)) AS loss_master_run_date_plus_one,\n\tclaim_trans_amt,\n\tclaim_trans_hist_amt,\n\tFinancialTypeCode,\n\t-- *INF*: ltrim(rtrim(FinancialTypeCode))\n\tltrim(rtrim(FinancialTypeCode)) AS in_FinancialTypeCode,\n\tTransactionCode,\n\tCoverageGUID,\n\tInsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tProductAKId AS i_ProductAKId,\n\tStandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\tClassCode AS i_ClassCode,\n\tPolicySourceId AS i_PolicySourceId,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tRiskUnit AS i_RiskUnit,\n\tMajorPerilCode AS i_MajorPerilCode,\n\tCoverageForm AS i_CoverageForm,\n\tRiskType AS i_RiskType,\n\tCoverageType AS i_CoverageType,\n\tTypeBureauCode AS i_TypeBureauCode,\n\t-- *INF*: IIF(ISNULL(i_CoverageForm),'N/A',i_CoverageForm)\n\tIFF(i_CoverageForm IS NULL, 'N/A', i_CoverageForm) AS v_CoverageForm,\n\t-- *INF*: IIF(ISNULL(i_RiskType), 'N/A', i_RiskType)\n\tIFF(i_RiskType IS NULL, 'N/A', i_RiskType) AS v_RiskType,\n\t-- *INF*: IIF(ISNULL(i_RiskUnit), 'N/A', i_RiskUnit)\n\tIFF(i_RiskUnit IS NULL, 'N/A', i_RiskUnit) AS v_RiskUnit,\n\t-- *INF*: IIF(ISNULL(i_StandardInsuranceLineCode), 'N/A', i_StandardInsuranceLineCode)\n\tIFF(i_StandardInsuranceLineCode IS NULL, 'N/A', i_StandardInsuranceLineCode) AS o_StandardInsuranceLineCode,\n\t-- *INF*: IIF(ISNULL(i_ClassCode), 'N/A', i_ClassCode)\n\tIFF(i_ClassCode IS NULL, 'N/A', i_ClassCode) AS o_ClassCode,\n\t-- *INF*: IIF(ISNULL(i_TypeBureauCode),'N/A',i_TypeBureauCode)\n\tIFF(i_TypeBureauCode IS NULL, 'N/A', i_TypeBureauCode) AS o_TypeBureauCode,\n\t-- *INF*: IIF(ISNULL(i_RiskUnitGroup), 'N/A', i_RiskUnitGroup)\n\tIFF(i_RiskUnitGroup IS NULL, 'N/A', i_RiskUnitGroup) AS o_RiskUnitGroup,\n\t-- *INF*: IIF(ISNULL(i_RiskUnit), 'N/A', i_RiskUnit)\n\tIFF(i_RiskUnit IS NULL, 'N/A', i_RiskUnit) AS o_RiskUnit,\n\t-- *INF*: IIF(ISNULL(i_MajorPerilCode), 'N/A', i_MajorPerilCode)\n\tIFF(i_MajorPerilCode IS NULL, 'N/A', i_MajorPerilCode) AS o_MajorPerilCode,\n\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLineOfBusinessAKId), -1, i_InsuranceReferenceLineOfBusinessAKId)\n\tIFF(\n\t    i_InsuranceReferenceLineOfBusinessAKId IS NULL, - 1, i_InsuranceReferenceLineOfBusinessAKId\n\t) AS o_InsuranceReferenceLineOfBusinessAKId,\n\t-- *INF*: IIF(ISNULL(i_ProductAKId), -1, i_ProductAKId)\n\tIFF(i_ProductAKId IS NULL, - 1, i_ProductAKId) AS o_ProductAKId,\n\t-- *INF*: IIF(ISNULL(i_PolicySourceId), 'N/A', i_PolicySourceId)\n\tIFF(i_PolicySourceId IS NULL, 'N/A', i_PolicySourceId) AS o_PolicySourceId,\n\t-- *INF*: v_RiskType\r\n\t-- \r\n\t-- --IIF(LTRIM(RTRIM(v_CoverageForm))='BusinessAuto','N/A',v_RiskType)\n\tv_RiskType AS o_RiskType,\n\t-- *INF*: IIF(ISNULL(i_CoverageType), 'N/A', i_CoverageType)\n\tIFF(i_CoverageType IS NULL, 'N/A', i_CoverageType) AS o_CoverageType,\n\tProductTypeCode,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tRatingPlanAKId,\n\tPolicyAKID,\n\t'N/A' AS Default_Value\n\tFROM SQ_loss_master_calculation\n),\nlkp_Claim_Reinsurance_Transaction_SRC AS (\n\tSELECT\n\tclaim_reins_trans_id,\n\ttype_disability,\n\tclaim_reins_pms_trans_code,\n\tclaim_reins_trans_base_type_code,\n\ttrans_ctgry_code,\n\tclaim_reins_trans_code,\n\tclaim_reins_trans_amt,\n\tclaim_reins_trans_hist_amt,\n\tclaim_reins_trans_date,\n\toffset_onset_ind\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_reins_trans_id,\n\t\t\ttype_disability,\n\t\t\tclaim_reins_pms_trans_code,\n\t\t\tclaim_reins_trans_base_type_code,\n\t\t\ttrans_ctgry_code,\n\t\t\tclaim_reins_trans_code,\n\t\t\tclaim_reins_trans_amt,\n\t\t\tclaim_reins_trans_hist_amt,\n\t\t\tclaim_reins_trans_date,\n\t\t\toffset_onset_ind\n\t\tFROM claim_reinsurance_transaction\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_reins_trans_id ORDER BY claim_reins_trans_id) = 1\n),\nlkp_Claim_Transaction_SRC AS (\n\tSELECT\n\tclaim_trans_id,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttype_disability,\n\toffset_onset_ind,\n\ttrans_code,\n\ts3p_trans_code,\n\ttrans_date,\n\ttrans_base_type_code,\n\ttrans_ctgry_code,\n\ttrans_amt,\n\ttrans_hist_amt,\n\ttrans_rsn,\n\tdraft_num,\n\tclaim_trans_pk_id\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_trans_id,\n\t\t\tcause_of_loss,\n\t\t\treserve_ctgry,\n\t\t\ttype_disability,\n\t\t\toffset_onset_ind,\n\t\t\ttrans_code,\n\t\t\ts3p_trans_code,\n\t\t\ttrans_date,\n\t\t\ttrans_base_type_code,\n\t\t\ttrans_ctgry_code,\n\t\t\ttrans_amt,\n\t\t\ttrans_hist_amt,\n\t\t\ttrans_rsn,\n\t\t\tdraft_num,\n\t\t\tclaim_trans_pk_id\n\t\tFROM claim_transaction\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_trans_id ORDER BY claim_trans_id) = 1\n),\nEXP_Determine_Transaction_Values AS (\n\tSELECT\n\tlkp_Claim_Transaction_SRC.claim_trans_id AS claim_trans_pk_id,\n\tlkp_Claim_Transaction_SRC.cause_of_loss,\n\tlkp_Claim_Transaction_SRC.reserve_ctgry,\n\tlkp_Claim_Transaction_SRC.type_disability,\n\tlkp_Claim_Transaction_SRC.offset_onset_ind,\n\tlkp_Claim_Transaction_SRC.trans_code,\n\tlkp_Claim_Transaction_SRC.s3p_trans_code,\n\tlkp_Claim_Transaction_SRC.trans_date,\n\tlkp_Claim_Transaction_SRC.trans_base_type_code,\n\tlkp_Claim_Transaction_SRC.trans_ctgry_code,\n\tlkp_Claim_Transaction_SRC.trans_amt,\n\tlkp_Claim_Transaction_SRC.trans_hist_amt,\n\tlkp_Claim_Transaction_SRC.trans_rsn,\n\tlkp_Claim_Transaction_SRC.draft_num AS kind_code,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_id AS claim_reins_trans_pk_id_IN,\n\tlkp_Claim_Reinsurance_Transaction_SRC.type_disability AS reins_type_disability,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_pms_trans_code,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_base_type_code AS reins_trans_base_type_code,\n\tlkp_Claim_Reinsurance_Transaction_SRC.trans_ctgry_code AS reins_trans_ctgry_code,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_code AS reins_trans_code,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_amt AS reins_trans_amt,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_hist_amt AS reins_trans_hist_amt,\n\tlkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_date AS reins_trans_date,\n\tlkp_Claim_Reinsurance_Transaction_SRC.offset_onset_ind AS reins_offset_onset_ind,\n\t-- *INF*: iif(isnull(claim_trans_pk_id),0,iif(claim_trans_pk_id > 0,1,0))\n\tIFF(claim_trans_pk_id IS NULL, 0, IFF(\n\t        claim_trans_pk_id > 0, 1, 0\n\t    )) AS is_claim_trans_pk_id_valid,\n\t-- *INF*: iif(isnull(claim_reins_trans_pk_id_IN),0,iif(claim_reins_trans_pk_id_IN > 0,1,0))\n\tIFF(\n\t    claim_reins_trans_pk_id_IN IS NULL, 0,\n\t    IFF(\n\t        claim_reins_trans_pk_id_IN > 0, 1, 0\n\t    )\n\t) AS is_reins_trans_pk_id_valid,\n\tis_claim_trans_pk_id_valid AS is_claim_trans_pk_id_valid_OUT,\n\tis_reins_trans_pk_id_valid AS is_reins_trans_pk_id_valid_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,cause_of_loss,\r\n\t-- is_reins_trans_pk_id_valid,'N/A',\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, cause_of_loss,\n\t    is_reins_trans_pk_id_valid, 'N/A',\n\t    ''\n\t) AS cause_of_loss_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,reserve_ctgry,\r\n\t-- is_reins_trans_pk_id_valid,'N/A',\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, reserve_ctgry,\n\t    is_reins_trans_pk_id_valid, 'N/A',\n\t    ''\n\t) AS reserve_ctgry_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,type_disability,\r\n\t-- is_reins_trans_pk_id_valid,reins_type_disability,\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, type_disability,\n\t    is_reins_trans_pk_id_valid, reins_type_disability,\n\t    ''\n\t) AS type_disability_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_code,\r\n\t-- is_reins_trans_pk_id_valid,reins_trans_code,\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_code,\n\t    is_reins_trans_pk_id_valid, reins_trans_code,\n\t    ''\n\t) AS trans_code_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_ctgry_code,\r\n\t-- is_reins_trans_pk_id_valid,reins_trans_ctgry_code,\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_ctgry_code,\n\t    is_reins_trans_pk_id_valid, reins_trans_ctgry_code,\n\t    ''\n\t) AS trans_ctgry_code_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,offset_onset_ind,\r\n\t-- is_reins_trans_pk_id_valid,reins_offset_onset_ind,\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, offset_onset_ind,\n\t    is_reins_trans_pk_id_valid, reins_offset_onset_ind,\n\t    ''\n\t) AS offset_onset_ind_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,'D',\r\n\t-- is_reins_trans_pk_id_valid,'C',\r\n\t-- 'N/A')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, 'D',\n\t    is_reins_trans_pk_id_valid, 'C',\n\t    'N/A'\n\t) AS kind_code_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_rsn,\r\n\t-- is_reins_trans_pk_id_valid,'N/A',\r\n\t-- '')\r\n\t-- -- ceded records are always N/A\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_rsn,\n\t    is_reins_trans_pk_id_valid, 'N/A',\n\t    ''\n\t) AS trns_rsn_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_base_type_code,\r\n\t-- is_reins_trans_pk_id_valid,reins_trans_base_type_code,\r\n\t-- '')\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_base_type_code,\n\t    is_reins_trans_pk_id_valid, reins_trans_base_type_code,\n\t    ''\n\t) AS trans_base_type_code_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,:LKP.LKP_CALENDER_DIM(to_date(to_char(trans_date,'MM/DD/YYYY'),'MM/DD/YYYY')),\r\n\t-- is_reins_trans_pk_id_valid,:LKP.LKP_CALENDER_DIM(to_date(to_char(reins_trans_date,'MM/DD/YYYY'),'MM/DD/YYYY')),\r\n\t-- -1)\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, LKP_CALENDER_DIM_to_date_to_char_trans_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id,\n\t    is_reins_trans_pk_id_valid, LKP_CALENDER_DIM_to_date_to_char_reins_trans_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id,\n\t    - 1\n\t) AS trans_date_id_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_amt,\r\n\t-- is_reins_trans_pk_id_valid,reins_trans_amt,\r\n\t-- 0)\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_amt,\n\t    is_reins_trans_pk_id_valid, reins_trans_amt,\n\t    0\n\t) AS trans_amt_OUT,\n\t-- *INF*: decode(TRUE,\r\n\t-- is_claim_trans_pk_id_valid,trans_hist_amt,\r\n\t-- is_reins_trans_pk_id_valid,reins_trans_hist_amt,\r\n\t-- 0)\n\tdecode(\n\t    TRUE,\n\t    is_claim_trans_pk_id_valid, trans_hist_amt,\n\t    is_reins_trans_pk_id_valid, reins_trans_hist_amt,\n\t    0\n\t) AS trans_hist_amt_OUT,\n\tEXP_Loss_Master_Calc_Input.trans_kind_code AS LM_trans_kind_code,\n\tEXP_Loss_Master_Calc_Input.pms_trans_code\n\tFROM EXP_Loss_Master_Calc_Input\n\tLEFT JOIN lkp_Claim_Reinsurance_Transaction_SRC\n\tON lkp_Claim_Reinsurance_Transaction_SRC.claim_reins_trans_id = EXP_Loss_Master_Calc_Input.claim_reins_trans_pk_id\n\tLEFT JOIN lkp_Claim_Transaction_SRC\n\tON lkp_Claim_Transaction_SRC.claim_trans_id = EXP_Loss_Master_Calc_Input.claim_trans_pk_id\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_trans_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_trans_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(trans_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_reins_trans_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_reins_trans_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(reins_trans_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n),\nEXP_set_financial_values AS (\n\tSELECT\n\tEXP_Loss_Master_Calc_Input.trans_date,\n\tEXP_Loss_Master_Calc_Input.claimant_cov_det_ak_id AS IN_claimant_cov_det_ak_id,\n\tEXP_Determine_Transaction_Values.cause_of_loss_OUT AS IN_cause_of_loss,\n\tEXP_Determine_Transaction_Values.reserve_ctgry_OUT AS IN_reserve_ctgry,\n\tEXP_Determine_Transaction_Values.type_disability_OUT AS IN_type_disability,\n\tEXP_Loss_Master_Calc_Input.FinancialTypeCode AS financial_type_code,\n\tEXP_Loss_Master_Calc_Input.TransactionCode AS trans_code,\n\tEXP_Determine_Transaction_Values.trans_ctgry_code_OUT AS trans_ctgry_code,\n\tEXP_Loss_Master_Calc_Input.claim_trans_amt AS trans_amt,\n\tEXP_Loss_Master_Calc_Input.claim_trans_hist_amt AS trans_hist_amt,\n\tEXP_Loss_Master_Calc_Input.source_sys_id,\n\t-- *INF*: IIF(financial_type_code = 'D', \r\n\t-- DECODE(trans_code,  '20', trans_amt, \r\n\t-- '21',trans_amt, \r\n\t-- '22', trans_amt, \r\n\t-- '23',trans_amt, \r\n\t-- '24', trans_amt, \r\n\t-- '28', trans_amt, \r\n\t-- '29', trans_amt, \r\n\t-- '41', 0, \r\n\t-- '42', 0, \r\n\t-- '43', 0, \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'D',\n\t    DECODE(\n\t        trans_code,\n\t        '20', trans_amt,\n\t        '21', trans_amt,\n\t        '22', trans_amt,\n\t        '23', trans_amt,\n\t        '24', trans_amt,\n\t        '28', trans_amt,\n\t        '29', trans_amt,\n\t        '41', 0,\n\t        '42', 0,\n\t        '43', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_loss_paid_excluding_recoveries,\n\t-- *INF*: IIF(financial_type_code = 'D', \r\n\t-- DECODE(trans_code, '20', 0,\r\n\t-- '21', trans_amt * -1, \r\n\t-- '22', (trans_amt  -  trans_hist_amt ) * -1, \r\n\t-- '23', 0, \r\n\t-- '24', 0, \r\n\t-- '28', trans_amt * -1, \r\n\t-- '29', 0, \r\n\t-- '41', trans_hist_amt, \r\n\t-- '42', trans_hist_amt, \r\n\t-- '43', 0, \r\n\t-- '65', trans_hist_amt, \r\n\t-- '66', trans_hist_amt, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), 0))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(\n\t    financial_type_code = 'D',\n\t    DECODE(\n\t        trans_code,\n\t        '20', 0,\n\t        '21', trans_amt * - 1,\n\t        '22', (trans_amt - trans_hist_amt) * - 1,\n\t        '23', 0,\n\t        '24', 0,\n\t        '28', trans_amt * - 1,\n\t        '29', 0,\n\t        '41', trans_hist_amt,\n\t        '42', trans_hist_amt,\n\t        '43', 0,\n\t        '65', trans_hist_amt,\n\t        '66', trans_hist_amt,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        0\n\t    )\n\t) AS var_direct_loss_outstanding_excluding_recoveries,\n\t-- *INF*: IIF(financial_type_code = 'D', \r\n\t-- DECODE(trans_code, '20', trans_amt,\r\n\t-- '21', 0, \r\n\t-- '22', trans_hist_amt, \r\n\t-- '23', trans_amt, \r\n\t-- '24', trans_amt, \r\n\t-- '28',0, \r\n\t-- '29', trans_amt, \r\n\t-- '41', trans_hist_amt, \r\n\t-- '42', trans_hist_amt, \r\n\t-- '43', 0, \r\n\t-- '65', trans_hist_amt, \r\n\t-- '66', trans_hist_amt, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'D', '23', trans_date)), 0, trans_hist_amt), 0))\n\tIFF(\n\t    financial_type_code = 'D',\n\t    DECODE(\n\t        trans_code,\n\t        '20', trans_amt,\n\t        '21', 0,\n\t        '22', trans_hist_amt,\n\t        '23', trans_amt,\n\t        '24', trans_amt,\n\t        '28', 0,\n\t        '29', trans_amt,\n\t        '41', trans_hist_amt,\n\t        '42', trans_hist_amt,\n\t        '43', 0,\n\t        '65', trans_hist_amt,\n\t        '66', trans_hist_amt,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        0\n\t    )\n\t) AS var_direct_loss_incurred_excluding_recoveries,\n\t-- *INF*: IIF(financial_type_code = 'E', \r\n\t-- DECODE(trans_code,  '20', trans_amt, \r\n\t-- '21',trans_amt, \r\n\t-- '22', trans_amt, \r\n\t-- '23',trans_amt, \r\n\t-- '24', trans_amt, \r\n\t-- '28', trans_amt, \r\n\t-- '29', trans_amt,\r\n\t-- '40',0, \r\n\t-- '41', 0, \r\n\t-- '42', 0, \r\n\t-- '43', 0, \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'E',\n\t    DECODE(\n\t        trans_code,\n\t        '20', trans_amt,\n\t        '21', trans_amt,\n\t        '22', trans_amt,\n\t        '23', trans_amt,\n\t        '24', trans_amt,\n\t        '28', trans_amt,\n\t        '29', trans_amt,\n\t        '40', 0,\n\t        '41', 0,\n\t        '42', 0,\n\t        '43', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_alae_paid_excluding_recoveries,\n\t-- *INF*: IIF(financial_type_code = 'E'  and IN (source_sys_id , 'EXCEED', 'DCT'),\r\n\t-- DECODE(trans_code, '20', 0,\r\n\t-- '21', trans_amt * -1, \r\n\t-- '22', (trans_amt -  trans_hist_amt ) * -1, \r\n\t-- '23', 0, \r\n\t-- '24', 0, \r\n\t-- '28', trans_amt * -1, \r\n\t-- '29', 0,\r\n\t-- '40',trans_hist_amt, \r\n\t-- '41', trans_hist_amt, \r\n\t-- '42', trans_hist_amt, \r\n\t-- '43', 0, \r\n\t-- '65', trans_hist_amt, \r\n\t-- '66', trans_hist_amt, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'E', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'E', '23', trans_date)), 0, trans_hist_amt), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'E', '23', trans_date)), 0, trans_hist_amt), 0),\r\n\t-- 0)\r\n\t-- \n\tIFF(\n\t    financial_type_code = 'E' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '20', 0,\n\t        '21', trans_amt * - 1,\n\t        '22', (trans_amt - trans_hist_amt) * - 1,\n\t        '23', 0,\n\t        '24', 0,\n\t        '28', trans_amt * - 1,\n\t        '29', 0,\n\t        '40', trans_hist_amt,\n\t        '41', trans_hist_amt,\n\t        '42', trans_hist_amt,\n\t        '43', 0,\n\t        '65', trans_hist_amt,\n\t        '66', trans_hist_amt,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_alae_outstanding_excluding_recoveries,\n\t-- *INF*: var_direct_alae_paid_excluding_recoveries + var_direct_alae_outstanding_excluding_recoveries\r\n\t-- --JIRA-PROD-4418 Use variables to calculate var_direct_alae_incurred_excluding_recoveries instead of calculating it again based on financial_type_code, source_sys_id and trans_code.\n\tvar_direct_alae_paid_excluding_recoveries + var_direct_alae_outstanding_excluding_recoveries AS var_direct_alae_incurred_excluding_recoveries,\n\t-- *INF*: IIF(financial_type_code = 'B', \r\n\t-- DECODE(trans_code,  '25',IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '30',IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- '41', 0, \r\n\t-- '42', 0,  \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'B',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '41', 0,\n\t        '42', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_subrogation_paid,\n\t-- *INF*: IIF(financial_type_code = 'B' and IN (source_sys_id , 'EXCEED', 'DCT'),\r\n\t-- DECODE(trans_code, '25', 0,\r\n\t-- '30',0,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '33', 0, \r\n\t-- '34', 0, \r\n\t-- '38', trans_amt, \r\n\t-- '39', 0, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\r\n\t-- \n\tIFF(\n\t    financial_type_code = 'B' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', 0,\n\t        '30', 0,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '33', 0,\n\t        '34', 0,\n\t        '38', trans_amt,\n\t        '39', 0,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_subrogation_outstanding,\n\t-- *INF*: IIF(financial_type_code = 'B' and IN (source_sys_id , 'EXCEED', 'DCT'),\r\n\t-- DECODE(trans_code, '25', trans_amt * -1,\r\n\t-- '30',trans_amt * -1,\r\n\t-- '31', 0 , \r\n\t-- '32', trans_hist_amt * -1, \r\n\t-- '33', trans_amt * -1,\r\n\t-- '34', trans_amt * -1,\r\n\t-- '38', 0,\r\n\t-- '39', trans_amt * -1,\r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt  * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'B', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'B' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', trans_amt * - 1,\n\t        '30', trans_amt * - 1,\n\t        '31', 0,\n\t        '32', trans_hist_amt * - 1,\n\t        '33', trans_amt * - 1,\n\t        '34', trans_amt * - 1,\n\t        '38', 0,\n\t        '39', trans_amt * - 1,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_subrogation_incurred,\n\t-- *INF*: IIF(financial_type_code = 'S', \r\n\t-- DECODE(trans_code,  '25', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '30',IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),  \r\n\t-- '41', 0, \r\n\t-- '42', 0,  \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'S',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '41', 0,\n\t        '42', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_salvage_paid,\n\t-- *INF*: IIF(financial_type_code = 'S' and IN (source_sys_id , 'EXCEED', 'DCT'), \r\n\t-- DECODE(trans_code, '25', 0,\r\n\t-- '30',0,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '33', 0, \r\n\t-- '34', 0, \r\n\t-- '38', trans_amt, \r\n\t-- '39', 0, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'S' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', 0,\n\t        '30', 0,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '33', 0,\n\t        '34', 0,\n\t        '38', trans_amt,\n\t        '39', 0,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_salvage_outstanding,\n\t-- *INF*: IIF(financial_type_code = 'S'and IN (source_sys_id , 'EXCEED', 'DCT'),\r\n\t-- DECODE(trans_code, '25', trans_amt * -1,\r\n\t--  '25', trans_amt * -1,\r\n\t-- '31', 0, \r\n\t-- '32', trans_hist_amt * -1, \r\n\t-- '33', trans_amt * -1,\r\n\t-- '34',trans_amt * -1,\r\n\t-- '38',0,\r\n\t-- '39', trans_amt * -1,\r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'S', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'S' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', trans_amt * - 1,\n\t        '25', trans_amt * - 1,\n\t        '31', 0,\n\t        '32', trans_hist_amt * - 1,\n\t        '33', trans_amt * - 1,\n\t        '34', trans_amt * - 1,\n\t        '38', 0,\n\t        '39', trans_amt * - 1,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_salvage_incurred,\n\t-- *INF*: IIF(financial_type_code = 'R', \r\n\t-- DECODE(trans_code,  '25', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '30', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),  \r\n\t-- '41', 0, \r\n\t-- '42', 0,  \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'R',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '41', 0,\n\t        '42', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_paid,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT'), \r\n\t-- DECODE(trans_code, '25', 0,\r\n\t-- '30',0,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '33', 0, \r\n\t-- '34', 0, \r\n\t-- '38', trans_amt, \r\n\t-- '39', 0, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', 0,\n\t        '30', 0,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '33', 0,\n\t        '34', 0,\n\t        '38', trans_amt,\n\t        '39', 0,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_outstanding,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT'), \r\n\t-- DECODE(trans_code, '25', trans_amt * -1,\r\n\t-- '30',trans_amt * -1,\r\n\t-- '31', 0, \r\n\t-- '32', trans_hist_amt * -1, \r\n\t-- '33', trans_amt * -1,\r\n\t-- '34',trans_amt * -1,\r\n\t-- '38',0,\r\n\t-- '39', trans_amt * -1,\r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT'),\n\t    DECODE(\n\t        trans_code,\n\t        '25', trans_amt * - 1,\n\t        '30', trans_amt * - 1,\n\t        '31', 0,\n\t        '32', trans_hist_amt * - 1,\n\t        '33', trans_amt * - 1,\n\t        '34', trans_amt * - 1,\n\t        '38', 0,\n\t        '39', trans_amt * - 1,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_incurred,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT') and trans_ctgry_code<>'EX', \r\n\t-- DECODE(trans_code,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '38', trans_amt, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT') and trans_ctgry_code <> 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '38', trans_amt,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_loss_outstanding,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT') and trans_ctgry_code='EX', \r\n\t-- DECODE(trans_code,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '38', trans_amt, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT') and trans_ctgry_code = 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '38', trans_amt,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_alae_outstanding,\n\t-- *INF*: IIF(financial_type_code = 'R' and trans_ctgry_code <> 'EX', \r\n\t-- \tDECODE(trans_code, \r\n\t-- \t'25', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'30', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t0),\r\n\t-- 0)\r\n\t-- \r\n\t-- ----08/15/2011  Removed the filter of EXCEED data (and IN (source_sys_id , 'EXCEED', 'DCT')) \r\n\t-- ----JIRA-PROD-4418 Added condition for trans_code '30' and return trans_amt for PMS claims\n\tIFF(\n\t    financial_type_code = 'R' and trans_ctgry_code <> 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_loss_paid,\n\t-- *INF*: IIF(financial_type_code = 'R' and trans_ctgry_code = 'EX', \r\n\t-- \tDECODE(trans_code,  \r\n\t-- \t'25', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'30', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),\r\n\t-- \t'39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- \t 0)\r\n\t-- ,0)\r\n\t-- \r\n\t-- --- 08/15/2011 - Removed the filter of EXCEED data  (and source_sys_id='EXCEED')\r\n\t-- ----JIRA-PROD-4418 Added condition for trans_code '30' and return trans_amt for PMS claims\n\tIFF(\n\t    financial_type_code = 'R' and trans_ctgry_code = 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS var_direct_other_recovery_alae_paid,\n\t-- *INF*: IIF(financial_type_code = 'R' and trans_ctgry_code <> 'EX', \r\n\t-- DECODE(trans_code,  '25', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '30', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '31', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '32', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '33', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '34', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '38', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt), \r\n\t-- '39', IIF(IN (source_sys_id , 'EXCEED', 'DCT'), trans_amt * -1, trans_amt),  \r\n\t-- '41', 0, \r\n\t-- '42', 0,  \r\n\t-- '65',0, \r\n\t-- '66', 0, \r\n\t-- '90', 0, \r\n\t-- '91', 0, \r\n\t-- '92', 0, 0),0)\n\tIFF(\n\t    financial_type_code = 'R' and trans_ctgry_code <> 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '25', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '30', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '31', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '32', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '33', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '34', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '38', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '39', IFF(\n\t            source_sys_id IN ('EXCEED','DCT'), trans_amt * - 1, trans_amt\n\t        ),\n\t        '41', 0,\n\t        '42', 0,\n\t        '65', 0,\n\t        '66', 0,\n\t        '90', 0,\n\t        '91', 0,\n\t        '92', 0,\n\t        0\n\t    ),\n\t    0\n\t) AS v_net_other_recovery_recvrd_chg_amt,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT') and trans_ctgry_code <> 'EX', \r\n\t-- DECODE(trans_code, '25', 0,\r\n\t-- '30',0,\r\n\t-- '31', trans_amt , \r\n\t-- '32', (trans_amt -  trans_hist_amt ), \r\n\t-- '33', 0, \r\n\t-- '34', 0, \r\n\t-- '38', trans_amt, \r\n\t-- '39', 0, \r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT') and trans_ctgry_code <> 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '25', 0,\n\t        '30', 0,\n\t        '31', trans_amt,\n\t        '32', (trans_amt - trans_hist_amt),\n\t        '33', 0,\n\t        '34', 0,\n\t        '38', trans_amt,\n\t        '39', 0,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS v_net_other_recovery_outstanding_reserve_chg_amt_OLD,\n\t-- *INF*: IIF(financial_type_code = 'R' and IN (source_sys_id , 'EXCEED', 'DCT') and trans_ctgry_code <> 'EX', \r\n\t-- DECODE(trans_code, '25', trans_amt * -1,\r\n\t-- '30',trans_amt * -1,\r\n\t-- '31', 0, \r\n\t-- '32', trans_hist_amt * -1, \r\n\t-- '33', trans_amt * -1,\r\n\t-- '34',trans_amt * -1,\r\n\t-- '38',0,\r\n\t-- '39', trans_amt * -1,\r\n\t-- '41', trans_hist_amt * -1, \r\n\t-- '42', trans_hist_amt * -1, \r\n\t-- '65', trans_hist_amt * -1, \r\n\t-- '66', trans_hist_amt * -1, \r\n\t-- '90', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '91', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), \r\n\t-- '92', IIF(NOT ISNULL(:LKP.LKP_CLAIM_TRANSACTION(IN_claimant_cov_det_ak_id,IN_cause_of_loss,IN_reserve_ctgry,IN_type_disability,'R', '33', trans_date)), 0, trans_hist_amt * -1), 0),\r\n\t-- 0)\n\tIFF(\n\t    financial_type_code = 'R' and source_sys_id IN ('EXCEED','DCT') and trans_ctgry_code <> 'EX',\n\t    DECODE(\n\t        trans_code,\n\t        '25', trans_amt * - 1,\n\t        '30', trans_amt * - 1,\n\t        '31', 0,\n\t        '32', trans_hist_amt * - 1,\n\t        '33', trans_amt * - 1,\n\t        '34', trans_amt * - 1,\n\t        '38', 0,\n\t        '39', trans_amt * - 1,\n\t        '41', trans_hist_amt * - 1,\n\t        '42', trans_hist_amt * - 1,\n\t        '65', trans_hist_amt * - 1,\n\t        '66', trans_hist_amt * - 1,\n\t        '90', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '91', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        '92', IFF(\n\t            LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id IS NOT NULL,\n\t            0,\n\t            trans_hist_amt * - 1\n\t        ),\n\t        0\n\t    ),\n\t    0\n\t) AS v_net_other_recovery_incurred_chg_amt,\n\tvar_direct_loss_paid_excluding_recoveries AS direct_loss_paid_excluding_recoveries,\n\tvar_direct_loss_outstanding_excluding_recoveries AS direct_loss_outstanding_excluding_recoveries,\n\tvar_direct_loss_incurred_excluding_recoveries AS direct_loss_incurred_excluding_recoveries,\n\tvar_direct_alae_paid_excluding_recoveries AS direct_alae_paid_excluding_recoveries,\n\tvar_direct_alae_outstanding_excluding_recoveries AS direct_alae_outstanding_excluding_recoveries,\n\t-- *INF*: var_direct_alae_paid_excluding_recoveries + var_direct_alae_outstanding_excluding_recoveries\r\n\t-- \r\n\t-- \r\n\t-- --- Changed to above logic on 8/15/2011 \r\n\t-- ---var_direct_alae_incurred_excluding_recoveries\n\tvar_direct_alae_paid_excluding_recoveries + var_direct_alae_outstanding_excluding_recoveries AS direct_alae_incurred_excluding_recoveries,\n\tvar_direct_subrogation_paid AS direct_subrogation_paid,\n\tvar_direct_subrogation_outstanding AS direct_subrogation_outstanding,\n\t-- *INF*: var_direct_subrogation_paid  +  var_direct_subrogation_outstanding\r\n\t-- \r\n\t-- \r\n\t-- ---var_direct_subrogation_incurred\n\tvar_direct_subrogation_paid + var_direct_subrogation_outstanding AS direct_subrogation_incurred,\n\tvar_direct_salvage_paid AS direct_salvage_paid,\n\tvar_direct_salvage_outstanding AS direct_salvage_outstanding,\n\t-- *INF*: var_direct_salvage_paid  + var_direct_salvage_outstanding\r\n\t-- ---var_direct_salvage_incurred\n\tvar_direct_salvage_paid + var_direct_salvage_outstanding AS direct_salvage_incurred,\n\tvar_direct_other_recovery_paid AS direct_other_recovery_paid,\n\tvar_direct_other_recovery_outstanding AS direct_other_recovery_outstanding,\n\t-- *INF*: var_direct_other_recovery_paid + var_direct_other_recovery_outstanding\r\n\t-- \r\n\t-- ---var_direct_other_recovery_incurred\n\tvar_direct_other_recovery_paid + var_direct_other_recovery_outstanding AS direct_other_recovery_incurred,\n\tvar_direct_other_recovery_loss_outstanding AS direct_other_recovery_loss_outstanding,\n\tvar_direct_other_recovery_loss_paid AS direct_other_recovery_loss_paid,\n\t-- *INF*: round(var_direct_other_recovery_loss_outstanding+var_direct_other_recovery_loss_paid,2)\n\tround(var_direct_other_recovery_loss_outstanding + var_direct_other_recovery_loss_paid, 2) AS direct_other_recovery_loss_incurred,\n\tvar_direct_other_recovery_alae_outstanding AS direct_other_recovery_alae_outstanding,\n\tvar_direct_other_recovery_alae_paid AS direct_other_recovery_alae_paid,\n\t-- *INF*: round(var_direct_other_recovery_alae_paid + var_direct_other_recovery_alae_outstanding,2)\n\tround(var_direct_other_recovery_alae_paid + var_direct_other_recovery_alae_outstanding, 2) AS direct_other_recovery_alae_incurred,\n\t-- *INF*: round(var_direct_loss_outstanding_excluding_recoveries + var_direct_subrogation_outstanding + var_direct_salvage_outstanding + var_direct_other_recovery_loss_outstanding,2)\n\tround(var_direct_loss_outstanding_excluding_recoveries + var_direct_subrogation_outstanding + var_direct_salvage_outstanding + var_direct_other_recovery_loss_outstanding, 2) AS direct_loss_outstanding_including_recoveries,\n\t-- *INF*: round(var_direct_loss_paid_excluding_recoveries + var_direct_subrogation_paid + var_direct_salvage_paid + var_direct_other_recovery_loss_paid,2)\n\tround(var_direct_loss_paid_excluding_recoveries + var_direct_subrogation_paid + var_direct_salvage_paid + var_direct_other_recovery_loss_paid, 2) AS direct_loss_paid_including_recoveries,\n\t-- *INF*: round(var_direct_loss_incurred_excluding_recoveries + var_direct_salvage_paid+var_direct_subrogation_paid +\r\n\t-- var_direct_other_recovery_loss_paid\r\n\t-- ,2)\n\tround(var_direct_loss_incurred_excluding_recoveries + var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid, 2) AS direct_loss_incurred_including_recoveries,\n\t-- *INF*: round(var_direct_loss_outstanding_excluding_recoveries +  var_direct_salvage_outstanding + var_direct_subrogation_outstanding +\r\n\t-- var_direct_other_recovery_loss_outstanding,2)\n\tround(var_direct_loss_outstanding_excluding_recoveries + var_direct_salvage_outstanding + var_direct_subrogation_outstanding + var_direct_other_recovery_loss_outstanding, 2) AS direct_loss_outstanding_out_BAD,\n\t-- *INF*: round(var_direct_loss_paid_excluding_recoveries + var_direct_salvage_paid+var_direct_subrogation_paid + var_direct_other_recovery_loss_paid,2)\n\tround(var_direct_loss_paid_excluding_recoveries + var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid, 2) AS direct_loss_paid_out_BAD,\n\t-- *INF*: round(var_direct_loss_outstanding_excluding_recoveries + var_direct_salvage_outstanding + var_direct_subrogation_incurred + var_direct_loss_incurred_excluding_recoveries,2)\n\tround(var_direct_loss_outstanding_excluding_recoveries + var_direct_salvage_outstanding + var_direct_subrogation_incurred + var_direct_loss_incurred_excluding_recoveries, 2) AS direct_loss_incurred_out_BAD,\n\t-- *INF*: round(var_direct_alae_paid_excluding_recoveries+var_direct_other_recovery_alae_paid,2)\n\tround(var_direct_alae_paid_excluding_recoveries + var_direct_other_recovery_alae_paid, 2) AS direct_alae_paid_including_recoveries,\n\t-- *INF*: round(var_direct_alae_outstanding_excluding_recoveries + var_direct_other_recovery_alae_outstanding,2)\n\tround(var_direct_alae_outstanding_excluding_recoveries + var_direct_other_recovery_alae_outstanding, 2) AS direct_alae_outstanding_including_recoveries,\n\t-- *INF*: round(var_direct_alae_incurred_excluding_recoveries + var_direct_other_recovery_alae_paid,2)\n\tround(var_direct_alae_incurred_excluding_recoveries + var_direct_other_recovery_alae_paid, 2) AS direct_alae_incurred_including_recoveries,\n\t-- *INF*: round(var_direct_salvage_paid+var_direct_subrogation_paid + var_direct_other_recovery_loss_paid,2)\n\tround(var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid, 2) AS total_direct_loss_recovery_paid,\n\t-- *INF*: round(var_direct_salvage_outstanding + var_direct_subrogation_outstanding + var_direct_other_recovery_loss_outstanding ,2)\n\tround(var_direct_salvage_outstanding + var_direct_subrogation_outstanding + var_direct_other_recovery_loss_outstanding, 2) AS total_direct_loss_recovery_outstanding,\n\t-- *INF*: round(var_direct_salvage_paid + \r\n\t-- var_direct_subrogation_paid + \r\n\t-- var_direct_other_recovery_loss_paid + \r\n\t-- var_direct_salvage_outstanding +\r\n\t-- var_direct_subrogation_outstanding + \r\n\t-- var_direct_other_recovery_loss_outstanding\r\n\t--  ,2)\r\n\t-- \n\tround(var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid + var_direct_salvage_outstanding + var_direct_subrogation_outstanding + var_direct_other_recovery_loss_outstanding, 2) AS total_direct_loss_recovery_incurred,\n\t-- *INF*: round(var_direct_loss_paid_excluding_recoveries + var_direct_salvage_paid+var_direct_subrogation_paid + var_direct_other_recovery_loss_paid,2)\n\tround(var_direct_loss_paid_excluding_recoveries + var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid, 2) AS net_loss_paid,\n\t-- *INF*: round(var_direct_loss_outstanding_excluding_recoveries,2)\n\tround(var_direct_loss_outstanding_excluding_recoveries, 2) AS net_loss_outstanding,\n\t-- *INF*: round(var_direct_loss_incurred_excluding_recoveries + var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid,2)\r\n\t-- \n\tround(var_direct_loss_incurred_excluding_recoveries + var_direct_salvage_paid + var_direct_subrogation_paid + var_direct_other_recovery_loss_paid, 2) AS net_loss_incurred,\n\t-- *INF*: round(var_direct_alae_paid_excluding_recoveries+var_direct_other_recovery_alae_paid,2)\n\tround(var_direct_alae_paid_excluding_recoveries + var_direct_other_recovery_alae_paid, 2) AS net_alae_paid,\n\t-- *INF*: round(var_direct_alae_outstanding_excluding_recoveries + var_direct_other_recovery_alae_outstanding,2)\n\tround(var_direct_alae_outstanding_excluding_recoveries + var_direct_other_recovery_alae_outstanding, 2) AS net_alae_outstanding,\n\t-- *INF*: round(var_direct_alae_incurred_excluding_recoveries + var_direct_other_recovery_alae_paid + var_direct_other_recovery_alae_outstanding,2)\r\n\t-- \n\tround(var_direct_alae_incurred_excluding_recoveries + var_direct_other_recovery_alae_paid + var_direct_other_recovery_alae_outstanding, 2) AS net_alae_incurred\n\tFROM EXP_Determine_Transaction_Values\n\t -- Manually join with EXP_Loss_Master_Calc_Input\n\tLEFT JOIN LKP_CLAIM_TRANSACTION LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date\n\tON LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.claimant_cov_det_ak_id = IN_claimant_cov_det_ak_id\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.cause_of_loss = IN_cause_of_loss\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.reserve_ctgry = IN_reserve_ctgry\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.type_disability = IN_type_disability\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.financial_type_code = 'D'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.trans_code = '23'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_D_23_trans_date.trans_date = trans_date\n\n\tLEFT JOIN LKP_CLAIM_TRANSACTION LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date\n\tON LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.claimant_cov_det_ak_id = IN_claimant_cov_det_ak_id\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.cause_of_loss = IN_cause_of_loss\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.reserve_ctgry = IN_reserve_ctgry\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.type_disability = IN_type_disability\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.financial_type_code = 'E'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.trans_code = '23'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_E_23_trans_date.trans_date = trans_date\n\n\tLEFT JOIN LKP_CLAIM_TRANSACTION LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date\n\tON LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.claimant_cov_det_ak_id = IN_claimant_cov_det_ak_id\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.cause_of_loss = IN_cause_of_loss\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.reserve_ctgry = IN_reserve_ctgry\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.type_disability = IN_type_disability\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.financial_type_code = 'B'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.trans_code = '33'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_B_33_trans_date.trans_date = trans_date\n\n\tLEFT JOIN LKP_CLAIM_TRANSACTION LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date\n\tON LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.claimant_cov_det_ak_id = IN_claimant_cov_det_ak_id\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.cause_of_loss = IN_cause_of_loss\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.reserve_ctgry = IN_reserve_ctgry\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.type_disability = IN_type_disability\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.financial_type_code = 'S'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.trans_code = '33'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_S_33_trans_date.trans_date = trans_date\n\n\tLEFT JOIN LKP_CLAIM_TRANSACTION LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date\n\tON LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.claimant_cov_det_ak_id = IN_claimant_cov_det_ak_id\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.cause_of_loss = IN_cause_of_loss\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.reserve_ctgry = IN_reserve_ctgry\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.type_disability = IN_type_disability\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.financial_type_code = 'R'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.trans_code = '33'\n\tAND LKP_CLAIM_TRANSACTION_IN_claimant_cov_det_ak_id_IN_cause_of_loss_IN_reserve_ctgry_IN_type_disability_R_33_trans_date.trans_date = trans_date\n\n),\nLKP_CoverageDetailDim AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tCoverageGuid,\n\tPolicyAKID,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT DISTINCT CDD.CoverageDetailDimid as CoverageDetailDimid, CDD.CoverageGuid as CoverageGuid, PC.PolicyAKID as PolicyAKID, CDD.EffectiveDate as EffectiveDate, CDD.ExpirationDate as ExpirationDate  \r\n\t\tFROM @{pipeline().parameters.DB_NAME_DATAMART}.DBO.CoverageDetailDim CDD\r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.PremiumTransaction PT on CDD.EDWPremiumTransactionPKId= PT.PremiumTransactionID\r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.RatingCoverage RC on PT.RatingCoverageAKId=RC.RatingCoverageAKID and PT.EffectiveDate = RC.EffectiveDate\r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.PolicyCoverage PC on RC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1 and PC.SourceSystemID = 'DCT'\r\n\t\tWHERE EXISTS (SELECT DISTINCT pol_ak_id FROM @{pipeline().parameters.DB_NAME_EDW}.dbo.loss_master_calculation  WHERE created_date > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tAND PC.PolicyAKID = pol_ak_id)\r\n\t\t\r\n\t\tUNION\r\n\t\t\r\n\t\tSELECT DISTINCT CDD.CoverageDetailDimid as CoverageDetailDimid, CDD.CoverageGuid as CoverageGuid, PC.PolicyAKID as PolicyAKID, CDD.EffectiveDate as EffectiveDate, CDD.ExpirationDate as ExpirationDate  \r\n\t\tFROM @{pipeline().parameters.DB_NAME_DATAMART}.DBO.CoverageDetailDim CDD\r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.PremiumTransaction PT on CDD.EDWPremiumTransactionPKId= PT.PremiumTransactionID\r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.statisticalCoverage SC on PT.StatisticalCoverageAKID=SC.StatisticalCoverageAKID \r\n\t\tINNER JOIN @{pipeline().parameters.DB_NAME_EDW}.DBO.PolicyCoverage PC on SC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1 and PC.SourceSystemID = 'PMS'\r\n\t\tWHERE EXISTS (SELECT DISTINCT pol_ak_id FROM @{pipeline().parameters.DB_NAME_EDW}.dbo.loss_master_calculation  WHERE created_date > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tAND PC.PolicyAKID = pol_ak_id)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGuid,PolicyAKID,EffectiveDate,ExpirationDate ORDER BY CoverageDetailDimId DESC) = 1\n),\nLKP_InsuranceReferenceCoverageDim_DCT AS (\n\tSELECT\n\tInsuranceReferenceCoverageDimId,\n\tInsuranceLineCode,\n\tDctRiskTypeCode,\n\tDctCoverageTypeCode,\n\tDctPerilGroup,\n\tDctSubCoverageTypeCode,\n\tDctCoverageVersion\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\tInsuranceLineCode,\n\t\t\tDctRiskTypeCode,\n\t\t\tDctCoverageTypeCode,\n\t\t\tDctPerilGroup,\n\t\t\tDctSubCoverageTypeCode,\n\t\t\tDctCoverageVersion\n\t\tFROM InsuranceReferenceCoverageDim\n\t\tWHERE NOT (DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctRiskTypeCode,DctCoverageTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY InsuranceReferenceCoverageDimId) = 1\n),\nLKP_Loss_Master_Dim_Find_Dim_Id AS (\n\tSELECT\n\tloss_master_dim_id,\n\tvariation_code,\n\tpol_type,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\tstatistical_code1,\n\tstatistical_code2,\n\tstatistical_code3,\n\tloss_master_cov_code,\n\trisk_state_prov_code,\n\trisk_zip_code,\n\tterr_code,\n\ttax_loc,\n\tclass_code,\n\texposure,\n\tsub_line_code,\n\tsource_sar_asl,\n\tsource_sar_sp_use_code,\n\tsource_statistical_line\n\tFROM (\n\t\tSELECT\r\n\t\tltrim(rtrim( loss_master_dim.loss_master_dim_id)) \t\t\tas loss_master_dim_id,\r\n\t\tltrim(rtrim(loss_master_dim.variation_code))\t\t\t\tas variation_code, \r\n\t\tltrim(rtrim(loss_master_dim.pol_type))\t\t\t\t\t\t\tas pol_type, \r\n\t\tltrim(rtrim(loss_master_dim.auto_reins_facility))\t \t\t\tas auto_reins_facility, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_brkdwn_line)) \t\tas statistical_brkdwn_line, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code1))\t\t\t\t as statistical_code1, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code2))\t \t\t\tas statistical_code2, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code3))\t\t \t\tas statistical_code3, \r\n\t\tltrim(rtrim(loss_master_dim.loss_master_cov_code))\t \tas loss_master_cov_code, \r\n\t\tltrim(rtrim(loss_master_dim.risk_state_prov_code))\t \t\tas risk_state_prov_code, \r\n\t\tltrim(rtrim(loss_master_dim.risk_zip_code))\t \t\t\t\tas risk_zip_code, \r\n\t\tltrim(rtrim(loss_master_dim.terr_code))\t \t\t\t\t\tas terr_code, \r\n\t\tltrim(rtrim(loss_master_dim.tax_loc)) \t\t\t\t\t\t\tas tax_loc, \r\n\t\tltrim(rtrim(loss_master_dim.class_code))\t \t\t\t\t\tas class_code, \r\n\t\tltrim(rtrim(loss_master_dim.exposure))\t \t\t\t\t\tas exposure, \r\n\t\tltrim(rtrim(loss_master_dim.sub_line_code))\t \t\t\t\tas sub_line_code, \r\n\t\tltrim(rtrim(loss_master_dim.source_sar_asl)) \t\t\t\tas source_sar_asl, \r\n\t\tltrim(rtrim(loss_master_dim.source_sar_sp_use_code)) \tas source_sar_sp_use_code, \r\n\t\tltrim(rtrim(loss_master_dim.source_statistical_line)) \t\tas source_statistical_line \r\n\t\tFROM loss_master_dim\r\n\t\twhere crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY variation_code,pol_type,auto_reins_facility,statistical_brkdwn_line,statistical_code1,statistical_code2,statistical_code3,loss_master_cov_code,risk_state_prov_code,risk_zip_code,terr_code,tax_loc,class_code,exposure,sub_line_code,source_sar_asl,source_sar_sp_use_code,source_statistical_line ORDER BY loss_master_dim_id DESC) = 1\n),\nLKP_Loss_Master_Dim_Find_Dim_Id_DCT AS (\n\tSELECT\n\tloss_master_dim_id,\n\tvariation_code,\n\tpol_type,\n\tauto_reins_facility,\n\tstatistical_brkdwn_line,\n\tstatistical_code1,\n\tstatistical_code2,\n\tstatistical_code3,\n\tloss_master_cov_code,\n\trisk_state_prov_code,\n\trisk_zip_code,\n\tterr_code,\n\ttax_loc,\n\tclass_code,\n\texposure,\n\tsub_line_code,\n\tsource_sar_asl,\n\tsource_sar_sp_use_code,\n\tsource_statistical_line\n\tFROM (\n\t\tSELECT\r\n\t\tltrim(rtrim( loss_master_dim.loss_master_dim_id)) \t\t\tas loss_master_dim_id,\r\n\t\tltrim(rtrim(loss_master_dim.risk_state_prov_code))\t \t\tas risk_state_prov_code, \r\n\t\tltrim(rtrim(loss_master_dim.risk_zip_code))\t \t\t\t\tas risk_zip_code, \r\n\t\tltrim(rtrim(loss_master_dim.terr_code))\t \t\t\t\t\tas terr_code, \r\n\t\tltrim(rtrim(loss_master_dim.tax_loc)) \t\t\t\t\t\t\tas tax_loc, \r\n\t\tltrim(rtrim(loss_master_dim.class_code))\t \t\t\t\t\tas class_code, \r\n\t\tltrim(rtrim(loss_master_dim.exposure))\t \t\t\t\t\tas exposure, \r\n\t\tltrim(rtrim(loss_master_dim.sub_line_code))\t \t\t\t\tas sub_line_code, \r\n\t\tltrim(rtrim(loss_master_dim.variation_code))\t\t\t\tas variation_code, \r\n\t\tltrim(rtrim(loss_master_dim.pol_type))\t\t\t\t\t\t\tas pol_type, \r\n\t\tltrim(rtrim(loss_master_dim.auto_reins_facility))\t \t\t\tas auto_reins_facility, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_brkdwn_line)) \t\tas statistical_brkdwn_line, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code1))\t\t\t\t as statistical_code1, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code2))\t \t\t\tas statistical_code2, \r\n\t\tltrim(rtrim(loss_master_dim.statistical_code3))\t\t \t\tas statistical_code3, \r\n\t\tltrim(rtrim(loss_master_dim.loss_master_cov_code))\t \tas loss_master_cov_code, \r\n\t\tltrim(rtrim(loss_master_dim.source_sar_asl)) \t\t\t\tas source_sar_asl, \r\n\t\tltrim(rtrim(loss_master_dim.source_sar_sp_use_code)) \tas source_sar_sp_use_code, \r\n\t\tltrim(rtrim(loss_master_dim.source_statistical_line)) \t\tas source_statistical_line \r\n\t\tFROM loss_master_dim\r\n\t\twhere crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY variation_code,pol_type,auto_reins_facility,statistical_brkdwn_line,statistical_code1,statistical_code2,statistical_code3,loss_master_cov_code,risk_state_prov_code,risk_zip_code,terr_code,tax_loc,class_code,exposure,sub_line_code,source_sar_asl,source_sar_sp_use_code,source_statistical_line ORDER BY loss_master_dim_id DESC) = 1\n),\nLKP_claim_financial_type_dim AS (\n\tSELECT\n\tclaim_financial_type_dim_id,\n\tfinancial_type_code\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_financial_type_dim_id,\n\t\t\tfinancial_type_code\n\t\tFROM claim_financial_type_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY financial_type_code ORDER BY claim_financial_type_dim_id DESC) = 1\n),\nLKP_reinsurance_coverage_dim1 AS (\n\tSELECT\n\treins_cov_dim_id,\n\tedw_reins_cov_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\treins_cov_dim_id,\n\t\t\tedw_reins_cov_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM reinsurance_coverage_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_reins_cov_ak_id,eff_from_date,eff_to_date ORDER BY reins_cov_dim_id DESC) = 1\n),\nlkp_claim_transaction_type_dim2 AS (\n\tSELECT\n\tclaim_trans_type_dim_id,\n\ttype_disability,\n\tpms_trans_code,\n\ttrans_ctgry_code,\n\toffset_onset_ind,\n\ttrans_kind_code,\n\ttrans_rsn\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_trans_type_dim_id,\n\t\t\ttype_disability,\n\t\t\tpms_trans_code,\n\t\t\ttrans_ctgry_code,\n\t\t\toffset_onset_ind,\n\t\t\ttrans_kind_code,\n\t\t\ttrans_rsn\n\t\tFROM claim_transaction_type_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_disability,pms_trans_code,trans_ctgry_code,offset_onset_ind,trans_kind_code,trans_rsn ORDER BY claim_trans_type_dim_id DESC) = 1\n),\nmplt_Claim_Payment_Category_type_Dim_id AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Get_Values AS (\n\t\tSELECT\n\t\tIN_Claim_Pay_AK_ID,\n\t\tIN_trans_date\n\t\tFROM Input\n\t),\n\tLKP_Claim_Payment_Category AS (\n\t\tSELECT\n\t\tclaim_pay_ctgry_ak_id,\n\t\tclaim_pay_ak_id,\n\t\tclaim_pay_ctgry_type,\n\t\tclaim_pay_ctgry_lump_sum_ind,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT claim_payment_category.claim_pay_ctgry_ak_id as claim_pay_ctgry_ak_id, claim_payment_category.claim_pay_ctgry_type as claim_pay_ctgry_type, claim_payment_category.claim_pay_ctgry_lump_sum_ind as claim_pay_ctgry_lump_sum_ind, claim_payment_category.claim_pay_ak_id as claim_pay_ak_id, claim_payment_category.eff_from_date as eff_from_date, claim_payment_category.eff_to_date as eff_to_date FROM claim_payment_category\r\n\t\t\tWHERE crrnt_snpsht_flag = 1\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_ak_id,eff_from_date,eff_to_date ORDER BY claim_pay_ctgry_ak_id) = 1\n\t),\n\tLKP_Claim_Pay_Ctgry_Dim_id AS (\n\t\tSELECT\n\t\tclaim_pay_ctgry_type_dim_id,\n\t\tclaim_pay_ctgry_type,\n\t\tclaim_pay_ctgry_type_descript,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tclaim_pay_ctgry_lump_sum_ind,\n\t\tIN_claim_pay_ctgry_type,\n\t\tIN_claim_pay_ctgry_lump_sum_id,\n\t\tIN_trans_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_pay_ctgry_type_dim_id,\n\t\t\t\tclaim_pay_ctgry_type,\n\t\t\t\tclaim_pay_ctgry_type_descript,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date,\n\t\t\t\tclaim_pay_ctgry_lump_sum_ind,\n\t\t\t\tIN_claim_pay_ctgry_type,\n\t\t\t\tIN_claim_pay_ctgry_lump_sum_id,\n\t\t\t\tIN_trans_date\n\t\t\tFROM claim_payment_category_type_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_ctgry_type,claim_pay_ctgry_lump_sum_ind,eff_from_date,eff_to_date ORDER BY claim_pay_ctgry_type_dim_id) = 1\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tLKP_Claim_Pay_Ctgry_Dim_id.claim_pay_ctgry_type_dim_id, \n\t\tLKP_Claim_Payment_Category.claim_pay_ctgry_ak_id, \n\t\tLKP_Claim_Payment_Category.claim_pay_ak_id\n\t\tFROM \n\t\tLEFT JOIN LKP_Claim_Pay_Ctgry_Dim_id\n\t\tON LKP_Claim_Pay_Ctgry_Dim_id.claim_pay_ctgry_type = LKP_Claim_Payment_Category.claim_pay_ctgry_type AND LKP_Claim_Pay_Ctgry_Dim_id.claim_pay_ctgry_lump_sum_ind = LKP_Claim_Payment_Category.claim_pay_ctgry_lump_sum_ind AND LKP_Claim_Pay_Ctgry_Dim_id.eff_from_date <= EXP_Get_Values.IN_trans_date AND LKP_Claim_Pay_Ctgry_Dim_id.eff_to_date >= EXP_Get_Values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Payment_Category\n\t\tON LKP_Claim_Payment_Category.claim_pay_ak_id = EXP_Get_Values.IN_Claim_Pay_AK_ID AND LKP_Claim_Payment_Category.eff_from_date <= EXP_Get_Values.IN_trans_date AND LKP_Claim_Payment_Category.eff_to_date >= EXP_Get_Values.IN_trans_date\n\t),\n),\nmplt_Claim_occurence_dim_id AS (WITH\n\tLKP_claim_representative AS (\n\t\tSELECT\n\t\tclaim_rep_wbconnect_user_id,\n\t\tclaim_rep_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tCASE claim_representative.claim_rep_wbconnect_user_id  WHEN 'N/A' THEN claim_representative.claim_rep_key \r\n\t\t\tELSE claim_representative.claim_rep_wbconnect_user_id END AS claim_rep_wbconnect_user_id, claim_representative.claim_rep_ak_id as claim_rep_ak_id, claim_representative.eff_from_date as eff_from_date, claim_representative.eff_to_date as eff_to_date FROM claim_representative\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_ak_id,eff_from_date,eff_to_date ORDER BY claim_rep_wbconnect_user_id DESC) = 1\n\t),\n\tLKP_claim_rep_dim AS (\n\t\tSELECT\n\t\tclaim_rep_dim_id,\n\t\tclaim_rep_wbconnect_user_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_rep_dim_id,\n\t\t\t\tclaim_rep_wbconnect_user_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_representative_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_wbconnect_user_id,eff_from_date,eff_to_date ORDER BY claim_rep_dim_id DESC) = 1\n\t),\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_get_values AS (\n\t\tSELECT\n\t\tIN_claimant_cov_det_ak_id,\n\t\tIN_trans_date\n\t\tFROM INPUT\n\t),\n\tLKP_Claimant_coverage_detail AS (\n\t\tSELECT\n\t\tclaim_party_occurrence_ak_id,\n\t\tclaimant_cov_det_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_party_occurrence_ak_id,\n\t\t\t\tclaimant_cov_det_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claimant_coverage_detail\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,eff_from_date,eff_to_date ORDER BY claim_party_occurrence_ak_id DESC) = 1\n\t),\n\tLKP_Claim_Party_occurrence AS (\n\t\tSELECT\n\t\tclaim_occurrence_ak_id,\n\t\tclaim_case_ak_id,\n\t\tclaim_party_occurrence_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT claim_party_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, claim_party_occurrence.claim_case_ak_id as claim_case_ak_id, claim_party_occurrence.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, claim_party_occurrence.eff_from_date as eff_from_date, claim_party_occurrence.eff_to_date as eff_to_date \r\n\t\t\tFROM claim_party_occurrence\r\n\t\t\tWHERE\r\n\t\t\tclaim_party_occurrence.claim_party_role_code in ('CMT','CLMT')\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_occurrence_ak_id) = 1\n\t),\n\tLKP_Claim_Rep_Occurrence_PLH AS (\n\t\tSELECT\n\t\tclaim_rep_ak_id,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tclaim_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT claim_representative_occurrence.claim_rep_ak_id as claim_rep_ak_id, claim_representative_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, claim_representative_occurrence.eff_from_date as eff_from_date, claim_representative_occurrence.eff_to_date as eff_to_date FROM claim_representative_occurrence\r\n\t\t\tWHERE LTRIM(RTRIM(claim_representative_occurrence.claim_rep_role_code))  = 'PLH'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_rep_ak_id DESC) = 1\n\t),\n\tLKP_Claim_Case AS (\n\t\tSELECT\n\t\tclaim_case_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_case_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_case\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_ak_id,eff_from_date,eff_to_date ORDER BY claim_case_ak_id) = 1\n\t),\n\tEXP_get_reserve_calc_ids AS (\n\t\tSELECT\n\t\tLKP_Claim_Party_occurrence.claim_occurrence_ak_id,\n\t\t-- *INF*: IIF(ISNULL(claim_occurrence_ak_id), -1, claim_occurrence_ak_id)\n\t\tIFF(claim_occurrence_ak_id IS NULL, - 1, claim_occurrence_ak_id) AS claim_occurrence_ak_id_out,\n\t\tEXP_get_values.IN_trans_date\n\t\tFROM EXP_get_values\n\t\tLEFT JOIN LKP_Claim_Party_occurrence\n\t\tON LKP_Claim_Party_occurrence.claim_party_occurrence_ak_id = LKP_Claimant_coverage_detail.claim_party_occurrence_ak_id AND LKP_Claim_Party_occurrence.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Party_occurrence.eff_to_date >= EXP_get_values.IN_trans_date\n\t),\n\tLKP_claim_occurrence_Date AS (\n\t\tSELECT\n\t\tclaim_occurrence_id,\n\t\tpol_key_ak_id,\n\t\tclaim_loss_date,\n\t\tclaim_discovery_date,\n\t\tclaim_cat_start_date,\n\t\tclaim_cat_end_date,\n\t\tclaim_created_by_key,\n\t\tclaim_occurrence_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_occurrence_id,\n\t\t\t\tpol_key_ak_id,\n\t\t\t\tclaim_loss_date,\n\t\t\t\tclaim_discovery_date,\n\t\t\t\tclaim_cat_start_date,\n\t\t\t\tclaim_cat_end_date,\n\t\t\t\tclaim_created_by_key,\n\t\t\t\tclaim_occurrence_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_occurrence\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_occurrence_id DESC) = 1\n\t),\n\tLKP_Claim_Rep_Occurrence_Handler AS (\n\t\tSELECT\n\t\tclaim_rep_ak_id,\n\t\tclaim_assigned_date,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tclaim_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT claim_representative_occurrence.claim_rep_ak_id as claim_rep_ak_id, claim_representative_occurrence.claim_assigned_date as claim_assigned_date, claim_representative_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, claim_representative_occurrence.eff_from_date as eff_from_date, claim_representative_occurrence.eff_to_date as eff_to_date FROM claim_representative_occurrence\r\n\t\t\tWHERE LTRIM(RTRIM(claim_representative_occurrence.claim_rep_role_code))  = 'H'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_rep_ak_id DESC) = 1\n\t),\n\tLKP_Claim_Rep_Occurrence_Examiner AS (\n\t\tSELECT\n\t\tclaim_rep_ak_id,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tclaim_occurrence_ak_id\n\t\tFROM (\n\t\t\tSELECT claim_representative_occurrence.claim_rep_ak_id as claim_rep_ak_id, claim_representative_occurrence.claim_occurrence_ak_id as claim_occurrence_ak_id, claim_representative_occurrence.eff_from_date as eff_from_date, claim_representative_occurrence.eff_to_date as eff_to_date FROM claim_representative_occurrence\r\n\t\t\tWHERE LTRIM(RTRIM(claim_representative_occurrence.claim_rep_role_code))  = 'E'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_rep_ak_id DESC) = 1\n\t),\n\tLKP_claim_occurrence_dim AS (\n\t\tSELECT\n\t\tclaim_occurrence_dim_id,\n\t\tsource_claim_rpted_date,\n\t\tclaim_rpted_date,\n\t\tclaim_scripted_date,\n\t\tclaim_open_date,\n\t\tclaim_close_date,\n\t\tclaim_reopen_date,\n\t\tclaim_closed_after_reopen_date,\n\t\tclaim_notice_only_date,\n\t\tedw_claim_occurrence_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_occurrence_dim_id,\n\t\t\t\tsource_claim_rpted_date,\n\t\t\t\tclaim_rpted_date,\n\t\t\t\tclaim_scripted_date,\n\t\t\t\tclaim_open_date,\n\t\t\t\tclaim_close_date,\n\t\t\t\tclaim_reopen_date,\n\t\t\t\tclaim_closed_after_reopen_date,\n\t\t\t\tclaim_notice_only_date,\n\t\t\t\tedw_claim_occurrence_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_occurrence_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_occurrence_dim_id DESC) = 1\n\t),\n\tLKP_Claim_Created_by_rep_ak_id AS (\n\t\tSELECT\n\t\tclaim_rep_ak_id,\n\t\tclaim_rep_wbconnect_user_id,\n\t\tclaim_rep_key,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_rep_ak_id,\n\t\t\t\tclaim_rep_wbconnect_user_id,\n\t\t\t\tclaim_rep_key,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_representative\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_key,eff_from_date,eff_to_date ORDER BY claim_rep_ak_id) = 1\n\t),\n\tLKP_Claim_Case_Dim AS (\n\t\tSELECT\n\t\tclaim_case_dim_id,\n\t\tedw_claim_case_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_case_dim_id,\n\t\t\t\tedw_claim_case_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claim_case_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_case_ak_id,eff_from_date,eff_to_date ORDER BY claim_case_dim_id) = 1\n\t),\n\tLKP_V2_policy AS (\n\t\tSELECT\n\t\tpol_id,\n\t\tcontract_cust_ak_id,\n\t\tagency_ak_id,\n\t\tAgencyAKID,\n\t\tStrategicProfitCenterAKId,\n\t\tInsuranceSegmentAKId,\n\t\tPolicyOfferingAKId,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpol_sym,\n\t\tpol_num,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.pol_id as pol_id, policy.contract_cust_ak_id as contract_cust_ak_id, \r\n\t\t\tpolicy.agency_ak_id as agency_ak_id,\r\n\t\t\tpolicy.AgencyAKID as AgencyAKID, \r\n\t\t\tpolicy.StrategicProfitCenterAKId as StrategicProfitCenterAKId,\r\n\t\t\tpolicy.InsuranceSegmentAKId as InsuranceSegmentAKId,\r\n\t\t\tpolicy.PolicyOfferingAKId as PolicyOfferingAKId,\r\n\t\t\tpolicy.pol_eff_date as pol_eff_date, policy.pol_exp_date as pol_exp_date, policy.pol_sym as pol_sym, policy.pol_num as pol_num, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date \r\n\t\t\tFROM \r\n\t\t\tv2.policy policy\r\n\t\t\tWHERE \r\n\t\t\tpolicy.pol_ak_id IN (select distinct pol_key_ak_id from claim_occurrence)\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_id DESC) = 1\n\t),\n\tLKP_contract_customer_dim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT contract_customer_dim.contract_cust_dim_id as contract_cust_dim_id, contract_customer_dim.edw_contract_cust_ak_id as edw_contract_cust_ak_id, contract_customer_dim.eff_from_date as eff_from_date, contract_customer_dim.eff_to_date as eff_to_date \r\n\t\t\tFROM contract_customer_dim\r\n\t\t\tWHERE edw_contract_cust_ak_id IN\r\n\t\t\t(\r\n\t\t\tSELECT DISTINCT CC.contract_cust_ak_id \r\n\t\t\tFROM @{pipeline().parameters.DB_NAME_EDW}.dbo.contract_customer CC, @{pipeline().parameters.DB_NAME_EDW}.V2.policy P, @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_occurrence CO\r\n\t\t\tWHERE CC.contract_cust_ak_id = P.contract_cust_ak_id\r\n\t\t\tAND CO.pol_key_ak_id = P.pol_ak_id\r\n\t\t\tAND P.crrnt_snpsht_flag = 1\r\n\t\t\tAND CC.crrnt_snpsht_flag = 1\r\n\t\t\t)\r\n\t\t\t\r\n\t\t\t--- 2/12/2014 : Modified the Lookup Query to join on AK ID values instead of Natural Key\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tLKP_AgencyDim AS (\n\t\tSELECT\n\t\tAgencyDimID,\n\t\tEDWAgencyAKID,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tAgencyDimID,\n\t\t\t\tEDWAgencyAKID,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM V3.AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID,EffectiveDate,ExpirationDate ORDER BY AgencyDimID DESC) = 1\n\t),\n\tLKP_V2_Agency AS (\n\t\tSELECT\n\t\tSalesTerritoryAKID,\n\t\tRegionalSalesManagerAKID,\n\t\tAgencyAKID,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tSalesTerritoryAKID,\n\t\t\t\tRegionalSalesManagerAKID,\n\t\t\t\tAgencyAKID,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Agency\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyAKID,EffectiveDate,ExpirationDate ORDER BY SalesTerritoryAKID) = 1\n\t),\n\tLKP_agency_dim AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tagency_dim_id,\n\t\t\t\tedw_agency_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM V2.agency_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_Policy_Dim AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tedw_pol_pk_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tpolicy_dim.pol_dim_id as pol_dim_id, \r\n\t\t\tpolicy_dim.edw_pol_pk_id as edw_pol_pk_id, \r\n\t\t\tpolicy_dim.eff_from_date as eff_from_date, \r\n\t\t\tpolicy_dim.eff_to_date as eff_to_date \r\n\t\t\tFROM policy_dim\r\n\t\t\tWHERE edw_pol_pk_id IN \r\n\t\t\t(SELECT policy.pol_id as pol_id FROM @{pipeline().parameters.DB_NAME_EDW}.v2.policy policy\r\n\t\t\tWHERE policy.pol_ak_id IN (select distinct pol_key_ak_id from @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_occurrence))\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_pk_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tEXP_Lkp_Dim_ids AS (\n\t\tSELECT\n\t\tEXP_get_reserve_calc_ids.IN_trans_date,\n\t\tLKP_Claim_Rep_Occurrence_Handler.claim_rep_ak_id AS claim_rep_primary_rep_ak_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REPRESENTATIVE(claim_rep_primary_rep_ak_id, IN_trans_date)\n\t\tLKP_CLAIM_REPRESENTATIVE_claim_rep_primary_rep_ak_id_IN_trans_date.claim_rep_wbconnect_user_id AS v_claim_rep_primary_rep_wbconnect_user_id,\n\t\tLKP_Claim_Rep_Occurrence_Examiner.claim_rep_ak_id AS claim_rep_examiner_ak_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REPRESENTATIVE(claim_rep_examiner_ak_id, IN_trans_date)\n\t\tLKP_CLAIM_REPRESENTATIVE_claim_rep_examiner_ak_id_IN_trans_date.claim_rep_wbconnect_user_id AS v_claim_rep_examiner_wbconnect_user_id,\n\t\tLKP_Claim_Rep_Occurrence_PLH.claim_rep_ak_id AS claim_rep_primary_lit_handler_ak_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REPRESENTATIVE(claim_rep_primary_lit_handler_ak_id, IN_trans_date)\n\t\tLKP_CLAIM_REPRESENTATIVE_claim_rep_primary_lit_handler_ak_id_IN_trans_date.claim_rep_wbconnect_user_id AS v_claim_rep_primary_lit_handler_wbconnect_user_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REP_DIM(claim_rep_primary_rep_ak_id, v_claim_rep_primary_rep_wbconnect_user_id, IN_trans_date)\n\t\tLKP_CLAIM_REP_DIM_claim_rep_primary_rep_ak_id_v_claim_rep_primary_rep_wbconnect_user_id_IN_trans_date.claim_rep_dim_id AS claim_rep_dim_prim_claim_rep_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REP_DIM(claim_rep_examiner_ak_id, v_claim_rep_examiner_wbconnect_user_id, IN_trans_date)\n\t\tLKP_CLAIM_REP_DIM_claim_rep_examiner_ak_id_v_claim_rep_examiner_wbconnect_user_id_IN_trans_date.claim_rep_dim_id AS claim_rep_dim_examiner_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REP_DIM(claim_rep_primary_lit_handler_ak_id, v_claim_rep_primary_lit_handler_wbconnect_user_id, IN_trans_date)\n\t\tLKP_CLAIM_REP_DIM_claim_rep_primary_lit_handler_ak_id_v_claim_rep_primary_lit_handler_wbconnect_user_id_IN_trans_date.claim_rep_dim_id AS claim_rep_dim_prim_litigation_handler_id,\n\t\tLKP_Claim_Created_by_rep_ak_id.claim_rep_ak_id,\n\t\tLKP_Claim_Created_by_rep_ak_id.claim_rep_wbconnect_user_id,\n\t\t-- *INF*: :LKP.LKP_CLAIM_REP_DIM(claim_rep_ak_id,claim_rep_wbconnect_user_id,IN_trans_date)\n\t\tLKP_CLAIM_REP_DIM_claim_rep_ak_id_claim_rep_wbconnect_user_id_IN_trans_date.claim_rep_dim_id AS claim_created_by_id\n\t\tFROM EXP_get_reserve_calc_ids\n\t\tLEFT JOIN LKP_Claim_Created_by_rep_ak_id\n\t\tON LKP_Claim_Created_by_rep_ak_id.claim_rep_key = LKP_claim_occurrence_Date.claim_created_by_key AND LKP_Claim_Created_by_rep_ak_id.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Created_by_rep_ak_id.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Rep_Occurrence_Examiner\n\t\tON LKP_Claim_Rep_Occurrence_Examiner.claim_occurrence_ak_id = LKP_Claim_Party_occurrence.claim_occurrence_ak_id AND LKP_Claim_Rep_Occurrence_Examiner.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Rep_Occurrence_Examiner.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Rep_Occurrence_Handler\n\t\tON LKP_Claim_Rep_Occurrence_Handler.claim_occurrence_ak_id = LKP_Claim_Party_occurrence.claim_occurrence_ak_id AND LKP_Claim_Rep_Occurrence_Handler.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Rep_Occurrence_Handler.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Rep_Occurrence_PLH\n\t\tON LKP_Claim_Rep_Occurrence_PLH.claim_occurrence_ak_id = LKP_Claim_Party_occurrence.claim_occurrence_ak_id AND LKP_Claim_Rep_Occurrence_PLH.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Rep_Occurrence_PLH.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_CLAIM_REPRESENTATIVE LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_rep_ak_id_IN_trans_date\n\t\tON LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_rep_ak_id_IN_trans_date.claim_rep_ak_id = claim_rep_primary_rep_ak_id\n\t\tAND LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_rep_ak_id_IN_trans_date.eff_from_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REPRESENTATIVE LKP_CLAIM_REPRESENTATIVE_claim_rep_examiner_ak_id_IN_trans_date\n\t\tON LKP_CLAIM_REPRESENTATIVE_claim_rep_examiner_ak_id_IN_trans_date.claim_rep_ak_id = claim_rep_examiner_ak_id\n\t\tAND LKP_CLAIM_REPRESENTATIVE_claim_rep_examiner_ak_id_IN_trans_date.eff_from_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REPRESENTATIVE LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_lit_handler_ak_id_IN_trans_date\n\t\tON LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_lit_handler_ak_id_IN_trans_date.claim_rep_ak_id = claim_rep_primary_lit_handler_ak_id\n\t\tAND LKP_CLAIM_REPRESENTATIVE_claim_rep_primary_lit_handler_ak_id_IN_trans_date.eff_from_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REP_DIM LKP_CLAIM_REP_DIM_claim_rep_primary_rep_ak_id_v_claim_rep_primary_rep_wbconnect_user_id_IN_trans_date\n\t\tON LKP_CLAIM_REP_DIM_claim_rep_primary_rep_ak_id_v_claim_rep_primary_rep_wbconnect_user_id_IN_trans_date.claim_rep_wbconnect_user_id = claim_rep_primary_rep_ak_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_primary_rep_ak_id_v_claim_rep_primary_rep_wbconnect_user_id_IN_trans_date.eff_from_date = v_claim_rep_primary_rep_wbconnect_user_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_primary_rep_ak_id_v_claim_rep_primary_rep_wbconnect_user_id_IN_trans_date.eff_to_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REP_DIM LKP_CLAIM_REP_DIM_claim_rep_examiner_ak_id_v_claim_rep_examiner_wbconnect_user_id_IN_trans_date\n\t\tON LKP_CLAIM_REP_DIM_claim_rep_examiner_ak_id_v_claim_rep_examiner_wbconnect_user_id_IN_trans_date.claim_rep_wbconnect_user_id = claim_rep_examiner_ak_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_examiner_ak_id_v_claim_rep_examiner_wbconnect_user_id_IN_trans_date.eff_from_date = v_claim_rep_examiner_wbconnect_user_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_examiner_ak_id_v_claim_rep_examiner_wbconnect_user_id_IN_trans_date.eff_to_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REP_DIM LKP_CLAIM_REP_DIM_claim_rep_primary_lit_handler_ak_id_v_claim_rep_primary_lit_handler_wbconnect_user_id_IN_trans_date\n\t\tON LKP_CLAIM_REP_DIM_claim_rep_primary_lit_handler_ak_id_v_claim_rep_primary_lit_handler_wbconnect_user_id_IN_trans_date.claim_rep_wbconnect_user_id = claim_rep_primary_lit_handler_ak_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_primary_lit_handler_ak_id_v_claim_rep_primary_lit_handler_wbconnect_user_id_IN_trans_date.eff_from_date = v_claim_rep_primary_lit_handler_wbconnect_user_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_primary_lit_handler_ak_id_v_claim_rep_primary_lit_handler_wbconnect_user_id_IN_trans_date.eff_to_date = IN_trans_date\n\t\n\t\tLEFT JOIN LKP_CLAIM_REP_DIM LKP_CLAIM_REP_DIM_claim_rep_ak_id_claim_rep_wbconnect_user_id_IN_trans_date\n\t\tON LKP_CLAIM_REP_DIM_claim_rep_ak_id_claim_rep_wbconnect_user_id_IN_trans_date.claim_rep_wbconnect_user_id = claim_rep_ak_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_ak_id_claim_rep_wbconnect_user_id_IN_trans_date.eff_from_date = claim_rep_wbconnect_user_id\n\t\tAND LKP_CLAIM_REP_DIM_claim_rep_ak_id_claim_rep_wbconnect_user_id_IN_trans_date.eff_to_date = IN_trans_date\n\t\n\t),\n\tLKP_RegionalSalesManager AS (\n\t\tSELECT\n\t\tSalesDirectorAKID,\n\t\tRegionalSalesManagerAKID,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tSalesDirectorAKID,\n\t\t\t\tRegionalSalesManagerAKID,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.RegionalSalesManager\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RegionalSalesManagerAKID,EffectiveDate,ExpirationDate ORDER BY SalesDirectorAKID) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tLKP_claim_occurrence_dim.claim_occurrence_dim_id, \n\t\tLKP_claim_occurrence_Date.claim_loss_date, \n\t\tLKP_claim_occurrence_Date.claim_discovery_date, \n\t\tLKP_claim_occurrence_dim.claim_scripted_date, \n\t\tLKP_claim_occurrence_dim.source_claim_rpted_date, \n\t\tLKP_claim_occurrence_dim.claim_rpted_date AS claim_occurrence_rpted_date, \n\t\tLKP_claim_occurrence_dim.claim_open_date, \n\t\tLKP_claim_occurrence_dim.claim_close_date, \n\t\tLKP_claim_occurrence_dim.claim_reopen_date, \n\t\tLKP_claim_occurrence_dim.claim_closed_after_reopen_date, \n\t\tLKP_claim_occurrence_dim.claim_notice_only_date, \n\t\tLKP_claim_occurrence_Date.claim_cat_start_date, \n\t\tLKP_claim_occurrence_Date.claim_cat_end_date, \n\t\tLKP_Claim_Rep_Occurrence_Handler.claim_assigned_date AS claim_rep_assigned_date, \n\t\tLKP_Claim_Rep_Occurrence_Handler.eff_to_date AS claim_rep_unassigned_date, \n\t\tEXP_Lkp_Dim_ids.claim_rep_dim_prim_claim_rep_id, \n\t\tEXP_Lkp_Dim_ids.claim_rep_dim_examiner_id, \n\t\tEXP_Lkp_Dim_ids.claim_rep_dim_prim_litigation_handler_id, \n\t\tLKP_Policy_Dim.pol_dim_id AS pol_key_dim_id, \n\t\tLKP_V2_policy.pol_eff_date, \n\t\tLKP_V2_policy.pol_exp_date, \n\t\tLKP_AgencyDim.AgencyDimID, \n\t\tEXP_Lkp_Dim_ids.claim_created_by_id, \n\t\tLKP_Claim_Case_Dim.claim_case_dim_id, \n\t\tLKP_contract_customer_dim.contract_cust_dim_id, \n\t\tLKP_V2_policy.pol_sym, \n\t\tLKP_V2_policy.pol_num, \n\t\tLKP_V2_policy.AgencyAKID, \n\t\tLKP_V2_Agency.SalesTerritoryAKID, \n\t\tLKP_V2_Agency.RegionalSalesManagerAKID, \n\t\tLKP_RegionalSalesManager.SalesDirectorAKID, \n\t\tLKP_V2_policy.StrategicProfitCenterAKId, \n\t\tLKP_V2_policy.InsuranceSegmentAKId, \n\t\tLKP_V2_policy.PolicyOfferingAKId, \n\t\tLKP_agency_dim.agency_dim_id, \n\t\tLKP_claim_occurrence_Date.pol_key_ak_id AS PolicyAkid\n\t\tFROM EXP_Lkp_Dim_ids\n\t\tLEFT JOIN LKP_AgencyDim\n\t\tON LKP_AgencyDim.EDWAgencyAKID = LKP_V2_policy.AgencyAKID AND LKP_AgencyDim.EffectiveDate <= EXP_get_values.IN_trans_date AND LKP_AgencyDim.ExpirationDate >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Case_Dim\n\t\tON LKP_Claim_Case_Dim.edw_claim_case_ak_id = LKP_Claim_Case.claim_case_ak_id AND LKP_Claim_Case_Dim.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Case_Dim.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Claim_Rep_Occurrence_Handler\n\t\tON LKP_Claim_Rep_Occurrence_Handler.claim_occurrence_ak_id = LKP_Claim_Party_occurrence.claim_occurrence_ak_id AND LKP_Claim_Rep_Occurrence_Handler.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Claim_Rep_Occurrence_Handler.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_Policy_Dim\n\t\tON LKP_Policy_Dim.edw_pol_pk_id = LKP_V2_policy.pol_id AND LKP_Policy_Dim.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_Policy_Dim.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_RegionalSalesManager\n\t\tON LKP_RegionalSalesManager.RegionalSalesManagerAKID = LKP_V2_Agency.RegionalSalesManagerAKID AND LKP_RegionalSalesManager.EffectiveDate <= EXP_get_values.IN_trans_date AND LKP_RegionalSalesManager.ExpirationDate >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_V2_Agency\n\t\tON LKP_V2_Agency.AgencyAKID = LKP_V2_policy.AgencyAKID AND LKP_V2_Agency.EffectiveDate <= EXP_get_values.IN_trans_date AND LKP_V2_Agency.ExpirationDate >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_V2_policy\n\t\tON LKP_V2_policy.pol_ak_id = LKP_claim_occurrence_Date.pol_key_ak_id AND LKP_V2_policy.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_V2_policy.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_agency_dim\n\t\tON LKP_agency_dim.edw_agency_ak_id = LKP_V2_policy.agency_ak_id AND LKP_agency_dim.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_agency_dim.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_claim_occurrence_Date\n\t\tON LKP_claim_occurrence_Date.claim_occurrence_ak_id = LKP_Claim_Party_occurrence.claim_occurrence_ak_id AND LKP_claim_occurrence_Date.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_claim_occurrence_Date.eff_to_date >= EXP_get_values.IN_trans_date\n\t\tLEFT JOIN LKP_claim_occurrence_dim\n\t\tON LKP_claim_occurrence_dim.edw_claim_occurrence_ak_id = EXP_get_reserve_calc_ids.claim_occurrence_ak_id_out AND LKP_claim_occurrence_dim.eff_from_date <= EXP_get_reserve_calc_ids.IN_trans_date AND LKP_claim_occurrence_dim.eff_to_date >= EXP_get_reserve_calc_ids.IN_trans_date\n\t\tLEFT JOIN LKP_contract_customer_dim\n\t\tON LKP_contract_customer_dim.edw_contract_cust_ak_id = LKP_V2_policy.contract_cust_ak_id AND LKP_contract_customer_dim.eff_from_date <= EXP_get_values.IN_trans_date AND LKP_contract_customer_dim.eff_to_date >= EXP_get_values.IN_trans_date\n\t),\n),\nmplt_Claimant_dim_id AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_get_values AS (\n\t\tSELECT\n\t\tIN_claimant_cov_det_ak_id,\n\t\tIN_trans_date\n\t\tFROM INPUT\n\t),\n\tLKP_Claimant_coverage_detail AS (\n\t\tSELECT\n\t\tclaim_party_occurrence_ak_id,\n\t\tclaimant_cov_det_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaim_party_occurrence_ak_id,\n\t\t\t\tclaimant_cov_det_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claimant_coverage_detail\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,eff_from_date,eff_to_date ORDER BY claim_party_occurrence_ak_id DESC) = 1\n\t),\n\tLKP_CLAIMANT_DIM AS (\n\t\tSELECT\n\t\tclaimant_dim_id,\n\t\tedw_claim_party_occurrence_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT claimant_dim.claimant_dim_id as claimant_dim_id, claimant_dim.edw_claim_party_occurrence_ak_id as edw_claim_party_occurrence_ak_id, claimant_dim.eff_from_date as eff_from_date, claimant_dim.eff_to_date as eff_to_date \r\n\t\t\tFROM claimant_dim\r\n\t\t\tWHERE edw_claim_party_occurrence_ak_id IN\r\n\t\t\t(select claim_party_occurrence_ak_id from @{pipeline().parameters.DB_NAME_EDW}.dbo.claim_party_occurrence where claim_party_role_code in ('CMT','CLMT'))\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_party_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claimant_dim_id DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tclaimant_dim_id\n\t\tFROM LKP_CLAIMANT_DIM\n\t),\n),\nmplt_PMS_Coverage_Agency_InsuranceReference_DimIDs AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_GetSource AS (\n\t\tSELECT\n\t\tAgencyAKId,\n\t\tSalesTerritoryAKID,\n\t\tRegionalSalesManagerAKID,\n\t\tSalesDirectorAKID,\n\t\tInsuranceLine,\n\t\tClassCode,\n\t\tTypeBureauCode,\n\t\tRiskUnitGroup,\n\t\tRiskUnit,\n\t\tMajorPerilCode,\n\t\tSupSpecialClassGroupId,\n\t\tSupPackageModificationAdjustmentGroupId,\n\t\tSupIncreasedLimitGroupId,\n\t\tStrategicProfitCenterAKId,\n\t\tInsuranceSegmentAKId,\n\t\tPolicyOfferingAKId,\n\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\tProductAKId,\n\t\ttrans_date,\n\t\tProductTypeCode,\n\t\tRatingPlanAKId\n\t\tFROM Input\n\t),\n\tLKP_RatingPlan AS (\n\t\tSELECT\n\t\tRatingPlanCode,\n\t\tRatingPlanAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRatingPlanCode,\n\t\t\t\tRatingPlanAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingPlan\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingPlanAKId,EffectiveDate,ExpirationDate ORDER BY RatingPlanCode) = 1\n\t),\n\tLKP_PolicyOffering AS (\n\t\tSELECT\n\t\tPolicyOfferingCode,\n\t\tPolicyOfferingAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tPolicyOfferingCode,\n\t\t\t\tPolicyOfferingAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOfferingAKId,EffectiveDate,ExpirationDate ORDER BY PolicyOfferingCode) = 1\n\t),\n\tLKP_InsuranceSegment AS (\n\t\tSELECT\n\t\tInsuranceSegmentCode,\n\t\tInsuranceSegmentAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tInsuranceSegmentCode,\n\t\t\t\tInsuranceSegmentAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentAKId,EffectiveDate,ExpirationDate ORDER BY InsuranceSegmentCode) = 1\n\t),\n\tLKP_StrategicProfitCenter AS (\n\t\tSELECT\n\t\tEnterpriseGroupId,\n\t\tInsuranceReferenceLegalEntityId,\n\t\tStrategicProfitCenterCode,\n\t\tStrategicProfitCenterAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tEnterpriseGroupId,\n\t\t\t\tInsuranceReferenceLegalEntityId,\n\t\t\t\tStrategicProfitCenterCode,\n\t\t\t\tStrategicProfitCenterAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAKId,EffectiveDate,ExpirationDate ORDER BY EnterpriseGroupId) = 1\n\t),\n\tLKP_Product AS (\n\t\tSELECT\n\t\tProductCode,\n\t\tProductAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tProductCode,\n\t\t\t\tProductAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Product\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProductAKId,EffectiveDate,ExpirationDate ORDER BY ProductCode) = 1\n\t),\n\tLKP_sup_insurance_line AS (\n\t\tSELECT\n\t\tStandardInsuranceLineCode,\n\t\tins_line_code,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tStandardInsuranceLineCode,\n\t\t\t\tins_line_code,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_code,eff_from_date,eff_to_date ORDER BY StandardInsuranceLineCode) = 1\n\t),\n\tLKP_InsuranceReferenceLineOfBusiness AS (\n\t\tSELECT\n\t\tInsuranceReferenceLineOfBusinessCode,\n\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceReferenceLineOfBusinessAKId,EffectiveDate,ExpirationDate ORDER BY InsuranceReferenceLineOfBusinessCode) = 1\n\t),\n\tLKP_EnterpriseGroup AS (\n\t\tSELECT\n\t\tEnterpriseGroupCode,\n\t\tEnterpriseGroupId\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tEnterpriseGroupCode,\n\t\t\t\tEnterpriseGroupId\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.EnterpriseGroup\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EnterpriseGroupId ORDER BY EnterpriseGroupCode) = 1\n\t),\n\tLKP_InsuranceReferenceLegalEntity AS (\n\t\tSELECT\n\t\tInsuranceReferenceLegalEntityCode,\n\t\tInsuranceReferenceLegalEntityId\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\t\tInsuranceReferenceLegalEntityId\n\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLegalEntity\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceReferenceLegalEntityId ORDER BY InsuranceReferenceLegalEntityCode) = 1\n\t),\n\tEXP_GetCodes AS (\n\t\tSELECT\n\t\tLKP_sup_insurance_line.StandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\t\tLKP_StrategicProfitCenter.StrategicProfitCenterCode AS i_StrategicProfitCenterCode,\n\t\tLKP_InsuranceSegment.InsuranceSegmentCode AS i_InsuranceSegmentCode,\n\t\tLKP_PolicyOffering.PolicyOfferingCode AS i_PolicyOfferingCode,\n\t\tLKP_Product.ProductCode AS i_ProductCode,\n\t\tLKP_InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessCode AS i_InsuranceReferenceLineOfBusinessCode,\n\t\tLKP_EnterpriseGroup.EnterpriseGroupCode AS i_EnterpriseGroupCode,\n\t\tLKP_InsuranceReferenceLegalEntity.InsuranceReferenceLegalEntityCode AS i_InsuranceReferenceLegalEntityCode,\n\t\tEXP_GetSource.MajorPerilCode AS i_MajorPerilCode,\n\t\t-- *INF*: DECODE(TRUE, \r\n\t\t-- ISNULL(i_MajorPerilCode),'N/A',\r\n\t\t-- IS_SPACES(i_MajorPerilCode),'N/A',\r\n\t\t-- LENGTH(i_MajorPerilCode)=0,'N/A', \r\n\t\t-- LTRIM(RTRIM(i_MajorPerilCode)))\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    i_MajorPerilCode IS NULL, 'N/A',\n\t\t    LENGTH(i_MajorPerilCode)>0 AND TRIM(i_MajorPerilCode)='', 'N/A',\n\t\t    LENGTH(i_MajorPerilCode) = 0, 'N/A',\n\t\t    LTRIM(RTRIM(i_MajorPerilCode))\n\t\t) AS v_MajorPerilCode,\n\t\t-- *INF*: IIF(REG_MATCH(v_MajorPerilCode,'[^0-9a-zA-Z]') OR LTRIM(v_MajorPerilCode,'0')='','N/A',v_MajorPerilCode)\n\t\tIFF(\n\t\t    REGEXP_LIKE(v_MajorPerilCode, '[^0-9a-zA-Z]') OR LTRIM(v_MajorPerilCode, '0') = '', 'N/A',\n\t\t    v_MajorPerilCode\n\t\t) AS v_Reg_MajorPerilCode,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- ISNULL(i_StandardInsuranceLineCode),'N/A',\r\n\t\t-- IS_SPACES(i_StandardInsuranceLineCode),'N/A',\r\n\t\t-- LENGTH(i_StandardInsuranceLineCode)=0,'N/A',\r\n\t\t-- LTRIM(RTRIM(i_StandardInsuranceLineCode)))\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    i_StandardInsuranceLineCode IS NULL, 'N/A',\n\t\t    LENGTH(i_StandardInsuranceLineCode)>0 AND TRIM(i_StandardInsuranceLineCode)='', 'N/A',\n\t\t    LENGTH(i_StandardInsuranceLineCode) = 0, 'N/A',\n\t\t    LTRIM(RTRIM(i_StandardInsuranceLineCode))\n\t\t) AS v_Default_StandardInsuranceLineCode,\n\t\t-- *INF*: IIF(REG_MATCH(v_Default_StandardInsuranceLineCode,'[^0-9a-zA-Z]') OR LTRIM(v_Default_StandardInsuranceLineCode,'0')='' ,'N/A',v_Default_StandardInsuranceLineCode)\n\t\tIFF(\n\t\t    REGEXP_LIKE(v_Default_StandardInsuranceLineCode, '[^0-9a-zA-Z]')\n\t\t    or LTRIM(v_Default_StandardInsuranceLineCode, '0') = '',\n\t\t    'N/A',\n\t\t    v_Default_StandardInsuranceLineCode\n\t\t) AS v_Reg_StandardInsuranceLineCode,\n\t\t-- *INF*: IIF(v_Reg_StandardInsuranceLineCode='N/A' AND (IN(TypeBureauCode,'AL','AN','AP') OR IN(v_Reg_MajorPerilCode,'930','931')),'CA',v_Reg_StandardInsuranceLineCode)\n\t\tIFF(\n\t\t    v_Reg_StandardInsuranceLineCode = 'N/A'\n\t\t    and (TypeBureauCode IN ('AL','AN','AP')\n\t\t    or v_Reg_MajorPerilCode IN ('930','931')),\n\t\t    'CA',\n\t\t    v_Reg_StandardInsuranceLineCode\n\t\t) AS v_StandardInsuranceLineCode,\n\t\t-- *INF*: IIF(v_StandardInsuranceLineCode='N/A' AND IN(TypeBureauCode,'CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),1,0)\n\t\tIFF(\n\t\t    v_StandardInsuranceLineCode = 'N/A'\n\t\t    and TypeBureauCode IN ('CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),\n\t\t    1,\n\t\t    0\n\t\t) AS v_flag,\n\t\tEXP_GetSource.AgencyAKId,\n\t\tEXP_GetSource.SalesTerritoryAKID,\n\t\tEXP_GetSource.TypeBureauCode,\n\t\tEXP_GetSource.RegionalSalesManagerAKID,\n\t\tEXP_GetSource.SalesDirectorAKID,\n\t\tEXP_GetSource.ClassCode,\n\t\tEXP_GetSource.RiskUnitGroup AS i_RiskUnitGroup,\n\t\tEXP_GetSource.RiskUnit AS i_RiskUnit,\n\t\tEXP_GetSource.trans_date,\n\t\tEXP_GetSource.ProductTypeCode AS i_ProductTypeCode,\n\t\tLKP_RatingPlan.RatingPlanCode AS i_RatingPlanCode,\n\t\t-- *INF*: IIF(IN(v_StandardInsuranceLineCode,'CR') OR v_flag=1,'N/A',i_RiskUnitGroup)\n\t\tIFF(v_StandardInsuranceLineCode IN ('CR') OR v_flag = 1, 'N/A', i_RiskUnitGroup) AS v_RiskUnitGroup,\n\t\t-- *INF*: DECODE(TRUE, \r\n\t\t-- ISNULL(v_RiskUnitGroup),'N/A',\r\n\t\t-- IS_SPACES(v_RiskUnitGroup),'N/A',\r\n\t\t-- LENGTH(v_RiskUnitGroup)=0,'N/A', \r\n\t\t-- LTRIM(RTRIM(v_RiskUnitGroup)))\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    v_RiskUnitGroup IS NULL, 'N/A',\n\t\t    LENGTH(v_RiskUnitGroup)>0 AND TRIM(v_RiskUnitGroup)='', 'N/A',\n\t\t    LENGTH(v_RiskUnitGroup) = 0, 'N/A',\n\t\t    LTRIM(RTRIM(v_RiskUnitGroup))\n\t\t) AS v_Default_RiskUnitGroup,\n\t\t-- *INF*: IIF(REG_MATCH(v_Default_RiskUnitGroup,'[^0-9a-zA-Z]') OR LTRIM(v_Default_RiskUnitGroup,'0')='','N/A',v_Default_RiskUnitGroup)\n\t\tIFF(\n\t\t    REGEXP_LIKE(v_Default_RiskUnitGroup, '[^0-9a-zA-Z]')\n\t\t    or LTRIM(v_Default_RiskUnitGroup, '0') = '',\n\t\t    'N/A',\n\t\t    v_Default_RiskUnitGroup\n\t\t) AS o_RiskUnitGroup,\n\t\tv_Reg_MajorPerilCode AS o_MajorPerilCode,\n\t\t-- *INF*: IIF((v_StandardInsuranceLineCode='GL' AND (NOT IN(v_MajorPerilCode,'540','599','919') OR  (NOT IN( ClassCode,'11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058'))))  OR IN(v_StandardInsuranceLineCode, 'WC','IM','CG','CA') OR  v_flag=1, 'N/A',i_RiskUnit)\n\t\tIFF(\n\t\t    (v_StandardInsuranceLineCode = 'GL'\n\t\t    and (NOT v_MajorPerilCode IN ('540','599','919')\n\t\t    or (NOT ClassCode IN ('11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058'))))\n\t\t    or v_StandardInsuranceLineCode IN ('WC','IM','CG','CA')\n\t\t    or v_flag = 1,\n\t\t    'N/A',\n\t\t    i_RiskUnit\n\t\t) AS v_RiskUnit,\n\t\t-- *INF*: DECODE(TRUE, \r\n\t\t-- ISNULL(v_RiskUnit),'N/A',\r\n\t\t-- IS_SPACES(v_RiskUnit),'N/A',\r\n\t\t-- LENGTH(v_RiskUnit)=0,'N/A', \r\n\t\t-- LTRIM(RTRIM(v_RiskUnit)))\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    v_RiskUnit IS NULL, 'N/A',\n\t\t    LENGTH(v_RiskUnit)>0 AND TRIM(v_RiskUnit)='', 'N/A',\n\t\t    LENGTH(v_RiskUnit) = 0, 'N/A',\n\t\t    LTRIM(RTRIM(v_RiskUnit))\n\t\t) AS v_Default_RiskUnit,\n\t\t-- *INF*: IIF(LTRIM(i_ProductTypeCode,'0')='' OR  v_StandardInsuranceLineCode<>'GL','N/A',LTRIM(i_ProductTypeCode,'0'))\n\t\tIFF(\n\t\t    LTRIM(i_ProductTypeCode, '0') = '' OR v_StandardInsuranceLineCode <> 'GL', 'N/A',\n\t\t    LTRIM(i_ProductTypeCode, '0')\n\t\t) AS v_ProductTypeCode,\n\t\t-- *INF*: IIF(REG_MATCH(v_Default_RiskUnit,'[^0-9a-zA-Z]') OR LTRIM(v_Default_RiskUnit,'0')='','N/A',v_Default_RiskUnit)\n\t\tIFF(\n\t\t    REGEXP_LIKE(v_Default_RiskUnit, '[^0-9a-zA-Z]') OR LTRIM(v_Default_RiskUnit, '0') = '',\n\t\t    'N/A',\n\t\t    v_Default_RiskUnit\n\t\t) AS o_RiskUnit,\n\t\t-- *INF*: IIF(ISNULL(v_StandardInsuranceLineCode), 'N/A', v_StandardInsuranceLineCode)\n\t\tIFF(v_StandardInsuranceLineCode IS NULL, 'N/A', v_StandardInsuranceLineCode) AS o_StandardInsuranceLineCode,\n\t\t-- *INF*: IIF(ISNULL(i_StrategicProfitCenterCode), '6', i_StrategicProfitCenterCode)\n\t\tIFF(i_StrategicProfitCenterCode IS NULL, '6', i_StrategicProfitCenterCode) AS o_StrategicProfitCenterCode,\n\t\t-- *INF*: IIF(ISNULL(i_InsuranceSegmentCode), 'N/A', i_InsuranceSegmentCode)\n\t\tIFF(i_InsuranceSegmentCode IS NULL, 'N/A', i_InsuranceSegmentCode) AS o_InsuranceSegmentCode,\n\t\t-- *INF*: IIF(ISNULL(i_PolicyOfferingCode), '000', i_PolicyOfferingCode)\n\t\tIFF(i_PolicyOfferingCode IS NULL, '000', i_PolicyOfferingCode) AS o_PolicyOfferingCode,\n\t\t-- *INF*: IIF(ISNULL(i_ProductCode), '000', i_ProductCode)\n\t\tIFF(i_ProductCode IS NULL, '000', i_ProductCode) AS o_ProductCode,\n\t\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLineOfBusinessCode), '000', i_InsuranceReferenceLineOfBusinessCode)\n\t\tIFF(\n\t\t    i_InsuranceReferenceLineOfBusinessCode IS NULL, '000',\n\t\t    i_InsuranceReferenceLineOfBusinessCode\n\t\t) AS o_InsuranceReferenceLineOfBusinessCode,\n\t\t-- *INF*: IIF(ISNULL(i_EnterpriseGroupCode), '1', i_EnterpriseGroupCode)\n\t\tIFF(i_EnterpriseGroupCode IS NULL, '1', i_EnterpriseGroupCode) AS o_EnterpriseGroupCode,\n\t\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLegalEntityCode), '1', i_InsuranceReferenceLegalEntityCode)\n\t\tIFF(i_InsuranceReferenceLegalEntityCode IS NULL, '1', i_InsuranceReferenceLegalEntityCode) AS o_InsuranceReferenceLegalEntityCode,\n\t\t-- *INF*: DECODE(TRUE, \r\n\t\t-- ISNULL(v_ProductTypeCode),'N/A',\r\n\t\t-- IS_SPACES(v_ProductTypeCode),'N/A',\r\n\t\t-- LENGTH(v_ProductTypeCode)=0,'N/A', \r\n\t\t-- LTRIM(RTRIM(v_ProductTypeCode)))\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    v_ProductTypeCode IS NULL, 'N/A',\n\t\t    LENGTH(v_ProductTypeCode)>0 AND TRIM(v_ProductTypeCode)='', 'N/A',\n\t\t    LENGTH(v_ProductTypeCode) = 0, 'N/A',\n\t\t    LTRIM(RTRIM(v_ProductTypeCode))\n\t\t) AS o_ProductTypeCode,\n\t\t-- *INF*: IIF(ISNULL(i_RatingPlanCode), '1', i_RatingPlanCode)\n\t\tIFF(i_RatingPlanCode IS NULL, '1', i_RatingPlanCode) AS o_RatingPlanCode\n\t\tFROM EXP_GetSource\n\t\tLEFT JOIN LKP_EnterpriseGroup\n\t\tON LKP_EnterpriseGroup.EnterpriseGroupId = LKP_StrategicProfitCenter.EnterpriseGroupId\n\t\tLEFT JOIN LKP_InsuranceReferenceLegalEntity\n\t\tON LKP_InsuranceReferenceLegalEntity.InsuranceReferenceLegalEntityId = LKP_StrategicProfitCenter.InsuranceReferenceLegalEntityId\n\t\tLEFT JOIN LKP_InsuranceReferenceLineOfBusiness\n\t\tON LKP_InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessAKId = EXP_GetSource.InsuranceReferenceLineOfBusinessAKId AND LKP_InsuranceReferenceLineOfBusiness.EffectiveDate <= EXP_GetSource.trans_date AND LKP_InsuranceReferenceLineOfBusiness.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_InsuranceSegment\n\t\tON LKP_InsuranceSegment.InsuranceSegmentAKId = EXP_GetSource.InsuranceSegmentAKId AND LKP_InsuranceSegment.EffectiveDate <= EXP_GetSource.trans_date AND LKP_InsuranceSegment.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_PolicyOffering\n\t\tON LKP_PolicyOffering.PolicyOfferingAKId = EXP_GetSource.PolicyOfferingAKId AND LKP_PolicyOffering.EffectiveDate <= EXP_GetSource.trans_date AND LKP_PolicyOffering.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_Product\n\t\tON LKP_Product.ProductAKId = EXP_GetSource.ProductAKId AND LKP_Product.EffectiveDate <= EXP_GetSource.trans_date AND LKP_Product.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_RatingPlan\n\t\tON LKP_RatingPlan.RatingPlanAKId = EXP_GetSource.RatingPlanAKId AND LKP_RatingPlan.EffectiveDate <= EXP_GetSource.trans_date AND LKP_RatingPlan.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_StrategicProfitCenter\n\t\tON LKP_StrategicProfitCenter.StrategicProfitCenterAKId = EXP_GetSource.StrategicProfitCenterAKId AND LKP_StrategicProfitCenter.EffectiveDate <= EXP_GetSource.trans_date AND LKP_StrategicProfitCenter.ExpirationDate >= EXP_GetSource.trans_date\n\t\tLEFT JOIN LKP_sup_insurance_line\n\t\tON LKP_sup_insurance_line.ins_line_code = EXP_GetSource.InsuranceLine AND LKP_sup_insurance_line.eff_from_date <= EXP_GetSource.trans_date AND LKP_sup_insurance_line.eff_to_date >= EXP_GetSource.trans_date\n\t),\n\tLKP_AgencyDim AS (\n\t\tSELECT\n\t\tAgencyDimID,\n\t\tEDWAgencyAKID,\n\t\tEffectiveDate,\n\t\tExpirationDate\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tAgencyDimID,\n\t\t\t\tEDWAgencyAKID,\n\t\t\t\tEffectiveDate,\n\t\t\t\tExpirationDate\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V3}.AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID,EffectiveDate,ExpirationDate ORDER BY AgencyDimID) = 1\n\t),\n\tLKP_InsuranceReferenceDim AS (\n\t\tSELECT\n\t\tInsuranceReferenceDimId,\n\t\tStrategicProfitCenterCode,\n\t\tInsuranceSegmentCode,\n\t\tPolicyOfferingCode,\n\t\tProductCode,\n\t\tInsuranceReferenceLineOfBusinessCode,\n\t\tEnterpriseGroupCode,\n\t\tInsuranceReferenceLegalEntityCode,\n\t\tRatingPlanCode\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tInsuranceReferenceDimId,\n\t\t\t\tStrategicProfitCenterCode,\n\t\t\t\tInsuranceSegmentCode,\n\t\t\t\tPolicyOfferingCode,\n\t\t\t\tProductCode,\n\t\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\t\tEnterpriseGroupCode,\n\t\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\t\tRatingPlanCode\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode,ProductCode,InsuranceReferenceLineOfBusinessCode,EnterpriseGroupCode,InsuranceReferenceLegalEntityCode,RatingPlanCode ORDER BY InsuranceReferenceDimId) = 1\n\t),\n\tLKP_InsuranceReferenceCoverageDim_PMS AS (\n\t\tSELECT\n\t\tInsuranceReferenceCoverageDimId,\n\t\tPmsMajorPerilCode,\n\t\tPmsProductTypeCode,\n\t\tInsuranceLineCode,\n\t\tPmsRiskUnitGroupCode,\n\t\tPmsRiskUnitCode\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\t\tPmsMajorPerilCode,\n\t\t\t\tPmsProductTypeCode,\n\t\t\t\tInsuranceLineCode,\n\t\t\t\tPmsRiskUnitGroupCode,\n\t\t\t\tPmsRiskUnitCode\n\t\t\tFROM InsuranceReferenceCoverageDim\n\t\t\tWHERE DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PmsMajorPerilCode,PmsProductTypeCode,InsuranceLineCode,PmsRiskUnitGroupCode,PmsRiskUnitCode ORDER BY InsuranceReferenceCoverageDimId) = 1\n\t),\n\tLKP_SalesDivisionDim AS (\n\t\tSELECT\n\t\tSalesDivisionDimID,\n\t\tEDWSalesTerritoryAKID,\n\t\tEDWRegionalSalesManagerAKID,\n\t\tEDWSalesDirectorAKID\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tSalesDivisionDimID,\n\t\t\t\tEDWSalesTerritoryAKID,\n\t\t\t\tEDWRegionalSalesManagerAKID,\n\t\t\t\tEDWSalesDirectorAKID\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SalesDivisionDim\n\t\t\tWHERE CurrentSnapshotFlag=1\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWSalesTerritoryAKID,EDWRegionalSalesManagerAKID,EDWSalesDirectorAKID ORDER BY SalesDivisionDimID) = 1\n\t),\n\tEXP_GetDimIDs AS (\n\t\tSELECT\n\t\tLKP_InsuranceReferenceDim.InsuranceReferenceDimId AS i_InsuranceReferenceDimId,\n\t\tLKP_AgencyDim.AgencyDimID AS i_AgencyDimID,\n\t\tLKP_SalesDivisionDim.SalesDivisionDimID AS i_SalesDivisionDimID,\n\t\tLKP_InsuranceReferenceCoverageDim_PMS.InsuranceReferenceCoverageDimId AS i_InsuranceReferenceCoverageDimId_PMS,\n\t\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceDimId), -1, i_InsuranceReferenceDimId)\n\t\tIFF(i_InsuranceReferenceDimId IS NULL, - 1, i_InsuranceReferenceDimId) AS o_InsuranceReferenceDimId,\n\t\t-- *INF*: IIF(ISNULL(i_AgencyDimID), -1, i_AgencyDimID)\n\t\tIFF(i_AgencyDimID IS NULL, - 1, i_AgencyDimID) AS o_AgencyDimID,\n\t\t-- *INF*: IIF(ISNULL(i_SalesDivisionDimID), -1, i_SalesDivisionDimID)\n\t\tIFF(i_SalesDivisionDimID IS NULL, - 1, i_SalesDivisionDimID) AS o_SalesDivisionDimID,\n\t\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceCoverageDimId_PMS), -1,\r\n\t\t-- i_InsuranceReferenceCoverageDimId_PMS)\n\t\tIFF(\n\t\t    i_InsuranceReferenceCoverageDimId_PMS IS NULL, - 1, i_InsuranceReferenceCoverageDimId_PMS\n\t\t) AS o_InsuranceReferenceCoverageDimId,\n\t\t-1 AS o_CoverageDetailDimId\n\t\tFROM \n\t\tLEFT JOIN LKP_AgencyDim\n\t\tON LKP_AgencyDim.EDWAgencyAKID = EXP_GetCodes.AgencyAKId AND LKP_AgencyDim.EffectiveDate <= EXP_GetCodes.trans_date AND LKP_AgencyDim.ExpirationDate >= EXP_GetCodes.trans_date\n\t\tLEFT JOIN LKP_InsuranceReferenceCoverageDim_PMS\n\t\tON LKP_InsuranceReferenceCoverageDim_PMS.PmsMajorPerilCode = EXP_GetCodes.o_MajorPerilCode AND LKP_InsuranceReferenceCoverageDim_PMS.PmsProductTypeCode = EXP_GetCodes.o_ProductTypeCode AND LKP_InsuranceReferenceCoverageDim_PMS.InsuranceLineCode = EXP_GetCodes.o_StandardInsuranceLineCode AND LKP_InsuranceReferenceCoverageDim_PMS.PmsRiskUnitGroupCode = EXP_GetCodes.o_RiskUnitGroup AND LKP_InsuranceReferenceCoverageDim_PMS.PmsRiskUnitCode = EXP_GetCodes.o_RiskUnit\n\t\tLEFT JOIN LKP_InsuranceReferenceDim\n\t\tON LKP_InsuranceReferenceDim.StrategicProfitCenterCode = EXP_GetCodes.o_StrategicProfitCenterCode AND LKP_InsuranceReferenceDim.InsuranceSegmentCode = EXP_GetCodes.o_InsuranceSegmentCode AND LKP_InsuranceReferenceDim.PolicyOfferingCode = EXP_GetCodes.o_PolicyOfferingCode AND LKP_InsuranceReferenceDim.ProductCode = EXP_GetCodes.o_ProductCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode = EXP_GetCodes.o_InsuranceReferenceLineOfBusinessCode AND LKP_InsuranceReferenceDim.EnterpriseGroupCode = EXP_GetCodes.o_EnterpriseGroupCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLegalEntityCode = EXP_GetCodes.o_InsuranceReferenceLegalEntityCode AND LKP_InsuranceReferenceDim.RatingPlanCode = EXP_GetCodes.o_RatingPlanCode\n\t\tLEFT JOIN LKP_SalesDivisionDim\n\t\tON LKP_SalesDivisionDim.EDWSalesTerritoryAKID = EXP_GetCodes.SalesTerritoryAKID AND LKP_SalesDivisionDim.EDWRegionalSalesManagerAKID = EXP_GetCodes.RegionalSalesManagerAKID AND LKP_SalesDivisionDim.EDWSalesDirectorAKID = EXP_GetCodes.SalesDirectorAKID\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\to_InsuranceReferenceDimId AS InsuranceReferenceDimId, \n\t\to_AgencyDimID AS AgencyDimID, \n\t\to_SalesDivisionDimID AS SalesDivisionDimID, \n\t\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId, \n\t\to_CoverageDetailDimId AS CoverageDetailDimId\n\t\tFROM EXP_GetDimIDs\n\t),\n),\nmplt_Strategic_Business_Division_Dim AS (WITH\n\tINPUT_Strategic_Business_Division AS (\n\t\t\n\t),\n\tEXP_inputs AS (\n\t\tSELECT\n\t\tpolicy_symbol,\n\t\tpolicy_number,\n\t\tpolicy_eff_date AS policy_eff_date_in,\n\t\t-- *INF*: IIF(:UDF.DEFAULT_VALUE_FOR_STRINGS(policy_symbol)='N/A','N/A',substr(policy_symbol,1,1))\n\t\tIFF(\n\t\t    UDF_DEFAULT_VALUE_FOR_STRINGS(policy_symbol) = 'N/A', 'N/A', substr(policy_symbol, 1, 1)\n\t\t) AS policy_symbol_position_1,\n\t\t-- *INF*: IIF(:UDF.DEFAULT_VALUE_FOR_STRINGS(policy_number)='N/A','N/A',substr(policy_number,1,1))\n\t\tIFF(\n\t\t    UDF_DEFAULT_VALUE_FOR_STRINGS(policy_number) = 'N/A', 'N/A', substr(policy_number, 1, 1)\n\t\t) AS policy_number_position_1,\n\t\t-- *INF*: IIF(isnull(policy_eff_date_in),SYSDATE,policy_eff_date_in)\n\t\tIFF(policy_eff_date_in IS NULL, CURRENT_TIMESTAMP, policy_eff_date_in) AS policy_eff_date\n\t\tFROM INPUT_Strategic_Business_Division\n\t),\n\tLKP_strategic_business_division_dim AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tcrrnt_snpsht_flag,\n\t\taudit_id,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tcreated_date,\n\t\tmodified_date,\n\t\tedw_strtgc_bus_dvsn_ak_id,\n\t\tpol_sym_1,\n\t\tpol_num_1,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tstrtgc_bus_dvsn_code,\n\t\tstrtgc_bus_dvsn_code_descript,\n\t\tpolicy_symbol_position_IN,\n\t\tpolicy_number_position_IN,\n\t\tpolicy_eff_date_IN\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tstrtgc_bus_dvsn_dim_id,\n\t\t\t\tcrrnt_snpsht_flag,\n\t\t\t\taudit_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date,\n\t\t\t\tcreated_date,\n\t\t\t\tmodified_date,\n\t\t\t\tedw_strtgc_bus_dvsn_ak_id,\n\t\t\t\tpol_sym_1,\n\t\t\t\tpol_num_1,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tstrtgc_bus_dvsn_code,\n\t\t\t\tstrtgc_bus_dvsn_code_descript,\n\t\t\t\tpolicy_symbol_position_IN,\n\t\t\t\tpolicy_number_position_IN,\n\t\t\t\tpolicy_eff_date_IN\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_sym_1,pol_num_1,pol_eff_date,pol_exp_date ORDER BY strtgc_bus_dvsn_dim_id) = 1\n\t),\n\tEXP_check_outputs AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id,\n\t\tstrtgc_bus_dvsn_code,\n\t\tstrtgc_bus_dvsn_code_descript,\n\t\t-- *INF*: IIF(isnull(strtgc_bus_dvsn_dim_id),-1,strtgc_bus_dvsn_dim_id)\n\t\tIFF(strtgc_bus_dvsn_dim_id IS NULL, - 1, strtgc_bus_dvsn_dim_id) AS strtgc_bus_dvsn_id_out,\n\t\t-- *INF*: IIF(isnull(edw_strtgc_bus_dvsn_ak_id),-1,edw_strtgc_bus_dvsn_ak_id)\n\t\tIFF(edw_strtgc_bus_dvsn_ak_id IS NULL, - 1, edw_strtgc_bus_dvsn_ak_id) AS edw_strtgc_bus_dvsn_ak_id_out,\n\t\t-- *INF*: IIF(isnull(strtgc_bus_dvsn_code),'N/A',strtgc_bus_dvsn_code)\n\t\tIFF(strtgc_bus_dvsn_code IS NULL, 'N/A', strtgc_bus_dvsn_code) AS strtgc_bus_dvsn_code_out,\n\t\t-- *INF*: IIF(isnull(strtgc_bus_dvsn_code_descript),'N/A',strtgc_bus_dvsn_code_descript)\n\t\tIFF(strtgc_bus_dvsn_code_descript IS NULL, 'N/A', strtgc_bus_dvsn_code_descript) AS strtgc_bus_dvsn_code_descript_out\n\t\tFROM LKP_strategic_business_division_dim\n\t),\n\tOUTPUT_return_Strategic_Business_Division AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_id_out AS strtgc_bus_dvsn_dim_id, \n\t\tedw_strtgc_bus_dvsn_ak_id_out AS edw_strtgc_bus_dvsn_ak_id, \n\t\tstrtgc_bus_dvsn_code_out AS strtgc_bus_dvsn_code, \n\t\tstrtgc_bus_dvsn_code_descript_out AS strtgc_bus_dvsn_code_descript\n\t\tFROM EXP_check_outputs\n\t),\n),\nmplt_claimant_coverage_dim_id AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_get_values AS (\n\t\tSELECT\n\t\tIN_claimant_cov_det_ak_id,\n\t\tIN_trans_date\n\t\tFROM INPUT\n\t),\n\tLKP_CLAIMANT_COV_DIM AS (\n\t\tSELECT\n\t\tclaimant_cov_dim_id,\n\t\tedw_claimant_cov_det_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tclaimant_cov_dim_id,\n\t\t\t\tedw_claimant_cov_det_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM claimant_coverage_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claimant_cov_det_ak_id,eff_from_date,eff_to_date ORDER BY claimant_cov_dim_id DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tclaimant_cov_dim_id\n\t\tFROM LKP_CLAIMANT_COV_DIM\n\t),\n),\nmplt_coverage_dim_id AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tEXP_get_values AS (\n\t\tSELECT\n\t\tIN_claimant_cov_det_ak_id,\n\t\tIN_trans_date\n\t\tFROM INPUT\n\t),\n\tLKP_coverage_dim AS (\n\t\tSELECT\n\t\tcov_dim_id,\n\t\tedw_claimant_cov_det_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcov_dim_id,\n\t\t\t\tedw_claimant_cov_det_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM coverage_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claimant_cov_det_ak_id,eff_from_date,eff_to_date ORDER BY cov_dim_id DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tcov_dim_id\n\t\tFROM LKP_coverage_dim\n\t),\n),\nEXP_Consolidate_Data AS (\n\tSELECT\n\tEXP_Loss_Master_Calc_Input.loss_master_calculation_id,\n\tEXP_Loss_Master_Calc_Input.incptn_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(incptn_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_incptn_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_incptn_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_incptn_date_id),v_incptn_date_id,-1)\n\tIFF(v_incptn_date_id IS NOT NULL, v_incptn_date_id, - 1) AS incptn_date_id_out,\n\tEXP_Loss_Master_Calc_Input.loss_master_run_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(loss_master_run_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_loss_master_run_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_loss_master_run_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_loss_master_run_date_id), v_loss_master_run_date_id, -1)\n\tIFF(v_loss_master_run_date_id IS NOT NULL, v_loss_master_run_date_id, - 1) AS loss_mater_run_date_id_out,\n\tmplt_Claim_occurence_dim_id.claim_loss_date AS mplt_claim_loss_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(mplt_claim_loss_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_mplt_claim_loss_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_claim_loss_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_claim_loss_date_id), v_claim_loss_date_id, -1)\n\tIFF(v_claim_loss_date_id IS NOT NULL, v_claim_loss_date_id, - 1) AS claim_loss_date_id_out,\n\tmplt_Claim_occurence_dim_id.source_claim_rpted_date AS mplt_source_claim_rpted_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(mplt_source_claim_rpted_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_mplt_source_claim_rpted_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_mplt_source_claim_rpted_date,\n\t-- *INF*: IIF(NOT ISNULL(v_mplt_source_claim_rpted_date), v_mplt_source_claim_rpted_date, -1)\n\tIFF(v_mplt_source_claim_rpted_date IS NOT NULL, v_mplt_source_claim_rpted_date, - 1) AS source_claim_rpted_date_id,\n\tmplt_Claim_occurence_dim_id.claim_occurrence_rpted_date AS mplt_claim_occurrence_rpted_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(mplt_claim_occurrence_rpted_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_mplt_claim_occurrence_rpted_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_claim_occurrence_rpted_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_claim_occurrence_rpted_date_id), v_claim_occurrence_rpted_date_id, -1)\n\tIFF(v_claim_occurrence_rpted_date_id IS NOT NULL, v_claim_occurrence_rpted_date_id, - 1) AS claim_occurrence_rpted_date_id_out,\n\tmplt_Claim_occurence_dim_id.pol_eff_date AS mplt_pol_eff_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(mplt_pol_eff_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_mplt_pol_eff_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_pol_eff_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_pol_eff_date_id), v_pol_eff_date_id, -1)\n\tIFF(v_pol_eff_date_id IS NOT NULL, v_pol_eff_date_id, - 1) AS pol_eff_date_id_out,\n\tmplt_Claim_occurence_dim_id.pol_exp_date AS mplt_pol_exp_date,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(mplt_pol_exp_date, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_mplt_pol_exp_date_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_pol_exp_date_id,\n\t-- *INF*: IIF(NOT ISNULL(v_pol_exp_date_id), v_pol_exp_date_id, -1)\n\tIFF(v_pol_exp_date_id IS NOT NULL, v_pol_exp_date_id, - 1) AS pol_exp_date_id_out,\n\tEXP_Loss_Master_Calc_Input.claim_pay_ak_id,\n\t-- *INF*: :LKP.LKP_CLAIM_PAYMENT_DIM(claim_pay_ak_id,loss_master_run_date)\n\tLKP_CLAIM_PAYMENT_DIM_claim_pay_ak_id_loss_master_run_date.claim_pay_dim_id AS v_Internal_lkp_claim_pay_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(v_Internal_lkp_claim_pay_dim_id), v_Internal_lkp_claim_pay_dim_id, -1)\n\tIFF(v_Internal_lkp_claim_pay_dim_id IS NOT NULL, v_Internal_lkp_claim_pay_dim_id, - 1) AS claim_pay_dim_id_out,\n\tmplt_Claim_occurence_dim_id.claim_occurrence_dim_id AS mplt_claim_occurrence_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claim_occurrence_dim_id), mplt_claim_occurrence_dim_id, -1)\n\tIFF(mplt_claim_occurrence_dim_id IS NOT NULL, mplt_claim_occurrence_dim_id, - 1) AS claim_occurrence_dim_id_out,\n\tEXP_Loss_Master_Calc_Input.claim_trans_pk_id,\n\t-- *INF*: IIF(NOT ISNULL(claim_trans_pk_id), claim_trans_pk_id, -1)\n\tIFF(claim_trans_pk_id IS NOT NULL, claim_trans_pk_id, - 1) AS claim_trans_pk_id_out,\n\tEXP_Loss_Master_Calc_Input.claim_reins_trans_pk_id,\n\t-- *INF*: IIF(NOT ISNULL(claim_reins_trans_pk_id), claim_reins_trans_pk_id, -1)\n\tIFF(claim_reins_trans_pk_id IS NOT NULL, claim_reins_trans_pk_id, - 1) AS claim_reins_trans_pk_id_out,\n\tmplt_Claim_occurence_dim_id.claim_rep_dim_prim_claim_rep_id AS mplt_claim_rep_dim_prim_claim_rep_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claim_rep_dim_prim_claim_rep_id), mplt_claim_rep_dim_prim_claim_rep_id, -1)\n\tIFF(\n\t    mplt_claim_rep_dim_prim_claim_rep_id IS NOT NULL, mplt_claim_rep_dim_prim_claim_rep_id, - 1\n\t) AS claim_rep_dim_prim_claim_rep_id_out,\n\tmplt_Claim_occurence_dim_id.claim_rep_dim_examiner_id AS mplt_claim_rep_dim_examiner_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claim_rep_dim_examiner_id), mplt_claim_rep_dim_examiner_id, -1)\n\tIFF(mplt_claim_rep_dim_examiner_id IS NOT NULL, mplt_claim_rep_dim_examiner_id, - 1) AS claim_rep_dim_examiner_id_out,\n\tmplt_Claim_occurence_dim_id.pol_key_dim_id AS mplt_pol_key_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_pol_key_dim_id), mplt_pol_key_dim_id, -1)\n\tIFF(mplt_pol_key_dim_id IS NOT NULL, mplt_pol_key_dim_id, - 1) AS pol_key_dim_id_out,\n\tmplt_Claim_occurence_dim_id.agency_dim_id AS mplt_agency_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_agency_dim_id), mplt_agency_dim_id, -1)\n\tIFF(mplt_agency_dim_id IS NOT NULL, mplt_agency_dim_id, - 1) AS agency_dim_id_out,\n\tmplt_Claim_occurence_dim_id.claim_case_dim_id AS mplt_claim_case_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claim_case_dim_id), mplt_claim_case_dim_id, -1)\n\tIFF(mplt_claim_case_dim_id IS NOT NULL, mplt_claim_case_dim_id, - 1) AS claim_case_dim_id_out,\n\tmplt_Claim_occurence_dim_id.contract_cust_dim_id AS mplt_contract_cust_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_contract_cust_dim_id), mplt_contract_cust_dim_id, -1)\n\tIFF(mplt_contract_cust_dim_id IS NOT NULL, mplt_contract_cust_dim_id, - 1) AS contract_cust_dim_id_out,\n\tLKP_reinsurance_coverage_dim1.reins_cov_dim_id AS lkp_reins_cov_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(lkp_reins_cov_dim_id), lkp_reins_cov_dim_id, -1)\n\tIFF(lkp_reins_cov_dim_id IS NOT NULL, lkp_reins_cov_dim_id, - 1) AS reins_cov_dim_id_out,\n\tEXP_set_financial_values.source_sys_id,\n\tLKP_Loss_Master_Dim_Find_Dim_Id_DCT.loss_master_dim_id AS DCT_Loss_master_dim_id,\n\tLKP_Loss_Master_Dim_Find_Dim_Id.loss_master_dim_id AS PMS_Loss_master_dim_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(i_PolicySourceId,'PMS','ESU'),PMS_Loss_master_dim_id,\r\n\t-- IN(i_PolicySourceId, 'DUC','PDC'),DCT_Loss_master_dim_id,NULL)\n\tDECODE(\n\t    TRUE,\n\t    i_PolicySourceId IN ('PMS','ESU'), PMS_Loss_master_dim_id,\n\t    i_PolicySourceId IN ('DUC','PDC'), DCT_Loss_master_dim_id,\n\t    NULL\n\t) AS lkp_loss_master_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(lkp_loss_master_dim_id), lkp_loss_master_dim_id, -1)\n\tIFF(lkp_loss_master_dim_id IS NOT NULL, lkp_loss_master_dim_id, - 1) AS loss_master_dim_id_out,\n\tmplt_coverage_dim_id.cov_dim_id AS mplt_cov_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_cov_dim_id), mplt_cov_dim_id, -1)\n\tIFF(mplt_cov_dim_id IS NOT NULL, mplt_cov_dim_id, - 1) AS cov_dim_id_out,\n\tmplt_Claimant_dim_id.claimant_dim_id AS mplt_claimant_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claimant_dim_id), mplt_claimant_dim_id, -1)\n\tIFF(mplt_claimant_dim_id IS NOT NULL, mplt_claimant_dim_id, - 1) AS claimant_dim_id_out,\n\tmplt_claimant_coverage_dim_id.claimant_cov_dim_id AS mplt_claimant_cov_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claimant_cov_dim_id), mplt_claimant_cov_dim_id, -1)\n\tIFF(mplt_claimant_cov_dim_id IS NOT NULL, mplt_claimant_cov_dim_id, - 1) AS claimant_cov_dim_id_out,\n\tmplt_Claim_Payment_Category_type_Dim_id.claim_pay_ctgry_type_dim_id AS mplt_claim_pay_ctgry_type_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(mplt_claim_pay_ctgry_type_dim_id), mplt_claim_pay_ctgry_type_dim_id, -1)\n\tIFF(mplt_claim_pay_ctgry_type_dim_id IS NOT NULL, mplt_claim_pay_ctgry_type_dim_id, - 1) AS claim_pay_ctgry_type_dim_id_out,\n\tlkp_claim_transaction_type_dim2.claim_trans_type_dim_id,\n\t-- *INF*: IIF(NOT ISNULL(claim_trans_type_dim_id), claim_trans_type_dim_id, -1)\n\tIFF(claim_trans_type_dim_id IS NOT NULL, claim_trans_type_dim_id, - 1) AS claim_trans_type_dim_id_out,\n\tEXP_Determine_Transaction_Values.trans_date_id_OUT AS trans_date_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t-1 AS DEFAULT_ID,\n\tEXP_Loss_Master_Calc_Input.claim_trans_amt AS trans_amt,\n\tEXP_Loss_Master_Calc_Input.claim_trans_hist_amt AS trans_hist_amt,\n\tEXP_Determine_Transaction_Values.trans_code_OUT AS trans_code,\n\tEXP_Loss_Master_Calc_Input.pms_trans_code,\n\tEXP_Loss_Master_Calc_Input.new_claim_count,\n\tEXP_Loss_Master_Calc_Input.outstanding_amt,\n\tEXP_Loss_Master_Calc_Input.paid_loss_amt,\n\tEXP_Loss_Master_Calc_Input.paid_exp_amt,\n\tEXP_Loss_Master_Calc_Input.eom_unpaid_loss_adjust_exp,\n\tEXP_Loss_Master_Calc_Input.orig_reserve,\n\t-- *INF*: IIF(rtrim(ltrim(pms_trans_code))='95',eom_unpaid_loss_adjust_exp,orig_reserve)\n\tIFF(rtrim(ltrim(pms_trans_code)) = '95', eom_unpaid_loss_adjust_exp, orig_reserve) AS orig_reserve_extract,\n\tmplt_Strategic_Business_Division_Dim.strtgc_bus_dvsn_dim_id,\n\tEXP_Loss_Master_Calc_Input.o_PolicySourceId AS i_PolicySourceId,\n\tLKP_InsuranceReferenceCoverageDim_DCT.InsuranceReferenceCoverageDimId AS i_InsuranceReferenceCoverageDimId_DCT,\n\tmplt_PMS_Coverage_Agency_InsuranceReference_DimIDs.InsuranceReferenceDimId,\n\tmplt_PMS_Coverage_Agency_InsuranceReference_DimIDs.AgencyDimID AS agency_dim_id_V3,\n\tmplt_PMS_Coverage_Agency_InsuranceReference_DimIDs.SalesDivisionDimID,\n\tLKP_CoverageDetailDim.CoverageDetailDimId,\n\t-- *INF*: IIF(ISNULL(CoverageDetailDimId), -1, CoverageDetailDimId)\n\tIFF(CoverageDetailDimId IS NULL, - 1, CoverageDetailDimId) AS o_CoverageDetailDimId,\n\tmplt_PMS_Coverage_Agency_InsuranceReference_DimIDs.InsuranceReferenceCoverageDimId AS i_InsuranceReferenceCoverageDimId_PMS,\n\t-- *INF*: DECODE(TRUE,i_PolicySourceId='DUC' and NOT ISNULL(i_InsuranceReferenceCoverageDimId_DCT),i_InsuranceReferenceCoverageDimId_DCT,IN(i_PolicySourceId,'PMS','ESU') and NOT ISNULL(i_InsuranceReferenceCoverageDimId_PMS),i_InsuranceReferenceCoverageDimId_PMS,-1)\n\tDECODE(\n\t    TRUE,\n\t    i_PolicySourceId = 'DUC' and i_InsuranceReferenceCoverageDimId_DCT IS NOT NULL, i_InsuranceReferenceCoverageDimId_DCT,\n\t    i_PolicySourceId IN ('PMS','ESU') and i_InsuranceReferenceCoverageDimId_PMS IS NOT NULL, i_InsuranceReferenceCoverageDimId_PMS,\n\t    - 1\n\t) AS o_InsuranceReferenceCoverageDimId,\n\tEXP_Determine_Transaction_Values.is_claim_trans_pk_id_valid_OUT AS is_claim_trans_pk_id_valid,\n\tEXP_Determine_Transaction_Values.is_reins_trans_pk_id_valid_OUT AS is_reins_trans_pk_id_valid,\n\tEXP_set_financial_values.direct_loss_paid_excluding_recoveries AS i_DirectLossPaidExcludingRecoveries,\n\tEXP_set_financial_values.direct_loss_outstanding_excluding_recoveries AS i_DirectLossOutstandingExcludingRecoveries,\n\tEXP_set_financial_values.direct_loss_incurred_excluding_recoveries AS i_DirectLossIncurredExcludingRecoveries,\n\tEXP_set_financial_values.direct_alae_paid_excluding_recoveries AS i_DirectALAEPaidExcludingRecoveries,\n\tEXP_set_financial_values.direct_alae_outstanding_excluding_recoveries AS i_DirectALAEOutstandingExcludingRecoveries,\n\tEXP_set_financial_values.direct_loss_paid_including_recoveries AS i_DirectLossPaidIncludingRecoveries,\n\tEXP_set_financial_values.direct_loss_outstanding_including_recoveries AS i_DirectLossOutstandingIncludingRecoveries,\n\tEXP_set_financial_values.direct_loss_incurred_including_recoveries AS i_DirectLossIncurredIncludingRecoveries,\n\tEXP_set_financial_values.direct_alae_paid_including_recoveries AS i_DirectALAEPaidIncludingRecoveries,\n\tEXP_set_financial_values.direct_alae_incurred_including_recoveries AS i_DirectALAEIncurredIncludingRecoveries,\n\tEXP_set_financial_values.total_direct_loss_recovery_paid AS i_TotalDirectLossRecoveryPaid,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossPaidExcludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossPaidExcludingRecoveries, 0) AS o_DirectLossPaidExcludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossOutstandingExcludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossOutstandingExcludingRecoveries, 0) AS o_DirectLossOutstandingExcludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossIncurredExcludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossIncurredExcludingRecoveries, 0) AS o_DirectLossIncurredExcludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectALAEPaidExcludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectALAEPaidExcludingRecoveries, 0) AS o_DirectALAEPaidExcludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectALAEOutstandingExcludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectALAEOutstandingExcludingRecoveries, 0) AS o_DirectALAEOutstandingExcludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossPaidIncludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossPaidIncludingRecoveries, 0) AS o_DirectLossPaidIncludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossOutstandingIncludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossOutstandingIncludingRecoveries, 0) AS o_DirectLossOutstandingIncludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectLossIncurredIncludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectLossIncurredIncludingRecoveries, 0) AS o_DirectLossIncurredIncludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectALAEPaidIncludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectALAEPaidIncludingRecoveries, 0) AS o_DirectALAEPaidIncludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_DirectALAEIncurredIncludingRecoveries,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_DirectALAEIncurredIncludingRecoveries, 0) AS o_DirectALAEIncurredIncludingRecoveries,\n\t-- *INF*: IIF(is_claim_trans_pk_id_valid=1,i_TotalDirectLossRecoveryPaid,0)\n\tIFF(is_claim_trans_pk_id_valid = 1, i_TotalDirectLossRecoveryPaid, 0) AS o_TotalDirectLossRecoveryPaid,\n\tmplt_Claim_occurence_dim_id.AgencyDimID,\n\t0 AS o_ChangeInOutstandingAmount,\n\t0 AS o_ChangeInEOMUnpaidLossAdjustmentExpense,\n\tLKP_claim_financial_type_dim.claim_financial_type_dim_id,\n\t-- *INF*: IIF(ISNULL(claim_financial_type_dim_id), -1, claim_financial_type_dim_id)\n\tIFF(claim_financial_type_dim_id IS NULL, - 1, claim_financial_type_dim_id) AS o_ClaimFinancialTypeDimId\n\tFROM EXP_Determine_Transaction_Values\n\t -- Manually join with EXP_Loss_Master_Calc_Input\n\t -- Manually join with EXP_set_financial_values\n\t -- Manually join with mplt_Claim_Payment_Category_type_Dim_id\n\t -- Manually join with mplt_Claim_occurence_dim_id\n\t -- Manually join with mplt_Claimant_dim_id\n\t -- Manually join with mplt_PMS_Coverage_Agency_InsuranceReference_DimIDs\n\t -- Manually join with mplt_Strategic_Business_Division_Dim\n\t -- Manually join with mplt_claimant_coverage_dim_id\n\t -- Manually join with mplt_coverage_dim_id\n\tLEFT JOIN LKP_CoverageDetailDim\n\tON LKP_CoverageDetailDim.CoverageGuid = EXP_Loss_Master_Calc_Input.CoverageGUID AND LKP_CoverageDetailDim.PolicyAKID = EXP_Loss_Master_Calc_Input.PolicyAKID AND LKP_CoverageDetailDim.EffectiveDate <= EXP_Loss_Master_Calc_Input.loss_master_run_date_plus_one AND LKP_CoverageDetailDim.ExpirationDate >= EXP_Loss_Master_Calc_Input.loss_master_run_date_plus_one\n\tLEFT JOIN LKP_InsuranceReferenceCoverageDim_DCT\n\tON LKP_InsuranceReferenceCoverageDim_DCT.InsuranceLineCode = EXP_Loss_Master_Calc_Input.o_StandardInsuranceLineCode AND LKP_InsuranceReferenceCoverageDim_DCT.DctRiskTypeCode = EXP_Loss_Master_Calc_Input.o_RiskType AND LKP_InsuranceReferenceCoverageDim_DCT.DctCoverageTypeCode = EXP_Loss_Master_Calc_Input.o_CoverageType AND LKP_InsuranceReferenceCoverageDim_DCT.DctPerilGroup = EXP_Loss_Master_Calc_Input.PerilGroup AND LKP_InsuranceReferenceCoverageDim_DCT.DctSubCoverageTypeCode = EXP_Loss_Master_Calc_Input.SubCoverageTypeCode AND LKP_InsuranceReferenceCoverageDim_DCT.DctCoverageVersion = EXP_Loss_Master_Calc_Input.CoverageVersion\n\tLEFT JOIN LKP_Loss_Master_Dim_Find_Dim_Id\n\tON LKP_Loss_Master_Dim_Find_Dim_Id.variation_code = EXP_Loss_Master_Calc_Input.variation_code AND LKP_Loss_Master_Dim_Find_Dim_Id.pol_type = EXP_Loss_Master_Calc_Input.pol_type_out AND LKP_Loss_Master_Dim_Find_Dim_Id.auto_reins_facility = EXP_Loss_Master_Calc_Input.auto_reins_facility AND LKP_Loss_Master_Dim_Find_Dim_Id.statistical_brkdwn_line = EXP_Loss_Master_Calc_Input.statistical_brkdwn_line_out AND LKP_Loss_Master_Dim_Find_Dim_Id.statistical_code1 = EXP_Loss_Master_Calc_Input.statistical_code1_out AND LKP_Loss_Master_Dim_Find_Dim_Id.statistical_code2 = EXP_Loss_Master_Calc_Input.statistical_code2_out AND LKP_Loss_Master_Dim_Find_Dim_Id.statistical_code3 = EXP_Loss_Master_Calc_Input.statistical_code3_out AND LKP_Loss_Master_Dim_Find_Dim_Id.loss_master_cov_code = EXP_Loss_Master_Calc_Input.loss_master_cov_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id.risk_state_prov_code = EXP_Loss_Master_Calc_Input.risk_state_prov_code AND LKP_Loss_Master_Dim_Find_Dim_Id.risk_zip_code = EXP_Loss_Master_Calc_Input.risk_zip_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id.terr_code = EXP_Loss_Master_Calc_Input.terr_code AND LKP_Loss_Master_Dim_Find_Dim_Id.tax_loc = EXP_Loss_Master_Calc_Input.tax_loc_out AND LKP_Loss_Master_Dim_Find_Dim_Id.class_code = EXP_Loss_Master_Calc_Input.class_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id.exposure = EXP_Loss_Master_Calc_Input.exposure AND LKP_Loss_Master_Dim_Find_Dim_Id.sub_line_code = EXP_Loss_Master_Calc_Input.sub_line_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id.source_sar_asl = EXP_Loss_Master_Calc_Input.source_sar_asl_out AND LKP_Loss_Master_Dim_Find_Dim_Id.source_sar_sp_use_code = EXP_Loss_Master_Calc_Input.source_sar_sp_use_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id.source_statistical_line = EXP_Loss_Master_Calc_Input.statistical_line_out\n\tLEFT JOIN LKP_Loss_Master_Dim_Find_Dim_Id_DCT\n\tON LKP_Loss_Master_Dim_Find_Dim_Id_DCT.variation_code = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.pol_type = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.auto_reins_facility = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.statistical_brkdwn_line = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.statistical_code1 = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.statistical_code2 = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.statistical_code3 = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.loss_master_cov_code = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.risk_state_prov_code = EXP_Loss_Master_Calc_Input.risk_state_prov_code AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.risk_zip_code = EXP_Loss_Master_Calc_Input.risk_zip_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.terr_code = EXP_Loss_Master_Calc_Input.terr_code AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.tax_loc = EXP_Loss_Master_Calc_Input.tax_loc_out AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.class_code = EXP_Loss_Master_Calc_Input.class_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.exposure = EXP_Loss_Master_Calc_Input.exposure AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.sub_line_code = EXP_Loss_Master_Calc_Input.sub_line_code_out AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.source_sar_asl = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.source_sar_sp_use_code = EXP_Loss_Master_Calc_Input.Default_Value AND LKP_Loss_Master_Dim_Find_Dim_Id_DCT.source_statistical_line = EXP_Loss_Master_Calc_Input.Default_Value\n\tLEFT JOIN LKP_claim_financial_type_dim\n\tON LKP_claim_financial_type_dim.financial_type_code = EXP_Loss_Master_Calc_Input.in_FinancialTypeCode\n\tLEFT JOIN LKP_reinsurance_coverage_dim1\n\tON LKP_reinsurance_coverage_dim1.edw_reins_cov_ak_id = EXP_Loss_Master_Calc_Input.reins_cov_ak_id AND LKP_reinsurance_coverage_dim1.eff_from_date <= EXP_Loss_Master_Calc_Input.loss_master_run_date_plus_one AND LKP_reinsurance_coverage_dim1.eff_to_date >= EXP_Loss_Master_Calc_Input.loss_master_run_date_plus_one\n\tLEFT JOIN lkp_claim_transaction_type_dim2\n\tON lkp_claim_transaction_type_dim2.type_disability = EXP_Determine_Transaction_Values.type_disability_OUT AND lkp_claim_transaction_type_dim2.pms_trans_code = EXP_Determine_Transaction_Values.pms_trans_code AND lkp_claim_transaction_type_dim2.trans_ctgry_code = EXP_Determine_Transaction_Values.trans_ctgry_code_OUT AND lkp_claim_transaction_type_dim2.offset_onset_ind = EXP_Determine_Transaction_Values.offset_onset_ind_OUT AND lkp_claim_transaction_type_dim2.trans_kind_code = EXP_Determine_Transaction_Values.LM_trans_kind_code AND lkp_claim_transaction_type_dim2.trans_rsn = EXP_Determine_Transaction_Values.trns_rsn_OUT\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_incptn_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_incptn_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(incptn_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_loss_master_run_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_loss_master_run_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(loss_master_run_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_mplt_claim_loss_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_mplt_claim_loss_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(mplt_claim_loss_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_mplt_source_claim_rpted_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_mplt_source_claim_rpted_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(mplt_source_claim_rpted_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_mplt_claim_occurrence_rpted_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_mplt_claim_occurrence_rpted_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(mplt_claim_occurrence_rpted_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_mplt_pol_eff_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_mplt_pol_eff_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(mplt_pol_eff_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_mplt_pol_exp_date_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_mplt_pol_exp_date_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_TIMESTAMP(to_char(mplt_pol_exp_date, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CLAIM_PAYMENT_DIM LKP_CLAIM_PAYMENT_DIM_claim_pay_ak_id_loss_master_run_date\n\tON LKP_CLAIM_PAYMENT_DIM_claim_pay_ak_id_loss_master_run_date.edw_claim_pay_ak_id = claim_pay_ak_id\n\tAND LKP_CLAIM_PAYMENT_DIM_claim_pay_ak_id_loss_master_run_date.eff_from_date = loss_master_run_date\n\n),\nEXP_order_for_target AS (\n\tSELECT\n\tAUDIT_ID,\n\tloss_master_calculation_id,\n\tclaim_trans_pk_id_out,\n\tclaim_reins_trans_pk_id_out,\n\tDEFAULT_ID,\n\tloss_master_dim_id_out,\n\tclaim_occurrence_dim_id_out,\n\tclaimant_dim_id_out,\n\tclaimant_cov_dim_id_out,\n\tcov_dim_id_out,\n\tclaim_trans_type_dim_id_out,\n\treins_cov_dim_id_out,\n\tclaim_rep_dim_prim_claim_rep_id_out,\n\tclaim_rep_dim_examiner_id_out,\n\tpol_key_dim_id_out,\n\tcontract_cust_dim_id_out,\n\tagency_dim_id_out,\n\tclaim_pay_dim_id_out,\n\tclaim_pay_ctgry_type_dim_id_out,\n\tclaim_case_dim_id_out,\n\ttrans_date_id,\n\tpol_eff_date_id_out,\n\tpol_exp_date_id_out,\n\tsource_claim_rpted_date_id,\n\tclaim_occurrence_rpted_date_id_out,\n\tclaim_loss_date_id_out,\n\tincptn_date_id_out,\n\tloss_mater_run_date_id_out,\n\ttrans_amt,\n\ttrans_hist_amt,\n\tnew_claim_count,\n\toutstanding_amt,\n\tpaid_loss_amt,\n\tpaid_exp_amt,\n\teom_unpaid_loss_adjust_exp,\n\torig_reserve,\n\torig_reserve_extract,\n\tstrtgc_bus_dvsn_dim_id,\n\tInsuranceReferenceDimId,\n\tagency_dim_id_V3 AS AgencyDimID,\n\tSalesDivisionDimID,\n\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId,\n\to_CoverageDetailDimId AS CoverageDetailDimId_out,\n\to_DirectLossPaidExcludingRecoveries AS DirectLossPaidExcludingRecoveries,\n\to_DirectLossOutstandingExcludingRecoveries AS DirectLossOutstandingExcludingRecoveries,\n\to_DirectLossIncurredExcludingRecoveries AS DirectLossIncurredExcludingRecoveries,\n\to_DirectALAEPaidExcludingRecoveries AS DirectALAEPaidExcludingRecoveries,\n\to_DirectALAEOutstandingExcludingRecoveries AS DirectALAEOutstandingExcludingRecoveries,\n\to_DirectLossPaidIncludingRecoveries AS DirectLossPaidIncludingRecoveries,\n\to_DirectLossOutstandingIncludingRecoveries AS DirectLossOutstandingIncludingRecoveries,\n\to_DirectLossIncurredIncludingRecoveries AS DirectLossIncurredIncludingRecoveries,\n\to_DirectALAEPaidIncludingRecoveries AS DirectALAEPaidIncludingRecoveries,\n\to_DirectALAEIncurredIncludingRecoveries AS DirectALAEIncurredIncludingRecoveries,\n\to_TotalDirectLossRecoveryPaid AS TotalDirectLossRecoveryPaid,\n\to_ChangeInOutstandingAmount AS ChangeInOutstandingAmount,\n\to_ChangeInEOMUnpaidLossAdjustmentExpense AS ChangeInEOMUnpaidLossAdjustmentExpense,\n\to_ClaimFinancialTypeDimId AS ClaimFinancialTypeDimId\n\tFROM EXP_Consolidate_Data\n),\nLKP_Loss_Master_Fact AS (\n\tSELECT\n\tloss_master_fact_id,\n\tedw_loss_master_calculation_pk_id\n\tFROM (\n\t\tSELECT \n\t\t\tloss_master_fact_id,\n\t\t\tedw_loss_master_calculation_pk_id\n\t\tFROM loss_master_fact\n\t\tWHERE audit_id <> -50 AND edw_loss_master_calculation_pk_id <> -1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_loss_master_calculation_pk_id ORDER BY loss_master_fact_id DESC) = 1\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tLKP_Loss_Master_Fact.loss_master_fact_id,\n\tEXP_order_for_target.AUDIT_ID,\n\tEXP_order_for_target.loss_master_calculation_id,\n\tEXP_order_for_target.claim_trans_pk_id_out,\n\tEXP_order_for_target.claim_reins_trans_pk_id_out,\n\tEXP_order_for_target.DEFAULT_ID,\n\tEXP_order_for_target.loss_master_dim_id_out,\n\tEXP_order_for_target.claim_occurrence_dim_id_out,\n\tEXP_order_for_target.claimant_dim_id_out,\n\tEXP_order_for_target.claimant_cov_dim_id_out,\n\tEXP_order_for_target.cov_dim_id_out,\n\tEXP_order_for_target.claim_trans_type_dim_id_out,\n\tEXP_order_for_target.reins_cov_dim_id_out,\n\tEXP_order_for_target.claim_rep_dim_prim_claim_rep_id_out,\n\tEXP_order_for_target.claim_rep_dim_examiner_id_out,\n\tEXP_order_for_target.pol_key_dim_id_out,\n\tEXP_order_for_target.contract_cust_dim_id_out,\n\tEXP_order_for_target.agency_dim_id_out,\n\tEXP_order_for_target.claim_pay_dim_id_out,\n\tEXP_order_for_target.claim_pay_ctgry_type_dim_id_out,\n\tEXP_order_for_target.claim_case_dim_id_out,\n\tEXP_order_for_target.trans_date_id,\n\tEXP_order_for_target.pol_eff_date_id_out,\n\tEXP_order_for_target.pol_exp_date_id_out,\n\tEXP_order_for_target.source_claim_rpted_date_id,\n\tEXP_order_for_target.claim_occurrence_rpted_date_id_out,\n\tEXP_order_for_target.claim_loss_date_id_out,\n\tEXP_order_for_target.incptn_date_id_out,\n\tEXP_order_for_target.loss_mater_run_date_id_out,\n\tEXP_order_for_target.trans_amt,\n\tEXP_order_for_target.trans_hist_amt,\n\tEXP_order_for_target.new_claim_count,\n\tEXP_order_for_target.outstanding_amt,\n\tEXP_order_for_target.paid_loss_amt,\n\tEXP_order_for_target.paid_exp_amt,\n\tEXP_order_for_target.eom_unpaid_loss_adjust_exp,\n\tEXP_order_for_target.orig_reserve,\n\tEXP_order_for_target.orig_reserve_extract,\n\tEXP_order_for_target.strtgc_bus_dvsn_dim_id,\n\tEXP_order_for_target.InsuranceReferenceDimId,\n\tEXP_order_for_target.AgencyDimID,\n\tEXP_order_for_target.SalesDivisionDimID,\n\tEXP_order_for_target.InsuranceReferenceCoverageDimId,\n\tEXP_order_for_target.CoverageDetailDimId_out,\n\tEXP_order_for_target.DirectLossPaidExcludingRecoveries,\n\tEXP_order_for_target.DirectLossOutstandingExcludingRecoveries,\n\tEXP_order_for_target.DirectLossIncurredExcludingRecoveries,\n\tEXP_order_for_target.DirectALAEPaidExcludingRecoveries,\n\tEXP_order_for_target.DirectALAEOutstandingExcludingRecoveries,\n\tEXP_order_for_target.DirectLossPaidIncludingRecoveries,\n\tEXP_order_for_target.DirectLossOutstandingIncludingRecoveries,\n\tEXP_order_for_target.DirectLossIncurredIncludingRecoveries,\n\tEXP_order_for_target.DirectALAEPaidIncludingRecoveries,\n\tEXP_order_for_target.DirectALAEIncurredIncludingRecoveries,\n\tEXP_order_for_target.TotalDirectLossRecoveryPaid,\n\tEXP_order_for_target.ChangeInOutstandingAmount,\n\tEXP_order_for_target.ChangeInEOMUnpaidLossAdjustmentExpense,\n\tEXP_order_for_target.ClaimFinancialTypeDimId\n\tFROM EXP_order_for_target\n\tLEFT JOIN LKP_Loss_Master_Fact\n\tON LKP_Loss_Master_Fact.edw_loss_master_calculation_pk_id = EXP_order_for_target.loss_master_calculation_id\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ISNULL(loss_master_fact_id)),\nRTR_INSERT_UPDATE_DEFAULT1 AS (SELECT * FROM RTR_INSERT_UPDATE WHERE NOT ( (ISNULL(loss_master_fact_id)) )),\nUPD_UPDATE AS (\n\tSELECT\n\tloss_master_fact_id AS loss_master_fact_id2, \n\tAUDIT_ID AS AUDIT_ID2, \n\tloss_master_calculation_id AS loss_master_calculation_id2, \n\tclaim_trans_pk_id_out AS claim_trans_pk_id_out2, \n\tclaim_reins_trans_pk_id_out AS claim_reins_trans_pk_id_out2, \n\tDEFAULT_ID AS DEFAULT_ID2, \n\tloss_master_dim_id_out AS loss_master_dim_id_out2, \n\tclaim_occurrence_dim_id_out AS claim_occurrence_dim_id_out2, \n\tclaimant_dim_id_out AS claimant_dim_id_out2, \n\tclaimant_cov_dim_id_out AS claimant_cov_dim_id_out2, \n\tcov_dim_id_out AS cov_dim_id_out2, \n\tclaim_trans_type_dim_id_out AS claim_trans_type_dim_id_out2, \n\treins_cov_dim_id_out AS reins_cov_dim_id_out2, \n\tclaim_rep_dim_prim_claim_rep_id_out AS claim_rep_dim_prim_claim_rep_id_out2, \n\tclaim_rep_dim_examiner_id_out AS claim_rep_dim_examiner_id_out2, \n\tpol_key_dim_id_out AS pol_key_dim_id_out2, \n\tcontract_cust_dim_id_out AS contract_cust_dim_id_out2, \n\tagency_dim_id_out AS agency_dim_id_out2, \n\tclaim_pay_dim_id_out AS claim_pay_dim_id_out2, \n\tclaim_pay_ctgry_type_dim_id_out AS claim_pay_ctgry_type_dim_id_out2, \n\tclaim_case_dim_id_out AS claim_case_dim_id_out2, \n\ttrans_date_id AS trans_date_id2, \n\tpol_eff_date_id_out AS pol_eff_date_id_out2, \n\tpol_exp_date_id_out AS pol_exp_date_id_out2, \n\tsource_claim_rpted_date_id AS source_claim_rpted_date_id2, \n\tclaim_occurrence_rpted_date_id_out AS claim_occurrence_rpted_date_id_out2, \n\tclaim_loss_date_id_out AS claim_loss_date_id_out2, \n\tincptn_date_id_out AS incptn_date_id_out2, \n\tloss_mater_run_date_id_out AS loss_mater_run_date_id_out2, \n\ttrans_amt AS trans_amt2, \n\ttrans_hist_amt AS trans_hist_amt2, \n\tnew_claim_count AS new_claim_count2, \n\toutstanding_amt AS outstanding_amt2, \n\tpaid_loss_amt AS paid_loss_amt2, \n\tpaid_exp_amt AS paid_exp_amt2, \n\teom_unpaid_loss_adjust_exp AS eom_unpaid_loss_adjust_exp2, \n\torig_reserve AS orig_reserve2, \n\torig_reserve_extract AS orig_reserve_extract2, \n\tstrtgc_bus_dvsn_dim_id AS strtgc_bus_dvsn_dim_id2, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId2, \n\tAgencyDimID AS AgencyDimID2, \n\tSalesDivisionDimID AS SalesDivisionDimID2, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId2, \n\tCoverageDetailDimId_out AS CoverageDetailDimId_out2, \n\tDirectLossPaidExcludingRecoveries, \n\tDirectLossOutstandingExcludingRecoveries, \n\tDirectLossIncurredExcludingRecoveries, \n\tDirectALAEPaidExcludingRecoveries, \n\tDirectALAEOutstandingExcludingRecoveries, \n\tDirectLossPaidIncludingRecoveries, \n\tDirectLossOutstandingIncludingRecoveries, \n\tDirectLossIncurredIncludingRecoveries, \n\tDirectALAEPaidIncludingRecoveries, \n\tDirectALAEIncurredIncludingRecoveries, \n\tTotalDirectLossRecoveryPaid\n\tFROM RTR_INSERT_UPDATE_DEFAULT1\n),\nTGT_loss_master_fact_Update AS (\n\tMERGE INTO loss_master_fact AS T\n\tUSING UPD_UPDATE AS S\n\tON T.loss_master_fact_id = S.loss_master_fact_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.edw_loss_master_calculation_pk_id = S.loss_master_calculation_id2, T.edw_claim_trans_pk_id = S.claim_trans_pk_id_out2, T.edw_claim_reins_trans_pk_id = S.claim_reins_trans_pk_id_out2, T.wc_stage_loss_master_pk_id = S.DEFAULT_ID2, T.loss_master_dim_id = S.loss_master_dim_id_out2, T.claim_occurrence_dim_id = S.claim_occurrence_dim_id_out2, T.claimant_dim_id = S.claimant_dim_id_out2, T.claimant_cov_dim_id = S.claimant_cov_dim_id_out2, T.cov_dim_id = S.cov_dim_id_out2, T.claim_trans_type_dim_id = S.claim_trans_type_dim_id_out2, T.reins_cov_dim_id = S.reins_cov_dim_id_out2, T.claim_rep_dim_prim_claim_rep_id = S.claim_rep_dim_prim_claim_rep_id_out2, T.claim_rep_dim_examiner_id = S.claim_rep_dim_examiner_id_out2, T.pol_dim_id = S.pol_key_dim_id_out2, T.contract_cust_dim_id = S.contract_cust_dim_id_out2, T.agency_dim_id = S.agency_dim_id_out2, T.claim_pay_dim_id = S.claim_pay_dim_id_out2, T.claim_pay_ctgry_type_dim_id = S.claim_pay_ctgry_type_dim_id_out2, T.claim_case_dim_id = S.claim_case_dim_id_out2, T.claim_trans_date_id = S.trans_date_id2, T.pol_eff_date_id = S.pol_eff_date_id_out2, T.pol_exp_date_id = S.pol_exp_date_id_out2, T.source_claim_rpted_date_id = S.source_claim_rpted_date_id2, T.claim_rpted_date_id = S.claim_occurrence_rpted_date_id_out2, T.claim_loss_date_id = S.claim_loss_date_id_out2, T.incptn_date_id = S.incptn_date_id_out2, T.loss_master_run_date_id = S.loss_mater_run_date_id_out2, T.claim_trans_amt = S.trans_amt2, T.claim_trans_hist_amt = S.trans_hist_amt2, T.new_claim_count = S.new_claim_count2, T.outstanding_amt = S.outstanding_amt2, T.paid_loss_amt = S.paid_loss_amt2, T.paid_exp_amt = S.paid_exp_amt2, T.eom_unpaid_loss_adjust_exp = S.eom_unpaid_loss_adjust_exp2, T.orig_reserve = S.orig_reserve2, T.orig_reserve_extract = S.orig_reserve_extract2, T.asl_dim_id = S.DEFAULT_ID2, T.asl_prdct_code_dim_id = S.DEFAULT_ID2, T.strtgc_bus_dvsn_dim_id = S.strtgc_bus_dvsn_dim_id2, T.prdct_code_dim_id = S.DEFAULT_ID2, T.InsuranceReferenceDimId = S.InsuranceReferenceDimId2, T.AgencyDimId = S.AgencyDimID2, T.SalesDivisionDimId = S.SalesDivisionDimID2, T.InsuranceReferenceCoverageDimId = S.InsuranceReferenceCoverageDimId2, T.CoverageDetailDimId = S.CoverageDetailDimId_out2\n),\nTGT_loss_master_fact_Insert AS (\n\tINSERT INTO loss_master_fact\n\t(audit_id, edw_loss_master_calculation_pk_id, edw_claim_trans_pk_id, edw_claim_reins_trans_pk_id, wc_stage_loss_master_pk_id, loss_master_dim_id, claim_occurrence_dim_id, claimant_dim_id, claimant_cov_dim_id, cov_dim_id, claim_trans_type_dim_id, reins_cov_dim_id, claim_rep_dim_prim_claim_rep_id, claim_rep_dim_examiner_id, pol_dim_id, contract_cust_dim_id, agency_dim_id, claim_pay_dim_id, claim_pay_ctgry_type_dim_id, claim_case_dim_id, claim_trans_date_id, pol_eff_date_id, pol_exp_date_id, source_claim_rpted_date_id, claim_rpted_date_id, claim_loss_date_id, incptn_date_id, loss_master_run_date_id, claim_trans_amt, claim_trans_hist_amt, new_claim_count, outstanding_amt, paid_loss_amt, paid_exp_amt, eom_unpaid_loss_adjust_exp, orig_reserve, orig_reserve_extract, asl_dim_id, asl_prdct_code_dim_id, strtgc_bus_dvsn_dim_id, prdct_code_dim_id, InsuranceReferenceDimId, AgencyDimId, SalesDivisionDimId, InsuranceReferenceCoverageDimId, CoverageDetailDimId, ChangeInOutstandingAmount, ChangeInEOMUnpaidLossAdjustmentExpense, ClaimFinancialTypeDimId)\n\tSELECT \n\tAUDIT_ID AS AUDIT_ID, \n\tloss_master_calculation_id AS EDW_LOSS_MASTER_CALCULATION_PK_ID, \n\tclaim_trans_pk_id_out AS EDW_CLAIM_TRANS_PK_ID, \n\tclaim_reins_trans_pk_id_out AS EDW_CLAIM_REINS_TRANS_PK_ID, \n\tDEFAULT_ID AS WC_STAGE_LOSS_MASTER_PK_ID, \n\tloss_master_dim_id_out AS LOSS_MASTER_DIM_ID, \n\tclaim_occurrence_dim_id_out AS CLAIM_OCCURRENCE_DIM_ID, \n\tclaimant_dim_id_out AS CLAIMANT_DIM_ID, \n\tclaimant_cov_dim_id_out AS CLAIMANT_COV_DIM_ID, \n\tcov_dim_id_out AS COV_DIM_ID, \n\tclaim_trans_type_dim_id_out AS CLAIM_TRANS_TYPE_DIM_ID, \n\treins_cov_dim_id_out AS REINS_COV_DIM_ID, \n\tclaim_rep_dim_prim_claim_rep_id_out AS CLAIM_REP_DIM_PRIM_CLAIM_REP_ID, \n\tclaim_rep_dim_examiner_id_out AS CLAIM_REP_DIM_EXAMINER_ID, \n\tpol_key_dim_id_out AS POL_DIM_ID, \n\tcontract_cust_dim_id_out AS CONTRACT_CUST_DIM_ID, \n\tagency_dim_id_out AS AGENCY_DIM_ID, \n\tclaim_pay_dim_id_out AS CLAIM_PAY_DIM_ID, \n\tclaim_pay_ctgry_type_dim_id_out AS CLAIM_PAY_CTGRY_TYPE_DIM_ID, \n\tclaim_case_dim_id_out AS CLAIM_CASE_DIM_ID, \n\ttrans_date_id AS CLAIM_TRANS_DATE_ID, \n\tpol_eff_date_id_out AS POL_EFF_DATE_ID, \n\tpol_exp_date_id_out AS POL_EXP_DATE_ID, \n\tSOURCE_CLAIM_RPTED_DATE_ID, \n\tclaim_occurrence_rpted_date_id_out AS CLAIM_RPTED_DATE_ID, \n\tclaim_loss_date_id_out AS CLAIM_LOSS_DATE_ID, \n\tincptn_date_id_out AS INCPTN_DATE_ID, \n\tloss_mater_run_date_id_out AS LOSS_MASTER_RUN_DATE_ID, \n\ttrans_amt AS CLAIM_TRANS_AMT, \n\ttrans_hist_amt AS CLAIM_TRANS_HIST_AMT, \n\tNEW_CLAIM_COUNT, \n\tOUTSTANDING_AMT, \n\tPAID_LOSS_AMT, \n\tPAID_EXP_AMT, \n\tEOM_UNPAID_LOSS_ADJUST_EXP, \n\tORIG_RESERVE, \n\tORIG_RESERVE_EXTRACT, \n\tDEFAULT_ID AS ASL_DIM_ID, \n\tDEFAULT_ID AS ASL_PRDCT_CODE_DIM_ID, \n\tSTRTGC_BUS_DVSN_DIM_ID, \n\tDEFAULT_ID AS PRDCT_CODE_DIM_ID, \n\tINSURANCEREFERENCEDIMID, \n\tAgencyDimID AS AGENCYDIMID, \n\tSalesDivisionDimID AS SALESDIVISIONDIMID, \n\tINSURANCEREFERENCECOVERAGEDIMID, \n\tCoverageDetailDimId_out AS COVERAGEDETAILDIMID, \n\tCHANGEINOUTSTANDINGAMOUNT, \n\tCHANGEINEOMUNPAIDLOSSADJUSTMENTEXPENSE, \n\tCLAIMFINANCIALTYPEDIMID\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERECLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DB_NAME_DATAMART": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DB_NAME_EDW": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataMart/"
        },
        "annotations": []
    }
}