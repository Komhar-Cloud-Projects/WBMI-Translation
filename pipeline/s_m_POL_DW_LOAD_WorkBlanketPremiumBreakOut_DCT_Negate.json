{
    "name": "s_m_POL_DW_LOAD_WorkBlanketPremiumBreakOut_DCT_Negate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkBlanketPremiumBreakOut_DCT_Negate",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkBlanketPremiumBreakOut_DCT_Negate AS (\n\tSELECT WBP.BlanketPremiumTransactionAKID,\r\n\tWBP.PremiumTransactionAKId,\r\n\tWBP.AnnualStatementLineId,\r\n\tWBP.SourceCoverageType,\r\n\tWBP.TotalBlanketPremium,\r\n\tWBP.BreakOutNumerator,\r\n\tWBP.BreakOutDenominator,\r\n\tWBP.BreakOutPremium,\r\n\tWPTDRN.NewNegatePremiumTransactionAKID\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkBlanketPremiumBreakOut WBP\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransactionDataRepairNegate WPTDRN\r\n\tON WBP.PremiumTransactionAKId = WPTDRN.OriginalPremiumTransactionAKID\r\n\tand WPTDRN.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n),\nEXP_WorkBlanketPremiumBreakOut_DCT_Negate AS (\n\tSELECT\n\tBlanketPremiumTransactionAKID,\n\tPremiumTransactionAKId AS Old_PremiumTransactionAKId,\n\tAnnualStatementLineId,\n\tSourceCoverageType,\n\tTotalBlanketPremium,\n\tBreakOutNumerator,\n\tBreakOutDenominator,\n\tBreakOutPremium,\n\tNewNegatePremiumTransactionAKID\n\tFROM SQ_WorkBlanketPremiumBreakOut_DCT_Negate\n),\nEXP_MetaData AS (\n\tSELECT\n\tBlanketPremiumTransactionAKID,\n\tAnnualStatementLineId,\n\tSourceCoverageType,\n\tTotalBlanketPremium,\n\tBreakOutNumerator,\n\tBreakOutDenominator,\n\tBreakOutPremium,\n\tNewNegatePremiumTransactionAKID,\n\tNewNegatePremiumTransactionAKID AS o_PremiumTransactionAKId\n\tFROM EXP_WorkBlanketPremiumBreakOut_DCT_Negate\n),\nLKP_WorkBlanketPremiumBreakOut AS (\n\tSELECT\n\tWorkBlanketPremiumBreakOutId,\n\tBlanketPremiumTransactionAKID,\n\tPremiumTransactionAKId,\n\tAnnualStatementLineId,\n\tSourceCoverageType,\n\tTotalBlanketPremium,\n\tBreakOutNumerator,\n\tBreakOutDenominator,\n\tBreakOutPremium\n\tFROM (\n\t\tSELECT \n\t\t\tWorkBlanketPremiumBreakOutId,\n\t\t\tBlanketPremiumTransactionAKID,\n\t\t\tPremiumTransactionAKId,\n\t\t\tAnnualStatementLineId,\n\t\t\tSourceCoverageType,\n\t\t\tTotalBlanketPremium,\n\t\t\tBreakOutNumerator,\n\t\t\tBreakOutDenominator,\n\t\t\tBreakOutPremium\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkBlanketPremiumBreakOut\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BlanketPremiumTransactionAKID,PremiumTransactionAKId ORDER BY WorkBlanketPremiumBreakOutId) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_WorkBlanketPremiumBreakOut.WorkBlanketPremiumBreakOutId AS lkp_WorkBlanketPremiumBreakOutId,\n\tLKP_WorkBlanketPremiumBreakOut.BlanketPremiumTransactionAKID AS lkp_BlanketPremiumTransactionAKID,\n\tLKP_WorkBlanketPremiumBreakOut.PremiumTransactionAKId AS lkp_PremiumTransactionAKId,\n\tLKP_WorkBlanketPremiumBreakOut.AnnualStatementLineId AS lkp_AnnualStatementLineId,\n\tLKP_WorkBlanketPremiumBreakOut.SourceCoverageType AS lkp_SourceCoverageType,\n\tLKP_WorkBlanketPremiumBreakOut.TotalBlanketPremium AS lkp_TotalBlanketPremium,\n\tLKP_WorkBlanketPremiumBreakOut.BreakOutNumerator AS lkp_BreakOutNumerator,\n\tLKP_WorkBlanketPremiumBreakOut.BreakOutDenominator AS lkp_BreakOutDenominator,\n\tLKP_WorkBlanketPremiumBreakOut.BreakOutPremium AS lkp_BreakOutPremium,\n\tEXP_MetaData.BlanketPremiumTransactionAKID AS In_BlanketPremiumTransactionAKID,\n\tEXP_MetaData.AnnualStatementLineId AS In_AnnualStatementLineId,\n\tEXP_MetaData.SourceCoverageType AS In_SourceCoverageType,\n\tEXP_MetaData.TotalBlanketPremium AS In_TotalBlanketPremium,\n\tEXP_MetaData.BreakOutNumerator AS In_BreakOutNumerator,\n\tEXP_MetaData.BreakOutDenominator AS In_BreakOutDenominator,\n\tEXP_MetaData.BreakOutPremium AS In_BreakOutPremium,\n\tEXP_MetaData.o_PremiumTransactionAKId AS In_PremiumTransactionAKId,\n\t-- *INF*: IIF(ISNULL(lkp_WorkBlanketPremiumBreakOutId),'NEW','UPDATE')\n\tIFF(lkp_WorkBlanketPremiumBreakOutId IS NULL, 'NEW', 'UPDATE') AS o_ChangeFlag,\n\tlkp_WorkBlanketPremiumBreakOutId AS o_WorkBlanketPremiumBreakOutId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tSYSDATE AS o_CreatedDate,\n\tIn_BlanketPremiumTransactionAKID AS o_BlanketPremiumTransactionAKID,\n\tIn_PremiumTransactionAKId AS o_PremiumTransactionAKId,\n\tIn_AnnualStatementLineId AS o_AnnualStatementLineId,\n\tIn_SourceCoverageType AS o_SourceCoverageType,\n\tIn_TotalBlanketPremium AS o_TotalBlanketPremium,\n\tIn_BreakOutNumerator AS o_BreakOutNumerator,\n\tIn_BreakOutDenominator AS o_BreakOutDenominator,\n\tIn_BreakOutPremium AS o_BreakOutPremium\n\tFROM EXP_MetaData\n\tLEFT JOIN LKP_WorkBlanketPremiumBreakOut\n\tON LKP_WorkBlanketPremiumBreakOut.BlanketPremiumTransactionAKID = EXP_MetaData.BlanketPremiumTransactionAKID AND LKP_WorkBlanketPremiumBreakOut.PremiumTransactionAKId = EXP_MetaData.o_PremiumTransactionAKId\n),\nRTR_Insert_Update AS (\n\tSELECT\n\to_ChangeFlag AS ChangeFlag,\n\to_WorkBlanketPremiumBreakOutId AS WorkBlanketPremiumBreakOutId,\n\to_AuditID AS AuditID,\n\to_CreatedDate AS CreatedDate,\n\to_BlanketPremiumTransactionAKID AS BlanketPremiumTransactionAKID,\n\to_PremiumTransactionAKId AS PremiumTransactionAKId,\n\to_AnnualStatementLineId AS AnnualStatementLineId,\n\to_SourceCoverageType AS SourceCoverageType,\n\to_TotalBlanketPremium AS TotalBlanketPremium,\n\to_BreakOutNumerator AS BreakOutNumerator,\n\to_BreakOutDenominator AS BreakOutDenominator,\n\to_BreakOutPremium AS BreakOutPremium\n\tFROM EXP_DetectChanges\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE ChangeFlag='NEW'),\nRTR_Insert_Update_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE ChangeFlag='UPDATE'),\nEXP_Insert AS (\n\tSELECT\n\tAuditID,\n\tCreatedDate,\n\tBlanketPremiumTransactionAKID,\n\tPremiumTransactionAKId,\n\tAnnualStatementLineId,\n\tSourceCoverageType,\n\tTotalBlanketPremium,\n\tBreakOutNumerator,\n\tBreakOutDenominator,\n\tBreakOutPremium\n\tFROM RTR_Insert_Update_INSERT\n),\nWorkBlanketPremiumBreakOut_Inserts AS (\n\tINSERT INTO WorkBlanketPremiumBreakOut\n\t(AuditId, CreatedDate, BlanketPremiumTransactionAKID, PremiumTransactionAKId, AnnualStatementLineId, SourceCoverageType, TotalBlanketPremium, BreakOutNumerator, BreakOutDenominator, BreakOutPremium)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tBLANKETPREMIUMTRANSACTIONAKID, \n\tPREMIUMTRANSACTIONAKID, \n\tANNUALSTATEMENTLINEID, \n\tSOURCECOVERAGETYPE, \n\tTOTALBLANKETPREMIUM, \n\tBREAKOUTNUMERATOR, \n\tBREAKOUTDENOMINATOR, \n\tBREAKOUTPREMIUM\n\tFROM EXP_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "216690"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "881000"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7484968"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "06/27/2023 12:02:14"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "07/04/2023 10:58:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}