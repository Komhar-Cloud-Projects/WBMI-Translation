{
    "name": "s_m_FEED_Load_HSBCyber_Policy_PreExtract_Tables",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_HSBCyber_Policy_PreExtract_Tables",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_PaymentBordereauExtract AS (\n\tSELECT\n\tContractNumber,\n\tPolicyNumber\n\tFROM (\n\t\tSELECT \n\t\t\tContractNumber,\n\t\t\tPolicyNumber\n\t\tFROM HSBCyberPaymentBordereauExtract\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber ORDER BY ContractNumber) = 1\n),\nSQ_PaymentRecordTable AS (\n\tselect policyNumber,count(*) as cnt from (\r\n\tselect policyNumber,coveragetype from (\r\n\tSELECT   b.AuditId, b.PolicyKey,  b.RunDate,b.Company,  b.ProductCode,b.ContractNumber,b.InsuredName, b.PreviousPolicyNumber, b.coveragetype,b.PremiumTransactionCode, b.PremiumTransactionEffectiveDate,\r\n\tb.CoverageEffectiveDate, b.CoverageExpirationDate, b.CyberCoverageGrossPremium, b.CyberCoverageNetPremium, b.ProgramCode,b.premiumtransactionentereddate\r\n\t,substring(b.PolicyKey,1,10) as policyNumber\r\n\tfrom\r\n\t(select distinct policykey\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.WORKHSBCYBER \r\n\t) w\r\n\tinner join (select AuditId, PremiumMasterCalculationId, RunDate, ProductCode, PolicyKey, Company, PremiumTransactionCode, PremiumTransactionEffectiveDate,\r\n\tCoverageEffectiveDate, CoverageExpirationDate, CyberCoverageGrossPremium, CyberCoverageNetPremium, PreviousPolicyNumber, ProgramCode,\r\n\tInsuredName, ContractNumber,coveragetype,premiumtransactionentereddate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.WORKHSBCYBER\r\n\twhere convert(date,WorkHSBCyber.CoverageEffectiveDate)<=@{pipeline().parameters.RUNDATE} \r\n\tAND  \r\n\tconvert(date,WorkHSBCyber.CoverageExpirationDate)>=@{pipeline().parameters.RUNDATE} \r\n\tAND \r\n\tconvert(date,WorkHSBCyber.PolicyCancellationdate)>@{pipeline().parameters.RUNDATE}\r\n\tand (\r\n\t\t\t(coveragetype in ('CyberComputerAttack') and FirstPartyLimit is not null)\r\n\t\t\tor \r\n\t\t\t(coveragetype in ('CyberNetworkSecurity') and ThirdPartyLimit is not null)\r\n\t\t)\r\n\t ) b\r\n\ton b.policykey=w.policykey\r\n\t) a group by policyNumber,coveragetype\r\n\t) b  where coveragetype in ('CyberComputerAttack','CyberNetworkSecurity') group by policyNumber\n),\nEXP_ContractNumber AS (\n\tSELECT\n\tpolicyNumber,\n\tcnt\n\tFROM SQ_PaymentRecordTable\n),\nSQ_WorkHSBCyber AS (\n\tSELECT AuditId, RunDate, PolicyKey, Company, ProductCode, ContractNumber, InsuredName, MailingAddressStreetName, MailingAddressCityName, MailingAddressStateAbbreviation, MailingAddressZipCode, TotalPackageGrossPremium, TotalPropertyGrossPremium, FirstPartyLimit, FirstPartyDeductible, OccupancyCode, PreviousPolicyNumber, AgencyCode, BranchCode, CoverageEffectiveDate, CoverageExpirationDate, CyberCoverageGrossPremium, CyberCoverageNetPremium, FirstPartyCoverage, ThirdPartyLimit, ThirdPartyDeductible, ThirdPartyCoverage, ExtortionSublimit,premiumtransactionentereddate\r\n\tFROM \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkHSBCyber  \r\n\tWHERE  \r\n\tconvert(date,WorkHSBCyber.CoverageEffectiveDate)<=@{pipeline().parameters.RUNDATE} \r\n\tAND  \r\n\tconvert(date,WorkHSBCyber.CoverageExpirationDate)>=@{pipeline().parameters.RUNDATE} \r\n\tAND \r\n\tconvert(date,WorkHSBCyber.PolicyCancellationdate)>@{pipeline().parameters.RUNDATE}\n),\nEXP_WorkHSBCyber AS (\n\tSELECT\n\tAuditID,\n\tRunDate,\n\tPolicyKey,\n\tCompany,\n\tProductCode,\n\tContractNumber,\n\tNameOfInsured,\n\tMailingAddressStreetName,\n\tMailingAddressCity,\n\tMailingAddressState,\n\tMailingAddressZipCode,\n\tTotalPackageGrossPremium,\n\tTotalPropertyGrossPremium,\n\tFirstPartyLimit,\n\tFirstPartyDeductible,\n\tOccupancyCode,\n\tPreviousPolicyNumber,\n\tAgencyCode,\n\tBranchCode,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tCoverageGrossPremium,\n\tCoverageNetPremium,\n\tFirstPartyCoverage,\n\tThirdPartyLimit,\n\tThirdPartyDeductible,\n\tThirdPartyCoverage,\n\tExtortionSublimit,\n\tpremiumtransactionentereddate,\n\t-- *INF*: substr(PolicyKey,1.10)\n\tsubstr(PolicyKey, 1.10) AS o_PolicyNumber\n\tFROM SQ_WorkHSBCyber\n),\nJNR_ContractNumber AS (SELECT\n\tEXP_WorkHSBCyber.AuditID, \n\tEXP_WorkHSBCyber.RunDate, \n\tEXP_WorkHSBCyber.PolicyKey, \n\tEXP_WorkHSBCyber.Company, \n\tEXP_WorkHSBCyber.ProductCode, \n\tEXP_WorkHSBCyber.ContractNumber, \n\tEXP_WorkHSBCyber.NameOfInsured, \n\tEXP_WorkHSBCyber.MailingAddressStreetName, \n\tEXP_WorkHSBCyber.MailingAddressCity, \n\tEXP_WorkHSBCyber.MailingAddressState, \n\tEXP_WorkHSBCyber.MailingAddressZipCode, \n\tEXP_WorkHSBCyber.TotalPackageGrossPremium, \n\tEXP_WorkHSBCyber.TotalPropertyGrossPremium, \n\tEXP_WorkHSBCyber.FirstPartyLimit, \n\tEXP_WorkHSBCyber.FirstPartyDeductible, \n\tEXP_WorkHSBCyber.OccupancyCode, \n\tEXP_WorkHSBCyber.PreviousPolicyNumber, \n\tEXP_WorkHSBCyber.AgencyCode, \n\tEXP_WorkHSBCyber.BranchCode, \n\tEXP_WorkHSBCyber.CoverageEffectiveDate, \n\tEXP_WorkHSBCyber.CoverageExpirationDate, \n\tEXP_WorkHSBCyber.CoverageGrossPremium, \n\tEXP_WorkHSBCyber.CoverageNetPremium, \n\tEXP_WorkHSBCyber.FirstPartyCoverage, \n\tEXP_WorkHSBCyber.ThirdPartyLimit, \n\tEXP_WorkHSBCyber.ThirdPartyDeductible, \n\tEXP_WorkHSBCyber.ThirdPartyCoverage, \n\tEXP_WorkHSBCyber.ExtortionSublimit, \n\tEXP_WorkHSBCyber.premiumtransactionentereddate, \n\tEXP_WorkHSBCyber.o_PolicyNumber, \n\tEXP_ContractNumber.policyNumber, \n\tEXP_ContractNumber.cnt\n\tFROM EXP_WorkHSBCyber\n\tLEFT OUTER JOIN EXP_ContractNumber\n\tON EXP_ContractNumber.policyNumber = EXP_WorkHSBCyber.o_PolicyNumber\n),\nSRT_PTEnteredDtae AS (\n\tSELECT\n\tAuditID, \n\tRunDate, \n\tPolicyKey, \n\tCompany, \n\tProductCode, \n\tContractNumber, \n\tNameOfInsured, \n\tMailingAddressStreetName, \n\tMailingAddressCity, \n\tMailingAddressState, \n\tMailingAddressZipCode, \n\tTotalPackageGrossPremium, \n\tTotalPropertyGrossPremium, \n\tFirstPartyLimit, \n\tFirstPartyDeductible, \n\tOccupancyCode, \n\tPreviousPolicyNumber, \n\tAgencyCode, \n\tBranchCode, \n\tCoverageEffectiveDate, \n\tCoverageExpirationDate, \n\tCoverageGrossPremium, \n\tCoverageNetPremium, \n\tFirstPartyCoverage, \n\tThirdPartyLimit, \n\tThirdPartyDeductible, \n\tThirdPartyCoverage, \n\tExtortionSublimit, \n\tpremiumtransactionentereddate, \n\tpolicyNumber, \n\tcnt\n\tFROM JNR_ContractNumber\n\tORDER BY premiumtransactionentereddate ASC\n),\nAGG_PolicyRecord AS (\n\tSELECT\n\tAuditID,\n\tSysdate AS CreatedDate,\n\tSysdate AS ModifiedDate,\n\tRunDate,\n\tPolicyKey AS PolKey,\n\tCompany,\n\tProductCode,\n\tContractNumber,\n\t-- *INF*: SUBSTR(PolKey,1,10)\n\tSUBSTR(PolKey, 1, 10) AS PolicyNumber,\n\tNameOfInsured,\n\tMailingAddressStreetName,\n\tMailingAddressCity,\n\tMailingAddressState,\n\tMailingAddressZipCode,\n\tTotalPackageGrossPremium,\n\tTotalPropertyGrossPremium,\n\tFirstPartyLimit,\n\t-- *INF*: LAST(FirstPartyLimit)\n\tLAST(FirstPartyLimit) AS out_FirstPartyLimit,\n\tFirstPartyDeductible,\n\t-- *INF*: LAST(FirstPartyDeductible)\n\tLAST(FirstPartyDeductible) AS out_FirstPartyDeductible,\n\tOccupancyCode,\n\tPreviousPolicyNumber,\n\tAgencyCode,\n\tBranchCode,\n\tCoverageEffectiveDate AS PolicyEffectiveDate,\n\tCoverageExpirationDate AS PolicyExpirationDate,\n\tCoverageGrossPremium,\n\tCoverageNetPremium,\n\t-- *INF*: SUM(CoverageNetPremium)\r\n\t-- --incase of cancellation the premium reported should be net premium\r\n\t-- \n\tSUM(CoverageNetPremium) AS GrossPremium,\n\t-- *INF*: Round(0.7* Sum(CoverageGrossPremium),2)\r\n\t-- \n\tRound(0.7 * Sum(CoverageGrossPremium), 2) AS NetPremium,\n\tFirstPartyCoverage,\n\t-- *INF*: LAST(FirstPartyCoverage)\n\tLAST(FirstPartyCoverage) AS out_FirstPartyCoverage,\n\tThirdPartyLimit,\n\t-- *INF*: LAST(ThirdPartyLimit)\n\tLAST(ThirdPartyLimit) AS out_ThirdPartyLimit,\n\tThirdPartyDeductible,\n\t-- *INF*: last(ThirdPartyDeductible)\n\tlast(ThirdPartyDeductible) AS out_ThirdPartyDeductible,\n\tThirdPartyCoverage,\n\t-- *INF*: last(ThirdPartyCoverage)\n\tlast(ThirdPartyCoverage) AS out_ThirdPartyCoverage,\n\tExtortionSublimit,\n\t-- *INF*: last(ExtortionSublimit)\n\tlast(ExtortionSublimit) AS out_ExtortionSublimit,\n\tpremiumtransactionentereddate,\n\tcnt\n\tFROM SRT_PTEnteredDtae\n\tGROUP BY PolKey\n),\nEXP_PolicyRecord AS (\n\tSELECT\n\tAuditID,\n\tCreatedDate,\n\tModifiedDate,\n\tRunDate,\n\tCompany,\n\tProductCode,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_PAYMENTBORDEREAUEXTRACT(PolicyNumber)),'', :LKP.LKP_PAYMENTBORDEREAUEXTRACT(PolicyNumber))\n\tIFF(\n\t    LKP_PAYMENTBORDEREAUEXTRACT_PolicyNumber.ContractNumber IS NULL, '',\n\t    LKP_PAYMENTBORDEREAUEXTRACT_PolicyNumber.ContractNumber\n\t) AS ContractNumber,\n\tPolicyNumber,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tNameOfInsured,\n\tMailingAddressStreetName,\n\tMailingAddressCity,\n\tMailingAddressState,\n\tMailingAddressZipCode,\n\tTotalPackageGrossPremium,\n\tTotalPropertyGrossPremium,\n\tGrossPremium,\n\tNetPremium,\n\tout_FirstPartyLimit AS in_FirstPartyLimit,\n\t-- *INF*: IIF(ISNULL(in_FirstPartyLimit),'',in_FirstPartyLimit)\n\tIFF(in_FirstPartyLimit IS NULL, '', in_FirstPartyLimit) AS v_FirstPartyLimit,\n\t-- *INF*: TO_INTEGER(v_FirstPartyLimit)\n\tCAST(v_FirstPartyLimit AS INTEGER) AS out_FirstPartyLimit,\n\tout_FirstPartyDeductible AS in_FirstPartyDeductible,\n\t-- *INF*: IIF(ISNULL(in_FirstPartyDeductible),'',in_FirstPartyDeductible)\n\tIFF(in_FirstPartyDeductible IS NULL, '', in_FirstPartyDeductible) AS v_FirstPartyDeductible,\n\t-- *INF*: TO_INTEGER(v_FirstPartyDeductible)\n\tCAST(v_FirstPartyDeductible AS INTEGER) AS out_FirstPartyDeductible,\n\tOccupancyCode,\n\t0 AS PolicyTotalInsuredValue,\n\tPreviousPolicyNumber,\n\tAgencyCode,\n\tBranchCode,\n\tout_FirstPartyCoverage AS in_FirstPartyCoverage,\n\tout_ThirdPartyLimit AS in_ThirdPartyLimit,\n\t-- *INF*: IIF(ISNULL(in_ThirdPartyLimit),'',in_ThirdPartyLimit)\n\tIFF(in_ThirdPartyLimit IS NULL, '', in_ThirdPartyLimit) AS v_ThirdPartyLimit,\n\t-- *INF*: TO_INTEGER(v_ThirdPartyLimit)\n\tCAST(v_ThirdPartyLimit AS INTEGER) AS out_ThirdPartyLimit,\n\tout_ThirdPartyDeductible AS in_ThirdPartyDeductible,\n\t-- *INF*: IIF(ISNULL(in_ThirdPartyDeductible),'',in_ThirdPartyDeductible)\n\tIFF(in_ThirdPartyDeductible IS NULL, '', in_ThirdPartyDeductible) AS v_ThirdPartyDeductible,\n\t-- *INF*: TO_INTEGER(v_ThirdPartyDeductible)\n\tCAST(v_ThirdPartyDeductible AS INTEGER) AS out_ThirdPartyDeductible,\n\tout_ThirdPartyCoverage AS in_ThirdPartyCoverage,\n\tout_ExtortionSublimit AS in_ExtortionSublimit,\n\t-- *INF*: IIF(ISNULL(in_ExtortionSublimit),'',in_ExtortionSublimit)\n\tIFF(in_ExtortionSublimit IS NULL, '', in_ExtortionSublimit) AS v_ExtortionSublimit,\n\t-- *INF*: DECODE(TRUE , \r\n\t--  LTRIM(RTRIM(in_FirstPartyLimit))='50000','L',\r\n\t--  LTRIM(RTRIM(in_FirstPartyLimit))='100000','F',\r\n\t--  LTRIM(RTRIM(in_FirstPartyLimit))='250000','F',\r\n\t-- LTRIM(RTRIM(in_FirstPartyLimit))='500000','F',\r\n\t-- LTRIM(RTRIM(in_FirstPartyLimit))='1000000','F',\r\n\t-- 'N'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(in_FirstPartyLimit)) = '50000', 'L',\n\t    LTRIM(RTRIM(in_FirstPartyLimit)) = '100000', 'F',\n\t    LTRIM(RTRIM(in_FirstPartyLimit)) = '250000', 'F',\n\t    LTRIM(RTRIM(in_FirstPartyLimit)) = '500000', 'F',\n\t    LTRIM(RTRIM(in_FirstPartyLimit)) = '1000000', 'F',\n\t    'N'\n\t) AS out_FirstPartyCoverage,\n\t-- *INF*: DECODE(TRUE , \r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='50000','L',\r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='10000','F',\r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='100000','F',\r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='250000','F',\r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='500000','F',\r\n\t-- LTRIM(RTRIM(in_ThirdPartyLimit))='1000000','F',\r\n\t-- 'N'\r\n\t-- )\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '50000', 'L',\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '10000', 'F',\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '100000', 'F',\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '250000', 'F',\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '500000', 'F',\n\t    LTRIM(RTRIM(in_ThirdPartyLimit)) = '1000000', 'F',\n\t    'N'\n\t) AS out_ThirdPartyCoverage,\n\t-- *INF*: TO_INTEGER(v_ExtortionSublimit)\n\tCAST(v_ExtortionSublimit AS INTEGER) AS out_ExtortionSublimit,\n\tContractNumber AS ContractNumber1,\n\tcnt,\n\t-- *INF*: IIF(cnt=2,\r\n\t-- Decode(True,\r\n\t-- IN(ContractNumber1,'1003696','1003697'),'1003654',\r\n\t-- IN(ContractNumber1,'1003699','1003698'),'1003655',\r\n\t-- IN(ContractNumber1,'1003703','1003702'),'1003656',\r\n\t-- IN(ContractNumber1,'1003700','1003701'),'1003657'\r\n\t-- ),\r\n\t-- ContractNumber1)\n\tIFF(\n\t    cnt = 2,\n\t    Decode(\n\t        True,\n\t        ContractNumber1 IN ('1003696','1003697'), '1003654',\n\t        ContractNumber1 IN ('1003699','1003698'), '1003655',\n\t        ContractNumber1 IN ('1003703','1003702'), '1003656',\n\t        ContractNumber1 IN ('1003700','1003701'), '1003657'\n\t    ),\n\t    ContractNumber1\n\t) AS o_ContractNumber\n\tFROM AGG_PolicyRecord\n\tLEFT JOIN LKP_PAYMENTBORDEREAUEXTRACT LKP_PAYMENTBORDEREAUEXTRACT_PolicyNumber\n\tON LKP_PAYMENTBORDEREAUEXTRACT_PolicyNumber.PolicyNumber = PolicyNumber\n\n),\nFLT_GrossPremium AS (\n\tSELECT\n\tAuditID, \n\tCreatedDate, \n\tModifiedDate, \n\tRunDate, \n\tCompany, \n\tProductCode, \n\to_ContractNumber AS ContractNumber, \n\tPolicyNumber, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate, \n\tNameOfInsured, \n\tMailingAddressStreetName, \n\tMailingAddressCity, \n\tMailingAddressState, \n\tMailingAddressZipCode, \n\tTotalPackageGrossPremium, \n\tTotalPropertyGrossPremium, \n\tGrossPremium, \n\tNetPremium, \n\tout_FirstPartyLimit AS FirstPartyLimit, \n\tout_FirstPartyDeductible AS FirstPartyDeductible, \n\tOccupancyCode, \n\tPolicyTotalInsuredValue, \n\tPreviousPolicyNumber, \n\tAgencyCode, \n\tBranchCode, \n\tout_FirstPartyCoverage AS FirstPartyCoverage, \n\tout_ThirdPartyLimit AS ThirdPartyLimit, \n\tout_ThirdPartyDeductible AS ThirdPartyDeductible, \n\tout_ThirdPartyCoverage AS ThirdPartyCoverage, \n\tout_ExtortionSublimit AS ExtortionSublimit\n\tFROM EXP_PolicyRecord\n\tWHERE GrossPremium>0\n),\nHSBCyberPolicyExtract AS (\n\tTRUNCATE TABLE HSBCyberPolicyExtract;\n\tINSERT INTO HSBCyberPolicyExtract\n\t(AuditId, CreatedDate, ModifiedDate, RunDate, Company, ProductCode, ContractNumber, PolicyNumber, CyberCoverageEffectiveDate, CyberCoverageExpirationDate, NameOfInsured, MailingAddressStreetName, MailingAddressCity, MailingAddressState, MailingAddressZipCode, TotalPackageGrossPremium, TotalPropertyGrossPremium, CyberGrossPremium, CyberNetPremium, OccupancyCode, PolicyTotalInsuredValue, PreviousPolicyNumber, AgentCode, BranchCode, FirstPartyLimit, FirstPartyDeductible, FirstPartyCoverage, ThirdPartyLimit, ThirdPartyDeductible, ThirdPartyCoverage, ExtortionSublimit)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tRUNDATE, \n\tCOMPANY, \n\tPRODUCTCODE, \n\tCONTRACTNUMBER, \n\tPOLICYNUMBER, \n\tPolicyEffectiveDate AS CYBERCOVERAGEEFFECTIVEDATE, \n\tPolicyExpirationDate AS CYBERCOVERAGEEXPIRATIONDATE, \n\tNAMEOFINSURED, \n\tMAILINGADDRESSSTREETNAME, \n\tMAILINGADDRESSCITY, \n\tMAILINGADDRESSSTATE, \n\tMAILINGADDRESSZIPCODE, \n\tTOTALPACKAGEGROSSPREMIUM, \n\tTOTALPROPERTYGROSSPREMIUM, \n\tGrossPremium AS CYBERGROSSPREMIUM, \n\tNetPremium AS CYBERNETPREMIUM, \n\tOCCUPANCYCODE, \n\tPOLICYTOTALINSUREDVALUE, \n\tPREVIOUSPOLICYNUMBER, \n\tAgencyCode AS AGENTCODE, \n\tBRANCHCODE, \n\tFIRSTPARTYLIMIT, \n\tFIRSTPARTYDEDUCTIBLE, \n\tFIRSTPARTYCOVERAGE, \n\tTHIRDPARTYLIMIT, \n\tTHIRDPARTYDEDUCTIBLE, \n\tTHIRDPARTYCOVERAGE, \n\tEXTORTIONSUBLIMIT\n\tFROM FLT_GrossPremium\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "RUNDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}