{
    "name": "s_m_POL_DW_LOAD_WorkDCTPremiumTransactionTracking_Incremental",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkDCTPremiumTransactionTracking_Incr_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_IL AS (\n\tSELECT pt.PremiumTransactionID,\r\n\t pt.AuditID,\r\n\t pt.PremiumTransactionAKID,\r\n\t pt.PremiumTransactionEffectiveDate, \r\n\t pt.OffsetOnsetCode, \r\n\t pt.RatingCoverageAKId,\r\n\t p.pol_key, \r\n\t wpt.PremiumTransactionStageId \r\n\tFROM\r\n\t PremiumTransaction pt\r\n\t inner join RatingCoverage rc on\r\n\t pt.RatingCoverageAKId = rc.RatingCoverageAKID and pt.EffectiveDate = rc.EffectiveDate\r\n\t inner join PolicyCoverage pc on\r\n\t rc.PolicyCoverageAKID = pc.PolicyCoverageAKID and pc.CurrentSnapshotFlag = 1\r\n\t inner join RiskLocation rl on\r\n\t pc.RiskLocationAKID = rl.RiskLocationAKID and rl.CurrentSnapshotFlag = 1\r\n\t inner join v2.policy p on\r\n\t rl.PolicyAKID = p.pol_ak_id and p.crrnt_snpsht_flag = 1\r\n\t inner join WorkPremiumTransaction wpt on\r\n\t pt.PremiumTransactionAKID = wpt.PremiumTransactionAKId\r\n\t left join WorkDCTPremiumTransactionTracking wdctpt on \r\n\t wdctpt.PremiumTransactionID=pt.PremiumTransactionID\r\n\twhere\r\n\tpt.SourceSystemID = 'DCT' and \r\n\tpt.ReasonAmendedCode not in ('CWO','Claw Back') and \r\n\tpt.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} and\r\n\twdctpt.PremiumTransactionID is null\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IL}\n),\nEXP_IL AS (\n\tSELECT\n\tPremiumTransactionID,\n\tAuditID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionEffectiveDate,\n\tOffsetOnsetCode,\n\tRatingCoverageAKId,\n\tpol_key,\n\tPremiumTransactionStageId\n\tFROM SQ_IL\n),\nSQ_Stage AS (\n\tSELECT re.[Index],\r\n\t re.[Sequence], \r\n\t t.Id,\r\n\tc.CoverageId\r\n\tFROM\r\n\tDCTransactionStaging t\r\n\t inner join DCCoverageStaging c on\r\n\t c.SessionId = t.SessionId\r\n\t left join DCTransactionReportEntryStaging re on\r\n\t c.SessionId = re.SessionId\n),\nEXP_Stage AS (\n\tSELECT\n\tIndex,\n\tSequence,\n\tId,\n\tCoverageId\n\tFROM SQ_Stage\n),\nJNR_IL_Stage AS (SELECT\n\tEXP_IL.PremiumTransactionID, \n\tEXP_IL.AuditID, \n\tEXP_IL.PremiumTransactionAKID, \n\tEXP_IL.PremiumTransactionEffectiveDate, \n\tEXP_IL.OffsetOnsetCode, \n\tEXP_IL.RatingCoverageAKId, \n\tEXP_IL.pol_key, \n\tEXP_IL.PremiumTransactionStageId, \n\tEXP_Stage.Index, \n\tEXP_Stage.Sequence, \n\tEXP_Stage.Id, \n\tEXP_Stage.CoverageId\n\tFROM EXP_IL\n\tINNER JOIN EXP_Stage\n\tON EXP_Stage.CoverageId = EXP_IL.PremiumTransactionStageId\n),\nAGGTRANS AS (\n\tSELECT\n\tPremiumTransactionID,\n\tAuditID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionEffectiveDate,\n\tOffsetOnsetCode,\n\tRatingCoverageAKId,\n\tpol_key,\n\tPremiumTransactionStageId,\n\tIndex,\n\tSequence,\n\tId,\n\tCoverageId,\n\t-- *INF*: count(pol_key)\n\tcount(pol_key) AS count_pol_key,\n\t-- *INF*: count(RatingCoverageAKId)\n\tcount(RatingCoverageAKId) AS count_RatingCoverageAKId\n\tFROM JNR_IL_Stage\n\tGROUP BY PremiumTransactionID\n),\nFILTRANS AS (\n\tSELECT\n\tPremiumTransactionID, \n\tAuditID, \n\tPremiumTransactionAKID, \n\tPremiumTransactionEffectiveDate, \n\tOffsetOnsetCode, \n\tRatingCoverageAKId, \n\tpol_key, \n\tPremiumTransactionStageId, \n\tIndex, \n\tSequence, \n\tId, \n\tCoverageId, \n\tcount_pol_key, \n\tcount_RatingCoverageAKId\n\tFROM AGGTRANS\n\tWHERE count_pol_key=1 and count_RatingCoverageAKId=1\n),\nEXP_PassValue AS (\n\tSELECT\n\tPremiumTransactionID,\n\tAuditID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionEffectiveDate,\n\tOffsetOnsetCode,\n\tRatingCoverageAKId,\n\tpol_key,\n\tPremiumTransactionStageId,\n\tIndex,\n\tSequence,\n\tId,\n\tCoverageId,\n\tsysdate AS o_CreatedDate,\n\tsysdate AS o_ModifiedDate,\n\t0 AS DeletedFromPremiumTransactionFlag\n\tFROM FILTRANS\n),\nWorkDCTPremiumTransactionTracking AS (\n\tINSERT INTO WorkDCTPremiumTransactionTracking\n\t(PremiumTransactionID, PremiumTransactionAKID, AuditId, CreatedDate, ModifiedDate, PolicyKey, RatingCoverageAKID, PremiumTransactionEffectiveDate, DCTTransactionGuid, DCTTransactionSequence, DCTTransactionIndex, OffsetOnsetCode, DCTCoverageId, DeletedFromPremiumTransactionFlag)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONAKID, \n\tAuditID AS AUDITID, \n\to_CreatedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\tpol_key AS POLICYKEY, \n\tRatingCoverageAKId AS RATINGCOVERAGEAKID, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tId AS DCTTRANSACTIONGUID, \n\tSequence AS DCTTRANSACTIONSEQUENCE, \n\tIndex AS DCTTRANSACTIONINDEX, \n\tOFFSETONSETCODE, \n\tCoverageId AS DCTCOVERAGEID, \n\tDELETEDFROMPREMIUMTRANSACTIONFLAG\n\tFROM EXP_PassValue\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_IL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}