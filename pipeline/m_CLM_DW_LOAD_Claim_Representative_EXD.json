{
    "name": "m_CLM_DW_LOAD_Claim_Representative_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Representative_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Sup_Claim_Staff_Email AS (\n\tSELECT\n\tEMAIL,\n\tWBCONNECT_USER_ID\n\tFROM (\n\t\tSELECT\r\n\t\tltrim(rtrim(a.EMAIL)) as EMAIL\r\n\t\t,ltrim(rtrim(a.WBCONNECT_USER_ID)) as WBCONNECT_USER_ID \r\n\t\tFROM \r\n\t\tsup_claim_staff_stage a\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WBCONNECT_USER_ID ORDER BY EMAIL) = 1\n),\nLKP_gtam_wbadj_stage_cost_center AS (\n\tSELECT\n\tCost_Center_Number,\n\tAdjuster_Code\n\tFROM (\n\t\tSELECT \n\t\t\tCost_Center_Number,\n\t\t\tAdjuster_Code\n\t\tFROM gtam_wbadj_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Adjuster_Code ORDER BY Cost_Center_Number) = 1\n),\nLKP_pms_adjuster_master_stage_branch_number AS (\n\tSELECT\n\tadnm_adjustor_branch_number,\n\tadnm_adjustor_nbr\n\tFROM (\n\t\tSELECT \n\t\t\tadnm_adjustor_branch_number,\n\t\t\tadnm_adjustor_nbr\n\t\tFROM pms_adjuster_master_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY adnm_adjustor_nbr ORDER BY adnm_adjustor_branch_number DESC) = 1\n),\nLKP_clt_ref_relation_client_id AS (\n\tSELECT\n\tcirf_ref_id,\n\tclient_id,\n\tref_typ_cd\n\tFROM (\n\t\tSELECT \n\t\t\tcirf_ref_id,\n\t\t\tclient_id,\n\t\t\tref_typ_cd\n\t\tFROM clt_ref_relation_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY client_id,ref_typ_cd ORDER BY cirf_ref_id DESC) = 1\n),\nSQ_ADJUSTER_TAB_STAGE AS (\n\tSELECT \r\n\tltrim(rtrim(a.CAJ_EMP_CLIENT_ID))\r\n\t, ltrim(rtrim(a.CAJ_USER_ID))\r\n\t, a.CAJ_DIR_AUT_RES\r\n\t, a.CAJ_DIR_AUT_PMT\r\n\t , ltrim(rtrim(a.CAJ_OFFICE_ID))\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.ADJUSTER_TAB_STAGE a\n),\nEXP_Source AS (\n\tSELECT\n\tCAJ_EMP_CLIENT_ID,\n\t-- *INF*: IIF(IS_SPACES(CAJ_EMP_CLIENT_ID) OR ISNULL(CAJ_EMP_CLIENT_ID)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(CAJ_EMP_CLIENT_ID))\r\n\t-- )\r\n\t-- \n\tIFF(IS_SPACES(CAJ_EMP_CLIENT_ID) OR CAJ_EMP_CLIENT_ID IS NULL, 'N/A', LTRIM(RTRIM(CAJ_EMP_CLIENT_ID))) AS SOURCE_CAJ_EMP_CLIENT_ID,\n\tCAJ_USER_ID,\n\t-- *INF*: IIF(IS_SPACES(CAJ_USER_ID) OR ISNULL(CAJ_USER_ID)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(CAJ_USER_ID))\r\n\t-- )\n\tIFF(IS_SPACES(CAJ_USER_ID) OR CAJ_USER_ID IS NULL, 'N/A', LTRIM(RTRIM(CAJ_USER_ID))) AS SOURCE_CAJ_USER_ID,\n\tCAJ_OFFICE_ID,\n\t-- *INF*: IIF(IS_SPACES(CAJ_OFFICE_ID) OR ISNULL(CAJ_OFFICE_ID)  OR CAJ_OFFICE_ID = ''\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(CAJ_OFFICE_ID))\r\n\t-- )\n\tIFF(IS_SPACES(CAJ_OFFICE_ID) OR CAJ_OFFICE_ID IS NULL OR CAJ_OFFICE_ID = '', 'N/A', LTRIM(RTRIM(CAJ_OFFICE_ID))) AS SOURCE_CAJ_OFFICE_ID,\n\tCAJ_DIR_AUT_RES,\n\tCAJ_DIR_AUT_PMT\n\tFROM SQ_ADJUSTER_TAB_STAGE\n),\nEXP_DeterminePmsId AS (\n\tSELECT\n\tSOURCE_CAJ_EMP_CLIENT_ID,\n\t-- *INF*: IIF(SOURCE_CAJ_EMP_CLIENT_ID = 'N/A',SOURCE_CAJ_EMP_CLIENT_ID,:LKP.LKP_CLT_REF_RELATION_CLIENT_ID(SOURCE_CAJ_EMP_CLIENT_ID,'AJO '))\r\n\t-- -- if N/A do return N/A else perform lookup\n\tIFF(SOURCE_CAJ_EMP_CLIENT_ID = 'N/A', SOURCE_CAJ_EMP_CLIENT_ID, LKP_CLT_REF_RELATION_CLIENT_ID_SOURCE_CAJ_EMP_CLIENT_ID_AJO.cirf_ref_id) AS var_Ref_Id,\n\t-- *INF*: IIF(ISNULL(var_Ref_Id),'N/A',IIF(rtrim(ltrim(var_Ref_Id))='','N/A',var_Ref_Id))\r\n\t-- -- if N/A or blank return N/A else return the refid\n\tIFF(var_Ref_Id IS NULL, 'N/A', IFF(rtrim(ltrim(var_Ref_Id)) = '', 'N/A', var_Ref_Id)) AS var_Ref_Id_Response,\n\t-- *INF*: IIF(var_Ref_Id_Response='N/A','N/A',:LKP.LKP_GTAM_WBADJ_STAGE_COST_CENTER(var_Ref_Id_Response))\n\tIFF(var_Ref_Id_Response = 'N/A', 'N/A', LKP_GTAM_WBADJ_STAGE_COST_CENTER_var_Ref_Id_Response.Cost_Center_Number) AS var_cost_center,\n\t-- *INF*: IIF(ISNULL(var_cost_center),'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(var_cost_center))\r\n\t-- -- need to decrease lenght from 5 to 4\n\tIFF(var_cost_center IS NULL, 'N/A', :UDF.DEFAULT_VALUE_FOR_STRINGS(var_cost_center)) AS cost_center_out,\n\t-- *INF*: IIF(var_Ref_Id_Response='N/A' ,'N/A',TO_CHAR(:LKP.LKP_PMS_ADJUSTER_MASTER_STAGE_BRANCH_NUMBER(var_Ref_Id_Response)))\n\tIFF(var_Ref_Id_Response = 'N/A', 'N/A', TO_CHAR(LKP_PMS_ADJUSTER_MASTER_STAGE_BRANCH_NUMBER_var_Ref_Id_Response.adnm_adjustor_branch_number)) AS var_branch_number,\n\t-- *INF*: IIF(isnull(var_branch_number),'N/A',LPAD(:UDF.DEFAULT_VALUE_FOR_STRINGS(var_branch_number),3,'0'))\n\tIFF(var_branch_number IS NULL, 'N/A', LPAD(:UDF.DEFAULT_VALUE_FOR_STRINGS(var_branch_number), 3, '0')) AS branch_number_out,\n\tvar_Ref_Id_Response AS claim_rep_number\n\tFROM EXP_Source\n\tLEFT JOIN LKP_CLT_REF_RELATION_CLIENT_ID LKP_CLT_REF_RELATION_CLIENT_ID_SOURCE_CAJ_EMP_CLIENT_ID_AJO\n\tON LKP_CLT_REF_RELATION_CLIENT_ID_SOURCE_CAJ_EMP_CLIENT_ID_AJO.client_id = SOURCE_CAJ_EMP_CLIENT_ID\n\tAND LKP_CLT_REF_RELATION_CLIENT_ID_SOURCE_CAJ_EMP_CLIENT_ID_AJO.ref_typ_cd = 'AJO '\n\n\tLEFT JOIN LKP_GTAM_WBADJ_STAGE_COST_CENTER LKP_GTAM_WBADJ_STAGE_COST_CENTER_var_Ref_Id_Response\n\tON LKP_GTAM_WBADJ_STAGE_COST_CENTER_var_Ref_Id_Response.Adjuster_Code = var_Ref_Id_Response\n\n\tLEFT JOIN LKP_PMS_ADJUSTER_MASTER_STAGE_BRANCH_NUMBER LKP_PMS_ADJUSTER_MASTER_STAGE_BRANCH_NUMBER_var_Ref_Id_Response\n\tON LKP_PMS_ADJUSTER_MASTER_STAGE_BRANCH_NUMBER_var_Ref_Id_Response.adnm_adjustor_nbr = var_Ref_Id_Response\n\n),\nLKP_Sup_Claim_Report_Office_Stage AS (\n\tSELECT\n\tCLAIM_MANAGER_CODE,\n\tREPORT_OFFICE_NAME,\n\tDIRECTOR_CODE,\n\tDEPT_CODE,\n\tREPORT_OFFICE_CODE\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.CLAIM_MANAGER_CODE)) as CLAIM_MANAGER_CODE\r\n\t\t, ltrim(rtrim(a.REPORT_OFFICE_NAME)) as REPORT_OFFICE_NAME\r\n\t\t, ltrim(rtrim(a.DIRECTOR_CODE)) as DIRECTOR_CODE\r\n\t\t, ltrim(rtrim(a.DEPT_CODE)) as DEPT_CODE\r\n\t\t, ltrim(rtrim(a.REPORT_OFFICE_CODE)) as REPORT_OFFICE_CODE \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.SUP_REPORT_OFFICE_STAGE a\r\n\t\t\r\n\t\t--there is no filter needed on source_sys_id as this table is only loaded with EXCEED source\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY REPORT_OFFICE_CODE ORDER BY CLAIM_MANAGER_CODE) = 1\n),\nLKP_Sup_Claim_Adjuster_Manager AS (\n\tSELECT\n\twbconnect_user_id,\n\tclaim_manager_code,\n\tadjuster_code\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.wbconnect_user_id)) as wbconnect_user_id\r\n\t\t, ltrim(rtrim(a.adjuster_code)) as adjuster_code \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_adjuster a\r\n\t\twhere a.SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY adjuster_code ORDER BY wbconnect_user_id) = 1\n),\nLKP_Adjuster_Tab_Stage AS (\n\tSELECT\n\tCAJ_EMP_CLIENT_ID,\n\tCAJ_DIR_AUT_RES,\n\tCAJ_DIR_AUT_PMT,\n\twbconnect_user_id,\n\tCAJ_USER_ID\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.CAJ_EMP_CLIENT_ID)) as CAJ_EMP_CLIENT_ID\r\n\t\t, a.CAJ_DIR_AUT_RES as CAJ_DIR_AUT_RES\r\n\t\t, a.CAJ_DIR_AUT_PMT as CAJ_DIR_AUT_PMT\r\n\t\t, LTRIM(RTRIM(a.CAJ_USER_ID)) as CAJ_USER_ID \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.ADJUSTER_TAB_STAGE a\r\n\t\twhere a.SOURCE_SYSTEM_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CAJ_USER_ID ORDER BY CAJ_EMP_CLIENT_ID) = 1\n),\nLKP_Claim_Party1_EDW AS (\n\tSELECT\n\tclaim_party_first_name,\n\tclaim_party_last_name,\n\tclaim_party_mid_name,\n\tclaim_party_name_prfx,\n\tclaim_party_name_sfx,\n\twbconnect_user_id_handling_office_mgr,\n\tCAJ_DIR_AUT_PMT,\n\tCAJ_DIR_AUT_RES,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.claim_party_full_name)) as claim_party_full_name\r\n\t\t,ltrim(rtrim(a.claim_party_first_name)) as claim_party_first_name\r\n\t\t, ltrim(rtrim(a.claim_party_last_name)) as claim_party_last_name\r\n\t\t, ltrim(rtrim(a.claim_party_mid_name)) as claim_party_mid_name\r\n\t\t, ltrim(rtrim(a.claim_party_name_prfx)) as claim_party_name_prfx\r\n\t\t, ltrim(rtrim(a.claim_party_name_sfx)) as claim_party_name_sfx\r\n\t\t, a.claim_party_key as claim_party_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party a\r\n\t\tinner join @{pipeline().parameters.STAGING_DATABASE}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ADJUSTER_TAB_STAGE adj\r\n\t\tON ltrim(rtrim(adj.CAJ_EMP_CLIENT_ID)) = a.claim_party_key \r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tAND SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_first_name) = 1\n),\nLKP_Claim_Party_EDW AS (\n\tSELECT\n\tclaim_party_full_name,\n\tclaim_party_first_name,\n\tclaim_party_last_name,\n\tclaim_party_mid_name,\n\tclaim_party_name_prfx,\n\tclaim_party_name_sfx,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.claim_party_full_name)) as claim_party_full_name\r\n\t\t,ltrim(rtrim(a.claim_party_first_name)) as claim_party_first_name\r\n\t\t, ltrim(rtrim(a.claim_party_last_name)) as claim_party_last_name\r\n\t\t, ltrim(rtrim(a.claim_party_mid_name)) as claim_party_mid_name\r\n\t\t, ltrim(rtrim(a.claim_party_name_prfx)) as claim_party_name_prfx\r\n\t\t, ltrim(rtrim(a.claim_party_name_sfx)) as claim_party_name_sfx\r\n\t\t, a.claim_party_key as claim_party_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party a\r\n\t\tinner join @{pipeline().parameters.STAGING_DATABASE}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ADJUSTER_TAB_STAGE adj\r\n\t\tON ltrim(rtrim(adj.CAJ_EMP_CLIENT_ID)) = a.claim_party_key \r\n\t\twhere a.crrnt_snpsht_flag = 1\r\n\t\tAND SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_full_name) = 1\n),\nLKP_PMS_Adjuster_Master_Stage AS (\n\tSELECT\n\tadnm_name,\n\tadnm_adjustor_nbr\n\tFROM (\n\t\tSELECT \n\t\t\tadnm_name,\n\t\t\tadnm_adjustor_nbr\n\t\tFROM pms_adjuster_master_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY adnm_adjustor_nbr ORDER BY adnm_name DESC) = 1\n),\nLKP_SecUsrsStage AS (\n\tSELECT\n\tSecUsrsStageId,\n\tSecUsrId,\n\tSOURCE_CAJ_USER_ID\n\tFROM (\n\t\tSELECT \r\n\t\tSecUsrsStage.SecUsrsStageId as SecUsrsStageId, \r\n\t\tltrim(rtrim(SecUsrsStage.SecUsrId)) as SecUsrId \r\n\t\tFROM \r\n\t\tSecUsrsStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SecUsrId ORDER BY SecUsrsStageId) = 1\n),\nLKP_Sup_Claim_Dept_Stage AS (\n\tSELECT\n\tDEPT_CODE,\n\tDIVISION_CODE,\n\tDEPT_DESC\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.DIVISION_CODE)) as DIVISION_CODE\r\n\t\t, ltrim(rtrim(a.DEPT_DESC)) as DEPT_DESC\r\n\t\t, ltrim(rtrim(a.DEPT_CODE)) as DEPT_CODE \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.SUP_CLAIM_DEPT_STAGE a\r\n\t\twhere a.SOURCE_SYSTEM_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DEPT_CODE ORDER BY DEPT_CODE) = 1\n),\nLKP_Sup_Claim_Division_Stage AS (\n\tSELECT\n\tDIVISION_DESC,\n\tDIVISION_CODE\n\tFROM (\n\t\tSELECT \r\n\t\ta.DIVISION_DESC as DIVISION_DESC\r\n\t\t, a.DIVISION_CODE as DIVISION_CODE \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.SUP_CLAIM_DIVISION_STAGE a\r\n\t\twhere a.SOURCE_SYSTEM_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DIVISION_CODE ORDER BY DIVISION_DESC) = 1\n),\nLKP_claims_desktop_access AS (\n\tSELECT\n\tMemberId,\n\tUserId,\n\tGroupSecurityId,\n\tGroupType,\n\tGroupName,\n\tSOURCE_CAJ_USER_ID\n\tFROM (\n\t\tselect \r\n\t\tA.memberid as MemberId, \r\n\t\tltrim(rtrim(A.userId)) as UserId, \r\n\t\tB.groupsecurityid as GroupSecurityId, \r\n\t\tC.grouptype as GroupType, \r\n\t\tC.GroupName as GroupName\r\n\t\tfrom \r\n\t\tAdmMembersStage A \r\n\t\tinner join AdmMbrSecurityStage B on A.memberid=B.memberid\r\n\t\tinner join AdmSecurityGrpsStage C on B.groupsecurityid = C.groupsecurityid\r\n\t\twhere C.grouptype in ('cr','cm','cu','cq','cts','ca')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UserId ORDER BY MemberId) = 1\n),\nEXP_Target AS (\n\tSELECT\n\tEXP_Source.SOURCE_CAJ_EMP_CLIENT_ID AS CAJ_EMP_CLIENT_ID,\n\tLKP_Claim_Party_EDW.claim_party_full_name AS CICL_FULL_NAME,\n\tLKP_Claim_Party_EDW.claim_party_first_name AS CICL_FST_NM,\n\tLKP_Claim_Party_EDW.claim_party_mid_name AS CICL_MDL_NM,\n\tLKP_Claim_Party_EDW.claim_party_last_name AS CICL_LST_NM,\n\tLKP_Claim_Party_EDW.claim_party_name_prfx AS NM_PFX,\n\tLKP_Claim_Party_EDW.claim_party_name_sfx AS NM_SFX,\n\t'WBMI' AS CO_Description,\n\tLKP_Sup_Claim_Dept_Stage.DIVISION_CODE,\n\tLKP_Sup_Claim_Division_Stage.DIVISION_DESC,\n\tLKP_Sup_Claim_Dept_Stage.DEPT_DESC,\n\tLKP_Sup_Claim_Dept_Stage.DEPT_CODE,\n\tEXP_Source.SOURCE_CAJ_OFFICE_ID AS CAJ_OFFICE_ID,\n\tLKP_Sup_Claim_Report_Office_Stage.REPORT_OFFICE_NAME,\n\tEXP_Source.SOURCE_CAJ_USER_ID,\n\tLKP_Claim_Party1_EDW.claim_party_first_name AS Manager_first_name,\n\t-- *INF*: IIF(Manager_first_name = 'N/A'\r\n\t--       ,' '\r\n\t--       ,Manager_first_name)\n\tIFF(Manager_first_name = 'N/A', ' ', Manager_first_name) AS v_Manager_first_name,\n\tLKP_Claim_Party1_EDW.claim_party_last_name AS Manager_last_name,\n\t-- *INF*: iif(Manager_last_name = 'N/A'\r\n\t--      ,' '\r\n\t--      ,Manager_last_name)\n\tIFF(Manager_last_name = 'N/A', ' ', Manager_last_name) AS v_Manager_last_name,\n\tLKP_Claim_Party1_EDW.claim_party_mid_name AS Manager_mid_name,\n\t-- *INF*: iif(Manager_mid_name = 'N/A'\r\n\t--      ,' '\r\n\t--      ,Manager_mid_name)\n\tIFF(Manager_mid_name = 'N/A', ' ', Manager_mid_name) AS v_Manager_mid_name,\n\tLKP_Claim_Party1_EDW.claim_party_name_prfx AS Manager_name_prfx,\n\tLKP_Claim_Party1_EDW.claim_party_name_sfx AS Manager_name_sfx,\n\t-- *INF*: IIF(IS_SPACES(v_Manager_first_name || v_Manager_mid_name || v_Manager_last_name) = 1\r\n\t--        ,'N/A',IIF(Manager_mid_name ='N/A',LTRIM(RTRIM(v_Manager_first_name || v_Manager_mid_name || v_Manager_last_name)),\r\n\t--        LTRIM(RTRIM(v_Manager_first_name || ' ' || v_Manager_mid_name || ' ' || v_Manager_last_name))))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(IS_SPACES(v_Manager_first_name || v_Manager_mid_name || v_Manager_last_name) = 1\r\n\t--    --    ,'N/A'\r\n\t--       -- ,LTRIM(RTRIM(v_Manager_first_name || ' ' || v_Manager_mid_name || ' ' || v_Manager_last_name)))\n\tIFF(IS_SPACES(v_Manager_first_name || v_Manager_mid_name || v_Manager_last_name) = 1, 'N/A', IFF(Manager_mid_name = 'N/A', LTRIM(RTRIM(v_Manager_first_name || v_Manager_mid_name || v_Manager_last_name)), LTRIM(RTRIM(v_Manager_first_name || ' ' || v_Manager_mid_name || ' ' || v_Manager_last_name)))) AS CICL_LNG_NM,\n\tLKP_PMS_Adjuster_Master_Stage.adnm_name AS in_adnm_name,\n\t-- *INF*: IIF(ISNULL(in_adnm_name),'N/A',LTRIM(RTRIM(in_adnm_name)))\r\n\t-- \r\n\t-- --converting to variable and routing through a diff output port so the length will match target length and not force unnecessary updates.\n\tIFF(in_adnm_name IS NULL, 'N/A', LTRIM(RTRIM(in_adnm_name))) AS v_dept_mgr,\n\tv_dept_mgr AS dept_mgr_out,\n\tEXP_Source.SOURCE_CAJ_USER_ID AS wbconnect_user_id_claim_rep,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SUP_CLAIM_STAFF_EMAIL(wbconnect_user_id_claim_rep))\r\n\t-- ,'N/A'\r\n\t-- ,:LKP.LKP_SUP_CLAIM_STAFF_EMAIL(wbconnect_user_id_claim_rep))\n\tIFF(LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_claim_rep.EMAIL IS NULL, 'N/A', LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_claim_rep.EMAIL) AS Claim_Rep_Email,\n\tLKP_Claim_Party1_EDW.wbconnect_user_id_handling_office_mgr AS wbconnect_user_id_handling_officer_mgr,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SUP_CLAIM_STAFF_EMAIL(wbconnect_user_id_handling_officer_mgr))\r\n\t-- ,'N/A'\r\n\t-- ,:LKP.LKP_SUP_CLAIM_STAFF_EMAIL(wbconnect_user_id_handling_officer_mgr))\n\tIFF(LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_handling_officer_mgr.EMAIL IS NULL, 'N/A', LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_handling_officer_mgr.EMAIL) AS Handling_Office_Mgr_Email,\n\tEXP_Source.CAJ_DIR_AUT_RES AS CLAIM_REP_DIR_AUT_RES,\n\tEXP_Source.CAJ_DIR_AUT_PMT AS CLAIM_REP_DIR_AUT_PMT,\n\tLKP_Claim_Party1_EDW.CAJ_DIR_AUT_PMT AS MGR_DIR_AUT_PMT,\n\tLKP_Claim_Party1_EDW.CAJ_DIR_AUT_RES AS MGR_DIR_AUT_RES,\n\t-- *INF*: rtrim(ltrim(:LKP.LKP_CLT_REF_RELATION_CLIENT_ID(CAJ_EMP_CLIENT_ID,'AJO')))\n\trtrim(ltrim(LKP_CLT_REF_RELATION_CLIENT_ID_CAJ_EMP_CLIENT_ID_AJO.cirf_ref_id)) AS v_adjustor_ref_id,\n\tEXP_DeterminePmsId.cost_center_out AS cost_center,\n\tEXP_DeterminePmsId.branch_number_out AS branch_number,\n\tEXP_DeterminePmsId.claim_rep_number,\n\tLKP_SecUsrsStage.SecUsrsStageId,\n\t-- *INF*: IIF(ISNULL(SecUsrsStageId),'F','T')\n\tIFF(SecUsrsStageId IS NULL, 'F', 'T') AS SecUsrsStageId_out,\n\tLKP_claims_desktop_access.GroupType,\n\t-- *INF*: DECODE( TRUE,\r\n\t-- ltrim(rtrim(GroupType))='cr','Read Only',\r\n\t-- ltrim(rtrim(GroupType))='cm','Manager',\r\n\t-- ltrim(rtrim(GroupType))='cu','Change',\r\n\t-- ltrim(rtrim(GroupType))='cq','Quest',\r\n\t-- ltrim(rtrim(GroupType))='cts','Transformation Station',\r\n\t-- ltrim(rtrim(GroupType))='ca','Agent'\r\n\t-- ,'N/A'\r\n\t-- )\r\n\t-- \r\n\t-- --Determine and persist the authority type based on the group type:\r\n\t-- --cr = Read Only\r\n\t-- --cm = Manager\r\n\t-- --cu = Change\r\n\t-- --cq = Quest\r\n\t-- --cts = Transformation Station\r\n\t-- --ca = Agent\n\tDECODE(TRUE,\n\tltrim(rtrim(GroupType)) = 'cr', 'Read Only',\n\tltrim(rtrim(GroupType)) = 'cm', 'Manager',\n\tltrim(rtrim(GroupType)) = 'cu', 'Change',\n\tltrim(rtrim(GroupType)) = 'cq', 'Quest',\n\tltrim(rtrim(GroupType)) = 'cts', 'Transformation Station',\n\tltrim(rtrim(GroupType)) = 'ca', 'Agent',\n\t'N/A') AS v_GroupType,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_GroupType)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(v_GroupType) AS GroupName_out\n\tFROM EXP_DeterminePmsId\n\t -- Manually join with EXP_Source\n\tLEFT JOIN LKP_Claim_Party1_EDW\n\tON LKP_Claim_Party1_EDW.claim_party_key = LKP_Adjuster_Tab_Stage.CAJ_EMP_CLIENT_ID\n\tLEFT JOIN LKP_Claim_Party_EDW\n\tON LKP_Claim_Party_EDW.claim_party_key = EXP_Source.SOURCE_CAJ_EMP_CLIENT_ID\n\tLEFT JOIN LKP_PMS_Adjuster_Master_Stage\n\tON LKP_PMS_Adjuster_Master_Stage.adnm_adjustor_nbr = LKP_Sup_Claim_Report_Office_Stage.DIRECTOR_CODE\n\tLEFT JOIN LKP_SecUsrsStage\n\tON LKP_SecUsrsStage.SecUsrId = EXP_Source.SOURCE_CAJ_USER_ID\n\tLEFT JOIN LKP_Sup_Claim_Dept_Stage\n\tON LKP_Sup_Claim_Dept_Stage.DEPT_CODE = LKP_Sup_Claim_Report_Office_Stage.DEPT_CODE\n\tLEFT JOIN LKP_Sup_Claim_Division_Stage\n\tON LKP_Sup_Claim_Division_Stage.DIVISION_CODE = LKP_Sup_Claim_Dept_Stage.DIVISION_CODE\n\tLEFT JOIN LKP_Sup_Claim_Report_Office_Stage\n\tON LKP_Sup_Claim_Report_Office_Stage.REPORT_OFFICE_CODE = EXP_Source.SOURCE_CAJ_OFFICE_ID\n\tLEFT JOIN LKP_claims_desktop_access\n\tON LKP_claims_desktop_access.UserId = EXP_Source.SOURCE_CAJ_USER_ID\n\tLEFT JOIN LKP_SUP_CLAIM_STAFF_EMAIL LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_claim_rep\n\tON LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_claim_rep.WBCONNECT_USER_ID = wbconnect_user_id_claim_rep\n\n\tLEFT JOIN LKP_SUP_CLAIM_STAFF_EMAIL LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_handling_officer_mgr\n\tON LKP_SUP_CLAIM_STAFF_EMAIL_wbconnect_user_id_handling_officer_mgr.WBCONNECT_USER_ID = wbconnect_user_id_handling_officer_mgr\n\n\tLEFT JOIN LKP_CLT_REF_RELATION_CLIENT_ID LKP_CLT_REF_RELATION_CLIENT_ID_CAJ_EMP_CLIENT_ID_AJO\n\tON LKP_CLT_REF_RELATION_CLIENT_ID_CAJ_EMP_CLIENT_ID_AJO.client_id = CAJ_EMP_CLIENT_ID\n\tAND LKP_CLT_REF_RELATION_CLIENT_ID_CAJ_EMP_CLIENT_ID_AJO.ref_typ_cd = 'AJO'\n\n),\nLKP_Claim_Representative_EDW AS (\n\tSELECT\n\tclaim_rep_id,\n\tclaim_rep_ak_id,\n\tclaim_rep_full_name,\n\tclaim_rep_first_name,\n\tclaim_rep_last_name,\n\tclaim_rep_mid_name,\n\tclaim_rep_name_prfx,\n\tclaim_rep_name_sfx,\n\tdvsn_code,\n\tdvsn_descript,\n\tdept_descript,\n\tdept_name,\n\tdept_mgr,\n\thandling_office_code,\n\thandling_office_descript,\n\thandling_office_mgr,\n\tclaim_rep_wbconnect_user_id,\n\tclaim_rep_email,\n\thandling_office_mgr_email,\n\tclaim_rep_direct_automatic_pay_lmt,\n\tclaim_rep_direct_automatic_reserve_lmt,\n\thandling_office_mgr_direct_automatic_pay_lmt,\n\thandling_office_mgr_direct_automatic_reserver_lmt,\n\tcost_center,\n\tclaim_rep_branch_num,\n\tclaim_rep_num,\n\tExceedAuthorityFlag,\n\tClaimsDesktopAuthorityType,\n\tCAJ_EMP_CLIENT_ID,\n\tclaim_rep_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_rep_id as claim_rep_id\r\n\t\t, a.claim_rep_ak_id as claim_rep_ak_id\r\n\t\t, ltrim(rtrim(a.claim_rep_full_name)) as claim_rep_full_name\r\n\t\t, ltrim(rtrim(a.claim_rep_first_name)) as claim_rep_first_name\r\n\t\t, ltrim(rtrim(a.claim_rep_last_name)) as claim_rep_last_name\r\n\t\t, ltrim(rtrim(a.claim_rep_mid_name)) as claim_rep_mid_name\r\n\t\t, ltrim(rtrim(a.claim_rep_name_prfx)) as claim_rep_name_prfx\r\n\t\t, ltrim(rtrim(a.claim_rep_name_sfx)) as claim_rep_name_sfx\r\n\t\t, ltrim(rtrim(a.dvsn_code)) as dvsn_code\r\n\t\t, ltrim(rtrim(a.dvsn_descript)) as dvsn_descript\r\n\t\t, ltrim(rtrim(a.dept_descript)) as dept_descript\r\n\t\t, ltrim(rtrim(a.dept_name)) as dept_name\r\n\t\t, ltrim(rtrim(a.dept_mgr)) as dept_mgr\r\n\t\t, ltrim(rtrim(a.handling_office_code)) as handling_office_code\r\n\t\t, ltrim(rtrim(a.handling_office_descript)) as handling_office_descript\r\n\t\t, ltrim(rtrim(a.handling_office_mgr)) as handling_office_mgr\r\n\t\t, ltrim(rtrim(a.claim_rep_wbconnect_user_id)) as claim_rep_wbconnect_user_id\r\n\t\t, ltrim(rtrim(a.claim_rep_email))  AS claim_rep_email\r\n\t\t, ltrim(rtrim(a.handling_office_mgr_email)) AS handling_office_mgr_email\r\n\t\t, a.claim_rep_direct_automatic_pay_lmt  AS claim_rep_direct_automatic_pay_lmt\r\n\t\t, a.claim_rep_direct_automatic_reserve_lmt  AS claim_rep_direct_automatic_reserve_lmt\r\n\t\t, a.handling_office_mgr_direct_automatic_pay_lmt  AS handling_office_mgr_direct_automatic_pay_lmt\r\n\t\t, a.handling_office_mgr_direct_automatic_reserve_lmt AS handling_office_mgr_direct_automatic_reserver_lmt\r\n\t\t,a.cost_center as cost_center\r\n\t\t,a.claim_rep_branch_num as claim_rep_branch_num\r\n\t\t,a.claim_rep_num as claim_rep_num\r\n\t\t, a.claim_rep_key    AS claim_rep_key\r\n\t\t,a.ExceedAuthorityFlag as ExceedAuthorityFlag\r\n\t\t,a.ClaimsDesktopAuthorityType as ClaimsDesktopAuthorityType\r\n\t\tFROM claim_representative a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand\t\r\n\t\ta.claim_rep_id in (select max(b.claim_rep_id) from claim_representative b\r\n\t\twhere b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and b.crrnt_snpsht_flag = 1\r\n\t\tgroup by b.claim_rep_key)\r\n\t\torder by a.claim_rep_key\r\n\t\t\r\n\t\t--IN Subquery exists so that we only pick the MAX value of the PK for each AK Group\r\n\t\t--WHERE clause is always eff_to_date = '12/31/2100 23:59:59'\r\n\t\t--GROUP BY clause is always the AK\r\n\t\t--ORDER BY clause is always the AK.  When any comments exist in the SQL override Informatica will no longer\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_key ORDER BY claim_rep_id DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Claim_Representative_EDW.claim_rep_id,\n\tLKP_Claim_Representative_EDW.claim_rep_ak_id,\n\tLKP_Claim_Representative_EDW.claim_rep_full_name AS lkp_claim_rep_full_name,\n\tLKP_Claim_Representative_EDW.claim_rep_first_name AS lkp_claim_rep_first_name,\n\tLKP_Claim_Representative_EDW.claim_rep_last_name AS lkp_claim_rep_last_name,\n\tLKP_Claim_Representative_EDW.claim_rep_mid_name AS lkp_claim_rep_mid_name,\n\tLKP_Claim_Representative_EDW.claim_rep_name_prfx AS lkp_claim_rep_name_prfx,\n\tLKP_Claim_Representative_EDW.claim_rep_name_sfx AS lkp_claim_rep_name_sfx,\n\tLKP_Claim_Representative_EDW.dvsn_code AS lkp_dvsn_code,\n\tLKP_Claim_Representative_EDW.dvsn_descript AS lkp_dvsn_descript,\n\tLKP_Claim_Representative_EDW.dept_descript AS lkp_dept_descript,\n\tLKP_Claim_Representative_EDW.dept_name AS lkp_dept_name,\n\tLKP_Claim_Representative_EDW.dept_mgr AS lkp_dept_mgr,\n\tLKP_Claim_Representative_EDW.handling_office_code,\n\tLKP_Claim_Representative_EDW.handling_office_descript,\n\tLKP_Claim_Representative_EDW.handling_office_mgr,\n\tLKP_Claim_Representative_EDW.claim_rep_wbconnect_user_id,\n\tLKP_Claim_Representative_EDW.claim_rep_email AS claim_rep_email1,\n\tLKP_Claim_Representative_EDW.claim_rep_direct_automatic_pay_lmt,\n\tLKP_Claim_Representative_EDW.claim_rep_direct_automatic_reserve_lmt,\n\tLKP_Claim_Representative_EDW.handling_office_mgr_email,\n\tLKP_Claim_Representative_EDW.handling_office_mgr_direct_automatic_pay_lmt,\n\tLKP_Claim_Representative_EDW.handling_office_mgr_direct_automatic_reserver_lmt,\n\tLKP_Claim_Representative_EDW.cost_center AS lkp_cost_center,\n\tLKP_Claim_Representative_EDW.claim_rep_branch_num AS lkp_claim_rep_branch_num,\n\tLKP_Claim_Representative_EDW.claim_rep_num AS lkp_claim_rep_num,\n\tLKP_Claim_Representative_EDW.ExceedAuthorityFlag AS lkp_ExceedAuthorityFlag,\n\tLKP_Claim_Representative_EDW.ClaimsDesktopAuthorityType AS lkp_ClaimsDesktopAuthorityType,\n\tEXP_Target.CICL_FULL_NAME,\n\tEXP_Target.CICL_FST_NM,\n\tEXP_Target.CICL_MDL_NM,\n\tEXP_Target.CICL_LST_NM,\n\tEXP_Target.NM_PFX,\n\tEXP_Target.NM_SFX,\n\tEXP_Target.DIVISION_CODE,\n\tEXP_Target.DIVISION_DESC,\n\tEXP_Target.DEPT_DESC,\n\tEXP_Target.DEPT_CODE,\n\tEXP_Target.dept_mgr_out AS DEPT_MGR,\n\tEXP_Target.CAJ_OFFICE_ID,\n\tEXP_Target.REPORT_OFFICE_NAME,\n\tEXP_Target.SOURCE_CAJ_USER_ID,\n\tEXP_Target.CICL_LNG_NM,\n\tEXP_Target.Claim_Rep_Email,\n\tEXP_Target.Handling_Office_Mgr_Email AS Handling_Office_Mgr_Email1,\n\tEXP_Target.CLAIM_REP_DIR_AUT_RES,\n\tEXP_Target.CLAIM_REP_DIR_AUT_PMT,\n\tEXP_Target.MGR_DIR_AUT_PMT,\n\tEXP_Target.MGR_DIR_AUT_RES,\n\tEXP_Target.cost_center,\n\tEXP_Target.branch_number AS claim_rep_branch_num,\n\tEXP_Target.claim_rep_number AS claim_rep_num,\n\tEXP_Target.SecUsrsStageId_out AS ExceedAuthorityFlag,\n\tEXP_Target.GroupName_out AS ClaimsDesktopAuthorityType,\n\t-- *INF*: iif(isnull(claim_rep_id)\r\n\t-- ,'NEW'\r\n\t-- ,iif(ltrim(rtrim(lkp_claim_rep_first_name)) != ltrim(rtrim(CICL_FST_NM))  \r\n\t-- OR ltrim(rtrim(lkp_claim_rep_last_name)) != ltrim(rtrim(CICL_LST_NM)) \r\n\t-- OR ltrim(rtrim(lkp_claim_rep_mid_name)) != ltrim(rtrim(CICL_MDL_NM)) \r\n\t-- OR ltrim(rtrim(lkp_claim_rep_name_prfx)) != ltrim(rtrim(NM_PFX)) \r\n\t-- OR ltrim(rtrim(lkp_claim_rep_name_sfx)) != ltrim(rtrim(NM_SFX))\r\n\t-- OR ltrim(rtrim(lkp_dvsn_code)) != ltrim(rtrim(DIVISION_CODE)) \r\n\t-- OR ltrim(rtrim(lkp_dvsn_descript)) != ltrim(rtrim(DIVISION_DESC))\r\n\t-- OR ltrim(rtrim(lkp_dept_descript)) != ltrim(rtrim(DEPT_DESC))\r\n\t-- OR ltrim(rtrim(lkp_dept_name)) != ltrim(rtrim(DEPT_CODE))\r\n\t-- OR ltrim(rtrim(lkp_dept_mgr)) != ltrim(rtrim(DEPT_MGR))\r\n\t-- OR ltrim(rtrim(handling_office_code)) != ltrim(rtrim(CAJ_OFFICE_ID))  \r\n\t-- OR ltrim(rtrim(handling_office_descript)) != ltrim(rtrim(REPORT_OFFICE_NAME))\r\n\t-- OR ltrim(rtrim(handling_office_mgr)) != ltrim(rtrim(CICL_LNG_NM))\r\n\t-- OR ltrim(rtrim(claim_rep_wbconnect_user_id)) != ltrim(rtrim(SOURCE_CAJ_USER_ID))\r\n\t-- or  ltrim(rtrim(claim_rep_email1))  !=  ltrim(rtrim(Claim_Rep_Email))\r\n\t-- or  ltrim(rtrim(handling_office_mgr_email)) !=  ltrim(rtrim(Handling_Office_Mgr_Email1))\r\n\t-- or claim_rep_direct_automatic_pay_lmt != CLAIM_REP_DIR_AUT_PMT\r\n\t--  OR claim_rep_direct_automatic_reserve_lmt != CLAIM_REP_DIR_AUT_RES\r\n\t--  OR handling_office_mgr_direct_automatic_pay_lmt !=MGR_DIR_AUT_PMT\r\n\t--  OR handling_office_mgr_direct_automatic_reserver_lmt != MGR_DIR_AUT_RES\r\n\t-- OR ltrim(rtrim(lkp_cost_center)) != ltrim(rtrim(cost_center))\r\n\t-- OR ltrim(rtrim(lkp_claim_rep_branch_num)) != ltrim(rtrim(claim_rep_branch_num))\r\n\t-- OR ltrim(rtrim(lkp_claim_rep_num)) != ltrim(rtrim(claim_rep_num))\r\n\t-- OR ltrim(rtrim(lkp_ExceedAuthorityFlag)) !=ltrim(rtrim(ExceedAuthorityFlag))\r\n\t-- OR ltrim(rtrim(lkp_ClaimsDesktopAuthorityType)) !=ltrim(rtrim(ClaimsDesktopAuthorityType))\r\n\t-- ,'UPDATE'\r\n\t-- ,'NOCHANGE'))\n\tIFF(claim_rep_id IS NULL, 'NEW', IFF(ltrim(rtrim(lkp_claim_rep_first_name)) != ltrim(rtrim(CICL_FST_NM)) OR ltrim(rtrim(lkp_claim_rep_last_name)) != ltrim(rtrim(CICL_LST_NM)) OR ltrim(rtrim(lkp_claim_rep_mid_name)) != ltrim(rtrim(CICL_MDL_NM)) OR ltrim(rtrim(lkp_claim_rep_name_prfx)) != ltrim(rtrim(NM_PFX)) OR ltrim(rtrim(lkp_claim_rep_name_sfx)) != ltrim(rtrim(NM_SFX)) OR ltrim(rtrim(lkp_dvsn_code)) != ltrim(rtrim(DIVISION_CODE)) OR ltrim(rtrim(lkp_dvsn_descript)) != ltrim(rtrim(DIVISION_DESC)) OR ltrim(rtrim(lkp_dept_descript)) != ltrim(rtrim(DEPT_DESC)) OR ltrim(rtrim(lkp_dept_name)) != ltrim(rtrim(DEPT_CODE)) OR ltrim(rtrim(lkp_dept_mgr)) != ltrim(rtrim(DEPT_MGR)) OR ltrim(rtrim(handling_office_code)) != ltrim(rtrim(CAJ_OFFICE_ID)) OR ltrim(rtrim(handling_office_descript)) != ltrim(rtrim(REPORT_OFFICE_NAME)) OR ltrim(rtrim(handling_office_mgr)) != ltrim(rtrim(CICL_LNG_NM)) OR ltrim(rtrim(claim_rep_wbconnect_user_id)) != ltrim(rtrim(SOURCE_CAJ_USER_ID)) OR ltrim(rtrim(claim_rep_email1)) != ltrim(rtrim(Claim_Rep_Email)) OR ltrim(rtrim(handling_office_mgr_email)) != ltrim(rtrim(Handling_Office_Mgr_Email1)) OR claim_rep_direct_automatic_pay_lmt != CLAIM_REP_DIR_AUT_PMT OR claim_rep_direct_automatic_reserve_lmt != CLAIM_REP_DIR_AUT_RES OR handling_office_mgr_direct_automatic_pay_lmt != MGR_DIR_AUT_PMT OR handling_office_mgr_direct_automatic_reserver_lmt != MGR_DIR_AUT_RES OR ltrim(rtrim(lkp_cost_center)) != ltrim(rtrim(cost_center)) OR ltrim(rtrim(lkp_claim_rep_branch_num)) != ltrim(rtrim(claim_rep_branch_num)) OR ltrim(rtrim(lkp_claim_rep_num)) != ltrim(rtrim(claim_rep_num)) OR ltrim(rtrim(lkp_ExceedAuthorityFlag)) != ltrim(rtrim(ExceedAuthorityFlag)) OR ltrim(rtrim(lkp_ClaimsDesktopAuthorityType)) != ltrim(rtrim(ClaimsDesktopAuthorityType)), 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tEXP_Target.CAJ_EMP_CLIENT_ID,\n\tEXP_Target.CO_Description,\n\t1 AS Crrnt_SnapSht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\t-- *INF*: iif(v_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tv_changed_flag AS changed_flag,\n\tsysdate AS created_date,\n\tsysdate AS modified_date,\n\t'N/A' AS Division_Manager\n\tFROM EXP_Target\n\tLEFT JOIN LKP_Claim_Representative_EDW\n\tON LKP_Claim_Representative_EDW.claim_rep_key = EXP_Target.CAJ_EMP_CLIENT_ID\n),\nFIL_Insert AS (\n\tSELECT\n\tclaim_rep_id, \n\tclaim_rep_ak_id, \n\tCAJ_EMP_CLIENT_ID, \n\tCICL_FULL_NAME, \n\tCICL_FST_NM, \n\tCICL_MDL_NM, \n\tCICL_LST_NM, \n\tNM_PFX, \n\tNM_SFX, \n\tCO_Description, \n\tDIVISION_CODE, \n\tDIVISION_DESC, \n\tDEPT_DESC, \n\tDEPT_CODE, \n\tDEPT_MGR, \n\tCAJ_OFFICE_ID, \n\tREPORT_OFFICE_NAME, \n\tSOURCE_CAJ_USER_ID, \n\tCICL_LNG_NM, \n\tClaim_Rep_Email, \n\tHandling_Office_Mgr_Email1 AS Handling_Office_Mgr_Email, \n\tCLAIM_REP_DIR_AUT_RES, \n\tCLAIM_REP_DIR_AUT_PMT, \n\tMGR_DIR_AUT_PMT, \n\tMGR_DIR_AUT_RES, \n\tCrrnt_SnapSht_Flag, \n\tAUDIT_ID, \n\tSOURCE_SYSTEM_ID, \n\teff_from_date, \n\teff_to_date, \n\tchanged_flag, \n\tcreated_date, \n\tmodified_date, \n\tDivision_Manager, \n\tcost_center, \n\tclaim_rep_branch_num, \n\tclaim_rep_num, \n\tExceedAuthorityFlag, \n\tClaimsDesktopAuthorityType\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW' or changed_flag='UPDATE'\n),\nSEQ_Claim_Representative_AK AS (\n\tCREATE SEQUENCE SEQ_Claim_Representative_AK\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tclaim_rep_ak_id,\n\tSEQ_Claim_Representative_AK.NEXTVAL,\n\t-- *INF*: iif(isnull(claim_rep_ak_id)\r\n\t-- ,NEXTVAL\r\n\t-- ,claim_rep_ak_id)\n\tIFF(claim_rep_ak_id IS NULL, NEXTVAL, claim_rep_ak_id) AS out_claim_rep_ak_id,\n\tCAJ_EMP_CLIENT_ID,\n\tCICL_FULL_NAME,\n\tCICL_FST_NM,\n\tCICL_MDL_NM,\n\tCICL_LST_NM,\n\tNM_PFX,\n\tNM_SFX,\n\tCO_Description,\n\tDIVISION_CODE,\n\tDIVISION_DESC,\n\tDEPT_DESC,\n\tDEPT_CODE,\n\tDEPT_MGR,\n\tCAJ_OFFICE_ID,\n\tREPORT_OFFICE_NAME,\n\tSOURCE_CAJ_USER_ID,\n\tCICL_LNG_NM,\n\tClaim_Rep_Email,\n\tHandling_Office_Mgr_Email,\n\tCLAIM_REP_DIR_AUT_RES,\n\tCLAIM_REP_DIR_AUT_PMT,\n\tMGR_DIR_AUT_PMT,\n\tMGR_DIR_AUT_RES,\n\tCrrnt_SnapSht_Flag,\n\tAUDIT_ID,\n\tSOURCE_SYSTEM_ID,\n\teff_from_date,\n\teff_to_date,\n\tchanged_flag,\n\tcreated_date,\n\tmodified_date,\n\tDivision_Manager,\n\tcost_center,\n\tclaim_rep_branch_num,\n\tclaim_rep_num,\n\tExceedAuthorityFlag,\n\tClaimsDesktopAuthorityType\n\tFROM FIL_Insert\n),\nclaim_representative_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative\n\t(claim_rep_ak_id, claim_rep_key, claim_rep_full_name, claim_rep_first_name, claim_rep_last_name, claim_rep_mid_name, claim_rep_name_prfx, claim_rep_name_sfx, co_descript, dvsn_code, dvsn_descript, dvsn_mgr, dept_descript, dept_name, dept_mgr, handling_office_code, handling_office_descript, handling_office_mgr, claim_rep_wbconnect_user_id, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_rep_email, handling_office_mgr_email, claim_rep_direct_automatic_pay_lmt, claim_rep_direct_automatic_reserve_lmt, handling_office_mgr_direct_automatic_pay_lmt, handling_office_mgr_direct_automatic_reserve_lmt, cost_center, claim_rep_branch_num, claim_rep_num, ExceedAuthorityFlag, ClaimsDesktopAuthorityType)\n\tSELECT \n\tout_claim_rep_ak_id AS CLAIM_REP_AK_ID, \n\tCAJ_EMP_CLIENT_ID AS CLAIM_REP_KEY, \n\tCICL_FULL_NAME AS CLAIM_REP_FULL_NAME, \n\tCICL_FST_NM AS CLAIM_REP_FIRST_NAME, \n\tCICL_LST_NM AS CLAIM_REP_LAST_NAME, \n\tCICL_MDL_NM AS CLAIM_REP_MID_NAME, \n\tNM_PFX AS CLAIM_REP_NAME_PRFX, \n\tNM_SFX AS CLAIM_REP_NAME_SFX, \n\tCO_Description AS CO_DESCRIPT, \n\tDIVISION_CODE AS DVSN_CODE, \n\tDIVISION_DESC AS DVSN_DESCRIPT, \n\tDivision_Manager AS DVSN_MGR, \n\tDEPT_DESC AS DEPT_DESCRIPT, \n\tDEPT_CODE AS DEPT_NAME, \n\tDEPT_MGR AS DEPT_MGR, \n\tCAJ_OFFICE_ID AS HANDLING_OFFICE_CODE, \n\tREPORT_OFFICE_NAME AS HANDLING_OFFICE_DESCRIPT, \n\tCICL_LNG_NM AS HANDLING_OFFICE_MGR, \n\tSOURCE_CAJ_USER_ID AS CLAIM_REP_WBCONNECT_USER_ID, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tClaim_Rep_Email AS CLAIM_REP_EMAIL, \n\tHandling_Office_Mgr_Email AS HANDLING_OFFICE_MGR_EMAIL, \n\tCLAIM_REP_DIR_AUT_PMT AS CLAIM_REP_DIRECT_AUTOMATIC_PAY_LMT, \n\tCLAIM_REP_DIR_AUT_RES AS CLAIM_REP_DIRECT_AUTOMATIC_RESERVE_LMT, \n\tMGR_DIR_AUT_PMT AS HANDLING_OFFICE_MGR_DIRECT_AUTOMATIC_PAY_LMT, \n\tMGR_DIR_AUT_RES AS HANDLING_OFFICE_MGR_DIRECT_AUTOMATIC_RESERVE_LMT, \n\tCOST_CENTER, \n\tCLAIM_REP_BRANCH_NUM, \n\tCLAIM_REP_NUM, \n\tEXCEEDAUTHORITYFLAG, \n\tCLAIMSDESKTOPAUTHORITYTYPE\n\tFROM EXP_Determine_AK\n),\nSQ_claim_representative AS (\n\tSELECT\r\n\t a.claim_rep_id\r\n\t, a.claim_rep_key\r\n\t, a.eff_from_date\r\n\t, a.eff_to_date\r\n\t, a.source_sys_id \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t\tAND a.claim_rep_key = b.claim_rep_key\r\n\t      and a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.claim_rep_key, b.source_sys_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY a.claim_rep_key, a.source_sys_id, a.eff_from_date  DESC\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of eff_to_date='12/31/2100 23:59:59' and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaim_rep_id,\n\tclaim_rep_key,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, claim_rep_key = v_PREV_ROW_claim_rep_key and source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tclaim_rep_key = v_PREV_ROW_claim_rep_key AND source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_rep_key AS v_PREV_ROW_claim_rep_key,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_Snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claim_representative\n),\nFIL_Claim_Rep_Occurrence_Upd AS (\n\tSELECT\n\tclaim_rep_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Claim_Rep_Occurrence AS (\n\tSELECT\n\tclaim_rep_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM FIL_Claim_Rep_Occurrence_Upd\n),\nclaim_representative_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative AS T\n\tUSING UPD_Claim_Rep_Occurrence AS S\n\tON T.claim_rep_id = S.claim_rep_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_Snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "STAGING_DATABASE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}