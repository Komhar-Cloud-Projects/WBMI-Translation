{
    "name": "s_m_FEED_Load_AAIS_WorkAAISExtract",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_AAIS_WorkAAISExtract",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_StatisticalCoverage_SupConstructionCode_StandardConstructionCodeDescription AS (\n\tSELECT\n\tStandardConstructionCodeDescription,\n\tConstructionCode\n\tFROM (\n\t\tselect distinct scc.ConstructionCode AS ConstructionCode,scc.StandardConstructionCodeDescription AS StandardConstructionCodeDescription\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage sc\r\n\t\ton pt.StatisticalCoverageAKID = sc.StatisticalCoverageAKID\r\n\t\tand sc.ClassCode in ('079','081','084','121','149', '235','236','237', '800') and pt.CurrentSnapshotFlag = 1\r\n\t\tand sc.CurrentSnapshotFlag = 1\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupConstructionCode scc\r\n\t\ton scc.ConstructionCode = pt.ConstructionCode and scc.CurrentSnapshotFlag = 1\r\n\t\twhere pt.SourceSystemID = 'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ConstructionCode ORDER BY StandardConstructionCodeDescription) = 1\n),\nLKP_RatingCoverage_SupConstructionCode_StandardConstructionCodeDescription AS (\n\tSELECT\n\tStandardConstructionCodeDescription,\n\tConstructionCode\n\tFROM (\n\t\tselect distinct scc.ConstructionCode AS ConstructionCode,scc.StandardConstructionCodeDescription AS StandardConstructionCodeDescription\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc\r\n\t\ton pt.RatingCoverageAKId = rc.RatingCoverageAKID\r\n\t\tand rc.ClassCode in ('079','081','084','121','149', '235','236','237', '800') and pt.CurrentSnapshotFlag = 1\r\n\t\tand rc.EffectiveDate=pt.EffectiveDate\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupConstructionCode scc\r\n\t\ton scc.ConstructionCode = pt.ConstructionCode and scc.CurrentSnapshotFlag = 1\r\n\t\twhere pt.SourceSystemID <>'PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ConstructionCode ORDER BY StandardConstructionCodeDescription) = 1\n),\nLKP_sup_CauseOfLoss_CauseOfLossName AS (\n\tSELECT\n\tCauseOfLossName,\n\tCauseOfLossId\n\tFROM (\n\t\tselect distinct scl.CauseOfLossId AS CauseOfLossId,col.CauseOfLossName AS CauseOfLossName\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation lmc\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail ccd\r\n\t\ton lmc.new_claim_count = '1' \r\n\t\tand ccd.pms_type_bureau_code in ('IM','PI','InlandMarine','PersonalInlandMarine')\r\n\t\tand lmc.claimant_cov_det_ak_id = ccd.claimant_cov_det_ak_id\r\n\t\tand lmc.crrnt_snpsht_flag = 1 and ccd.crrnt_snpsht_flag = 1\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_CauseOfLoss scl\r\n\t\ton scl.LineOfBusiness in ('CPP','HAP')\r\n\t\tand scl.CauseOfLossId = ccd.CauseOfLossID\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_CauseOfLoss col\r\n\t\ton scl.CauseOfLossAKID = col.CauseOfLossAKID\r\n\t\tAND col.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CauseOfLossId ORDER BY CauseOfLossName) = 1\n),\nLKP_Exposure_Previous_Onset_Transaction_PMS AS (\n\tSELECT\n\tPremiumMasterExposure,\n\tPolicyAKID,\n\tPMSFunctionCode,\n\tInsuranceLine,\n\tLocationUnitNumber,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tPMSTypeExposure,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionEnteredDate\n\tFROM (\n\t\tDeclare @StartTime datetime\r\n\t\tDeclare @EndTime datetime\r\n\t\t\r\n\t\tset @StartTime = @{pipeline().parameters.FIRSTQMONTH}\r\n\t\tset @EndTime = @{pipeline().parameters.LASTQMONTH}\r\n\t\t\r\n\t\tSELECT \r\n\t\tPMC.PremiumMasterExposure as PremiumMasterExposure,\r\n\t\tPMC.PolicyAKID as PolicyAKID,\r\n\t\tPT.PMSFunctionCode as PMSFunctionCode,\r\n\t\tPC.InsuranceLine as InsuranceLine,\r\n\t\tRL.LocationUnitNumber as LocationUnitNumber,\r\n\t\tSC.SubLocationUnitNumber as SubLocationUnitNumber,\r\n\t\tSC.RiskUnitGroup as RiskUnitGroup,\r\n\t\tSC.RiskUnitGroupSequenceNumber as RiskUnitGroupSequenceNumber,\r\n\t\tSC.RiskUnit as RiskUnit,\r\n\t\tSC.RiskUnitSequenceNumber as RiskUnitSequenceNumber,\r\n\t\tSC.PMSTypeExposure as PMSTypeExposure,\r\n\t\tSC.MajorPerilCode as MajorPerilCode,\r\n\t\tSC.MajorPerilSequenceNumber as MajorPerilSequenceNumber,\r\n\t\tPT.PremiumTransactionEffectiveDate as PremiumTransactionEffectiveDate,\r\n\t\tPMC.PremiumTransactionEnteredDate as PremiumTransactionEnteredDate\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PMC.PolicyCoverageAKID=PC.PolicyCoverageAKID\r\n\t\tand PMC.PremiumMasterRunDate between PC.EffectiveDate and PC.ExpirationDate\r\n\t\tand PMC.RiskLocationAKID=PC.RiskLocationAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton PMC.StatisticalCoverageAKID=SC.StatisticalCoverageAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\ton PMC.PremiumTransactionAKID=PT.PremiumTransactionAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PMC.RiskLocationAKId=RL.RiskLocationAKId\r\n\t\tand PMC.PremiumMasterRunDate between RL.EffectiveDate and RL.ExpirationDate\r\n\t\tand PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\t\r\n\t\twhere \r\n\t\tPT.SourceSystemId='PMS'\r\n\t\tand PC.TypeBureauCode in ('IM','PI')\r\n\t\tand PMC.PremiumMasterPremium <>0\r\n\t\tand PMC.PremiumMasterPremiumType='D'\r\n\t\tand PMC.PremiumMasterRecordType<>'OFFSET'\r\n\t\tand PMC.PremiumMasterRunDate<=@EndTime\r\n\t\tand exists \r\n\t\t(select 1 \r\n\t\tfrom \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC2 \r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P2\r\n\t\ton PMC2.PolicyAKID=P2.pol_ak_id and P2.crrnt_snpsht_flag=1\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC2\r\n\t\ton PMC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID\r\n\t\tand PMC2.PremiumMasterRunDate between PC2.EffectiveDate and PC2.ExpirationDate\r\n\t\tand PMC2.RiskLocationAKID=PC2.RiskLocationAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG2\r\n\t\ton P2.InsuranceSegmentAKId=ISG2.InsuranceSegmentAKId and ISG2.CurrentSnapshotFlag=1\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC2\r\n\t\ton PMC2.StatisticalCoverageAKID=SC2.StatisticalCoverageAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2\r\n\t\ton PMC2.PremiumTransactionAKID=PT2.PremiumTransactionAKID\r\n\t\t\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL2\r\n\t\ton PMC2.RiskLocationAKId=RL2.RiskLocationAKId\r\n\t\tand PC2.RiskLocationAKID=RL2.RiskLocationAKID\r\n\t\tand PMC2.PremiumMasterRunDate between RL2.EffectiveDate and RL2.ExpirationDate\r\n\t\t\r\n\t\twhere \r\n\t\tPC2.TypeBureauCode in ('IM','PI') and ISG2.InsuranceSegmentCode IN ('1','2')\r\n\t\tand PMC2.PremiumMasterPremium <>0 and PMC2.PremiumMasterPremiumType='D'\r\n\t\tand PMC2.PremiumMasterRecordType='OFFSET'\r\n\t\tand PMC2.PremiumMasterRunDate>=@StartTime and PMC2.PremiumMasterRunDate<=@EndTime\r\n\t\tand PMC2.PolicyAKID=PMC.PolicyAKID and PT2.PMSFunctionCode=PT.PMSFunctionCode\r\n\t\tand PC2.InsuranceLine=PC.InsuranceLine and RL2.LocationUnitNumber=RL.LocationUnitNumber\r\n\t\tand SC2.SubLocationUnitNumber=SC.SubLocationUnitNumber and SC2.RiskUnitGroup=SC.RiskUnitGroup\r\n\t\tand SC2.RiskUnitGroupSequenceNumber=SC.RiskUnitGroupSequenceNumber and SC2.RiskUnit=SC.RiskUnit\r\n\t\tand SC2.RiskUnitSequenceNumber=SC.RiskUnitSequenceNumber and SC2.PMSTypeExposure=SC.PMSTypeExposure\r\n\t\tand SC2.MajorPerilCode=SC.MajorPerilCode and SC2.MajorPerilSequenceNumber=SC.MajorPerilSequenceNumber\r\n\t\t)\r\n\t\t\r\n\t\tORDER  BY PMC.PolicyAKID,PT.PMSFunctionCode,PC.InsuranceLine,RL.LocationUnitNumber,         SC.SubLocationUnitNumber,SC.RiskUnitGroup,SC.RiskUnitGroupSequenceNumber,SC.RiskUnit,         SC.RiskUnitSequenceNumber,SC.PMSTypeExposure,SC.MajorPerilCode,SC.MajorPerilSequenceNumber,          PT.PremiumTransactionEffectiveDate,PMC.PremiumTransactionEnteredDate,PT.PremiumLoadSequence   --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,PMSFunctionCode,InsuranceLine,LocationUnitNumber,SubLocationUnitNumber,RiskUnitGroup,RiskUnitGroupSequenceNumber,RiskUnit,RiskUnitSequenceNumber,PMSTypeExposure,MajorPerilCode,MajorPerilSequenceNumber,PremiumTransactionEffectiveDate,PremiumTransactionEnteredDate ORDER BY PremiumMasterExposure DESC) = 1\n),\nLKP_Exposure_Previous_Onset_Transaction_DCT AS (\n\tSELECT\n\tExposure,\n\tRatingCoverageAKId,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionEnteredDate\n\tFROM (\n\t\tDeclare @StartTime datetime\r\n\t\tDeclare @EndTime datetime\r\n\t\t\r\n\t\tset @StartTime = @{pipeline().parameters.FIRSTQMONTH}\r\n\t\tset @EndTime = @{pipeline().parameters.LASTQMONTH}\r\n\t\t\r\n\t\tselect PT.Exposure as Exposure,\r\n\t\tPT.RatingCoverageAKId as RatingCoverageAKId,\r\n\t\tPT.PremiumTransactionEffectiveDate as PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionEnteredDate as PremiumTransactionEnteredDate\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tjoin (\r\n\t\tSELECT distinct PT.RatingCoverageAKId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton PT.RatingCoverageAKId=RC.RatingCoverageAKId and PT.EffectiveDate=RC.EffectiveDate\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton RC.PolicyCoverageAKId=PC.PolicyCoverageAKId and PC.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy P\r\n\t\ton PC.PolicyAKId=P.pol_ak_id and P.crrnt_snpsht_flag=1\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\t\ton P.InsuranceSegmentAKID=ISG.InsuranceSegmentAKID and ISG.CurrentSnapshotFlag=1\r\n\t\twhere PT.SourceSystemId='DCT' and  PC.TypeBureauCode in ('InlandMarine','GamesOfChance','HoleInOne')\r\n\t\tand ISG.InsuranceSegmentCode IN ('1','2')\r\n\t\tand PT.PremiumTransactionAmount<>0\r\n\t\tand PT.PremiumType='D'\r\n\t\tand PT.OffsetOnsetCode='Offset'\r\n\t\tand PT.PremiumTransactionBookedDate between @StartTime and @EndTime\r\n\t\t) S\r\n\t\ton PT.RatingCoverageAKID=S.RatingCoverageAKID\r\n\t\twhere PT.SourceSystemId='DCT'\r\n\t\tand PT.OffsetOnsetCode not in ('Offset', 'Deprecated') \r\n\t\tand PT.PremiumTransactionAmount<>0\r\n\t\tand PT.PremiumType='D'\r\n\t\tand PT.PremiumTransactionBookedDate<= @EndTime\r\n\t\torder by PT.RatingCoverageAKId, PT.PremiumTransactionEffectiveDate,PT.PremiumTransactionEnteredDate, PT.PremiumLoadSequence--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingCoverageAKId,PremiumTransactionEffectiveDate,PremiumTransactionEnteredDate ORDER BY Exposure) = 1\n),\nLKP_CoverageDeductible_Deductibleamount_Prem AS (\n\tSELECT\n\tDeductibleAmount,\n\tPolicyKey,\n\tCoverageType\n\tFROM (\n\t\tSELECT \r\n\t\tMAX(Convert(Integer,D.CoverageDeductibleValue)) as DeductibleAmount,\r\n\t\tPol.pol_key as PolicyKey, \r\n\t\tRC.CoverageType as CoverageType\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransactiON pt \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc      \r\n\t\tON rc.RatingCoverageAKID = pt.RatingCoverageAKId      \r\n\t\tAND rc.EffectiveDate = pt.EffectiveDate \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage pc      \r\n\t\tON pc.PolicyCoverageAKID = rc.PolicyCoverageAKID      \r\n\t\tAND pc.CurrentSnapshotFlag = 1   \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocatiON rl \r\n\t\tON pc.RiskLocatiONAKID = rl.RiskLocatiONAKID   \r\n\t\tAND rl.CurrentSnapshotFlag = 1   \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy pol    \r\n\t\tON pol.pol_ak_id = pc.PolicyAKID \r\n\t\tAND pol.crrnt_snpsht_flag = 1 \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductibleBridge B ON B.PremiumTransactiONAKId = pt.PremiumTransactiONAKID \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductible D ON D.CoverageDeductibleId = B.CoverageDeductibleId \r\n\t\tand ISNUMERIC(D.CoverageDeductibleValue)=1\r\n\t\tWHERE  \r\n\t\tpt.SourceSystemID='DCT' AND \r\n\t\tCoverageDeductibleType IN  (\r\n\t\t'ContractorsEquipmentStandard',\r\n\t\t'LineContractorsEquipmentScheduleStandard',\r\n\t\t'IMLAT_Deductible',\r\n\t\t'IMLAT_OtherDeductible',\r\n\t\t'BaileesCustomersStandard',\r\n\t\t'Bailee Customers - Other',\r\n\t\t'BoatDealersBaileeStandard',\r\n\t\t'BoatDealersPhysicalDamageStandard',\r\n\t\t'BoatDealersPhysicalDamageOther',\r\n\t\t'BoatownersStandard',\r\n\t\t'BoatownersOther',\r\n\t\t'BuildersRiskStandard',\r\n\t\t'BuildersRiskOther',\r\n\t\t'CommercialFineArtsStandard',\r\n\t\t'IMLCFA_FormDisplayDeductible',\r\n\t\t'ElectronicDataProcessingStandard',\r\n\t\t'LCS_OtherDeductible',\r\n\t\t'DealersStandard',\r\n\t\t'Dealers - Other',\r\n\t\t'EquipmentDealersStandard',\r\n\t\t'ExhibitionStandard',\r\n\t\t'InstallationStandard',\r\n\t\t'InstallationOther',\r\n\t\t'MiscellaneousArticlesStandard',\r\n\t\t'MiscellaneousArticlesOther',\r\n\t\t'MiscellaneousBaileesProcessorsStandard',\r\n\t\t'IMLMBP_FormDisplayDeductible',\r\n\t\t'LineMiscellaneousBaileeProcessor',\r\n\t\t'MotorTruckCargoStandard',\r\n\t\t'MotorTruckCargoOther',\r\n\t\t'MusicalInstrumentsStandard',\r\n\t\t'PatternsAndDiesStandard',\r\n\t\t'PatternsAndDiesOther',\r\n\t\t'PhysiciansSurgeonsStandard',\r\n\t\t'RadioAndTelevisionTowersAndEquipmentStandard',\r\n\t\t'RadioAndTelevisionTowersAndEquipmentOther',\r\n\t\t'RiggersLiabilityStandard',\r\n\t\t'RiggersLiabilityOther',\r\n\t\t'SalespersonsSamplesStandard',\r\n\t\t'SalespersonsSamplesOther',\r\n\t\t'SignsStandard',\r\n\t\t'TripTransitStandard',\r\n\t\t'Trip Transit - Other',\r\n\t\t'ValuablePapersStandard',\r\n\t\t'Photographic Equip',\r\n\t\t'Warehouse Operators Legal Liab',\r\n\t\t'Musical Instruments',\r\n\t\t'Photographic Equip',\r\n\t\t'Scheduled Property',\r\n\t\t'Transportation',\r\n\t\t'ElectronicDataProcessingOther',\r\n\t\t'CameraMusicalStandard',\r\n\t\t'ComputerSystemsPersonalPortableComputers',\r\n\t\t\r\n\t\t'IMLI_FormDisplayDeductible',\r\n\t\t'IMLRTE_FormDisplayDeductible',\r\n\t\t\r\n\t\t'BPEDP_Standard',\r\n\t\t'BPFineArts_Standard',\r\n\t\t\r\n\t\t'BPVoluntaryPropertyDamage_Standard',\r\n\t\t'Computer Attack & Cyber Extortion Deductible',\r\n\t\t'Network Security Liability Deductible',\r\n\t\t'DataCompromiseResponseExpense',\r\n\t\t'DataCompromiseDefenseAndLiability',\r\n\t\t'EarthquakeStandard'\r\n\t\t)\r\n\t\tGROUP BY Pol.pol_key, RC.CoverageType\r\n\t\tORDER BY Pol.pol_key --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,CoverageType ORDER BY DeductibleAmount) = 1\n),\nLKP_CoverageDeductible_Deductibleamount_Loss AS (\n\tSELECT\n\tDeductibleAmount,\n\tPolicyKey,\n\tCoverageType,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tselect \r\n\t\tMAX(Convert(Integer,A.CoverageDeductibleValue)) as DeductibleAmount \r\n\t\t,A.PolicyKey as PolicyKey\r\n\t\t,A.CoverageType as CoverageType\r\n\t\t,A.EffectiveDate as EffectiveDate\r\n\t\t,A.ExpirationDate as ExpirationDate\r\n\t\tFROM\r\n\t\t(\r\n\t\tSELECT \r\n\t\tD.CoverageDeductibleValue,\r\n\t\tPol.pol_key as PolicyKey, \r\n\t\tRC.CoverageType as CoverageType,\r\n\t\t-- use lower of date, based loosely on how coveragedetaildim takes the lower value\r\n\t\tCASE \r\n\t\tWHEN rc.RatingCoverageEffectiveDate < pt.PremiumTransactionEffectiveDate THEN rc.RatingCoverageEffectiveDate\r\n\t\tELSE pt.PremiumTransactionEffectiveDate \r\n\t\tEND as  EffectiveDate, \r\n\t\tCASE\r\n\t\tWHEN rc.RatingCoverageExpirationDate < pt.PremiumTransactionExpirationDate THEN rc.RatingCoverageExpirationDate\r\n\t\tELSE pt.PremiumTransactionExpirationDate \r\n\t\tEND as ExpirationDate\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc      \r\n\t\tON rc.RatingCoverageAKID = pt.RatingCoverageAKId      \r\n\t\tAND rc.EffectiveDate = pt.EffectiveDate \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage pc      \r\n\t\tON pc.PolicyCoverageAKID = rc.PolicyCoverageAKID      \r\n\t\tAND pc.CurrentSnapshotFlag = 1   \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocatiON rl \r\n\t\tON pc.RiskLocatiONAKID = rl.RiskLocatiONAKID   \r\n\t\tAND rl.CurrentSnapshotFlag = 1   \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy pol    \r\n\t\tON pol.pol_ak_id = pc.PolicyAKID \r\n\t\tAND pol.crrnt_snpsht_flag = 1 \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductibleBridge B ON B.PremiumTransactiONAKId = pt.PremiumTransactiONAKID \r\n\t\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDeductible D ON D.CoverageDeductibleId = B.CoverageDeductibleId\r\n\t\tand ISNUMERIC(D.CoverageDeductibleValue)=1\r\n\t\tWHERE  \r\n\t\tpt.SourceSystemID='DCT' \r\n\t\tAND CoverageDeductibleType IN  (\r\n\t\t'ContractorsEquipmentStandard',\r\n\t\t'LineContractorsEquipmentScheduleStandard',\r\n\t\t'IMLAT_Deductible',\r\n\t\t'IMLAT_OtherDeductible',\r\n\t\t'BaileesCustomersStandard',\r\n\t\t'Bailee Customers - Other',\r\n\t\t'BoatDealersBaileeStandard',\r\n\t\t'BoatDealersPhysicalDamageStandard',\r\n\t\t'BoatDealersPhysicalDamageOther',\r\n\t\t'BoatownersStandard',\r\n\t\t'BoatownersOther',\r\n\t\t'BuildersRiskStandard',\r\n\t\t'BuildersRiskOther',\r\n\t\t'CommercialFineArtsStandard',\r\n\t\t'IMLCFA_FormDisplayDeductible',\r\n\t\t'ElectronicDataProcessingStandard',\r\n\t\t'LCS_OtherDeductible',\r\n\t\t'DealersStandard',\r\n\t\t'Dealers - Other',\r\n\t\t'EquipmentDealersStandard',\r\n\t\t'ExhibitionStandard',\r\n\t\t'InstallationStandard',\r\n\t\t'InstallationOther',\r\n\t\t'MiscellaneousArticlesStandard',\r\n\t\t'MiscellaneousArticlesOther',\r\n\t\t'MiscellaneousBaileesProcessorsStandard',\r\n\t\t'IMLMBP_FormDisplayDeductible',\r\n\t\t'LineMiscellaneousBaileeProcessor',\r\n\t\t'MotorTruckCargoStandard',\r\n\t\t'MotorTruckCargoOther',\r\n\t\t'MusicalInstrumentsStandard',\r\n\t\t'PatternsAndDiesStandard',\r\n\t\t'PatternsAndDiesOther',\r\n\t\t'PhysiciansSurgeonsStandard',\r\n\t\t'RadioAndTelevisionTowersAndEquipmentStandard',\r\n\t\t'RadioAndTelevisionTowersAndEquipmentOther',\r\n\t\t'RiggersLiabilityStandard',\r\n\t\t'RiggersLiabilityOther',\r\n\t\t'SalespersonsSamplesStandard',\r\n\t\t'SalespersonsSamplesOther',\r\n\t\t'SignsStandard',\r\n\t\t'TripTransitStandard',\r\n\t\t'Trip Transit - Other',\r\n\t\t'ValuablePapersStandard',\r\n\t\t'Photographic Equip',\r\n\t\t'Warehouse Operators Legal Liab',\r\n\t\t'Musical Instruments',\r\n\t\t'Photographic Equip',\r\n\t\t'Scheduled Property',\r\n\t\t'Transportation',\r\n\t\t'ElectronicDataProcessingOther',\r\n\t\t'CameraMusicalStandard',\r\n\t\t'ComputerSystemsPersonalPortableComputers',\r\n\t\t\r\n\t\t'IMLI_FormDisplayDeductible',\r\n\t\t'IMLRTE_FormDisplayDeductible',\r\n\t\t\r\n\t\t'BPEDP_Standard',\r\n\t\t'BPFineArts_Standard',\r\n\t\t\r\n\t\t'BPVoluntaryPropertyDamage_Standard',\r\n\t\t'Computer Attack & Cyber Extortion Deductible',\r\n\t\t'Network Security Liability Deductible',\r\n\t\t'DataCompromiseResponseExpense',\r\n\t\t'DataCompromiseDefenseAndLiability',\r\n\t\t'EarthquakeStandard'\r\n\t\t)\r\n\t\t) A\r\n\t\tGROUP BY A.PolicyKey, A.CoverageType,EffectiveDate, ExpirationDate\r\n\t\tORDER BY A.PolicyKey, EffectiveDate desc --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,CoverageType,EffectiveDate,ExpirationDate ORDER BY DeductibleAmount) = 1\n),\nSQ_Loss AS (\n\tDECLARE @ST_DT datetime;\r\n\tDECLARE @ED_DT datetime;\r\n\t\r\n\tSET @ST_DT = DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0) \r\n\tSET @ED_DT = DATEADD(s, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0))\r\n\t\r\n\tSELECT \r\n\tSQ_Loss.loss_master_calculation_id,\r\n\tSQ_Loss.TypeBureauCode,\r\n\tSQ_Loss.loss_master_run_date,\r\n\tSQ_Loss.pol_key,\r\n\tSQ_Loss.StateProvinceCode,\r\n\tSQ_Loss.RatingCounty,\r\n\tSQ_Loss.paid_loss_amt,\r\n\tSQ_Loss.outstanding_amt,\r\n\tSQ_Loss.new_claim_count,\r\n\tSQ_Loss.class_code,\r\n\tSQ_Loss.terrorism_risk_ind,\r\n\tSQ_Loss.InsuranceSegmentDescription,\r\n\tSQ_Loss.PolicyOfferingDescription,\r\n\tSQ_Loss.pol_term,\r\n\tSQ_Loss.CauseOfLossID,\r\n\tSQ_Loss.claim_loss_date,\r\n\tSQ_Loss.ZipPostalCode,\r\n\tSQ_Loss.claimant_cov_det_id,\r\n\tSQ_Loss.s3p_claim_num,\r\n\tSQ_Loss.claim_occurrence_num,\r\n\tSQ_Loss.pol_eff_date,\r\n\tCASE WHEN SQ_Loss.PolicySourceID = 'DUC' THEN 'DCT' ELSE 'PMS' END AS source_sys_id,\r\n\tSQ_Loss.claimant_cov_det_ak_id,\r\n\tSQ_Loss.TerrorismInd,\r\n\tSQ_Loss.trans_date,\r\n\tSQ_Loss.CoverageType,\r\n\tSQ_Loss.CoverageAKID,\r\n\tSQ_Loss.DirectALAEOutstandingER,\r\n\tSQ_Loss.DirectALAEPaidIR,\r\n\tSQ_Loss.FinancialTypeCode\r\n\tFROM\r\n\t(\r\n\tSELECT \r\n\tLMC.loss_master_calculation_id,\r\n\tCT.claim_trans_id,\r\n\tPC.TypeBureauCode,\r\n\tLMC.loss_master_run_date,\r\n\tOCC.pol_key,\r\n\tRL.StateProvinceCode,\r\n\tRL.RatingCounty,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMC.paid_loss_amt else 0 end) as paid_loss_amt,\r\n\t(Case when LMC.financialtypecode = 'D' and LMC.trans_kind_code = 'D' Then LMC.outstanding_amt Else 0 End ) as outstanding_amt,\r\n\tLMC.new_claim_count,\r\n\tLMC.class_code,\r\n\tPOL.terrorism_risk_ind,\r\n\tISG.InsuranceSegmentDescription,\r\n\tPOF.PolicyOfferingDescription,\r\n\tPOL.pol_term,\r\n\tCCD.CauseOfLossID,\r\n\tOCC.claim_loss_date,\r\n\tRL.ZipPostalCode,\r\n\tLMC.trans_kind_code,\r\n\tISG.InsuranceSegmentCode,\r\n\tCCD.claimant_cov_det_id,\r\n\tOCC.s3p_claim_num,\r\n\tOCC.claim_occurrence_num,\r\n\tPOL.pol_eff_date,\r\n\tCCD.PolicySourceID,\r\n\tCCD.claimant_cov_det_ak_id,\r\n\tSC.StatisticalCoverageAKID as CoverageAKID,\r\n\tCASE WHEN LTRIM(RTRIM(MajorPerilCode))='919' THEN '1' ELSE 'N/A' END AS TerrorismInd,\r\n\tCASE WHEN CT.trans_date<@{pipeline().parameters.FIRSTQMONTH} THEN LMC.loss_master_run_date ELSE CT.trans_date END AS trans_date,\r\n\t'N/A' as CoverageType,\r\n\t(case when LMC.financialtypecode = 'E' and LMC.trans_kind_code = 'D' then LMF.eom_unpaid_loss_adjust_exp else 0 End) as DirectALAEOutstandingER,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMF.paid_exp_amt else 0 end) as DirectALAEPaidIR,\r\n\tLMC.financialtypecode\r\n\t\r\n\tFROM \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id and LMC.crrnt_snpsht_flag=1 and CT.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact LMF\r\n\ton LMC.loss_master_calculation_id=LMF.edw_loss_master_calculation_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRCD\r\n\ton LMF.InsuranceReferenceCoverageDimId=IRCD.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id AND CCD.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO\r\n\tON CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id AND CPO.Crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence OCC\r\n\tON CPO.claim_occurrence_ak_id= OCC.claim_occurrence_ak_id AND  OCC.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\ton POL.pol_ak_id=OCC.pol_key_ak_id  AND  POL.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering POF\r\n\ton POL.PolicyOfferingAKId = POF.PolicyOfferingAKId and POF.CurrentSnapshotFlag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton SC.StatisticalCoverageAKID=CCD.StatisticalCoverageAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tWHERE ( PC.TypeBureauCode in('IM','PI') OR \r\n\t\t\t     ( LTRIM(RTRIM(IRCD.CoverageSummaryDescription))='SMART Inland Marine' AND IRCD.CoverageCode NOT IN \r\n\t\t\t\t('VALPAP','ACCREC') )  )\r\n\tAND LMF.audit_id <> -9\r\n\t@{pipeline().parameters.WHERE_CLAUSE_2}\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT \r\n\tLMC.loss_master_calculation_id,\r\n\tCT.claim_trans_id,\r\n\tPC.TypeBureauCode,\r\n\tLMC.loss_master_run_date,\r\n\tOCC.pol_key,\r\n\tRL.StateProvinceCode,\r\n\tRL.RatingCounty,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMC.paid_loss_amt else 0 end) as paid_loss_amt,\r\n\t(Case when LMC.financialtypecode = 'D' and LMC.trans_kind_code = 'D' Then LMC.outstanding_amt Else 0 End ) as outstanding_amt,\r\n\tLMC.new_claim_count,\r\n\tLMC.class_code,\r\n\tPOL.terrorism_risk_ind,\r\n\tISG.InsuranceSegmentDescription,\r\n\tPOF.PolicyOfferingDescription,\r\n\tPOL.pol_term,\r\n\tCCD.CauseOfLossID,\r\n\tOCC.claim_loss_date,\r\n\tRL.ZipPostalCode,\r\n\tLMC.trans_kind_code,\r\n\tISG.InsuranceSegmentCode,\r\n\tCCD.claimant_cov_det_id,\r\n\tOCC.s3p_claim_num,\r\n\tOCC.claim_occurrence_num,\r\n\tPOL.pol_eff_date,\r\n\tCCD.PolicySourceID,\r\n\tCCD.claimant_cov_det_ak_id,\r\n\tRC.RatingCoverageAKID as CoverageAKID,\r\n\tCASE WHEN LTRIM(RTRIM(RC.CoverageType)) in ('Tria','Terrorism') THEN '1' ELSE 'N/A' END AS TerrorismInd,\r\n\tCASE WHEN CT.trans_date<@{pipeline().parameters.FIRSTQMONTH} THEN LMC.loss_master_run_date ELSE CT.trans_date END AS trans_date,\r\n\tRC.CoverageType as CoverageType,\r\n\t(case when LMC.financialtypecode = 'E' and LMC.trans_kind_code = 'D' then LMF.eom_unpaid_loss_adjust_exp else 0 End) as DirectALAEOutstandingER,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMF.paid_exp_amt else 0 end) as DirectALAEPaidIR,\r\n\tLMC.financialtypecode\r\n\tFROM \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\tand LMC.crrnt_snpsht_flag=1\r\n\tand CT.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact LMF\r\n\ton LMC.loss_master_calculation_id=LMF.edw_loss_master_calculation_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRCD\r\n\ton LMF.InsuranceReferenceCoverageDimId=IRCD.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id\r\n\tAND CCD.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO\r\n\tON CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id AND CPO.Crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence OCC\r\n\tON CPO.claim_occurrence_ak_id= OCC.claim_occurrence_ak_id AND  OCC.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\ton POL.pol_ak_id=OCC.pol_key_ak_id AND POL.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering POF\r\n\ton POL.PolicyOfferingAKId = POF.PolicyOfferingAKId\r\n\tand POF.CurrentSnapshotFlag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton CCD.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\tand (case when LMC.trans_offset_onset_ind='O'  and LMC.pms_acct_entered_date != '1800-01-01 01:00:00.000'\r\n\tthen LMC.pms_acct_entered_date\r\n\telse DATEADD(D,1,LMC.loss_master_run_date)  end) between RC.EffectiveDate and RC.ExpirationDate\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tand RL.CurrentSnapshotFlag=1\r\n\tWHERE ( PC.TypeBureauCode in ('InlandMarine','GamesOfChance','HoleInOne','EventCancellation') OR \r\n\t\t\t  \t(LTRIM(RTRIM(IRCD.CoverageSummaryDescription))='SMART Inland Marine' AND IRCD.CoverageCode NOT IN \r\n\t\t\t\t('VALPAP','ACCREC') )  )\r\n\tAND LMF.audit_id <> -9\r\n\t@{pipeline().parameters.WHERE_CLAUSE_2}\r\n\t)SQ_Loss\r\n\twhere SQ_Loss.trans_kind_code='D'\r\n\tAND SQ_Loss.InsuranceSegmentCode IN ('1','2')\r\n\tAND SQ_Loss.loss_master_run_date BETWEEN @ST_DT AND @ED_DT\r\n\tAND (SQ_Loss.paid_loss_amt<>0 or SQ_Loss.outstanding_amt<>0 OR SQ_Loss.DirectALAEOutstandingER <> 0 OR SQ_Loss.DirectALAEPaidIR <> 0)\r\n\tORDER BY SQ_Loss.loss_master_calculation_id\n),\nAGG_Remove_Duplicate AS (\n\tSELECT\n\tloss_master_calculation_id,\n\tTypeBureauCode,\n\tloss_master_run_date,\n\tpol_key,\n\tStateProvinceCode,\n\tRatingCounty,\n\tpaid_loss_amt,\n\toutstanding_amt,\n\tnew_claim_count,\n\tclass_code,\n\tterrorism_risk_ind,\n\tInsuranceSegmentDescription,\n\tPolicyOfferingDescription,\n\tpol_term,\n\tCauseOfLossID,\n\tclaim_loss_date,\n\tZipPostalCode,\n\tclaimant_cov_det_id,\n\ts3p_claim_num,\n\tclaim_occurrence_num,\n\tpol_eff_date,\n\tsource_sys_id,\n\tclaimant_cov_det_ak_id,\n\tTerrorismInd,\n\ttrans_date,\n\tCoverageType,\n\tCoverageAKID,\n\tDirectALAEOutstandingER,\n\tDirectALAEPaidIR,\n\tFinancialTypeCode\n\tFROM SQ_Loss\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY loss_master_calculation_id ORDER BY NULL) = 1\n),\nLKP_PremiumTransactionAttributes AS (\n\tSELECT\n\tPremiumTransactionAKID,\n\tExposure,\n\tCoverageEffectiveDate,\n\tCoverageExpirationDate,\n\tDeductibleAmount,\n\tCoverageAKId\n\tFROM (\n\t\tSELECT \r\n\t\tPT.PremiumTransactionAKID AS PremiumTransactionAKID,\r\n\t\tPT.Exposure as Exposure,\r\n\t\tPT.PremiumTransactionEffectiveDate as CoverageEffectiveDate,\r\n\t\tPT.PremiumTransactionExpirationDate as CoverageExpirationDate,\r\n\t\tPT.DeductibleAmount AS DeductibleAmount,\r\n\t\tPT.StatisticalCoverageAKID AS CoverageAKID \r\n\t\tFROM PremiumTransaction PT\r\n\t\tinner join dbo.StatisticalCoverage SC\r\n\t\ton SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID AND SC.CurrentSnapshotFlag = 1\r\n\t\tinner join dbo.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID AND PC.CurrentSnapshotFlag = 1\r\n\t\tjoin dbo.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID and RL.CurrentSnapshotFlag=1\r\n\t\tinner join V2.policy P ON RL.PolicyAKID = P.pol_ak_id AND P.crrnt_snpsht_flag=1\r\n\t\tWHERE (PC.TypeBureauCode in ('IM','PI') OR PC.InsuranceLine = 'BP')\r\n\t\tAND p.pol_ak_id IN  (SELECT distinct LMC.pol_ak_id from DBO.loss_master_calculation LMC WHERE \r\n\t\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},-1)))\r\n\t\t\r\n\t\tUNION ALL \r\n\t\t\r\n\t\tSELECT \r\n\t\tPT.PremiumTransactionAKID AS PremiumTransactionAKID,\r\n\t\tRC.Exposure as Exposure,\r\n\t\tPT.PremiumTransactionEffectiveDate as CoverageEffectiveDate,\r\n\t\tPT.PremiumTransactionExpirationDate as CoverageExpirationDate,\r\n\t\tPT.DeductibleAmount AS DeductibleAmount,\r\n\t\tPT.RatingCoverageAKID as CoverageAKID\r\n\t\tfrom \r\n\t\tDBO.PremiumTransaction PT\r\n\t\tINNER JOIN dbo.RatingCoverage RC ON PT.RatingCoverageAKID = RC.RatingCoverageAKID AND RC.EffectiveDate=PT.EffectiveDate\r\n\t\tINNER JOIN dbo.PolicyCoverage PC ON PC.PolicyCoverageAKID=RC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\t\tINNER JOIN dbo.RiskLocation RL ON PC.RiskLocationAKID=RL.RiskLocationAKID and RL.CurrentSnapshotFlag=1 \r\n\t\tINNER JOIN V2.policy P on P.pol_ak_id = RL.Policyakid and P.crrnt_snpsht_flag = 1\r\n\t\tWHERE PT.sourcesystemid = 'DCT' AND RC.sourcesystemid = 'DCT' \r\n\t\tAND ( PC.TypeBureauCode in ('InlandMarine','GamesOfChance','HoleInOne') OR PC.InsuranceLine = 'BP') \r\n\t\tAND P.pol_ak_id IN  (SELECT distinct LMC.pol_ak_id from DBO.loss_master_calculation LMC WHERE \r\n\t\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},-1)))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageAKId ORDER BY PremiumTransactionAKID) = 1\n),\nLKP_WorkAAISExtract_Loss AS (\n\tSELECT\n\tEDWLossMasterCalculationPKId\n\tFROM (\n\t\tSELECT \n\t\t\tEDWLossMasterCalculationPKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkAAISExtract\n\t\tWHERE LossMasterRunDate BETWEEN @{pipeline().parameters.FIRSTQMONTH} AND @{pipeline().parameters.LASTQMONTH} and EDWLossMasterCalculationPKId<>-1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWLossMasterCalculationPKId ORDER BY EDWLossMasterCalculationPKId) = 1\n),\nEXP_Default AS (\n\tSELECT\n\tAGG_Remove_Duplicate.loss_master_calculation_id,\n\tAGG_Remove_Duplicate.TypeBureauCode,\n\tAGG_Remove_Duplicate.loss_master_run_date,\n\tAGG_Remove_Duplicate.pol_key,\n\tAGG_Remove_Duplicate.StateProvinceCode,\n\tAGG_Remove_Duplicate.RatingCounty,\n\tAGG_Remove_Duplicate.paid_loss_amt,\n\tAGG_Remove_Duplicate.outstanding_amt,\n\tAGG_Remove_Duplicate.new_claim_count,\n\tAGG_Remove_Duplicate.class_code,\n\tAGG_Remove_Duplicate.terrorism_risk_ind,\n\tAGG_Remove_Duplicate.InsuranceSegmentDescription,\n\tAGG_Remove_Duplicate.PolicyOfferingDescription,\n\tAGG_Remove_Duplicate.pol_term,\n\tAGG_Remove_Duplicate.CauseOfLossID,\n\tAGG_Remove_Duplicate.claim_loss_date,\n\tAGG_Remove_Duplicate.ZipPostalCode,\n\tAGG_Remove_Duplicate.claimant_cov_det_id,\n\tAGG_Remove_Duplicate.s3p_claim_num,\n\tAGG_Remove_Duplicate.claim_occurrence_num,\n\tAGG_Remove_Duplicate.pol_eff_date,\n\tAGG_Remove_Duplicate.source_sys_id,\n\tAGG_Remove_Duplicate.claimant_cov_det_ak_id,\n\tAGG_Remove_Duplicate.TerrorismInd,\n\tAGG_Remove_Duplicate.trans_date,\n\tAGG_Remove_Duplicate.CoverageType,\n\tAGG_Remove_Duplicate.CoverageAKID,\n\tLKP_WorkAAISExtract_Loss.EDWLossMasterCalculationPKId,\n\tLKP_PremiumTransactionAttributes.PremiumTransactionAKID,\n\tLKP_PremiumTransactionAttributes.Exposure,\n\tLKP_PremiumTransactionAttributes.CoverageEffectiveDate,\n\tLKP_PremiumTransactionAttributes.CoverageExpirationDate,\n\tLKP_PremiumTransactionAttributes.DeductibleAmount,\n\tAGG_Remove_Duplicate.DirectALAEOutstandingER,\n\tAGG_Remove_Duplicate.DirectALAEPaidIR,\n\tAGG_Remove_Duplicate.FinancialTypeCode\n\tFROM AGG_Remove_Duplicate\n\tLEFT JOIN LKP_PremiumTransactionAttributes\n\tON LKP_PremiumTransactionAttributes.CoverageAKId = AGG_Remove_Duplicate.CoverageAKID\n\tLEFT JOIN LKP_WorkAAISExtract_Loss\n\tON LKP_WorkAAISExtract_Loss.EDWLossMasterCalculationPKId = AGG_Remove_Duplicate.loss_master_calculation_id\n),\nSRT_Data AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tloss_master_run_date, \n\tloss_master_calculation_id, \n\tTypeBureauCode, \n\tpol_key, \n\tStateProvinceCode, \n\tRatingCounty, \n\tpaid_loss_amt, \n\toutstanding_amt, \n\tnew_claim_count, \n\tclass_code, \n\tterrorism_risk_ind, \n\tExposure, \n\tInsuranceSegmentDescription, \n\tPolicyOfferingDescription, \n\tpol_term, \n\tCauseOfLossID, \n\tclaim_loss_date, \n\tZipPostalCode, \n\tCoverageEffectiveDate, \n\tCoverageExpirationDate, \n\tclaimant_cov_det_id, \n\ts3p_claim_num, \n\tclaim_occurrence_num, \n\tpol_eff_date, \n\tsource_sys_id, \n\tEDWLossMasterCalculationPKId, \n\tTerrorismInd, \n\tDeductibleAmount, \n\ttrans_date, \n\tCoverageType, \n\tDirectALAEOutstandingER, \n\tDirectALAEPaidIR, \n\tFinancialTypeCode\n\tFROM EXP_Default\n\tORDER BY claimant_cov_det_ak_id ASC, loss_master_run_date ASC\n),\nLKP_InceptionToDatePaidLossAmount AS (\n\tSELECT\n\tInceptionToDatePaidLossAmount,\n\tpol_key,\n\tedw_claimant_cov_det_ak_id,\n\ttrans_date,\n\tloss_master_calculation_id\n\tFROM (\n\t\tSELECT DISTINCT\r\n\t\t--Old logic for OutstandingAmount records\r\n\t\t--CASE WHEN InceptionToDatePaidLossAmount=0 and PaidLossAmount=0 THEN LAST_VALUE(InceptionToDatePaidLossAmount) OVER (partition by pol_key,edw_claimant_cov_det_ak_id,year(trans_date), month(trans_date) order by trans_date rows between unbounded preceding and unbounded following ) \r\n\t\tCASE WHEN InceptionToDatePaidLossAmount=0 and PaidLossAmount=0 THEN SUM(PaidLossAmount) OVER (partition by pol_key,edw_claimant_cov_det_ak_id,claim_num order by loss_master_run_date)\r\n\t\tELSE InceptionToDatePaidLossAmount END AS InceptionToDatePaidLossAmount,\r\n\t\tpol_key AS pol_key,\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\ttrans_date AS trans_date\r\n\t\t,loss_master_calculation_id AS loss_master_calculation_id\r\n\t\tFROM\r\n\t\t(\r\n\t\tSELECT distinct SUM(InceptionToDatePaidLossAmount) over (partition by pol_key,edw_claimant_cov_det_ak_id,claim_num order by edw_claimant_cov_det_ak_id,trans_date,claim_trans_pk_id) AS InceptionToDatePaidLossAmount,\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\ttrans_date AS trans_date,\r\n\t\tInceptionToDatePaidLossAmount AS PaidLossAmount,\r\n\t\tpol_key\r\n\t\t,loss_master_calculation_id\r\n\t\t,loss_master_run_date\r\n\t\t,claim_num\r\n\t\tFROM (\r\n\t\tSELECT  f.direct_loss_paid_including_recoveries AS InceptionToDatePaidLossAmount,  \r\n\t\t--f.direct_loss_outstanding_excluding_recoveries AS OutstandingAmount, --US-403724 Commenting out since we don't need it\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\tct.trans_date,\r\n\t\tp.pol_key AS pol_key,\r\n\t\to.claim_num AS claim_num,\r\n\t\tlmc.loss_master_calculation_id,\r\n\t\tlmc.loss_master_run_date,\r\n\t\tlmc.claim_trans_pk_id\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact f\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim d\r\n\t\ton f.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tinner join vw_claim_transaction ct\r\n\t\ton f.edw_claim_trans_pk_id=ct.claim_trans_id\r\n\t\tand ct.trans_date<'2001-01-01'\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p\r\n\t\ton f.pol_dim_id=p.pol_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim O \r\n\t\ton F.claim_occurrence_dim_id=o.claim_occurrence_dim_id\r\n\t\t--Join added for US-403724\r\n\t\tleft join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact lmf\r\n\t\ton lmf.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tjoin loss_master_calculation lmc\r\n\t\ton lmc.loss_master_calculation_id = lmf.edw_loss_master_calculation_pk_id\r\n\t\tUNION ALL\r\n\t\tSELECT f.DirectLossPaidIR AS InceptionToDatePaidLossAmount,  \r\n\t\t--f.DirectLossOutstandingER AS OutstandingAmount, --US-403724 Commenting out since we don't need it\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\tct.trans_date,\r\n\t\tp.pol_key AS pol_key,\r\n\t\to.claim_num AS claim_num,\r\n\t\tlmc.loss_master_calculation_id,\r\n\t\tlmc.loss_master_run_date,\r\n\t\tlmc.claim_trans_pk_id\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact f\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim d\r\n\t\ton f.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tinner join vw_claim_transaction ct\r\n\t\ton f.edw_claim_trans_pk_id=ct.claim_trans_id\r\n\t\tand ct.trans_date>='2001-01-01'\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p\r\n\t\ton f.pol_dim_id=p.pol_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim O \r\n\t\ton F.claim_occurrence_dim_id=o.claim_occurrence_dim_id\r\n\t\t--Join added for US-403724\r\n\t\tjoin loss_master_calculation lmc\r\n\t\ton lmc.loss_master_calculation_id = f.edw_loss_master_calculation_pk_id\r\n\t\t) T\r\n\t\t) T\r\n\t\tWHERE cast(trans_date as date)<=@{pipeline().parameters.LASTQMONTH} \r\n\t\tORDER BY pol_key,edw_claimant_cov_det_ak_id,trans_date\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key,edw_claimant_cov_det_ak_id,trans_date,loss_master_calculation_id ORDER BY InceptionToDatePaidLossAmount DESC) = 1\n),\nEXP_Calculate_Cummulative_Loss_Paid AS (\n\tSELECT\n\tLKP_InceptionToDatePaidLossAmount.InceptionToDatePaidLossAmount,\n\t-- *INF*: IIF(ISNULL(InceptionToDatePaidLossAmount),0,InceptionToDatePaidLossAmount)\n\tIFF(InceptionToDatePaidLossAmount IS NULL, 0, InceptionToDatePaidLossAmount) AS var_InceptionToDatePaidAmount,\n\tvar_InceptionToDatePaidAmount AS o_InceptionToDatePaidAmount,\n\tSRT_Data.paid_loss_amt,\n\t-- *INF*: IIF(ISNULL(paid_loss_amt),0,paid_loss_amt)\n\tIFF(paid_loss_amt IS NULL, 0, paid_loss_amt) AS o_paid_loss_amt,\n\tSRT_Data.outstanding_amt AS OutstandingAmount,\n\t-- *INF*: IIF(ISNULL(OutstandingAmount),0,OutstandingAmount)\n\tIFF(OutstandingAmount IS NULL, 0, OutstandingAmount) AS o_OutstandingAmount\n\tFROM SRT_Data\n\tLEFT JOIN LKP_InceptionToDatePaidLossAmount\n\tON LKP_InceptionToDatePaidLossAmount.pol_key = SRT_Data.pol_key AND LKP_InceptionToDatePaidLossAmount.edw_claimant_cov_det_ak_id = SRT_Data.claimant_cov_det_ak_id AND LKP_InceptionToDatePaidLossAmount.trans_date <= SRT_Data.trans_date AND LKP_InceptionToDatePaidLossAmount.loss_master_calculation_id = SRT_Data.loss_master_calculation_id\n),\nFIL_Exists_Loss AS (\n\tSELECT\n\tSRT_Data.EDWLossMasterCalculationPKId AS LKP_LossMasterCalculationId, \n\tSRT_Data.loss_master_calculation_id, \n\tSRT_Data.TypeBureauCode, \n\tSRT_Data.loss_master_run_date, \n\tSRT_Data.pol_key, \n\tSRT_Data.StateProvinceCode, \n\tSRT_Data.RatingCounty, \n\tEXP_Calculate_Cummulative_Loss_Paid.o_paid_loss_amt AS paid_loss_amt, \n\tEXP_Calculate_Cummulative_Loss_Paid.o_OutstandingAmount AS outstanding_amt, \n\tSRT_Data.new_claim_count, \n\tSRT_Data.class_code AS ClassCode, \n\tSRT_Data.terrorism_risk_ind, \n\tSRT_Data.Exposure, \n\tSRT_Data.InsuranceSegmentDescription, \n\tSRT_Data.PolicyOfferingDescription, \n\tSRT_Data.pol_term, \n\tSRT_Data.CauseOfLossID, \n\tSRT_Data.claim_loss_date, \n\tSRT_Data.ZipPostalCode, \n\tSRT_Data.CoverageEffectiveDate, \n\tSRT_Data.CoverageExpirationDate, \n\tSRT_Data.claimant_cov_det_id, \n\tSRT_Data.s3p_claim_num, \n\tEXP_Calculate_Cummulative_Loss_Paid.o_InceptionToDatePaidAmount AS direct_loss_paid_excluding_recoveries, \n\tSRT_Data.claim_occurrence_num, \n\tSRT_Data.pol_eff_date, \n\tSRT_Data.source_sys_id, \n\tSRT_Data.TerrorismInd, \n\tSRT_Data.DeductibleAmount, \n\tSRT_Data.CoverageType, \n\tSRT_Data.DirectALAEOutstandingER, \n\tSRT_Data.DirectALAEPaidIR, \n\tSRT_Data.FinancialTypeCode\n\tFROM EXP_Calculate_Cummulative_Loss_Paid\n\t -- Manually join with SRT_Data\n\tWHERE ISNULL(LKP_LossMasterCalculationId)\n),\nEXP_Cleansing_Loss AS (\n\tSELECT\n\tloss_master_calculation_id AS i_loss_master_calculation_id,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tloss_master_run_date AS i_loss_master_run_date,\n\tpol_key AS i_pol_key,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tRatingCounty AS i_RatingCounty,\n\tpaid_loss_amt AS i_paid_loss_amt,\n\toutstanding_amt AS i_outstanding_amt,\n\tnew_claim_count AS i_new_claim_count,\n\tClassCode AS i_ClassCode,\n\tterrorism_risk_ind AS i_terrorism_risk_ind,\n\tExposure AS i_Exposure,\n\tInsuranceSegmentDescription AS i_InsuranceSegmentDescription,\n\tPolicyOfferingDescription AS i_PolicyOfferingDescription,\n\tpol_term AS i_pol_term,\n\tCauseOfLossID AS i_CauseOfLossID,\n\tclaim_loss_date AS i_claim_loss_date,\n\tZipPostalCode AS i_ZipPostalCode,\n\tCoverageEffectiveDate AS i_CoverageEffectiveDate,\n\tCoverageExpirationDate AS i_CoverageExpirationDate,\n\tclaimant_cov_det_id AS i_claimant_cov_det_id,\n\ts3p_claim_num AS i_s3p_claim_num,\n\tdirect_loss_paid_excluding_recoveries AS i_direct_loss_paid_including_recoveries,\n\tclaim_occurrence_num AS i_claim_occurrence_num,\n\tpol_eff_date AS i_pol_eff_date,\n\tTerrorismInd AS i_TerrorismInd,\n\tFinancialTypeCode AS i_FinancialTypeCode,\n\ti_loss_master_calculation_id AS o_loss_master_calculation_id,\n\t-- *INF*: RTRIM(LTRIM(i_TypeBureauCode))\n\tRTRIM(LTRIM(i_TypeBureauCode)) AS o_TypeBureauCode,\n\t-- *INF*: TRUNC(i_loss_master_run_date,'DD')\n\tCAST(TRUNC(i_loss_master_run_date, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_loss_master_run_date,\n\t-- *INF*: RTRIM(LTRIM(i_pol_key))\n\tRTRIM(LTRIM(i_pol_key)) AS o_pol_key,\n\t-- *INF*: RTRIM(LTRIM(i_StateProvinceCode))\n\tRTRIM(LTRIM(i_StateProvinceCode)) AS o_StateProvinceCode,\n\t-- *INF*: rtrim(ltrim(i_RatingCounty))\n\trtrim(ltrim(i_RatingCounty)) AS o_RatingCounty,\n\ti_paid_loss_amt AS o_paid_loss_amt,\n\ti_outstanding_amt AS o_outstanding_amt,\n\ti_new_claim_count AS o_new_claim_count,\n\t-- *INF*: RTRIM(LTRIM(i_ClassCode))\n\tRTRIM(LTRIM(i_ClassCode)) AS o_ClassCode,\n\t-- *INF*: rtrim(ltrim(i_TerrorismInd))\n\trtrim(ltrim(i_TerrorismInd)) AS o_terrorism_risk_ind,\n\t-- *INF*: IIF(ISNULL(i_Exposure) OR LENGTH(i_Exposure)=0 , 0 ,i_Exposure)\n\tIFF(i_Exposure IS NULL OR LENGTH(i_Exposure) = 0, 0, i_Exposure) AS o_Exposure,\n\t-- *INF*: RTRIM(LTRIM(i_InsuranceSegmentDescription))\n\tRTRIM(LTRIM(i_InsuranceSegmentDescription)) AS o_InsuranceSegmentDescription,\n\t-- *INF*: RTRIM(LTRIM(i_PolicyOfferingDescription))\n\tRTRIM(LTRIM(i_PolicyOfferingDescription)) AS o_PolicyOfferingDescription,\n\t-- *INF*: RTRIM(LTRIM(i_pol_term))\n\tRTRIM(LTRIM(i_pol_term)) AS o_pol_term,\n\ti_CauseOfLossID AS o_CauseOfLossID,\n\t-- *INF*: TRUNC(i_claim_loss_date,'DD')\n\tCAST(TRUNC(i_claim_loss_date, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_claim_loss_date,\n\t-- *INF*: RTRIM(LTRIM(i_ZipPostalCode))\n\tRTRIM(LTRIM(i_ZipPostalCode)) AS o_ZipPostalCode,\n\t-- *INF*: IIF(ISNULL(i_CoverageEffectiveDate), TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),i_CoverageEffectiveDate)\n\tIFF(\n\t    i_CoverageEffectiveDate IS NULL,\n\t    TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    i_CoverageEffectiveDate\n\t) AS o_CoverageEffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_CoverageExpirationDate), TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),i_CoverageExpirationDate)\r\n\t-- \r\n\t-- \n\tIFF(\n\t    i_CoverageExpirationDate IS NULL,\n\t    TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    i_CoverageExpirationDate\n\t) AS o_CoverageExpirationDate,\n\ti_claimant_cov_det_id AS o_ClaimantDetailId,\n\t-- *INF*: IIF(TO_INTEGER(GET_DATE_PART(i_pol_eff_date,'YYYY')) <= 2003  AND TO_INTEGER(GET_DATE_PART(i_pol_eff_date,'MM'))<10,SUBSTR(TO_CHAR(i_claim_loss_date),1,16) ||' '|| i_claim_occurrence_num,i_s3p_claim_num)\n\tIFF(\n\t    CAST(DATE_PART(i_pol_eff_date, 'YYYY') AS INTEGER) <= 2003\n\t    and CAST(DATE_PART(i_pol_eff_date, 'MM') AS INTEGER) < 10,\n\t    SUBSTR(TO_CHAR(i_claim_loss_date), 1, 16) || ' ' || i_claim_occurrence_num,\n\t    i_s3p_claim_num\n\t) AS o_ClaimNumber,\n\t-- *INF*: IIF(i_FinancialTypeCode='E',0, IIF(IsNull(i_direct_loss_paid_including_recoveries),0, i_direct_loss_paid_including_recoveries))\n\tIFF(\n\t    i_FinancialTypeCode = 'E', 0,\n\t    IFF(\n\t        i_direct_loss_paid_including_recoveries IS NULL, 0,\n\t        i_direct_loss_paid_including_recoveries\n\t    )\n\t) AS o_direct_loss_paid_including_recoveries,\n\tsource_sys_id,\n\tDeductibleAmount,\n\tCoverageType,\n\tDirectALAEOutstandingER,\n\tDirectALAEPaidIR\n\tFROM FIL_Exists_Loss\n),\nLKP_BureauStatisticalCode_Loss AS (\n\tSELECT\n\tBureauCode3,\n\tBureauCode4,\n\to_loss_master_calculation_id,\n\tloss_master_calculation_id\n\tFROM (\n\t\tSELECT lmc.loss_master_calculation_id as loss_master_calculation_id,b.BureauCode3 as BureauCode3, b.BureauCode4 as BureauCode4\r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode b\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation  lmc on \r\n\t\t          lmc.BureauStatisticalCodeAKID = b.BureauStatisticalCodeAKID\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage s on\r\n\t\t         lmc.StatisticalCoverageAKID = s.StatisticalCoverageAKID\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage p on \r\n\t\t          p.PolicyCoverageAKID = s.PolicyCoverageAKID\r\n\t\t  where p.TypeBureauCode in ('PI')\r\n\t\t and\r\n\t\t S.ClassCode IN ('335','336','337','338','800') \r\n\t\t and lmc.source_sys_id='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY loss_master_calculation_id ORDER BY BureauCode3) = 1\n),\nEXP_Logic_Loss AS (\n\tSELECT\n\t-1 AS PremiumMasterCalculationID,\n\tEXP_Cleansing_Loss.o_loss_master_calculation_id AS loss_master_calculation_id,\n\tEXP_Cleansing_Loss.o_TypeBureauCode AS TypeBureauCode,\n\t-- *INF*: TO_DATE('1800-01-01','YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS PremiumMasterRunDate,\n\tEXP_Cleansing_Loss.o_loss_master_run_date AS loss_master_run_date,\n\tEXP_Cleansing_Loss.o_pol_key AS pol_key,\n\tEXP_Cleansing_Loss.o_StateProvinceCode AS StateProvinceCode,\n\tEXP_Cleansing_Loss.o_RatingCounty AS RatingCounty,\n\t0.00 AS PremiumMasterPremium,\n\tEXP_Cleansing_Loss.o_paid_loss_amt AS paid_loss_amt,\n\tEXP_Cleansing_Loss.o_outstanding_amt AS outstanding_amt,\n\tEXP_Cleansing_Loss.o_new_claim_count AS new_claim_count,\n\tEXP_Cleansing_Loss.o_ClassCode AS ClassCode,\n\t'N/A' AS PremiumMasterClassCode_out,\n\tClassCode AS LossMasterClassCode_out,\n\tEXP_Cleansing_Loss.DeductibleAmount,\n\tEXP_Cleansing_Loss.o_terrorism_risk_ind AS i_terrorism_risk_ind,\n\t-- *INF*: i_terrorism_risk_ind\r\n\t-- \r\n\t-- --DECODE(i_terrorism_risk_ind,'0','0','1','1','N','0','Y','1','N/A')\n\ti_terrorism_risk_ind AS o_terrorism_risk_ind,\n\tEXP_Cleansing_Loss.o_Exposure AS i_Exposure,\n\t-- *INF*: to_char(i_Exposure)\n\tto_char(i_Exposure) AS o_Exposure,\n\tEXP_Cleansing_Loss.source_sys_id AS Source_Sys_Id,\n\tLKP_BureauStatisticalCode_Loss.BureauCode3 AS lkp_ConstructionCode,\n\t-- *INF*: IIF(Source_Sys_Id='PMS',IIF(ISNULL(lkp_ConstructionCode) or LENGTH(lkp_ConstructionCode)=0, '00', lkp_ConstructionCode),'N/A')\n\tIFF(\n\t    Source_Sys_Id = 'PMS',\n\t    IFF(\n\t        lkp_ConstructionCode IS NULL\n\t    or LENGTH(lkp_ConstructionCode) = 0, '00',\n\t        lkp_ConstructionCode\n\t    ),\n\t    'N/A'\n\t) AS ConstructionCode,\n\tLKP_BureauStatisticalCode_Loss.BureauCode4 AS lkp_IsoFireProtectionCode,\n\t-- *INF*: IIF(Source_Sys_Id='PMS',IIF(ISNULL(lkp_IsoFireProtectionCode) or LENGTH(lkp_IsoFireProtectionCode)=0, '00', lkp_IsoFireProtectionCode),'N/A')\n\tIFF(\n\t    Source_Sys_Id = 'PMS',\n\t    IFF(\n\t        lkp_IsoFireProtectionCode IS NULL\n\t    or LENGTH(lkp_IsoFireProtectionCode) = 0, '00',\n\t        lkp_IsoFireProtectionCode\n\t    ),\n\t    'N/A'\n\t) AS IsoFireProtectionCode,\n\tEXP_Cleansing_Loss.o_InsuranceSegmentDescription AS InsuranceSegmentDescription,\n\tEXP_Cleansing_Loss.o_PolicyOfferingDescription AS i_PolicyOfferingDescription,\n\t-- *INF*: IIF(IN(i_PolicyOfferingDescription,'CPP','SBOP','Home & Highway', 'CBOP', 'SMARTbusiness' ),i_PolicyOfferingDescription,'Unassigned')\n\tIFF(\n\t    i_PolicyOfferingDescription IN ('CPP','SBOP','Home & Highway','CBOP','SMARTbusiness'),\n\t    i_PolicyOfferingDescription,\n\t    'Unassigned'\n\t) AS o_PolicyOfferingDescription,\n\tEXP_Cleansing_Loss.o_pol_term AS i_pol_term,\n\t-- *INF*: IIF(ISNULL(i_pol_term),'N/A',i_pol_term)\n\tIFF(i_pol_term IS NULL, 'N/A', i_pol_term) AS o_pol_term,\n\tEXP_Cleansing_Loss.o_CauseOfLossID AS i_CauseOfLossID,\n\t-- *INF*: :LKP.LKP_SUP_CAUSEOFLOSS_CAUSEOFLOSSNAME(i_CauseOfLossID)\n\tLKP_SUP_CAUSEOFLOSS_CAUSEOFLOSSNAME_i_CauseOfLossID.CauseOfLossName AS v_CauseOfLossName,\n\t-- *INF*: IIF(ISNULL(v_CauseOfLossName),'N/A',v_CauseOfLossName)\n\tIFF(v_CauseOfLossName IS NULL, 'N/A', v_CauseOfLossName) AS o_CauseOfLossName,\n\tEXP_Cleansing_Loss.o_claim_loss_date AS claim_loss_date,\n\tEXP_Cleansing_Loss.o_ZipPostalCode AS i_ZipPostalCode,\n\t-- *INF*: i_ZipPostalCode\r\n\t-- \r\n\t-- --DECODE(LENGTH(i_ZipPostalCode),\r\n\t-- --6,DECODE(TRUE,SUBSTR(i_ZipPostalCode,1,1)='0',SUBSTR(i_ZipPostalCode,2),'00000'),\r\n\t-- --5,i_ZipPostalCode,\r\n\t-- --10,DECODE(TRUE,INSTR(i_ZipPostalCode,'-',1,1)=6,SUBSTR(i_ZipPostalCode,7),'0000'),\r\n\t-- --'00000'\r\n\t-- --)\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\tEXP_Cleansing_Loss.o_CoverageEffectiveDate AS CoverageEffectiveDate,\n\tEXP_Cleansing_Loss.o_CoverageExpirationDate AS CoverageExpirationDate,\n\tEXP_Cleansing_Loss.o_ClaimantDetailId AS ClaimantDetailId,\n\tEXP_Cleansing_Loss.o_ClaimNumber AS ClaimNumber,\n\tEXP_Cleansing_Loss.o_direct_loss_paid_including_recoveries AS DirectLossPaidIncludingRecoveries,\n\tEXP_Cleansing_Loss.CoverageType,\n\tEXP_Cleansing_Loss.DirectALAEOutstandingER AS OutstandingAllocatedLossAdjustmentExpenseAmount,\n\tEXP_Cleansing_Loss.DirectALAEPaidIR AS PaidAllocatedlossAdjustmentExpenseAmount\n\tFROM EXP_Cleansing_Loss\n\tLEFT JOIN LKP_BureauStatisticalCode_Loss\n\tON LKP_BureauStatisticalCode_Loss.loss_master_calculation_id = EXP_Cleansing_Loss.o_loss_master_calculation_id\n\tLEFT JOIN LKP_SUP_CAUSEOFLOSS_CAUSEOFLOSSNAME LKP_SUP_CAUSEOFLOSS_CAUSEOFLOSSNAME_i_CauseOfLossID\n\tON LKP_SUP_CAUSEOFLOSS_CAUSEOFLOSSNAME_i_CauseOfLossID.CauseOfLossId = i_CauseOfLossID\n\n),\nSQ_Premium AS (\n\tDeclare @StartTime datetime\r\n\tDeclare @EndTime datetime\r\n\t\r\n\tSET @StartTime = DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.FIRST_DAY_OF_THE_QUARTER},0) \r\n\tSET @EndTime = DATEADD(s, -1, DATEADD(qq, DATEDIFF(qq, 0, GETDATE())+@{pipeline().parameters.LAST_DAY_OF_THE_QUARTER}, 0))\r\n\t\r\n\tSELECT \r\n\tPMC.PremiumMasterCalculationID,\r\n\tPC.TypeBureauCode,\r\n\tPMC.PremiumMasterRunDate,\r\n\tPMC.PolicyAKID,\r\n\tPMC.PolicyKey,\r\n\tRL.StateProvinceCode,\r\n\tRL.RatingCounty,\r\n\tPMC.PremiumMasterPremium,\r\n\tSC.ClassCode,\r\n\tPT.DeductibleAmount,\r\n\tPOL.terrorism_risk_ind,\r\n\tPMC.PremiumMasterExposure,\r\n\tPT.ConstructionCode,\r\n\tPT.SourceSystemID,\r\n\tISNULL(CDIM.IsoFireProtectionCode, CDCP.IsoFireProtectionCode) IsoFireProtectionCode,\r\n\tISG.InsuranceSegmentDescription,\r\n\tPOF.PolicyOfferingDescription,\r\n\tPOL.pol_term,\r\n\tRL.ZipPostalCode,\r\n\tPT.PremiumTransactionEffectiveDate CoverageEffectiveDate,\r\n\tPT.PremiumTransactionExpirationDate CoverageExpirationDate,\r\n\tCASE WHEN LTRIM(RTRIM(MajorPerilCode))='919' THEN '1' ELSE 'N/A' END AS TerrorismInd,\r\n\tPT.PMSFunctionCode,\r\n\tPC.InsuranceLine,\r\n\tRL.LocationUnitNumber,\r\n\tSC.SubLocationUnitNumber,\r\n\tSC.RiskUnitGroup,\r\n\tSC.RiskUnitGroupSequenceNumber,\r\n\tSC.RiskUnit,\r\n\tSC.RiskUnitSequenceNumber,\r\n\tSC.PMSTypeExposure,\r\n\tSC.MajorPerilCode,\r\n\tSC.MajorPerilSequenceNumber,\r\n\tPMC.PremiumTransactionEnteredDate,\r\n\tPMC.PremiumMasterRecordType,\r\n\tPMC.RatingCoverageAKId,\r\n\t'N/A' as CoverageType\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF with(nolock)\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRCD\r\n\ton PMF.InsuranceReferenceCoverageDimId=IRCD.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC \r\n\ton PMF.EDWPremiumMasterCalculationPKId=PMC.PremiumMasterCalculationId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID\r\n\tand SC.SourceSystemID='PMS'\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\ton POL.pol_ak_id=RL.PolicyAKID\r\n\tand POL.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering POF\r\n\ton POL.PolicyOfferingAKId = POF.PolicyOfferingAKId\r\n\tand POF.CurrentSnapshotFlag = 1\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty CDCP\r\n\ton CDCP.PremiumTransactionId=PT.PremiumTransactionId\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailInlandMarine CDIM\r\n\ton CDIM.PremiumTransactionId=PT.PremiumTransactionId\r\n\twhere PMC.PremiumMasterRunDate BETWEEN @StartTime AND @EndTime\r\n\tAND PT.SourceSystemId='PMS' \r\n\tAND (PC.TypeBureauCode in ('IM','PI') OR  \r\n\t\t\t(LTRIM(RTRIM(IRCD.CoverageSummaryDescription))='SMART Inland Marine' AND IRCD.CoverageCode NOT IN  ('VALPAP','ACCREC') )  )\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48')\r\n\tAND PMC.PremiumMasterPremium <>0\r\n\tAND PMC.PremiumMasterPremiumType='D'\r\n\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ( 'COL' , 'CWO')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_1}\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT \r\n\tPMC.PremiumMasterCalculationID,\r\n\tPC.TypeBureauCode,\r\n\tPMC.PremiumMasterRunDate,\r\n\tPMC.PolicyAKID,\r\n\tPMC.PolicyKey,\r\n\tRL.StateProvinceCode,\r\n\tRL.RatingCounty,\r\n\tPMC.PremiumMasterPremium,\r\n\tRC.ClassCode,\r\n\tPT.DeductibleAmount,\r\n\tPOL.terrorism_risk_ind,\r\n\tPMC.PremiumMasterExposure,\r\n\tPT.ConstructionCode,\r\n\tPT.SourceSystemID,\r\n\tISNULL(CDIM.IsoFireProtectionCode, CDCP.IsoFireProtectionCode) IsoFireProtectionCode,\r\n\tISG.InsuranceSegmentDescription,\r\n\tPOF.PolicyOfferingDescription,\r\n\tPOL.pol_term,\r\n\tRL.ZipPostalCode,\r\n\tPT.PremiumTransactionEffectiveDate CoverageEffectiveDate,\r\n\tPT.PremiumTransactionExpirationDate CoverageExpirationDate,\r\n\tCASE WHEN LTRIM(RTRIM(RC.CoverageType)) in ('Tria','Terrorism') THEN '1' ELSE 'N/A' END AS TerrorismInd,\r\n\tPT.PMSFunctionCode,\r\n\tPC.InsuranceLine,\r\n\tRL.LocationUnitNumber,\r\n\tNull as SubLocationUnitNumber,\r\n\tNull as RiskUnitGroup,\r\n\tNull as RiskUnitGroupSequenceNumber,\r\n\tNull as RiskUnit,\r\n\tNull as RiskUnitSequenceNumber,\r\n\tNull as PMSTypeExposure,\r\n\tNull as MajorPerilCode,\r\n\tNull as MajorPerilSequenceNumber,\r\n\tPMC.PremiumTransactionEnteredDate,\r\n\tPMC.PremiumMasterRecordType,\r\n\tPMC.RatingCoverageAKId,\r\n\tRC.CoverageType\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF with(nolock)\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRCD\r\n\ton PMF.InsuranceReferenceCoverageDimId=IRCD.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC \r\n\ton PMF.EDWPremiumMasterCalculationPKId=PMC.PremiumMasterCalculationId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton PMC.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\tand RC.EffectiveDate=PT.EffectiveDate\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tand RL.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\ton POL.pol_ak_id=RL.PolicyAKID\r\n\tand POL.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering POF\r\n\ton POL.PolicyOfferingAKId=POF.PolicyOfferingAKId\r\n\tand POF.CurrentSnapshotFlag=1\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty CDCP\r\n\ton CDCP.PremiumTransactionId=PT.PremiumTransactionId\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailInlandMarine CDIM\r\n\ton CDIM.PremiumTransactionId=PT.PremiumTransactionId\r\n\twhere PMC.PremiumMasterRunDate BETWEEN @StartTime AND @EndTime\r\n\tand PT.SourceSystemId='DCT'\r\n\tAND (PC.TypeBureauCode in ('InlandMarine','GamesOfChance','HoleInOne','EventCancellation')  OR (LTRIM(RTRIM(IRCD.CoverageSummaryDescription))='SMART Inland Marine' AND IRCD.CoverageCode NOT IN \r\n\t\t\t\t('VALPAP','ACCREC') )  )\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48')\r\n\tAND PMC.PremiumMasterPremium <>0\r\n\tAND PMC.PremiumMasterPremiumType='D'\r\n\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ( 'CWO','CWB')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_1}\n),\nLKP_WorkAAISExtract_Premium AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId\n\tFROM (\n\t\tSELECT \n\t\t\tEDWPremiumMasterCalculationPKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkAAISExtract\n\t\tWHERE PremiumMasterRunDate BETWEEN @{pipeline().parameters.FIRSTQMONTH} AND @{pipeline().parameters.LASTQMONTH} and EDWPremiumMasterCalculationPKId<>-1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPremiumMasterCalculationPKId ORDER BY EDWPremiumMasterCalculationPKId) = 1\n),\nFIL_Exists_Premium AS (\n\tSELECT\n\tLKP_WorkAAISExtract_Premium.EDWPremiumMasterCalculationPKId AS LKP_PremiumMasterCalculationID, \n\tSQ_Premium.PremiumMasterCalculationID, \n\tSQ_Premium.TypeBureauCode, \n\tSQ_Premium.PremiumMasterRunDate, \n\tSQ_Premium.PolicyAKID, \n\tSQ_Premium.PolicyKey AS pol_key, \n\tSQ_Premium.StateProvinceCode, \n\tSQ_Premium.RatingCounty, \n\tSQ_Premium.PremiumMasterPremium, \n\tSQ_Premium.ClassCode, \n\tSQ_Premium.DeductibleAmount, \n\tSQ_Premium.terrorism_risk_ind, \n\tSQ_Premium.PremiumMasterExposure, \n\tSQ_Premium.ConstructionCode, \n\tSQ_Premium.SourceSystemID, \n\tSQ_Premium.IsoFireProtectionCode, \n\tSQ_Premium.InsuranceSegmentDescription, \n\tSQ_Premium.PolicyOfferingDescription, \n\tSQ_Premium.pol_term, \n\tSQ_Premium.ZipPostalCode, \n\tSQ_Premium.CoverageEffectiveDate, \n\tSQ_Premium.CoverageExpirationDate, \n\tSQ_Premium.TerrorismInd, \n\tSQ_Premium.PMSFunctionCode, \n\tSQ_Premium.InsuranceLine, \n\tSQ_Premium.LocationUnitNumber, \n\tSQ_Premium.SubLocationUnitNumber, \n\tSQ_Premium.RiskUnitGroup, \n\tSQ_Premium.RiskUnitGroupSequenceNumber, \n\tSQ_Premium.RiskUnit, \n\tSQ_Premium.RiskUnitSequenceNumber, \n\tSQ_Premium.PMSTypeExposure, \n\tSQ_Premium.MajorPerilCode, \n\tSQ_Premium.MajorPerilSequenceNumber, \n\tSQ_Premium.PremiumTransactionEnteredDate, \n\tSQ_Premium.PremiumMasterRecordType, \n\tSQ_Premium.RatingCoverageAKId, \n\tSQ_Premium.CoverageType\n\tFROM SQ_Premium\n\tLEFT JOIN LKP_WorkAAISExtract_Premium\n\tON LKP_WorkAAISExtract_Premium.EDWPremiumMasterCalculationPKId = SQ_Premium.PremiumMasterCalculationID\n\tWHERE ISNULL(LKP_PremiumMasterCalculationID)\n),\nEXP_Cleansing_Premium AS (\n\tSELECT\n\tPremiumMasterCalculationID AS i_PremiumMasterCalculationID,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tPremiumMasterRunDate AS i_PremiumMasterRunDate,\n\tPolicyAKID AS i_PolicyAKID,\n\tpol_key AS i_pol_key,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tRatingCounty AS i_RatingCounty,\n\tPremiumMasterPremium AS i_PremiumMasterPremium,\n\tClassCode AS i_ClassCode,\n\tDeductibleAmount AS i_DeductibleAmount,\n\tterrorism_risk_ind AS i_terrorism_risk_ind,\n\tPremiumMasterExposure AS i_PremiumMasterExposure,\n\tConstructionCode AS i_ConstructionCode,\n\tSourceSystemID AS i_SourceSystemID,\n\tIsoFireProtectionCode AS i_IsoFireProtectionCode,\n\tInsuranceSegmentDescription AS i_InsuranceSegmentDescription,\n\tPolicyOfferingDescription AS i_PolicyOfferingDescription,\n\tpol_term AS i_pol_term,\n\tZipPostalCode AS i_ZipPostalCode,\n\tCoverageEffectiveDate AS i_CoverageEffectiveDate,\n\tCoverageExpirationDate AS i_CoverageExpirationDate,\n\tTerrorismInd AS i_TerrorismInd,\n\tPMSFunctionCode AS i_PMSFunctionCode,\n\tInsuranceLine AS i_InsuranceLine,\n\tLocationUnitNumber AS i_LocationUnitNumber,\n\tSubLocationUnitNumber AS i_SubLocationUnitNumber,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tRiskUnitGroupSequenceNumber AS i_RiskUnitGroupSequenceNumber,\n\tRiskUnit AS i_RiskUnit,\n\tRiskUnitSequenceNumber AS i_RiskUnitSequenceNumber,\n\tPMSTypeExposure AS i_PMSTypeExposure,\n\tMajorPerilCode AS i_MajorPerilCode,\n\tMajorPerilSequenceNumber AS i_MajorPerilSequenceNumber,\n\tPremiumTransactionEnteredDate AS i_PremiumTransactionEnteredDate,\n\tPremiumMasterRecordType AS i_PremiumMasterRecordType,\n\tRatingCoverageAKId AS i_RatingCoverageAKId,\n\tCoverageType AS i_CoverageType,\n\t-- *INF*: IIF(i_PremiumMasterRecordType='OFFSET' AND i_SourceSystemID='PMS', :LKP.LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS(i_PolicyAKID, i_PMSFunctionCode, i_InsuranceLine, i_LocationUnitNumber, i_SubLocationUnitNumber, i_RiskUnitGroup, i_RiskUnitGroupSequenceNumber, i_RiskUnit, i_RiskUnitSequenceNumber, i_PMSTypeExposure, i_MajorPerilCode, i_MajorPerilSequenceNumber, i_CoverageEffectiveDate, i_PremiumTransactionEnteredDate))\n\tIFF(\n\t    i_PremiumMasterRecordType = 'OFFSET' AND i_SourceSystemID = 'PMS',\n\t    LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PremiumMasterExposure\n\t) AS v_Exposure_Previous_Onset_Transaction_PMS,\n\t-- *INF*: :LKP.LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT(i_RatingCoverageAKId, i_CoverageEffectiveDate, i_PremiumTransactionEnteredDate)\n\tLKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT_i_RatingCoverageAKId_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.Exposure AS v_Exposure_Previous_Onset_Transaction_DCT,\n\ti_PremiumMasterCalculationID AS o_PremiumMasterCalculationID,\n\t-- *INF*: RTRIM(LTRIM(i_TypeBureauCode))\n\tRTRIM(LTRIM(i_TypeBureauCode)) AS o_TypeBureauCode,\n\t-- *INF*: TRUNC(i_PremiumMasterRunDate,'DD')\n\tCAST(TRUNC(i_PremiumMasterRunDate, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_PremiumMasterRunDate,\n\t-- *INF*: RTRIM(LTRIM(i_pol_key))\n\tRTRIM(LTRIM(i_pol_key)) AS o_pol_key,\n\t-- *INF*: RTRIM(LTRIM(i_StateProvinceCode))\n\tRTRIM(LTRIM(i_StateProvinceCode)) AS o_StateProvinceCode,\n\t-- *INF*: rtrim(ltrim(i_RatingCounty))\n\trtrim(ltrim(i_RatingCounty)) AS o_RatingCounty,\n\ti_PremiumMasterPremium AS o_PremiumMasterPremium,\n\t-- *INF*: RTRIM(LTRIM(i_ClassCode))\n\tRTRIM(LTRIM(i_ClassCode)) AS o_ClassCode,\n\t-- *INF*: LTRIM(RTRIM(i_DeductibleAmount))\n\tLTRIM(RTRIM(i_DeductibleAmount)) AS o_DeductibleAmount,\n\t-- *INF*: RTRIM(LTRIM(i_TerrorismInd))\n\tRTRIM(LTRIM(i_TerrorismInd)) AS o_terrorism_risk_ind,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_PremiumMasterRecordType='OFFSET' AND i_SourceSystemID='PMS' AND  NOT ISNULL(v_Exposure_Previous_Onset_Transaction_PMS), \r\n\t-- -1 * v_Exposure_Previous_Onset_Transaction_PMS, \r\n\t-- i_PremiumMasterRecordType='OFFSET' AND i_SourceSystemID='DCT' AND  NOT ISNULL(v_Exposure_Previous_Onset_Transaction_DCT),\r\n\t-- -1 * v_Exposure_Previous_Onset_Transaction_DCT,\r\n\t-- i_PremiumMasterExposure\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_PremiumMasterRecordType = 'OFFSET' AND i_SourceSystemID = 'PMS' AND v_Exposure_Previous_Onset_Transaction_PMS IS NOT NULL, - 1 * v_Exposure_Previous_Onset_Transaction_PMS,\n\t    i_PremiumMasterRecordType = 'OFFSET' AND i_SourceSystemID = 'DCT' AND v_Exposure_Previous_Onset_Transaction_DCT IS NOT NULL, - 1 * v_Exposure_Previous_Onset_Transaction_DCT,\n\t    i_PremiumMasterExposure\n\t) AS o_Exposure,\n\t-- *INF*: RTRIM(LTRIM(i_ConstructionCode))\n\tRTRIM(LTRIM(i_ConstructionCode)) AS o_ConstructionCode,\n\t-- *INF*: LTRIM(RTRIM(i_SourceSystemID))\n\tLTRIM(RTRIM(i_SourceSystemID)) AS o_SourceSystemID,\n\t-- *INF*: RTRIM(LTRIM(i_IsoFireProtectionCode))\n\tRTRIM(LTRIM(i_IsoFireProtectionCode)) AS o_IsoFireProtectionCode,\n\t-- *INF*: RTRIM(LTRIM(i_InsuranceSegmentDescription))\n\tRTRIM(LTRIM(i_InsuranceSegmentDescription)) AS o_InsuranceSegmentDescription,\n\t-- *INF*: RTRIM(LTRIM(i_PolicyOfferingDescription))\n\tRTRIM(LTRIM(i_PolicyOfferingDescription)) AS o_PolicyOfferingDescription,\n\t-- *INF*: RTRIM(LTRIM(i_pol_term))\n\tRTRIM(LTRIM(i_pol_term)) AS o_pol_term,\n\t-- *INF*: RTRIM(LTRIM(i_ZipPostalCode))\n\tRTRIM(LTRIM(i_ZipPostalCode)) AS o_ZipPostalCode,\n\ti_CoverageEffectiveDate AS o_CoverageEffectiveDate,\n\ti_CoverageExpirationDate AS o_CoverageExpirationDate,\n\ti_CoverageType AS o_CoverageType\n\tFROM FIL_Exists_Premium\n\tLEFT JOIN LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate\n\tON LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PolicyAKID = i_PolicyAKID\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PMSFunctionCode = i_PMSFunctionCode\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.InsuranceLine = i_InsuranceLine\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.LocationUnitNumber = i_LocationUnitNumber\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.SubLocationUnitNumber = i_SubLocationUnitNumber\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.RiskUnitGroup = i_RiskUnitGroup\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.RiskUnitGroupSequenceNumber = i_RiskUnitGroupSequenceNumber\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.RiskUnit = i_RiskUnit\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.RiskUnitSequenceNumber = i_RiskUnitSequenceNumber\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PMSTypeExposure = i_PMSTypeExposure\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.MajorPerilCode = i_MajorPerilCode\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.MajorPerilSequenceNumber = i_MajorPerilSequenceNumber\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PremiumTransactionEffectiveDate = i_CoverageEffectiveDate\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_PMS_i_PolicyAKID_i_PMSFunctionCode_i_InsuranceLine_i_LocationUnitNumber_i_SubLocationUnitNumber_i_RiskUnitGroup_i_RiskUnitGroupSequenceNumber_i_RiskUnit_i_RiskUnitSequenceNumber_i_PMSTypeExposure_i_MajorPerilCode_i_MajorPerilSequenceNumber_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PremiumTransactionEnteredDate = i_PremiumTransactionEnteredDate\n\n\tLEFT JOIN LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT_i_RatingCoverageAKId_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate\n\tON LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT_i_RatingCoverageAKId_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.RatingCoverageAKId = i_RatingCoverageAKId\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT_i_RatingCoverageAKId_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PremiumTransactionEffectiveDate = i_CoverageEffectiveDate\n\tAND LKP_EXPOSURE_PREVIOUS_ONSET_TRANSACTION_DCT_i_RatingCoverageAKId_i_CoverageEffectiveDate_i_PremiumTransactionEnteredDate.PremiumTransactionEnteredDate = i_PremiumTransactionEnteredDate\n\n),\nLKP_BureauStatisticalCode_Premium AS (\n\tSELECT\n\tBureauCode3,\n\tBureauCode4,\n\to_PremiumMasterCalculationID,\n\tPremiumMasterCalculationID\n\tFROM (\n\t\tSELECT pm.PremiumMasterCalculationID as PremiumMasterCalculationID ,b.BureauCode3 as BureauCode3 , b.BureauCode4 as BureauCode4 \r\n\t\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode b\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation  pm on \r\n\t\t          pm.BureauStatisticalCodeAKID = b.BureauStatisticalCodeAKID\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage s on\r\n\t\t         pm.StatisticalCoverageAKID = s.StatisticalCoverageAKID\r\n\t\t  inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage p on \r\n\t\t          p.PolicyCoverageAKID = s.PolicyCoverageAKID\r\n\t\t  where p.TypeBureauCode in ('PI')\r\n\t\t and S.ClassCode IN ('335','336','337','338','800') \r\n\t\t and pm.SourceSystemID='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumMasterCalculationID ORDER BY BureauCode3) = 1\n),\nEXP_Logic_Premium AS (\n\tSELECT\n\tEXP_Cleansing_Premium.o_PremiumMasterCalculationID AS PremiumMasterCalculationID,\n\t-1 AS LossMasterCalculationId,\n\tEXP_Cleansing_Premium.o_TypeBureauCode AS TypeBureauCode,\n\tEXP_Cleansing_Premium.o_PremiumMasterRunDate AS PremiumMasterRunDate,\n\t-- *INF*: TO_DATE('1800-01-01','YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS loss_master_run_date,\n\tEXP_Cleansing_Premium.o_pol_key AS pol_key,\n\tEXP_Cleansing_Premium.o_StateProvinceCode AS StateProvinceCode,\n\tEXP_Cleansing_Premium.o_RatingCounty AS RatingCounty,\n\t'TBD' AS AAISTransactionCode,\n\tEXP_Cleansing_Premium.o_PremiumMasterPremium AS PremiumMasterPremium,\n\t-- *INF*: ROUND(PremiumMasterPremium,2)\n\tROUND(PremiumMasterPremium, 2) AS PremiumMasterPremium_out,\n\t0.00 AS PaidLossAmt,\n\t0.00 AS OutstandingAmt,\n\t0 AS new_claim_count,\n\tEXP_Cleansing_Premium.o_ClassCode AS i_ClassCode,\n\ti_ClassCode AS PremiumMasterClassCode,\n\t'N/A' AS LossMasterClassCode,\n\tEXP_Cleansing_Premium.o_DeductibleAmount AS DeductibleAmount,\n\t-- *INF*: IIF(LENGTH(DeductibleAmount)=0 OR ISNULL(DeductibleAmount),'0',DeductibleAmount)\n\tIFF(LENGTH(DeductibleAmount) = 0 OR DeductibleAmount IS NULL, '0', DeductibleAmount) AS DeductibleAmount_out,\n\tEXP_Cleansing_Premium.o_terrorism_risk_ind AS i_terrorism_risk_ind,\n\t-- *INF*: i_terrorism_risk_ind\r\n\t-- \r\n\t-- --DECODE(i_terrorism_risk_ind,'0','0','1','1','N','0','Y','1','N/A')\n\ti_terrorism_risk_ind AS o_terrorism_risk_ind,\n\tEXP_Cleansing_Premium.o_Exposure AS i_Exposure,\n\t-- *INF*: to_char(i_Exposure)\n\tto_char(i_Exposure) AS o_Exposure,\n\tEXP_Cleansing_Premium.o_ConstructionCode AS i_ConstructionCode,\n\tEXP_Cleansing_Premium.o_SourceSystemID AS i_SourceSystemID,\n\tLKP_BureauStatisticalCode_Premium.BureauCode3 AS lkp_ConstructionCode,\n\t-- *INF*: IIF(i_SourceSystemID='PMS',IIF(ISNULL(lkp_ConstructionCode) or LENGTH(lkp_ConstructionCode)=0,'00',lkp_ConstructionCode),:LKP.LKP_RATINGCOVERAGE_SUPCONSTRUCTIONCODE_STANDARDCONSTRUCTIONCODEDESCRIPTION(i_ConstructionCode))\n\tIFF(\n\t    i_SourceSystemID = 'PMS',\n\t    IFF(\n\t        lkp_ConstructionCode IS NULL\n\t    or LENGTH(lkp_ConstructionCode) = 0, '00',\n\t        lkp_ConstructionCode\n\t    ),\n\t    LKP_RATINGCOVERAGE_SUPCONSTRUCTIONCODE_STANDARDCONSTRUCTIONCODEDESCRIPTION_i_ConstructionCode.StandardConstructionCodeDescription\n\t) AS v_ConstructionCode,\n\t-- *INF*: iif(isnull(v_ConstructionCode),'N/A',v_ConstructionCode)\n\tIFF(v_ConstructionCode IS NULL, 'N/A', v_ConstructionCode) AS o_ConstructionCode,\n\tEXP_Cleansing_Premium.o_IsoFireProtectionCode AS IsoFireProtectionCode,\n\tLKP_BureauStatisticalCode_Premium.BureauCode4 AS lkp_IsoFireProtectionCode,\n\t-- *INF*: IIF(i_SourceSystemID='PMS',IIF(ISNULL(lkp_IsoFireProtectionCode) or LENGTH(lkp_IsoFireProtectionCode)=0,'00',lkp_IsoFireProtectionCode),IIF(ISNULL(IsoFireProtectionCode) OR LENGTH(IsoFireProtectionCode)=0,'N/A',IsoFireProtectionCode))\n\tIFF(\n\t    i_SourceSystemID = 'PMS',\n\t    IFF(\n\t        lkp_IsoFireProtectionCode IS NULL\n\t    or LENGTH(lkp_IsoFireProtectionCode) = 0, '00',\n\t        lkp_IsoFireProtectionCode\n\t    ),\n\t    IFF(\n\t        IsoFireProtectionCode IS NULL\n\t    or LENGTH(IsoFireProtectionCode) = 0, 'N/A',\n\t        IsoFireProtectionCode\n\t    )\n\t) AS IsoFireProtectionCode_out,\n\tEXP_Cleansing_Premium.o_InsuranceSegmentDescription AS InsuranceSegmentDescription,\n\tEXP_Cleansing_Premium.o_PolicyOfferingDescription AS i_PolicyOfferingDescription,\n\t-- *INF*: IIF(IN(i_PolicyOfferingDescription,'CPP','SBOP','Home & Highway', 'CBOP', 'SMARTbusiness' ),i_PolicyOfferingDescription,'Unassigned')\n\tIFF(\n\t    i_PolicyOfferingDescription IN ('CPP','SBOP','Home & Highway','CBOP','SMARTbusiness'),\n\t    i_PolicyOfferingDescription,\n\t    'Unassigned'\n\t) AS o_PolicyOfferingDescription,\n\tEXP_Cleansing_Premium.o_pol_term AS i_pol_term,\n\t-- *INF*: IIF(ISNULL(i_pol_term),'N/A',i_pol_term)\n\tIFF(i_pol_term IS NULL, 'N/A', i_pol_term) AS o_pol_term,\n\t'N/A' AS o_CauseOfLossName,\n\t-- *INF*: TO_DATE('1800-01-01','YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS o_ClaimLossDate,\n\tEXP_Cleansing_Premium.o_ZipPostalCode AS i_ZipPostalCode,\n\t-- *INF*: i_ZipPostalCode\r\n\t-- \r\n\t-- --DECODE(LENGTH(i_ZipPostalCode),\r\n\t-- --6,DECODE(TRUE,SUBSTR(i_ZipPostalCode,1,1)='0',SUBSTR(i_ZipPostalCode,2),'00000'),\r\n\t-- --5,i_ZipPostalCode,\r\n\t-- --10,DECODE(TRUE,INSTR(i_ZipPostalCode,'-',1,1)=6,SUBSTR(i_ZipPostalCode,7),'0000'),\r\n\t-- --'00000'\r\n\t-- --)\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\tEXP_Cleansing_Premium.o_CoverageEffectiveDate AS CoverageEffectiveDate,\n\tEXP_Cleansing_Premium.o_CoverageExpirationDate AS CoverageExpirationDate,\n\t-1 AS o_ClaimantDetailId,\n\t'N/A' AS o_ClaimNumber,\n\t0.00 AS o_DirectLossPaidIncludingRecoveries,\n\tEXP_Cleansing_Premium.o_CoverageType,\n\t0 AS OutstandingAllocatedLossAdjustmentExpenseAmount,\n\t0 AS PaidAllocatedlossAdjustmentExpenseAmount\n\tFROM EXP_Cleansing_Premium\n\tLEFT JOIN LKP_BureauStatisticalCode_Premium\n\tON LKP_BureauStatisticalCode_Premium.PremiumMasterCalculationID = EXP_Cleansing_Premium.o_PremiumMasterCalculationID\n\tLEFT JOIN LKP_RATINGCOVERAGE_SUPCONSTRUCTIONCODE_STANDARDCONSTRUCTIONCODEDESCRIPTION LKP_RATINGCOVERAGE_SUPCONSTRUCTIONCODE_STANDARDCONSTRUCTIONCODEDESCRIPTION_i_ConstructionCode\n\tON LKP_RATINGCOVERAGE_SUPCONSTRUCTIONCODE_STANDARDCONSTRUCTIONCODEDESCRIPTION_i_ConstructionCode.ConstructionCode = i_ConstructionCode\n\n),\nUN_ALL_Premium_Loss AS (\n\tSELECT PremiumMasterCalculationID, LossMasterCalculationId, TypeBureauCode, PremiumMasterRunDate, loss_master_run_date, pol_key, StateProvinceCode, RatingCounty, AAISTransactionCode, PremiumMasterPremium_out AS PremiumMasterDirectWrittenPremiumAmount, PaidLossAmt, OutstandingAmt, new_claim_count AS LossMasterNewClaimCount, PremiumMasterClassCode, LossMasterClassCode, DeductibleAmount_out AS DeductibleAmount, o_terrorism_risk_ind AS TerrorismRiskIndicator, o_Exposure AS InlandMarinePropertyAmountOfInsurance, o_ConstructionCode AS ConstructionCode, IsoFireProtectionCode_out AS IsoFireProtectionCode, InsuranceSegmentDescription, o_PolicyOfferingDescription AS PolicyOfferingDescription, o_pol_term AS PolicyTerm, o_CauseOfLossName AS CauseOfLossName, o_ClaimLossDate AS ClaimLossDate, o_ZipPostalCode AS ZipPostalCode, CoverageEffectiveDate, CoverageExpirationDate, o_ClaimantDetailId AS ClaimantDetailId, o_ClaimNumber AS ClaimNumber, o_DirectLossPaidIncludingRecoveries AS DirectLossPaidIncludingRecoveries, i_SourceSystemID AS Source_System_ID, o_CoverageType AS CoverageType, OutstandingAllocatedLossAdjustmentExpenseAmount AS OutstandingAllocatedLossAdjustmentExpenseAmount1, PaidAllocatedlossAdjustmentExpenseAmount\n\tFROM EXP_Logic_Premium\n\tUNION\n\tSELECT PremiumMasterCalculationID, loss_master_calculation_id AS LossMasterCalculationId, TypeBureauCode, PremiumMasterRunDate, loss_master_run_date, pol_key, StateProvinceCode, RatingCounty, PremiumMasterPremium AS PremiumMasterDirectWrittenPremiumAmount, paid_loss_amt AS PaidLossAmt, outstanding_amt AS OutstandingAmt, new_claim_count AS LossMasterNewClaimCount, PremiumMasterClassCode_out AS PremiumMasterClassCode, LossMasterClassCode_out AS LossMasterClassCode, DeductibleAmount, o_terrorism_risk_ind AS TerrorismRiskIndicator, o_Exposure AS InlandMarinePropertyAmountOfInsurance, ConstructionCode, IsoFireProtectionCode, InsuranceSegmentDescription, o_PolicyOfferingDescription AS PolicyOfferingDescription, o_pol_term AS PolicyTerm, o_CauseOfLossName AS CauseOfLossName, claim_loss_date AS ClaimLossDate, o_ZipPostalCode AS ZipPostalCode, CoverageEffectiveDate, CoverageExpirationDate, ClaimantDetailId, ClaimNumber, DirectLossPaidIncludingRecoveries, Source_Sys_Id AS Source_System_ID, CoverageType, OutstandingAllocatedLossAdjustmentExpenseAmount AS OutstandingAllocatedLossAdjustmentExpenseAmount1, PaidAllocatedlossAdjustmentExpenseAmount\n\tFROM EXP_Logic_Loss\n),\nEXP_Values AS (\n\tSELECT\n\tPremiumMasterCalculationID AS i_PremiumMasterCalculationID,\n\tLossMasterCalculationId AS i_LossMasterCalculationId,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tPremiumMasterRunDate AS i_PremiumMasterRunDate,\n\tloss_master_run_date AS i_LossMasterRunDate,\n\tpol_key AS i_pol_key,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tRatingCounty AS i_RatingCounty,\n\tAAISTransactionCode AS i_AAISTransactionCode,\n\tPremiumMasterDirectWrittenPremiumAmount AS i_PremiumMasterPremium,\n\tPaidLossAmt AS i_PaidLossAmt,\n\tOutstandingAmt AS i_OutstandingAmt,\n\tLossMasterNewClaimCount AS i_LossMasterNewClaimCount,\n\tPremiumMasterClassCode AS i_PremiumMasterClassCode,\n\tLossMasterClassCode AS i_LossMasterClassCode,\n\tDeductibleAmount AS i_DeductibleAmount,\n\tTerrorismRiskIndicator AS i_TerrorismRiskIndicator,\n\tInlandMarinePropertyAmountOfInsurance AS i_InlandMarinePropertyAmountOfInsurance,\n\tConstructionCode AS i_ConstructionCode,\n\tIsoFireProtectionCode AS i_IsoFireProtectionCode,\n\tInsuranceSegmentDescription AS i_InsuranceSegmentDescription,\n\tPolicyOfferingDescription AS i_PolicyOfferingDescription,\n\tPolicyTerm AS i_PolicyTerm,\n\tCauseOfLossName AS i_CauseOfLossName,\n\tClaimLossDate AS i_ClaimLossDate,\n\tZipPostalCode AS i_ZipPostalCode,\n\tCoverageEffectiveDate AS i_CoverageEffectiveDate,\n\tCoverageExpirationDate AS i_CoverageExpirationDate,\n\tClaimantDetailId AS i_ClaimantDetailId,\n\tClaimNumber AS i_ClaimNumber,\n\tDirectLossPaidIncludingRecoveries AS i_DirectLossPaidIncludingRecoveries,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TRUNC(@{pipeline().parameters.EXTRACTDATE},'D')\n\tCAST(TRUNC(@{pipeline().parameters.EXTRACTDATE}, 'DAY') AS TIMESTAMP_NTZ(0)) AS o_CreatedDate,\n\ti_PremiumMasterCalculationID AS o_PremiumMasterCalculationID,\n\ti_LossMasterCalculationId AS o_LossMasterCalculationId,\n\ti_TypeBureauCode AS o_TypeBureauCode,\n\t'31' AS o_BureauLineOfInsurance,\n\ti_PremiumMasterRunDate AS o_PremiumMasterRunDate,\n\ti_LossMasterRunDate AS o_LossMasterRunDate,\n\t'6115' AS o_BureauCompanyNumber,\n\ti_pol_key AS o_pol_key,\n\ti_StateProvinceCode AS o_StateProvinceCode,\n\ti_RatingCounty AS o_RatingCounty,\n\ti_PremiumMasterPremium AS o_PremiumMasterDirectWrittenPremiumAmount,\n\ti_PaidLossAmt AS o_PaidLossAmount,\n\ti_OutstandingAmt AS o_OutstandingLossAmount,\n\ti_LossMasterNewClaimCount AS o_LossMasterNewClaimCount,\n\ti_PremiumMasterClassCode AS o_PremiumMasterClassCode,\n\ti_LossMasterClassCode AS o_LossMasterClassCode,\n\t'090' AS o_BureauAnnualStatementLineCode,\n\t'1' AS o_BureauOrganizationCode,\n\ti_TerrorismRiskIndicator AS o_TerrorismRiskIndicator,\n\ti_InlandMarinePropertyAmountOfInsurance AS o_InlandMarinePropertyAmountOfInsurance,\n\ti_ConstructionCode AS o_ConstructionCode,\n\ti_IsoFireProtectionCode AS o_ISOFireProtectionCode,\n\ti_InsuranceSegmentDescription AS o_InsuranceSegmentDescription,\n\ti_PolicyOfferingDescription AS o_PolicyOfferingDescription,\n\ti_PolicyTerm AS o_PolicyTerm,\n\ti_CauseOfLossName AS o_CauseOfLossName,\n\ti_ClaimLossDate AS o_ClaimLossDate,\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\ti_CoverageEffectiveDate AS o_CoverageEffectiveDate,\n\ti_CoverageExpirationDate AS o_CoverageExpirationDate,\n\ti_ClaimantDetailId AS o_ClaimantDetailId,\n\t-- *INF*: IIF(i_ClaimLossDate=TO_DATE('1800-01-01','YYYY-MM-DD'),'N/A',SUBSTR(LTRIM(RTRIM(i_pol_key)),1,20))\r\n\t-- \r\n\t-- --substr needs to be removed once policykey for duckcreek changed to policynumber+policyversion\n\tIFF(\n\t    i_ClaimLossDate = TO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD'), 'N/A',\n\t    SUBSTR(LTRIM(RTRIM(i_pol_key)), 1, 20)\n\t) AS o_ClaimNumber,\n\ti_DirectLossPaidIncludingRecoveries AS o_DirectLossPaidIncludingRecoveries,\n\t-- *INF*: GET_DATE_PART(i_CoverageExpirationDate,'yyyy')-GET_DATE_PART(i_CoverageEffectiveDate,'yyyy')\n\tDATE_PART(i_CoverageExpirationDate, 'yyyy') - DATE_PART(i_CoverageEffectiveDate, 'yyyy') AS o_flag,\n\tSource_System_ID AS Source_Sys_ID,\n\tCoverageType,\n\t-- *INF*: IIF(LENGTH(i_DeductibleAmount)=0 OR ISNULL(i_DeductibleAmount),'0',i_DeductibleAmount)\n\tIFF(LENGTH(i_DeductibleAmount) = 0 OR i_DeductibleAmount IS NULL, '0', i_DeductibleAmount) AS v_DeductibleAmount_1,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- Source_Sys_ID='PMS',v_DeductibleAmount_1,\r\n\t-- i_ClaimLossDate >TO_DATE('1800','YYYY'), :LKP.LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS(i_pol_key,CoverageType,i_ClaimLossDate),\r\n\t-- :LKP.LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM(i_pol_key,CoverageType)\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    Source_Sys_ID = 'PMS', v_DeductibleAmount_1,\n\t    i_ClaimLossDate > TO_TIMESTAMP('1800', 'YYYY'), LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS_i_pol_key_CoverageType_i_ClaimLossDate.DeductibleAmount,\n\t    LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM_i_pol_key_CoverageType.DeductibleAmount\n\t) AS v_DeductibleAmount_2,\n\t-- *INF*: IIF(LENGTH(v_DeductibleAmount_2)=0 OR ISNULL(v_DeductibleAmount_2),'0',v_DeductibleAmount_2)\n\tIFF(\n\t    LENGTH(v_DeductibleAmount_2) = 0 OR v_DeductibleAmount_2 IS NULL, '0', v_DeductibleAmount_2\n\t) AS o_DeductibleAmount,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount1 AS i_OutstandingAllocatedLossAdjustmentExpenseAmount,\n\tPaidAllocatedlossAdjustmentExpenseAmount AS i_PaidAllocatedlossAdjustmentExpenseAmount,\n\t-- *INF*: IIF(ISNULL(i_OutstandingAllocatedLossAdjustmentExpenseAmount), 0, i_OutstandingAllocatedLossAdjustmentExpenseAmount)\n\tIFF(\n\t    i_OutstandingAllocatedLossAdjustmentExpenseAmount IS NULL, 0,\n\t    i_OutstandingAllocatedLossAdjustmentExpenseAmount\n\t) AS o_OutstandingAllocatedLossAdjustmentExpenseAmount,\n\t-- *INF*: IIF(ISNULL(i_PaidAllocatedlossAdjustmentExpenseAmount), 0, i_PaidAllocatedlossAdjustmentExpenseAmount)\n\tIFF(\n\t    i_PaidAllocatedlossAdjustmentExpenseAmount IS NULL, 0,\n\t    i_PaidAllocatedlossAdjustmentExpenseAmount\n\t) AS o_PaidAllocatedlossAdjustmentExpenseAmount\n\tFROM UN_ALL_Premium_Loss\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS_i_pol_key_CoverageType_i_ClaimLossDate\n\tON LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS_i_pol_key_CoverageType_i_ClaimLossDate.PolicyKey = i_pol_key\n\tAND LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS_i_pol_key_CoverageType_i_ClaimLossDate.CoverageType = CoverageType\n\tAND LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_LOSS_i_pol_key_CoverageType_i_ClaimLossDate.EffectiveDate = i_ClaimLossDate\n\n\tLEFT JOIN LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM_i_pol_key_CoverageType\n\tON LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM_i_pol_key_CoverageType.PolicyKey = i_pol_key\n\tAND LKP_COVERAGEDEDUCTIBLE_DEDUCTIBLEAMOUNT_PREM_i_pol_key_CoverageType.CoverageType = CoverageType\n\n),\nWorkAAISExtract AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO WorkAAISExtract\n\t(AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, PremiumMasterRunDate, LossMasterRunDate, BureauCompanyNumber, PolicyKey, StateProvinceCode, RatingCounty, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, LossMasterNewClaimCount, PremiumMasterClassCode, LossMasterClassCode, DeductibleAmount, BureauAnnualStatementLineCode, BureauOrganizationCode, TerrorismRiskIndicator, InlandMarinePropertyAmountOfInsurance, ConstructionCode, ISOFireProtectionCode, InsuranceSegmentDescription, PolicyOfferingDescription, PolicyTerm, CauseOfLossName, ClaimLossDate, ZipPostalCode, CoverageEffectiveDate, CoverageExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, ClaimNumber, PaidAllocatedLossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount)\n\tSELECT \n\to_AuditID AS AUDITID, \n\to_CreatedDate AS CREATEDDATE, \n\to_PremiumMasterCalculationID AS EDWPREMIUMMASTERCALCULATIONPKID, \n\to_LossMasterCalculationId AS EDWLOSSMASTERCALCULATIONPKID, \n\to_TypeBureauCode AS TYPEBUREAUCODE, \n\to_BureauLineOfInsurance AS BUREAULINEOFINSURANCE, \n\to_PremiumMasterRunDate AS PREMIUMMASTERRUNDATE, \n\to_LossMasterRunDate AS LOSSMASTERRUNDATE, \n\to_BureauCompanyNumber AS BUREAUCOMPANYNUMBER, \n\to_pol_key AS POLICYKEY, \n\to_StateProvinceCode AS STATEPROVINCECODE, \n\to_RatingCounty AS RATINGCOUNTY, \n\to_PremiumMasterDirectWrittenPremiumAmount AS PREMIUMMASTERDIRECTWRITTENPREMIUMAMOUNT, \n\to_PaidLossAmount AS PAIDLOSSAMOUNT, \n\to_OutstandingLossAmount AS OUTSTANDINGLOSSAMOUNT, \n\to_LossMasterNewClaimCount AS LOSSMASTERNEWCLAIMCOUNT, \n\to_PremiumMasterClassCode AS PREMIUMMASTERCLASSCODE, \n\to_LossMasterClassCode AS LOSSMASTERCLASSCODE, \n\to_DeductibleAmount AS DEDUCTIBLEAMOUNT, \n\to_BureauAnnualStatementLineCode AS BUREAUANNUALSTATEMENTLINECODE, \n\to_BureauOrganizationCode AS BUREAUORGANIZATIONCODE, \n\to_TerrorismRiskIndicator AS TERRORISMRISKINDICATOR, \n\to_InlandMarinePropertyAmountOfInsurance AS INLANDMARINEPROPERTYAMOUNTOFINSURANCE, \n\to_ConstructionCode AS CONSTRUCTIONCODE, \n\to_ISOFireProtectionCode AS ISOFIREPROTECTIONCODE, \n\to_InsuranceSegmentDescription AS INSURANCESEGMENTDESCRIPTION, \n\to_PolicyOfferingDescription AS POLICYOFFERINGDESCRIPTION, \n\to_PolicyTerm AS POLICYTERM, \n\to_CauseOfLossName AS CAUSEOFLOSSNAME, \n\to_ClaimLossDate AS CLAIMLOSSDATE, \n\to_ZipPostalCode AS ZIPPOSTALCODE, \n\to_CoverageEffectiveDate AS COVERAGEEFFECTIVEDATE, \n\to_CoverageExpirationDate AS COVERAGEEXPIRATIONDATE, \n\to_DirectLossPaidIncludingRecoveries AS INCEPTIONTODATEPAIDLOSSAMOUNT, \n\to_ClaimantDetailId AS CLAIMANTCOVERAGEDETAILID, \n\to_ClaimNumber AS CLAIMNUMBER, \n\to_PaidAllocatedlossAdjustmentExpenseAmount AS PAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\to_OutstandingAllocatedLossAdjustmentExpenseAmount AS OUTSTANDINGALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT\n\tFROM EXP_Values\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "FIRSTQMONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LASTQMONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "FIRST_DAY_OF_THE_QUARTER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LAST_DAY_OF_THE_QUARTER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME_DATAMART": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_1": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "EXTRACTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}