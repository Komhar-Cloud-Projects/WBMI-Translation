{
    "name": "s_m_POL_DW_Update_GraduatedCommissionRate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_Update_GraduatedCommissionRate",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_GraduatedCommission AS (\n\tSELECT\n\tAuthorizedAmount,\n\tPolicyReference,\n\tAuthorizationDate\n\tFROM (\n\t\tSELECT \n\t\t\tAuthorizedAmount,\n\t\t\tPolicyReference,\n\t\t\tAuthorizationDate\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCBILCommissionUpdate\n\t\tWHERE UpdateType='Graduate'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyReference,AuthorizationDate ORDER BY AuthorizedAmount) = 1\n),\nLKP_ItemAmount AS (\n\tSELECT\n\tItemAmount,\n\tPolicyReference,\n\tItemEffectiveDate\n\tFROM (\n\t\tselect PT.PolicyReference as PolicyReference,BI.ItemEffectiveDate as ItemEffectiveDate, SUM(ItemAmount-TransferredAmount) as ItemAmount, , BI.TransactionDate as TransactionDate\r\n\t\tfrom  @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCBILBillItemStage BI join  @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCBILPolicyTermStage PT on BI.PolicyTermId=PT.PolicyTermId\r\n\t\twhere BI.ReceivableTypeCode='Prem' \r\n\t\tgroup by PT.PolicyReference,BI.ItemEffectiveDate,  BI.TransactionDate \r\n\t\tORDER BY PolicyReference,ItemEffectiveDate,  BI.TransactionDate ,ItemAmount--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyReference,ItemEffectiveDate ORDER BY ItemAmount DESC) = 1\n),\nLKP_SplitPolicy AS (\n\tSELECT\n\tPolicyNumber\n\tFROM (\n\t\tselect distinct DP.PolicyNumber as PolicyNumber  from @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCCoverageStaging DC\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCPolicyStaging DP on DC.SessionId=DP.SessionId\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCWCStateTermStaging DW on DC.ObjectId=DW.WC_StateTermId\r\n\t\twhere DC.ObjectName='DC_WC_StateTerm'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber ORDER BY PolicyNumber) = 1\n),\nLKP_TransactionEffectiveDate_Split AS (\n\tSELECT\n\tTransactionEffectiveDate,\n\tPremiumTransactionAKId\n\tFROM (\n\t\tselect PT.PremiumTransactionAKId as PremiumTransactionAKId , WP.TransactionEffectiveDate as TransactionEffectiveDate  \r\n\t\tfrom WorkPremiumTransaction PT\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCTTransactionInsuranceLineLocationBridge WB on PT.PremiumTransactionStageId=WB.CoverageId\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCTInsuranceLine WI on WB.LineId=WI.LineId\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCTPolicy WP on WP.PolicyId = WI.PolicyId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKId ORDER BY TransactionEffectiveDate) = 1\n),\nSQ_PremiumTransaction AS (\n\tWith STG as \r\n\t(select distinct P.PolicyNumber \r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCPolicyStaging P\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}..DCLineStaging L on P.SessionId = L.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}..WBLineStaging WL on WL.LineId = L.LineId and L.SessionId = WL.SessionId\r\n\twhere WL.IsGraduated=1)\r\n\tselect  pt.PremiumTransactionID, pt. PremiumTransactionAKID,pol.pol_num,\r\n\t pt.PremiumTransactionEffectiveDate,pt.CreatedDate as  premiumTranactionCreatedDate,\r\n\tsum(pt.PremiumTransactionAmount) over (partition by pol.pol_num, pt.PremiumTransactionEffectiveDate) as PremiumTransactionAmount,\r\n\tpt.AgencyActualCommissionRate\r\n\tfrom PremiumTransaction pt\t\r\n\tinner join RatingCoverage rc\t\r\n\ton rc.RatingCoverageAKID = pt.RatingCoverageAKId\t\r\n\tand rc.EffectiveDate = pt.EffectiveDate\t\r\n\tinner join PolicyCoverage pc\t\r\n\ton pc.PolicyCoverageAKID = rc.PolicyCoverageAKID\t\r\n\tand pc.CurrentSnapshotFlag = 1\t\r\n\tinner join RiskLocation rl\t\r\n\ton pc.RiskLocationAKID = rl.RiskLocationAKID\t\r\n\tand rl.CurrentSnapshotFlag = 1\t\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\t\r\n\ton pol.pol_ak_id = pc.PolicyAKID\t\r\n\tand pol.crrnt_snpsht_flag = 1\r\n\tinner join STG on STG.PolicyNumber=pol.pol_num\r\n\twhere \r\n\tPT.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand PC.InsuranceLine='WorkersCompensation'\t\r\n\tand PT.ReasonAmendedCode not in ('CWO','Claw Back')\r\n\torder by pt.PremiumTransactionID, pt. PremiumTransactionAKID, pol.pol_num, pt.PremiumTransactionEffectiveDate,pt.CreatedDate\n),\nEXP_Calc AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tpol_num,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionAmount,\n\tAgencyActualCommissionRate,\n\t-- *INF*: :LKP.LKP_GRADUATEDCOMMISSION(pol_num,PremiumTransactionEffectiveDate)\n\tLKP_GRADUATEDCOMMISSION_pol_num_PremiumTransactionEffectiveDate.AuthorizedAmount AS lkp_AuthorizedAmount,\n\t-- *INF*: :LKP.LKP_ITEMAMOUNT(pol_num,PremiumTransactionEffectiveDate)\n\tLKP_ITEMAMOUNT_pol_num_PremiumTransactionEffectiveDate.ItemAmount AS lkp_ItemAmount,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SPLITPOLICY(pol_num)),'0', :LKP.LKP_SPLITPOLICY(pol_num))\n\tIFF(LKP_SPLITPOLICY_pol_num.PolicyNumber IS NULL, '0', LKP_SPLITPOLICY_pol_num.PolicyNumber) AS v_IsSplit,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- lkp_ItemAmount=0,0,\r\n\t-- ISNULL(lkp_AuthorizedAmount) or ISNULL(lkp_ItemAmount),AgencyActualCommissionRate,lkp_AuthorizedAmount/lkp_ItemAmount)\n\tDECODE(TRUE,\n\t\tlkp_ItemAmount = 0, 0,\n\t\tlkp_AuthorizedAmount IS NULL OR lkp_ItemAmount IS NULL, AgencyActualCommissionRate,\n\t\tlkp_AuthorizedAmount / lkp_ItemAmount) AS v_CommissionRate,\n\t-- *INF*: :LKP.LKP_TRANSACTIONEFFECTIVEDATE_SPLIT(PremiumTransactionAKID)\n\tLKP_TRANSACTIONEFFECTIVEDATE_SPLIT_PremiumTransactionAKID.TransactionEffectiveDate AS v_EffectiveDate_Split,\n\t-- *INF*: IIF(v_IsSplit<> '0',\r\n\t-- :LKP.LKP_GRADUATEDCOMMISSION(pol_num,v_EffectiveDate_Split),0\r\n\t-- )\n\tIFF(v_IsSplit <> '0', LKP_GRADUATEDCOMMISSION_pol_num_v_EffectiveDate_Split.AuthorizedAmount, 0) AS v_AuthorizedAmount_Split,\n\t-- *INF*: IIF(v_IsSplit<>'0',\r\n\t-- :LKP.LKP_ITEMAMOUNT(pol_num,v_EffectiveDate_Split),0)\n\tIFF(v_IsSplit <> '0', LKP_ITEMAMOUNT_pol_num_v_EffectiveDate_Split.ItemAmount, 0) AS v_ItemAmount_Split,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_IsSplit<>'0' and (v_AuthorizedAmount_Split =0 or v_ItemAmount_Split=0),0, \r\n\t-- v_IsSplit<>'0' and v_AuthorizedAmount_Split <>0 and v_ItemAmount_Split<>0 and NOT ISNULL(v_AuthorizedAmount_Split) and NOT ISNULL(v_ItemAmount_Split), v_AuthorizedAmount_Split/v_ItemAmount_Split, v_CommissionRate)\n\tDECODE(TRUE,\n\t\tv_IsSplit <> '0' AND ( v_AuthorizedAmount_Split = 0 OR v_ItemAmount_Split = 0 ), 0,\n\t\tv_IsSplit <> '0' AND v_AuthorizedAmount_Split <> 0 AND v_ItemAmount_Split <> 0 AND NOT v_AuthorizedAmount_Split IS NULL AND NOT v_ItemAmount_Split IS NULL, v_AuthorizedAmount_Split / v_ItemAmount_Split,\n\t\tv_CommissionRate) AS v_CommissionRate_Split,\n\t-- *INF*: IIF(v_IsSplit<>'0', v_CommissionRate_Split,v_CommissionRate)\n\tIFF(v_IsSplit <> '0', v_CommissionRate_Split, v_CommissionRate) AS v_CommissionRate1,\n\t-- *INF*: IIF(v_CommissionRate1<-1  or v_CommissionRate1>1,0.05111,v_CommissionRate1)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(v_CommissionRate1 < - 1 OR v_CommissionRate1 > 1, 0.05111, v_CommissionRate1) AS o_AgencyCommissionRate,\n\tPremiumTransactionCreatedDate AS i_PremiumTransactionCreatedDate,\n\t-- *INF*: TRUNC(i_PremiumTransactionCreatedDate)\n\tTRUNC(i_PremiumTransactionCreatedDate) AS o_PremiumTransactionCreatedDate\n\tFROM SQ_PremiumTransaction\n\tLEFT JOIN LKP_GRADUATEDCOMMISSION LKP_GRADUATEDCOMMISSION_pol_num_PremiumTransactionEffectiveDate\n\tON LKP_GRADUATEDCOMMISSION_pol_num_PremiumTransactionEffectiveDate.PolicyReference = pol_num\n\tAND LKP_GRADUATEDCOMMISSION_pol_num_PremiumTransactionEffectiveDate.AuthorizationDate = PremiumTransactionEffectiveDate\n\n\tLEFT JOIN LKP_ITEMAMOUNT LKP_ITEMAMOUNT_pol_num_PremiumTransactionEffectiveDate\n\tON LKP_ITEMAMOUNT_pol_num_PremiumTransactionEffectiveDate.PolicyReference = pol_num\n\tAND LKP_ITEMAMOUNT_pol_num_PremiumTransactionEffectiveDate.ItemEffectiveDate = PremiumTransactionEffectiveDate\n\n\tLEFT JOIN LKP_SPLITPOLICY LKP_SPLITPOLICY_pol_num\n\tON LKP_SPLITPOLICY_pol_num.PolicyNumber = pol_num\n\n\tLEFT JOIN LKP_TRANSACTIONEFFECTIVEDATE_SPLIT LKP_TRANSACTIONEFFECTIVEDATE_SPLIT_PremiumTransactionAKID\n\tON LKP_TRANSACTIONEFFECTIVEDATE_SPLIT_PremiumTransactionAKID.PremiumTransactionAKId = PremiumTransactionAKID\n\n\tLEFT JOIN LKP_GRADUATEDCOMMISSION LKP_GRADUATEDCOMMISSION_pol_num_v_EffectiveDate_Split\n\tON LKP_GRADUATEDCOMMISSION_pol_num_v_EffectiveDate_Split.PolicyReference = pol_num\n\tAND LKP_GRADUATEDCOMMISSION_pol_num_v_EffectiveDate_Split.AuthorizationDate = v_EffectiveDate_Split\n\n\tLEFT JOIN LKP_ITEMAMOUNT LKP_ITEMAMOUNT_pol_num_v_EffectiveDate_Split\n\tON LKP_ITEMAMOUNT_pol_num_v_EffectiveDate_Split.PolicyReference = pol_num\n\tAND LKP_ITEMAMOUNT_pol_num_v_EffectiveDate_Split.ItemEffectiveDate = v_EffectiveDate_Split\n\n),\nFIL_SysDate AS (\n\tSELECT\n\tPremiumTransactionID, \n\to_AgencyCommissionRate AS CommissionRate, \n\to_PremiumTransactionCreatedDate AS PremiumTransactionCreatedDate\n\tFROM EXP_Calc\n\tWHERE trunc(PremiumTransactionCreatedDate)= \r\ntrunc(SYSDATE)\n),\nUPD_Update AS (\n\tSELECT\n\tPremiumTransactionID, \n\tCommissionRate\n\tFROM FIL_SysDate\n),\nPremiumTransaction AS (\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_Update AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AgencyActualCommissionRate = S.CommissionRate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}