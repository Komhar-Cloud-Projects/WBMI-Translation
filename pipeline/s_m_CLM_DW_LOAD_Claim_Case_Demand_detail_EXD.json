{
    "name": "s_m_CLM_DW_LOAD_Claim_Case_Demand_detail_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Case_Demand_detail_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLAIM_CASE_AK_ID AS (\n\tSELECT\n\tclaim_case_ak_id,\n\tclaim_case_key\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_case.claim_case_ak_id as claim_case_ak_id, \r\n\t\tclaim_case.claim_case_key as claim_case_key \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case \r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_key ORDER BY claim_case_ak_id) = 1\n),\nSQ_CLM_DEMAND_OFFER_STAGE AS (\n\tSELECT \r\n\tcdo.tch_claim_nbr, cdo.tch_client_id, cdo.create_ts, cdo.demand_offer_dt, cdo.demand_amt, cdo.offer_amt, cdo.damage_desc \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_demand_offer_stage cdo\n),\nEXP_VALIDATE AS (\n\tSELECT\n\ttch_claim_nbr2 AS tch_claim_nbr_cdo,\n\ttch_client_id2 AS tch_client_id_cdo,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_claim_nbr_cdo))) OR IS_SPACES(LTRIM(RTRIM(tch_claim_nbr_cdo))) OR LENGTH(LTRIM(RTRIM(tch_claim_nbr_cdo)))=0,'N/A',LTRIM(RTRIM(tch_claim_nbr_cdo)))\r\n\t--                                                                                            \t\n\tIFF(\n\t    LTRIM(RTRIM(tch_claim_nbr_cdo)) IS NULL\n\t    or LENGTH(LTRIM(RTRIM(tch_claim_nbr_cdo)))>0\n\t    and TRIM(LTRIM(RTRIM(tch_claim_nbr_cdo)))=''\n\t    or LENGTH(LTRIM(RTRIM(tch_claim_nbr_cdo))) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(tch_claim_nbr_cdo))\n\t) AS v_tch_claim_nbr,\n\tv_tch_claim_nbr AS tch_claim_nbr,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(tch_client_id_cdo))) OR IS_SPACES(LTRIM(RTRIM(tch_client_id_cdo))) OR LENGTH(LTRIM(RTRIM(tch_client_id_cdo)))=0,'N/A',LTRIM(RTRIM(tch_client_id_cdo)))\r\n\t--                                                                                          \n\tIFF(\n\t    LTRIM(RTRIM(tch_client_id_cdo)) IS NULL\n\t    or LENGTH(LTRIM(RTRIM(tch_client_id_cdo)))>0\n\t    and TRIM(LTRIM(RTRIM(tch_client_id_cdo)))=''\n\t    or LENGTH(LTRIM(RTRIM(tch_client_id_cdo))) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(tch_client_id_cdo))\n\t) AS v_tch_client_id,\n\tv_tch_client_id AS tch_client_id,\n\t-- *INF*: v_tch_claim_nbr || '//'||v_tch_client_id\n\tv_tch_claim_nbr || '//' || v_tch_client_id AS v_Claim_Case_Key,\n\tv_Claim_Case_Key AS Out_Claim_Case_key,\n\t-- *INF*: :LKP.LKP_CLAIM_CASE_AK_ID(v_Claim_Case_Key)\n\tLKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_ak_id AS v_claim_case_ak_id,\n\t-- *INF*: IIF(ISNULL(v_claim_case_ak_id),-1,v_claim_case_ak_id)\r\n\t-- \r\n\t-- ---v_claim_case_ak_id\n\tIFF(v_claim_case_ak_id IS NULL, - 1, v_claim_case_ak_id) AS claim_case_ak_id,\n\tclaim_case_ak_id AS out_claim_case_ak_id,\n\tdemand_offer_dt AS IN_demand_offer_dt,\n\t-- *INF*: IIF(v_prev_row_claim_case_ak_id = v_claim_case_ak_id,\r\n\t--       IIF(ISNULL(IN_demand_amt),v_prev_row_demand_date,IN_demand_offer_dt),\r\n\t-- IIF(ISNULL(IN_demand_amt),TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),IN_demand_offer_dt))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_prev_row_claim_case_ak_id = v_claim_case_ak_id,\n\t    IFF(\n\t        IN_demand_amt IS NULL, v_prev_row_demand_date, IN_demand_offer_dt\n\t    ),\n\t    IFF(\n\t        IN_demand_amt IS NULL, TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t        IN_demand_offer_dt\n\t    )\n\t) AS v_demand_dt,\n\tv_demand_dt AS out_demand_date,\n\t-- *INF*: IIF(ISNULL(IN_offer_amt),TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),IN_demand_offer_dt)\n\tIFF(\n\t    IN_offer_amt IS NULL, TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    IN_demand_offer_dt\n\t) AS v_demand_offer_dt,\n\tv_demand_offer_dt AS out_demand_offer_date,\n\tcreate_ts2,\n\tdemand_amt AS IN_demand_amt,\n\t-- *INF*: IIF(ISNULL(IN_demand_amt) ,0 ,IN_demand_amt)\n\tIFF(IN_demand_amt IS NULL, 0, IN_demand_amt) AS demand_amt,\n\toffer_amt AS IN_offer_amt,\n\t-- *INF*: IIF(ISNULL(IN_offer_amt) ,0 ,IN_offer_amt)\n\tIFF(IN_offer_amt IS NULL, 0, IN_offer_amt) AS offer_amt,\n\tdamage_desc1 AS IN_damage_desc_do,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_damage_desc_do))) OR IS_SPACES(LTRIM(RTRIM(IN_damage_desc_do))) OR LENGTH(LTRIM(RTRIM(IN_damage_desc_do)))=0,'N/A' ,LTRIM(RTRIM(IN_damage_desc_do)))\n\tIFF(\n\t    LTRIM(RTRIM(IN_damage_desc_do)) IS NULL\n\t    or LENGTH(LTRIM(RTRIM(IN_damage_desc_do)))>0\n\t    and TRIM(LTRIM(RTRIM(IN_damage_desc_do)))=''\n\t    or LENGTH(LTRIM(RTRIM(IN_damage_desc_do))) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(IN_damage_desc_do))\n\t) AS damage_desc_do,\n\tclaim_case_ak_id AS v_prev_row_claim_case_ak_id,\n\tv_demand_dt AS v_prev_row_demand_date,\n\tv_demand_offer_dt AS v_prev_row_offer_date\n\tFROM SQ_CLM_DEMAND_OFFER_STAGE\n\tLEFT JOIN LKP_CLAIM_CASE_AK_ID LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key\n\tON LKP_CLAIM_CASE_AK_ID_v_Claim_Case_Key.claim_case_key = v_Claim_Case_Key\n\n),\nLKP_CLAIM_CASE_DEMAND_DETAIL AS (\n\tSELECT\n\tclaim_case_demand_det_id,\n\tclaim_case_demand_det_ak_id,\n\tdemand_date,\n\tdemand_offer_date,\n\tdemand_create_date,\n\tdemand_amt,\n\toffer_amt,\n\tdemand_comment,\n\tclaim_case_ak_id\n\tFROM (\n\t\tSELECT\r\n\t\tA.claim_case_demand_det_id as claim_case_demand_det_id, \r\n\t\tA.claim_case_demand_det_ak_id as claim_case_demand_det_ak_id, \r\n\t\tA.demand_comment as demand_comment, \r\n\t\tA.claim_case_ak_id as claim_case_ak_id, \r\n\t\tA.demand_date as demand_date, \r\n\t\tA.demand_offer_date as demand_offer_date, \r\n\t\tA.demand_create_date as demand_create_date, \r\n\t\tA.demand_amt as demand_amt, \r\n\t\tA.offer_amt as offer_amt \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_demand_detail A\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_case_ak_id,demand_date,demand_offer_date,demand_create_date,demand_amt,offer_amt ORDER BY claim_case_demand_det_id) = 1\n),\nEXP_DETECT_CHANGES AS (\n\tSELECT\n\tEXP_VALIDATE.out_claim_case_ak_id AS claim_case_ak_id,\n\tEXP_VALIDATE.Out_Claim_Case_key,\n\tEXP_VALIDATE.out_demand_date AS demand_dt,\n\tEXP_VALIDATE.out_demand_offer_date AS demand_offer_dt,\n\tEXP_VALIDATE.create_ts2 AS demand_create_dt,\n\tEXP_VALIDATE.demand_amt,\n\tEXP_VALIDATE.offer_amt,\n\tEXP_VALIDATE.damage_desc_do,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.claim_case_demand_det_id AS old_claim_case_demand_det_id,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.claim_case_demand_det_ak_id AS old_claim_case_demand_det_ak_id,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.demand_date AS old_demand_date,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.demand_offer_date AS old_demand_offer_date,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.demand_create_date AS old_demand_create_date,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.demand_amt AS old_demand_amt,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.offer_amt AS old_offer_amt,\n\tLKP_CLAIM_CASE_DEMAND_DETAIL.demand_comment AS old_demand_comment,\n\t-- *INF*: IIF(ISNULL(old_claim_case_demand_det_id),'NEW',\r\n\t--      IIF(\r\n\t-- \r\n\t-- LTRIM(RTRIM(damage_desc_do)) <> LTRIM(RTRIM(old_demand_comment)),'UPDATE','NOCHANGE'))\r\n\t-- \n\tIFF(\n\t    old_claim_case_demand_det_id IS NULL, 'NEW',\n\t    IFF(\n\t        LTRIM(RTRIM(damage_desc_do)) <> LTRIM(RTRIM(old_demand_comment)), 'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: demand_create_dt\r\n\t-- \r\n\t-- --IIF(v_changed_flag='NEW',TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),demand_dt)\n\tdemand_create_dt AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS modified_date,\n\tSYSDATE AS created_date\n\tFROM EXP_VALIDATE\n\tLEFT JOIN LKP_CLAIM_CASE_DEMAND_DETAIL\n\tON LKP_CLAIM_CASE_DEMAND_DETAIL.claim_case_ak_id = EXP_VALIDATE.out_claim_case_ak_id AND LKP_CLAIM_CASE_DEMAND_DETAIL.demand_date = EXP_VALIDATE.out_demand_date AND LKP_CLAIM_CASE_DEMAND_DETAIL.demand_offer_date = EXP_VALIDATE.out_demand_offer_date AND LKP_CLAIM_CASE_DEMAND_DETAIL.demand_create_date = EXP_VALIDATE.create_ts2 AND LKP_CLAIM_CASE_DEMAND_DETAIL.demand_amt = EXP_VALIDATE.demand_amt AND LKP_CLAIM_CASE_DEMAND_DETAIL.offer_amt = EXP_VALIDATE.offer_amt\n),\nFIL_INSERT AS (\n\tSELECT\n\told_claim_case_demand_det_ak_id, \n\tclaim_case_ak_id, \n\tOut_Claim_Case_key, \n\tdemand_dt, \n\tdemand_offer_dt, \n\tdemand_create_dt, \n\tdemand_amt, \n\toffer_amt, \n\tdamage_desc_do, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_DETECT_CHANGES\n\tWHERE changed_flag='NEW' OR changed_flag='UPDATE'\n),\nSEQ_Claim_Case_Demand_Det_ak_id AS (\n\tCREATE SEQUENCE SEQ_Claim_Case_Demand_Det_ak_id\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\told_claim_case_demand_det_ak_id,\n\t-- *INF*: IIF(changed_flag ='NEW',NEXTVAL,old_claim_case_demand_det_ak_id)\n\tIFF(changed_flag = 'NEW', NEXTVAL, old_claim_case_demand_det_ak_id) AS claim_case_demand_det_ak_id,\n\tclaim_case_ak_id,\n\tOut_Claim_Case_key,\n\tdemand_dt,\n\tdemand_offer_dt,\n\tdemand_create_dt,\n\tdemand_amt,\n\toffer_amt,\n\tdamage_desc_do,\n\tchanged_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tSEQ_Claim_Case_Demand_Det_ak_id.NEXTVAL\n\tFROM FIL_INSERT\n),\nclaim_case_demand_detail_insert AS (\n\tINSERT INTO claim_case_demand_detail\n\t(claim_case_demand_det_ak_id, claim_case_ak_id, claim_case_key, demand_date, demand_offer_date, demand_create_date, demand_amt, offer_amt, demand_comment, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tCLAIM_CASE_DEMAND_DET_AK_ID, \n\tCLAIM_CASE_AK_ID, \n\tOut_Claim_Case_key AS CLAIM_CASE_KEY, \n\tdemand_dt AS DEMAND_DATE, \n\tdemand_offer_dt AS DEMAND_OFFER_DATE, \n\tdemand_create_dt AS DEMAND_CREATE_DATE, \n\tDEMAND_AMT, \n\tOFFER_AMT, \n\tdamage_desc_do AS DEMAND_COMMENT, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_Determine_AK\n),\nSQ_claim_case_demand_detail AS (\n\tSELECT \r\n\ta.claim_case_demand_det_id, \r\n\ta.claim_case_ak_id, \r\n\ta.demand_date, \r\n\ta.demand_offer_date, \r\n\ta.demand_create_date, \r\n\ta.demand_amt, \r\n\ta.offer_amt, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date \r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_demand_detail a\r\n\tWHERE a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND\r\n\tEXISTS(SELECT 1 \r\n\t                 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_case_demand_detail b\r\n\t                 WHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\r\n\t                 AND a.claim_case_ak_id = b.claim_case_ak_id\r\n\t                 GROUP BY b.claim_case_ak_id \r\n\t                HAVING COUNT(*) >1) \r\n\tORDER BY a.claim_case_ak_id,  a.claim_case_demand_det_ak_id DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_case_demand_det_id AS claim_case_id,\n\tclaim_case_ak_id,\n\tdemand_date,\n\tdemand_offer_date,\n\tdemand_create_date,\n\tdemand_amt,\n\toffer_amt,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- claim_case_ak_id=v_prev_row_claim_case_ak_id \r\n\t-- ,ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    claim_case_ak_id = v_prev_row_claim_case_ak_id, DATEADD(SECOND,- 1,v_prev_row_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_case_ak_id AS v_prev_row_claim_case_ak_id,\n\tdemand_date AS v_prev_row_demand_date,\n\tdemand_offer_date AS v_prev_row_demand_offer_date,\n\tdemand_create_date AS v_prev_row_demand_create_date,\n\tdemand_amt AS v_prev_row_demand_amt,\n\toffer_amt AS v_prev_row_offer_amt,\n\teff_from_date AS v_prev_row_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_claim_case_demand_detail\n),\nFIL_FirstRow_In_AKGroup AS (\n\tSELECT\n\tclaim_case_id AS claim_case_demand_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <>eff_to_date\n),\nUPD_Claim_Case_Demand_Detail AS (\n\tSELECT\n\tclaim_case_demand_det_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_FirstRow_In_AKGroup\n),\nclaim_case_demand_detail_update AS (\n\tMERGE INTO claim_case_demand_detail AS T\n\tUSING UPD_Claim_Case_Demand_Detail AS S\n\tON T.claim_case_demand_det_id = S.claim_case_demand_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}