{
    "name": "s_m_CLM_DW_LOAD_Sup_Claim_Catastrophe_Code",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Sup_Claim_Catastrophe_Code",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_loss_occurrence_S3P_STAGE AS (\n\tSELECT\n\t\tloss_occurrence_S3P_ID,\n\t\tCOC_OCCURRENCE_ID,\n\t\tCOC_ENTRY_OPR_ID,\n\t\tCOC_OCCURRENCE_TYP,\n\t\tCOC_OCC_LOC_ID,\n\t\tCOC_OCC_DES_ID,\n\t\tCOC_OCC_CMT_ID,\n\t\tCOC_COUNTRY_CD,\n\t\tCOC_START_DT,\n\t\tCOC_END_DT,\n\t\tCOC_PMSD_TS,\n\t\tCOC_UPDATE_OPR_ID,\n\t\tCOC_CREATE_TS,\n\t\tCOC_UPD_TS,\n\t\tCOC_CATASTROPHE_CD,\n\t\tCOC_CSR_OCC_NBR,\n\t\tEXTRACT_DATE,\n\t\tAS_OF_DATE,\n\t\tRECORD_COUNT,\n\t\tSOURCE_SYSTEM_ID\n\tFROM loss_occurrence_S3P_STAGE\n),\nEXP_Values AS (\n\tSELECT\n\tCOC_CATASTROPHE_CD,\n\tCOC_START_DT,\n\tCOC_END_DT\n\tFROM SQ_loss_occurrence_S3P_STAGE\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tCOC_CATASTROPHE_CD AS in_COC_CATASTROPHE_CD,\n\t-- *INF*: IIF(ISNULL(in_COC_CATASTROPHE_CD), \r\n\t-- 'N/A',\r\n\t-- LPAD(rtrim(in_COC_CATASTROPHE_CD),3,'0'))\n\tIFF(in_COC_CATASTROPHE_CD IS NULL, 'N/A', LPAD(rtrim(in_COC_CATASTROPHE_CD), 3, '0')) AS COC_CATASTROPHE_CODE,\n\tCOC_START_DT AS in_COC_START_DT,\n\t-- *INF*: IIF(ISNULL(in_COC_START_DT), \r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_COC_START_DT)\n\tIFF(in_COC_START_DT IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), in_COC_START_DT) AS COC_START_DT,\n\tCOC_END_DT AS in_COC_END_DT,\n\t-- *INF*: IIF(ISNULL(in_COC_END_DT),\r\n\t-- TO_DATE('12/31/2100','MM/DD/YYYY'), \r\n\t-- in_COC_END_DT)\n\tIFF(in_COC_END_DT IS NULL, TO_DATE('12/31/2100', 'MM/DD/YYYY'), in_COC_END_DT) AS COC_END_DT\n\tFROM EXP_Values\n),\nLKP_sup_Claim_catastrophe_code AS (\n\tSELECT\n\tsup_claim_cat_code_id,\n\tcat_start_date,\n\tcat_end_date,\n\tcat_code\n\tFROM (\n\t\tSELECT \r\n\t\ta.sup_claim_cat_code_id as sup_claim_cat_code_id,\r\n\t\ta.cat_start_date as cat_start_date, \r\n\t\ta.cat_end_date as cat_end_date, \r\n\t\trtrim(a.cat_code) as cat_code \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code a\r\n\t\tWHERE \r\n\t\tsource_system_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\tORDER BY cat_code --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cat_code ORDER BY sup_claim_cat_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Lkp_Values.COC_CATASTROPHE_CODE AS CLM_CATASTROPHE_CODE,\n\tEXP_Lkp_Values.COC_START_DT,\n\tEXP_Lkp_Values.COC_END_DT,\n\tLKP_sup_Claim_catastrophe_code.sup_claim_cat_code_id AS lkp_sup_claim_cat_code_id,\n\tLKP_sup_Claim_catastrophe_code.cat_start_date AS lkp_cat_start_date,\n\tLKP_sup_Claim_catastrophe_code.cat_end_date AS lkp_cat_end_date,\n\t1 AS Crrnt_Snpsht_Flag,\n\t-- *INF*: IIF(ISNULL(lkp_sup_claim_cat_code_id),'NEW',\r\n\t-- \tIIF((\r\n\t-- \tCOC_START_DT <> lkp_cat_start_date or  \r\n\t-- \tCOC_END_DT <> lkp_cat_end_date),\r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(lkp_sup_claim_cat_code_id IS NULL, 'NEW', IFF(( COC_START_DT <> lkp_cat_start_date OR COC_END_DT <> lkp_cat_end_date ), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date\n\tFROM EXP_Lkp_Values\n\tLEFT JOIN LKP_sup_Claim_catastrophe_code\n\tON LKP_sup_Claim_catastrophe_code.cat_code = EXP_Lkp_Values.COC_CATASTROPHE_CODE\n),\nFIL_Insert AS (\n\tSELECT\n\tCLM_CATASTROPHE_CODE, \n\tCOC_START_DT, \n\tCOC_END_DT, \n\tCrrnt_Snpsht_Flag, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tChanged_Flag, \n\tSOURCE_SYSTEM_ID, \n\tCreated_Date, \n\tModified_Date\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nsup_claim_catastrophe_code_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code\n\t(cat_code, cat_start_date, cat_end_date, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_system_id, created_date, modified_date)\n\tSELECT \n\tCLM_CATASTROPHE_CODE AS CAT_CODE, \n\tCOC_START_DT AS CAT_START_DATE, \n\tCOC_END_DT AS CAT_END_DATE, \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE\n\tFROM FIL_Insert\n),\nSQ_sup_claim_catastrophe_code AS (\n\tSELECT \r\n\ta.sup_claim_cat_code_id, \r\n\ta.cat_code, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code b\r\n\t\t\tWHERE source_system_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.cat_code = b.cat_code\r\n\t\t\tGROUP BY cat_code\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY cat_code, eff_from_date  DESC\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tsup_claim_cat_code_id,\n\tcat_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tcat_code = v_PREV_ROW_cat_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\t\tcat_code = v_PREV_ROW_cat_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tcat_code AS v_PREV_ROW_cat_key,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_sup_claim_catastrophe_code\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tsup_claim_cat_code_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_Sup_Catastrope_Code AS (\n\tSELECT\n\tsup_claim_cat_code_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nsup_claim_catastrophe_code_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code AS T\n\tUSING UPD_Sup_Catastrope_Code AS S\n\tON T.sup_claim_cat_code_id = S.sup_claim_cat_code_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}