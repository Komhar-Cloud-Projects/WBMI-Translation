{
    "name": "s_m_POL_DM_LOAD_StopLossAdjustmentClaimOccurrenceFact",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_StopLossAdjustmentClaimOccurrenceFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_StopLossAdjustmentClaimOccurrenceFact_PreviousInstance AS (\n\tSELECT\n\tStopLossAdjustmentAmount,\n\tEDWAgencyAKID,\n\tedw_pol_ak_id,\n\tedw_claim_occurrence_ak_id\n\tFROM (\n\t\tSELECT A.EDWAgencyAKID as EDWAgencyAKID,\r\n\t\tpol.edw_pol_ak_id as edw_pol_ak_id,\r\n\t\tCO.edw_claim_occurrence_ak_id as edw_claim_occurrence_ak_id,\r\n\t\tSLA.StopLossAdjustmentAmount AS StopLossAdjustmentAmount\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentclaimoccurrenceFact SLA,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim cd,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER_V3}.AgencyDim A,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.policy_dim POL,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence_dim CO\r\n\t\tWHERE  SLA.RunDateId = cd.clndr_id\r\n\t\tand SLA.AgencyDimId=A.AgencyDimID\r\n\t\tand SLA.PolicyDimid=POL.pol_dim_id\r\n\t\tAND SLA.ClaimOccurrenceDimId=CO.claim_occurrence_dim_id\r\n\t\tand cd.CalendarMonthOfYear = 12\r\n\t\torder by A.EDWAgencyAKID,pol.edw_pol_ak_id,CO.edw_claim_occurrence_ak_id,SLA.RunDateid --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID,edw_pol_ak_id,edw_claim_occurrence_ak_id ORDER BY StopLossAdjustmentAmount DESC) = 1\n),\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_claim_loss_transaction_fact_Occurrence AS (\n\tDECLARE @DATE2 as datetime\r\n\t\r\n\tSET @DATE2 = dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\r\n\tselect EDWAgencyAKID,\r\n\tAgencyCode,\r\n\t\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tsum(case when claim_rpted_date<='2013-12-31 00:00:00' then (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR) \r\n\telse (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR+DirectALAEOutstandingIR) end) total_direct_loss_recovery_incurred,\r\n\t--max(claim_loss_date) as Loss_Date,\r\n\t--convert(varchar(6),max(claim_loss_date),112) Loss_Year,\r\n\tconvert(varchar(6),B.Claim_loss_date,112) Loss_Year,\r\n\t@DATE2 Rundate\r\n\tfrom (\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tCLTF.direct_loss_paid_including_recoveries DirectLossPaidIR,\r\n\tCLTF.direct_alae_paid_including_recoveries DirectALAEPaidIR,\r\n\t0.0 AS DirectLossOutstandingER,\r\n\t0.0 AS DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tCase when @DATE2 between occ.eff_from_date and occ.eff_to_date then OCC.claim_loss_date else '1800-01-01 01:00:00' end as claim_loss_date\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact CLTF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON CLTF.claim_trans_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON CLTF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON CLTF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON CLTF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON CLTF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON CLTF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON CLTF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON CLTF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date < '01/01/2001 00:00:00'\r\n\tand clndr_date<>'01/01/1800 00:00:00'\r\n\tand OCC.source_claim_occurrence_status_code in ('O','OPE','C')\r\n\tand case when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tVLMF.DirectLossPaidIR,\r\n\tVLMF.DirectALAEPaidIR,\r\n\tVLMF.DirectLossOutstandingER,\r\n\tVLMF.DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tCase when @DATE2 between occ.eff_from_date and occ.eff_to_date then OCC.claim_loss_date else '1800-01-01 01:00:00' end as claim_loss_date\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact VLMF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON VLMF.loss_master_run_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON VLMF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON VLMF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON VLMF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON VLMF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON VLMF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON VLMF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON VLMF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date >= '01/01/2001 00:00:00'\r\n\tand OCC.source_claim_occurrence_status_code in ('O','OPE','C')\r\n\tand case when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t) A\r\n\t,(SELECT claim_cat_code,edw_claim_occurrence_ak_id ,claim_loss_date from claim_occurrence_dim\r\n\tWHERE  @DATE2 BETWEEN eff_from_date AND eff_to_date) B\r\n\tWHERE A.edw_claim_occurrence_ak_id = B.edw_claim_occurrence_ak_id\r\n\tand RunDate <=@DATE2\r\n\tand B.claim_cat_code='N/A'\r\n\t@{pipeline().parameters.WHERECLAUSEOCCURRENCE}\r\n\tgroup by EDWAgencyAKID,\r\n\tAgencyCode,\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tB.claim_loss_date\r\n\t--convert(varchar(6),claim_loss_date,112)\n),\nExp_PassThrough AS (\n\tSELECT\n\tEDWAgencyAKID,\n\tAgencyCode,\n\tedw_pol_ak_id,\n\tedw_claim_occurrence_ak_id,\n\ttotal_direct_loss_recovery_incurred,\n\tLoss_Year,\n\t-- *INF*: SUBSTR(Loss_Year,1,4)\n\tSUBSTR(Loss_Year, 1, 4) AS o_Loss_Year,\n\t-- *INF*: SUBSTR(Loss_Year,5,2)\n\tSUBSTR(Loss_Year, 5, 2) AS o_Loss_Month,\n\tRundate,\n\t-- *INF*: GET_DATE_PART(Rundate,'YYYY')\n\tGET_DATE_PART(Rundate, 'YYYY') AS o_Run_Year\n\tFROM SQ_claim_loss_transaction_fact_Occurrence\n),\nLKP_CLOSED_CLAIMS AS (\n\tSELECT\n\tloss_master_fact_id,\n\tedw_claim_occurrence_ak_id,\n\tRun_Year,\n\tin_edw_claim_occurrence_ak_id,\n\ti_Run_Year\n\tFROM (\n\t\tselect  vlmf.loss_master_fact_id as loss_master_fact_id,\r\n\t\tcod.edw_claim_occurrence_ak_id  as edw_claim_occurrence_ak_id,\r\n\t\tconvert(varchar(4),cd.CalendarDate,112) as Run_Year\r\n\t\tfrom \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact vlmf\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim cd\r\n\t\ton vlmf.loss_master_run_date_id=cd.clndr_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim cod\r\n\t\ton vlmf.claim_occurrence_dim_id=cod.claim_occurrence_dim_id\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id,Run_Year ORDER BY loss_master_fact_id) = 1\n),\nFIL_closed_claims AS (\n\tSELECT\n\tLKP_CLOSED_CLAIMS.loss_master_fact_id, \n\tLKP_CLOSED_CLAIMS.edw_claim_occurrence_ak_id AS LKP_edw_claim_occurrence_ak_id, \n\tExp_PassThrough.EDWAgencyAKID, \n\tExp_PassThrough.AgencyCode, \n\tExp_PassThrough.edw_pol_ak_id, \n\tExp_PassThrough.edw_claim_occurrence_ak_id, \n\tExp_PassThrough.total_direct_loss_recovery_incurred, \n\tExp_PassThrough.o_Loss_Year, \n\tExp_PassThrough.o_Loss_Month, \n\tExp_PassThrough.Rundate\n\tFROM Exp_PassThrough\n\tLEFT JOIN LKP_CLOSED_CLAIMS\n\tON LKP_CLOSED_CLAIMS.edw_claim_occurrence_ak_id = Exp_PassThrough.edw_claim_occurrence_ak_id AND LKP_CLOSED_CLAIMS.Run_Year = Exp_PassThrough.o_Run_Year\n\tWHERE NOT ISNULL(LKP_edw_claim_occurrence_ak_id)\n),\nEXP_GetValues_Occurrence AS (\n\tSELECT\n\tEDWAgencyAKID,\n\tAgencyCode,\n\tedw_pol_ak_id,\n\tedw_claim_occurrence_ak_id,\n\ttotal_direct_loss_recovery_incurred,\n\to_Loss_Year,\n\to_Loss_Month,\n\tRundate\n\tFROM FIL_closed_claims\n),\nLKP_V3_PrimaryAgencyDimID_CO AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tIN_Trans_Date,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \r\n\t\tard.LegalPrimaryAgencyCode as LegalPrimaryAgencyCode ,\r\n\t\t \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tArd.AgencyrelationshipEffectiveDate as eff_from_date, \r\n\t\tArd.AgencyrelationshipExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\r\n\t\t \r\n\t\t left join \r\n\t\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t\t on (AgencyDim.edwagencyakid=ard.edwagencyakid) \r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t--Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from --\"AgencyRelationshipDim\" table\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY LegalPrimaryAgencyCode DESC) = 1\n),\nEXP_LegalPrimaryagency AS (\n\tSELECT\n\tEXP_GetValues_Occurrence.AgencyCode AS IN_AgencyCode,\n\tLKP_V3_PrimaryAgencyDimID_CO.LegalPrimaryAgencyCode,\n\t-- *INF*: iif(isnull(LegalPrimaryAgencyCode),IN_AgencyCode,LegalPrimaryAgencyCode)\n\tIFF(LegalPrimaryAgencyCode IS NULL, IN_AgencyCode, LegalPrimaryAgencyCode) AS o_LegalPrimaryAgencyCode\n\tFROM EXP_GetValues_Occurrence\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_CO\n\tON LKP_V3_PrimaryAgencyDimID_CO.Agencycode = EXP_GetValues_Occurrence.AgencyCode AND LKP_V3_PrimaryAgencyDimID_CO.eff_from_date <= EXP_GetValues_Occurrence.Rundate AND LKP_V3_PrimaryAgencyDimID_CO.eff_to_date >= EXP_GetValues_Occurrence.Rundate\n),\nLKP_V3_PrimaryAgency_Primary AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tIN_Trans_Date,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \r\n\t\t\r\n\t\tard.LegalPrimaryAgencyCode as LegalPrimaryAgencyCode, \r\n\t\t \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tArd.AgencyrelationshipEffectiveDate as eff_from_date, \r\n\t\tArd.AgencyrelationshipExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\r\n\t\t \r\n\t\t left join \r\n\t\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t\t on (AgencyDim.edwagencyakid=ard.edwagencyakid) \r\n\t\t\r\n\t\t\r\n\t\t--Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from --\"AgencyRelationshipDim\" table\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY LegalPrimaryAgencyCode DESC) = 1\n),\nEXP_LegalPrimaryagency1 AS (\n\tSELECT\n\tEXP_GetValues_Occurrence.AgencyCode AS IN_AgencyCode,\n\tLKP_V3_PrimaryAgency_Primary.LegalPrimaryAgencyCode,\n\t-- *INF*: iif(isnull(LegalPrimaryAgencyCode),IN_AgencyCode,LegalPrimaryAgencyCode)\n\tIFF(LegalPrimaryAgencyCode IS NULL, IN_AgencyCode, LegalPrimaryAgencyCode) AS o_LegalPrimaryAgencyCode\n\tFROM EXP_GetValues_Occurrence\n\tLEFT JOIN LKP_V3_PrimaryAgency_Primary\n\tON LKP_V3_PrimaryAgency_Primary.Agencycode = EXP_LegalPrimaryagency.o_LegalPrimaryAgencyCode AND LKP_V3_PrimaryAgency_Primary.eff_from_date <= EXP_GetValues_Occurrence.Rundate AND LKP_V3_PrimaryAgency_Primary.eff_to_date >= EXP_GetValues_Occurrence.Rundate\n),\nLKP_V3_PrimaryAgencyDimID_Primary AS (\n\tSELECT\n\tagency_dim_id,\n\tSalesDivisionDimId,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tAgencyDim.EffectiveDate as eff_from_date, \r\n\t\tAgencyDim.ExpirationDate as eff_to_date,\r\n\t\tAgencyDim.SalesDivisionDimId as SalesDivisionDimId\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n),\nLKP_WorkStopLossLimit_Occurrence AS (\n\tSELECT\n\tStopLossLimit,\n\tAgencyPreviousYearDirectWrittenPremium,\n\tAgencyCode,\n\tLoss_Year\n\tFROM (\n\t\tSELECT WSL.AgencyCode AS AgencyCode,\r\n\t\tWSL.StopLossLimit AS StopLossLimit,\r\n\t\tWSL.AgencyPreviousYearDirectWrittenPremium AS AgencyPreviousYearDirectWrittenPremium,\r\n\t\tconvert(varchar(4),rundate,112) AS Loss_Year\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkStopLossLimit WSL\r\n\t\tWHERE WSL.CurrentSnapshotFlag=1\r\n\t\t--AND YEAR(WSL.RunDate)=YEAR(@{pipeline().parameters.RUNDATEEND})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode,Loss_Year ORDER BY StopLossLimit DESC) = 1\n),\nLKP_WorkStopLossLimit_Occurrence_Primary AS (\n\tSELECT\n\tStopLossLimit,\n\tAgencyPreviousYearDirectWrittenPremium,\n\tPrimaryAgencyCode,\n\tLoss_Year\n\tFROM (\n\t\tSELECT WSL.PrimaryAgencyCode AS PrimaryAgencyCode,\r\n\t\tWSL.StopLossLimit AS StopLossLimit,\r\n\t\tWSL.AgencyPreviousYearDirectWrittenPremium AS AgencyPreviousYearDirectWrittenPremium,\r\n\t\tconvert(varchar(4),rundate,112) AS Loss_Year\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkStopLossLimit WSL\r\n\t\tWHERE WSL.CurrentSnapshotFlag=1\r\n\t\t--AND YEAR(WSL.RunDate)=YEAR(@{pipeline().parameters.RUNDATEEND})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PrimaryAgencyCode,Loss_Year ORDER BY StopLossLimit DESC) = 1\n),\nLKP_claim_occurrence_dim AS (\n\tSELECT\n\tclaim_occurrence_dim_id,\n\tedw_claim_occurrence_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_dim_id,\n\t\t\tedw_claim_occurrence_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM claim_occurrence_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_occurrence_dim_id DESC) = 1\n),\nmplt_PolicyDimID_StopLossCOFact AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_CalValues_Occurrence AS (\n\tSELECT\n\tEXP_GetValues_Occurrence.EDWAgencyAKID,\n\tEXP_GetValues_Occurrence.AgencyCode,\n\tEXP_GetValues_Occurrence.Rundate AS i_RunDate,\n\tLKP_WorkStopLossLimit_Occurrence.StopLossLimit AS lkp_StopLossLimit,\n\tLKP_WorkStopLossLimit_Occurrence_Primary.StopLossLimit AS lkp_StopLossLimit_2,\n\tEXP_LegalPrimaryagency1.o_LegalPrimaryAgencyCode AS LKP_LegalPrimaryAgencyCode,\n\tLKP_WorkStopLossLimit_Occurrence.AgencyPreviousYearDirectWrittenPremium AS lkp_AgencyPreviousYearDirectWrittenPremium,\n\tLKP_WorkStopLossLimit_Occurrence_Primary.AgencyPreviousYearDirectWrittenPremium AS lkp_AgencyPreviousYearDirectWrittenPremium2,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tLKP_V3_PrimaryAgencyDimID_Primary.SalesDivisionDimId AS IN_SalesDivisionDimID,\n\t-- *INF*: IIF(ISNULL(IN_SalesDivisionDimID),-1,IN_SalesDivisionDimID)\n\tIFF(IN_SalesDivisionDimID IS NULL, - 1, IN_SalesDivisionDimID) AS SalesDivisionDimID,\n\tmplt_PolicyDimID_StopLossCOFact.agency_dim_id AS i_agency_dim_id,\n\t-- *INF*: IIF(ISNULL(i_agency_dim_id), -1, i_agency_dim_id)\n\tIFF(i_agency_dim_id IS NULL, - 1, i_agency_dim_id) AS o_agency_dim_id,\n\tmplt_PolicyDimID_StopLossCOFact.contract_cust_dim_id AS i_contract_cust_dim_id,\n\t-- *INF*: IIF(ISNULL(i_contract_cust_dim_id), -1, i_contract_cust_dim_id)\n\tIFF(i_contract_cust_dim_id IS NULL, - 1, i_contract_cust_dim_id) AS o_contract_cust_dim_id,\n\tmplt_PolicyDimID_StopLossCOFact.pol_dim_id,\n\tLKP_claim_occurrence_dim.claim_occurrence_dim_id,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(i_RunDate,'HH',0),'MI',0),'SS',0))\n\tLKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_id AS o_RunDateId,\n\tEXP_GetValues_Occurrence.total_direct_loss_recovery_incurred AS TotalDirectIncurredLoss,\n\tEXP_GetValues_Occurrence.o_Loss_Year AS IN_LOSS_YEAR,\n\tEXP_GetValues_Occurrence.o_Loss_Month AS IN_LOSS_MONTH,\n\t-- *INF*: Decode(TRUE,IN(AgencyCode,'12176','13176'),\r\n\t-- DECODE(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997'),200000,\r\n\t-- IN(IN_LOSS_YEAR,'1998','1999','2000','2001'),400000,\r\n\t-- IN_LOSS_YEAR>'2001',1000000),\r\n\t-- IN(AgencyCode,'12651','13651'),\r\n\t-- DECODE(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- IN_LOSS_YEAR='2005' and IN(IN_LOSS_MONTH,'04','05','06','07','08','09','10','11','12'),500000,lkp_StopLossLimit),\r\n\t-- Decode(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- IN_LOSS_YEAR>='2015' AND lkp_AgencyPreviousYearDirectWrittenPremium<=20000000,500000,\r\n\t-- IN_LOSS_YEAR>='2015' AND IN_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium>20000000,500000,\r\n\t-- IN_LOSS_YEAR>='2022' AND lkp_AgencyPreviousYearDirectWrittenPremium>20000000,1000000,\r\n\t-- lkp_StopLossLimit))\r\n\t-- --The above decode statement has been implemented to catch the stoplosslimit as per the mainframe code WB11002B\n\tDecode(TRUE,\n\tIN(AgencyCode, '12176', '13176'), DECODE(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997'), 200000,\n\tIN(IN_LOSS_YEAR, '1998', '1999', '2000', '2001'), 400000,\n\tIN_LOSS_YEAR > '2001', 1000000),\n\tIN(AgencyCode, '12651', '13651'), DECODE(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tIN_LOSS_YEAR = '2005' AND IN(IN_LOSS_MONTH, '04', '05', '06', '07', '08', '09', '10', '11', '12'), 500000,\n\tlkp_StopLossLimit),\n\tDecode(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tIN_LOSS_YEAR >= '2015' AND lkp_AgencyPreviousYearDirectWrittenPremium <= 20000000, 500000,\n\tIN_LOSS_YEAR >= '2015' AND IN_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium > 20000000, 500000,\n\tIN_LOSS_YEAR >= '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium > 20000000, 1000000,\n\tlkp_StopLossLimit)) AS V_Stop_LOSS_LIMIT,\n\t-- *INF*: Decode(TRUE,IN(AgencyCode,'12176','13176'),\r\n\t-- DECODE(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997'),200000,\r\n\t-- IN(IN_LOSS_YEAR,'1998','1999','2000','2001'),400000,\r\n\t-- IN_LOSS_YEAR>'2001',1000000),\r\n\t-- IN(AgencyCode,'12651','13651'),\r\n\t-- DECODE(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- IN_LOSS_YEAR='2005' and IN(IN_LOSS_MONTH,'04','05','06','07','08','09','10','11','12'),500000,lkp_StopLossLimit),\r\n\t-- Decode(TRUE,IN_LOSS_YEAR<'1995',100000,\r\n\t-- IN_LOSS_YEAR='1995',125000,\r\n\t-- IN(IN_LOSS_YEAR,'1996','1997','1998','1999','2000','2001','2002','2003'),200000,\r\n\t-- IN_LOSS_YEAR>='2015' AND lkp_AgencyPreviousYearDirectWrittenPremium<=20000000,500000,\r\n\t-- IN_LOSS_YEAR>='2015' AND IN_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium>20000000,500000,\r\n\t-- IN_LOSS_YEAR>='2022' AND lkp_AgencyPreviousYearDirectWrittenPremium>20000000,1000000,\r\n\t-- lkp_StopLossLimit))\n\tDecode(TRUE,\n\tIN(AgencyCode, '12176', '13176'), DECODE(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997'), 200000,\n\tIN(IN_LOSS_YEAR, '1998', '1999', '2000', '2001'), 400000,\n\tIN_LOSS_YEAR > '2001', 1000000),\n\tIN(AgencyCode, '12651', '13651'), DECODE(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tIN_LOSS_YEAR = '2005' AND IN(IN_LOSS_MONTH, '04', '05', '06', '07', '08', '09', '10', '11', '12'), 500000,\n\tlkp_StopLossLimit),\n\tDecode(TRUE,\n\tIN_LOSS_YEAR < '1995', 100000,\n\tIN_LOSS_YEAR = '1995', 125000,\n\tIN(IN_LOSS_YEAR, '1996', '1997', '1998', '1999', '2000', '2001', '2002', '2003'), 200000,\n\tIN_LOSS_YEAR >= '2015' AND lkp_AgencyPreviousYearDirectWrittenPremium <= 20000000, 500000,\n\tIN_LOSS_YEAR >= '2015' AND IN_LOSS_YEAR < '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium > 20000000, 500000,\n\tIN_LOSS_YEAR >= '2022' AND lkp_AgencyPreviousYearDirectWrittenPremium > 20000000, 1000000,\n\tlkp_StopLossLimit)) AS v_Stop_Loss_Limit2,\n\t-- *INF*: IIF(ISNULL(V_Stop_LOSS_LIMIT) or V_Stop_LOSS_LIMIT=0.0,200000,V_Stop_LOSS_LIMIT)\r\n\t-- \r\n\t-- --As per the Cobol code, if a given Agency does not have stop loss limit then we assign 200000 as the default stop loss limit.\n\tIFF(V_Stop_LOSS_LIMIT IS NULL OR V_Stop_LOSS_LIMIT = 0.0, 200000, V_Stop_LOSS_LIMIT) AS V_Final_Stop_Loss_Limit,\n\t-- *INF*: IIF(ISNULL(v_Stop_Loss_Limit2) or v_Stop_Loss_Limit2=0.0,200000,v_Stop_Loss_Limit2)\n\tIFF(v_Stop_Loss_Limit2 IS NULL OR v_Stop_Loss_Limit2 = 0.0, 200000, v_Stop_Loss_Limit2) AS V_Final_Stop_Loss_Limit2,\n\tV_Final_Stop_Loss_Limit AS o_StopLossLimit,\n\t-- *INF*: IIF(TotalDirectIncurredLoss<=V_Final_Stop_Loss_Limit , 0.0 , TotalDirectIncurredLoss-V_Final_Stop_Loss_Limit)\n\tIFF(TotalDirectIncurredLoss <= V_Final_Stop_Loss_Limit, 0.0, TotalDirectIncurredLoss - V_Final_Stop_Loss_Limit) AS V_StopLossAdjustmentAmount,\n\t-- *INF*: IIF(V_StopLossAdjustmentAmount>0.0,V_StopLossAdjustmentAmount,0.0)\n\tIFF(V_StopLossAdjustmentAmount > 0.0, V_StopLossAdjustmentAmount, 0.0) AS o_StopLossAdjustmentAmount,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE(EDWAgencyAKID,edw_pol_ak_id,edw_claim_occurrence_ak_id)),0.0,:LKP.LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE(EDWAgencyAKID,edw_pol_ak_id,edw_claim_occurrence_ak_id))\n\tIFF(LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id.StopLossAdjustmentAmount IS NULL, 0.0, LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id.StopLossAdjustmentAmount) AS Lkp_Previous_StopLossAdjustmentAmount,\n\tV_StopLossAdjustmentAmount-Lkp_Previous_StopLossAdjustmentAmount AS O_ChangeInStopLossAdjustmentAmount,\n\tEXP_GetValues_Occurrence.edw_pol_ak_id,\n\tEXP_GetValues_Occurrence.edw_claim_occurrence_ak_id,\n\tLKP_V3_PrimaryAgencyDimID_Primary.agency_dim_id AS IN_PrimaryAgencyDimId,\n\t-- *INF*: IIF(ISNULL(IN_PrimaryAgencyDimId),-1,IN_PrimaryAgencyDimId)\n\tIFF(IN_PrimaryAgencyDimId IS NULL, - 1, IN_PrimaryAgencyDimId) AS PrimaryAgencyDimId\n\tFROM EXP_GetValues_Occurrence\n\t -- Manually join with EXP_LegalPrimaryagency1\n\t -- Manually join with mplt_PolicyDimID_StopLossCOFact\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_Primary\n\tON LKP_V3_PrimaryAgencyDimID_Primary.Agencycode = EXP_LegalPrimaryagency.o_LegalPrimaryAgencyCode AND LKP_V3_PrimaryAgencyDimID_Primary.eff_from_date <= LKP_V3_PrimaryAgencyDimID_CO.IN_Trans_Date AND LKP_V3_PrimaryAgencyDimID_Primary.eff_to_date >= LKP_V3_PrimaryAgencyDimID_CO.IN_Trans_Date\n\tLEFT JOIN LKP_WorkStopLossLimit_Occurrence\n\tON LKP_WorkStopLossLimit_Occurrence.AgencyCode = EXP_GetValues_Occurrence.AgencyCode AND LKP_WorkStopLossLimit_Occurrence.Loss_Year = EXP_GetValues_Occurrence.o_Loss_Year\n\tLEFT JOIN LKP_WorkStopLossLimit_Occurrence_Primary\n\tON LKP_WorkStopLossLimit_Occurrence_Primary.PrimaryAgencyCode = EXP_LegalPrimaryagency1.o_LegalPrimaryAgencyCode AND LKP_WorkStopLossLimit_Occurrence_Primary.Loss_Year = EXP_GetValues_Occurrence.o_Loss_Year\n\tLEFT JOIN LKP_claim_occurrence_dim\n\tON LKP_claim_occurrence_dim.edw_claim_occurrence_ak_id = EXP_GetValues_Occurrence.edw_claim_occurrence_ak_id AND LKP_claim_occurrence_dim.eff_from_date <= EXP_GetValues_Occurrence.Rundate AND LKP_claim_occurrence_dim.eff_to_date >= EXP_GetValues_Occurrence.Rundate\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0\n\tON LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_date = SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(i_RunDate, 'HH', 0), 'MI', 0), 'SS', 0)\n\n\tLEFT JOIN LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id\n\tON LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id.EDWAgencyAKID = EDWAgencyAKID\n\tAND LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id.edw_pol_ak_id = edw_pol_ak_id\n\tAND LKP_STOPLOSSADJUSTMENTCLAIMOCCURRENCEFACT_PREVIOUSINSTANCE_EDWAgencyAKID_edw_pol_ak_id_edw_claim_occurrence_ak_id.edw_claim_occurrence_ak_id = edw_claim_occurrence_ak_id\n\n),\nFIL_StopLossAdjustmentAmount_Occurence AS (\n\tSELECT\n\to_AuditId AS AuditId, \n\tSalesDivisionDimID AS SalesDivisionDimId, \n\to_agency_dim_id AS AgencyDimId, \n\to_contract_cust_dim_id AS contract_cust_dim_id, \n\tpol_dim_id, \n\tclaim_occurrence_dim_id, \n\to_RunDateId AS RunDateId, \n\tTotalDirectIncurredLoss, \n\to_StopLossLimit AS StopLossLimit, \n\to_StopLossAdjustmentAmount AS StopLossAdjustmentAmount, \n\tO_ChangeInStopLossAdjustmentAmount, \n\tPrimaryAgencyDimId\n\tFROM EXP_CalValues_Occurrence\n\tWHERE IIF(O_ChangeInStopLossAdjustmentAmount=0.0 and StopLossAdjustmentAmount<>0.0,'Y',\r\nIIF(O_ChangeInStopLossAdjustmentAmount<>0.0,'Y','N'))='Y' --AND StopLossLimit>0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0 OR StopLossAdjustmentAmount<>0.0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0.0 AND StopLossLimit>0\n),\nLKP_StopLossAdjustmentClaimOccurrenceFact AS (\n\tSELECT\n\tStopLossAdjustmentClaimOccurrenceFactId,\n\tSalesDivisionDimID,\n\tAgencyDimId,\n\tContractCustomerDimId,\n\tPolicyDimid,\n\tClaimOccurrenceDimId,\n\tRunDateId\n\tFROM (\n\t\tSELECT a.SalesDivisionDimID                      AS SalesDivisionDimID,\r\n\t\t       a.AgencyDimId                             AS AgencyDimId,\r\n\t\t       a.ContractCustomerDimId                   AS ContractCustomerDimId,\r\n\t\t       a.PolicyDimid                             AS PolicyDimid,\r\n\t\t       a.ClaimOccurrenceDimId                    AS ClaimOccurrenceDimId,\r\n\t\t       a.RunDateId                               AS RunDateId,\r\n\t\t       a.StopLossAdjustmentClaimOccurrenceFactId AS StopLossAdjustmentClaimOccurrenceFactId\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentclaimoccurrenceFact a,\r\n\t\t       @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim cd\r\n\t\tWHERE  a.RunDateId = cd.clndr_id\r\n\t\t       AND cd.clndr_yr = Year(dateadd(dd,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS},0)))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SalesDivisionDimID,AgencyDimId,ContractCustomerDimId,PolicyDimid,ClaimOccurrenceDimId,RunDateId ORDER BY StopLossAdjustmentClaimOccurrenceFactId DESC) = 1\n),\nRTR_Insert_Update_Occurrence AS (\n\tSELECT\n\tLKP_StopLossAdjustmentClaimOccurrenceFact.StopLossAdjustmentClaimOccurrenceFactId,\n\tFIL_StopLossAdjustmentAmount_Occurence.AuditId,\n\tFIL_StopLossAdjustmentAmount_Occurence.SalesDivisionDimId AS SalesDivisionDimID,\n\tFIL_StopLossAdjustmentAmount_Occurence.AgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.PrimaryAgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.contract_cust_dim_id AS ContractCustomerDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.pol_dim_id AS PolicyDimid,\n\tFIL_StopLossAdjustmentAmount_Occurence.claim_occurrence_dim_id AS ClaimOccurrenceDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.RunDateId,\n\tFIL_StopLossAdjustmentAmount_Occurence.TotalDirectIncurredLoss AS DirectIncurredLossInceptionToDate,\n\tFIL_StopLossAdjustmentAmount_Occurence.StopLossLimit,\n\tFIL_StopLossAdjustmentAmount_Occurence.StopLossAdjustmentAmount,\n\tFIL_StopLossAdjustmentAmount_Occurence.O_ChangeInStopLossAdjustmentAmount\n\tFROM FIL_StopLossAdjustmentAmount_Occurence\n\tLEFT JOIN LKP_StopLossAdjustmentClaimOccurrenceFact\n\tON LKP_StopLossAdjustmentClaimOccurrenceFact.SalesDivisionDimID = FIL_StopLossAdjustmentAmount_Occurence.SalesDivisionDimId AND LKP_StopLossAdjustmentClaimOccurrenceFact.AgencyDimId = FIL_StopLossAdjustmentAmount_Occurence.AgencyDimId AND LKP_StopLossAdjustmentClaimOccurrenceFact.ContractCustomerDimId = FIL_StopLossAdjustmentAmount_Occurence.contract_cust_dim_id AND LKP_StopLossAdjustmentClaimOccurrenceFact.PolicyDimid = FIL_StopLossAdjustmentAmount_Occurence.pol_dim_id AND LKP_StopLossAdjustmentClaimOccurrenceFact.ClaimOccurrenceDimId = FIL_StopLossAdjustmentAmount_Occurence.claim_occurrence_dim_id AND LKP_StopLossAdjustmentClaimOccurrenceFact.RunDateId = FIL_StopLossAdjustmentAmount_Occurence.RunDateId\n),\nRTR_Insert_Update_Occurrence_INSERT AS (SELECT * FROM RTR_Insert_Update_Occurrence WHERE ISNULL(StopLossAdjustmentClaimOccurrenceFactId)),\nRTR_Insert_Update_Occurrence_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update_Occurrence WHERE NOT ( (ISNULL(StopLossAdjustmentClaimOccurrenceFactId)) )),\nUPD_Occurrence AS (\n\tSELECT\n\tStopLossAdjustmentClaimOccurrenceFactId, \n\tAuditId, \n\tSalesDivisionDimID, \n\tAgencyDimId, \n\tPrimaryAgencyDimId AS PrimaryAgencyDimId2, \n\tContractCustomerDimId, \n\tPolicyDimid, \n\tClaimOccurrenceDimId, \n\tRunDateId, \n\tDirectIncurredLossInceptionToDate, \n\tStopLossLimit, \n\tStopLossAdjustmentAmount, \n\tO_ChangeInStopLossAdjustmentAmount AS O_ChangeInStopLossAdjustmentAmount2\n\tFROM RTR_Insert_Update_Occurrence_DEFAULT1\n),\nTGT_StopLossAdjustmentClaimOccurrenceFact_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentClaimOccurrenceFact AS T\n\tUSING UPD_Occurrence AS S\n\tON T.StopLossAdjustmentClaimOccurrenceFactId = S.StopLossAdjustmentClaimOccurrenceFactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.SalesDivisionDimId = S.SalesDivisionDimID, T.AgencyDimId = S.AgencyDimId, T.PrimaryAgencyDimId = S.PrimaryAgencyDimId2, T.ContractCustomerDimId = S.ContractCustomerDimId, T.PolicyDimid = S.PolicyDimid, T.ClaimOccurrenceDimId = S.ClaimOccurrenceDimId, T.RunDateId = S.RunDateId, T.DirectIncurredLossInceptionToDate = S.DirectIncurredLossInceptionToDate, T.StopLossLimit = S.StopLossLimit, T.StopLossAdjustmentAmount = S.StopLossAdjustmentAmount, T.ChangeInStopLossAdjustmentAmount = S.O_ChangeInStopLossAdjustmentAmount2\n),\nTGT_StopLossAdjustmentClaimOccurrenceFact_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.StopLossAdjustmentClaimOccurrenceFact\n\t(AuditId, SalesDivisionDimId, AgencyDimId, PrimaryAgencyDimId, ContractCustomerDimId, PolicyDimid, ClaimOccurrenceDimId, RunDateId, DirectIncurredLossInceptionToDate, StopLossLimit, StopLossAdjustmentAmount, ChangeInStopLossAdjustmentAmount)\n\tSELECT \n\tAUDITID, \n\tSalesDivisionDimID AS SALESDIVISIONDIMID, \n\tAGENCYDIMID, \n\tPRIMARYAGENCYDIMID, \n\tCONTRACTCUSTOMERDIMID, \n\tPOLICYDIMID, \n\tCLAIMOCCURRENCEDIMID, \n\tRUNDATEID, \n\tDIRECTINCURREDLOSSINCEPTIONTODATE, \n\tSTOPLOSSLIMIT, \n\tSTOPLOSSADJUSTMENTAMOUNT, \n\tO_ChangeInStopLossAdjustmentAmount AS CHANGEINSTOPLOSSADJUSTMENTAMOUNT\n\tFROM RTR_Insert_Update_Occurrence_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244879"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893608"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7545029"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 12:24:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/02/2023 12:45:34"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "EDW_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "DBCONNECTION_SOURCE_EDM": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "LOAD": {
                "type": "string",
                "defaultValue": "ONGOING"
            },
            "NO_OF_YEARS": {
                "type": "string",
                "defaultValue": "0"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "0"
            },
            "FILTERCLAUSE": {
                "type": "string",
                "defaultValue": "true"
            },
            "WHERECLAUSEOCCURRENCE": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERECLAUSECATASTROPHE": {
                "type": "string",
                "defaultValue": ""
            },
            "RUNDATEEND": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}