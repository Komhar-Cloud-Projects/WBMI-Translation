{
    "name": "s_m_CLM_DW_LOAD_ClaimOccurrenceSurvey_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_ClaimOccurrenceSurvey_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_TAB_STAGE AS (\n\tSELECT\n\t\tclm_claim_nbr,\n\t\tclm_survey_recipient,\n\t\tclm_survey_contact_method,\n\t\tclm_survey_primary_handler\n\tFROM CLAIM_TAB_STAGE\n),\nEXP_Source AS (\n\tSELECT\n\tclm_claim_nbr,\n\tclm_survey_recipient,\n\tclm_survey_contact_method,\n\tclm_survey_primary_handler,\n\t'Closed Claim Survey' AS o_SurveyType\n\tFROM SQ_CLAIM_TAB_STAGE\n),\nLKP_SupClaimSurveyContactMethod AS (\n\tSELECT\n\tSurveyContactMethodDescription,\n\tSurveyContactMethodCode\n\tFROM (\n\t\tSELECT \n\t\t\tSurveyContactMethodDescription,\n\t\t\tSurveyContactMethodCode\n\t\tFROM SupClaimSurveyContactMethod\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SurveyContactMethodCode ORDER BY SurveyContactMethodDescription) = 1\n),\nLKP_SupClaimSurveyType AS (\n\tSELECT\n\tSupClaimSurveyTypeId,\n\tClaimSurveyTypeDescription\n\tFROM (\n\t\tselect SupClaimSurveyTypeId as SupClaimSurveyTypeId,\r\n\t\tClaimSurveyTypeDescription as ClaimSurveyTypeDescription \r\n\t\tfrom dbo.SupClaimSurveyType\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimSurveyTypeDescription ORDER BY SupClaimSurveyTypeId) = 1\n),\nLKP_claim_occurrence AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_occurrence_key\n\tFROM (\n\t\tselect claim_occurrence_ak_id as claim_occurrence_ak_id,\r\n\t\tRTRIM(claim_occurrence_key) as claim_occurrence_key\r\n\t\tFROM dbo.claim_occurrence\r\n\t\tWHERE crrnt_snpsht_flag = 1\r\n\t\tand source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_claim_party AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tclaim_party_key\n\tFROM (\n\t\tselect cp.claim_party_ak_id as claim_party_ak_id, \r\n\t\tRTRIM(cp.claim_party_key) as claim_party_key \r\n\t\tfrom dbo.claim_party cp \r\n\t\tINNER JOIN @{pipeline().parameters.STAGE_DB_NAME}.DBO.claim_tab_stage cts ON cp.claim_party_key = cts.clm_survey_recipient\r\n\t\twhere cp.crrnt_snpsht_flag = 1\r\n\t\tand cp.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id) = 1\n),\nLKP_claim_representative AS (\n\tSELECT\n\tclaim_rep_ak_id,\n\tclaim_rep_key\n\tFROM (\n\t\tselect claim_rep_ak_id as claim_rep_ak_id, \r\n\t\tclaim_rep_key as claim_rep_key\r\n\t\tfrom dbo.claim_representative\r\n\t\twhere crrnt_snpsht_flag = 1\r\n\t\tand source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_key ORDER BY claim_rep_ak_id) = 1\n),\nEXP_LookupValues AS (\n\tSELECT\n\tLKP_claim_occurrence.claim_occurrence_ak_id AS lkp_claim_occurrence_ak_id,\n\t-- *INF*: IIF(ISNULL(lkp_claim_occurrence_ak_id),\r\n\t-- -1,\r\n\t-- lkp_claim_occurrence_ak_id)\n\tIFF(lkp_claim_occurrence_ak_id IS NULL, - 1, lkp_claim_occurrence_ak_id) AS claim_occurrence_ak_id,\n\tLKP_SupClaimSurveyType.SupClaimSurveyTypeId AS lkp_SupClaimSurveyTypeId,\n\t-- *INF*: IIF(ISNULL(lkp_SupClaimSurveyTypeId),\r\n\t-- 1,\r\n\t-- lkp_SupClaimSurveyTypeId)\n\tIFF(lkp_SupClaimSurveyTypeId IS NULL, 1, lkp_SupClaimSurveyTypeId) AS SupClaimSurveyTypeId,\n\tLKP_claim_party.claim_party_ak_id AS lkp_recipient_claim_party_ak_id,\n\t-- *INF*: IIF(ISNULL(lkp_recipient_claim_party_ak_id),\r\n\t-- -1,\r\n\t-- lkp_recipient_claim_party_ak_id)\n\tIFF(lkp_recipient_claim_party_ak_id IS NULL, - 1, lkp_recipient_claim_party_ak_id) AS recipient_claim_party_ak_id,\n\tLKP_SupClaimSurveyContactMethod.SurveyContactMethodDescription AS lkp_SurveyContactMethodDescription,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(lkp_SurveyContactMethodDescription)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(lkp_SurveyContactMethodDescription) AS SurveyContactMethodDescription,\n\tLKP_claim_representative.claim_rep_ak_id AS lkp_claim_rep_ak_id,\n\t-- *INF*: IIF(ISNULL(lkp_claim_rep_ak_id),\r\n\t-- -3,\r\n\t-- lkp_claim_rep_ak_id)\n\tIFF(lkp_claim_rep_ak_id IS NULL, - 3, lkp_claim_rep_ak_id) AS claim_rep_ak_id\n\tFROM \n\tLEFT JOIN LKP_SupClaimSurveyContactMethod\n\tON LKP_SupClaimSurveyContactMethod.SurveyContactMethodCode = EXP_Source.clm_survey_contact_method\n\tLEFT JOIN LKP_SupClaimSurveyType\n\tON LKP_SupClaimSurveyType.ClaimSurveyTypeDescription = EXP_Source.o_SurveyType\n\tLEFT JOIN LKP_claim_occurrence\n\tON LKP_claim_occurrence.claim_occurrence_key = EXP_Source.clm_claim_nbr\n\tLEFT JOIN LKP_claim_party\n\tON LKP_claim_party.claim_party_key = EXP_Source.clm_survey_recipient\n\tLEFT JOIN LKP_claim_representative\n\tON LKP_claim_representative.claim_rep_key = EXP_Source.clm_survey_primary_handler\n),\nLKP_ClaimOccurrenceSurvey AS (\n\tSELECT\n\tClaimOccurrenceSurveyId,\n\tRecipientClaimPartyAKID,\n\tSurveyContactMethodDescription,\n\tAdjusterClaimRepresentativeAKID,\n\tClaimOccurrenceAKID,\n\tSupClaimSurveyTypeId\n\tFROM (\n\t\tselect ClaimOccurrenceSurveyId as ClaimOccurrenceSurveyId,\r\n\t\t\tClaimOccurrenceAKID as ClaimOccurrenceAKID,\r\n\t\t\tSupClaimSurveyTypeId as SupClaimSurveyTypeId,\r\n\t\t\tRecipientClaimPartyAKID as RecipientClaimPartyAKID,\r\n\t\t\tSurveyContactMethodDescription as SurveyContactMethodDescription,\r\n\t\t\tAdjusterClaimRepresentativeAKID as AdjusterClaimRepresentativeAKID\r\n\t\tfrom dbo.ClaimOccurrenceSurvey\r\n\t\twhere CurrentSnapshotFlag = 1\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimOccurrenceAKID,SupClaimSurveyTypeId ORDER BY ClaimOccurrenceSurveyId) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_ClaimOccurrenceSurvey.ClaimOccurrenceSurveyId AS lkp_ClaimOccurrenceSurveyId,\n\tEXP_LookupValues.claim_occurrence_ak_id,\n\tEXP_LookupValues.SupClaimSurveyTypeId,\n\tLKP_ClaimOccurrenceSurvey.RecipientClaimPartyAKID AS lkp_RecipientClaimPartyAKID,\n\tLKP_ClaimOccurrenceSurvey.SurveyContactMethodDescription AS lkp_SurveyContactMethodDescription,\n\tLKP_ClaimOccurrenceSurvey.AdjusterClaimRepresentativeAKID AS lkp_AdjusterClaimRepresentativeAKID,\n\tEXP_LookupValues.recipient_claim_party_ak_id,\n\tEXP_LookupValues.SurveyContactMethodDescription,\n\tEXP_LookupValues.claim_rep_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tISNULL(lkp_ClaimOccurrenceSurveyId) \r\n\t-- \tAND recipient_claim_party_ak_id = -1 \r\n\t-- \tAND SurveyContactMethodDescription = 'N/A' \r\n\t-- \tAND claim_rep_ak_id < 0,\r\n\t-- \t\t'IGNORE',\r\n\t-- \tISNULL(lkp_ClaimOccurrenceSurveyId), \r\n\t-- \t\t'NEW',\r\n\t-- \tlkp_RecipientClaimPartyAKID <> recipient_claim_party_ak_id\r\n\t-- \tOR lkp_SurveyContactMethodDescription <> SurveyContactMethodDescription\r\n\t-- \tOR lkp_AdjusterClaimRepresentativeAKID <> claim_rep_ak_id,\r\n\t-- \t\t'UPDATE',\r\n\t-- \t'NOCHANGE'\r\n\t-- \t)\n\tDECODE(\n\t    TRUE,\n\t    lkp_ClaimOccurrenceSurveyId IS NULL AND recipient_claim_party_ak_id = - 1 AND SurveyContactMethodDescription = 'N/A' AND claim_rep_ak_id < 0, 'IGNORE',\n\t    lkp_ClaimOccurrenceSurveyId IS NULL, 'NEW',\n\t    lkp_RecipientClaimPartyAKID <> recipient_claim_party_ak_id OR lkp_SurveyContactMethodDescription <> SurveyContactMethodDescription OR lkp_AdjusterClaimRepresentativeAKID <> claim_rep_ak_id, 'UPDATE',\n\t    'NOCHANGE'\n\t) AS v_ChangeFlag,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t-- *INF*: IIF(v_ChangeFlag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(\n\t    v_ChangeFlag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS EffectiveFromDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveToDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CurrentTime\n\tFROM EXP_LookupValues\n\tLEFT JOIN LKP_ClaimOccurrenceSurvey\n\tON LKP_ClaimOccurrenceSurvey.ClaimOccurrenceAKID = EXP_LookupValues.claim_occurrence_ak_id AND LKP_ClaimOccurrenceSurvey.SupClaimSurveyTypeId = EXP_LookupValues.SupClaimSurveyTypeId\n),\nFIL_NewOrChanged AS (\n\tSELECT\n\tclaim_occurrence_ak_id, \n\tSupClaimSurveyTypeId, \n\to_ChangeFlag, \n\tEffectiveFromDate, \n\tEffectiveToDate, \n\tSourceSystemID, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tCurrentTime, \n\trecipient_claim_party_ak_id, \n\tSurveyContactMethodDescription, \n\tclaim_rep_ak_id\n\tFROM EXP_DetectChanges\n\tWHERE o_ChangeFlag='NEW' OR o_ChangeFlag='UPDATE'\n),\nEXP_Target AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tSupClaimSurveyTypeId,\n\tEffectiveFromDate,\n\tEffectiveToDate,\n\tSourceSystemID,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tCurrentTime,\n\trecipient_claim_party_ak_id,\n\tSurveyContactMethodDescription,\n\tclaim_rep_ak_id\n\tFROM FIL_NewOrChanged\n),\nClaimOccurrenceSurvey_Insert AS (\n\tINSERT INTO ClaimOccurrenceSurvey\n\t(ClaimOccurrenceAKID, SupClaimSurveyTypeId, EffectiveFromDate, EffectiveToDate, SourceSystemID, CurrentSnapshotFlag, AuditID, CreatedDate, ModifiedDate, RecipientClaimPartyAKID, SurveyContactMethodDescription, AdjusterClaimRepresentativeAKID)\n\tSELECT \n\tclaim_occurrence_ak_id AS CLAIMOCCURRENCEAKID, \n\tSUPCLAIMSURVEYTYPEID, \n\tEFFECTIVEFROMDATE, \n\tEFFECTIVETODATE, \n\tSOURCESYSTEMID, \n\tCURRENTSNAPSHOTFLAG, \n\tAuditId AS AUDITID, \n\tCurrentTime AS CREATEDDATE, \n\tCurrentTime AS MODIFIEDDATE, \n\trecipient_claim_party_ak_id AS RECIPIENTCLAIMPARTYAKID, \n\tSURVEYCONTACTMETHODDESCRIPTION, \n\tclaim_rep_ak_id AS ADJUSTERCLAIMREPRESENTATIVEAKID\n\tFROM EXP_Target\n),\nSQ_ClaimOccurrenceSurvey AS (\n\tSELECT a.ClaimOccurrenceSurveyId, \r\n\t\ta.ClaimOccurrenceAKID, \r\n\t\ta.SupClaimSurveyTypeId,\r\n\t\ta.EffectiveFromDate, \r\n\t\ta.EffectiveToDate \r\n\tFROM dbo.ClaimOccurrenceSurvey a\r\n\tWHERE a.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM dbo.ClaimOccurrenceSurvey b\r\n\t\t\tWHERE b.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\tAND b.CurrentSnapshotFlag = 1\r\n\t\t\t\tAND a.ClaimOccurrenceAKID = b.ClaimOccurrenceAKID\r\n\t\t\t\tAND a.SupClaimSurveyTypeId = b.SupClaimSurveyTypeId\r\n\t\t\tGROUP BY b.ClaimOccurrenceAKID, b.SupClaimSurveyTypeId\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY a.ClaimOccurrenceAKID, a.SupClaimSurveyTypeId, a.EffectiveFromDate DESC\r\n\t--\n),\nEXP_EffectiveToDate AS (\n\tSELECT\n\tClaimOccurrenceSurveyId,\n\tClaimOccurrenceAKID,\n\tSupClaimSurveyTypeId,\n\tEffectiveFromDate,\n\tEffectiveToDate AS OriginalEffectiveToDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tClaimOccurrenceAKID = v_PREV_ROW_ClaimOccurrenceAKID AND SupClaimSurveyTypeId = v_PREV_ROW_SupClaimSurveyTypeId, \r\n\t-- \t\tADD_TO_DATE(v_PREV_ROW_EffectiveFromDate,'SS',-1),\r\n\t-- \tOriginalEffectiveToDate)\n\tDECODE(\n\t    TRUE,\n\t    ClaimOccurrenceAKID = v_PREV_ROW_ClaimOccurrenceAKID AND SupClaimSurveyTypeId = v_PREV_ROW_SupClaimSurveyTypeId, DATEADD(SECOND,- 1,v_PREV_ROW_EffectiveFromDate),\n\t    OriginalEffectiveToDate\n\t) AS v_EffectiveToDate,\n\tv_EffectiveToDate AS o_EffectiveToDate,\n\tClaimOccurrenceAKID AS v_PREV_ROW_ClaimOccurrenceAKID,\n\tSupClaimSurveyTypeId AS v_PREV_ROW_SupClaimSurveyTypeId,\n\tEffectiveFromDate AS v_PREV_ROW_EffectiveFromDate,\n\tSYSDATE AS ModifiedDate,\n\t0 AS CurrentSnapshotFlag\n\tFROM SQ_ClaimOccurrenceSurvey\n),\nFIL_RowsToExpire AS (\n\tSELECT\n\tClaimOccurrenceSurveyId, \n\tOriginalEffectiveToDate, \n\to_EffectiveToDate AS NewEffectiveToDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM EXP_EffectiveToDate\n\tWHERE OriginalEffectiveToDate <> NewEffectiveToDate\n),\nUPDTRANS AS (\n\tSELECT\n\tClaimOccurrenceSurveyId, \n\tNewEffectiveToDate AS EffectiveToDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM FIL_RowsToExpire\n),\nClaimOccurrenceSurvey_Update AS (\n\tMERGE INTO ClaimOccurrenceSurvey AS T\n\tUSING UPDTRANS AS S\n\tON T.ClaimOccurrenceSurveyId = S.ClaimOccurrenceSurveyId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.EffectiveToDate = S.EffectiveToDate, T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "STAGE_DB_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}