{
    "name": "s_m_POL_STG_Load_DriverStage_Rejects",
    "properties": {
        "activities": [
            {
                "name": "m_POL_STG_Load_DriverStage_Rejects",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSEQ_DriverStageID AS (\n\tCREATE SEQUENCE SEQ_DriverStageID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nearsreject_DriverRejectTable AS (\n),\nEXP_EARS_Reject AS (\n\tSELECT\n\tSEQ_DriverStageID.NEXTVAL,\n\t'Rejected' AS out_ProcessStatus,\n\tNEXTVAL AS out_DriverStageID,\n\tFileCreationDate,\n\t-- *INF*: TO_DATE(FileCreationDate,'YYYYMMDD')\n\tTO_TIMESTAMP(FileCreationDate, 'YYYYMMDD') AS out_FileCreationDate,\n\tFileIDCode,\n\tSenderName,\n\tSenderNumber,\n\tReservedDriverRejectHeader1,\n\tLicenseState,\n\tLicenseNumber,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tBirthDate,\n\t-- *INF*: TO_DATE(BirthDate,'YYYYMMDD')\n\tTO_TIMESTAMP(BirthDate, 'YYYYMMDD') AS out_BirthDate,\n\tZipCode,\n\tStreetAddress,\n\tGender,\n\tReservedDriverReject1,\n\tPolicyNumber,\n\tPolicyExpirationDate,\n\t-- *INF*: TO_DATE(PolicyExpirationDate,'YYYYMMDD')\n\tTO_TIMESTAMP(PolicyExpirationDate, 'YYYYMMDD') AS out_PolicyExpirationDate,\n\tReservedDriverReject2,\n\tQuoteback,\n\t-- *INF*: SUBSTR(Quoteback,1,12)\n\tSUBSTR(Quoteback, 1, 12) AS out_QuotebackPolicyNumber,\n\t-- *INF*: SUBSTR(Quoteback,14,7)\n\tSUBSTR(Quoteback, 14, 7) AS out_QuotebackAgency,\n\t-- *INF*: SUBSTR(Quoteback,22,3)\n\tSUBSTR(Quoteback, 22, 3) AS out_QuotebackLOB,\n\t-- *INF*: SUBSTR(Quoteback,26,2)\n\tSUBSTR(Quoteback, 26, 2) AS out_QuotebackDriverID,\n\t-- *INF*: SUBSTR(Quoteback,29,2)\n\tSUBSTR(Quoteback, 29, 2) AS out_QuotebackState,\n\t-- *INF*: SUBSTR(Quoteback,32,3)\n\tSUBSTR(Quoteback, 32, 3) AS out_QuotebackUnderwriter,\n\tInsuranceIndicatior,\n\tReservedDriverReject3,\n\tAccountNumber,\n\tReservedDriverReject4,\n\tRejectSource,\n\tRejectReason,\n\tRejectCount,\n\t-- *INF*: DECODE(RejectReason,'002','002-DOB mismatch for that driver license record','003','003-Missing Required Field','004','004-Invalid Drivers License Format','005','005-Driver Not Found','010','010-State Driver Not Found','Invalid Reject Reason: '  || RejectReason)\r\n\t-- \n\tDECODE(\n\t    RejectReason,\n\t    '002', '002-DOB mismatch for that driver license record',\n\t    '003', '003-Missing Required Field',\n\t    '004', '004-Invalid Drivers License Format',\n\t    '005', '005-Driver Not Found',\n\t    '010', '010-State Driver Not Found',\n\t    'Invalid Reject Reason: ' || RejectReason\n\t) AS out_RejectDescription\n\tFROM earsreject_DriverRejectTable\n),\nLKP_DriverStage AS (\n\tSELECT\n\tFileCreationDate,\n\tLicenseState,\n\tLicenseNumber,\n\tLastName,\n\tFirstName,\n\tRejectReason,\n\tIn_FileCreationDate,\n\tIn_LicenseState,\n\tIn_License_Number,\n\tIn_FirstName,\n\tIn_LastName,\n\tIn_PolicyNumber,\n\tPolicyNumber\n\tFROM (\n\t\tSELECT \n\t\t\tFileCreationDate,\n\t\t\tLicenseState,\n\t\t\tLicenseNumber,\n\t\t\tLastName,\n\t\t\tFirstName,\n\t\t\tRejectReason,\n\t\t\tIn_FileCreationDate,\n\t\t\tIn_LicenseState,\n\t\t\tIn_License_Number,\n\t\t\tIn_FirstName,\n\t\t\tIn_LastName,\n\t\t\tIn_PolicyNumber,\n\t\t\tPolicyNumber\n\t\tFROM DriverStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FileCreationDate,LicenseState,LicenseNumber,LastName,FirstName,PolicyNumber ORDER BY FileCreationDate) = 1\n),\nLKP_SupProcessStatus AS (\n\tSELECT\n\tSupProcessStatusId,\n\tProcessStatus\n\tFROM (\n\t\tSELECT \n\t\t\tSupProcessStatusId,\n\t\t\tProcessStatus\n\t\tFROM SupProcessStatus\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProcessStatus ORDER BY SupProcessStatusId) = 1\n),\nFILTRANS AS (\n\tSELECT\n\tLKP_DriverStage.RejectReason AS lkp_RejectReason, \n\tEXP_EARS_Reject.out_ProcessStatus, \n\tEXP_EARS_Reject.out_DriverStageID, \n\tEXP_EARS_Reject.RecordID, \n\tEXP_EARS_Reject.out_FileCreationDate AS FileCreationDate, \n\tEXP_EARS_Reject.FileIDCode, \n\tEXP_EARS_Reject.SenderName, \n\tEXP_EARS_Reject.SenderNumber, \n\tEXP_EARS_Reject.ReservedDriverRejectHeader1, \n\tEXP_EARS_Reject.LicenseState, \n\tEXP_EARS_Reject.LicenseNumber, \n\tEXP_EARS_Reject.LastName, \n\tEXP_EARS_Reject.FirstName, \n\tEXP_EARS_Reject.MiddleName, \n\tEXP_EARS_Reject.out_BirthDate AS BirthDate, \n\tEXP_EARS_Reject.ZipCode, \n\tEXP_EARS_Reject.StreetAddress, \n\tEXP_EARS_Reject.Gender, \n\tEXP_EARS_Reject.ReservedDriverReject1, \n\tEXP_EARS_Reject.PolicyNumber, \n\tEXP_EARS_Reject.out_PolicyExpirationDate AS PolicyExpirationDate, \n\tEXP_EARS_Reject.ReservedDriverReject2, \n\tEXP_EARS_Reject.Quoteback, \n\tEXP_EARS_Reject.out_QuotebackPolicyNumber, \n\tEXP_EARS_Reject.out_QuotebackAgency, \n\tEXP_EARS_Reject.out_QuotebackLOB, \n\tEXP_EARS_Reject.out_QuotebackDriverID, \n\tEXP_EARS_Reject.out_QuotebackState, \n\tEXP_EARS_Reject.out_QuotebackUnderwriter, \n\tEXP_EARS_Reject.InsuranceIndicatior, \n\tEXP_EARS_Reject.ReservedDriverReject3, \n\tEXP_EARS_Reject.AccountNumber, \n\tEXP_EARS_Reject.ReservedDriverReject4, \n\tEXP_EARS_Reject.RejectSource, \n\tEXP_EARS_Reject.RejectReason, \n\tEXP_EARS_Reject.RejectCount, \n\tEXP_EARS_Reject.out_RejectDescription, \n\tLKP_SupProcessStatus.SupProcessStatusId AS out_SupProcessStatusId\n\tFROM EXP_EARS_Reject\n\tLEFT JOIN LKP_DriverStage\n\tON LKP_DriverStage.FileCreationDate = EXP_EARS_Reject.out_FileCreationDate AND LKP_DriverStage.LicenseState = EXP_EARS_Reject.LicenseState AND LKP_DriverStage.LicenseNumber = EXP_EARS_Reject.LicenseNumber AND LKP_DriverStage.LastName = EXP_EARS_Reject.LastName AND LKP_DriverStage.FirstName = EXP_EARS_Reject.FirstName AND LKP_DriverStage.PolicyNumber = EXP_EARS_Reject.PolicyNumber\n\tLEFT JOIN LKP_SupProcessStatus\n\tON LKP_SupProcessStatus.ProcessStatus = EXP_EARS_Reject.out_ProcessStatus\n\tWHERE ISNULL(lkp_RejectReason)\n),\nTGT_DriverStage AS (\n\tINSERT INTO DriverStage\n\t(DriverStageId, CreatedDate, FileCreationDate, FileIDCode, SenderName, LicenseState, LicenseNumber, LastName, FirstName, MiddleName, StreetAddress, ZipCode, BirthDate, Gender, PolicyNumber, PolicyExpirationDate, QuoteBackPolicyNumber, QuoteBackAgencyNumber, QuoteBackLineOfBusiness, QuoteBackDriverId, QuoteBackState, QuoteBackUnderwriterNumber, QuoteBack, InsuranceIndicator, AccountNumber, RejectSource, RejectReason, RejectCount, SupProcessStatusId, ErrorDescription)\n\tSELECT \n\tout_DriverStageID AS DRIVERSTAGEID, \n\tFileCreationDate AS CREATEDDATE, \n\tFILECREATIONDATE, \n\tFILEIDCODE, \n\tSENDERNAME, \n\tLICENSESTATE, \n\tLICENSENUMBER, \n\tLASTNAME, \n\tFIRSTNAME, \n\tMIDDLENAME, \n\tSTREETADDRESS, \n\tZIPCODE, \n\tBIRTHDATE, \n\tGENDER, \n\tPOLICYNUMBER, \n\tPOLICYEXPIRATIONDATE, \n\tout_QuotebackPolicyNumber AS QUOTEBACKPOLICYNUMBER, \n\tout_QuotebackAgency AS QUOTEBACKAGENCYNUMBER, \n\tout_QuotebackLOB AS QUOTEBACKLINEOFBUSINESS, \n\tout_QuotebackDriverID AS QUOTEBACKDRIVERID, \n\tout_QuotebackState AS QUOTEBACKSTATE, \n\tout_QuotebackUnderwriter AS QUOTEBACKUNDERWRITERNUMBER, \n\tQuoteback AS QUOTEBACK, \n\tInsuranceIndicatior AS INSURANCEINDICATOR, \n\tACCOUNTNUMBER, \n\tREJECTSOURCE, \n\tREJECTREASON, \n\tREJECTCOUNT, \n\tout_SupProcessStatusId AS SUPPROCESSSTATUSID, \n\tout_RejectDescription AS ERRORDESCRIPTION\n\tFROM FILTRANS\n),\nEXP_MaskedLicense AS (\n\tSELECT\n\tPolicyNumber,\n\tLicenseState,\n\tLicenseNumber AS i_LicenseNumber,\n\t-- *INF*: REPLACESTR(1, i_LicenseNumber, SUBSTR(i_LicenseNumber, 1, LENGTH(RTRIM(i_LicenseNumber)) - 4),  LPAD('', 8,  '*'))\n\tREGEXP_REPLACE(i_LicenseNumber,SUBSTR(i_LicenseNumber, 1, LENGTH(RTRIM(i_LicenseNumber)) - 4),LPAD('', 8, '*')) AS v_LicenseNumber,\n\tv_LicenseNumber AS o_LicenseNumber,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tout_RejectDescription\n\tFROM FILTRANS\n),\nDriverRejectFile AS (\n\tINSERT INTO DriverRejectFile\n\t(PolicyNumber, DriverState, DriverLicense, DriverLast, DriverFirst, DriverMiddle, RejectReason)\n\tSELECT \n\tPOLICYNUMBER, \n\tLicenseState AS DRIVERSTATE, \n\to_LicenseNumber AS DRIVERLICENSE, \n\tLastName AS DRIVERLAST, \n\tFirstName AS DRIVERFIRST, \n\tMiddleName AS DRIVERMIDDLE, \n\tout_RejectDescription AS REJECTREASON\n\tFROM EXP_MaskedLicense\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {},
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}