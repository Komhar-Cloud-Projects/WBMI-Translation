{
    "name": "s_m_POL_DW_LOAD_RiskLocation",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_RiskLocation",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupCounty_ValidCheck AS (\n\tSELECT\n\tSupCountyId,\n\tStateAbbreviation,\n\tCountyName\n\tFROM (\n\t\tselect a.SupCountyId as SupCountyId, \r\n\t\tRIGHT('00'+b.state_abbrev,2) as StateAbbreviation,\r\n\t\tUpper(replace(a.CountyName,' ','')) as CountyName\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.SupCounty a\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state b\r\n\t\ton a.StateAbbreviation=b.state_code\r\n\t\twhere a.CurrentSnapshotFlag=1\r\n\t\tand b.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateAbbreviation,CountyName ORDER BY SupCountyId) = 1\n),\nSQ_pif_4514_stage AS (\n\tSELECT  DISTINCT RTRIM(pif_symbol) as pif_symbol,\r\n\t       pif_policy_number,\r\n\t       pif_module,\r\n\t       CASE LEN(sar_location_x) WHEN '0' THEN LTRIM(RTRIM(sar_unit)) ELSE LTRIM(RTRIM(sar_location_x)) END as sar_location_x,\r\n\t\tCASE LEN(sar_location_x) WHEN '0' THEN 'N'  ELSE 'Y' END as LocationIndicator,\r\n\t       LTRIM(RTRIM(sar_state)) as sar_state,\r\n\t       LTRIM(RTRIM(sar_loc_prov_territory)) as sar_loc_prov_territory,\r\n\t       CASE WHEN LEN(LTRIM(RTRIM(sar_county_first_two)) + LTRIM(RTRIM(sar_county_last_one)) + LTRIM(RTRIM(sar_city))) < 6 THEN '000000' ELSE \r\n\t       LTRIM(RTRIM(sar_county_first_two)) + LTRIM(RTRIM(sar_county_last_one)) + LTRIM(RTRIM(sar_city)) END as Tax_Location,LTRIM(RTRIM(sar_code_14)) as sar_code_14,\r\n\t       LTRIM(RTRIM(sar_zip_postal_code)) as sar_zip_postal_code\r\n\tFROM  \r\n\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_4514} A \r\n\t@{pipeline().parameters.JOIN_CONDITION}\r\n\t(SELECT DISTINCT Policykey FROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.work_policytransactionstatus \r\n\tWHERE  AuditID = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND  PolicyStatus <> 'NOCHANGE')  B\r\n\tON  A.policykey = B.policykey\r\n\tWHERE A.logical_flag IN ('0','1','2','3')  \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t/*and exists (\r\n\tselect 1 from rpt_edm_co.V2.policy p\r\n\twhere p.pol_key=a.PolicyKey\r\n\tand p.crrnt_snpsht_flag='1')*/\n),\nEXP_Default AS (\n\tSELECT\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpif_symbol  ||  pif_policy_number  || pif_module AS Policy_Key,\n\tsar_location_x,\n\tsar_unit AS locationIndicator,\n\tsar_state AS i_sar_state,\n\t-- *INF*: IIF(ISNULL(i_sar_state) OR IS_SPACES(i_sar_state) OR LENGTH(i_sar_state)=0, 'N/A', LPAD(LTRIM(RTRIM(i_sar_state)), 2, '0'))\n\tIFF(i_sar_state IS NULL \n\t\tOR LENGTH(i_sar_state)>0 AND TRIM(i_sar_state)='' \n\t\tOR LENGTH(i_sar_state\n\t\t) = 0,\n\t\t'N/A',\n\t\tLPAD(LTRIM(RTRIM(i_sar_state\n\t\t\t\t)\n\t\t\t), 2, '0'\n\t\t)\n\t) AS o_sar_state,\n\tsar_loc_prov_territory,\n\tsar_city AS Tax_Location,\n\t-- *INF*: IIF(REG_MATCH(:UDF.DEFAULT_VALUE_FOR_STRINGS(Tax_Location) ,'(\\d{6})')\r\n\t-- ,:UDF.DEFAULT_VALUE_FOR_STRINGS(Tax_Location)\r\n\t-- ,'000000')\n\tIFF(REGEXP_LIKE(:UDF.DEFAULT_VALUE_FOR_STRINGS(Tax_Location\n\t\t\t), '(\\d{6})'\n\t\t),\n\t\t:UDF.DEFAULT_VALUE_FOR_STRINGS(Tax_Location\n\t\t),\n\t\t'000000'\n\t) AS v_Tax_Location,\n\tv_Tax_Location AS o_Tax_Location,\n\t-- *INF*: SUBSTR(v_Tax_Location,1,2)\n\tSUBSTR(v_Tax_Location, 1, 2\n\t) AS o_Tax_Location_1_2,\n\tsar_code_14,\n\tsar_zip_postal_code\n\tFROM SQ_pif_4514_stage\n),\nLKP_ISOFireProtectStage AS (\n\tSELECT\n\tCity,\n\tCounty,\n\tTaxLoc\n\tFROM (\n\t\tselect City as City,\r\n\t\tCounty as County,\r\n\t\tTaxLoc as TaxLoc\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.ISOFireProtectStage where ISOExpDate='2999-12-31 00:00:00.000'\r\n\t\torder by ISOEffDate,ISOFireProtectStageID --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TaxLoc ORDER BY City DESC) = 1\n),\nLKP_Pif43IXZWCUnmodStage AS (\n\tSELECT\n\tPmdi4w1IntrastateIdNum,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tpif_risk_state_prov\n\tFROM (\n\t\tselect distinct ltrim(rtrim(ix.PifSymbol)) as PifSymbol,\r\n\t\tltrim(rtrim(ix.PifPolicyNumber)) as PifPolicyNumber,\r\n\t\tltrim(rtrim(ix.PifModule)) as PifModule,\r\n\t\tix.Pmdi4w1IntrastateIdNum AS Pmdi4w1IntrastateIdNum,\r\n\t\tRIGHT('00'+bp.pif_risk_state_prov,2) as pif_risk_state_prov\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.Pif43IXZWCUnmodStage ix, \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_02_stage bp\r\n\t\twhere ltrim(rtrim(ix.PifSymbol)) = ltrim(rtrim(bp.pif_symbol))\r\n\t\t    and ltrim(rtrim(ix.PifPolicyNumber)) = ltrim(rtrim(bp.pif_policy_number))\r\n\t\t    and ltrim(rtrim(ix.PifModule)) = ltrim(rtrim(bp.pif_module))\r\n\t\t    and ix.Pmdi4w1WcRatingState = bp.pif_risk_state_prov\r\n\t\tand LTRIM(ix.Pmdi4w1IntrastateIdNum)<>''\r\n\t\t and ix.Pmdi4w1SegmentPartCode = 'x'\r\n\t\t and bp.pif_line_business in ('WC','WCP')\r\n\t\t and cast(ix.Pmdi4w1YearProcess AS varchar)+\r\n\t\tRIGHT('0'+cast(ix.Pmdi4w1MonthProcess AS varchar),2)+RIGHT('0'+cast(ix.Pmdi4w1DayProcess as varchar),2)\r\n\t\t +ix.Pmdi4w1SplitRateSeq = \r\n\t\t (\r\n\t\t\tselect MAX(cast(Pmdi4w1YearProcess AS varchar)+\r\n\t\tRIGHT('0'+cast(Pmdi4w1MonthProcess AS varchar),2)+RIGHT('0'+cast(Pmdi4w1DayProcess as varchar),2)\r\n\t\t +Pmdi4w1SplitRateSeq) from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Pif43IXZWCUnmodStage a\r\n\t\t\twhere ix.PifSymbol = a.PifSymbol\r\n\t\t\tand ix.PifPolicyNumber = a.PifPolicyNumber\r\n\t\t\tand ix.PifModule = a.PifModule\r\n\t\t\tand ltrim(a.Pmdi4w1IntrastateIdNum) <> ''\r\n\t\t\tand a.Pmdi4w1SegmentPartCode = 'x'\r\n\t\t      and ix.Pmdi4w1WcRatingState=a.Pmdi4w1WcRatingState\r\n\t\t )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,pif_risk_state_prov ORDER BY Pmdi4w1IntrastateIdNum) = 1\n),\nLKP_Policy_PolicyAKID AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT policy.pol_ak_id as pol_ak_id, ltrim(rtrim(policy.pol_key)) as pol_key FROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id DESC) = 1\n),\nLKP_SupCounty_IL_IN_KY AS (\n\tSELECT\n\tCountyName,\n\tTaxLocationCountyCode,\n\tStateAbbreviation\n\tFROM (\n\t\tselect Upper(a.CountyName) as CountyName,\r\n\t\ta.TaxLocationCountyCode as TaxLocationCountyCode,\r\n\t\tRIGHT('00'+b.state_abbrev,2) as StateAbbreviation\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.SupCounty a\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state b\r\n\t\ton a.StateAbbreviation=b.state_code\r\n\t\twhere a.CurrentSnapshotFlag=1\r\n\t\tand b.crrnt_snpsht_flag=1\r\n\t\tand a.StateAbbreviation in ('IL','IN','KY')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TaxLocationCountyCode,StateAbbreviation ORDER BY CountyName) = 1\n),\nLKP_pif_43jj_stage AS (\n\tSELECT\n\tpmd4j_address_line_1,\n\tpmd4j_addr_lin_2_pos_1,\n\tpmd4j_addr_lin_2_pos_2_30,\n\tpmd4j_address_line_3,\n\tpmd4j_address_line_4,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpmd4j_location_number\n\tFROM (\n\t\tselect SQ_LKP.pif_symbol  as pif_symbol ,\r\n\t\tSQ_LKP.pif_policy_number as pif_policy_number,\r\n\t\tSQ_LKP.pif_module as pif_module,\r\n\t\tSQ_LKP.pmd4j_location_number as pmd4j_location_number,\r\n\t\tSQ_LKP.pmd4j_address_line_1 as pmd4j_address_line_1,\r\n\t\tSQ_LKP.pmd4j_addr_lin_2_pos_1 as pmd4j_addr_lin_2_pos_1,\r\n\t\tSQ_LKP.pmd4j_addr_lin_2_pos_2_30 as pmd4j_addr_lin_2_pos_2_30,\r\n\t\tSQ_LKP.pmd4j_address_line_3 as pmd4j_address_line_3,\r\n\t\tSQ_LKP.pmd4j_address_line_4 as pmd4j_address_line_4\r\n\t\tfrom\r\n\t\t(select pif_symbol as pif_symbol,\r\n\t\tpif_policy_number as pif_policy_number,\r\n\t\tpif_module as pif_module,\r\n\t\tpmd4j_location_number as pmd4j_location_number,\r\n\t\tpmd4j_address_line_1 as pmd4j_address_line_1,\r\n\t\tpmd4j_addr_lin_2_pos_1 as pmd4j_addr_lin_2_pos_1,\r\n\t\tpmd4j_addr_lin_2_pos_2_30 as pmd4j_addr_lin_2_pos_2_30,\r\n\t\tpmd4j_address_line_3 as pmd4j_address_line_3,\r\n\t\tpmd4j_address_line_4 as pmd4j_address_line_4\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_43jj_stage\r\n\t\twhere pmd4j_use_code='LOC' and source_system_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\r\n\t\tunion all\r\n\t\t\r\n\t\tselect pif_symbol as pif_symbol,\r\n\t\tpif_policy_number as pif_policy_number,\r\n\t\tpif_module as pif_module,\r\n\t\t'0000' as pmd4j_location_number,\r\n\t\tpmd4j_address_line_1 as pmd4j_address_line_1,\r\n\t\tpmd4j_addr_lin_2_pos_1 as pmd4j_addr_lin_2_pos_1,\r\n\t\tpmd4j_addr_lin_2_pos_2_30 as pmd4j_addr_lin_2_pos_2_30,\r\n\t\tpmd4j_address_line_3 as pmd4j_address_line_3,\r\n\t\tpmd4j_address_line_4 as pmd4j_address_line_4\r\n\t\tfrom \r\n\t\t(select pif_symbol,\r\n\t\tpif_policy_number,\r\n\t\tpif_module,\r\n\t\tpmd4j_address_line_1,\r\n\t\tpmd4j_addr_lin_2_pos_1,\r\n\t\tpmd4j_addr_lin_2_pos_2_30,\r\n\t\tpmd4j_address_line_3,\r\n\t\tpmd4j_address_line_4,\r\n\t\tROW_NUMBER() over(partition by pif_symbol,pif_policy_number,pif_module order by pmd4j_location_number) as rn\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_43jj_stage\r\n\t\twhere pmd4j_use_code='LOC' and source_system_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' and CHARINDEX(',',pmd4j_addr_lin_2_pos_1+pmd4j_addr_lin_2_pos_2_30+pmd4j_address_line_3+pmd4j_address_line_4)>0\r\n\t\t) a\r\n\t\twhere a.rn=1) SQ_LKP\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,pmd4j_location_number ORDER BY pmd4j_address_line_1) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_Policy_PolicyAKID.pol_ak_id,\n\tEXP_Default.Policy_Key,\n\tEXP_Default.sar_location_x,\n\t-- *INF*: LTRIM(RTRIM(sar_location_x))\n\tLTRIM(RTRIM(sar_location_x\n\t\t)\n\t) AS v_RiskLocation_Unit,\n\tv_RiskLocation_Unit AS RiskLocation_Unit,\n\tEXP_Default.o_sar_state AS sar_state,\n\tsar_state AS sar_state_out,\n\tEXP_Default.sar_loc_prov_territory,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_loc_prov_territory)\r\n\t-- \r\n\t-- --IIF(ISNULL(sar_loc_prov_territory) OR IS_SPACES(sar_loc_prov_territory) OR LENGTH(sar_loc_prov_territory) = 0, 'N/A',\r\n\t-- -- LTRIM(RTRIM(sar_loc_prov_territory)))\r\n\t-- \r\n\t-- \r\n\t-- \n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(sar_loc_prov_territory\n\t) AS sar_loc_prov_territory_Out,\n\t-- *INF*: LTRIM(RTRIM(sar_county_first_two))\r\n\t-- \r\n\t-- --IIF(LTRIM(RTRIM(sar_county_first_two)) = '0' OR LENGTH(LTRIM(RTRIM(sar_county_first_two)))<2 OR IS_SPACES(sar_county_first_two), '00',LTRIM(RTRIM(sar_county_first_two)))\n\tLTRIM(RTRIM(sar_county_first_two\n\t\t)\n\t) AS v_sar_county_first_two,\n\t-- *INF*: LTRIM(RTRIM(sar_county_last_one))\r\n\t-- \r\n\t-- --IIF(IS_SPACES(LTRIM(RTRIM(sar_county_last_one))) OR LENGTH(LTRIM(RTRIM(sar_county_last_one))) < 3 ,'000',LTRIM(RTRIM(sar_county_last_one)))\n\tLTRIM(RTRIM(sar_county_last_one\n\t\t)\n\t) AS v_sar_county_last_one,\n\tEXP_Default.o_Tax_Location AS Tax_Location,\n\t-- *INF*: LTRIM(RTRIM(Tax_Location))\r\n\t-- \r\n\t-- --IIF(IS_SPACES(LTRIM(RTRIM(sar_city)))  OR ISNULL(LTRIM(RTRIM(sar_city))) OR LENGTH(LTRIM(RTRIM(sar_city))) < 3, '000', LTRIM(RTRIM(sar_city)))\r\n\t-- \r\n\t-- \n\tLTRIM(RTRIM(Tax_Location\n\t\t)\n\t) AS v_sar_city,\n\tTax_Location AS Tax_Location_out,\n\tEXP_Default.sar_zip_postal_code,\n\t-- *INF*: IIF(ISNULL(sar_zip_postal_code)  OR IS_SPACES(sar_zip_postal_code)  OR LENGTH(sar_zip_postal_code) = 0 , 'N/A', LTRIM(RTRIM(sar_zip_postal_code)))\n\tIFF(sar_zip_postal_code IS NULL \n\t\tOR LENGTH(sar_zip_postal_code)>0 AND TRIM(sar_zip_postal_code)='' \n\t\tOR LENGTH(sar_zip_postal_code\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(sar_zip_postal_code\n\t\t\t)\n\t\t)\n\t) AS v_sar_zip_postal_code,\n\tv_sar_zip_postal_code AS sar_zip_postal_code_Out,\n\t0 AS logicalIndicator,\n\tPolicy_Key  || v_RiskLocation_Unit AS RiskLocationKey,\n\tEXP_Default.locationIndicator,\n\tEXP_Default.sar_code_14,\n\tLKP_pif_43jj_stage.pmd4j_address_line_1 AS lkp_pmd4j_address_line_1,\n\tLKP_pif_43jj_stage.pmd4j_addr_lin_2_pos_1 AS lkp_pmd4j_addr_lin_2_pos_1,\n\tLKP_pif_43jj_stage.pmd4j_addr_lin_2_pos_2_30 AS lkp_pmd4j_addr_lin_2_pos_2_30,\n\tLKP_pif_43jj_stage.pmd4j_address_line_3 AS lkp_pmd4j_address_line_3,\n\tLKP_pif_43jj_stage.pmd4j_address_line_4 AS lkp_pmd4j_address_line_4,\n\t-- *INF*: IIF(ISNULL(lkp_pmd4j_address_line_1) OR IS_SPACES(lkp_pmd4j_address_line_1) OR LENGTH(lkp_pmd4j_address_line_1)=0,'',LTRIM(lkp_pmd4j_address_line_1))\n\tIFF(lkp_pmd4j_address_line_1 IS NULL \n\t\tOR LENGTH(lkp_pmd4j_address_line_1)>0 AND TRIM(lkp_pmd4j_address_line_1)='' \n\t\tOR LENGTH(lkp_pmd4j_address_line_1\n\t\t) = 0,\n\t\t'',\n\t\tLTRIM(lkp_pmd4j_address_line_1\n\t\t)\n\t) AS v_pmd4j_address_line_1,\n\t-- *INF*: IIF(ISNULL(lkp_pmd4j_addr_lin_2_pos_1) OR IS_SPACES(lkp_pmd4j_addr_lin_2_pos_1) OR LENGTH(lkp_pmd4j_addr_lin_2_pos_1)=0,'',LTRIM(lkp_pmd4j_addr_lin_2_pos_1))\n\tIFF(lkp_pmd4j_addr_lin_2_pos_1 IS NULL \n\t\tOR LENGTH(lkp_pmd4j_addr_lin_2_pos_1)>0 AND TRIM(lkp_pmd4j_addr_lin_2_pos_1)='' \n\t\tOR LENGTH(lkp_pmd4j_addr_lin_2_pos_1\n\t\t) = 0,\n\t\t'',\n\t\tLTRIM(lkp_pmd4j_addr_lin_2_pos_1\n\t\t)\n\t) AS v_pmd4j_addr_lin_2_pos_1,\n\t-- *INF*: IIF(ISNULL(lkp_pmd4j_addr_lin_2_pos_2_30) OR IS_SPACES(lkp_pmd4j_addr_lin_2_pos_2_30) OR LENGTH(lkp_pmd4j_addr_lin_2_pos_2_30)=0,'',LTRIM(lkp_pmd4j_addr_lin_2_pos_2_30))\n\tIFF(lkp_pmd4j_addr_lin_2_pos_2_30 IS NULL \n\t\tOR LENGTH(lkp_pmd4j_addr_lin_2_pos_2_30)>0 AND TRIM(lkp_pmd4j_addr_lin_2_pos_2_30)='' \n\t\tOR LENGTH(lkp_pmd4j_addr_lin_2_pos_2_30\n\t\t) = 0,\n\t\t'',\n\t\tLTRIM(lkp_pmd4j_addr_lin_2_pos_2_30\n\t\t)\n\t) AS v_pmd4j_addr_lin_2_pos_2_30,\n\t-- *INF*: IIF(ISNULL(lkp_pmd4j_address_line_3) OR IS_SPACES(lkp_pmd4j_address_line_3) OR LENGTH(lkp_pmd4j_address_line_3)=0,'',LTRIM(lkp_pmd4j_address_line_3))\n\tIFF(lkp_pmd4j_address_line_3 IS NULL \n\t\tOR LENGTH(lkp_pmd4j_address_line_3)>0 AND TRIM(lkp_pmd4j_address_line_3)='' \n\t\tOR LENGTH(lkp_pmd4j_address_line_3\n\t\t) = 0,\n\t\t'',\n\t\tLTRIM(lkp_pmd4j_address_line_3\n\t\t)\n\t) AS v_pmd4j_address_line_3,\n\t-- *INF*: IIF(ISNULL(lkp_pmd4j_address_line_4) OR IS_SPACES(lkp_pmd4j_address_line_4) OR LENGTH(lkp_pmd4j_address_line_4)=0,'',LTRIM(lkp_pmd4j_address_line_4))\n\tIFF(lkp_pmd4j_address_line_4 IS NULL \n\t\tOR LENGTH(lkp_pmd4j_address_line_4)>0 AND TRIM(lkp_pmd4j_address_line_4)='' \n\t\tOR LENGTH(lkp_pmd4j_address_line_4\n\t\t) = 0,\n\t\t'',\n\t\tLTRIM(lkp_pmd4j_address_line_4\n\t\t)\n\t) AS v_pmd4j_address_line_4,\n\tv_pmd4j_address_line_1||v_pmd4j_addr_lin_2_pos_1||v_pmd4j_addr_lin_2_pos_2_30||v_pmd4j_address_line_3||v_pmd4j_address_line_4 AS v_FullAddress,\n\tv_pmd4j_addr_lin_2_pos_1||v_pmd4j_addr_lin_2_pos_2_30||v_pmd4j_address_line_3||v_pmd4j_address_line_4 AS v_Address_RatingCounty,\n\t-- *INF*: LTRIM(RTRIM(IIF(INSTR(v_Address_RatingCounty,',',-1,2)=0,'N/A',\r\n\t-- SUBSTR(v_Address_RatingCounty,INSTR(v_Address_RatingCounty,',',-1,2)+1, INSTR(v_Address_RatingCounty,',',-1,1)-INSTR(v_Address_RatingCounty,',',-1,2)-1))))\n\tLTRIM(RTRIM(IFF(REGEXP_INSTR(v_Address_RatingCounty, ',', - 1, 2\n\t\t\t\t) = 0,\n\t\t\t\t'N/A',\n\t\t\t\tSUBSTR(v_Address_RatingCounty, REGEXP_INSTR(v_Address_RatingCounty, ',', - 1, 2\n\t\t\t\t\t) + 1, REGEXP_INSTR(v_Address_RatingCounty, ',', - 1, 1\n\t\t\t\t\t) - REGEXP_INSTR(v_Address_RatingCounty, ',', - 1, 2\n\t\t\t\t\t) - 1\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t) AS v_RatingCounty_pif43jj,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_RatingCounty_pif43jj='ROCK ISLAND','ROCK',\r\n\t-- v_RatingCounty_pif43jj='ST LOUIS CITY','ST LOUIS',\r\n\t-- v_RatingCounty_pif43jj='SAINT LOUIS','ST LOUIS',\r\n\t-- v_RatingCounty_pif43jj='LACROSSE','LA CROSSE',\r\n\t-- v_RatingCounty_pif43jj='BLACKHAWK','BLACK HAWK',\r\n\t-- v_RatingCounty_pif43jj='OLMSTEAD','OLMSTED',\r\n\t-- v_RatingCounty_pif43jj='HENNIPEN','HENNEPIN',\r\n\t-- v_RatingCounty_pif43jj='OUTGAMIE','OUTAGAMIE',\r\n\t-- v_RatingCounty_pif43jj='MIWAUKEE','MILWAUKEE',\r\n\t-- v_RatingCounty_pif43jj='OTTERTAIL','OTTER TAIL',\r\n\t-- v_RatingCounty_pif43jj='TREMPELEAU','TREMPEALEAU',\r\n\t-- v_RatingCounty_pif43jj='WAUKEHSA','WAUKESHA',\r\n\t-- v_RatingCounty_pif43jj='SAINT CROIX','ST CROIX',\r\n\t-- IN(v_RatingCounty_pif43jj,'ADAM','ADMAS'),'ADAMS',\r\n\t-- IN(v_RatingCounty_pif43jj,'BARREN','BARRO'),'BARRON',\r\n\t-- v_RatingCounty_pif43jj\r\n\t-- )\r\n\t-- \r\n\t-- --only add several data cleansing logic here, it should have more\n\tDECODE(TRUE,\n\t\tv_RatingCounty_pif43jj = 'ROCK ISLAND', 'ROCK',\n\t\tv_RatingCounty_pif43jj = 'ST LOUIS CITY', 'ST LOUIS',\n\t\tv_RatingCounty_pif43jj = 'SAINT LOUIS', 'ST LOUIS',\n\t\tv_RatingCounty_pif43jj = 'LACROSSE', 'LA CROSSE',\n\t\tv_RatingCounty_pif43jj = 'BLACKHAWK', 'BLACK HAWK',\n\t\tv_RatingCounty_pif43jj = 'OLMSTEAD', 'OLMSTED',\n\t\tv_RatingCounty_pif43jj = 'HENNIPEN', 'HENNEPIN',\n\t\tv_RatingCounty_pif43jj = 'OUTGAMIE', 'OUTAGAMIE',\n\t\tv_RatingCounty_pif43jj = 'MIWAUKEE', 'MILWAUKEE',\n\t\tv_RatingCounty_pif43jj = 'OTTERTAIL', 'OTTER TAIL',\n\t\tv_RatingCounty_pif43jj = 'TREMPELEAU', 'TREMPEALEAU',\n\t\tv_RatingCounty_pif43jj = 'WAUKEHSA', 'WAUKESHA',\n\t\tv_RatingCounty_pif43jj = 'SAINT CROIX', 'ST CROIX',\n\t\tv_RatingCounty_pif43jj IN ('ADAM','ADMAS'), 'ADAMS',\n\t\tv_RatingCounty_pif43jj IN ('BARREN','BARRO'), 'BARRON',\n\t\tv_RatingCounty_pif43jj\n\t) AS v_RatingCounty_pif43jj_special,\n\t-- *INF*: LTRIM(RTRIM(REPLACESTR(0,v_RatingCounty_pif43jj_special,'COUNTY','.','')))\n\tLTRIM(RTRIM(REGEXP_REPLACE(v_RatingCounty_pif43jj_special,'COUNTY','.','','i')\n\t\t)\n\t) AS v_RatingCounty_pif43jj_format,\n\tLKP_SupCounty_IL_IN_KY.CountyName AS i_CountyName_IL_IN_KY,\n\t-- *INF*: UPPER(DECODE(TRUE,\r\n\t-- IN(sar_state,'12','13','16'),\r\n\t-- IIF(i_CountyName_IL_IN_KY='N/A',v_RatingCounty_pif43jj_format,i_CountyName_IL_IN_KY),\r\n\t-- v_RatingCounty_pif43jj_format\r\n\t-- ))\r\n\t-- \r\n\t-- --IL,IN,KY\n\tUPPER(DECODE(TRUE,\n\t\tsar_state IN ('12','13','16'), IFF(i_CountyName_IL_IN_KY = 'N/A',\n\t\t\t\tv_RatingCounty_pif43jj_format,\n\t\t\t\ti_CountyName_IL_IN_KY\n\t\t\t),\n\t\tv_RatingCounty_pif43jj_format\n\t\t)\n\t) AS v_RatingCounty,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_SUPCOUNTY_VALIDCHECK(sar_state,REPLACESTR(0,v_RatingCounty,' ',''))),'N/A',v_RatingCounty)\n\tIFF(LKP_SUPCOUNTY_VALIDCHECK_sar_state_REPLACESTR_0_v_RatingCounty.SupCountyId IS NULL,\n\t\t'N/A',\n\t\tv_RatingCounty\n\t) AS v_RatingCounty_ValidCheck,\n\t-- *INF*: DECODE(TRUE,REG_MATCH(v_FullAddress,'.*\\s\\s[^,]*,[^,]*,[^,]*'),REG_EXTRACT(v_FullAddress,'(.*)\\s\\s([^,]*),([^,]*),([^,]*)',1),REG_MATCH(v_FullAddress,'.*\\s\\s[^,]*,[^,]*'),REG_EXTRACT(v_FullAddress,'(.*)\\s\\s([^,]*),([^,]*)',1),v_FullAddress)\n\tDECODE(TRUE,\n\t\tREGEXP_LIKE(v_FullAddress, '.*\\s\\s[^,]*,[^,]*,[^,]*'\n\t\t), REG_EXTRACT(v_FullAddress, '(.*)\\s\\s([^,]*),([^,]*),([^,]*)', 1\n\t\t),\n\t\tREGEXP_LIKE(v_FullAddress, '.*\\s\\s[^,]*,[^,]*'\n\t\t), REG_EXTRACT(v_FullAddress, '(.*)\\s\\s([^,]*),([^,]*)', 1\n\t\t),\n\t\tv_FullAddress\n\t) AS v_AlphaStreetAddress,\n\t-- *INF*: RTRIM(REG_REPLACE( v_AlphaStreetAddress, '\\s+', ' '))\n\tRTRIM(REG_REPLACE(v_AlphaStreetAddress, '\\s+', ' '\n\t\t)\n\t) AS v_StreetAddress,\n\t-- *INF*: LTRIM(RTRIM(DECODE(TRUE,REG_MATCH(v_FullAddress,'.*\\s\\s[^,]*,[^,]*,[^,]*'),REG_EXTRACT(v_FullAddress,'(.*)\\s\\s([^,]*),([^,]*),([^,]*)',2),REG_MATCH(v_FullAddress,'.*\\s\\s[^,]*,[^,]*'),REG_EXTRACT(v_FullAddress,'(.*)\\s\\s([^,]*),([^,]*)',2),'N/A')))\n\tLTRIM(RTRIM(DECODE(TRUE,\n\t\tREGEXP_LIKE(v_FullAddress, '.*\\s\\s[^,]*,[^,]*,[^,]*'\n\t\t\t\t), REG_EXTRACT(v_FullAddress, '(.*)\\s\\s([^,]*),([^,]*),([^,]*)', 2\n\t\t\t\t),\n\t\tREGEXP_LIKE(v_FullAddress, '.*\\s\\s[^,]*,[^,]*'\n\t\t\t\t), REG_EXTRACT(v_FullAddress, '(.*)\\s\\s([^,]*),([^,]*)', 2\n\t\t\t\t),\n\t\t'N/A'\n\t\t\t)\n\t\t)\n\t) AS v_RatingCity,\n\tLKP_ISOFireProtectStage.City AS lkp_ISOFireProtectCity,\n\tLKP_ISOFireProtectStage.County AS lkp_ISOFireProtectCounty,\n\t-- *INF*: IIF(v_RatingCity='','N/A',v_RatingCity)\n\tIFF(v_RatingCity = '',\n\t\t'N/A',\n\t\tv_RatingCity\n\t) AS o_RatingCity,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_RatingCounty_ValidCheck)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(v_RatingCounty_ValidCheck\n\t) AS o_RatingCounty,\n\t-- *INF*: IIF(ISNULL(sar_code_14) OR IS_SPACES(sar_code_14) OR LENGTH(sar_code_14)=0 OR sar_state<>'16','N/A',sar_code_14)\n\tIFF(sar_code_14 IS NULL \n\t\tOR LENGTH(sar_code_14)>0 AND TRIM(sar_code_14)='' \n\t\tOR LENGTH(sar_code_14\n\t\t) = 0 \n\t\tOR sar_state <> '16',\n\t\t'N/A',\n\t\tsar_code_14\n\t) AS o_KYTaxCode,\n\t-- *INF*: IIF(v_StreetAddress='','N/A',v_StreetAddress)\n\tIFF(v_StreetAddress = '',\n\t\t'N/A',\n\t\tv_StreetAddress\n\t) AS o_StreetAddress,\n\t-- *INF*: IIF(ISNULL(lkp_ISOFireProtectCity),'N/A',ltrim(rtrim(lkp_ISOFireProtectCity)))\n\tIFF(lkp_ISOFireProtectCity IS NULL,\n\t\t'N/A',\n\t\tltrim(rtrim(lkp_ISOFireProtectCity\n\t\t\t)\n\t\t)\n\t) AS o_ISOFireProtectCity,\n\t-- *INF*: IIF(ISNULL(lkp_ISOFireProtectCounty),'N/A',ltrim(rtrim(lkp_ISOFireProtectCounty)))\n\tIFF(lkp_ISOFireProtectCounty IS NULL,\n\t\t'N/A',\n\t\tltrim(rtrim(lkp_ISOFireProtectCounty\n\t\t\t)\n\t\t)\n\t) AS o_ISOFireProtectCounty,\n\tLKP_Pif43IXZWCUnmodStage.Pmdi4w1IntrastateIdNum AS i_Pmdi4w1IntrastateIdNum,\n\t-- *INF*: IIF(ISNULL(i_Pmdi4w1IntrastateIdNum),'N/A',i_Pmdi4w1IntrastateIdNum)\n\tIFF(i_Pmdi4w1IntrastateIdNum IS NULL,\n\t\t'N/A',\n\t\ti_Pmdi4w1IntrastateIdNum\n\t) AS o_IntrastateRiskId\n\tFROM EXP_Default\n\tLEFT JOIN LKP_ISOFireProtectStage\n\tON LKP_ISOFireProtectStage.TaxLoc = EXP_Default.o_Tax_Location\n\tLEFT JOIN LKP_Pif43IXZWCUnmodStage\n\tON LKP_Pif43IXZWCUnmodStage.PifSymbol = EXP_Default.pif_symbol AND LKP_Pif43IXZWCUnmodStage.PifPolicyNumber = EXP_Default.pif_policy_number AND LKP_Pif43IXZWCUnmodStage.PifModule = EXP_Default.pif_module AND LKP_Pif43IXZWCUnmodStage.pif_risk_state_prov = EXP_Default.o_sar_state\n\tLEFT JOIN LKP_Policy_PolicyAKID\n\tON LKP_Policy_PolicyAKID.pol_key = EXP_Default.Policy_Key\n\tLEFT JOIN LKP_SupCounty_IL_IN_KY\n\tON LKP_SupCounty_IL_IN_KY.TaxLocationCountyCode = EXP_Default.o_Tax_Location_1_2 AND LKP_SupCounty_IL_IN_KY.StateAbbreviation = EXP_Default.o_sar_state\n\tLEFT JOIN LKP_pif_43jj_stage\n\tON LKP_pif_43jj_stage.pif_symbol = EXP_Default.pif_symbol AND LKP_pif_43jj_stage.pif_policy_number = EXP_Default.pif_policy_number AND LKP_pif_43jj_stage.pif_module = EXP_Default.pif_module AND LKP_pif_43jj_stage.pmd4j_location_number = EXP_Default.sar_location_x\n\tLEFT JOIN LKP_SUPCOUNTY_VALIDCHECK LKP_SUPCOUNTY_VALIDCHECK_sar_state_REPLACESTR_0_v_RatingCounty\n\tON LKP_SUPCOUNTY_VALIDCHECK_sar_state_REPLACESTR_0_v_RatingCounty.StateAbbreviation = sar_state\n\tAND LKP_SUPCOUNTY_VALIDCHECK_sar_state_REPLACESTR_0_v_RatingCounty.CountyName = REGEXP_REPLACE(v_RatingCounty,' ','','i')\n\n),\nLKP_RiskLocation_RiskLocationAKID AS (\n\tSELECT\n\tRiskLocationAKID,\n\tRiskLocationID,\n\tCurrentSnapshotFlag,\n\tPolicyAKID,\n\tLocationUnitNumber,\n\tRiskTerritory,\n\tStateProvinceCode,\n\tZipPostalCode,\n\tTaxLocation\n\tFROM (\n\t\tSELECT RiskLocationAKID   AS RiskLocationAKID,\r\n\t\t       PolicyAKID         AS PolicyAKID,\r\n\t\tLOC.RiskLocationID as RiskLocationID,\r\n\t\tLOC.CurrentSnapshotFlag AS CurrentSnapshotFlag,\r\n\t\t       LTRIM(RTRIM(LocationUnitNumber)) AS LocationUnitNumber,\r\n\t\t       LTRIM(RTRIM(RiskTerritory))      AS RiskTerritory,\r\n\t\t       LTRIM(RTRIM(StateProvinceCode))  AS StateProvinceCode,\r\n\t\t       LTRIM(RTRIM(ZipPostalCode))      AS ZipPostalCode,\r\n\t\t       LTRIM(RTRIM(TaxLocation))        AS TaxLocation\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC\r\n\t\tINNER JOIN  @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL\r\n\t\tON\tLOC.PolicyAKID = POL.pol_ak_id\r\n\t\tWHERE POL.crrnt_snpsht_flag = 1 AND LOC.CurrentSnapshotFlag =1\r\n\t\t       AND POL.SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t       AND  EXISTS  (SELECT DISTINCT PolicyKey FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPolicyKeyList\r\n\t\t\t\t\t\t\t\t\tWHERE POL.pol_key = PolicyKey AND @{pipeline().parameters.WHERE_CLAUSE_EDW})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,LocationUnitNumber,RiskTerritory,StateProvinceCode,ZipPostalCode,TaxLocation ORDER BY RiskLocationAKID DESC) = 1\n),\nLKP_Sup_State AS (\n\tSELECT\n\tsup_state_id,\n\tstate_abbrev\n\tFROM (\n\t\tSELECT \n\t\t\tsup_state_id,\n\t\t\tstate_abbrev\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE source_sys_id = 'EXCEED' AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_abbrev ORDER BY sup_state_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_RiskLocation_RiskLocationAKID.RiskLocationID,\n\tLKP_RiskLocation_RiskLocationAKID.CurrentSnapshotFlag AS LKP_CurrentSnapshotFlag,\n\t-- *INF*: Decode(LKP_CurrentSnapshotFlag,'T','1','F','0',LKP_CurrentSnapshotFlag)\n\tDecode(LKP_CurrentSnapshotFlag,\n\t\t'T', '1',\n\t\t'F', '0',\n\t\tLKP_CurrentSnapshotFlag\n\t) AS v_LKP_CurrentSnapshotFlag,\n\tLKP_RiskLocation_RiskLocationAKID.RiskLocationAKID,\n\tEXP_Values.pol_ak_id,\n\tEXP_Values.RiskLocation_Unit,\n\tEXP_Values.sar_state_out AS sar_state,\n\tEXP_Values.sar_loc_prov_territory_Out AS sar_loc_prov_territory,\n\tEXP_Values.Tax_Location_out AS Tax_Location,\n\tEXP_Values.sar_zip_postal_code_Out AS sar_zip_postal_code,\n\tEXP_Values.logicalIndicator,\n\tEXP_Values.RiskLocationKey,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t-- *INF*: IIF(ISNULL(RiskLocationAKID) , 'NEW',IIF(v_LKP_CurrentSnapshotFlag='0','REACTIVATE','EXISTS'))\r\n\t-- \r\n\t-- \r\n\t-- --IIF(ISNULL(RiskLocationAKID) OR (NOT ISNULL(RiskLocationAKID) and v_LKP_CurrentSnapshotFlag='0'), 'NEW','EXISTS')\n\tIFF(RiskLocationAKID IS NULL,\n\t\t'NEW',\n\t\tIFF(v_LKP_CurrentSnapshotFlag = '0',\n\t\t\t'REACTIVATE',\n\t\t\t'EXISTS'\n\t\t)\n\t) AS Changed_Flag,\n\tEXP_Values.locationIndicator,\n\tLKP_Sup_State.sup_state_id,\n\tEXP_Values.o_RatingCity AS RatingCity,\n\tEXP_Values.o_RatingCounty AS RatingCounty,\n\tEXP_Values.o_KYTaxCode AS KYTaxCode,\n\tEXP_Values.o_StreetAddress AS StreetAddress,\n\t-- *INF*: MD5(StreetAddress||RatingCity||sar_state||sar_zip_postal_code||Tax_Location)\n\tMD5(StreetAddress || RatingCity || sar_state || sar_zip_postal_code || Tax_Location\n\t) AS o_RiskLocationHashKey,\n\tEXP_Values.o_ISOFireProtectCity AS ISOFireProtectCity,\n\tEXP_Values.o_ISOFireProtectCounty AS ISOFireProtectCounty,\n\tEXP_Values.o_IntrastateRiskId AS IntrastateRiskId\n\tFROM EXP_Values\n\tLEFT JOIN LKP_RiskLocation_RiskLocationAKID\n\tON LKP_RiskLocation_RiskLocationAKID.PolicyAKID = EXP_Values.pol_ak_id AND LKP_RiskLocation_RiskLocationAKID.LocationUnitNumber = EXP_Values.RiskLocation_Unit AND LKP_RiskLocation_RiskLocationAKID.RiskTerritory = EXP_Values.sar_loc_prov_territory_Out AND LKP_RiskLocation_RiskLocationAKID.StateProvinceCode = EXP_Values.sar_state_out AND LKP_RiskLocation_RiskLocationAKID.ZipPostalCode = EXP_Values.sar_zip_postal_code_Out AND LKP_RiskLocation_RiskLocationAKID.TaxLocation = EXP_Values.Tax_Location_out\n\tLEFT JOIN LKP_Sup_State\n\tON LKP_Sup_State.state_abbrev = EXP_Values.sar_state_out\n),\nRTR_New_ReActivate_Exists AS (\n\tSELECT\n\tRiskLocationID,\n\tRiskLocationAKID,\n\tpol_ak_id,\n\tRiskLocation_Unit,\n\tsar_state,\n\tsar_loc_prov_territory,\n\tTax_Location,\n\tsar_zip_postal_code,\n\tlogicalIndicator,\n\tRiskLocationKey,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tChanged_Flag,\n\tlocationIndicator,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tKYTaxCode,\n\tStreetAddress,\n\to_RiskLocationHashKey,\n\tISOFireProtectCity,\n\tISOFireProtectCounty,\n\tIntrastateRiskId\n\tFROM EXP_Detect_Changes\n),\nRTR_New_ReActivate_Exists_New AS (SELECT * FROM RTR_New_ReActivate_Exists WHERE Changed_Flag='NEW'),\nRTR_New_ReActivate_Exists_ReActivate AS (SELECT * FROM RTR_New_ReActivate_Exists WHERE Changed_Flag='REACTIVATE'),\nRTR_New_ReActivate_Exists_Exists AS (SELECT * FROM RTR_New_ReActivate_Exists WHERE Changed_Flag='EXISTS'),\nEXP_Update_DataCollect AS (\n\tSELECT\n\tRiskLocationID,\n\t'1' AS CurrentSnapshotFlag,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS ExpirationDate\n\tFROM RTR_New_ReActivate_Exists_ReActivate\n),\nUPD_RiskLocation AS (\n\tSELECT\n\tRiskLocationID, \n\tCurrentSnapshotFlag, \n\tExpirationDate\n\tFROM EXP_Update_DataCollect\n),\nTGT_RiskLocation_Update AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'dbo', @TableName = 'RiskLocation', @IndexWildcard = 'Ak1RiskLocation'\n\t-------------------------------\n\n\n\tMERGE INTO RiskLocation AS T\n\tUSING UPD_RiskLocation AS S\n\tON T.RiskLocationID = S.RiskLocationID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'dbo', @TableName = 'RiskLocation', @IndexWildcard = 'Ak1RiskLocation'\n\t-------------------------------\n\n\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tRiskLocationAKID,\n\tpol_ak_id,\n\tRiskLocation_Unit,\n\tsar_state,\n\tsar_loc_prov_territory AS sar_loc_prov_territory_Out,\n\tTax_Location AS Tax_Location_Out,\n\tsar_zip_postal_code AS sar_zip_postal_code_Out,\n\tlogicalIndicator,\n\tRiskLocationKey,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tlocationIndicator,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tKYTaxCode,\n\tStreetAddress,\n\to_RiskLocationHashKey AS RiskLocationHashKey,\n\tISOFireProtectCity,\n\tISOFireProtectCounty,\n\tIntrastateRiskId\n\tFROM RTR_New_ReActivate_Exists_New\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id, RiskLocation_Unit, sar_state, sar_loc_prov_territory_Out, Tax_Location_Out, sar_zip_postal_code_Out, KYTaxCode ORDER BY NULL) = 1\n),\nSEQ_RiskLocationAKID AS (\n\tCREATE SEQUENCE SEQ_RiskLocationAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tSEQ_RiskLocationAKID.NEXTVAL,\n\tNEXTVAL AS RiskLocationAKID_Out,\n\tpol_ak_id,\n\tRiskLocation_Unit,\n\tsar_state,\n\tsar_loc_prov_territory_Out,\n\tTax_Location_Out,\n\tsar_zip_postal_code_Out,\n\tlogicalIndicator,\n\tRiskLocationKey,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tlocationIndicator,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tKYTaxCode,\n\tStreetAddress,\n\tRiskLocationHashKey,\n\tISOFireProtectCity,\n\tISOFireProtectCounty,\n\tIntrastateRiskId\n\tFROM AGG_RemoveDuplicates\n),\nTGT_RiskLocation_Insert AS (\n\n\t------------ PRE SQL ----------\n\texec [spSetIndexStatus] @Enable = 0, @Schema = 'dbo', @TableName = 'RiskLocation', @IndexWildcard = 'Ak1RiskLocation'\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RiskLocationAKID, PolicyAKID, RiskLocationKey, LocationUnitNumber, LocationIndicator, RiskTerritory, StateProvinceCode, ZipPostalCode, TaxLocation, sup_state_id, RatingCity, RatingCounty, TaxCode, RiskLocationHashKey, StreetAddress, ISOFireProtectCity, ISOFireProtectCounty, IntrastateRiskId)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tlogicalIndicator AS LOGICALINDICATOR, \n\tRiskLocationAKID_Out AS RISKLOCATIONAKID, \n\tpol_ak_id AS POLICYAKID, \n\tRISKLOCATIONKEY, \n\tRiskLocation_Unit AS LOCATIONUNITNUMBER, \n\tlocationIndicator AS LOCATIONINDICATOR, \n\tsar_loc_prov_territory_Out AS RISKTERRITORY, \n\tsar_state AS STATEPROVINCECODE, \n\tsar_zip_postal_code_Out AS ZIPPOSTALCODE, \n\tTax_Location_Out AS TAXLOCATION, \n\tSUP_STATE_ID, \n\tRATINGCITY, \n\tRATINGCOUNTY, \n\tKYTaxCode AS TAXCODE, \n\tRISKLOCATIONHASHKEY, \n\tSTREETADDRESS, \n\tISOFIREPROTECTCITY, \n\tISOFIREPROTECTCOUNTY, \n\tINTRASTATERISKID\n\tFROM EXP_Detemine_AK_ID\n\n\t------------ POST SQL ----------\n\texec [spSetIndexStatus] @Enable = 1, @Schema = 'dbo', @TableName = 'RiskLocation', @IndexWildcard = 'Ak1RiskLocation'\n\t-------------------------------\n\n\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604216"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "JOIN_CONDITION": {
                "type": "string",
                "defaultValue": "INNER JOIN"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_TABLE_NAME_4514": {
                "type": "string",
                "defaultValue": "pif_4514_stage"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "AND 1=1"
            },
            "WHERE_CLAUSE_EDW": {
                "type": "string",
                "defaultValue": "1=1"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}