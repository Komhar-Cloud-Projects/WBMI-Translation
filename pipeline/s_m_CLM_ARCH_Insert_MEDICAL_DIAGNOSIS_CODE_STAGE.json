{
    "name": "s_m_CLM_ARCH_Insert_MEDICAL_DIAGNOSIS_CODE_STAGE",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_ARCH_Insert_MEDICAL_DIAGNOSIS_CODE_STAGE",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_MedicalDiagnosisCodeStage AS (\n\tSELECT \r\n\tM.MedicalDiagnosisCodeStageId, \r\n\tM.code, \r\n\tM.short_descript, \r\n\tM.long_descript, \r\n\tM.med_class_code_type_id, \r\n\tM.ExtractDate, \r\n\tM.SourceSystemId\r\n\t \r\n\tFROM\r\n\t MedicalDiagnosisCodeStage M\n),\nEXP_Src_Value AS (\n\tSELECT\n\tMedicalDiagnosisCodeStageId,\n\tcode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(code),'N/A',\r\n\t-- IS_SPACES(code),'N/A',\r\n\t-- LENGTH(code)=0,'N/A',\r\n\t-- LTRIM(RTRIM(code)))\n\tDECODE(\n\t    TRUE,\n\t    code IS NULL, 'N/A',\n\t    LENGTH(code)>0 AND TRIM(code)='', 'N/A',\n\t    LENGTH(code) = 0, 'N/A',\n\t    LTRIM(RTRIM(code))\n\t) AS o_code,\n\tshort_descript,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(short_descript),'N/A',\r\n\t-- IS_SPACES(short_descript),'N/A',\r\n\t-- LENGTH(short_descript)=0,'N/A',\r\n\t-- LTRIM(RTRIM(short_descript)))\n\tDECODE(\n\t    TRUE,\n\t    short_descript IS NULL, 'N/A',\n\t    LENGTH(short_descript)>0 AND TRIM(short_descript)='', 'N/A',\n\t    LENGTH(short_descript) = 0, 'N/A',\n\t    LTRIM(RTRIM(short_descript))\n\t) AS o_short_descript,\n\tlong_descript,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(long_descript),'N/A',\r\n\t-- IS_SPACES(long_descript),'N/A',\r\n\t-- LENGTH(long_descript)=0,'N/A',\r\n\t-- LTRIM(RTRIM(long_descript)))\n\tDECODE(\n\t    TRUE,\n\t    long_descript IS NULL, 'N/A',\n\t    LENGTH(long_descript)>0 AND TRIM(long_descript)='', 'N/A',\n\t    LENGTH(long_descript) = 0, 'N/A',\n\t    LTRIM(RTRIM(long_descript))\n\t) AS o_long_descript,\n\tmed_class_code_type_id,\n\tExtractDate,\n\tSourceSystemId\n\tFROM SQ_MedicalDiagnosisCodeStage\n),\nLKP_ArchMedicalDiagnosisCodeStage_Target AS (\n\tSELECT\n\tArchMedicalDiagnosisCodeStageId,\n\tMedicalDiagnosisCodeStageId,\n\tcode,\n\tshort_descript,\n\tlong_descript,\n\tmed_class_code_type_id\n\tFROM (\n\t\tSELECT \n\t\t\tArchMedicalDiagnosisCodeStageId,\n\t\t\tMedicalDiagnosisCodeStageId,\n\t\t\tcode,\n\t\t\tshort_descript,\n\t\t\tlong_descript,\n\t\t\tmed_class_code_type_id\n\t\tFROM ArchMedicalDiagnosisCodeStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY MedicalDiagnosisCodeStageId ORDER BY ArchMedicalDiagnosisCodeStageId) = 1\n),\nEXP_MedicalDiagnosisCodeStage AS (\n\tSELECT\n\tLKP_ArchMedicalDiagnosisCodeStage_Target.ArchMedicalDiagnosisCodeStageId AS Lkp_ArchMedicalDiagnosisCodeStageId,\n\tLKP_ArchMedicalDiagnosisCodeStage_Target.MedicalDiagnosisCodeStageId AS Lkp_MedicalDiagnosisCodeStageId,\n\tLKP_ArchMedicalDiagnosisCodeStage_Target.code AS Lkp_code,\n\tLKP_ArchMedicalDiagnosisCodeStage_Target.short_descript AS Lkp_short_descript,\n\tLKP_ArchMedicalDiagnosisCodeStage_Target.long_descript AS Lkp_long_descript,\n\tEXP_Src_Value.MedicalDiagnosisCodeStageId,\n\tEXP_Src_Value.o_code AS code,\n\t-- *INF*: ltrim(rtrim(code))\n\tltrim(rtrim(code)) AS o_code,\n\tEXP_Src_Value.o_short_descript AS short_descript,\n\t-- *INF*: ltrim(rtrim(short_descript))\n\tltrim(rtrim(short_descript)) AS o_short_descript,\n\tEXP_Src_Value.o_long_descript AS long_descript,\n\t-- *INF*: ltrim(rtrim(long_descript))\n\tltrim(rtrim(long_descript)) AS o_long_descript,\n\tEXP_Src_Value.med_class_code_type_id,\n\t-- *INF*: iif(isnull(Lkp_ArchMedicalDiagnosisCodeStageId), 'NEW',\r\n\t-- \r\n\t--    iif(\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_code)) != ltrim(rtrim(code))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_short_descript)) != ltrim(rtrim(short_descript))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_long_descript)) != ltrim(rtrim(long_descript))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--     ltrim(rtrim(Lkp_MedicalDiagnosisCodeStageId)) != ltrim(rtrim(MedicalDiagnosisCodeStageId)),\r\n\t-- \r\n\t--    'UPDATE', 'NOCHANGE')\r\n\t-- \r\n\t--    )\n\tIFF(\n\t    Lkp_ArchMedicalDiagnosisCodeStageId IS NULL, 'NEW',\n\t    IFF(\n\t        ltrim(rtrim(Lkp_code)) != ltrim(rtrim(code))\n\t        or ltrim(rtrim(Lkp_short_descript)) != ltrim(rtrim(short_descript))\n\t        or ltrim(rtrim(Lkp_long_descript)) != ltrim(rtrim(long_descript))\n\t        or ltrim(rtrim(Lkp_MedicalDiagnosisCodeStageId)) != ltrim(rtrim(MedicalDiagnosisCodeStageId)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_Changed_Flag,\n\tv_Changed_Flag AS Changed_Flag,\n\tEXP_Src_Value.ExtractDate,\n\tEXP_Src_Value.SourceSystemId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId\n\tFROM EXP_Src_Value\n\tLEFT JOIN LKP_ArchMedicalDiagnosisCodeStage_Target\n\tON LKP_ArchMedicalDiagnosisCodeStage_Target.MedicalDiagnosisCodeStageId = EXP_Src_Value.MedicalDiagnosisCodeStageId\n),\nFIL_ArchMedicalDiagnosisCodeStage AS (\n\tSELECT\n\tChanged_Flag, \n\tMedicalDiagnosisCodeStageId, \n\to_code, \n\to_short_descript, \n\to_long_descript, \n\tmed_class_code_type_id, \n\tExtractDate, \n\tSourceSystemId, \n\to_AuditId\n\tFROM EXP_MedicalDiagnosisCodeStage\n\tWHERE Changed_Flag = 'NEW' or Changed_Flag = 'UPDATE'\n),\nArchMedicalDiagnosisCodeStage AS (\n\tINSERT INTO ArchMedicalDiagnosisCodeStage\n\t(MedicalDiagnosisCodeStageId, code, short_descript, long_descript, med_class_code_type_id, ExtractDate, SourceSystemId, AuditId)\n\tSELECT \n\tMEDICALDIAGNOSISCODESTAGEID, \n\to_code AS CODE, \n\to_short_descript AS SHORT_DESCRIPT, \n\to_long_descript AS LONG_DESCRIPT, \n\tMED_CLASS_CODE_TYPE_ID, \n\tEXTRACTDATE, \n\tSOURCESYSTEMID, \n\to_AuditId AS AUDITID\n\tFROM FIL_ArchMedicalDiagnosisCodeStage\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/ClaimsStaging/"
        },
        "annotations": []
    }
}