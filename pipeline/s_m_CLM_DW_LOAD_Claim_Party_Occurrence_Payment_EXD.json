{
    "name": "s_m_CLM_DW_LOAD_Claim_Party_Occurrence_Payment_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Party_Occurrence_Payment_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_DRAFT_STAGE AS (\n\tSELECT \r\n\tLTRIM(RTRIM(CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR)),\r\n\tLTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_CLAIM_NBR)), \r\n\tLTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_SEQ_NBR)), \r\n\tLTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_NAME_TYPE_IND)),\r\n\tLTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_PAYEE_NM_ID))\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_DRAFT_STAGE, @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_DRAFT_CLIENT_STAGE\r\n\tWHERE \r\n\tLTRIM(RTRIM(CLAIM_DRAFT_STAGE.DFT_CLAIM_NBR)) =  LTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_CLAIM_NBR)) AND\r\n\tLTRIM(RTRIM(CLAIM_DRAFT_STAGE.DFT_DRAFT_NBR)) =  LTRIM(RTRIM(CLAIM_DRAFT_CLIENT_STAGE.CDC_DRAFT_NBR))\n),\nEXPTRANS AS (\n\tSELECT\n\tDFT_DRAFT_NBR,\n\tCDC_NAME_TYPE_IND,\n\tCDC_PAYEE_NM_ID,\n\tCDC_SEQ_NBR,\n\tCDC_CLAIM_NBR,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t'EXCEED' AS source_sys_id,\n\tSYSDATE AS created_date\n\tFROM SQ_CLAIM_DRAFT_STAGE\n),\nLKP_CLAIM_PAY_AK_ID AS (\n\tSELECT\n\tclaim_pay_ak_id,\n\tclaim_pay_num,\n\tIN_claim_pay_num\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_payment.claim_pay_ak_id as claim_pay_ak_id, \r\n\t\tRTRIM(claim_payment.claim_pay_num) as claim_pay_num \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_payment claim_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_num ORDER BY claim_pay_ak_id) = 1\n),\nLKP_CLAIM_TRANSACTION AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_pay_ak_id,\n\tIN_claim_pay_ak_id\n\tFROM (\n\t\tSELECT claim_transaction.claimant_cov_det_ak_id as claimant_cov_det_ak_id, claim_transaction.claim_pay_ak_id as claim_pay_ak_id FROM claim_transaction\r\n\t\twhere source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_ak_id ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_CLAIMANT_COV_DETAIL AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\tIN_claimant_cov_det_ak_id\n\tFROM (\n\t\tSELECT claimant_coverage_detail.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, claimant_coverage_detail.claimant_cov_det_ak_id as claimant_cov_det_ak_id FROM claimant_coverage_detail\r\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_CLAIM_PARTY_OCC_AK_ID AS (\n\tSELECT\n\tclaim_party_key,\n\tin_claim_party_key,\n\tclaim_occurrence_key,\n\tin_claim_occurrence_key,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party_occurrence.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, claim_party.claim_party_key as claim_party_key, \r\n\t\tclaim_occurrence.claim_occurrence_key as claim_occurrence_key \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party claim_party,\r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence claim_occurrence, \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence claim_party_occurrence\r\n\t\tWHERE\r\n\t\tclaim_occurrence.CLAIM_OCCURRENCE_AK_ID = claim_party_occurrence.CLAIM_OCCURRENCE_AK_ID AND\r\n\t\tclaim_party_occurrence.CLAIM_PARTY_AK_ID = claim_party.CLAIM_PARTY_AK_ID AND\r\n\t\tclaim_occurrence.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key,claim_occurrence_key ORDER BY claim_party_key) = 1\n),\nEXP_get_CPO_ID AS (\n\tSELECT\n\tLKP_CLAIM_PARTY_OCC_AK_ID.claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id_cpo,\n\tLKP_CLAIMANT_COV_DETAIL.claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id_ccd,\n\t-- *INF*: IIF(ISNULL(claim_party_occurrence_ak_id_cpo), claim_party_occurrence_ak_id_ccd, claim_party_occurrence_ak_id_cpo)\n\tIFF(claim_party_occurrence_ak_id_cpo IS NULL, claim_party_occurrence_ak_id_ccd, claim_party_occurrence_ak_id_cpo) AS CLAIM_PARTY_OCCURRENCE_AK_ID_OUT\n\tFROM \n\tLEFT JOIN LKP_CLAIMANT_COV_DETAIL\n\tON LKP_CLAIMANT_COV_DETAIL.claimant_cov_det_ak_id = LKP_CLAIM_TRANSACTION.claimant_cov_det_ak_id\n\tLEFT JOIN LKP_CLAIM_PARTY_OCC_AK_ID\n\tON LKP_CLAIM_PARTY_OCC_AK_ID.claim_party_key = EXPTRANS.CDC_PAYEE_NM_ID AND LKP_CLAIM_PARTY_OCC_AK_ID.claim_occurrence_key = EXPTRANS.CDC_CLAIM_NBR\n),\nLKP_CLAIM_PARTY_OCCURRENCE_PAYMENT AS (\n\tSELECT\n\tclaim_party_occurrence_pay_id,\n\tclaim_pay_ak_id,\n\tclaim_party_occurrence_ak_id,\n\tpayee_code\n\tFROM (\n\t\tSELECT \r\n\t\tclaim_party_occurrence_payment.claim_party_occurrence_pay_id as claim_party_occurrence_pay_id,\r\n\t\tLTRIM(RTRIM(claim_party_occurrence_payment.payee_code)) as payee_code, \r\n\t\tclaim_party_occurrence_payment.claim_pay_ak_id as claim_pay_ak_id, \r\n\t\tclaim_party_occurrence_payment.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence_payment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_pay_ak_id,claim_party_occurrence_ak_id,payee_code ORDER BY claim_party_occurrence_pay_id) = 1\n),\nRTRTRANS AS (\n\tSELECT\n\tLKP_CLAIM_PAY_AK_ID.claim_pay_ak_id,\n\tEXP_get_CPO_ID.CLAIM_PARTY_OCCURRENCE_AK_ID_OUT AS claim_party_occurrence_ak_id,\n\tEXPTRANS.CDC_NAME_TYPE_IND,\n\tEXPTRANS.CDC_PAYEE_NM_ID,\n\tEXPTRANS.CDC_SEQ_NBR,\n\tEXPTRANS.crrnt_snpsht_flag,\n\tEXPTRANS.audit_id,\n\tEXPTRANS.eff_from_date,\n\tEXPTRANS.eff_to_date,\n\tEXPTRANS.source_sys_id,\n\tEXPTRANS.created_date,\n\tLKP_CLAIM_PARTY_OCCURRENCE_PAYMENT.claim_party_occurrence_pay_id AS exists_claim_party_occurrence_pay_id\n\tFROM EXPTRANS\n\t -- Manually join with EXP_get_CPO_ID\n\tLEFT JOIN LKP_CLAIM_PARTY_OCCURRENCE_PAYMENT\n\tON LKP_CLAIM_PARTY_OCCURRENCE_PAYMENT.claim_pay_ak_id = LKP_CLAIM_PAY_AK_ID.claim_pay_ak_id AND LKP_CLAIM_PARTY_OCCURRENCE_PAYMENT.claim_party_occurrence_ak_id = EXP_get_CPO_ID.CLAIM_PARTY_OCCURRENCE_AK_ID_OUT AND LKP_CLAIM_PARTY_OCCURRENCE_PAYMENT.payee_code = EXPTRANS.CDC_PAYEE_NM_ID\n\tLEFT JOIN LKP_CLAIM_PAY_AK_ID\n\tON LKP_CLAIM_PAY_AK_ID.claim_pay_num = EXPTRANS.DFT_DRAFT_NBR\n),\nRTRTRANS_INSERT AS (SELECT * FROM RTRTRANS WHERE ISNULL(exists_claim_party_occurrence_pay_id)),\nRTRTRANS_DEFAULT1 AS (SELECT * FROM RTRTRANS WHERE NOT ( (ISNULL(exists_claim_party_occurrence_pay_id)) )),\nUPD_CLAIM_PARTY_OCC_PMT AS (\n\tSELECT\n\texists_claim_party_occurrence_pay_id AS exists_claim_party_occurrence_pay_id2, \n\tclaim_pay_ak_id AS claim_pay_ak_id2, \n\tclaim_party_occurrence_ak_id AS claim_party_occurrence_ak_id2, \n\tCDC_NAME_TYPE_IND AS CDC_NAME_TYPE_IND2, \n\tCDC_PAYEE_NM_ID AS CDC_PAYEE_NM_ID2, \n\tCDC_SEQ_NBR AS CDC_SEQ_NBR2, \n\taudit_id AS audit_id2, \n\tcreated_date AS created_date2\n\tFROM RTRTRANS_DEFAULT1\n),\nclaim_party_occurrence_payment_update AS (\n\tMERGE INTO claim_party_occurrence_payment AS T\n\tUSING UPD_CLAIM_PARTY_OCC_PMT AS S\n\tON T.claim_party_occurrence_pay_id = S.exists_claim_party_occurrence_pay_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.claim_pay_ak_id = S.claim_pay_ak_id2, T.claim_party_occurrence_ak_id = S.claim_party_occurrence_ak_id2, T.payee_type = S.CDC_NAME_TYPE_IND2, T.payee_code = S.CDC_PAYEE_NM_ID2, T.claim_payee_seq_num = S.CDC_SEQ_NBR2, T.audit_id = S.audit_id2, T.modified_date = S.created_date2\n),\nSEQ_Claim_Party_Occurrence_Payment_AK AS (\n\tCREATE SEQUENCE SEQ_Claim_Party_Occurrence_Payment_AK\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaim_party_occurrence_payment_insert AS (\n\tINSERT INTO claim_party_occurrence_payment\n\t(claim_party_occurrence_pay_ak_id, claim_pay_ak_id, claim_party_occurrence_ak_id, payee_type, payee_code, claim_payee_seq_num, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Claim_Party_Occurrence_Payment_AK.NEXTVAL AS CLAIM_PARTY_OCCURRENCE_PAY_AK_ID, \n\tCLAIM_PAY_AK_ID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tCDC_NAME_TYPE_IND AS PAYEE_TYPE, \n\tCDC_PAYEE_NM_ID AS PAYEE_CODE, \n\tCDC_SEQ_NBR AS CLAIM_PAYEE_SEQ_NUM, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tcreated_date AS MODIFIED_DATE\n\tFROM RTRTRANS_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}