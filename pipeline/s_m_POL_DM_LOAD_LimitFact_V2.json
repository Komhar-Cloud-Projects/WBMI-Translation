{
    "name": "s_m_POL_DM_LOAD_LimitFact_V2",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_LimitFact_V2",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_InsuranceReferenceCoverageDim_DCT AS (\n\tSELECT\n\tInsuranceReferenceCoverageDimId,\n\tInsuranceLineCode,\n\tDctRiskTypeCode,\n\tDctCoverageTypeCode,\n\tDctPerilGroup,\n\tDctSubCoverageTypeCode,\n\tDctCoverageVersion\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\tInsuranceLineCode,\n\t\t\tDctRiskTypeCode,\n\t\t\tDctCoverageTypeCode,\n\t\t\tDctPerilGroup,\n\t\t\tDctSubCoverageTypeCode,\n\t\t\tDctCoverageVersion\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceCoverageDim\n\t\tWHERE NOT (DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctRiskTypeCode,DctCoverageTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY InsuranceReferenceCoverageDimId) = 1\n),\nLKP_RatingPlan AS (\n\tSELECT\n\tRatingPlanCode,\n\tRatingPlanAKId\n\tFROM (\n\t\tSELECT \n\t\t\tRatingPlanCode,\n\t\t\tRatingPlanAKId\n\t\tFROM RatingPlan\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingPlanAKId ORDER BY RatingPlanCode) = 1\n),\nLKP_InsuranceReferenceLegalEntity AS (\n\tSELECT\n\tInsuranceReferenceLegalEntityCode,\n\tStrategicProfitCenterAKId\n\tFROM (\n\t\tSELECT IRLE.InsuranceReferenceLegalEntityCode as InsuranceReferenceLegalEntityCode, \r\n\t\tSPC.StrategicProfitCenterAKId as StrategicProfitCenterAKId \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLegalEntity IRLE\r\n\t\ton SPC.InsuranceReferenceLegalEntityId=IRLE.InsuranceReferenceLegalEntityId \r\n\t\tand SPC.CurrentSnapshotFlag=1 and IRLE.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAKId ORDER BY InsuranceReferenceLegalEntityCode) = 1\n),\nLKP_InsuranceSegment AS (\n\tSELECT\n\tInsuranceSegmentCode,\n\tInsuranceSegmentAKId\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceSegmentCode,\n\t\t\tInsuranceSegmentAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentAKId ORDER BY InsuranceSegmentCode) = 1\n),\nLKP_PolicyOffering AS (\n\tSELECT\n\tPolicyOfferingCode,\n\tPolicyOfferingAKId\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyOfferingCode,\n\t\t\tPolicyOfferingAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOfferingAKId ORDER BY PolicyOfferingCode) = 1\n),\nLKP_StrategicProfitCenter AS (\n\tSELECT\n\tStrategicProfitCenterCode,\n\tStrategicProfitCenterAKId\n\tFROM (\n\t\tSELECT \n\t\t\tStrategicProfitCenterCode,\n\t\t\tStrategicProfitCenterAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAKId ORDER BY StrategicProfitCenterCode) = 1\n),\nLKP_Product AS (\n\tSELECT\n\tProductCode,\n\tProductAKId\n\tFROM (\n\t\tSELECT \n\t\t\tProductCode,\n\t\t\tProductAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Product\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProductAKId ORDER BY ProductCode) = 1\n),\nLKP_InsuranceReferenceLineOfBusiness AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessCode,\n\tInsuranceReferenceLineOfBusinessAKId\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\tInsuranceReferenceLineOfBusinessAKId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceReferenceLineOfBusinessAKId ORDER BY InsuranceReferenceLineOfBusinessCode) = 1\n),\nLKP_InsuranceReferenceCoverageDim_PMS AS (\n\tSELECT\n\tInsuranceReferenceCoverageDimId,\n\tInsuranceLineCode,\n\tPmsRiskUnitGroupCode,\n\tPmsRiskUnitCode,\n\tPmsMajorPerilCode,\n\tPmsProductTypeCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\tInsuranceLineCode,\n\t\t\tPmsRiskUnitGroupCode,\n\t\t\tPmsRiskUnitCode,\n\t\t\tPmsMajorPerilCode,\n\t\t\tPmsProductTypeCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceCoverageDim\n\t\tWHERE DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,PmsRiskUnitGroupCode,PmsRiskUnitCode,PmsMajorPerilCode,PmsProductTypeCode ORDER BY InsuranceReferenceCoverageDimId) = 1\n),\nlkp_Calender_Dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id DESC) = 1\n),\nLKP_EnterpriseGroup AS (\n\tSELECT\n\tEnterpriseGroupCode,\n\tStrategicProfitCenterAKId\n\tFROM (\n\t\tSELECT EG.EnterpriseGroupCode as EnterpriseGroupCode, \r\n\t\tSPC.StrategicProfitCenterAKId as StrategicProfitCenterAKId \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.EnterpriseGroup EG\r\n\t\ton SPC.EnterpriseGroupID=EG.EnterpriseGroupID and EG.CurrentSnapshotFlag=1 and SPC.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAKId ORDER BY EnterpriseGroupCode) = 1\n),\nSQ_PremiumTransaction_Tables AS (\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\t'N/A' AS RiskUnitGroup,\r\n\t\t'N/A' AS RiskUnit,\r\n\t\t'N/A' AS RiskUnitSequenceNumber,\r\n\t\t'N/A' AS MajorPerilCode,\r\n\t\t'N/A' AS ClassCode,\r\n\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tRC.RiskType,\r\n\t\tRC.CoverageType,\r\n\t\tRC.PerilGroup AS PerilGroup,\r\n\t\tRC.SubCoverageTypeCode AS SubCoverageTypeCode,\r\n\t\tRC.CoverageVersion AS CoverageVersion,\r\n\t\tCL.CoverageLimitType AS CoverageLimitType,\r\n\t\tCL.CoverageLimitValue AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tRC.ProductAKId,\r\n\t\tRC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB with (nolock) ON CL.CoverageLimitId = CLB.CoverageLimitId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) ON PT.PremiumTransactionAKID = CLB.PremiumTransactionAKId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN (\r\n\t\t\t\tSELECT DISTINCT PC2.PolicyAKID\r\n\t              ,CoverageGUID\r\n\t              ,CL2.CoverageLimitType\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB2 with (nolock) ON PT2.PremiumTransactionAKId = CLB2.PremiumTransactionAKId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL2 with (nolock) ON CLB2.CoverageLimitId = CL2.CoverageLimitId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC2 with (nolock) ON PT2.RatingCoverageAKId = RC2.RatingCoverageAKId\r\n\t\t\t\t\tAND PT2.EffectiveDate = RC2.EffectiveDate\r\n\t\t        INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC2 with (nolock) ON RC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID\r\n\t\t\t\tAND PC2.CurrentSnapshotFlag=1\r\n\t\t\t\t\tWHERE CLB2.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}') x\r\n\t\t\t\tON PC.PolicyAKID = x.PolicyAKID\r\n\t\t\t\t\tAND RC.CoverageGUID = x.CoverageGUID\r\n\t\t\t\t\tAND CL.CoverageLimitType = x.CoverageLimitType\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'DCT'\r\n\tWHERE PT.SourceSystemId = 'DCT' \r\n\tAND P.pol_ak_id%3=1\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\n\t\n\tUNION ALL\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\t'N/A' AS RiskUnitGroup,\r\n\t\t'N/A' AS RiskUnit,\r\n\t\t'N/A' AS RiskUnitSequenceNumber,\r\n\t\t'N/A' AS MajorPerilCode,\r\n\t\t'N/A' AS ClassCode,\r\n\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tRC.RiskType,\r\n\t\tRC.CoverageType,\r\n\t\tRC.PerilGroup AS PerilGroup,\r\n\t\tRC.SubCoverageTypeCode AS SubCoverageTypeCode,\r\n\t\tRC.CoverageVersion AS CoverageVersion,\r\n\t\tCL.CoverageLimitType AS CoverageLimitType,\r\n\t\tCL.CoverageLimitValue AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tRC.ProductAKId,\r\n\t\tRC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB with (nolock) ON CL.CoverageLimitId = CLB.CoverageLimitId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) ON PT.PremiumTransactionAKID = CLB.PremiumTransactionAKId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN (\r\n\t\t\t\tSELECT DISTINCT PC2.PolicyAKID\r\n\t              ,CoverageGUID\r\n\t              ,CL2.CoverageLimitType\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB2 with (nolock) ON PT2.PremiumTransactionAKId = CLB2.PremiumTransactionAKId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL2 with (nolock) ON CLB2.CoverageLimitId = CL2.CoverageLimitId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC2 with (nolock) ON PT2.RatingCoverageAKId = RC2.RatingCoverageAKId\r\n\t\t\t\t\tAND PT2.EffectiveDate = RC2.EffectiveDate\r\n\t\t        INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC2 with (nolock) ON RC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID\r\n\t\t\t\tAND PC2.CurrentSnapshotFlag=1\r\n\t\t\t\t\tWHERE CLB2.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}') x\r\n\t\t\t\tON PC.PolicyAKID = x.PolicyAKID\r\n\t\t\t\t\tAND RC.CoverageGUID = x.CoverageGUID\r\n\t\t\t\t\tAND CL.CoverageLimitType = x.CoverageLimitType\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'DCT'\r\n\tWHERE PT.SourceSystemId = 'DCT' \r\n\tAND P.pol_ak_id%3=2\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\n),\nEXP_Audit AS (\n\tSELECT\n\tpol_ak_id,\n\tStandardInsuranceLineCode,\n\tTypeBureauCode,\n\tRiskUnitGroup,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tClassCode,\n\tCoverageGUID,\n\tSourceSystemID,\n\tPremiumTransactionID,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionBookedDate,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tCoverageLimitType,\n\tCoverageLimitValue,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingAKId,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tRatingPlanAKId,\n\tOffsetOnsetCode,\n\t'SQ1' AS o_SourceQualifier,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP(\n\t) AS o_Date,\n\t'1' AS o_AuditID\n\tFROM SQ_PremiumTransaction_Tables\n),\nFIL_PremTrans_CovLimitNumeric AS (\n\tSELECT\n\to_AuditID AS AuditID, \n\tSourceSystemID, \n\to_Date AS Date, \n\tpol_ak_id, \n\tStandardInsuranceLineCode, \n\tTypeBureauCode, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tClassCode, \n\tCoverageGUID, \n\tPremiumTransactionID, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionBookedDate, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tCoverageLimitType, \n\tCoverageLimitValue, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tRatingPlanAKId, \n\tOffsetOnsetCode, \n\to_SourceQualifier AS SourceQualifier\n\tFROM EXP_Audit\n\tWHERE IS_NUMBER(CoverageLimitValue)=1\n),\nWorkLimitFact AS (\n\tTRUNCATE TABLE WorkLimitFact;\n\tINSERT INTO WorkLimitFact\n\t(AuditId, SourceSystemID, CreatedDate, ModifiedDate, PolicyAKId, StandardInsuranceLineCode, TypeBureauCode, RiskUnitGroup, RiskUnit, RiskUnitSequenceNumber, MajorPerilCode, ClassCode, CoverageGUID, PremiumTransactionID, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionBookedDate, RiskType, CoverageType, PerilGroup, SubCoverageTypeCode, CoverageVersion, CoverageLimitType, CoverageLimitValue, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProductAKId, InsuranceReferenceLineOfBusinessAKId, RatingPlanAKId, OffsetOnsetCode, SourceQualifier)\n\tSELECT \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tDate AS CREATEDDATE, \n\tDate AS MODIFIEDDATE, \n\tpol_ak_id AS POLICYAKID, \n\tSTANDARDINSURANCELINECODE, \n\tTYPEBUREAUCODE, \n\tRISKUNITGROUP, \n\tRISKUNIT, \n\tRISKUNITSEQUENCENUMBER, \n\tMAJORPERILCODE, \n\tCLASSCODE, \n\tCOVERAGEGUID, \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tPERILGROUP, \n\tSUBCOVERAGETYPECODE, \n\tCOVERAGEVERSION, \n\tCOVERAGELIMITTYPE, \n\tCOVERAGELIMITVALUE, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tRATINGPLANAKID, \n\tOFFSETONSETCODE, \n\tSOURCEQUALIFIER\n\tFROM FIL_PremTrans_CovLimitNumeric\n),\nSQ_PremiumTransaction_Tables_1 AS (\n\tWITH cnt\r\n\tAS (\r\n\t\tSELECT 1 AS cnt\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT cnt + 1\r\n\t\tFROM cnt\r\n\t\tWHERE cnt < 2\r\n\t\t)\r\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\t'N/A' AS RiskUnitGroup,\r\n\t\t'N/A' AS RiskUnit,\r\n\t\t'N/A' AS RiskUnitSequenceNumber,\r\n\t\t'N/A' AS MajorPerilCode,\r\n\t\t'N/A' AS ClassCode,\r\n\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tRC.RiskType,\r\n\t\tRC.CoverageType,\r\n\t\tRC.PerilGroup AS PerilGroup,\r\n\t\tRC.SubCoverageTypeCode AS SubCoverageTypeCode,\r\n\t\tRC.CoverageVersion AS CoverageVersion,\r\n\t\tCASE WHEN cnt = 1 THEN 'StatedAmount' WHEN cnt = 2 THEN 'CostNew' END AS CoverageLimitType,\r\n\t\tCASE WHEN cnt = 1 THEN CA.StatedAmount WHEN cnt = 2 THEN convert(VARCHAR(20), CA.CostNew) END AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tRC.ProductAKId,\r\n\t\tRC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA with (nolock) ON PT.PremiumTransactionID = CA.PremiumTransactionID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN cnt ON cnt <= 2\r\n\tINNER JOIN (\r\n\t\t\t\tSELECT DISTINCT PC2.PolicyAKID,\r\n\t                    RC2.CoverageGUID\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA2 with (nolock) ON PT2.PremiumTransactionId = CA2.PremiumTransactionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC2 with (nolock) ON PT2.RatingCoverageAKId = RC2.RatingCoverageAKId\r\n\t\t\t\t\tAND PT2.EffectiveDate = RC2.EffectiveDate\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC2 with (nolock) ON RC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID\r\n\t\t\t\t    AND PC2.CurrentSnapshotFlag=1\r\n\t\t\t\tWHERE CA2.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t) x\r\n\t\t\tON PC.PolicyAKID = x.PolicyAKID\r\n\t\t\t\t\tAND RC.CoverageGUID = x.CoverageGUID\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'DCT'\r\n\tWHERE PT.SourceSystemId = 'DCT'\r\n\tAND P.pol_ak_id%3=1\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT_CA}\n\t\n\tUNION ALL\n\tWITH cnt\r\n\tAS (\r\n\t\tSELECT 1 AS cnt\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT cnt + 1\r\n\t\tFROM cnt\r\n\t\tWHERE cnt < 2\r\n\t\t)\r\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\t'N/A' AS RiskUnitGroup,\r\n\t\t'N/A' AS RiskUnit,\r\n\t\t'N/A' AS RiskUnitSequenceNumber,\r\n\t\t'N/A' AS MajorPerilCode,\r\n\t\t'N/A' AS ClassCode,\r\n\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tRC.RiskType,\r\n\t\tRC.CoverageType,\r\n\t\tRC.PerilGroup AS PerilGroup,\r\n\t\tRC.SubCoverageTypeCode AS SubCoverageTypeCode,\r\n\t\tRC.CoverageVersion AS CoverageVersion,\r\n\t\tCASE WHEN cnt = 1 THEN 'StatedAmount' WHEN cnt = 2 THEN 'CostNew' END AS CoverageLimitType,\r\n\t\tCASE WHEN cnt = 1 THEN CA.StatedAmount WHEN cnt = 2 THEN convert(VARCHAR(20), CA.CostNew) END AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tRC.ProductAKId,\r\n\t\tRC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA with (nolock) ON PT.PremiumTransactionID = CA.PremiumTransactionID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN cnt ON cnt <= 2\r\n\tINNER JOIN (\r\n\t\t\t\tSELECT DISTINCT PC2.PolicyAKID,\r\n\t                    RC2.CoverageGUID\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA2 with (nolock) ON PT2.PremiumTransactionId = CA2.PremiumTransactionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC2 with (nolock) ON PT2.RatingCoverageAKId = RC2.RatingCoverageAKId\r\n\t\t\t\t\tAND PT2.EffectiveDate = RC2.EffectiveDate\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC2 with (nolock) ON RC2.PolicyCoverageAKID=PC2.PolicyCoverageAKID\r\n\t\t\t\t    AND PC2.CurrentSnapshotFlag=1\r\n\t\t\t\tWHERE CA2.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t) x\r\n\t\t\tON PC.PolicyAKID = x.PolicyAKID\r\n\t\t\t\t\tAND RC.CoverageGUID = x.CoverageGUID\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'DCT'\r\n\tWHERE PT.SourceSystemId = 'DCT'\r\n\tAND P.pol_ak_id%3=2\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT_CA}\n),\nEXP_Audit1 AS (\n\tSELECT\n\tpol_ak_id,\n\tStandardInsuranceLineCode,\n\tTypeBureauCode,\n\tRiskUnitGroup,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tClassCode,\n\tCoverageGUID,\n\tSourceSystemID,\n\tPremiumTransactionID,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionBookedDate,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tCoverageLimitType,\n\tCoverageLimitValue,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingAKId,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tRatingPlanAKId,\n\tOffsetOnsetCode,\n\t'SQ2' AS o_SourceQualifier,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP(\n\t) AS o_Date,\n\t'1' AS o_AuditID\n\tFROM SQ_PremiumTransaction_Tables_1\n),\nFIL_PremTrans1_CovLimitNumeric AS (\n\tSELECT\n\to_AuditID AS AuditID, \n\tSourceSystemID, \n\to_Date AS Date, \n\tpol_ak_id, \n\tStandardInsuranceLineCode, \n\tTypeBureauCode, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tClassCode, \n\tCoverageGUID, \n\tPremiumTransactionID, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionBookedDate, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tCoverageLimitType, \n\tCoverageLimitValue, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tRatingPlanAKId, \n\tOffsetOnsetCode, \n\to_SourceQualifier AS SourceQualifier\n\tFROM EXP_Audit1\n\tWHERE IS_NUMBER(CoverageLimitValue)=1\n),\nWorkLimitFact1 AS (\n\tINSERT INTO WorkLimitFact\n\t(AuditId, SourceSystemID, CreatedDate, ModifiedDate, PolicyAKId, StandardInsuranceLineCode, TypeBureauCode, RiskUnitGroup, RiskUnit, RiskUnitSequenceNumber, MajorPerilCode, ClassCode, CoverageGUID, PremiumTransactionID, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionBookedDate, RiskType, CoverageType, PerilGroup, SubCoverageTypeCode, CoverageVersion, CoverageLimitType, CoverageLimitValue, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProductAKId, InsuranceReferenceLineOfBusinessAKId, RatingPlanAKId, OffsetOnsetCode, SourceQualifier)\n\tSELECT \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tDate AS CREATEDDATE, \n\tDate AS MODIFIEDDATE, \n\tpol_ak_id AS POLICYAKID, \n\tSTANDARDINSURANCELINECODE, \n\tTYPEBUREAUCODE, \n\tRISKUNITGROUP, \n\tRISKUNIT, \n\tRISKUNITSEQUENCENUMBER, \n\tMAJORPERILCODE, \n\tCLASSCODE, \n\tCOVERAGEGUID, \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tPERILGROUP, \n\tSUBCOVERAGETYPECODE, \n\tCOVERAGEVERSION, \n\tCOVERAGELIMITTYPE, \n\tCOVERAGELIMITVALUE, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tRATINGPLANAKID, \n\tOFFSETONSETCODE, \n\tSOURCEQUALIFIER\n\tFROM FIL_PremTrans1_CovLimitNumeric\n),\nSQ_PremiumTransaction_Tables_2 AS (\n\tWITH cnt\r\n\tAS (\r\n\t\tSELECT 1 AS cnt\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT cnt + 1\r\n\t\tFROM cnt\r\n\t\tWHERE cnt < 2\r\n\t\t)\r\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\tSC.RiskUnitGroup,\r\n\t\tSC.RiskUnit,\r\n\t\tSC.RiskUnitSequenceNumber,\r\n\t\tSC.MajorPerilCode,\r\n\t\tSC.ClassCode,\r\n\t\tSC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\t'N/A' AS RiskType,\r\n\t\t'N/A' AS CoverageType,\r\n\t\t'N/A' AS PerilGroup,\r\n\t\t'N/A' AS SubCoverageTypeCode,\r\n\t\t'N/A' AS CoverageVersion,\r\n\t\tCASE WHEN cnt = 1 THEN 'StatedAmount' WHEN cnt = 2 THEN 'CostNew' END AS CoverageLimitType,\r\n\t\tCASE WHEN cnt = 1 THEN CA.StatedAmount WHEN cnt = 2 THEN convert(VARCHAR(20), CA.CostNew) END AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tSC.ProductAKId,\r\n\t\tSC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT  with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA  with (nolock) ON CA.PremiumTransactionID = PT.PremiumTransactionID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC  with (nolock) ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC  with (nolock) ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P  with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN cnt ON cnt <= 2\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL  with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'EXCEED AND PMS'\r\n\tWHERE PT.SourceSystemId = 'PMS'\r\n\t\tAND EXISTS (\r\n\t\t\t\tSELECT 1\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto CA2 with (nolock) ON PT2.PremiumTransactionId = CA2.PremiumTransactionId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC2 with (nolock) ON PT2.StatisticalCoverageAKId = SC2.StatisticalCoverageAKId\r\n\t\t\t\tWHERE SC.CoverageGUID = SC2.CoverageGUID\r\n\t\t\t\t\tAND PT2.SourceSystemId = 'PMS'\r\n\t\t\t\t\tAND CA2.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t)\t\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS_CA}\n),\nEXP_Audit2 AS (\n\tSELECT\n\tpol_ak_id,\n\tStandardInsuranceLineCode,\n\tTypeBureauCode,\n\tRiskUnitGroup,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tClassCode,\n\tCoverageGUID,\n\tSourceSystemID,\n\tPremiumTransactionID,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionBookedDate,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tCoverageLimitType,\n\tCoverageLimitValue,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingAKId,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tRatingPlanAKId,\n\tOffsetOnsetCode,\n\t'SQ3' AS o_SourceQualifier,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP(\n\t) AS o_Date,\n\t'1' AS o_AuditID\n\tFROM SQ_PremiumTransaction_Tables_2\n),\nFIL_PremTrans2_CovLimitNumeric AS (\n\tSELECT\n\to_AuditID AS AuditID, \n\tSourceSystemID, \n\to_Date AS Date, \n\tpol_ak_id, \n\tStandardInsuranceLineCode, \n\tTypeBureauCode, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tClassCode, \n\tCoverageGUID, \n\tPremiumTransactionID, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionBookedDate, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tCoverageLimitType, \n\tCoverageLimitValue, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tRatingPlanAKId, \n\tOffsetOnsetCode, \n\to_SourceQualifier AS SourceQualifier\n\tFROM EXP_Audit2\n\tWHERE IS_NUMBER(CoverageLimitValue)=1\n),\nWorkLimitFact2 AS (\n\tINSERT INTO WorkLimitFact\n\t(AuditId, SourceSystemID, CreatedDate, ModifiedDate, PolicyAKId, StandardInsuranceLineCode, TypeBureauCode, RiskUnitGroup, RiskUnit, RiskUnitSequenceNumber, MajorPerilCode, ClassCode, CoverageGUID, PremiumTransactionID, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionBookedDate, RiskType, CoverageType, PerilGroup, SubCoverageTypeCode, CoverageVersion, CoverageLimitType, CoverageLimitValue, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProductAKId, InsuranceReferenceLineOfBusinessAKId, RatingPlanAKId, OffsetOnsetCode, SourceQualifier)\n\tSELECT \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tDate AS CREATEDDATE, \n\tDate AS MODIFIEDDATE, \n\tpol_ak_id AS POLICYAKID, \n\tSTANDARDINSURANCELINECODE, \n\tTYPEBUREAUCODE, \n\tRISKUNITGROUP, \n\tRISKUNIT, \n\tRISKUNITSEQUENCENUMBER, \n\tMAJORPERILCODE, \n\tCLASSCODE, \n\tCOVERAGEGUID, \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tPERILGROUP, \n\tSUBCOVERAGETYPECODE, \n\tCOVERAGEVERSION, \n\tCOVERAGELIMITTYPE, \n\tCOVERAGELIMITVALUE, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tRATINGPLANAKID, \n\tOFFSETONSETCODE, \n\tSOURCEQUALIFIER\n\tFROM FIL_PremTrans2_CovLimitNumeric\n),\nSQ_PremiumTransaction_Tables_3 AS (\n\tWITH cnt\r\n\tAS (\r\n\t\tSELECT 1 AS cnt\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT cnt + 1\r\n\t\tFROM cnt\r\n\t\tWHERE cnt < 2\r\n\t\t)\r\n\tSELECT P.pol_ak_id,\r\n\t\tISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tPC.TypeBureauCode,\r\n\t\tSC.RiskUnitGroup,\r\n\t\tSC.RiskUnit,\r\n\t\tSC.RiskUnitSequenceNumber,\r\n\t\tSC.MajorPerilCode,\r\n\t\tSC.ClassCode,\r\n\t\tSC.CoverageGUID AS CoverageGUID,\r\n\t\tPT.SourceSystemID,\r\n\t\tPT.PremiumTransactionID,\r\n\t\tPT.PremiumTransactionEnteredDate,\r\n\t\tPT.PremiumTransactionEffectiveDate,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\t'N/A' AS RiskType,\r\n\t\t'N/A' AS CoverageType,\r\n\t\t'N/A' AS PerilGroup,\r\n\t\t'N/A' AS SubCoverageTypeCode,\r\n\t\t'N/A' AS CoverageVersion,\r\n\t\tCL.CoverageLimitType AS CoverageLimitType,\r\n\t\tCL.CoverageLimitValue AS CoverageLimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tSC.ProductAKId,\r\n\t\tSC.InsuranceReferenceLineOfBusinessAKId,\r\n\t\tPC.RatingPlanAKId,\r\n\t\tPT.OffsetOnsetCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL  with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB with (nolock) ON CL.CoverageLimitId = CLB.CoverageLimitId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) ON PT.PremiumTransactionAKID = CLB.PremiumTransactionAKId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC with (nolock) ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON SIL.ins_line_code = PC.InsuranceLine\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'EXCEED AND PMS'\r\n\tWHERE PT.SourceSystemId = 'PMS'\r\n\t\tAND EXISTS (\r\n\t\t\t\tSELECT 1\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT2 with (nolock)\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB2 with (nolock) ON PT2.PremiumTransactionAKId = CLB2.PremiumTransactionAKId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL2 with (nolock) ON CLB2.CoverageLimitId = CL2.CoverageLimitId\r\n\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC2 with (nolock) ON PT2.StatisticalCoverageAKId = SC2.StatisticalCoverageAKId\r\n\t\t\t\tWHERE SC.CoverageGUID = SC2.CoverageGUID\r\n\t\t\t\t\tAND CL.CoverageLimitType = CL2.CoverageLimitType\r\n\t\t\t\t\tAND PT2.SourceSystemId = 'PMS'\r\n\t\t\t\t\tAND CLB2.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t)\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\n),\nEXP_Audit3 AS (\n\tSELECT\n\tpol_ak_id,\n\tStandardInsuranceLineCode,\n\tTypeBureauCode,\n\tRiskUnitGroup,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tClassCode,\n\tCoverageGUID,\n\tSourceSystemID,\n\tPremiumTransactionID,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionBookedDate,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tCoverageLimitType,\n\tCoverageLimitValue,\n\tStrategicProfitCenterAKId,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingAKId,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tRatingPlanAKId,\n\tOffsetOnsetCode,\n\t'SQ4' AS o_SourceQualifier,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP(\n\t) AS o_Date,\n\t'1' AS o_AuditID\n\tFROM SQ_PremiumTransaction_Tables_3\n),\nFIL_PremTrans3_CovLimitNumeric AS (\n\tSELECT\n\to_AuditID AS AuditID, \n\tSourceSystemID, \n\to_Date AS Date, \n\tpol_ak_id, \n\tStandardInsuranceLineCode, \n\tTypeBureauCode, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tClassCode, \n\tCoverageGUID, \n\tPremiumTransactionID, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionBookedDate, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tCoverageLimitType, \n\tCoverageLimitValue, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tRatingPlanAKId, \n\tOffsetOnsetCode, \n\to_SourceQualifier AS SourceQualifier\n\tFROM EXP_Audit3\n\tWHERE IS_NUMBER(CoverageLimitValue)=1\n),\nWorkLimitFact3 AS (\n\tINSERT INTO WorkLimitFact\n\t(AuditId, SourceSystemID, CreatedDate, ModifiedDate, PolicyAKId, StandardInsuranceLineCode, TypeBureauCode, RiskUnitGroup, RiskUnit, RiskUnitSequenceNumber, MajorPerilCode, ClassCode, CoverageGUID, PremiumTransactionID, PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate, PremiumTransactionBookedDate, RiskType, CoverageType, PerilGroup, SubCoverageTypeCode, CoverageVersion, CoverageLimitType, CoverageLimitValue, StrategicProfitCenterAKId, InsuranceSegmentAKId, PolicyOfferingAKId, ProductAKId, InsuranceReferenceLineOfBusinessAKId, RatingPlanAKId, OffsetOnsetCode, SourceQualifier)\n\tSELECT \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tDate AS CREATEDDATE, \n\tDate AS MODIFIEDDATE, \n\tpol_ak_id AS POLICYAKID, \n\tSTANDARDINSURANCELINECODE, \n\tTYPEBUREAUCODE, \n\tRISKUNITGROUP, \n\tRISKUNIT, \n\tRISKUNITSEQUENCENUMBER, \n\tMAJORPERILCODE, \n\tCLASSCODE, \n\tCOVERAGEGUID, \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONENTEREDDATE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tPREMIUMTRANSACTIONBOOKEDDATE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tPERILGROUP, \n\tSUBCOVERAGETYPECODE, \n\tCOVERAGEVERSION, \n\tCOVERAGELIMITTYPE, \n\tCOVERAGELIMITVALUE, \n\tSTRATEGICPROFITCENTERAKID, \n\tINSURANCESEGMENTAKID, \n\tPOLICYOFFERINGAKID, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tRATINGPLANAKID, \n\tOFFSETONSETCODE, \n\tSOURCEQUALIFIER\n\tFROM FIL_PremTrans3_CovLimitNumeric\n),\nSQ_WorkLimitFact AS (\n\tSELECT\n\t\tWorkLimitFactId,\n\t\tAuditId,\n\t\tSourceSystemID,\n\t\tCreatedDate,\n\t\tModifiedDate,\n\t\tPolicyAKId,\n\t\tStandardInsuranceLineCode,\n\t\tTypeBureauCode,\n\t\tRiskUnitGroup,\n\t\tRiskUnit,\n\t\tRiskUnitSequenceNumber,\n\t\tMajorPerilCode,\n\t\tClassCode,\n\t\tCoverageGUID,\n\t\tPremiumTransactionID,\n\t\tPremiumTransactionEnteredDate,\n\t\tPremiumTransactionEffectiveDate,\n\t\tPremiumTransactionBookedDate,\n\t\tRiskType,\n\t\tCoverageType,\n\t\tPerilGroup,\n\t\tSubCoverageTypeCode,\n\t\tCoverageVersion,\n\t\tCoverageLimitType,\n\t\tCoverageLimitValue,\n\t\tStrategicProfitCenterAKId,\n\t\tInsuranceSegmentAKId,\n\t\tPolicyOfferingAKId,\n\t\tProductAKId,\n\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\tRatingPlanAKId,\n\t\tOffsetOnsetCode,\n\t\tSourceQualifier\n\tFROM WorkLimitFact4\n),\nSRT_All_SQData AS (\n\tSELECT\n\tPolicyAKId AS pol_ak_id, \n\tCoverageGUID, \n\tCoverageLimitType, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionEnteredDate, \n\tOffsetOnsetCode, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionID, \n\tStandardInsuranceLineCode, \n\tTypeBureauCode, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tClassCode, \n\tSourceSystemID, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tCoverageLimitValue, \n\tStrategicProfitCenterAKId, \n\tInsuranceSegmentAKId, \n\tPolicyOfferingAKId, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tRatingPlanAKId\n\tFROM SQ_WorkLimitFact\n\tORDER BY pol_ak_id ASC, CoverageGUID ASC, CoverageLimitType ASC, PremiumTransactionEffectiveDate ASC, PremiumTransactionEnteredDate ASC, OffsetOnsetCode ASC, PremiumTransactionBookedDate ASC, PremiumTransactionID ASC\n),\nLKP_LimitTypeDim AS (\n\tSELECT\n\tLimitTypeDimID,\n\tLimitType\n\tFROM (\n\t\tSELECT \n\t\t\tLimitTypeDimID,\n\t\t\tLimitType\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.LimitTypeDim\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LimitType ORDER BY LimitTypeDimID) = 1\n),\nFIL_Invalid AS (\n\tSELECT\n\tLKP_LimitTypeDim.LimitTypeDimID, \n\tSRT_All_SQData.pol_ak_id, \n\tSRT_All_SQData.StandardInsuranceLineCode, \n\tSRT_All_SQData.TypeBureauCode, \n\tSRT_All_SQData.RiskUnitGroup, \n\tSRT_All_SQData.RiskUnit, \n\tSRT_All_SQData.RiskUnitSequenceNumber, \n\tSRT_All_SQData.MajorPerilCode, \n\tSRT_All_SQData.ClassCode, \n\tSRT_All_SQData.CoverageGUID, \n\tSRT_All_SQData.SourceSystemID, \n\tSRT_All_SQData.PremiumTransactionID, \n\tSRT_All_SQData.PremiumTransactionEnteredDate, \n\tSRT_All_SQData.PremiumTransactionEffectiveDate, \n\tSRT_All_SQData.PremiumTransactionBookedDate, \n\tSRT_All_SQData.RiskType, \n\tSRT_All_SQData.CoverageType, \n\tSRT_All_SQData.PerilGroup, \n\tSRT_All_SQData.SubCoverageTypeCode, \n\tSRT_All_SQData.CoverageVersion, \n\tSRT_All_SQData.CoverageLimitType, \n\tSRT_All_SQData.CoverageLimitValue, \n\tSRT_All_SQData.StrategicProfitCenterAKId, \n\tSRT_All_SQData.InsuranceSegmentAKId, \n\tSRT_All_SQData.PolicyOfferingAKId, \n\tSRT_All_SQData.ProductAKId, \n\tSRT_All_SQData.InsuranceReferenceLineOfBusinessAKId, \n\tSRT_All_SQData.RatingPlanAKId\n\tFROM SRT_All_SQData\n\tLEFT JOIN LKP_LimitTypeDim\n\tON LKP_LimitTypeDim.LimitType = SRT_All_SQData.CoverageLimitType\n\tWHERE NOT ISNULL(LimitTypeDimID)\n),\nmplt_PolicyDimID_PremiumMaster_Coverage AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_CalculateValue AS (\n\tSELECT\n\tmplt_PolicyDimID_PremiumMaster_Coverage.agency_dim_id AS lkp_AgencyDimID,\n\tmplt_PolicyDimID_PremiumMaster_Coverage.contract_cust_dim_id AS lkp_contract_cust_dim_id,\n\tmplt_PolicyDimID_PremiumMaster_Coverage.pol_dim_id AS lkp_pol_dim_id,\n\tFIL_Invalid.StandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\tFIL_Invalid.TypeBureauCode AS i_TypeBureauCode,\n\tFIL_Invalid.RiskUnitGroup AS i_RiskUnitGroup,\n\tFIL_Invalid.RiskUnit AS i_RiskUnit,\n\tFIL_Invalid.RiskUnitSequenceNumber AS i_RiskUnitSequenceNumber,\n\tFIL_Invalid.MajorPerilCode AS i_MajorPerilCode,\n\tFIL_Invalid.ClassCode AS i_ClassCode,\n\tFIL_Invalid.PremiumTransactionBookedDate AS i_PremiumTransactionBookedDate,\n\tFIL_Invalid.StrategicProfitCenterAKId AS i_StrategicProfitCenterAKId,\n\tFIL_Invalid.InsuranceSegmentAKId AS i_InsuranceSegmentAKId,\n\tFIL_Invalid.PolicyOfferingAKId AS i_PolicyOfferingAKId,\n\tFIL_Invalid.ProductAKId AS i_ProductAKId,\n\tFIL_Invalid.InsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tFIL_Invalid.RatingPlanAKId AS i_RatingPlanAKId,\n\tFIL_Invalid.LimitTypeDimID,\n\tFIL_Invalid.CoverageGUID,\n\tFIL_Invalid.SourceSystemID,\n\tFIL_Invalid.PremiumTransactionID,\n\tFIL_Invalid.PremiumTransactionEffectiveDate,\n\tFIL_Invalid.RiskType,\n\tFIL_Invalid.CoverageType,\n\tFIL_Invalid.PerilGroup,\n\tFIL_Invalid.SubCoverageTypeCode,\n\tFIL_Invalid.CoverageVersion,\n\tFIL_Invalid.CoverageLimitType,\n\tFIL_Invalid.CoverageLimitValue,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TO_DATE('21001231','YYYYMMDD'))\n\tLKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD.clndr_id AS v_clndr_id,\n\t-- *INF*: IIF(NOT ISNULL(v_clndr_id),v_clndr_id,-1)\n\tIFF(v_clndr_id IS NOT NULL,\n\t\tv_clndr_id,\n\t\t- 1\n\t) AS v_default_clndr_id,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode\n\t) AS v_MajorPerilCode,\n\t-- *INF*: IIF(LTRIM(v_MajorPerilCode,'0')='' OR REG_MATCH(v_MajorPerilCode,'[^0-9a-zA-Z]'),'N/A',v_MajorPerilCode)\n\tIFF(LTRIM(v_MajorPerilCode, '0'\n\t\t) = '' \n\t\tOR REGEXP_LIKE(v_MajorPerilCode, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_MajorPerilCode\n\t) AS v_Reg_MajorPerilCode,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TRUNC(i_PremiumTransactionBookedDate,'D'))\n\tLKP_CALENDER_DIM_TRUNC_i_PremiumTransactionBookedDate_D.clndr_id AS v_PremiumTransactionBookedDateID,\n\t-- *INF*: IIF(REG_MATCH(i_StandardInsuranceLineCode,'[^0-9a-zA-Z]'),'N/A',i_StandardInsuranceLineCode)\n\tIFF(REGEXP_LIKE(i_StandardInsuranceLineCode, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\ti_StandardInsuranceLineCode\n\t) AS v_Reg_StandardInsuranceLineCode,\n\t-- *INF*: IIF(v_Reg_StandardInsuranceLineCode='N/A' AND (IN(i_TypeBureauCode,'AL','AN','AP') OR IN(v_Reg_MajorPerilCode,'930','931')),'CA',v_Reg_StandardInsuranceLineCode)\n\tIFF(v_Reg_StandardInsuranceLineCode = 'N/A' \n\t\tAND ( i_TypeBureauCode IN ('AL','AN','AP') \n\t\t\tOR v_Reg_MajorPerilCode IN ('930','931') \n\t\t),\n\t\t'CA',\n\t\tv_Reg_StandardInsuranceLineCode\n\t) AS v_StandardInsuranceLineCode,\n\t-- *INF*: IIF(v_StandardInsuranceLineCode='N/A' AND IN(i_TypeBureauCode,'CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),1,0)\n\tIFF(v_StandardInsuranceLineCode = 'N/A' \n\t\tAND i_TypeBureauCode IN ('CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),\n\t\t1,\n\t\t0\n\t) AS v_flag,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode\n\t) AS v_ClassCode,\n\t-- *INF*: IIF(IN(v_StandardInsuranceLineCode,'CR') OR v_flag=1,'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup))\n\tIFF(v_StandardInsuranceLineCode IN ('CR') \n\t\tOR v_flag = 1,\n\t\t'N/A',\n\t\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup\n\t\t)\n\t) AS v_Risk_Unit_Group,\n\t-- *INF*: IIF(LTRIM(v_Risk_Unit_Group,'0')='','N/A',v_Risk_Unit_Group)\n\tIFF(LTRIM(v_Risk_Unit_Group, '0'\n\t\t) = '',\n\t\t'N/A',\n\t\tv_Risk_Unit_Group\n\t) AS v_Zero_Risk_Unit_Group,\n\t-- *INF*: IIF(   v_flag=1 OR   (v_StandardInsuranceLineCode='GL' AND (v_MajorPerilCode<>'540'    OR NOT IN(v_ClassCode,'11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058')))   OR IN(v_StandardInsuranceLineCode,'WC','IM','CG','CA')=1,  'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit) )\n\tIFF(v_flag = 1 \n\t\tOR ( v_StandardInsuranceLineCode = 'GL' \n\t\t\tAND ( v_MajorPerilCode <> '540' \n\t\t\t\tOR NOT v_ClassCode IN ('11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058') \n\t\t\t) \n\t\t) \n\t\tOR v_StandardInsuranceLineCode IN ('WC','IM','CG','CA') = 1,\n\t\t'N/A',\n\t\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit\n\t\t)\n\t) AS v_RiskUnit,\n\t-- *INF*: IIF(LTRIM(v_RiskUnit,'0')='','N/A',v_RiskUnit)\n\tIFF(LTRIM(v_RiskUnit, '0'\n\t\t) = '',\n\t\t'N/A',\n\t\tv_RiskUnit\n\t) AS v_Zero_RiskUnit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber,2,1))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber, 2, 1\n\t\t)\n\t) AS v_ProductTypeCode,\n\t-- *INF*: :LKP.LKP_STRATEGICPROFITCENTER(i_StrategicProfitCenterAKId)\n\tLKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId.StrategicProfitCenterCode AS v_StrategicProfitCenterCode,\n\t-- *INF*: :LKP.LKP_ENTERPRISEGROUP(i_StrategicProfitCenterAKId)\n\tLKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId.EnterpriseGroupCode AS v_EnterpriseGroupCode,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCELEGALENTITY(i_StrategicProfitCenterAKId)\n\tLKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId.InsuranceReferenceLegalEntityCode AS v_InsuranceReferenceLegalEntityCode,\n\t-- *INF*: :LKP.LKP_POLICYOFFERING(i_PolicyOfferingAKId)\n\tLKP_POLICYOFFERING_i_PolicyOfferingAKId.PolicyOfferingCode AS v_PolicyOfferingCode,\n\t-- *INF*: :LKP.LKP_INSURANCESEGMENT(i_InsuranceSegmentAKId)\n\tLKP_INSURANCESEGMENT_i_InsuranceSegmentAKId.InsuranceSegmentCode AS v_InsuranceSegmentCode,\n\t-- *INF*: :LKP.LKP_PRODUCT(i_ProductAKId)\n\tLKP_PRODUCT_i_ProductAKId.ProductCode AS v_ProductCode,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCELINEOFBUSINESS(i_InsuranceReferenceLineOfBusinessAKId)\n\tLKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId.InsuranceReferenceLineOfBusinessCode AS v_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: :LKP.LKP_RATINGPLAN(i_RatingPlanAKId)\n\tLKP_RATINGPLAN_i_RatingPlanAKId.RatingPlanCode AS v_RatingPlanCode,\n\t-- *INF*: IIF(ISNULL(v_PremiumTransactionBookedDateID),v_default_clndr_id,v_PremiumTransactionBookedDateID)\n\tIFF(v_PremiumTransactionBookedDateID IS NULL,\n\t\tv_default_clndr_id,\n\t\tv_PremiumTransactionBookedDateID\n\t) AS o_RunDateID,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_Risk_Unit_Group,'[^0-9a-zA-Z]'),'N/A',v_Zero_Risk_Unit_Group)\n\tIFF(REGEXP_LIKE(v_Zero_Risk_Unit_Group, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_Zero_Risk_Unit_Group\n\t) AS o_RiskUnitGroup,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_RiskUnit,'[^0-9a-zA-Z]'),'N/A',v_Zero_RiskUnit)\n\tIFF(REGEXP_LIKE(v_Zero_RiskUnit, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_Zero_RiskUnit\n\t) AS o_RiskUnit,\n\tv_Reg_MajorPerilCode AS o_MajorPerilCode,\n\t-- *INF*: IIF(SourceSystemID='PMS',v_StandardInsuranceLineCode,v_Reg_StandardInsuranceLineCode)\n\tIFF(SourceSystemID = 'PMS',\n\t\tv_StandardInsuranceLineCode,\n\t\tv_Reg_StandardInsuranceLineCode\n\t) AS o_StandardInsuranceLineCode,\n\t-- *INF*: IIF(   REG_MATCH(v_ProductTypeCode,'[^0-9a-zA-Z]') OR v_Reg_StandardInsuranceLineCode<>'GL' OR v_ProductTypeCode='0',   'N/A',v_ProductTypeCode )\n\tIFF(REGEXP_LIKE(v_ProductTypeCode, '[^0-9a-zA-Z]'\n\t\t) \n\t\tOR v_Reg_StandardInsuranceLineCode <> 'GL' \n\t\tOR v_ProductTypeCode = '0',\n\t\t'N/A',\n\t\tv_ProductTypeCode\n\t) AS o_ProductTypeCode,\n\t-- *INF*: IIF(NOT ISNULL(v_ProductCode), v_ProductCode, '000')\n\tIFF(v_ProductCode IS NOT NULL,\n\t\tv_ProductCode,\n\t\t'000'\n\t) AS o_ProductCode,\n\t-- *INF*: IIF(NOT ISNULL(v_PolicyOfferingCode), v_PolicyOfferingCode, '000')\n\tIFF(v_PolicyOfferingCode IS NOT NULL,\n\t\tv_PolicyOfferingCode,\n\t\t'000'\n\t) AS o_PolicyOfferingCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceReferenceLineOfBusinessCode), v_InsuranceReferenceLineOfBusinessCode, '000')\n\tIFF(v_InsuranceReferenceLineOfBusinessCode IS NOT NULL,\n\t\tv_InsuranceReferenceLineOfBusinessCode,\n\t\t'000'\n\t) AS o_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: IIF(NOT ISNULL(v_EnterpriseGroupCode), v_EnterpriseGroupCode, '1')\n\tIFF(v_EnterpriseGroupCode IS NOT NULL,\n\t\tv_EnterpriseGroupCode,\n\t\t'1'\n\t) AS o_EnterpriseGroupCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceReferenceLegalEntityCode), v_InsuranceReferenceLegalEntityCode, '1')\n\tIFF(v_InsuranceReferenceLegalEntityCode IS NOT NULL,\n\t\tv_InsuranceReferenceLegalEntityCode,\n\t\t'1'\n\t) AS o_InsuranceReferenceLegalEntityCode,\n\t-- *INF*: IIF(NOT ISNULL(v_StrategicProfitCenterCode), v_StrategicProfitCenterCode, '6')\n\tIFF(v_StrategicProfitCenterCode IS NOT NULL,\n\t\tv_StrategicProfitCenterCode,\n\t\t'6'\n\t) AS o_StrategicProfitCenterCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceSegmentCode), v_InsuranceSegmentCode, 'N/A')\n\tIFF(v_InsuranceSegmentCode IS NOT NULL,\n\t\tv_InsuranceSegmentCode,\n\t\t'N/A'\n\t) AS o_InsuranceSegmentCode,\n\t-- *INF*: IIF(ISNULL(lkp_contract_cust_dim_id),-1,lkp_contract_cust_dim_id)\n\tIFF(lkp_contract_cust_dim_id IS NULL,\n\t\t- 1,\n\t\tlkp_contract_cust_dim_id\n\t) AS o_contract_cust_dim_id,\n\t-- *INF*: IIF(ISNULL(lkp_pol_dim_id),-1,lkp_pol_dim_id)\n\tIFF(lkp_pol_dim_id IS NULL,\n\t\t- 1,\n\t\tlkp_pol_dim_id\n\t) AS o_pol_dim_id,\n\t-- *INF*: IIF(ISNULL(lkp_AgencyDimID),-1,lkp_AgencyDimID)\n\tIFF(lkp_AgencyDimID IS NULL,\n\t\t- 1,\n\t\tlkp_AgencyDimID\n\t) AS o_AgencyDimID,\n\t-- *INF*: IIF(ISNULL(v_RatingPlanCode), '1', v_RatingPlanCode)\n\tIFF(v_RatingPlanCode IS NULL,\n\t\t'1',\n\t\tv_RatingPlanCode\n\t) AS o_RatingPlanCode,\n\tFIL_Invalid.pol_ak_id\n\tFROM FIL_Invalid\n\t -- Manually join with mplt_PolicyDimID_PremiumMaster_Coverage\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD\n\tON LKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD.clndr_date = TO_DATE('21001231', 'YYYYMMDD'\n)\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TRUNC_i_PremiumTransactionBookedDate_D\n\tON LKP_CALENDER_DIM_TRUNC_i_PremiumTransactionBookedDate_D.clndr_date = CAST(TRUNC(i_PremiumTransactionBookedDate, 'DAY') AS TIMESTAMP_NTZ(0))\n\n\tLEFT JOIN LKP_STRATEGICPROFITCENTER LKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId\n\tON LKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_ENTERPRISEGROUP LKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId\n\tON LKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_INSURANCEREFERENCELEGALENTITY LKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId\n\tON LKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_POLICYOFFERING LKP_POLICYOFFERING_i_PolicyOfferingAKId\n\tON LKP_POLICYOFFERING_i_PolicyOfferingAKId.PolicyOfferingAKId = i_PolicyOfferingAKId\n\n\tLEFT JOIN LKP_INSURANCESEGMENT LKP_INSURANCESEGMENT_i_InsuranceSegmentAKId\n\tON LKP_INSURANCESEGMENT_i_InsuranceSegmentAKId.InsuranceSegmentAKId = i_InsuranceSegmentAKId\n\n\tLEFT JOIN LKP_PRODUCT LKP_PRODUCT_i_ProductAKId\n\tON LKP_PRODUCT_i_ProductAKId.ProductAKId = i_ProductAKId\n\n\tLEFT JOIN LKP_INSURANCEREFERENCELINEOFBUSINESS LKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId\n\tON LKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId.InsuranceReferenceLineOfBusinessAKId = i_InsuranceReferenceLineOfBusinessAKId\n\n\tLEFT JOIN LKP_RATINGPLAN LKP_RATINGPLAN_i_RatingPlanAKId\n\tON LKP_RATINGPLAN_i_RatingPlanAKId.RatingPlanAKId = i_RatingPlanAKId\n\n),\nLKP_CoverageDetailDim AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tEDWPremiumTransactionPKId\n\tFROM (\n\t\tSELECT CDD.CoverageDetailDimId AS CoverageDetailDimId\r\n\t\t\t,CDD.EDWPremiumTransactionPKId AS EDWPremiumTransactionPKId\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\twhere '@{pipeline().parameters.SELECTION_START_TS}'<='01/01/1800 01:00:00' OR \r\n\t\texists (\r\n\t\tselect 1\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge CLB\r\n\t\ton PT.PremiumTransactionAKId=CLB.PremiumTransactionAKId\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimit CL\r\n\t\ton CLB.CoverageLimitId=CL.CoverageLimitId\r\n\t\twhere CLB.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tand CDD.EDWPremiumTransactionPKId=PT.PremiumTransactionID)\r\n\t\torder by CDD.EDWPremiumTransactionPKId--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPremiumTransactionPKId ORDER BY CoverageDetailDimId) = 1\n),\nLKP_InsuranceReferenceDim AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tEnterpriseGroupCode,\n\tInsuranceReferenceLegalEntityCode,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode,\n\tProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRatingPlanCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceDimId,\n\t\t\tEnterpriseGroupCode,\n\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tPolicyOfferingCode,\n\t\t\tProductCode,\n\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\tRatingPlanCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EnterpriseGroupCode,InsuranceReferenceLegalEntityCode,StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode,ProductCode,InsuranceReferenceLineOfBusinessCode,RatingPlanCode ORDER BY InsuranceReferenceDimId) = 1\n),\nEXP_Calculate AS (\n\tSELECT\n\tLKP_CoverageDetailDim.CoverageDetailDimId AS lkp_CoverageDetailDimId,\n\tEXP_CalculateValue.SourceSystemID AS i_SourceSystemID,\n\tEXP_CalculateValue.RiskType AS i_RiskType,\n\tEXP_CalculateValue.CoverageType AS i_CoverageType,\n\tEXP_CalculateValue.PerilGroup AS i_PerilGroup,\n\tEXP_CalculateValue.SubCoverageTypeCode AS i_SubCoverageTypeCode,\n\tEXP_CalculateValue.CoverageVersion AS i_CoverageVersion,\n\tEXP_CalculateValue.o_RiskUnitGroup AS i_RiskUnitGroup,\n\tEXP_CalculateValue.o_RiskUnit AS i_RiskUnit,\n\tEXP_CalculateValue.o_MajorPerilCode AS i_MajorPerilCode,\n\tEXP_CalculateValue.o_StandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\tEXP_CalculateValue.o_ProductTypeCode AS i_ProductTypeCode,\n\tEXP_CalculateValue.LimitTypeDimID,\n\tEXP_CalculateValue.CoverageGUID,\n\tEXP_CalculateValue.CoverageLimitType,\n\tEXP_CalculateValue.PremiumTransactionEffectiveDate,\n\tEXP_CalculateValue.PremiumTransactionID,\n\tEXP_CalculateValue.o_contract_cust_dim_id AS contract_cust_dim_id,\n\tEXP_CalculateValue.o_pol_dim_id AS pol_dim_id,\n\tEXP_CalculateValue.o_AgencyDimID AS AgencyDimID,\n\tLKP_InsuranceReferenceDim.InsuranceReferenceDimId,\n\tEXP_CalculateValue.o_RunDateID AS RunDateID,\n\tEXP_CalculateValue.CoverageLimitValue,\n\t-- *INF*: DECODE(i_SourceSystemID,'PMS',:LKP.LKP_InsuranceReferenceCoverageDim_PMS(i_RiskUnitGroup,i_RiskUnit,i_MajorPerilCode,i_StandardInsuranceLineCode,i_ProductTypeCode),'DCT',:LKP.LKP_InsuranceReferenceCoverageDim_DCT(i_RiskType,i_CoverageType,i_StandardInsuranceLineCode,i_PerilGroup,i_SubCoverageTypeCode,i_CoverageVersion))\n\tDECODE(i_SourceSystemID,\n\t\t'PMS', LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.InsuranceReferenceCoverageDimId,\n\t\t'DCT', LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceReferenceCoverageDimId\n\t) AS v_InsuranceReferenceCoverageDimId,\n\t-- *INF*: IIF(ISNULL(lkp_CoverageDetailDimId),-1,lkp_CoverageDetailDimId)\n\tIFF(lkp_CoverageDetailDimId IS NULL,\n\t\t- 1,\n\t\tlkp_CoverageDetailDimId\n\t) AS o_CoverageDetailDimId,\n\t-- *INF*: IIF(ISNULL(v_InsuranceReferenceCoverageDimId),-1,v_InsuranceReferenceCoverageDimId)\n\tIFF(v_InsuranceReferenceCoverageDimId IS NULL,\n\t\t- 1,\n\t\tv_InsuranceReferenceCoverageDimId\n\t) AS o_InsuranceReferenceCoverageDimId,\n\tEXP_CalculateValue.pol_ak_id\n\tFROM EXP_CalculateValue\n\tLEFT JOIN LKP_CoverageDetailDim\n\tON LKP_CoverageDetailDim.EDWPremiumTransactionPKId = EXP_CalculateValue.PremiumTransactionID\n\tLEFT JOIN LKP_InsuranceReferenceDim\n\tON LKP_InsuranceReferenceDim.EnterpriseGroupCode = EXP_CalculateValue.o_EnterpriseGroupCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLegalEntityCode = EXP_CalculateValue.o_InsuranceReferenceLegalEntityCode AND LKP_InsuranceReferenceDim.StrategicProfitCenterCode = EXP_CalculateValue.o_StrategicProfitCenterCode AND LKP_InsuranceReferenceDim.InsuranceSegmentCode = EXP_CalculateValue.o_InsuranceSegmentCode AND LKP_InsuranceReferenceDim.PolicyOfferingCode = EXP_CalculateValue.o_PolicyOfferingCode AND LKP_InsuranceReferenceDim.ProductCode = EXP_CalculateValue.o_ProductCode AND LKP_InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode = EXP_CalculateValue.o_InsuranceReferenceLineOfBusinessCode AND LKP_InsuranceReferenceDim.RatingPlanCode = EXP_CalculateValue.o_RatingPlanCode\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_PMS LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.InsuranceLineCode = i_RiskUnitGroup\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.PmsRiskUnitGroupCode = i_RiskUnit\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.PmsRiskUnitCode = i_MajorPerilCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.PmsMajorPerilCode = i_StandardInsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_i_StandardInsuranceLineCode_i_ProductTypeCode.PmsProductTypeCode = i_ProductTypeCode\n\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_DCT LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceLineCode = i_RiskType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctRiskTypeCode = i_CoverageType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageTypeCode = i_StandardInsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctPerilGroup = i_PerilGroup\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctSubCoverageTypeCode = i_SubCoverageTypeCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_i_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageVersion = i_CoverageVersion\n\n),\nFIL_CoverageDetailDimId AS (\n\tSELECT\n\tCoverageGUID, \n\tCoverageLimitType, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionID, \n\tcontract_cust_dim_id, \n\tpol_dim_id, \n\tAgencyDimID, \n\tInsuranceReferenceDimId, \n\tRunDateID, \n\tCoverageLimitValue, \n\to_CoverageDetailDimId AS CoverageDetailDimId, \n\tLimitTypeDimID, \n\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId, \n\tpol_ak_id\n\tFROM EXP_Calculate\n\tWHERE CoverageDetailDimId<>-1\n),\nEXP_DetectChange AS (\n\tSELECT\n\tCoverageGUID AS i_CoverageGUID,\n\tCoverageLimitType AS i_CoverageLimitType,\n\tPremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tcontract_cust_dim_id AS i_contract_cust_dim_id,\n\tpol_dim_id AS i_pol_dim_id,\n\tAgencyDimID AS i_AgencyDimID,\n\tInsuranceReferenceDimId AS i_InsuranceReferenceDimId,\n\tRunDateID AS i_RunDateID,\n\tCoverageLimitValue AS i_CoverageLimitValue,\n\tCoverageDetailDimId AS i_CoverageDetailDimId,\n\tLimitTypeDimID AS i_LimitTypeDimID,\n\tInsuranceReferenceCoverageDimId AS i_InsuranceReferenceCoverageDimId,\n\tpol_ak_id AS i_pol_ak_id,\n\t-- *INF*: DECODE(TRUE, i_pol_ak_id=v_Prev_Pol_AK_ID and \r\n\t-- i_CoverageGUID=v_Prev_CoverageGUID AND i_CoverageLimitType=v_Prev_CoverageLimitType\r\n\t-- ,TO_DECIMAL(i_CoverageLimitValue)-v_Prev_CoverageLimitValue,\r\n\t-- TO_DECIMAL(i_CoverageLimitValue)\r\n\t-- )\n\tDECODE(TRUE,\n\t\ti_pol_ak_id = v_Prev_Pol_AK_ID \n\t\tAND i_CoverageGUID = v_Prev_CoverageGUID \n\t\tAND i_CoverageLimitType = v_Prev_CoverageLimitType, CAST(i_CoverageLimitValue AS FLOAT) - v_Prev_CoverageLimitValue,\n\t\tCAST(i_CoverageLimitValue AS FLOAT)\n\t) AS v_CoverageLimitValue,\n\ti_CoverageLimitValue AS v_Prev_CoverageLimitValue,\n\ti_CoverageGUID AS v_Prev_CoverageGUID,\n\ti_pol_ak_id AS v_Prev_Pol_AK_ID,\n\ti_CoverageLimitType AS v_Prev_CoverageLimitType,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\ti_pol_dim_id AS o_pol_dim_id,\n\ti_CoverageDetailDimId AS o_CoverageDetailDimId,\n\ti_InsuranceReferenceDimId AS o_InsuranceReferenceDimId,\n\ti_InsuranceReferenceCoverageDimId AS o_InsuranceReferenceCoverageDimId,\n\ti_LimitTypeDimID AS o_LimitTypeDimID,\n\ti_RunDateID AS o_RunDateID,\n\tv_CoverageLimitValue AS o_ChangeInLimit,\n\ti_contract_cust_dim_id AS o_contract_cust_dim_id,\n\ti_AgencyDimID AS o_AgencyDimID\n\tFROM FIL_CoverageDetailDimId\n),\nLKP_LimitFactId AS (\n\tSELECT\n\tLimitFactId,\n\tChangeInLimit,\n\tCoverageDetailDimId,\n\tLimitTypeDimID\n\tFROM (\n\t\tselect a.LimitFactId as LimitFactId,\r\n\t\ta.ChangeInLimit as ChangeInLimit,\r\n\t\ta.CoverageDetailDimId as CoverageDetailDimId,\r\n\t\ta.LimitTypeDimId as LimitTypeDimId \r\n\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact a  Inner Hash Join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.Policy_Dim D \r\n\t\ton A.PolicyDimId= D.Pol_Dim_ID\r\n\t\tinner Hash Join @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy E\r\n\t\tOn D.EDW_Pol_AK_ID=E.Pol_AK_ID\r\n\t\tand E.crrnt_snpsht_flag=1\r\n\t\tInner Join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim b\r\n\t\ton a.CoverageDetailDimId=b.CoverageDetailDimId\r\n\t\tjoin (\r\n\t\tselect c.CoverageGUID, e.pol_ak_id from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge a\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction b\r\n\t\ton a.PremiumTransactionAKId=b.PremiumTransactionAKId\r\n\t\tand b.SourceSystemID='DCT'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage c\r\n\t\ton b.RatingCoverageAKId=c.RatingCoverageAKID\r\n\t\tAnd c.SourcesystemID='DCT'\r\n\t\tand b.EffectiveDate=c.EffectiveDate\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage d\r\n\t\ton c.PolicyCoverageAkId=d.PolicyCoverageAkId\r\n\t\tand d.SourceSystemID='DCT'\r\n\t\tand d.CurrentSnapshotFlag=1\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy e\r\n\t\ton d.PolicyAkId=e.Pol_AK_ID\r\n\t\tand e.source_sys_id='DCT'\r\n\t\tand e.crrnt_snpsht_flag=1\r\n\t\twhere a.SourceSystemID='DCT'\r\n\t\tand ('@{pipeline().parameters.SELECTION_START_TS}'>='01/01/1800' and a.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t)\r\n\t\tunion\r\n\t\tselect c.CoverageGUID,e.pol_ak_id from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageLimitBridge a\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction b\r\n\t\ton a.PremiumTransactionAKId=b.PremiumTransactionAKId\r\n\t\tand b.SourceSystemID='PMS'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage c\r\n\t\ton b.StatisticalCoverageAKID=c.StatisticalCoverageAKID\r\n\t\tAND c.SourcesystemID='PMS'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage d\r\n\t\ton c.PolicyCoverageAkId=d.PolicyCoverageAkId\r\n\t\tand d.SourceSystemID='PMS'\r\n\t\tand d.CurrentSnapshotFlag=1\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy e\r\n\t\ton d.PolicyAkId=e.Pol_AK_ID\r\n\t\tand e.source_sys_id='PMS'\r\n\t\tand e.crrnt_snpsht_flag=1\r\n\t\twhere a.SourceSystemID='PMS'\r\n\t\tand ('@{pipeline().parameters.SELECTION_START_TS}'>='01/01/1800' and a.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t)\r\n\t\tunion\r\n\t\tselect a.CoverageGUID,e.pol_ak_id from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto a \r\n\t\tInner Hash Join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction b\r\n\t\ton a.PremiumtransactionId=b.PremiumtransactionId\r\n\t\tand b.SourceSystemID='DCT'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage c\r\n\t\ton b.RatingCoverageAKId=c.RatingCoverageAKID\r\n\t\tand b.EffectiveDate=c.EffectiveDate\r\n\t\tAnd c.SourcesystemID='DCT'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage d\r\n\t\ton c.PolicyCoverageAkId=d.PolicyCoverageAkId\r\n\t\tand d.SourceSystemID='DCT'\r\n\t\tand d.CurrentSnapshotFlag=1\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy e\r\n\t\ton d.PolicyAkId=e.Pol_AK_ID\r\n\t\tand e.source_sys_id='DCT'\r\n\t\tand e.crrnt_snpsht_flag=1\r\n\t\twhere a.SourceSystemID='DCT'\r\n\t\tand ('@{pipeline().parameters.SELECTION_START_TS}'>='01/01/1800' and a.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t)\r\n\t\tunion\r\n\t\tselect a.CoverageGUID,e.pol_ak_id from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto a\r\n\t\tInner Hash Join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction b\r\n\t\ton a.PremiumtransactionId=b.PremiumtransactionId\r\n\t\tand b.SourceSystemID='PMS'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage c\r\n\t\ton b.StatisticalCoverageAKID=c.StatisticalCoverageAKID\r\n\t\tAnd c.SourcesystemID='PMS'\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage d\r\n\t\ton c.PolicyCoverageAkId=d.PolicyCoverageAkId\r\n\t\tand d.SourceSystemID='PMS'\r\n\t\tand d.CurrentSnapshotFlag=1\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy e\r\n\t\ton d.PolicyAkId=e.Pol_AK_ID\r\n\t\tand e.source_sys_id='PMS'\r\n\t\tand e.crrnt_snpsht_flag=1\r\n\t\twhere a.SourceSystemID='PMS'\r\n\t\tand ('@{pipeline().parameters.SELECTION_START_TS}'>='01/01/1800' and a.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\t) c\r\n\t\ton b.CoverageGuid=c.CoverageGUID\r\n\t\tand E.Pol_AK_ID=C.pol_ak_id\r\n\t\twhere a.CoverageDetailDimId<>-1\r\n\t\torder by a.CoverageDetailDimId,a.LimitTypeDimId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageDetailDimId,LimitTypeDimID ORDER BY LimitFactId) = 1\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tLKP_LimitFactId.LimitFactId AS LKP_LimitFactId,\n\tLKP_LimitFactId.ChangeInLimit AS LKP_ChangeInLimit,\n\tEXP_DetectChange.o_AuditId AS AuditId,\n\tEXP_DetectChange.o_pol_dim_id AS pol_dim_id,\n\tEXP_DetectChange.o_CoverageDetailDimId AS CoverageDetailDimId,\n\tEXP_DetectChange.o_InsuranceReferenceDimId AS InsuranceReferenceDimId,\n\tEXP_DetectChange.o_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId,\n\tEXP_DetectChange.o_LimitTypeDimID AS LimitTypeDimID,\n\tEXP_DetectChange.o_RunDateID AS RunDateID,\n\tEXP_DetectChange.o_ChangeInLimit AS ChangeInLimit,\n\tEXP_DetectChange.o_contract_cust_dim_id AS contract_cust_dim_id,\n\tEXP_DetectChange.o_AgencyDimID AS AgencyDimID\n\tFROM EXP_DetectChange\n\tLEFT JOIN LKP_LimitFactId\n\tON LKP_LimitFactId.CoverageDetailDimId = EXP_DetectChange.o_CoverageDetailDimId AND LKP_LimitFactId.LimitTypeDimID = EXP_DetectChange.o_LimitTypeDimID\n),\nRTR_Insert_Update_Insert AS (SELECT * FROM RTR_Insert_Update WHERE ISNULL(LKP_LimitFactId) AND ChangeInLimit<>0),\nRTR_Insert_Update_Update AS (SELECT * FROM RTR_Insert_Update WHERE NOT ISNULL(LKP_LimitFactId) AND LKP_ChangeInLimit != ChangeInLimit),\nUPD_Existing AS (\n\tSELECT\n\tLKP_LimitFactId AS LKP_LimitFactId3, \n\tAuditId AS AuditId3, \n\tpol_dim_id AS pol_dim_id3, \n\tCoverageDetailDimId AS CoverageDetailDimId3, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId3, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId3, \n\tLimitTypeDimID AS LimitTypeDimID3, \n\tRunDateID AS RunDateID3, \n\tChangeInLimit AS ChangeInLimit3, \n\tcontract_cust_dim_id AS contract_cust_dim_id3, \n\tAgencyDimID AS AgencyDimID3\n\tFROM RTR_Insert_Update_Update\n),\nLimitFact_Coverage_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact AS T\n\tUSING UPD_Existing AS S\n\tON T.LimitFactId = S.LKP_LimitFactId3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId3, T.AgencyDimId = S.AgencyDimID3, T.PolicyDimId = S.pol_dim_id3, T.ContractCustomerDimId = S.contract_cust_dim_id3, T.CoverageDetailDimId = S.CoverageDetailDimId3, T.InsuranceReferenceDimId = S.InsuranceReferenceDimId3, T.InsuranceReferenceCoverageDimId = S.InsuranceReferenceCoverageDimId3, T.LimitTypeDimID = S.LimitTypeDimID3, T.RunDateId = S.RunDateID3, T.ChangeInLimit = S.ChangeInLimit3\n),\nLimitFact_Coverage_Insert AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.PRE_SQL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact\n\t(AuditId, AgencyDimId, PolicyDimId, ContractCustomerDimId, CoverageDetailDimId, InsuranceReferenceDimId, InsuranceReferenceCoverageDimId, LimitTypeDimID, RunDateId, ChangeInLimit)\n\tSELECT \n\tAUDITID, \n\tAgencyDimID AS AGENCYDIMID, \n\tpol_dim_id AS POLICYDIMID, \n\tcontract_cust_dim_id AS CONTRACTCUSTOMERDIMID, \n\tCOVERAGEDETAILDIMID, \n\tINSURANCEREFERENCEDIMID, \n\tINSURANCEREFERENCECOVERAGEDIMID, \n\tLIMITTYPEDIMID, \n\tRunDateID AS RUNDATEID, \n\tCHANGEINLIMIT\n\tFROM RTR_Insert_Update_Insert\n),\nSQ_PolicyLimit AS (\n\tWITH cnt\r\n\tAS (\r\n\t\tSELECT 1 AS cnt\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT cnt + 1\r\n\t\tFROM cnt\r\n\t\tWHERE cnt < 6\r\n\t\t)\r\n\tSELECT ISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tP.pol_sym,\r\n\t\tPL.EffectiveDate,\r\n\t\tPL.PolicyAKId,\r\n\t\tCASE WHEN cnt = 1 THEN 'PolicyPerOccurenceLimit' WHEN cnt = 2 THEN 'PolicyAggregateLimit' WHEN cnt = 3 THEN 'PolicyProductAggregateLimit' WHEN cnt = 4 THEN 'PolicyPerAccidentLimit' WHEN cnt = 5 THEN 'PolicyPerDiseaseLimit' WHEN cnt = 6 THEN 'PolicyPerClaimLimit' END AS LimitType,\r\n\t\tCASE WHEN cnt = 1 THEN PL.PolicyPerOccurenceLimit WHEN cnt = 2 THEN PL.PolicyAggregateLimit WHEN cnt = 3 THEN PL.PolicyProductAggregateLimit WHEN cnt = 4 THEN PL.PolicyPerAccidentLimit WHEN cnt = 5 THEN PL.PolicyPerDiseaseLimit WHEN cnt = 6 THEN PL.PolicyPerClaimLimit END AS LimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tPL.SourceSystemID,\r\n\t\tPC.TypeBureauCode,\r\n\t\tSC.RiskUnitGroup,\r\n\t\tSC.RiskUnit,\r\n\t\tSC.RiskUnitSequenceNumber,\r\n\t\tSC.MajorPerilCode,\r\n\t\tSC.ClassCode,\r\n\t\t'N/A' AS RiskType,\r\n\t\t'N/A' AS CoverageType,\r\n\t\t'N/A' AS PerilGroup,\r\n\t\t'N/A' AS SubCoverageTypeCode,\r\n\t\t'N/A' AS CoverageVersion,\r\n\t\tSC.ProductAKId,\r\n\t\tSC.InsuranceReferenceLineOfBusinessAKID,\r\n\t\tPL.PolicyLimitId,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tPC.RatingPlanAKId\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyLimit PL  with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PL.PolicyAKId = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND PC.InsuranceLine = PL.InsuranceLine\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC with (nolock) ON PC.PolicyCoverageAKID = SC.PolicyCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) ON SC.StatisticalCoverageAKId = PT.StatisticalCoverageAKId\r\n\tJOIN cnt ON cnt <= 6\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON PC.InsuranceLine = SIL.ins_line_code\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'EXCEED AND PMS'\r\n\tWHERE EXISTS (\r\n\t\t\t\tSELECT 1\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyLimit PL2 with (nolock)\r\n\t\t\t\tWHERE PL2.PolicyAKId = PL.PolicyAKID\r\n\t\t\t\t\tAND PL2.InsuranceLine = PL.InsuranceLine\r\n\t\t\t\t\tAND PL2.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t)\r\n\t\tAND PL.SourceSystemID = 'PMS' \r\n\t@{pipeline().parameters.WHERE_CLAUSE_POL_PMS}\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT ISNULL(SIL.StandardInsuranceLineCode, 'N/A') AS StandardInsuranceLineCode,\r\n\t\tP.pol_sym,\r\n\t\tPL.EffectiveDate,\r\n\t\tPL.PolicyAKId,\r\n\t\tCASE WHEN cnt = 1 THEN 'PolicyPerOccurenceLimit' WHEN cnt = 2 THEN 'PolicyAggregateLimit' WHEN cnt = 3 THEN 'PolicyProductAggregateLimit' WHEN cnt = 4 THEN 'PolicyPerAccidentLimit' WHEN cnt = 5 THEN 'PolicyPerDiseaseLimit' WHEN cnt = 6 THEN 'PolicyPerClaimLimit' END AS LimitType,\r\n\t\tCASE WHEN cnt = 1 THEN PL.PolicyPerOccurenceLimit WHEN cnt = 2 THEN PL.PolicyAggregateLimit WHEN cnt = 3 THEN PL.PolicyProductAggregateLimit WHEN cnt = 4 THEN PL.PolicyPerAccidentLimit WHEN cnt = 5 THEN PL.PolicyPerDiseaseLimit WHEN cnt = 6 THEN PL.PolicyPerClaimLimit END AS LimitValue,\r\n\t\tP.StrategicProfitCenterAKId,\r\n\t\tP.InsuranceSegmentAKId,\r\n\t\tP.PolicyOfferingAKId,\r\n\t\tPL.SourceSystemID,\r\n\t\tPC.TypeBureauCode,\r\n\t\t'N/A' AS RiskUnitGroup,\r\n\t\t'N/A' AS RiskUnit,\r\n\t\t'N/A' AS RiskUnitSequenceNumber,\r\n\t\t'N/A' AS MajorPerilCode,\r\n\t\t'N/A' AS ClassCode,\r\n\t\tRC.RiskType,\r\n\t\tRC.CoverageType,\r\n\t\tRC.PerilGroup AS PerilGroup,\r\n\t\tRC.SubCoverageTypeCode AS SubCoverageTypeCode,\r\n\t\tRC.CoverageVersion AS CoverageVersion,\r\n\t\tRC.ProductAKId,\r\n\t\tRC.InsuranceReferenceLineOfBusinessAKID,\r\n\t\tPL.PolicyLimitId,\r\n\t\tPT.PremiumTransactionBookedDate,\r\n\t\tPC.RatingPlanAKId\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyLimit PL with (nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P with (nolock) ON PL.PolicyAKId = P.pol_ak_id\r\n\t\tAND P.crrnt_snpsht_flag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC with (nolock) ON PC.PolicyAKID = P.pol_ak_id\r\n\t\tAND PC.InsuranceLine = PL.InsuranceLine\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC with (nolock) ON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock) ON RC.RatingCoverageAKId = PT.RatingCoverageAKId\r\n\t\tAND PT.EffectiveDate = RC.EffectiveDate\r\n\tJOIN cnt ON cnt <= 6\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL with (nolock) ON PC.InsuranceLine = SIL.ins_line_code\r\n\t\tAND SIL.crrnt_snpsht_flag = 1\r\n\t\tAND SIL.source_sys_id = 'DCT'\r\n\tWHERE EXISTS (\r\n\t\t\t\tSELECT 1\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyLimit PL2 with (nolock)\r\n\t\t\t\tWHERE PL2.PolicyAKId = PL.PolicyAKID\r\n\t\t\t\t\tAND PL2.InsuranceLine = PL.InsuranceLine\r\n\t\t\t\t\tAND PL2.ModifiedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\t\t\t)\r\n\t\tAND PL.SourceSystemID = 'DCT'\t\r\n\t@{pipeline().parameters.WHERE_CLAUSE_POL_DCT}\n),\nLKP_LimitTypeDim_Policy AS (\n\tSELECT\n\tLimitTypeDimID,\n\tLimitType\n\tFROM (\n\t\tSELECT \n\t\t\tLimitTypeDimID,\n\t\t\tLimitType\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.LimitTypeDim\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LimitType ORDER BY LimitTypeDimID) = 1\n),\nFIL_Invalid_Policy AS (\n\tSELECT\n\tLKP_LimitTypeDim_Policy.LimitTypeDimID, \n\tSQ_PolicyLimit.StandardInsuranceLineCode, \n\tSQ_PolicyLimit.pol_sym, \n\tSQ_PolicyLimit.EffectiveDate, \n\tSQ_PolicyLimit.PolicyAKId, \n\tSQ_PolicyLimit.LimitValue, \n\tSQ_PolicyLimit.StrategicProfitCenterAKId, \n\tSQ_PolicyLimit.InsuranceSegmentAKId, \n\tSQ_PolicyLimit.PolicyOfferingAKId, \n\tSQ_PolicyLimit.SourceSystemID, \n\tSQ_PolicyLimit.TypeBureauCode, \n\tSQ_PolicyLimit.RiskUnitGroup, \n\tSQ_PolicyLimit.RiskUnit, \n\tSQ_PolicyLimit.RiskUnitSequenceNumber, \n\tSQ_PolicyLimit.MajorPerilCode, \n\tSQ_PolicyLimit.ClassCode, \n\tSQ_PolicyLimit.RiskType, \n\tSQ_PolicyLimit.CoverageType, \n\tSQ_PolicyLimit.PerilGroup, \n\tSQ_PolicyLimit.SubCoverageTypeCode, \n\tSQ_PolicyLimit.CoverageVersion, \n\tSQ_PolicyLimit.ProductAKId, \n\tSQ_PolicyLimit.InsuranceReferenceLineOfBusinessAKId, \n\tSQ_PolicyLimit.PolicyLimitId, \n\tSQ_PolicyLimit.PremiumTransactionBookedDate, \n\tSQ_PolicyLimit.RatingPlanAKId\n\tFROM SQ_PolicyLimit\n\tLEFT JOIN LKP_LimitTypeDim_Policy\n\tON LKP_LimitTypeDim_Policy.LimitType = SQ_PolicyLimit.LimitType\n\tWHERE NOT ISNULL(LimitTypeDimID) AND IS_NUMBER(LimitValue)=1\n),\nEXP_DefaultValue AS (\n\tSELECT\n\tStandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\tpol_sym AS i_pol_sym,\n\tEffectiveDate,\n\tStrategicProfitCenterAKId AS i_StrategicProfitCenterAKId,\n\tInsuranceSegmentAKId AS i_InsuranceSegmentAKId,\n\tPolicyOfferingAKId AS i_PolicyOfferingAKId,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tRiskUnit AS i_RiskUnit,\n\tRiskUnitSequenceNumber AS i_RiskUnitSequenceNumber,\n\tMajorPerilCode AS i_MajorPerilCode,\n\tClassCode AS i_ClassCode,\n\tProductAKId AS i_ProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tLimitTypeDimID,\n\tPolicyAKId,\n\tLimitValue,\n\tSourceSystemID,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tPolicyLimitId,\n\tPremiumTransactionBookedDate,\n\tRatingPlanAKId AS i_RatingPlanAKId,\n\t-- *INF*: :LKP.LKP_ENTERPRISEGROUP(i_StrategicProfitCenterAKId)\n\tLKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId.EnterpriseGroupCode AS v_EnterpriseGroupCode,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCELEGALENTITY(i_StrategicProfitCenterAKId)\n\tLKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId.InsuranceReferenceLegalEntityCode AS v_InsuranceReferenceLegalEntityCode,\n\t-- *INF*: :LKP.LKP_STRATEGICPROFITCENTER(i_StrategicProfitCenterAKId)\n\tLKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId.StrategicProfitCenterCode AS v_StrategicProfitCenterCode,\n\t-- *INF*: :LKP.LKP_INSURANCESEGMENT(i_InsuranceSegmentAKId)\n\tLKP_INSURANCESEGMENT_i_InsuranceSegmentAKId.InsuranceSegmentCode AS v_InsuranceSegmentCode,\n\t-- *INF*: :LKP.LKP_POLICYOFFERING(i_PolicyOfferingAKId)\n\tLKP_POLICYOFFERING_i_PolicyOfferingAKId.PolicyOfferingCode AS v_PolicyOfferingCode,\n\t-- *INF*: :LKP.LKP_PRODUCT(i_ProductAKId)\n\tLKP_PRODUCT_i_ProductAKId.ProductCode AS v_ProductCode,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCELINEOFBUSINESS(i_InsuranceReferenceLineOfBusinessAKId)\n\tLKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId.InsuranceReferenceLineOfBusinessCode AS v_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: SUBSTR(i_pol_sym,1,2)\n\tSUBSTR(i_pol_sym, 1, 2\n\t) AS v_pol_sym_1_2,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TO_DATE('21001231','YYYYMMDD'))\n\tLKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD.clndr_id AS v_clndr_id,\n\t-- *INF*: IIF(NOT ISNULL(v_clndr_id),v_clndr_id,-1)\n\tIFF(v_clndr_id IS NOT NULL,\n\t\tv_clndr_id,\n\t\t- 1\n\t) AS v_default_clndr_id,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode\n\t) AS v_MajorPerilCode,\n\t-- *INF*: IIF(LTRIM(v_MajorPerilCode,'0')='' OR REG_MATCH(v_MajorPerilCode,'[^0-9a-zA-Z]'),'N/A',v_MajorPerilCode)\n\tIFF(LTRIM(v_MajorPerilCode, '0'\n\t\t) = '' \n\t\tOR REGEXP_LIKE(v_MajorPerilCode, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_MajorPerilCode\n\t) AS v_Reg_MajorPerilCode,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TRUNC(PremiumTransactionBookedDate,'D'))\n\tLKP_CALENDER_DIM_TRUNC_PremiumTransactionBookedDate_D.clndr_id AS v_RunDateID,\n\t-- *INF*: IIF(REG_MATCH(i_StandardInsuranceLineCode,'[^0-9a-zA-Z]'),'N/A',i_StandardInsuranceLineCode)\n\tIFF(REGEXP_LIKE(i_StandardInsuranceLineCode, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\ti_StandardInsuranceLineCode\n\t) AS v_Reg_StandardInsuranceLineCode,\n\t-- *INF*: IIF(v_Reg_StandardInsuranceLineCode='N/A' AND (IN(i_TypeBureauCode,'AL','AN','AP') OR IN(v_Reg_MajorPerilCode,'930','931')),'CA',v_Reg_StandardInsuranceLineCode)\n\tIFF(v_Reg_StandardInsuranceLineCode = 'N/A' \n\t\tAND ( i_TypeBureauCode IN ('AL','AN','AP') \n\t\t\tOR v_Reg_MajorPerilCode IN ('930','931') \n\t\t),\n\t\t'CA',\n\t\tv_Reg_StandardInsuranceLineCode\n\t) AS v_StandardInsuranceLineCode,\n\t-- *INF*: IIF(v_StandardInsuranceLineCode='N/A' AND IN(i_TypeBureauCode,'CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),1,0)\n\tIFF(v_StandardInsuranceLineCode = 'N/A' \n\t\tAND i_TypeBureauCode IN ('CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),\n\t\t1,\n\t\t0\n\t) AS v_flag,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode\n\t) AS v_ClassCode,\n\t-- *INF*: IIF(IN(v_StandardInsuranceLineCode,'CR') OR v_flag=1,'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup))\n\tIFF(v_StandardInsuranceLineCode IN ('CR') \n\t\tOR v_flag = 1,\n\t\t'N/A',\n\t\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup\n\t\t)\n\t) AS v_Risk_Unit_Group,\n\t-- *INF*: IIF(LTRIM(v_Risk_Unit_Group,'0')='','N/A',v_Risk_Unit_Group)\n\tIFF(LTRIM(v_Risk_Unit_Group, '0'\n\t\t) = '',\n\t\t'N/A',\n\t\tv_Risk_Unit_Group\n\t) AS v_Zero_Risk_Unit_Group,\n\t-- *INF*: IIF(   v_flag=1 OR   (v_StandardInsuranceLineCode='GL' AND (v_MajorPerilCode<>'540'    OR NOT IN(v_ClassCode,'11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058')))   OR IN(v_StandardInsuranceLineCode,'WC','IM','CG','CA')=1,  'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit) )\n\tIFF(v_flag = 1 \n\t\tOR ( v_StandardInsuranceLineCode = 'GL' \n\t\t\tAND ( v_MajorPerilCode <> '540' \n\t\t\t\tOR NOT v_ClassCode IN ('11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058') \n\t\t\t) \n\t\t) \n\t\tOR v_StandardInsuranceLineCode IN ('WC','IM','CG','CA') = 1,\n\t\t'N/A',\n\t\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit\n\t\t)\n\t) AS v_RiskUnit,\n\t-- *INF*: IIF(LTRIM(v_RiskUnit,'0')='','N/A',v_RiskUnit)\n\tIFF(LTRIM(v_RiskUnit, '0'\n\t\t) = '',\n\t\t'N/A',\n\t\tv_RiskUnit\n\t) AS v_Zero_RiskUnit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber,2,1))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber, 2, 1\n\t\t)\n\t) AS v_ProductTypeCode,\n\t-- *INF*: :LKP.LKP_RATINGPLAN(i_RatingPlanAKId)\n\tLKP_RATINGPLAN_i_RatingPlanAKId.RatingPlanCode AS v_RatingPlanCode,\n\t-- *INF*: IIF(NOT ISNULL(v_EnterpriseGroupCode), v_EnterpriseGroupCode, '1')\n\tIFF(v_EnterpriseGroupCode IS NOT NULL,\n\t\tv_EnterpriseGroupCode,\n\t\t'1'\n\t) AS o_EnterpriseGroupCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceReferenceLegalEntityCode), v_InsuranceReferenceLegalEntityCode, '1')\n\tIFF(v_InsuranceReferenceLegalEntityCode IS NOT NULL,\n\t\tv_InsuranceReferenceLegalEntityCode,\n\t\t'1'\n\t) AS o_InsuranceReferenceLegalEntityCode,\n\t-- *INF*: IIF(NOT ISNULL(v_StrategicProfitCenterCode), v_StrategicProfitCenterCode, '6')\n\tIFF(v_StrategicProfitCenterCode IS NOT NULL,\n\t\tv_StrategicProfitCenterCode,\n\t\t'6'\n\t) AS o_StrategicProfitCenterCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceSegmentCode), v_InsuranceSegmentCode, 'N/A')\n\tIFF(v_InsuranceSegmentCode IS NOT NULL,\n\t\tv_InsuranceSegmentCode,\n\t\t'N/A'\n\t) AS o_InsuranceSegmentCode,\n\t-- *INF*: IIF(NOT ISNULL(v_PolicyOfferingCode), v_PolicyOfferingCode, '000')\n\tIFF(v_PolicyOfferingCode IS NOT NULL,\n\t\tv_PolicyOfferingCode,\n\t\t'000'\n\t) AS o_PolicyOfferingCode,\n\t-- *INF*: IIF(NOT ISNULL(v_ProductCode), v_ProductCode, '000')\n\tIFF(v_ProductCode IS NOT NULL,\n\t\tv_ProductCode,\n\t\t'000'\n\t) AS o_ProductCode,\n\t-- *INF*: IIF(NOT ISNULL(v_InsuranceReferenceLineOfBusinessCode), v_InsuranceReferenceLineOfBusinessCode, '000')\n\tIFF(v_InsuranceReferenceLineOfBusinessCode IS NOT NULL,\n\t\tv_InsuranceReferenceLineOfBusinessCode,\n\t\t'000'\n\t) AS o_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: IIF(ISNULL(v_RunDateID),v_default_clndr_id,v_RunDateID)\n\tIFF(v_RunDateID IS NULL,\n\t\tv_default_clndr_id,\n\t\tv_RunDateID\n\t) AS o_RunDateID,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_Risk_Unit_Group,'[^0-9a-zA-Z]'),'N/A',v_Zero_Risk_Unit_Group)\n\tIFF(REGEXP_LIKE(v_Zero_Risk_Unit_Group, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_Zero_Risk_Unit_Group\n\t) AS o_RiskUnitGroup,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_RiskUnit,'[^0-9a-zA-Z]'),'N/A',v_Zero_RiskUnit)\n\tIFF(REGEXP_LIKE(v_Zero_RiskUnit, '[^0-9a-zA-Z]'\n\t\t),\n\t\t'N/A',\n\t\tv_Zero_RiskUnit\n\t) AS o_RiskUnit,\n\tv_Reg_MajorPerilCode AS o_MajorPerilCode,\n\t-- *INF*: IIF(SourceSystemID='PMS',v_StandardInsuranceLineCode,v_Reg_StandardInsuranceLineCode)\n\tIFF(SourceSystemID = 'PMS',\n\t\tv_StandardInsuranceLineCode,\n\t\tv_Reg_StandardInsuranceLineCode\n\t) AS o_StandardInsuranceLineCode,\n\t-- *INF*: IIF(   REG_MATCH(v_ProductTypeCode,'[^0-9a-zA-Z]') OR v_Reg_StandardInsuranceLineCode<>'GL' OR v_ProductTypeCode='0',   'N/A',v_ProductTypeCode )\n\tIFF(REGEXP_LIKE(v_ProductTypeCode, '[^0-9a-zA-Z]'\n\t\t) \n\t\tOR v_Reg_StandardInsuranceLineCode <> 'GL' \n\t\tOR v_ProductTypeCode = '0',\n\t\t'N/A',\n\t\tv_ProductTypeCode\n\t) AS o_ProductTypeCode,\n\tv_pol_sym_1_2 AS o_PolicySymbol,\n\t-- *INF*: IIF(ISNULL(v_RatingPlanCode), '1', v_RatingPlanCode)\n\tIFF(v_RatingPlanCode IS NULL,\n\t\t'1',\n\t\tv_RatingPlanCode\n\t) AS o_RatingPlanCode\n\tFROM FIL_Invalid_Policy\n\tLEFT JOIN LKP_ENTERPRISEGROUP LKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId\n\tON LKP_ENTERPRISEGROUP_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_INSURANCEREFERENCELEGALENTITY LKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId\n\tON LKP_INSURANCEREFERENCELEGALENTITY_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_STRATEGICPROFITCENTER LKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId\n\tON LKP_STRATEGICPROFITCENTER_i_StrategicProfitCenterAKId.StrategicProfitCenterAKId = i_StrategicProfitCenterAKId\n\n\tLEFT JOIN LKP_INSURANCESEGMENT LKP_INSURANCESEGMENT_i_InsuranceSegmentAKId\n\tON LKP_INSURANCESEGMENT_i_InsuranceSegmentAKId.InsuranceSegmentAKId = i_InsuranceSegmentAKId\n\n\tLEFT JOIN LKP_POLICYOFFERING LKP_POLICYOFFERING_i_PolicyOfferingAKId\n\tON LKP_POLICYOFFERING_i_PolicyOfferingAKId.PolicyOfferingAKId = i_PolicyOfferingAKId\n\n\tLEFT JOIN LKP_PRODUCT LKP_PRODUCT_i_ProductAKId\n\tON LKP_PRODUCT_i_ProductAKId.ProductAKId = i_ProductAKId\n\n\tLEFT JOIN LKP_INSURANCEREFERENCELINEOFBUSINESS LKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId\n\tON LKP_INSURANCEREFERENCELINEOFBUSINESS_i_InsuranceReferenceLineOfBusinessAKId.InsuranceReferenceLineOfBusinessAKId = i_InsuranceReferenceLineOfBusinessAKId\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD\n\tON LKP_CALENDER_DIM_TO_DATE_21001231_YYYYMMDD.clndr_date = TO_DATE('21001231', 'YYYYMMDD'\n)\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TRUNC_PremiumTransactionBookedDate_D\n\tON LKP_CALENDER_DIM_TRUNC_PremiumTransactionBookedDate_D.clndr_date = CAST(TRUNC(PremiumTransactionBookedDate, 'DAY') AS TIMESTAMP_NTZ(0))\n\n\tLEFT JOIN LKP_RATINGPLAN LKP_RATINGPLAN_i_RatingPlanAKId\n\tON LKP_RATINGPLAN_i_RatingPlanAKId.RatingPlanAKId = i_RatingPlanAKId\n\n),\nEXP_DetectMainCoverage AS (\n\tSELECT\n\tEffectiveDate,\n\tLimitTypeDimID,\n\tPolicyAKId,\n\tLimitValue,\n\tSourceSystemID,\n\tRiskType,\n\tCoverageType,\n\tPerilGroup,\n\tSubCoverageTypeCode,\n\tCoverageVersion,\n\tPolicyLimitId,\n\tPremiumTransactionBookedDate,\n\to_EnterpriseGroupCode AS EnterpriseGroupCode,\n\to_InsuranceReferenceLegalEntityCode AS InsuranceReferenceLegalEntityCode,\n\to_StrategicProfitCenterCode AS StrategicProfitCenterCode,\n\to_InsuranceSegmentCode AS InsuranceSegmentCode,\n\to_PolicyOfferingCode AS PolicyOfferingCode,\n\to_ProductCode AS ProductCode,\n\to_InsuranceReferenceLineOfBusinessCode AS InsuranceReferenceLineOfBusinessCode,\n\to_RunDateID AS RunDateID,\n\to_RiskUnitGroup AS RiskUnitGroup,\n\to_RiskUnit AS RiskUnit,\n\to_MajorPerilCode AS MajorPerilCode,\n\to_StandardInsuranceLineCode AS StandardInsuranceLineCode,\n\to_ProductTypeCode AS ProductTypeCode,\n\to_RatingPlanCode AS RatingPlanCode,\n\to_PolicySymbol AS PolicySymbol,\n\t-- *INF*: DECODE(SourceSystemID='PMS',\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='O' AND RiskUnit='N/A', \r\n\t-- 100,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='540' AND ProductTypeCode= 'O' AND RiskUnit='N/A', \r\n\t-- 99,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode= 'P' AND RiskUnit='N/A', \r\n\t-- 98,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='370' AND ProductCode='370' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='355' AND MajorPerilCode='530' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 97,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='365' AND ProductCode='365' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='345' AND MajorPerilCode='530' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 96,\r\n\t-- PolicySymbol='CP' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='321' AND ProductCode='321' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='346' AND MajorPerilCode='530' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 95,\r\n\t-- PolicySymbol='CP' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='380' AND ProductCode='380' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='365' AND MajorPerilCode='550' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 94,\r\n\t-- PolicySymbol='CD' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='310' AND ProductCode='310' AND InsuranceReferenceLineOfBusinessCode='310' AND RiskUnitGroup='367' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND in(RiskUnit, '80054', '80055', '80056', '80058'), \r\n\t-- 93,\r\n\t-- PolicySymbol='CD' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='310' AND ProductCode='310' AND InsuranceReferenceLineOfBusinessCode='310' AND RiskUnitGroup='367' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND in(RiskUnit, '80051', '80052', '80053', '80057'), \r\n\t-- 92,\r\n\t-- IN(PolicySymbol,'CU', 'NU') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='900' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskUnitGroup='370' AND MajorPerilCode='517' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 91,\r\n\t-- PolicySymbol='NN' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='312' AND ProductCode='312' AND InsuranceReferenceLineOfBusinessCode='312' AND RiskUnitGroup='286' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 90,\r\n\t-- IN(PolicySymbol,'NE', 'ER') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='330' AND ProductCode='330' AND InsuranceReferenceLineOfBusinessCode='330' AND RiskUnitGroup='366' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 89,\r\n\t-- PolicyOfferingCode='100' AND StandardInsuranceLineCode='WC' AND \r\n\t-- (IN(PolicySymbol,'VA', 'VB', 'VC', 'VD', 'VE', 'VF', 'VG', 'VH', 'VI', 'VJ', 'VK', 'VL', 'VM', 'VN', 'VO', 'VP', 'VQ', 'VR', 'VS', 'VT', 'VU', 'VV', 'VW', 'WA', 'WB', 'WC', 'WD', 'WG', 'WH', 'WI', 'WK', 'WJ', 'WN', 'WO', 'WP', 'WR', 'WS', 'WT', 'WU', 'WV', 'WW', 'WY', 'YA', 'YB', 'YC', 'YD', 'YE', 'YF', 'YG', 'YH', 'YI', 'YJ', 'YK', 'YL', 'YM', 'YN', 'YO', 'YP', 'YQ', 'YR', 'YS', 'YT', 'YU', 'YV', 'YW', 'YX', 'ZZ')\r\n\t-- OR IN(PolicySymbol, 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'A7', 'A8', 'LA', 'LB', 'LC', 'LE', 'LF', 'LG', 'LH', 'LI', 'LJ', 'LK', 'LL', 'LM', 'LN', 'AB', 'AC', 'AD', 'AE', 'AF', 'AG', 'AH', 'AI', 'AJ', 'AK', 'AL', 'AM', 'AN', 'AO', 'AP', 'AQ', 'AR', 'AT', 'AU', 'AV', 'AW', 'AX', 'AY', 'AZ', 'JA', 'JB', 'JC', 'JD', 'JE', 'JF', 'JG', 'JH', 'JI', 'JJ', 'JK', 'JL', 'JM', 'JN', 'JO', 'JP', 'JQ', 'JR', 'JS', 'JT', 'JU', 'JV', 'JW', 'JX', 'JY', 'JZ', 'J1', 'J2', 'J3', 'J4', 'J5', 'J6')\r\n\t-- OR IN(PolicySymbol, 'RA', 'RB', 'RC', 'RD', 'RE', 'RF', 'RG', 'RH', 'RI', 'RJ', 'RK', 'RL', 'RM', 'RN', 'RO', 'RP', 'RQ', 'RR', 'RS', 'RT', 'RU', 'RV', 'RW', 'RX', 'RW', 'RX', 'SA', 'SB', 'SC', 'SD', 'SE', 'SF', 'SG', 'SH', 'SI', 'SJ', 'SK', 'SL', 'SM', 'SN', 'SO', 'SP', 'SR', 'SS', 'ST', 'SU', 'SV', 'SW', 'SX', 'SY', 'TH', 'TI', 'TJ', 'TK', 'TL', 'TM', 'TN', 'TO', 'TP', 'TQ', 'TR', 'TS', 'TT', 'TV', 'TW')) AND ProductCode='100' AND InsuranceReferenceLineOfBusinessCode='100' AND RiskUnitGroup='010' AND MajorPerilCode='032' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 88,\r\n\t-- IN(PolicySymbol, 'NA', 'NB') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='430' AND ProductCode='430' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='O' AND RiskUnit='N/A', \r\n\t-- 87,\r\n\t-- IN(PolicySymbol, 'BC', 'BD') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='410' AND ProductCode='410' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='O' AND RiskUnit='N/A', \r\n\t-- 86,\r\n\t-- PolicySymbol='BO' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='450' AND ProductCode='450' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='O' AND RiskUnit='N/A', \r\n\t-- 85,\r\n\t-- PolicySymbol='CM' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='360' AND ProductCode='360' AND InsuranceReferenceLineOfBusinessCode='360' AND RiskUnitGroup='901' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 84,\r\n\t-- PolicySymbol='NK' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='311' AND ProductCode='311' AND InsuranceReferenceLineOfBusinessCode='330' AND RiskUnitGroup='287' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 83,\r\n\t-- PolicySymbol='BG' AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='420' AND ProductCode='420' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='O' AND RiskUnit='N/A', \r\n\t-- 82,\r\n\t-- IN(PolicySymbol,'WE', 'WF', 'WL', 'WZ') AND StandardInsuranceLineCode='WC' AND PolicyOfferingCode='100' AND ProductCode='100' AND InsuranceReferenceLineOfBusinessCode='100' AND RiskUnitGroup='N/A' AND MajorPerilCode='032' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 81,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='320' AND ProductCode='320' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='P' AND RiskUnit='N/A', \r\n\t-- 80,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='320' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='340' AND MajorPerilCode='530' AND ProductTypeCode='P' AND RiskUnit='N/A', \r\n\t-- 79,\r\n\t-- IN(PolicySymbol,'NN') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='312' AND ProductCode='312' AND InsuranceReferenceLineOfBusinessCode='312' AND RiskUnitGroup='287' AND MajorPerilCode='540' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 78,\r\n\t-- IN(PolicySymbol,'CP', 'NS') AND StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='370' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskUnitGroup='355' AND MajorPerilCode='530' AND ProductTypeCode='N/A' AND RiskUnit='N/A', \r\n\t-- 77,\r\n\t-- 0)\n\tDECODE(SourceSystemID = 'PMS',\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 100,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 99,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'P' \n\t\tAND RiskUnit = 'N/A', 98,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '370' \n\t\tAND ProductCode = '370' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '355' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 97,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '365' \n\t\tAND ProductCode = '365' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '345' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 96,\n\t\tPolicySymbol = 'CP' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '321' \n\t\tAND ProductCode = '321' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '346' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 95,\n\t\tPolicySymbol = 'CP' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '380' \n\t\tAND ProductCode = '380' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '365' \n\t\tAND MajorPerilCode = '550' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 94,\n\t\tPolicySymbol = 'CD' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '310' \n\t\tAND ProductCode = '310' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '310' \n\t\tAND RiskUnitGroup = '367' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit IN ('80054','80055','80056','80058'), 93,\n\t\tPolicySymbol = 'CD' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '310' \n\t\tAND ProductCode = '310' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '310' \n\t\tAND RiskUnitGroup = '367' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit IN ('80051','80052','80053','80057'), 92,\n\t\tPolicySymbol IN ('CU','NU') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '900' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskUnitGroup = '370' \n\t\tAND MajorPerilCode = '517' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 91,\n\t\tPolicySymbol = 'NN' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '312' \n\t\tAND ProductCode = '312' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '312' \n\t\tAND RiskUnitGroup = '286' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 90,\n\t\tPolicySymbol IN ('NE','ER') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '330' \n\t\tAND ProductCode = '330' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '330' \n\t\tAND RiskUnitGroup = '366' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 89,\n\t\tPolicyOfferingCode = '100' \n\t\tAND StandardInsuranceLineCode = 'WC' \n\t\tAND ( PolicySymbol IN ('VA','VB','VC','VD','VE','VF','VG','VH','VI','VJ','VK','VL','VM','VN','VO','VP','VQ','VR','VS','VT','VU','VV','VW','WA','WB','WC','WD','WG','WH','WI','WK','WJ','WN','WO','WP','WR','WS','WT','WU','WV','WW','WY','YA','YB','YC','YD','YE','YF','YG','YH','YI','YJ','YK','YL','YM','YN','YO','YP','YQ','YR','YS','YT','YU','YV','YW','YX','ZZ') \n\t\t\tOR PolicySymbol IN ('A0','A1','A2','A3','A4','A5','A6','A7','A8','LA','LB','LC','LE','LF','LG','LH','LI','LJ','LK','LL','LM','LN','AB','AC','AD','AE','AF','AG','AH','AI','AJ','AK','AL','AM','AN','AO','AP','AQ','AR','AT','AU','AV','AW','AX','AY','AZ','JA','JB','JC','JD','JE','JF','JG','JH','JI','JJ','JK','JL','JM','JN','JO','JP','JQ','JR','JS','JT','JU','JV','JW','JX','JY','JZ','J1','J2','J3','J4','J5','J6') \n\t\t\tOR PolicySymbol IN ('RA','RB','RC','RD','RE','RF','RG','RH','RI','RJ','RK','RL','RM','RN','RO','RP','RQ','RR','RS','RT','RU','RV','RW','RX','RW','RX','SA','SB','SC','SD','SE','SF','SG','SH','SI','SJ','SK','SL','SM','SN','SO','SP','SR','SS','ST','SU','SV','SW','SX','SY','TH','TI','TJ','TK','TL','TM','TN','TO','TP','TQ','TR','TS','TT','TV','TW') \n\t\t) \n\t\tAND ProductCode = '100' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '100' \n\t\tAND RiskUnitGroup = '010' \n\t\tAND MajorPerilCode = '032' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 88,\n\t\tPolicySymbol IN ('NA','NB') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '430' \n\t\tAND ProductCode = '430' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 87,\n\t\tPolicySymbol IN ('BC','BD') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '410' \n\t\tAND ProductCode = '410' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 86,\n\t\tPolicySymbol = 'BO' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '450' \n\t\tAND ProductCode = '450' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 85,\n\t\tPolicySymbol = 'CM' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '360' \n\t\tAND ProductCode = '360' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '360' \n\t\tAND RiskUnitGroup = '901' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 84,\n\t\tPolicySymbol = 'NK' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '311' \n\t\tAND ProductCode = '311' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '330' \n\t\tAND RiskUnitGroup = '287' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 83,\n\t\tPolicySymbol = 'BG' \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '420' \n\t\tAND ProductCode = '420' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'O' \n\t\tAND RiskUnit = 'N/A', 82,\n\t\tPolicySymbol IN ('WE','WF','WL','WZ') \n\t\tAND StandardInsuranceLineCode = 'WC' \n\t\tAND PolicyOfferingCode = '100' \n\t\tAND ProductCode = '100' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '100' \n\t\tAND RiskUnitGroup = 'N/A' \n\t\tAND MajorPerilCode = '032' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 81,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '320' \n\t\tAND ProductCode = '320' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'P' \n\t\tAND RiskUnit = 'N/A', 80,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '320' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '340' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'P' \n\t\tAND RiskUnit = 'N/A', 79,\n\t\tPolicySymbol IN ('NN') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '312' \n\t\tAND ProductCode = '312' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '312' \n\t\tAND RiskUnitGroup = '287' \n\t\tAND MajorPerilCode = '540' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 78,\n\t\tPolicySymbol IN ('CP','NS') \n\t\tAND StandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '370' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskUnitGroup = '355' \n\t\tAND MajorPerilCode = '530' \n\t\tAND ProductTypeCode = 'N/A' \n\t\tAND RiskUnit = 'N/A', 77,\n\t\t0\n\t) AS v_DetectFlag_PMS,\n\t-- *INF*: DECODE(SourceSystemID='DCT',\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='PremOps' AND CoverageType='PremisesOperations' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 100,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='PremOpsProducts' AND CoverageType='PremisesOperations' AND CoverageVersion='CLAIMSMADE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 99,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='PremOpsProducts' AND CoverageType='PremisesOperations' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 98,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='500' AND ProductCode='300' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='ProductsCompletedOps' AND CoverageType='ProductsCompletedOps' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 97,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='370' AND ProductCode='370' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='N/A' AND CoverageType='LiquorLiability' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 96,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='365' AND ProductCode='365' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='N/A' AND CoverageType='OwnersContractorsOrPrincipals' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 95,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='321' AND ProductCode='321' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='N/A' AND CoverageType='RailroadProtectiveLiability' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 94,\r\n\t-- StandardInsuranceLineCode='GL' AND PolicyOfferingCode='380' AND ProductCode='380' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='N/A' AND CoverageType='ProductWithdrawal' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 93,\r\n\t-- StandardInsuranceLineCode='CDO' AND PolicyOfferingCode='310' AND ProductCode='310' AND InsuranceReferenceLineOfBusinessCode='310' AND RiskType='N/A' AND CoverageType='DirectorsAndOfficersCondosCommercial' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A',\r\n\t-- 92,\r\n\t-- StandardInsuranceLineCode='CDO' AND PolicyOfferingCode='310' AND ProductCode='310' AND InsuranceReferenceLineOfBusinessCode='310' AND RiskType='N/A' AND CoverageType='DirectorsAndOfficersCondosResidential' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A',\r\n\t-- 91,\r\n\t-- StandardInsuranceLineCode='CU' AND PolicyOfferingCode='900' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskType='N/A' AND CoverageType='BuiltUp' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 90,\r\n\t-- StandardInsuranceLineCode='CU' AND PolicyOfferingCode='500' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskType='N/A' AND CoverageType='BuiltUp' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 89,\r\n\t-- StandardInsuranceLineCode='CU' AND PolicyOfferingCode='450' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskType='N/A' AND CoverageType='BuiltUp' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 88,\r\n\t-- StandardInsuranceLineCode='CU' AND PolicyOfferingCode='430' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskType='N/A' AND CoverageType='BuiltUp' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 87,\r\n\t-- StandardInsuranceLineCode='NDO' AND PolicyOfferingCode='312' AND ProductCode='312' AND InsuranceReferenceLineOfBusinessCode='312' AND RiskType='N/A' AND CoverageType='DirectorsAndOfficersNFP' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 86,\r\n\t-- StandardInsuranceLineCode='EPL' AND PolicyOfferingCode='330' AND ProductCode='330' AND InsuranceReferenceLineOfBusinessCode='330' AND RiskType='N/A' AND CoverageType='EmploymentPracticesLiability' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 85,\r\n\t-- StandardInsuranceLineCode='BP' AND PolicyOfferingCode='450' AND ProductCode='450' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='N/A' AND CoverageType='RiskLiability' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 84,\r\n\t-- StandardInsuranceLineCode='SBOPGL' AND PolicyOfferingCode='430' AND ProductCode='430' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='PremOps' AND CoverageType='PremisesOperations' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 83,\r\n\t-- StandardInsuranceLineCode='WC' AND PolicyOfferingCode='100' AND ProductCode='100' AND InsuranceReferenceLineOfBusinessCode='100' AND RiskType='N/A' AND CoverageType='EmployersLiability' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 82,\r\n\t-- --2 New combinations Added by Luna, for EDWP-4808, 56 issue Policies\r\n\t-- StandardInsuranceLineCode='SBOPGL' AND PolicyOfferingCode='430' AND ProductCode='430' AND InsuranceReferenceLineOfBusinessCode='300' AND RiskType='PremOpsProducts' AND CoverageType='PremisesOperations' AND CoverageVersion='OCCURRENCE' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 81,\r\n\t-- StandardInsuranceLineCode='CU' AND PolicyOfferingCode='500' AND ProductCode='900' AND InsuranceReferenceLineOfBusinessCode='900' AND RiskType='N/A' AND CoverageType='Revised' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 80,\r\n\t-- -- Fixed AP-301\r\n\t-- StandardInsuranceLineCode='WC' AND PolicyOfferingCode='100' AND ProductCode='100' AND InsuranceReferenceLineOfBusinessCode='100' AND RiskType='N/A' AND CoverageType='EmpIoyersLiabilityIncreasedLimits' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 79,\r\n\t-- StandardInsuranceLineCode='WC' AND PolicyOfferingCode='100' AND ProductCode='100' AND InsuranceReferenceLineOfBusinessCode='100' AND RiskType='N/A' AND CoverageType='EmployersLiabilityIncreasedLimitsBalanceToMinimum' AND CoverageVersion='N/A' AND PerilGroup='N/A' AND SubCoverageTypeCode='N/A', \r\n\t-- 78,\r\n\t-- 0)\n\tDECODE(SourceSystemID = 'DCT',\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'PremOps' \n\t\tAND CoverageType = 'PremisesOperations' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 100,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'PremOpsProducts' \n\t\tAND CoverageType = 'PremisesOperations' \n\t\tAND CoverageVersion = 'CLAIMSMADE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 99,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'PremOpsProducts' \n\t\tAND CoverageType = 'PremisesOperations' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 98,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '300' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'ProductsCompletedOps' \n\t\tAND CoverageType = 'ProductsCompletedOps' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 97,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '370' \n\t\tAND ProductCode = '370' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'LiquorLiability' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 96,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '365' \n\t\tAND ProductCode = '365' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'OwnersContractorsOrPrincipals' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 95,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '321' \n\t\tAND ProductCode = '321' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'RailroadProtectiveLiability' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 94,\n\t\tStandardInsuranceLineCode = 'GL' \n\t\tAND PolicyOfferingCode = '380' \n\t\tAND ProductCode = '380' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'ProductWithdrawal' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 93,\n\t\tStandardInsuranceLineCode = 'CDO' \n\t\tAND PolicyOfferingCode = '310' \n\t\tAND ProductCode = '310' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '310' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'DirectorsAndOfficersCondosCommercial' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 92,\n\t\tStandardInsuranceLineCode = 'CDO' \n\t\tAND PolicyOfferingCode = '310' \n\t\tAND ProductCode = '310' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '310' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'DirectorsAndOfficersCondosResidential' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 91,\n\t\tStandardInsuranceLineCode = 'CU' \n\t\tAND PolicyOfferingCode = '900' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'BuiltUp' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 90,\n\t\tStandardInsuranceLineCode = 'CU' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'BuiltUp' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 89,\n\t\tStandardInsuranceLineCode = 'CU' \n\t\tAND PolicyOfferingCode = '450' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'BuiltUp' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 88,\n\t\tStandardInsuranceLineCode = 'CU' \n\t\tAND PolicyOfferingCode = '430' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'BuiltUp' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 87,\n\t\tStandardInsuranceLineCode = 'NDO' \n\t\tAND PolicyOfferingCode = '312' \n\t\tAND ProductCode = '312' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '312' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'DirectorsAndOfficersNFP' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 86,\n\t\tStandardInsuranceLineCode = 'EPL' \n\t\tAND PolicyOfferingCode = '330' \n\t\tAND ProductCode = '330' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '330' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'EmploymentPracticesLiability' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 85,\n\t\tStandardInsuranceLineCode = 'BP' \n\t\tAND PolicyOfferingCode = '450' \n\t\tAND ProductCode = '450' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'RiskLiability' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 84,\n\t\tStandardInsuranceLineCode = 'SBOPGL' \n\t\tAND PolicyOfferingCode = '430' \n\t\tAND ProductCode = '430' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'PremOps' \n\t\tAND CoverageType = 'PremisesOperations' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 83,\n\t\tStandardInsuranceLineCode = 'WC' \n\t\tAND PolicyOfferingCode = '100' \n\t\tAND ProductCode = '100' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '100' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'EmployersLiability' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 82,\n\t\tStandardInsuranceLineCode = 'SBOPGL' \n\t\tAND PolicyOfferingCode = '430' \n\t\tAND ProductCode = '430' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '300' \n\t\tAND RiskType = 'PremOpsProducts' \n\t\tAND CoverageType = 'PremisesOperations' \n\t\tAND CoverageVersion = 'OCCURRENCE' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 81,\n\t\tStandardInsuranceLineCode = 'CU' \n\t\tAND PolicyOfferingCode = '500' \n\t\tAND ProductCode = '900' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '900' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'Revised' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 80,\n\t\tStandardInsuranceLineCode = 'WC' \n\t\tAND PolicyOfferingCode = '100' \n\t\tAND ProductCode = '100' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '100' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'EmpIoyersLiabilityIncreasedLimits' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 79,\n\t\tStandardInsuranceLineCode = 'WC' \n\t\tAND PolicyOfferingCode = '100' \n\t\tAND ProductCode = '100' \n\t\tAND InsuranceReferenceLineOfBusinessCode = '100' \n\t\tAND RiskType = 'N/A' \n\t\tAND CoverageType = 'EmployersLiabilityIncreasedLimitsBalanceToMinimum' \n\t\tAND CoverageVersion = 'N/A' \n\t\tAND PerilGroup = 'N/A' \n\t\tAND SubCoverageTypeCode = 'N/A', 78,\n\t\t0\n\t) AS v_DetectFlag_DCT,\n\t-- *INF*: IIF(SourceSystemID='PMS', v_DetectFlag_PMS, v_DetectFlag_DCT)\n\tIFF(SourceSystemID = 'PMS',\n\t\tv_DetectFlag_PMS,\n\t\tv_DetectFlag_DCT\n\t) AS o_DetectFlag\n\tFROM EXP_DefaultValue\n),\nFIL_MainCoverage AS (\n\tSELECT\n\tEffectiveDate, \n\tLimitTypeDimID, \n\tPolicyAKId, \n\tLimitValue, \n\tSourceSystemID, \n\tRiskType, \n\tCoverageType, \n\tPerilGroup, \n\tSubCoverageTypeCode, \n\tCoverageVersion, \n\tPolicyLimitId, \n\tPremiumTransactionBookedDate, \n\tEnterpriseGroupCode, \n\tInsuranceReferenceLegalEntityCode, \n\tStrategicProfitCenterCode, \n\tInsuranceSegmentCode, \n\tPolicyOfferingCode, \n\tProductCode, \n\tInsuranceReferenceLineOfBusinessCode, \n\tRunDateID, \n\tRiskUnitGroup, \n\tRiskUnit, \n\tMajorPerilCode, \n\tStandardInsuranceLineCode, \n\tProductTypeCode, \n\tRatingPlanCode, \n\to_DetectFlag AS DetectFlag\n\tFROM EXP_DetectMainCoverage\n\tWHERE DetectFlag<>0\n),\nLKP_InsuranceReferenceDim_Policy AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tEnterpriseGroupCode,\n\tInsuranceReferenceLegalEntityCode,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode,\n\tProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRatingPlanCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceDimId,\n\t\t\tEnterpriseGroupCode,\n\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tPolicyOfferingCode,\n\t\t\tProductCode,\n\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\tRatingPlanCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EnterpriseGroupCode,InsuranceReferenceLegalEntityCode,StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode,ProductCode,InsuranceReferenceLineOfBusinessCode,RatingPlanCode ORDER BY InsuranceReferenceDimId) = 1\n),\nmplt_PolicyDimID_PremiumMaster_Policy AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_Calculate_DimID AS (\n\tSELECT\n\tmplt_PolicyDimID_PremiumMaster_Policy.agency_dim_id AS lkp_AgencyDimId,\n\tmplt_PolicyDimID_PremiumMaster_Policy.contract_cust_dim_id AS lkp_contract_cust_dim_id,\n\tmplt_PolicyDimID_PremiumMaster_Policy.pol_dim_id AS lkp_pol_dim_id,\n\tFIL_MainCoverage.SourceSystemID AS i_SourceSystemID,\n\tFIL_MainCoverage.RiskType AS i_RiskType,\n\tFIL_MainCoverage.CoverageType AS i_CoverageType,\n\tFIL_MainCoverage.PerilGroup AS i_PerilGroup,\n\tFIL_MainCoverage.SubCoverageTypeCode AS i_SubCoverageTypeCode,\n\tFIL_MainCoverage.CoverageVersion AS i_CoverageVersion,\n\tFIL_MainCoverage.RiskUnitGroup AS i_RiskUnitGroup,\n\tFIL_MainCoverage.RiskUnit AS i_RiskUnit,\n\tFIL_MainCoverage.MajorPerilCode AS i_MajorPerilCode,\n\tFIL_MainCoverage.ProductTypeCode AS i_ProductTypeCode,\n\tFIL_MainCoverage.EffectiveDate,\n\tFIL_MainCoverage.PolicyAKId,\n\tFIL_MainCoverage.LimitTypeDimID,\n\tLKP_InsuranceReferenceDim_Policy.InsuranceReferenceDimId,\n\tFIL_MainCoverage.LimitValue,\n\tFIL_MainCoverage.RunDateID,\n\tFIL_MainCoverage.StandardInsuranceLineCode,\n\tFIL_MainCoverage.DetectFlag,\n\tFIL_MainCoverage.PolicyLimitId,\n\t-- *INF*: DECODE(i_SourceSystemID,'PMS',:LKP.LKP_InsuranceReferenceCoverageDim_PMS(i_RiskUnitGroup,i_RiskUnit,i_MajorPerilCode,StandardInsuranceLineCode,i_ProductTypeCode),'DCT',:LKP.LKP_InsuranceReferenceCoverageDim_DCT(i_RiskType,i_CoverageType,StandardInsuranceLineCode,i_PerilGroup,i_SubCoverageTypeCode,i_CoverageVersion))\n\tDECODE(i_SourceSystemID,\n\t\t'PMS', LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.InsuranceReferenceCoverageDimId,\n\t\t'DCT', LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceReferenceCoverageDimId\n\t) AS v_InsuranceReferenceCoverageDimId,\n\t-- *INF*: IIF(ISNULL(lkp_contract_cust_dim_id),-1,lkp_contract_cust_dim_id)\n\tIFF(lkp_contract_cust_dim_id IS NULL,\n\t\t- 1,\n\t\tlkp_contract_cust_dim_id\n\t) AS o_contract_cust_dim_id,\n\t-- *INF*: IIF(ISNULL(lkp_pol_dim_id),-1,lkp_pol_dim_id)\n\tIFF(lkp_pol_dim_id IS NULL,\n\t\t- 1,\n\t\tlkp_pol_dim_id\n\t) AS o_pol_dim_id,\n\t-- *INF*: IIF(ISNULL(lkp_AgencyDimId),-1,lkp_AgencyDimId)\n\tIFF(lkp_AgencyDimId IS NULL,\n\t\t- 1,\n\t\tlkp_AgencyDimId\n\t) AS o_AgencyDimId,\n\t-1 AS o_CoverageDetailDimId,\n\t-- *INF*: IIF(ISNULL(v_InsuranceReferenceCoverageDimId),-1,v_InsuranceReferenceCoverageDimId)\n\tIFF(v_InsuranceReferenceCoverageDimId IS NULL,\n\t\t- 1,\n\t\tv_InsuranceReferenceCoverageDimId\n\t) AS o_InsuranceReferenceCoverageDimId\n\tFROM FIL_MainCoverage\n\t -- Manually join with mplt_PolicyDimID_PremiumMaster_Policy\n\tLEFT JOIN LKP_InsuranceReferenceDim_Policy\n\tON LKP_InsuranceReferenceDim_Policy.EnterpriseGroupCode = FIL_MainCoverage.EnterpriseGroupCode AND LKP_InsuranceReferenceDim_Policy.InsuranceReferenceLegalEntityCode = FIL_MainCoverage.InsuranceReferenceLegalEntityCode AND LKP_InsuranceReferenceDim_Policy.StrategicProfitCenterCode = FIL_MainCoverage.StrategicProfitCenterCode AND LKP_InsuranceReferenceDim_Policy.InsuranceSegmentCode = FIL_MainCoverage.InsuranceSegmentCode AND LKP_InsuranceReferenceDim_Policy.PolicyOfferingCode = FIL_MainCoverage.PolicyOfferingCode AND LKP_InsuranceReferenceDim_Policy.ProductCode = FIL_MainCoverage.ProductCode AND LKP_InsuranceReferenceDim_Policy.InsuranceReferenceLineOfBusinessCode = FIL_MainCoverage.InsuranceReferenceLineOfBusinessCode AND LKP_InsuranceReferenceDim_Policy.RatingPlanCode = FIL_MainCoverage.RatingPlanCode\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_PMS LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.InsuranceLineCode = i_RiskUnitGroup\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.PmsRiskUnitGroupCode = i_RiskUnit\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.PmsRiskUnitCode = i_MajorPerilCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.PmsMajorPerilCode = StandardInsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_i_RiskUnitGroup_i_RiskUnit_i_MajorPerilCode_StandardInsuranceLineCode_i_ProductTypeCode.PmsProductTypeCode = i_ProductTypeCode\n\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_DCT LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceLineCode = i_RiskType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctRiskTypeCode = i_CoverageType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageTypeCode = StandardInsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctPerilGroup = i_PerilGroup\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctSubCoverageTypeCode = i_SubCoverageTypeCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_i_RiskType_i_CoverageType_StandardInsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageVersion = i_CoverageVersion\n\n),\nSRT_Source AS (\n\tSELECT\n\tPolicyAKId, \n\tStandardInsuranceLineCode, \n\tLimitTypeDimID, \n\tEffectiveDate, \n\tPolicyLimitId, \n\tDetectFlag, \n\tRunDateID, \n\tInsuranceReferenceDimId, \n\tLimitValue, \n\to_contract_cust_dim_id AS contract_cust_dim_id, \n\to_pol_dim_id AS pol_dim_id, \n\to_AgencyDimId AS AgencyDimId, \n\to_CoverageDetailDimId AS CoverageDetailDimId, \n\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId\n\tFROM EXP_Calculate_DimID\n\tORDER BY PolicyAKId ASC, StandardInsuranceLineCode ASC, LimitTypeDimID ASC, EffectiveDate ASC, PolicyLimitId ASC, DetectFlag ASC\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tPolicyAKId,\n\tStandardInsuranceLineCode,\n\tLimitTypeDimID,\n\tEffectiveDate,\n\tPolicyLimitId,\n\tDetectFlag,\n\tInsuranceReferenceDimId,\n\tLimitValue,\n\tRunDateID AS i_RunDateID,\n\t-- *INF*: MIN(i_RunDateID)\n\tMIN(i_RunDateID\n\t) AS o_RunDateID,\n\tcontract_cust_dim_id,\n\tpol_dim_id,\n\tAgencyDimId,\n\tCoverageDetailDimId,\n\tInsuranceReferenceCoverageDimId\n\tFROM SRT_Source\n\tGROUP BY PolicyAKId, StandardInsuranceLineCode, LimitTypeDimID, EffectiveDate, PolicyLimitId\n),\nEXP_DetectChange_Policy AS (\n\tSELECT\n\tPolicyAKId,\n\tStandardInsuranceLineCode,\n\tLimitTypeDimID AS i_LimitTypeDimID,\n\tInsuranceReferenceDimId AS i_InsuranceReferenceDimId,\n\tLimitValue AS i_LimitValue,\n\to_RunDateID AS i_RunDateID,\n\tcontract_cust_dim_id AS i_contract_cust_dim_id,\n\tpol_dim_id AS i_pol_dim_id,\n\tAgencyDimId AS i_AgencyDimID,\n\tCoverageDetailDimId AS i_CoverageDetailDimId,\n\tInsuranceReferenceCoverageDimId AS i_InsuranceReferenceCoverageDimId,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PolicyAKId=v_Prev_PolicyAKId AND i_LimitTypeDimID = v_Prev_LimitTypeDimId AND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode,\r\n\t-- TO_DECIMAL(i_LimitValue)-v_Prev_LimitValue,\r\n\t-- TO_DECIMAL(i_LimitValue)\r\n\t-- )\r\n\t-- \r\n\t-- ---DECODE(TRUE,\r\n\t-- -- NOT ISNULL(lkp_MaxRunDateId) AND lkp_MaxRunDateId >--= i_RunDateID, 0,\r\n\t-- ---i_PolicyAKId=v_Prev_PolicyAKId \r\n\t-- --AND i_LimitTypeDimID=v_Prev_LimitTypeDimId\r\n\t-- --AND --------i_StandardInsuranceLineCode=v_Prev_StandardInsuranceLin---eCode AND \r\n\t-- -- NOT ISNULL(lkp_MaxRunDateId)\r\n\t-- --,TO_DECIMAL(i_LimitValue)---(v_Prev_LimitValue+lkp_ChangeInLimit),\r\n\t--  --NOT ISNULL(lkp_MaxRunDateId), \r\n\t-- --TO_DECIMAL(i_LimitValue)-lkp_ChangeInLimit,\r\n\t-- --i_PolicyAKId=v_Prev_PolicyAKId AND --i_LimitTypeDimID=v_Prev_LimitTypeDimId\r\n\t-- --AND ----i_StandardInsuranceLineCode=v_Prev_StandardInsuranceLin----eCode,\r\n\t-- --TO_DECIMAL(i_LimitValue)-v_Prev_LimitValue,\r\n\t-- ---TO_DECIMAL(i_LimitValue))\n\tDECODE(TRUE,\n\t\tPolicyAKId = v_Prev_PolicyAKId \n\t\tAND i_LimitTypeDimID = v_Prev_LimitTypeDimId \n\t\tAND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode, CAST(i_LimitValue AS FLOAT) - v_Prev_LimitValue,\n\t\tCAST(i_LimitValue AS FLOAT)\n\t) AS v_LimitValue,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- PolicyAKId=v_Prev_PolicyAKId AND i_LimitTypeDimID = v_Prev_LimitTypeDimId AND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode AND v_LimitValue != 0,\r\n\t-- v_Count+1,\r\n\t-- PolicyAKId=v_Prev_PolicyAKId AND i_LimitTypeDimID = v_Prev_LimitTypeDimId AND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode AND v_LimitValue = 0,\r\n\t-- v_Count,\r\n\t-- 1\r\n\t-- )\n\tDECODE(TRUE,\n\t\tPolicyAKId = v_Prev_PolicyAKId \n\t\tAND i_LimitTypeDimID = v_Prev_LimitTypeDimId \n\t\tAND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode \n\t\tAND v_LimitValue != 0, v_Count + 1,\n\t\tPolicyAKId = v_Prev_PolicyAKId \n\t\tAND i_LimitTypeDimID = v_Prev_LimitTypeDimId \n\t\tAND StandardInsuranceLineCode = v_Prev_StandardInsuranceLineCode \n\t\tAND v_LimitValue = 0, v_Count,\n\t\t1\n\t) AS v_Count,\n\t-- *INF*: TO_DECIMAL(i_LimitValue)\r\n\t-- ---DECODE(TRUE,\r\n\t-- -- NOT ISNULL(lkp_MaxRunDateId) AND lkp_MaxRunDateId  -->=  i_RunDateID, 0,\r\n\t-- --i_PolicyAKId=v_Prev_PolicyAKId \r\n\t-- --AND i_LimitTypeDimID=v_Prev_LimitTypeDimId\r\n\t-- --AND i_StandardInsuranceLineCode=i_StandardInsuranceLineCode, \r\n\t-- --v_Prev_LimitValue+v_LimitValue,\r\n\t-- --v_LimitValue\r\n\t-- --)\n\tCAST(i_LimitValue AS FLOAT) AS v_Prev_LimitValue,\n\tPolicyAKId AS v_Prev_PolicyAKId,\n\ti_LimitTypeDimID AS v_Prev_LimitTypeDimId,\n\tStandardInsuranceLineCode AS v_Prev_StandardInsuranceLineCode,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\ti_AgencyDimID AS o_AgencyDimID,\n\ti_pol_dim_id AS o_pol_dim_id,\n\ti_contract_cust_dim_id AS o_contract_cust_dim_id,\n\ti_CoverageDetailDimId AS o_CoverageDetailDimId,\n\ti_InsuranceReferenceDimId AS o_InsuranceReferenceDimId,\n\ti_InsuranceReferenceCoverageDimId AS o_InsuranceReferenceCoverageDimId,\n\ti_LimitTypeDimID AS o_LimitTypeDimID,\n\ti_RunDateID AS o_RunDateID,\n\tv_LimitValue AS o_ChangeInLimit,\n\tv_Count AS o_Count\n\tFROM AGG_RemoveDuplicates\n),\nFIL_Zero_Policy AS (\n\tSELECT\n\tPolicyAKId, \n\tStandardInsuranceLineCode, \n\to_AuditId AS AuditId, \n\to_AgencyDimID AS AgencyDimID, \n\to_pol_dim_id AS pol_dim_id, \n\to_contract_cust_dim_id AS contract_cust_dim_id, \n\to_CoverageDetailDimId AS CoverageDetailDimId, \n\to_InsuranceReferenceDimId AS InsuranceReferenceDimId, \n\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId, \n\to_LimitTypeDimID AS LimitTypeDimID, \n\to_RunDateID AS RunDateID, \n\to_ChangeInLimit AS ChangeInLimit, \n\to_Count AS Count\n\tFROM EXP_DetectChange_Policy\n\tWHERE ChangeInLimit<>0\n),\nLKP_LimitFact_Policy AS (\n\tSELECT\n\tLimitFactId,\n\tChangeInLimit,\n\tPolicyAKId,\n\tLimitTypeDimId,\n\tInsuranceLineCode,\n\tCount\n\tFROM (\n\t\tSELECT LF.LimitFactId as LimitFactId,\r\n\t\tLF.ChangeInLimit as ChangeInLimit, \r\n\t\trow_number() over (partition by PD.edw_pol_ak_id, LF.LimitTypeDimId,IRCD.InsuranceLineCode order by LF.LimitFactId) as Count,\r\n\t\tPD.edw_pol_ak_id as PolicyAKId, \r\n\t\tLF.LimitTypeDimId as LimitTypeDimId, \r\n\t\tIRCD.InsuranceLineCode as InsuranceLineCode\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact LF\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.Policy_Dim PD\r\n\t\tON LF.PolicyDimId=PD.pol_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceCoverageDim IRCD\r\n\t\ton LF.InsuranceReferenceCoverageDimId=IRCD.InsuranceReferenceCoverageDimId\r\n\t\tWHERE LF.CoverageDetailDimId=-1 and ('@{pipeline().parameters.SELECTION_START_TS}'<='01/01/1800 01:00:00' or exists (select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyLimit PL\r\n\t\twhere PL.PolicyAKId=PD.edw_pol_ak_id and PL.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\t)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKId,LimitTypeDimId,InsuranceLineCode,Count ORDER BY LimitFactId) = 1\n),\nRTR_InsertUpdate_Policy AS (\n\tSELECT\n\tLKP_LimitFact_Policy.LimitFactId AS lkp_LimitFactId,\n\tLKP_LimitFact_Policy.ChangeInLimit AS lkp_ChangeInLimit,\n\tFIL_Zero_Policy.AuditId,\n\tFIL_Zero_Policy.AgencyDimID,\n\tFIL_Zero_Policy.pol_dim_id,\n\tFIL_Zero_Policy.contract_cust_dim_id,\n\tFIL_Zero_Policy.CoverageDetailDimId,\n\tFIL_Zero_Policy.InsuranceReferenceDimId,\n\tFIL_Zero_Policy.InsuranceReferenceCoverageDimId,\n\tFIL_Zero_Policy.LimitTypeDimID,\n\tFIL_Zero_Policy.RunDateID,\n\tFIL_Zero_Policy.ChangeInLimit\n\tFROM FIL_Zero_Policy\n\tLEFT JOIN LKP_LimitFact_Policy\n\tON LKP_LimitFact_Policy.PolicyAKId = FIL_Zero_Policy.PolicyAKId AND LKP_LimitFact_Policy.LimitTypeDimId = FIL_Zero_Policy.LimitTypeDimID AND LKP_LimitFact_Policy.InsuranceLineCode = FIL_Zero_Policy.StandardInsuranceLineCode AND LKP_LimitFact_Policy.Count = FIL_Zero_Policy.Count\n),\nRTR_InsertUpdate_Policy_Insert AS (SELECT * FROM RTR_InsertUpdate_Policy WHERE ISNULL(lkp_LimitFactId)),\nRTR_InsertUpdate_Policy_Update AS (SELECT * FROM RTR_InsertUpdate_Policy WHERE NOT ISNULL(lkp_LimitFactId) AND lkp_ChangeInLimit != ChangeInLimit),\nLimitFact_Policy_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact\n\t(AuditId, AgencyDimId, PolicyDimId, ContractCustomerDimId, CoverageDetailDimId, InsuranceReferenceDimId, InsuranceReferenceCoverageDimId, LimitTypeDimID, RunDateId, ChangeInLimit)\n\tSELECT \n\tAUDITID, \n\tAgencyDimID AS AGENCYDIMID, \n\tpol_dim_id AS POLICYDIMID, \n\tcontract_cust_dim_id AS CONTRACTCUSTOMERDIMID, \n\tCOVERAGEDETAILDIMID, \n\tINSURANCEREFERENCEDIMID, \n\tINSURANCEREFERENCECOVERAGEDIMID, \n\tLIMITTYPEDIMID, \n\tRunDateID AS RUNDATEID, \n\tCHANGEINLIMIT\n\tFROM RTR_InsertUpdate_Policy_Insert\n),\nUPD_Existing_Policy AS (\n\tSELECT\n\tlkp_LimitFactId AS LKP_LimitFactId3, \n\tAuditId AS AuditId3, \n\tAgencyDimID AS AgencyDimID3, \n\tpol_dim_id AS pol_dim_id3, \n\tcontract_cust_dim_id AS contract_cust_dim_id3, \n\tCoverageDetailDimId AS CoverageDetailDimId3, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId3, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId3, \n\tLimitTypeDimID AS LimitTypeDimID3, \n\tRunDateID AS RunDateID3, \n\tChangeInLimit AS ChangeInLimit3\n\tFROM RTR_InsertUpdate_Policy_Update\n),\nLimitFact_Policy_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.LimitFact AS T\n\tUSING UPD_Existing_Policy AS S\n\tON T.LimitFactId = S.LKP_LimitFactId3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId3, T.AgencyDimId = S.AgencyDimID3, T.PolicyDimId = S.pol_dim_id3, T.ContractCustomerDimId = S.contract_cust_dim_id3, T.CoverageDetailDimId = S.CoverageDetailDimId3, T.InsuranceReferenceDimId = S.InsuranceReferenceDimId3, T.InsuranceReferenceCoverageDimId = S.InsuranceReferenceCoverageDimId3, T.LimitTypeDimID = S.LimitTypeDimID3, T.RunDateId = S.RunDateID3, T.ChangeInLimit = S.ChangeInLimit3\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244789"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893407"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7543473"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 09:08:08"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 23:13:43"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_DATA_MART"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "AGENCY_OWNER": {
                "type": "string",
                "defaultValue": "V3"
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_DCT_CA": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_PMS_CA": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERE_CLAUSE_POL_PMS": {
                "type": "string",
                "defaultValue": ""
            },
            "PRE_SESS_SQL": {
                "type": "string",
                "defaultValue": "--alter table $$TARGET_TABLE_OWNER.LimitFact nocheck constraint all"
            },
            "POST_SESS_SQL": {
                "type": "string",
                "defaultValue": "--alter table $$TARGET_TABLE_OWNER.LimitFact check constraint all"
            },
            "PRE_SQL": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_POL_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}