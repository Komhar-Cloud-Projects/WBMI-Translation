{
    "name": "s_m_FEED_Load_ActuarialworkerscompensationDividend",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_ActuarialworkerscompensationDividend",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_PhysicalState AS (\n\tSELECT\n\tStateCode_Desc,\n\tStateAbbreviation\n\tFROM (\n\t\tselect \r\n\t\tStateAbbreviation as StateAbbreviation,\r\n\t\tStateCode+'|'+StateDescription as StateCode_Desc\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.StateDim\r\n\t\twhere CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateAbbreviation ORDER BY StateCode_Desc) = 1\n),\nSQ_DividendFact AS (\n\tDeclare @Date as date\r\n\t\r\n\tset @Date = case when '@{pipeline().parameters.PMINTEGRATIONSERVICENAME}' like '%QA%' or '@{pipeline().parameters.PMINTEGRATIONSERVICENAME}' like '%QC%'\r\n\tthen\r\n\tconvert(date,EOMONTH(getdate(),0))\r\n\telse\r\n\tconvert(date,EOMONTH(getdate(),-1))\r\n\tend \r\n\t\r\n\tselect * from\r\n\t(\r\n\tSELECT \r\n\t DividendFact.DividendFactId,\r\n\t pol_Current.edw_pol_ak_id,\r\n\t InsuranceReferenceDim.EnterpriseGroupCode,\r\n\t InsuranceReferenceDim.EnterpriseGroupAbbreviation,\r\n\t InsuranceReferenceDim.StrategicProfitCenterCode,\r\n\t InsuranceReferenceDim.StrategicProfitCenterAbbreviation,\r\n\t InsuranceReferenceDim.InsuranceReferenceLegalEntityCode,\r\n\t InsuranceReferenceDim.InsuranceReferenceLegalEntityAbbreviation,\r\n\t InsuranceReferenceDim.PolicyOfferingCode,\r\n\t InsuranceReferenceDim.PolicyOfferingAbbreviation,\r\n\t InsuranceReferenceDim.PolicyOfferingDescription,\r\n\t InsuranceReferenceDim.ProductCode,\r\n\t InsuranceReferenceDim.ProductAbbreviation,\r\n\t InsuranceReferenceDim.ProductDescription,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessAbbreviation,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessDescription,\r\n\t InsuranceReferenceDim.AccountingProductCode,\r\n\t InsuranceReferenceDim.AccountingProductAbbreviation,\r\n\t InsuranceReferenceDim.AccountingProductDescription,\r\n\t InsuranceReferenceDim.RatingPlanCode,\r\n\t InsuranceReferenceDim.RatingPlanDescription,\r\n\t InsuranceReferenceDim.InsuranceSegmentCode,\r\n\t InsuranceReferenceDim.InsuranceSegmentDescription,\r\n\t pol_Current.ProgramCode,\r\n\t pol_Current.ProgramDescription,\r\n\t pol_Current.AssociationCode,\r\n\t pol_Current.AssociationDescription,\r\n\t pol_Current.industry_risk_grade_code,\r\n\t pol_Current.industry_risk_grade_code_descript,\r\n\t pol_Current.pol_eff_date,\r\n\t pol_Current.pol_exp_date,\r\n\t pol_Current.pol_cancellation_rsn_code,\r\n\t pol_Current.pol_cancellation_rsn_code_descript,\r\n\t pol_Current.orig_incptn_date,\r\n\t pol_Current.renl_code,\r\n\t pol_Current.renl_code_descript,\r\n\t pol_Current.pol_status_code,\r\n\t pol_Current.pol_status_code_descript,\r\n\t pol_Current.pol_key,\r\n\t pol_Current.pol_sym,\r\n\t pol_Current.pol_num,\r\n\t pol_Current.pol_mod,\r\n\t pol_Current.pol_issue_code,\r\n\t pol_Current.pol_issue_code_descript,\r\n\t pol_Current.state_of_domicile_code,\r\n\t pol_Current.state_of_domicile_abbrev,\r\n\t pol_Current.state_of_domicile_code_descript,\r\n\t pol_Current.prim_bus_class_code,\r\n\t pol_Current.prim_bus_class_code_descript,\r\n\t ad_Current.AgencyCode,\r\n\t ad_Current.AgencyDoingBusinessAsName,\r\n\t ad_Current.PhysicalStateAbbreviation,\r\n\t ad_Current.PhysicalCity,\r\n\t ad_Current.PhysicalZipCode,\r\n\t ccd_Current.cust_num,\r\n\t ccd_Current.name,\r\n\t ccd_Current.sic_code,\r\n\t ccd_Current.sic_code_descript,\r\n\t ccd_Current.naics_code,\r\n\t ccd_Current.naics_code_descript,\r\n\t pol_Current.serv_center_support_code,\r\n\t pol_Current.prior_pol_key,\r\n\t prior_pol.pol_num prior_pol_num,\r\n\t prior_pol.pol_sym prior_pol_sym,\r\n\t prior_pol.pol_mod prior_pol_ver,\r\n\t DividendFact.DividendPaidAmount,\r\n\t DividendFact.DividendPayableAmount,\r\n\t ccd_Current.fed_tax_id,\r\n\t pol_Current.RolloverPriorCarrier,\r\n\t prior_pol.pol_eff_date prior_pol_eff_date,\r\n\t aed_current.ProducerCode,\r\n\t (case when aed_current.AgencyEmployeeRole = 'Producer' then \r\n\t aed_current.AgencyEmployeeFirstName +' '+ aed_current.agencyemployeelastname else 'N/A' end) as Producer_FullName,\r\n\t DividendTypeDim.DividendPlan,\r\n\t DividendTypeDim.DividendType,\r\n\t calendar_dim.clndr_date Accounting_Date,\r\n\t--Removed below columns as per WREQ-13710\r\n\t--SD.AgencyCode as prim_agency_code, \r\n\t--SD.AgencyDoingBusinessAsName as prim_agency_doing_business_Name,\r\n\t--SD.PhysicalStateAbbreviation as prim_agency_state_abbr,\r\n\t--SD.PhysicalCity as prim_agency_city,\r\n\t--SD.PhysicalZipCode as prim_agency_zip_code,\r\n\t pol_Current.pol_dim_id,\r\n\t ad_Current.SalesDivisionDimId,\r\n\t DividendFact.StateDimId,\r\n\t pol_Current.UnderwritingDivisionDimId,\r\n\t pol_Current.BusinessClassDimId,\r\n\t ad_Current.EDWAgencyAKID \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DividendFact \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim pol on DividendFact.PolicyDimId= pol.pol_dim_id \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim pol_Current on pol_Current.edw_pol_ak_id=pol.edw_pol_ak_id and pol_Current.crrnt_snpsht_flag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim AgencyDim on DividendFact.AgencyDimId =AgencyDim.AgencyDimID \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim ad_Current --To get the current Agency attribute \r\n\ton AgencyDim.EDWAgencyAKID= ad_Current.EDWAgencyAKID and ad_Current.CurrentSnapshotFlag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim on DividendFact.ContractCustomerDimId=contract_customer_dim.contract_cust_dim_id\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim ccd_Current --To get the current customer attribute \r\n\ton contract_customer_dim.edw_contract_cust_ak_id= ccd_Current.edw_contract_cust_ak_id and ccd_Current.crrnt_snpsht_flag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyEmployeeDim on AgencyEmployeeDim.AgencyEmployeeDimID= pol_Current.AgencyEmployeeDimID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyEmployeeDim aed_current\r\n\ton AgencyEmployeeDim.EDWAgencyEmployeeAKID = aed_current.EDWAgencyEmployeeAKID and aed_current.CurrentSnapshotFlag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DividendTypeDim on DividendTypeDim.DividendTypeDimId = DividendFact.DividendTypeDimId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim on calendar_dim.clndr_id = DividendFact.DividendRunDateId\r\n\t--INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim SD on SD.AgencyCode=AD_current.LegalPrimaryAgencyCode AND SD.CurrentSnapshotFlag= 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim on InsuranceReferenceDim.InsuranceReferenceDimid= DividendFact.StrategicProfitCenterDimId and \r\n\tPolicyOfferingAbbreviation='WC'\r\n\tLeft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim prior_pol on prior_pol.pol_key= pol_Current.prior_pol_key and prior_pol.crrnt_snpsht_flag =1\r\n\twhere convert(date,calendar_dim.clndr_date) <=  @Date AND pol.pol_sym <> '000'\r\n\tUnion All\r\n\tSELECT \r\n\t DCTDividendFact.DCTDividendFactId as DividendFactId,\r\n\t pol_Current.edw_pol_ak_id,\r\n\t InsuranceReferenceDim.EnterpriseGroupCode,\r\n\t InsuranceReferenceDim.EnterpriseGroupAbbreviation,\r\n\t InsuranceReferenceDim.StrategicProfitCenterCode,\r\n\t InsuranceReferenceDim.StrategicProfitCenterAbbreviation,\r\n\t InsuranceReferenceDim.InsuranceReferenceLegalEntityCode,\r\n\t InsuranceReferenceDim.InsuranceReferenceLegalEntityAbbreviation,\r\n\t InsuranceReferenceDim.PolicyOfferingCode,\r\n\t InsuranceReferenceDim.PolicyOfferingAbbreviation,\r\n\t InsuranceReferenceDim.PolicyOfferingDescription,\r\n\t InsuranceReferenceDim.ProductCode,\r\n\t InsuranceReferenceDim.ProductAbbreviation,\r\n\t InsuranceReferenceDim.ProductDescription,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessCode,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessAbbreviation,\r\n\t InsuranceReferenceDim.InsuranceReferenceLineOfBusinessDescription,\r\n\t InsuranceReferenceDim.AccountingProductCode,\r\n\t InsuranceReferenceDim.AccountingProductAbbreviation,\r\n\t InsuranceReferenceDim.AccountingProductDescription,\r\n\t InsuranceReferenceDim.RatingPlanCode,\r\n\t InsuranceReferenceDim.RatingPlanDescription,\r\n\t InsuranceReferenceDim.InsuranceSegmentCode,\r\n\t InsuranceReferenceDim.InsuranceSegmentDescription,\r\n\t pol_Current.ProgramCode,\r\n\t pol_Current.ProgramDescription,\r\n\t pol_Current.AssociationCode,\r\n\t pol_Current.AssociationDescription,\r\n\t pol_Current.industry_risk_grade_code,\r\n\t pol_Current.industry_risk_grade_code_descript,\r\n\t pol_Current.pol_eff_date,\r\n\t pol_Current.pol_exp_date,\r\n\t pol_Current.pol_cancellation_rsn_code,\r\n\t pol_Current.pol_cancellation_rsn_code_descript,\r\n\t pol_Current.orig_incptn_date,\r\n\t pol_Current.renl_code,\r\n\t pol_Current.renl_code_descript,\r\n\t pol_Current.pol_status_code,\r\n\t pol_Current.pol_status_code_descript,\r\n\t pol_Current.pol_key,\r\n\t pol_Current.pol_sym,\r\n\t pol_Current.pol_num,\r\n\t pol_Current.pol_mod,\r\n\t pol_Current.pol_issue_code,\r\n\t pol_Current.pol_issue_code_descript,\r\n\t pol_Current.state_of_domicile_code,\r\n\t pol_Current.state_of_domicile_abbrev,\r\n\t pol_Current.state_of_domicile_code_descript,\r\n\t pol_Current.prim_bus_class_code,\r\n\t pol_Current.prim_bus_class_code_descript,\r\n\t ad_Current.AgencyCode,\r\n\t ad_Current.AgencyDoingBusinessAsName,\r\n\t ad_Current.PhysicalStateAbbreviation,\r\n\t ad_Current.PhysicalCity,\r\n\t ad_Current.PhysicalZipCode,\r\n\t ccd_Current.cust_num,\r\n\t ccd_Current.name,\r\n\t ccd_Current.sic_code,\r\n\t ccd_Current.sic_code_descript,\r\n\t ccd_Current.naics_code,\r\n\t ccd_Current.naics_code_descript,\r\n\t pol_Current.serv_center_support_code,\r\n\t pol_Current.prior_pol_key,\r\n\t prior_pol.pol_num prior_pol_num,\r\n\t prior_pol.pol_sym prior_pol_sym,\r\n\t prior_pol.pol_mod prior_pol_ver,\r\n\t DCTDividendFact.DividendPaidAmount,\r\n\t 0.00 as DividendPayableAmount,\r\n\t ccd_Current.fed_tax_id,\r\n\t pol_Current.RolloverPriorCarrier,\r\n\t prior_pol.pol_eff_date prior_pol_eff_date,\r\n\t aed_current.ProducerCode,\r\n\t (case when aed_current.AgencyEmployeeRole = 'Producer' then \r\n\t aed_current.AgencyEmployeeFirstName +' '+ aed_current.agencyemployeelastname else 'N/A' end) as Producer_FullName,\r\n\t DividendTypeDim.DividendPlan,\r\n\t DividendTypeDim.DividendType,\r\n\t calendar_dim.clndr_date Accounting_Date,\r\n\t--Removed below columns as per WREQ-13710\r\n\t--SD.AgencyCode as prim_agency_code, \r\n\t--SD.AgencyDoingBusinessAsName as prim_agency_doing_business_Name,\r\n\t--SD.PhysicalStateAbbreviation as prim_agency_state_abbr,\r\n\t--SD.PhysicalCity as prim_agency_city,\r\n\t--SD.PhysicalZipCode as prim_agency_zip_code,\r\n\t pol_Current.pol_dim_id,\r\n\t ad_Current.SalesDivisionDimId,\r\n\t DCTDividendFact.StateDimId,\r\n\t pol_Current.UnderwritingDivisionDimId,\r\n\t pol_Current.BusinessClassDimId,\r\n\t ad_Current.EDWAgencyAKID \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTDividendFact\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim pol on DCTDividendFact.PolicyDimId= pol.pol_dim_id \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim pol_Current on pol_Current.edw_pol_ak_id=pol.edw_pol_ak_id and pol_Current.crrnt_snpsht_flag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim AgencyDim on DCTDividendFact.AgencyDimId =AgencyDim.AgencyDimID \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim ad_Current --To get the current Agency attribute \r\n\ton AgencyDim.EDWAgencyAKID= ad_Current.EDWAgencyAKID and ad_Current.CurrentSnapshotFlag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim on DCTDividendFact.ContractCustomerDimId=contract_customer_dim.contract_cust_dim_id\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_dim ccd_Current --To get the current customer attribute \r\n\ton contract_customer_dim.edw_contract_cust_ak_id= ccd_Current.edw_contract_cust_ak_id and ccd_Current.crrnt_snpsht_flag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyEmployeeDim on AgencyEmployeeDim.AgencyEmployeeDimID= pol_Current.AgencyEmployeeDimID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyEmployeeDim aed_current\r\n\ton AgencyEmployeeDim.EDWAgencyEmployeeAKID = aed_current.EDWAgencyEmployeeAKID and aed_current.CurrentSnapshotFlag =1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DividendTypeDim on DividendTypeDim.DividendTypeDimId = DCTDividendFact.DividendTypeDimId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim on calendar_dim.clndr_id = DCTDividendFact.DividendRunDateId\r\n\t--INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim SD on SD.AgencyCode=AD_current.LegalPrimaryAgencyCode AND SD.CurrentSnapshotFlag= 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim on InsuranceReferenceDim.InsuranceReferenceDimid= DCTDividendFact.InsuranceReferenceDimid and \r\n\tPolicyOfferingAbbreviation='WC'\r\n\tLeft outer join @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim prior_pol on prior_pol.pol_key= pol_Current.prior_pol_key and prior_pol.crrnt_snpsht_flag =1\r\n\twhere convert(date,calendar_dim.clndr_date) <=  @Date) dividend\r\n\torder by dividend.edw_pol_ak_id desc\n),\nEXP_GetValues AS (\n\tSELECT\n\tDividendFactId,\n\tedw_pol_ak_id,\n\tEnterpriseGroupCode,\n\tEnterpriseGroupAbbreviation,\n\tStrategicProfitCenterCode,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceReferenceLegalEntityCode,\n\tInsuranceReferenceLegalEntityAbbreviation,\n\tPolicyOfferingCode,\n\tPolicyOfferingAbbreviation,\n\tPolicyOfferingDescription,\n\tProductCode,\n\tProductAbbreviation,\n\tProductDescription,\n\tInsuranceReferenceLineOfBusinessCode,\n\tInsuranceReferenceLineOfBusinessAbbreviation,\n\tInsuranceReferenceLineOfBusinessDescription,\n\tAccountingProductCode,\n\tAccountingProductAbbreviation,\n\tAccountingProductDescription,\n\tRatingPlanCode,\n\tRatingPlanDescription,\n\tInsuranceSegmentCode,\n\tInsuranceSegmentDescription,\n\tProgramCode,\n\tProgramDescription,\n\tAssociationCode,\n\tAssociationDescription,\n\tindustry_risk_grade_code,\n\tindustry_risk_grade_code_descript,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_rsn_code,\n\tpol_cancellation_rsn_code_descript,\n\torig_incptn_date,\n\trenl_code,\n\trenl_code_descript,\n\tpol_status_code,\n\tpol_status_code_descript,\n\tpol_key,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_issue_code,\n\tpol_issue_code_descript,\n\tstate_of_domicile_code,\n\tstate_of_domicile_abbrev,\n\tstate_of_domicile_code_descript,\n\tprim_bus_class_code,\n\tprim_bus_class_code_descript,\n\tAgencyCode,\n\tAgencyDoingBusinessAsName,\n\tPhysicalStateAbbreviation,\n\tPhysicalCity,\n\tPhysicalZipCode,\n\tcust_num,\n\tname,\n\tsic_code,\n\tsic_code_descript,\n\tnaics_code,\n\tnaics_code_descript,\n\tserv_center_support_code,\n\tprior_pol_key,\n\tprior_pol_num,\n\tprior_pol_sym,\n\tprior_pol_ver,\n\tDividendPaidAmount,\n\tDividendPayableAmount,\n\tfed_tax_id,\n\tRolloverPriorCarrier,\n\tprior_pol_eff_date,\n\tProducerCode,\n\tProducer_FullName,\n\tDividendPlan,\n\tDividendType,\n\tAccounting_Date,\n\tPolicyDimId,\n\tSalesDivisionDimId,\n\tStateDimId,\n\tUnderwritingDivisionDimId,\n\tBusinessClassDimId,\n\tEDWAgencyAKID\n\tFROM SQ_DividendFact\n),\nSQ_policy_dim AS (\n\tDeclare @Date as date\r\n\t\r\n\tset @Date = case when '@{pipeline().parameters.PMINTEGRATIONSERVICENAME}' like '%QA%' or '@{pipeline().parameters.PMINTEGRATIONSERVICENAME}' like '%QC%'\r\n\tthen\r\n\tconvert(date,EOMONTH(getdate(),0))\r\n\telse\r\n\tconvert(date,EOMONTH(getdate(),-1))\r\n\tend \r\n\t\r\n\tSELECT \r\n\tdistinct pol.edw_pol_ak_id \r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DividendFact \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim pol on DividendFact.PolicyDimId= pol.pol_dim_id \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DividendTypeDim on DividendTypeDim.DividendTypeDimId = DividendFact.DividendTypeDimId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim on calendar_dim.clndr_id = DividendFact.DividendRunDateId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim on InsuranceReferenceDim.InsuranceReferenceDimid= DividendFact.StrategicProfitCenterDimId and \r\n\tPolicyOfferingAbbreviation='WC'\r\n\twhere convert(date,calendar_dim.clndr_date) <= @Date\r\n\torder by pol.edw_pol_ak_id desc\n),\nmplt_Determine_RiskGrade_Code_and_Description AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_PMF_CDD_RiskGradeCode AS (\n\t\tSELECT\n\t\tPremiumMasterPremium,\n\t\tRiskGradeCode,\n\t\tInsuranceLineCode,\n\t\tin_PolicyAKID,\n\t\tedw_pol_ak_id\n\t\tFROM (\n\t\t\tSELECT \r\n\t\t\tSUM(pmf.PremiumMasterPremium) as PremiumMasterPremium,\r\n\t\t\tcdd.RiskGradeCode as RiskGradeCode,\r\n\t\t\tircd.InsuranceLineCode as InsuranceLineCode,\r\n\t\t\tpd.edw_pol_ak_id as edw_pol_ak_id \r\n\t\t\tFROM policy_dim pd\r\n\t\t\tinner join dbo.PremiumMasterFact pmf on pmf.PolicyDimID = pd.pol_dim_id\r\n\t\t\tinner join dbo.InsuranceReferenceCoverageDim ircd on ircd.InsuranceReferenceCoverageDimId = pmf.InsuranceReferenceCoverageDimId\r\n\t\t\tinner join dbo.CoverageDetailDim cdd on cdd.CoverageDetailDimId = pmf.CoverageDetailDimId\r\n\t\t\tgroup by cdd.RiskGradeCode,ircd.InsuranceLineCode,pd.edw_pol_ak_id\r\n\t\t\torder by pd.edw_pol_ak_id,ircd.InsuranceLineCode,cdd.RiskGradeCode\r\n\t\t\t--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id ORDER BY PremiumMasterPremium) = 1\n\t),\n\tAGG_Pol_InsuranceLine_RiskGrade AS (\n\t\tSELECT\n\t\tin_PolicyAKID,\n\t\tInsuranceLineCode,\n\t\tRiskGradeCode,\n\t\tPremiumMasterPremium,\n\t\t-- *INF*: ROUND(SUM(PremiumMasterPremium),4)\n\t\tROUND(SUM(PremiumMasterPremium), 4) AS NetPremium\n\t\tFROM LKP_PMF_CDD_RiskGradeCode\n\t\tGROUP BY in_PolicyAKID, InsuranceLineCode, RiskGradeCode\n\t),\n\tFLT_LOB_Premium_not_zero AS (\n\t\tSELECT\n\t\tin_PolicyAKID, \n\t\tInsuranceLineCode, \n\t\tRiskGradeCode, \n\t\tNetPremium\n\t\tFROM AGG_Pol_InsuranceLine_RiskGrade\n\t\tWHERE NetPremium<>0.0\n\t),\n\tEXP_Translate_RiskGradeCode AS (\n\t\tSELECT\n\t\tin_PolicyAKID,\n\t\tInsuranceLineCode,\n\t\tRiskGradeCode,\n\t\t-- *INF*: DECODE (TRUE, RiskGradeCode='1' , 1 ,\r\n\t\t-- RiskGradeCode='2' , 2 ,\r\n\t\t-- RiskGradeCode='3' , 3 ,\r\n\t\t-- RiskGradeCode='4' , 4 ,\r\n\t\t-- RiskGradeCode='5' , 5 ,\r\n\t\t-- RiskGradeCode='6' , 6 ,\r\n\t\t-- RiskGradeCode='7' , 7 ,\r\n\t\t-- RiskGradeCode='8' , 8 ,\r\n\t\t-- RiskGradeCode='9' , 9 ,\r\n\t\t-- RiskGradeCode='0' , 0 ,\r\n\t\t-- RiskGradeCode='D' , 10 ,\r\n\t\t-- RiskGradeCode='N/A' , -3 ,\r\n\t\t-- RiskGradeCode='DNW' , 11 ,\r\n\t\t-- RiskGradeCode='NSI' , -1 ,\r\n\t\t-- RiskGradeCode='Argent' , -2 ,-3)\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    RiskGradeCode = '1', 1,\n\t\t    RiskGradeCode = '2', 2,\n\t\t    RiskGradeCode = '3', 3,\n\t\t    RiskGradeCode = '4', 4,\n\t\t    RiskGradeCode = '5', 5,\n\t\t    RiskGradeCode = '6', 6,\n\t\t    RiskGradeCode = '7', 7,\n\t\t    RiskGradeCode = '8', 8,\n\t\t    RiskGradeCode = '9', 9,\n\t\t    RiskGradeCode = '0', 0,\n\t\t    RiskGradeCode = 'D', 10,\n\t\t    RiskGradeCode = 'N/A', - 3,\n\t\t    RiskGradeCode = 'DNW', 11,\n\t\t    RiskGradeCode = 'NSI', - 1,\n\t\t    RiskGradeCode = 'Argent', - 2,\n\t\t    - 3\n\t\t) AS RiskGradeValue\n\t\tFROM FLT_LOB_Premium_not_zero\n\t),\n\tAGG_Max_RiskGrade_Pol AS (\n\t\tSELECT\n\t\tin_PolicyAKID,\n\t\tInsuranceLineCode,\n\t\tRiskGradeValue,\n\t\t-- *INF*: MAX(RiskGradeValue)\n\t\tMAX(RiskGradeValue) AS o_maxRiskGradeValue\n\t\tFROM EXP_Translate_RiskGradeCode\n\t\tGROUP BY in_PolicyAKID\n\t),\n\tEXP_Decode_RiskGradeValue AS (\n\t\tSELECT\n\t\tin_PolicyAKID,\n\t\to_maxRiskGradeValue,\n\t\t-- *INF*: DECODE (TRUE,o_maxRiskGradeValue=1 , '1' ,\r\n\t\t-- o_maxRiskGradeValue=2 , '2' ,\r\n\t\t-- o_maxRiskGradeValue=3 , '3' ,\r\n\t\t-- o_maxRiskGradeValue=4 , '4' ,\r\n\t\t-- o_maxRiskGradeValue=5 , '5' ,\r\n\t\t-- o_maxRiskGradeValue=6 , '6' ,\r\n\t\t-- o_maxRiskGradeValue=7 , '7' ,\r\n\t\t-- o_maxRiskGradeValue=8 , '8' ,\r\n\t\t-- o_maxRiskGradeValue=9 , '9' ,\r\n\t\t-- o_maxRiskGradeValue=0 , '0' ,\r\n\t\t-- o_maxRiskGradeValue=10 , 'D' ,\r\n\t\t-- o_maxRiskGradeValue=-3 , 'N/A' ,\r\n\t\t-- o_maxRiskGradeValue=11 , 'DNW' ,\r\n\t\t-- o_maxRiskGradeValue=-1 , 'NSI' ,\r\n\t\t-- o_maxRiskGradeValue=-2 , 'Argent' ,'N/A')\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    o_maxRiskGradeValue = 1, '1',\n\t\t    o_maxRiskGradeValue = 2, '2',\n\t\t    o_maxRiskGradeValue = 3, '3',\n\t\t    o_maxRiskGradeValue = 4, '4',\n\t\t    o_maxRiskGradeValue = 5, '5',\n\t\t    o_maxRiskGradeValue = 6, '6',\n\t\t    o_maxRiskGradeValue = 7, '7',\n\t\t    o_maxRiskGradeValue = 8, '8',\n\t\t    o_maxRiskGradeValue = 9, '9',\n\t\t    o_maxRiskGradeValue = 0, '0',\n\t\t    o_maxRiskGradeValue = 10, 'D',\n\t\t    o_maxRiskGradeValue = - 3, 'N/A',\n\t\t    o_maxRiskGradeValue = 11, 'DNW',\n\t\t    o_maxRiskGradeValue = - 1, 'NSI',\n\t\t    o_maxRiskGradeValue = - 2, 'Argent',\n\t\t    'N/A'\n\t\t) AS RiskGradeCode,\n\t\t-- *INF*: DECODE (TRUE,o_maxRiskGradeValue=1 , 'Excellent' ,\r\n\t\t-- o_maxRiskGradeValue=2 , 'Excellent' ,\r\n\t\t-- o_maxRiskGradeValue=3 , 'Good' ,\r\n\t\t-- o_maxRiskGradeValue=4 , 'Good' ,\r\n\t\t-- o_maxRiskGradeValue=5 , 'Average' ,\r\n\t\t-- o_maxRiskGradeValue=6 , 'Marginal' ,\r\n\t\t-- o_maxRiskGradeValue=7 , 'Marginal' ,\r\n\t\t-- o_maxRiskGradeValue=8 , 'Poor' ,\r\n\t\t-- o_maxRiskGradeValue=9 , 'Poor' ,\r\n\t\t-- o_maxRiskGradeValue=0 , 'NSI Bonds' ,\r\n\t\t-- o_maxRiskGradeValue=10 , 'Do Not Write' ,\r\n\t\t-- o_maxRiskGradeValue=-3 , 'Not Available' ,\r\n\t\t-- o_maxRiskGradeValue=11 , 'Do Not Write' ,\r\n\t\t-- o_maxRiskGradeValue=-1 , 'NSI' ,\r\n\t\t-- o_maxRiskGradeValue=-2 , 'Argent' , 'Not Available')\n\t\tDECODE(\n\t\t    TRUE,\n\t\t    o_maxRiskGradeValue = 1, 'Excellent',\n\t\t    o_maxRiskGradeValue = 2, 'Excellent',\n\t\t    o_maxRiskGradeValue = 3, 'Good',\n\t\t    o_maxRiskGradeValue = 4, 'Good',\n\t\t    o_maxRiskGradeValue = 5, 'Average',\n\t\t    o_maxRiskGradeValue = 6, 'Marginal',\n\t\t    o_maxRiskGradeValue = 7, 'Marginal',\n\t\t    o_maxRiskGradeValue = 8, 'Poor',\n\t\t    o_maxRiskGradeValue = 9, 'Poor',\n\t\t    o_maxRiskGradeValue = 0, 'NSI Bonds',\n\t\t    o_maxRiskGradeValue = 10, 'Do Not Write',\n\t\t    o_maxRiskGradeValue = - 3, 'Not Available',\n\t\t    o_maxRiskGradeValue = 11, 'Do Not Write',\n\t\t    o_maxRiskGradeValue = - 1, 'NSI',\n\t\t    o_maxRiskGradeValue = - 2, 'Argent',\n\t\t    'Not Available'\n\t\t) AS RiskGradeDescription\n\t\tFROM AGG_Max_RiskGrade_Pol\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tin_PolicyAKID, \n\t\tRiskGradeCode, \n\t\tRiskGradeDescription\n\t\tFROM EXP_Decode_RiskGradeValue\n\t),\n),\nJNR_DividendFact_policyDim_by_Pol_akid AS (SELECT\n\tEXP_GetValues.DividendFactId, \n\tEXP_GetValues.edw_pol_ak_id, \n\tEXP_GetValues.EnterpriseGroupCode, \n\tEXP_GetValues.EnterpriseGroupAbbreviation, \n\tEXP_GetValues.StrategicProfitCenterCode, \n\tEXP_GetValues.StrategicProfitCenterAbbreviation, \n\tEXP_GetValues.InsuranceReferenceLegalEntityCode, \n\tEXP_GetValues.InsuranceReferenceLegalEntityAbbreviation, \n\tEXP_GetValues.PolicyOfferingCode, \n\tEXP_GetValues.PolicyOfferingAbbreviation, \n\tEXP_GetValues.PolicyOfferingDescription, \n\tEXP_GetValues.ProductCode, \n\tEXP_GetValues.ProductAbbreviation, \n\tEXP_GetValues.ProductDescription, \n\tEXP_GetValues.InsuranceReferenceLineOfBusinessCode, \n\tEXP_GetValues.InsuranceReferenceLineOfBusinessAbbreviation, \n\tEXP_GetValues.InsuranceReferenceLineOfBusinessDescription, \n\tEXP_GetValues.AccountingProductCode, \n\tEXP_GetValues.AccountingProductAbbreviation, \n\tEXP_GetValues.AccountingProductDescription, \n\tEXP_GetValues.RatingPlanCode, \n\tEXP_GetValues.RatingPlanDescription, \n\tEXP_GetValues.InsuranceSegmentCode, \n\tEXP_GetValues.InsuranceSegmentDescription, \n\tEXP_GetValues.ProgramCode, \n\tEXP_GetValues.ProgramDescription, \n\tEXP_GetValues.AssociationCode, \n\tEXP_GetValues.AssociationDescription, \n\tmplt_Determine_RiskGrade_Code_and_Description.RiskGradeCode, \n\tmplt_Determine_RiskGrade_Code_and_Description.RiskGradeDescription, \n\tEXP_GetValues.pol_eff_date, \n\tEXP_GetValues.pol_exp_date, \n\tEXP_GetValues.pol_cancellation_rsn_code, \n\tEXP_GetValues.pol_cancellation_rsn_code_descript, \n\tEXP_GetValues.orig_incptn_date, \n\tEXP_GetValues.renl_code, \n\tEXP_GetValues.renl_code_descript, \n\tEXP_GetValues.pol_status_code, \n\tEXP_GetValues.pol_status_code_descript, \n\tEXP_GetValues.pol_key, \n\tEXP_GetValues.pol_sym, \n\tEXP_GetValues.pol_num, \n\tEXP_GetValues.pol_mod, \n\tEXP_GetValues.pol_issue_code, \n\tEXP_GetValues.pol_issue_code_descript, \n\tEXP_GetValues.state_of_domicile_code, \n\tEXP_GetValues.state_of_domicile_abbrev, \n\tEXP_GetValues.state_of_domicile_code_descript, \n\tEXP_GetValues.prim_bus_class_code, \n\tEXP_GetValues.prim_bus_class_code_descript, \n\tEXP_GetValues.AgencyCode, \n\tEXP_GetValues.AgencyDoingBusinessAsName, \n\tEXP_GetValues.PhysicalStateAbbreviation, \n\tEXP_GetValues.PhysicalCity, \n\tEXP_GetValues.PhysicalZipCode, \n\tEXP_GetValues.cust_num, \n\tEXP_GetValues.name, \n\tEXP_GetValues.sic_code, \n\tEXP_GetValues.sic_code_descript, \n\tEXP_GetValues.naics_code, \n\tEXP_GetValues.naics_code_descript, \n\tEXP_GetValues.serv_center_support_code, \n\tEXP_GetValues.prior_pol_key, \n\tEXP_GetValues.prior_pol_num, \n\tEXP_GetValues.prior_pol_sym, \n\tEXP_GetValues.prior_pol_ver, \n\tEXP_GetValues.DividendPaidAmount, \n\tEXP_GetValues.DividendPayableAmount, \n\tEXP_GetValues.fed_tax_id, \n\tEXP_GetValues.RolloverPriorCarrier, \n\tEXP_GetValues.prior_pol_eff_date, \n\tEXP_GetValues.ProducerCode, \n\tEXP_GetValues.Producer_FullName, \n\tEXP_GetValues.DividendPlan, \n\tEXP_GetValues.DividendType, \n\tEXP_GetValues.Accounting_Date, \n\tEXP_GetValues.PolicyDimId, \n\tEXP_GetValues.SalesDivisionDimId, \n\tEXP_GetValues.StateDimId, \n\tEXP_GetValues.UnderwritingDivisionDimId, \n\tEXP_GetValues.BusinessClassDimId, \n\tEXP_GetValues.EDWAgencyAKID, \n\tmplt_Determine_RiskGrade_Code_and_Description.in_PolicyAKID1\n\tFROM EXP_GetValues\n\tINNER JOIN mplt_Determine_RiskGrade_Code_and_Description\n\tON mplt_Determine_RiskGrade_Code_and_Description.in_PolicyAKID1 = EXP_GetValues.edw_pol_ak_id\n),\nEXP_Pass_Values AS (\n\tSELECT\n\tDividendFactId,\n\tedw_pol_ak_id,\n\tEnterpriseGroupCode,\n\tEnterpriseGroupAbbreviation,\n\tStrategicProfitCenterCode,\n\tStrategicProfitCenterAbbreviation,\n\tInsuranceReferenceLegalEntityCode,\n\tInsuranceReferenceLegalEntityAbbreviation,\n\tPolicyOfferingCode,\n\tPolicyOfferingAbbreviation,\n\tPolicyOfferingDescription,\n\tProductCode,\n\tProductAbbreviation,\n\tProductDescription,\n\tInsuranceReferenceLineOfBusinessCode,\n\tInsuranceReferenceLineOfBusinessAbbreviation,\n\tInsuranceReferenceLineOfBusinessDescription,\n\tAccountingProductCode,\n\tAccountingProductAbbreviation,\n\tAccountingProductDescription,\n\tRatingPlanCode,\n\tRatingPlanDescription,\n\tInsuranceSegmentCode,\n\tInsuranceSegmentDescription,\n\tProgramCode,\n\tProgramDescription,\n\tAssociationCode,\n\tAssociationDescription,\n\tRiskGradeCode AS industry_risk_grade_code,\n\tRiskGradeDescription AS industry_risk_grade_code_descript,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_rsn_code,\n\tpol_cancellation_rsn_code_descript,\n\torig_incptn_date,\n\trenl_code,\n\trenl_code_descript,\n\tpol_status_code,\n\tpol_status_code_descript,\n\tpol_key,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_issue_code,\n\tpol_issue_code_descript,\n\tstate_of_domicile_code,\n\tstate_of_domicile_abbrev,\n\tstate_of_domicile_code_descript,\n\tprim_bus_class_code,\n\tprim_bus_class_code_descript,\n\tAgencyCode,\n\tAgencyDoingBusinessAsName,\n\tPhysicalStateAbbreviation,\n\tPhysicalCity,\n\tPhysicalZipCode,\n\tcust_num,\n\tname,\n\tsic_code,\n\tsic_code_descript,\n\tnaics_code,\n\tnaics_code_descript,\n\tserv_center_support_code,\n\tprior_pol_key,\n\tprior_pol_num,\n\tprior_pol_sym,\n\tprior_pol_ver,\n\tDividendPaidAmount,\n\tDividendPayableAmount,\n\tfed_tax_id,\n\tRolloverPriorCarrier,\n\tprior_pol_eff_date,\n\tProducerCode,\n\tProducer_FullName,\n\tDividendPlan,\n\tDividendType,\n\tAccounting_Date,\n\tPolicyDimId,\n\tSalesDivisionDimId,\n\tStateDimId,\n\tUnderwritingDivisionDimId,\n\tBusinessClassDimId,\n\tEDWAgencyAKID\n\tFROM JNR_DividendFact_policyDim_by_Pol_akid\n),\nLKP_AgencyRelationship AS (\n\tSELECT\n\tPrim_Agency_Code,\n\tPrim_Agency_State_Code,\n\tprim_agency_name,\n\tprim_agency_status_code,\n\tprim_agency_state_abbr,\n\tprim_agency_city,\n\tprim_agency_zip_code,\n\tEDWAgencyAKID\n\tFROM (\n\t\tselect Latest_LPAC.EDWAgencyAKId as EDWAgencyAKId ,\r\n\t\t  SD.agencycode as prim_agency_code,\r\n\t\t  Left((SD.agencycode),2) as prim_agency_state_code,\r\n\t\t  SD.AgencyDoingBusinessAsName as prim_agency_name,\r\n\t\tSD.AgencyStatusCode as prim_agency_status_code,\r\n\t\tSD.PhysicalStateAbbreviation as prim_agency_state_abbr,\r\n\t\tSD.PhysicalCity as prim_agency_city,\r\n\t\tSD.PhysicalZipCode as prim_agency_zip_code\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim SD \r\n\t\tInner Join  (\r\n\t\t Select EDWAgencyAKId,EDWLegalPrimaryAgencyAKId from \r\n\t\t  (\r\n\t\t\tselect EDWAgencyAKId, \r\n\t\t  EDWLegalPrimaryAgencyAKId, row_number() over (partition by edwAgencyAKID order by AgencyRelationshipexpirationdate desc ) As rowNum \r\n\t\t  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.AgencyRelationshipCurrent\r\n\t\t  where AgencyRelationshipexpirationdate != '1800-01-01'\r\n\t\t  ) a\r\n\t\t  where a.rowNum = 1 \r\n\t\t  ) Latest_LPAC\r\n\t\t  on Latest_LPAC.EDWLegalPrimaryAgencyAKId=SD.EDWAgencyAKId\r\n\t\t  where SD.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWAgencyAKID ORDER BY Prim_Agency_Code) = 1\n),\nLKP_BusinessClassDim AS (\n\tSELECT\n\tBusinessSegmentCode,\n\tBusinessSegmentDescription,\n\tStrategicBusinessGroupCode,\n\tStrategicBusinessGroupDescription,\n\tBusinessClassDimId\n\tFROM (\n\t\tSELECT \n\t\t\tBusinessSegmentCode,\n\t\t\tBusinessSegmentDescription,\n\t\t\tStrategicBusinessGroupCode,\n\t\t\tStrategicBusinessGroupDescription,\n\t\t\tBusinessClassDimId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.BusinessClassDim\n\t\tWHERE CurrentSnapshotFlag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BusinessClassDimId ORDER BY BusinessSegmentCode) = 1\n),\nLKP_PolicyCurrentStatusDim AS (\n\tSELECT\n\tPolicyCancellationDate,\n\tPolicyStatusCode,\n\tPolicyStatusDescription,\n\tEDWPolicyAKId\n\tFROM (\n\t\tselect EDWPolicyAKId as EDWPolicyAKId, PolicyCancellationDate as PolicyCancellationDate,\r\n\t\tcase \r\n\t\twhen PolicyStatusDescription = 'Cancelled' then 'C'\r\n\t\twhen PolicyStatusDescription = 'Future Inforce' then 'F'\r\n\t\twhen PolicyStatusDescription = 'Inforce' then 'I'\r\n\t\twhen PolicyStatusDescription = 'Not Inforce' then 'N'\r\n\t\telse 'N/A'\r\n\t\tend as PolicyStatusCode,\r\n\t\tPolicyStatusDescription as PolicyStatusDescription\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCurrentStatusDim pol_cstatus\r\n\t\twhere RunDate = (select max(b.rundate) from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCurrentStatusDim b where b.EDWPolicyAKId=pol_cstatus.EDWPolicyAKId)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPolicyAKId ORDER BY PolicyCancellationDate) = 1\n),\nLKP_SalesDivisionDim AS (\n\tSELECT\n\tRegionalSalesManagerDisplayName,\n\tSalesTerritoryCode,\n\tSalesDivisionDimID\n\tFROM (\n\t\tSELECT \n\t\t\tRegionalSalesManagerDisplayName,\n\t\t\tSalesTerritoryCode,\n\t\t\tSalesDivisionDimID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SalesDivisionDim\n\t\tWHERE CurrentSnapshotFlag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SalesDivisionDimID ORDER BY RegionalSalesManagerDisplayName) = 1\n),\nLKP_StateDim AS (\n\tSELECT\n\tStateCode,\n\tStateAbbreviation,\n\tStateDescription,\n\tStateDimID\n\tFROM (\n\t\tSELECT \n\t\t\tStateCode,\n\t\t\tStateAbbreviation,\n\t\t\tStateDescription,\n\t\t\tStateDimID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StateDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateDimID ORDER BY StateCode) = 1\n),\nLKP_UnderwritingDivisionDim AS (\n\tSELECT\n\tUnderwriterDisplayName,\n\tUnderwriterManagerDisplayName,\n\tUnderwritingRegionCodeDescription,\n\tUnderwritingDivisionDimID\n\tFROM (\n\t\tSELECT \n\t\t\tUnderwriterDisplayName,\n\t\t\tUnderwriterManagerDisplayName,\n\t\t\tUnderwritingRegionCodeDescription,\n\t\t\tUnderwritingDivisionDimID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.UnderwritingDivisionDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY UnderwritingDivisionDimID ORDER BY UnderwriterDisplayName) = 1\n),\nEXP_Get_Values AS (\n\tSELECT\n\tEXP_Pass_Values.DividendFactId,\n\tEXP_Pass_Values.edw_pol_ak_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Pass_Values.EnterpriseGroupCode,\n\tEXP_Pass_Values.EnterpriseGroupAbbreviation,\n\tEXP_Pass_Values.StrategicProfitCenterCode,\n\tEXP_Pass_Values.StrategicProfitCenterAbbreviation,\n\tEXP_Pass_Values.InsuranceReferenceLegalEntityCode,\n\tEXP_Pass_Values.InsuranceReferenceLegalEntityAbbreviation,\n\tEXP_Pass_Values.PolicyOfferingCode,\n\tEXP_Pass_Values.PolicyOfferingAbbreviation,\n\tEXP_Pass_Values.PolicyOfferingDescription,\n\tEXP_Pass_Values.ProductCode,\n\tEXP_Pass_Values.ProductAbbreviation,\n\tEXP_Pass_Values.ProductDescription,\n\tEXP_Pass_Values.InsuranceReferenceLineOfBusinessCode,\n\tEXP_Pass_Values.InsuranceReferenceLineOfBusinessAbbreviation,\n\tEXP_Pass_Values.InsuranceReferenceLineOfBusinessDescription,\n\tEXP_Pass_Values.AccountingProductCode,\n\tEXP_Pass_Values.AccountingProductAbbreviation,\n\tEXP_Pass_Values.AccountingProductDescription,\n\tEXP_Pass_Values.RatingPlanCode,\n\tEXP_Pass_Values.RatingPlanDescription,\n\tEXP_Pass_Values.InsuranceSegmentCode,\n\tEXP_Pass_Values.InsuranceSegmentDescription,\n\tEXP_Pass_Values.ProgramCode,\n\tEXP_Pass_Values.ProgramDescription,\n\tEXP_Pass_Values.AssociationCode,\n\tEXP_Pass_Values.AssociationDescription,\n\tEXP_Pass_Values.industry_risk_grade_code,\n\tEXP_Pass_Values.industry_risk_grade_code_descript,\n\tEXP_Pass_Values.pol_eff_date,\n\tEXP_Pass_Values.pol_exp_date,\n\tEXP_Pass_Values.pol_cancellation_rsn_code,\n\tEXP_Pass_Values.pol_cancellation_rsn_code_descript,\n\tEXP_Pass_Values.orig_incptn_date,\n\tEXP_Pass_Values.renl_code,\n\tEXP_Pass_Values.renl_code_descript,\n\tEXP_Pass_Values.pol_key,\n\tEXP_Pass_Values.pol_sym,\n\tEXP_Pass_Values.pol_num,\n\tEXP_Pass_Values.pol_mod,\n\tEXP_Pass_Values.pol_issue_code,\n\tEXP_Pass_Values.pol_issue_code_descript,\n\tEXP_Pass_Values.state_of_domicile_code,\n\tEXP_Pass_Values.state_of_domicile_abbrev,\n\tEXP_Pass_Values.state_of_domicile_code_descript,\n\tEXP_Pass_Values.prim_bus_class_code,\n\tEXP_Pass_Values.prim_bus_class_code_descript,\n\tEXP_Pass_Values.AgencyCode,\n\tEXP_Pass_Values.AgencyDoingBusinessAsName,\n\tEXP_Pass_Values.PhysicalStateAbbreviation,\n\tEXP_Pass_Values.PhysicalCity,\n\tEXP_Pass_Values.PhysicalZipCode,\n\tEXP_Pass_Values.ProducerCode,\n\tEXP_Pass_Values.Producer_FullName,\n\tEXP_Pass_Values.cust_num,\n\tEXP_Pass_Values.name,\n\tEXP_Pass_Values.sic_code,\n\tEXP_Pass_Values.sic_code_descript,\n\tEXP_Pass_Values.naics_code,\n\tEXP_Pass_Values.naics_code_descript,\n\tEXP_Pass_Values.serv_center_support_code,\n\tEXP_Pass_Values.prior_pol_key,\n\tEXP_Pass_Values.DividendPaidAmount,\n\tEXP_Pass_Values.DividendPayableAmount,\n\tEXP_Pass_Values.fed_tax_id,\n\tEXP_Pass_Values.RolloverPriorCarrier,\n\tEXP_Pass_Values.DividendPlan,\n\tEXP_Pass_Values.DividendType,\n\tLKP_AgencyRelationship.Prim_Agency_Code AS i_prim_agency_code,\n\tLKP_AgencyRelationship.prim_agency_name AS i_prim_agency_doing_business_Name,\n\tLKP_AgencyRelationship.prim_agency_state_abbr AS i_prim_agency_state_abbr,\n\tLKP_AgencyRelationship.prim_agency_city AS i_prim_agency_city,\n\tLKP_AgencyRelationship.prim_agency_zip_code AS i_prim_agency_zip_code,\n\tLKP_PolicyCurrentStatusDim.PolicyCancellationDate AS i_PolicyCancellationDate,\n\tLKP_PolicyCurrentStatusDim.PolicyStatusCode AS i_pol_status_code,\n\tLKP_PolicyCurrentStatusDim.PolicyStatusDescription AS i_pol_status_code_descript,\n\tLKP_StateDim.StateCode AS i_StateCode,\n\tLKP_StateDim.StateAbbreviation AS i_StateAbbreviation,\n\tLKP_StateDim.StateDescription AS i_StateDescription,\n\tLKP_SalesDivisionDim.RegionalSalesManagerDisplayName AS i_RegionalSalesManagerDisplayName,\n\tLKP_SalesDivisionDim.SalesTerritoryCode AS i_SalesTerritoryCode,\n\tEXP_Pass_Values.prior_pol_num AS i_prior_pol_num,\n\tEXP_Pass_Values.prior_pol_sym AS i_prior_pol_sym,\n\tEXP_Pass_Values.prior_pol_ver AS i_prior_pol_mod,\n\tLKP_UnderwritingDivisionDim.UnderwriterDisplayName AS i_UnderwriterDisplayName,\n\tLKP_UnderwritingDivisionDim.UnderwriterManagerDisplayName AS i_UnderwriterManagerDisplayName,\n\tLKP_UnderwritingDivisionDim.UnderwritingRegionCodeDescription AS i_UnderwritingRegionCodeDescription,\n\tLKP_BusinessClassDim.BusinessSegmentCode AS i_BusinessSegmentCode,\n\tLKP_BusinessClassDim.BusinessSegmentDescription AS i_BusinessSegmentDescription,\n\tLKP_BusinessClassDim.StrategicBusinessGroupCode AS i_StrategicBusinessGroupCode,\n\tLKP_BusinessClassDim.StrategicBusinessGroupDescription AS i_StrategicBusinessGroupDescription,\n\tEXP_Pass_Values.Accounting_Date AS i_accounting_date,\n\tEXP_Pass_Values.prior_pol_eff_date AS i_prior_pol_eff_date,\n\t-- *INF*: IIF(ISNULL(i_PolicyCancellationDate),TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),i_PolicyCancellationDate)\n\tIFF(\n\t    i_PolicyCancellationDate IS NULL,\n\t    TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    i_PolicyCancellationDate\n\t) AS v_PolicyCancellationDate,\n\t-- *INF*: IIF(ISNULL(i_accounting_date),TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),i_accounting_date)\n\tIFF(\n\t    i_accounting_date IS NULL, TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    i_accounting_date\n\t) AS v_accounting_date,\n\t-- *INF*: :LKP.LKP_PhysicalState(PhysicalStateAbbreviation)\n\tLKP_PHYSICALSTATE_PhysicalStateAbbreviation.StateCode_Desc AS v_StateCode_Desc,\n\t-- *INF*: :LKP.LKP_PhysicalState(i_prim_agency_state_abbr)\n\tLKP_PHYSICALSTATE_i_prim_agency_state_abbr.StateCode_Desc AS v_StateCode_Desc_prim,\n\t-- *INF*: IIF(ISNULL(i_prim_agency_code),'N/A',i_prim_agency_code)\n\tIFF(i_prim_agency_code IS NULL, 'N/A', i_prim_agency_code) AS o_prim_agency_code,\n\t-- *INF*: IIF(ISNULL(i_prim_agency_doing_business_Name),'N/A',i_prim_agency_doing_business_Name)\n\tIFF(i_prim_agency_doing_business_Name IS NULL, 'N/A', i_prim_agency_doing_business_Name) AS o_prim_agency_doing_business_Name,\n\tv_PolicyCancellationDate AS o_PolicyCancellationDate,\n\t-- *INF*: IIF(ISNULL(i_prim_agency_state_abbr),'N/A',i_prim_agency_state_abbr)\n\tIFF(i_prim_agency_state_abbr IS NULL, 'N/A', i_prim_agency_state_abbr) AS o_prim_agency_state_abbr,\n\t-- *INF*: IIF(ISNULL(i_prim_agency_city),'N/A',i_prim_agency_city)\n\tIFF(i_prim_agency_city IS NULL, 'N/A', i_prim_agency_city) AS o_prim_agency_city,\n\t-- *INF*: IIF(ISNULL(i_prim_agency_zip_code),'N/A',i_prim_agency_zip_code)\n\tIFF(i_prim_agency_zip_code IS NULL, 'N/A', i_prim_agency_zip_code) AS o_prim_agency_zip_code,\n\t-- *INF*: IIF(ISNULL(i_pol_status_code),'N/A',i_pol_status_code)\n\tIFF(i_pol_status_code IS NULL, 'N/A', i_pol_status_code) AS o_pol_status_code,\n\t-- *INF*: IIF(ISNULL(i_pol_status_code_descript),'N/A',i_pol_status_code_descript)\n\tIFF(i_pol_status_code_descript IS NULL, 'N/A', i_pol_status_code_descript) AS o_pol_status_code_descript,\n\t-- *INF*: IIF(ISNULL(i_StateCode),'N/A',i_StateCode)\n\tIFF(i_StateCode IS NULL, 'N/A', i_StateCode) AS o_StateCode,\n\t-- *INF*: IIF(ISNULL(i_StateAbbreviation),'N/A',i_StateAbbreviation)\n\tIFF(i_StateAbbreviation IS NULL, 'N/A', i_StateAbbreviation) AS o_StateAbbreviation,\n\t-- *INF*: IIF(ISNULL(i_StateDescription),'N/A',i_StateDescription)\n\tIFF(i_StateDescription IS NULL, 'N/A', i_StateDescription) AS o_StateDescription,\n\t-- *INF*: IIF(ISNULL(i_RegionalSalesManagerDisplayName),'N/A',i_RegionalSalesManagerDisplayName)\n\tIFF(i_RegionalSalesManagerDisplayName IS NULL, 'N/A', i_RegionalSalesManagerDisplayName) AS o_RegionalSalesManagerDisplayName,\n\t-- *INF*: IIF(ISNULL(i_SalesTerritoryCode),'N/A',i_SalesTerritoryCode)\n\tIFF(i_SalesTerritoryCode IS NULL, 'N/A', i_SalesTerritoryCode) AS o_SalesTerritoryCode,\n\t-- *INF*: ADD_TO_DATE(ADD_TO_DATE(TRUNC(LAST_DAY(ADD_TO_DATE(SYSDATE,'MM',-1))),'DD',1),'SS',-1)\n\tDATEADD(SECOND,- 1,DATEADD(DAY,1,TRUNC(LAST_DAY(DATEADD(MONTH,- 1,CURRENT_TIMESTAMP))))) AS o_Last_Booked_Date,\n\t-- *INF*: GET_DATE_PART(pol_eff_date,'YYYY')\n\tDATE_PART(pol_eff_date, 'YYYY') AS o_pol_eff_yr,\n\t-- *INF*: TO_INTEGER(TO_CHAR(pol_eff_date,'Q'))\n\tCAST(TO_CHAR(pol_eff_date, 'Q') AS INTEGER) AS o_pol_eff_qtr,\n\t-- *INF*: GET_DATE_PART(pol_eff_date,'MM')\n\tDATE_PART(pol_eff_date, 'MM') AS o_pol_eff_month,\n\t-- *INF*: TO_CHAR(pol_eff_date,'MONTH')\n\tTO_CHAR(pol_eff_date, 'MONTH') AS o_pol_eff_month_descript,\n\t-- *INF*: GET_DATE_PART(pol_exp_date,'YYYY')\n\tDATE_PART(pol_exp_date, 'YYYY') AS o_pol_exp_yr,\n\t-- *INF*: TO_INTEGER(TO_CHAR(pol_exp_date,'Q'))\n\tCAST(TO_CHAR(pol_exp_date, 'Q') AS INTEGER) AS o_pol_exp_qtr,\n\t-- *INF*: GET_DATE_PART(pol_exp_date,'MM')\n\tDATE_PART(pol_exp_date, 'MM') AS o_pol_exp_month,\n\t-- *INF*: TO_CHAR(pol_exp_date,'MONTH')\n\tTO_CHAR(pol_exp_date, 'MONTH') AS o_pol_exp_month_descript,\n\t-- *INF*: IIF(ISNULL(i_prior_pol_num),'N/A',i_prior_pol_num)\n\tIFF(i_prior_pol_num IS NULL, 'N/A', i_prior_pol_num) AS o_prior_pol_num,\n\t-- *INF*: IIF(ISNULL(i_prior_pol_sym),'N/A',i_prior_pol_sym)\n\tIFF(i_prior_pol_sym IS NULL, 'N/A', i_prior_pol_sym) AS o_prior_pol_sym,\n\t-- *INF*: IIF(ISNULL(i_prior_pol_mod),'N/A',i_prior_pol_mod)\n\tIFF(i_prior_pol_mod IS NULL, 'N/A', i_prior_pol_mod) AS o_prior_pol_mod,\n\t-- *INF*: IIF(ISNULL(i_UnderwriterDisplayName),'N/A',i_UnderwriterDisplayName)\n\tIFF(i_UnderwriterDisplayName IS NULL, 'N/A', i_UnderwriterDisplayName) AS o_UnderwriterDisplayName,\n\t-- *INF*: IIF(ISNULL(i_UnderwriterManagerDisplayName),'N/A',i_UnderwriterManagerDisplayName)\n\tIFF(i_UnderwriterManagerDisplayName IS NULL, 'N/A', i_UnderwriterManagerDisplayName) AS o_UnderwriterManagerDisplayName,\n\t-- *INF*: IIF(ISNULL(i_UnderwritingRegionCodeDescription),'N/A',i_UnderwritingRegionCodeDescription)\n\tIFF(i_UnderwritingRegionCodeDescription IS NULL, 'N/A', i_UnderwritingRegionCodeDescription) AS o_UnderwritingRegionCodeDescription,\n\t-- *INF*: IIF(ISNULL(i_BusinessSegmentCode),'N/A',i_BusinessSegmentCode)\n\tIFF(i_BusinessSegmentCode IS NULL, 'N/A', i_BusinessSegmentCode) AS o_BusinessSegmentCode,\n\t-- *INF*: IIF(ISNULL(i_BusinessSegmentDescription),'N/A',i_BusinessSegmentDescription)\n\tIFF(i_BusinessSegmentDescription IS NULL, 'N/A', i_BusinessSegmentDescription) AS o_BusinessSegmentDescription,\n\t-- *INF*: IIF(ISNULL(i_StrategicBusinessGroupCode),'N/A',i_StrategicBusinessGroupCode)\n\tIFF(i_StrategicBusinessGroupCode IS NULL, 'N/A', i_StrategicBusinessGroupCode) AS o_StrategicBusinessGroupCode,\n\t-- *INF*: IIF(ISNULL(i_StrategicBusinessGroupDescription),'N/A',i_StrategicBusinessGroupDescription)\n\tIFF(i_StrategicBusinessGroupDescription IS NULL, 'N/A', i_StrategicBusinessGroupDescription) AS o_StrategicBusinessGroupDescription,\n\tv_accounting_date AS o_accounting_date,\n\t-- *INF*: GET_DATE_PART(v_accounting_date,'YYYY')\n\tDATE_PART(v_accounting_date, 'YYYY') AS o_accounting_yr,\n\t-- *INF*: TO_INTEGER(TO_CHAR(v_accounting_date,'Q'))\n\tCAST(TO_CHAR(v_accounting_date, 'Q') AS INTEGER) AS o_accounting_qtr,\n\t-- *INF*: GET_DATE_PART(v_accounting_date,'MM')\n\tDATE_PART(v_accounting_date, 'MM') AS o_accounting_month,\n\t-- *INF*: TO_CHAR(v_accounting_date,'MONTH')\n\tTO_CHAR(v_accounting_date, 'MONTH') AS o_accounting_month_descript,\n\t-- *INF*: GET_DATE_PART(v_PolicyCancellationDate,'YYYY')\n\tDATE_PART(v_PolicyCancellationDate, 'YYYY') AS o_pol_cancellation_yr,\n\t-- *INF*: TO_INTEGER(TO_CHAR(v_PolicyCancellationDate,'Q'))\n\tCAST(TO_CHAR(v_PolicyCancellationDate, 'Q') AS INTEGER) AS o_pol_cancellation_qtr,\n\t-- *INF*: GET_DATE_PART(v_PolicyCancellationDate,'MM')\n\tDATE_PART(v_PolicyCancellationDate, 'MM') AS o_pol_cancellation_month,\n\t-- *INF*: TO_CHAR(v_PolicyCancellationDate,'MONTH')\n\tTO_CHAR(v_PolicyCancellationDate, 'MONTH') AS o_pol_cancellation_month_descript,\n\t-- *INF*: IIF(pol_issue_code='N','Y','N')\r\n\t-- \r\n\t-- -- N = new (Y)es, R = renewal (N)o\r\n\t-- \n\tIFF(pol_issue_code = 'N', 'Y', 'N') AS o_new_bus_indic,\n\t-- *INF*: IIF(ISNULL(v_StateCode_Desc),'N/A',\r\n\t-- SUBSTR(v_StateCode_Desc,1,(INSTR(v_StateCode_Desc,'|')-1)))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_StateCode_Desc IS NULL, 'N/A',\n\t    SUBSTR(v_StateCode_Desc, 1, (REGEXP_INSTR(v_StateCode_Desc, '|') - 1))\n\t) AS o_AgencyStateCode,\n\t-- *INF*: IIF(ISNULL(v_StateCode_Desc),'N/A',\r\n\t-- SUBSTR(v_StateCode_Desc,\r\n\t-- (INSTR(v_StateCode_Desc,'|')+1),LENGTH(v_StateCode_Desc)))\n\tIFF(\n\t    v_StateCode_Desc IS NULL, 'N/A',\n\t    SUBSTR(v_StateCode_Desc, (REGEXP_INSTR(v_StateCode_Desc, '|') + 1), LENGTH(v_StateCode_Desc))\n\t) AS o_AgencyStateDescription,\n\t-- *INF*: IIF(ISNULL(v_StateCode_Desc_prim),'N/A',\r\n\t-- SUBSTR(v_StateCode_Desc_prim,1,(INSTR(v_StateCode_Desc_prim,'|')-1)))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    v_StateCode_Desc_prim IS NULL, 'N/A',\n\t    SUBSTR(v_StateCode_Desc_prim, 1, (REGEXP_INSTR(v_StateCode_Desc_prim, '|') - 1))\n\t) AS o_PrimaryAgencyStateCode,\n\t-- *INF*: IIF(ISNULL(v_StateCode_Desc_prim),'N/A',\r\n\t-- SUBSTR(v_StateCode_Desc_prim,\r\n\t-- (INSTR(v_StateCode_Desc_prim,'|')+1),LENGTH(v_StateCode_Desc_prim)))\n\tIFF(\n\t    v_StateCode_Desc_prim IS NULL, 'N/A',\n\t    SUBSTR(v_StateCode_Desc_prim, (REGEXP_INSTR(v_StateCode_Desc_prim, '|') + 1), LENGTH(v_StateCode_Desc_prim))\n\t) AS o_PrimaryAgencyStateDescription,\n\t-- *INF*: IIF(ISNULL(i_prior_pol_eff_date),TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),i_prior_pol_eff_date)\n\tIFF(\n\t    i_prior_pol_eff_date IS NULL, TO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),\n\t    i_prior_pol_eff_date\n\t) AS o_prior_pol_eff_date,\n\t-- *INF*: IIF(ISNULL(pol_eff_date),TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),pol_eff_date)\n\tIFF(\n\t    pol_eff_date IS NULL, TO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),\n\t    pol_eff_date\n\t) AS o_pol_eff_date,\n\t-- *INF*: IIF(ISNULL(pol_exp_date),TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),pol_exp_date)\n\tIFF(\n\t    pol_exp_date IS NULL, TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    pol_exp_date\n\t) AS o_pol_exp_date,\n\t-- *INF*: IIF(ISNULL(orig_incptn_date),TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS'),orig_incptn_date)\n\tIFF(\n\t    orig_incptn_date IS NULL, TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    orig_incptn_date\n\t) AS o_orig_incptn_date\n\tFROM EXP_Pass_Values\n\tLEFT JOIN LKP_AgencyRelationship\n\tON LKP_AgencyRelationship.EDWAgencyAKID = EXP_Pass_Values.EDWAgencyAKID\n\tLEFT JOIN LKP_BusinessClassDim\n\tON LKP_BusinessClassDim.BusinessClassDimId = EXP_Pass_Values.BusinessClassDimId\n\tLEFT JOIN LKP_PolicyCurrentStatusDim\n\tON LKP_PolicyCurrentStatusDim.EDWPolicyAKId = EXP_Pass_Values.edw_pol_ak_id\n\tLEFT JOIN LKP_SalesDivisionDim\n\tON LKP_SalesDivisionDim.SalesDivisionDimID = EXP_Pass_Values.SalesDivisionDimId\n\tLEFT JOIN LKP_StateDim\n\tON LKP_StateDim.StateDimID = EXP_Pass_Values.StateDimId\n\tLEFT JOIN LKP_UnderwritingDivisionDim\n\tON LKP_UnderwritingDivisionDim.UnderwritingDivisionDimID = EXP_Pass_Values.UnderwritingDivisionDimId\n\tLEFT JOIN LKP_PHYSICALSTATE LKP_PHYSICALSTATE_PhysicalStateAbbreviation\n\tON LKP_PHYSICALSTATE_PhysicalStateAbbreviation.StateAbbreviation = PhysicalStateAbbreviation\n\n\tLEFT JOIN LKP_PHYSICALSTATE LKP_PHYSICALSTATE_i_prim_agency_state_abbr\n\tON LKP_PHYSICALSTATE_i_prim_agency_state_abbr.StateAbbreviation = i_prim_agency_state_abbr\n\n),\nActuarialWorkersCompensationDividend AS (\n\tTRUNCATE TABLE ActuarialWorkersCompensationDividend;\n\tINSERT INTO ActuarialWorkersCompensationDividend\n\t(AuditId, DividendFactID, CreatedDate, ModifiedDate, EnterpriseGroupCode, EnterpriseGroupAbbreviation, StrategicProfitCenterCode, StrategicProfitCenterAbbreviation, LegalEntityCode, LegalEntityAbbreviation, PolicyOfferingCode, PolicyOfferingAbbreviation, PolicyOfferingDescription, ProductCode, ProductAbbreviation, ProductDescription, LineofBusinessCode, LineofBusinessAbbreviation, LineofBusinessDescription, AccountingProductCode, AccountingProductAbbreviation, AccountingProductDescription, RatingPlanCode, RatingPlanDescription, InsuranceSegmentCode, InsuranceSegmentDescription, ProgramCode, ProgramDescription, AssociationCode, AssociationDescription, IndustryRiskGradeCode, IndustryRiskGradeDescription, PolicyEffectiveYear, PolicyEffectiveQuarter, PolicyEffectiveMonthNumber, PolicyEffectiveMonthDescription, PolicyEffectiveDate, PolicyExpirationYear, PolicyExpirationQuarter, PolicyExpirationMonthNumber, PolicyExpirationMonthDescription, PolicyExpirationDate, PolicyCancellationYear, PolicyCancellationQuarter, PolicyCancellationMonth, PolicyCancellationMonthDescription, PolicyCancellationDate, PolicyCancellationReasonCode, PolicyCancellationReasonCodeDescription, PolicyOriginalInceptionDate, PolicyRenewalCode, PolicyRenewalDescription, PolicyStatusCode, PolicyStatusCodeDescription, AccountingYear, AccountingMonthQuarter, AccountingMonthNumber, AccountingMonthName, AccountingDate, RatingStateCode, RatingStateAbbreviation, RatingStateName, PolicyKey, PolicySymbol, PolicyNumber, PolicyVersion, PolicyIssueCode, PolicyIssueCodeDescription, PrimaryRatingStateCode, PrimaryRatingStateAbbreviation, PrimaryRatingStateDescription, PrimaryBusinessClassificationCode, PrimaryBusinessClassificationDescription, BusinessSegmentCode, BusinessSegmentDescription, StrategicBusinessGroupCode, StrategicBusinessGroupDescription, AgencyCode, AgencyDoingBusinessAsName, AgencyStateCode, AgencyStateAbbreviation, AgencyStateDescription, AgencyPhysicalAddressCity, AgencyZIPCode, ProducerCode, ProducerFullName, UnderwriterFullName, UnderwritingManagerName, UnderwritingRegionName, PrimaryAgencyCode, PrimaryAgencyDoingBusinessAsName, PrimaryAgencyStateCode, PrimaryAgencyStateAbbreviation, PrimaryAgencyStateDescription, PrimaryAgencyPhysicalAddressCity, PrimaryAgencyZIPCode, RegionalSalesManagerFullName, SalesTerritoryCode, CustomerNumber, FirstNamedInsured, SICCode, SICDescription, NAICSCode, NAICSDescription, CustomerCareIndicator, NewBusinessIndicator, PriorPolicyKey, PriorPolicyNumber, PriorPolicySymbol, PriorPolicyVersion, LastBookedDate, DividendPlan, DividendType, PolicyholderDividendPaid, PolicyholderDividendPayable, FederalEmployerIDNumber, PriorCarrier, PriorPolicyEffectiveDate)\n\tSELECT \n\tAUDITID, \n\tDividendFactId AS DIVIDENDFACTID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tENTERPRISEGROUPCODE, \n\tENTERPRISEGROUPABBREVIATION, \n\tSTRATEGICPROFITCENTERCODE, \n\tSTRATEGICPROFITCENTERABBREVIATION, \n\tInsuranceReferenceLegalEntityCode AS LEGALENTITYCODE, \n\tInsuranceReferenceLegalEntityAbbreviation AS LEGALENTITYABBREVIATION, \n\tPOLICYOFFERINGCODE, \n\tPOLICYOFFERINGABBREVIATION, \n\tPOLICYOFFERINGDESCRIPTION, \n\tPRODUCTCODE, \n\tPRODUCTABBREVIATION, \n\tPRODUCTDESCRIPTION, \n\tInsuranceReferenceLineOfBusinessCode AS LINEOFBUSINESSCODE, \n\tInsuranceReferenceLineOfBusinessAbbreviation AS LINEOFBUSINESSABBREVIATION, \n\tInsuranceReferenceLineOfBusinessDescription AS LINEOFBUSINESSDESCRIPTION, \n\tACCOUNTINGPRODUCTCODE, \n\tACCOUNTINGPRODUCTABBREVIATION, \n\tACCOUNTINGPRODUCTDESCRIPTION, \n\tRATINGPLANCODE, \n\tRATINGPLANDESCRIPTION, \n\tINSURANCESEGMENTCODE, \n\tINSURANCESEGMENTDESCRIPTION, \n\tPROGRAMCODE, \n\tPROGRAMDESCRIPTION, \n\tASSOCIATIONCODE, \n\tASSOCIATIONDESCRIPTION, \n\tindustry_risk_grade_code AS INDUSTRYRISKGRADECODE, \n\tindustry_risk_grade_code_descript AS INDUSTRYRISKGRADEDESCRIPTION, \n\to_pol_eff_yr AS POLICYEFFECTIVEYEAR, \n\to_pol_eff_qtr AS POLICYEFFECTIVEQUARTER, \n\to_pol_eff_month AS POLICYEFFECTIVEMONTHNUMBER, \n\to_pol_eff_month_descript AS POLICYEFFECTIVEMONTHDESCRIPTION, \n\to_pol_eff_date AS POLICYEFFECTIVEDATE, \n\to_pol_exp_yr AS POLICYEXPIRATIONYEAR, \n\to_pol_exp_qtr AS POLICYEXPIRATIONQUARTER, \n\to_pol_exp_month AS POLICYEXPIRATIONMONTHNUMBER, \n\to_pol_exp_month_descript AS POLICYEXPIRATIONMONTHDESCRIPTION, \n\to_pol_exp_date AS POLICYEXPIRATIONDATE, \n\to_pol_cancellation_yr AS POLICYCANCELLATIONYEAR, \n\to_pol_cancellation_qtr AS POLICYCANCELLATIONQUARTER, \n\to_pol_cancellation_month AS POLICYCANCELLATIONMONTH, \n\to_pol_cancellation_month_descript AS POLICYCANCELLATIONMONTHDESCRIPTION, \n\to_PolicyCancellationDate AS POLICYCANCELLATIONDATE, \n\tpol_cancellation_rsn_code AS POLICYCANCELLATIONREASONCODE, \n\tpol_cancellation_rsn_code_descript AS POLICYCANCELLATIONREASONCODEDESCRIPTION, \n\to_orig_incptn_date AS POLICYORIGINALINCEPTIONDATE, \n\trenl_code AS POLICYRENEWALCODE, \n\trenl_code_descript AS POLICYRENEWALDESCRIPTION, \n\to_pol_status_code AS POLICYSTATUSCODE, \n\to_pol_status_code_descript AS POLICYSTATUSCODEDESCRIPTION, \n\to_accounting_yr AS ACCOUNTINGYEAR, \n\to_accounting_qtr AS ACCOUNTINGMONTHQUARTER, \n\to_accounting_month AS ACCOUNTINGMONTHNUMBER, \n\to_accounting_month_descript AS ACCOUNTINGMONTHNAME, \n\to_accounting_date AS ACCOUNTINGDATE, \n\to_StateCode AS RATINGSTATECODE, \n\to_StateAbbreviation AS RATINGSTATEABBREVIATION, \n\to_StateDescription AS RATINGSTATENAME, \n\tpol_key AS POLICYKEY, \n\tpol_sym AS POLICYSYMBOL, \n\tpol_num AS POLICYNUMBER, \n\tpol_mod AS POLICYVERSION, \n\tpol_issue_code AS POLICYISSUECODE, \n\tpol_issue_code_descript AS POLICYISSUECODEDESCRIPTION, \n\tstate_of_domicile_code AS PRIMARYRATINGSTATECODE, \n\tstate_of_domicile_abbrev AS PRIMARYRATINGSTATEABBREVIATION, \n\tstate_of_domicile_code_descript AS PRIMARYRATINGSTATEDESCRIPTION, \n\tprim_bus_class_code AS PRIMARYBUSINESSCLASSIFICATIONCODE, \n\tprim_bus_class_code_descript AS PRIMARYBUSINESSCLASSIFICATIONDESCRIPTION, \n\to_BusinessSegmentCode AS BUSINESSSEGMENTCODE, \n\to_BusinessSegmentDescription AS BUSINESSSEGMENTDESCRIPTION, \n\to_StrategicBusinessGroupCode AS STRATEGICBUSINESSGROUPCODE, \n\to_StrategicBusinessGroupDescription AS STRATEGICBUSINESSGROUPDESCRIPTION, \n\tAGENCYCODE, \n\tAGENCYDOINGBUSINESSASNAME, \n\to_AgencyStateCode AS AGENCYSTATECODE, \n\tPhysicalStateAbbreviation AS AGENCYSTATEABBREVIATION, \n\to_AgencyStateDescription AS AGENCYSTATEDESCRIPTION, \n\tPhysicalCity AS AGENCYPHYSICALADDRESSCITY, \n\tPhysicalZipCode AS AGENCYZIPCODE, \n\tPRODUCERCODE, \n\tProducer_FullName AS PRODUCERFULLNAME, \n\to_UnderwriterDisplayName AS UNDERWRITERFULLNAME, \n\to_UnderwriterManagerDisplayName AS UNDERWRITINGMANAGERNAME, \n\to_UnderwritingRegionCodeDescription AS UNDERWRITINGREGIONNAME, \n\to_prim_agency_code AS PRIMARYAGENCYCODE, \n\to_prim_agency_doing_business_Name AS PRIMARYAGENCYDOINGBUSINESSASNAME, \n\to_PrimaryAgencyStateCode AS PRIMARYAGENCYSTATECODE, \n\to_prim_agency_state_abbr AS PRIMARYAGENCYSTATEABBREVIATION, \n\to_PrimaryAgencyStateDescription AS PRIMARYAGENCYSTATEDESCRIPTION, \n\to_prim_agency_city AS PRIMARYAGENCYPHYSICALADDRESSCITY, \n\to_prim_agency_zip_code AS PRIMARYAGENCYZIPCODE, \n\to_RegionalSalesManagerDisplayName AS REGIONALSALESMANAGERFULLNAME, \n\to_SalesTerritoryCode AS SALESTERRITORYCODE, \n\tcust_num AS CUSTOMERNUMBER, \n\tname AS FIRSTNAMEDINSURED, \n\tsic_code AS SICCODE, \n\tsic_code_descript AS SICDESCRIPTION, \n\tnaics_code AS NAICSCODE, \n\tnaics_code_descript AS NAICSDESCRIPTION, \n\tserv_center_support_code AS CUSTOMERCAREINDICATOR, \n\to_new_bus_indic AS NEWBUSINESSINDICATOR, \n\tprior_pol_key AS PRIORPOLICYKEY, \n\to_prior_pol_num AS PRIORPOLICYNUMBER, \n\to_prior_pol_sym AS PRIORPOLICYSYMBOL, \n\to_prior_pol_mod AS PRIORPOLICYVERSION, \n\to_Last_Booked_Date AS LASTBOOKEDDATE, \n\tDIVIDENDPLAN, \n\tDIVIDENDTYPE, \n\tDividendPaidAmount AS POLICYHOLDERDIVIDENDPAID, \n\tDividendPayableAmount AS POLICYHOLDERDIVIDENDPAYABLE, \n\tfed_tax_id AS FEDERALEMPLOYERIDNUMBER, \n\tRolloverPriorCarrier AS PRIORCARRIER, \n\to_prior_pol_eff_date AS PRIORPOLICYEFFECTIVEDATE\n\tFROM EXP_Get_Values\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PMINTEGRATIONSERVICENAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}