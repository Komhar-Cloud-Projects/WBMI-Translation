{
    "name": "s_m_POL_DW_LOAD_Reinsurance_Coverage_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_Reinsurance_Coverage_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_DCStatCodeStaging AS (\n\tSELECT\n\tValue,\n\tSessionId,\n\tType\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tSessionId,\n\t\t\tType\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging\n\t\tWHERE ObjectName='DC_Coverage' and Type in ('Class', 'Subline')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,Type ORDER BY Value) = 1\n),\nSQ_reinsurance_coverage_SRC AS (\n\tWITH Common AS\r\n\t( \r\n\tSELECT DCPOL.sessionid,\r\n\t       DCT.historyid,\r\n\t       DCPOL.Id,\r\n\t       DCPOL.lineofbusiness,\r\n\t       DCPOL.policynumber,\r\n\t       WBPOL.policyversion,\r\n\t       DCRI.type,\r\n\t       DCRI.aggregatelimit,\r\n\t       DCRI.occurrencelimit,\r\n\t       DCRI.percentloss,\r\n\t       DCRI.company,\r\n\t       DCRI.companynumber,\r\n\t       DCRI.effectivedate,\r\n\t       DCRI.expirationdate,\r\n\t       DCT.transactiondate,\r\n\t       WBL.locationnumber,\r\n\t       WBP.customernum\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.dclocationassociationstaging DCLA\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.wblocationstaging WBL\r\n\tON DCLA.SessionId=WBL.SessionId AND DCLA.LocationId=WBL.LocationId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.dcpolicystaging DCPOL\r\n\tON DCPOL.SessionId=WBL.SessionId AND LEN(DCPOL.PolicyNumber)=7\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.wbpolicystaging WBPOL\r\n\tON DCPOL.SessionId=WBPOL.SessionId AND DCPOL.PolicyId=WBPOL.PolicyId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.dcreinsurancestaging DCRI\r\n\tON DCPOL.SessionId=DCRI.SessionId AND DCPOL.PolicyId=DCRI.PolicyId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.dctransactionstaging DCT\r\n\tON DCPOL.SessionId=DCT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.wbpartystaging WBP\r\n\tON DCPOL.SessionId=WBP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.dcpartyassociationstaging DCPA\r\n\tON WBP.SessionId=DCPA.SessionId AND WBP.PartyId=DCPA.PartyId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.dclocationstaging DCL\r\n\tON DCPOL.SessionId=DCL.SessionId AND WBL.LocationId=DCL.LocationId\r\n\tWHERE  DCLA.locationassociationtype NOT IN ('Location', 'Account', 'Agency' )\r\n\tAND DCPA.partyassociationtype = 'Account'\r\n\tAND DCPOL.status <> 'Quote'\r\n\tAND DCL.description = 'Primary Location'\r\n\tAND DCT.State='committed' \r\n\tAND DCT.HistoryID =(SELECT MAX(HistoryID) FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTransactionStaging DCTR WHERE DCTR.SessionId=DCPOL.SessionId)\r\n\t)\r\n\t\r\n\tSELECT Common.sessionid,\r\n\t       Common.historyid,\r\n\t       Common.Id,\r\n\t       Common.lineofbusiness,\r\n\t       Common.policynumber,\r\n\t       Common.policyversion,\r\n\t       Common.type,\r\n\t       Common.aggregatelimit,\r\n\t       Common.occurrencelimit,\r\n\t       Common.percentloss,\r\n\t       Common.company,\r\n\t       Common.companynumber,\r\n\t       Common.effectivedate,\r\n\t       Common.expirationdate,\r\n\t       Common.transactiondate,\r\n\t       Common.locationnumber,\r\n\t       Common.customernum,\r\n\t       DCGLR.Type AS GLRisk_Type,\r\n\t       DCWCR.Description AS WCRisk_Desc\r\n\tFROM Common LEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCGLRiskStaging DCGLR\r\n\tON Common.SessionId=DCGLR.SessionId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCRiskStaging DCWCR\r\n\tON Common.SessionId=DCWCR.SessionId\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tSessionId AS i_SessionId,\n\tHistoryID AS i_HistoryID,\n\tId AS i_Id,\n\tLineOfBusiness AS i_LineOfBusiness,\n\tPolicyNumber AS i_PolicyNumber,\n\tPolicyVersion AS i_PolicyVersion,\n\tType AS i_Type,\n\tAggregateLimit AS i_AggregateLimit,\n\tOccurrenceLimit AS i_OccurrenceLimit,\n\tPercentLoss AS i_PercentLoss,\n\tCompany AS i_Company,\n\tCompanyNumber AS i_CompanyNumber,\n\tEffectiveDate AS i_EffectiveDate,\n\tExpirationDate AS i_ExpirationDate,\n\tTransactionDate AS i_TransactionDate,\n\tLocationNumber AS i_LocationNumber,\n\tCustomerNum,\n\tGLRisk_Type AS i_GLRisk_Type,\n\tWCRisk_Desc AS i_WCRisk_Desc,\n\t-- *INF*: DECODE(TRUE, i_LineOfBusiness='GeneralLiability', i_GLRisk_Type,\r\n\t-- i_LineOfBusiness='WorkersCompensation', i_WCRisk_Desc,\r\n\t-- 'TBD')\n\tDECODE(\n\t    TRUE,\n\t    i_LineOfBusiness = 'GeneralLiability', i_GLRisk_Type,\n\t    i_LineOfBusiness = 'WorkersCompensation', i_WCRisk_Desc,\n\t    'TBD'\n\t) AS v_reins_risk_unit_grp,\n\t-- *INF*: IIF(i_LineOfBusiness='GeneralLiability' or i_LineOfBusiness='WorkersCompensation', :LKP.LKP_DCSTATCODESTAGING(i_SessionId,'Class'),'TBD')\n\tIFF(\n\t    i_LineOfBusiness = 'GeneralLiability' or i_LineOfBusiness = 'WorkersCompensation',\n\t    LKP_DCSTATCODESTAGING_i_SessionId_Class.Value,\n\t    'TBD'\n\t) AS v_reins_risk_unit,\n\t-- *INF*: IIF(ISNULL(CustomerNum) or IS_SPACES(CustomerNum) or LENGTH(CustomerNum)=0,'N/A',LTRIM(RTRIM(CustomerNum)))\n\tIFF(\n\t    CustomerNum IS NULL\n\t    or LENGTH(CustomerNum)>0\n\t    and TRIM(CustomerNum)=''\n\t    or LENGTH(CustomerNum) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(CustomerNum))\n\t) AS o_CustomerNumber,\n\t-- *INF*: IIF(ISNULL(i_Id) or IS_SPACES(i_Id) or LENGTH(i_Id)=0,'N/A',LTRIM(RTRIM(i_Id)))\n\tIFF(\n\t    i_Id IS NULL or LENGTH(i_Id)>0 AND TRIM(i_Id)='' or LENGTH(i_Id) = 0, 'N/A',\n\t    LTRIM(RTRIM(i_Id))\n\t) AS o_Id,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_PolicyNumber)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_PolicyNumber) AS o_PolicyNumber,\n\t-- *INF*: IIF(ISNULL(i_PolicyVersion),'00',LPAD(TO_CHAR(i_PolicyVersion),2,'0'))\n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS o_PolicyVersion,\n\t-- *INF*: IIF(ISNULL(i_LineOfBusiness) or IS_SPACES(i_LineOfBusiness) or LENGTH(i_LineOfBusiness)=0,'N/A',LTRIM(RTRIM(i_LineOfBusiness)))\n\tIFF(\n\t    i_LineOfBusiness IS NULL\n\t    or LENGTH(i_LineOfBusiness)>0\n\t    and TRIM(i_LineOfBusiness)=''\n\t    or LENGTH(i_LineOfBusiness) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_LineOfBusiness))\n\t) AS o_LineOfBusiness,\n\t-- *INF*: IIF(ISNULL(i_CompanyNumber) or IS_SPACES(i_CompanyNumber) or LENGTH(i_CompanyNumber)=0,'N/A',LTRIM(RTRIM(i_CompanyNumber)))\n\tIFF(\n\t    i_CompanyNumber IS NULL\n\t    or LENGTH(i_CompanyNumber)>0\n\t    and TRIM(i_CompanyNumber)=''\n\t    or LENGTH(i_CompanyNumber) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(i_CompanyNumber))\n\t) AS o_CompanyNumber,\n\t-- *INF*: IIF(ISNULL(i_EffectiveDate),TO_DATE('18000101','YYYYMMDD'),i_EffectiveDate)\n\tIFF(i_EffectiveDate IS NULL, TO_TIMESTAMP('18000101', 'YYYYMMDD'), i_EffectiveDate) AS o_EffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_TransactionDate),TO_DATE('21001231235959','YYYYMMDDHH24MISS'),i_TransactionDate)\n\tIFF(\n\t    i_TransactionDate IS NULL, TO_TIMESTAMP('21001231235959', 'YYYYMMDDHH24MISS'),\n\t    i_TransactionDate\n\t) AS o_TransactionDate,\n\t-- *INF*: IIF(ISNULL(i_LocationNumber) or IS_SPACES(i_LocationNumber) or LENGTH(i_LocationNumber)=0,'0000',LPAD(LTRIM(RTRIM(i_LocationNumber)),4,'0'))\n\tIFF(\n\t    i_LocationNumber IS NULL\n\t    or LENGTH(i_LocationNumber)>0\n\t    and TRIM(i_LocationNumber)=''\n\t    or LENGTH(i_LocationNumber) = 0,\n\t    '0000',\n\t    LPAD(LTRIM(RTRIM(i_LocationNumber)), 4, '0')\n\t) AS o_LocationNumber,\n\t'N/A' AS o_reins_sub_loc_unit_num,\n\t-- *INF*: IIF(ISNULL(v_reins_risk_unit_grp),'N/A',v_reins_risk_unit_grp)\n\tIFF(v_reins_risk_unit_grp IS NULL, 'N/A', v_reins_risk_unit_grp) AS o_reins_risk_unit_grp,\n\t'N/A' AS o_reins_risk_unit_grp_seq_num,\n\t-- *INF*: IIF(ISNULL(v_reins_risk_unit),'N/A',v_reins_risk_unit)\n\tIFF(v_reins_risk_unit IS NULL, 'N/A', v_reins_risk_unit) AS o_reins_risk_unit,\n\t'N/A' AS o_reins_risk_unit_seq_num,\n\t'N/A' AS o_reins_section_code,\n\ti_Type AS o_Type,\n\ti_AggregateLimit AS o_AggregateLimit,\n\ti_OccurrenceLimit AS o_OccurrenceLimit,\n\ti_PercentLoss AS o_PercentLoss,\n\ti_ExpirationDate AS o_ExpirationDate\n\tFROM SQ_reinsurance_coverage_SRC\n\tLEFT JOIN LKP_DCSTATCODESTAGING LKP_DCSTATCODESTAGING_i_SessionId_Class\n\tON LKP_DCSTATCODESTAGING_i_SessionId_Class.SessionId = i_SessionId\n\tAND LKP_DCSTATCODESTAGING_i_SessionId_Class.Type = 'Class'\n\n\tGROUP BY o_Id, o_PolicyNumber, o_PolicyVersion, o_LineOfBusiness, o_CompanyNumber, o_EffectiveDate, o_LocationNumber, o_reins_sub_loc_unit_num, o_reins_risk_unit_grp, o_reins_risk_unit_grp_seq_num, o_reins_risk_unit, o_reins_risk_unit_seq_num, o_reins_section_code\n),\nEXP_Values AS (\n\tSELECT\n\to_CustomerNumber AS i_CustomerNumber,\n\to_Id AS i_Id,\n\to_PolicyNumber AS i_PolicyNumber,\n\to_PolicyVersion AS i_PolicyVersion,\n\to_LineOfBusiness AS i_LineOfBusiness,\n\to_CompanyNumber AS i_CompanyNumber,\n\to_EffectiveDate AS i_EffectiveDate,\n\to_TransactionDate AS i_TransactionDate,\n\to_LocationNumber AS i_LocationNumber,\n\to_reins_sub_loc_unit_num AS i_reins_sub_loc_unit_num,\n\to_reins_risk_unit_grp AS i_reins_risk_unit_grp,\n\to_reins_risk_unit_grp_seq_num AS i_reins_risk_unit_grp_seq_num,\n\to_reins_risk_unit AS i_reins_risk_unit,\n\to_reins_risk_unit_seq_num AS i_reins_risk_unit_seq_num,\n\to_reins_section_code AS i_reins_section_code,\n\to_Type AS i_Type,\n\to_AggregateLimit AS i_AggregateLimit,\n\to_OccurrenceLimit AS i_OccurrenceLimit,\n\to_PercentLoss AS i_PercentLoss,\n\to_ExpirationDate AS i_ExpirationDate,\n\t-- *INF*: i_PolicyNumber||i_PolicyVersion\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --i_CustomerNumber||i_PolicyNumber||i_PolicyVersion\n\ti_PolicyNumber || i_PolicyVersion AS o_pol_key,\n\ti_LineOfBusiness AS o_reins_ins_line,\n\ti_LocationNumber AS o_reins_loc_unit_num,\n\ti_reins_sub_loc_unit_num AS o_reins_sub_loc_unit_num,\n\ti_reins_risk_unit_grp AS o_reins_risk_unit_grp,\n\ti_reins_risk_unit_grp_seq_num AS o_reins_risk_unit_grp_seq_num,\n\ti_reins_risk_unit AS o_reins_risk_unit,\n\ti_reins_risk_unit_seq_num AS o_reins_risk_unit_seq_num,\n\ti_reins_section_code AS o_reins_section_code,\n\ti_CompanyNumber AS o_reins_co_num,\n\ti_EffectiveDate AS o_reins_eff_date,\n\t-- *INF*: IIF(ISNULL(i_ExpirationDate),TO_DATE('21000101235959','YYYYMMDDHH24MISS'),i_ExpirationDate)\n\tIFF(\n\t    i_ExpirationDate IS NULL, TO_TIMESTAMP('21000101235959', 'YYYYMMDDHH24MISS'),\n\t    i_ExpirationDate\n\t) AS o_reins_exp_date,\n\t-- *INF*: TO_DATE('01011800', 'MMDDYYYY')\n\tTO_TIMESTAMP('01011800', 'MMDDYYYY') AS o_reins_enter_date,\n\t-- *INF*: IIF(ISNULL(i_Type) or IS_SPACES(i_Type) or LENGTH(i_Type)=0,'N/A',LTRIM(RTRIM(i_Type)))\n\tIFF(\n\t    i_Type IS NULL or LENGTH(i_Type)>0 AND TRIM(i_Type)='' or LENGTH(i_Type) = 0, 'N/A',\n\t    LTRIM(RTRIM(i_Type))\n\t) AS o_reins_type,\n\t-1 AS o_reins_prcnt_prem_ceded,\n\t-- *INF*: IIF(ISNULL(i_PercentLoss),0,i_PercentLoss)\n\tIFF(i_PercentLoss IS NULL, 0, i_PercentLoss) AS o_reins_prcnt_loss_ceded,\n\t0 AS o_reins_prcnt_facultative_commssn,\n\t-1 AS o_eins_excess_amt,\n\t-- *INF*: IIF(ISNULL(i_OccurrenceLimit),0,i_OccurrenceLimit)\n\tIFF(i_OccurrenceLimit IS NULL, 0, i_OccurrenceLimit) AS o_reins_occurrence_lmt,\n\t-- *INF*: IIF(ISNULL(i_AggregateLimit),0,i_AggregateLimit)\n\tIFF(i_AggregateLimit IS NULL, 0, i_AggregateLimit) AS o_reins_agg_lmt\n\tFROM AGG_RemoveDuplicates\n),\nLKP_SupReinsuranceMaster AS (\n\tSELECT\n\tSupReinsuranceMasterId,\n\tReinsuranceMasterReinsuranceCompanyName,\n\tReinsuranceMasterReinsuranceType,\n\tReinsuranceMasterReinsuranceCompanyNumber\n\tFROM (\n\t\tSELECT \n\t\t\tSupReinsuranceMasterId,\n\t\t\tReinsuranceMasterReinsuranceCompanyName,\n\t\t\tReinsuranceMasterReinsuranceType,\n\t\t\tReinsuranceMasterReinsuranceCompanyNumber\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupReinsuranceMaster\n\t\tWHERE CurrentSnapshotFlag='1' and SourceSystemId='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ReinsuranceMasterReinsuranceCompanyNumber ORDER BY SupReinsuranceMasterId) = 1\n),\nLKP_policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nLKP_sup_insurance_line AS (\n\tSELECT\n\tsup_ins_line_id,\n\tins_line_descript\n\tFROM (\n\t\tSELECT \n\t\t\tsup_ins_line_id,\n\t\t\tins_line_descript\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_descript ORDER BY sup_ins_line_id) = 1\n),\nLKP_sup_risk_unit AS (\n\tSELECT\n\tsup_risk_unit_id,\n\ti_reins_unit,\n\trisk_unit_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_risk_unit_id,\n\t\t\ti_reins_unit,\n\t\t\trisk_unit_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_code ORDER BY sup_risk_unit_id) = 1\n),\nLKP_sup_risk_unit_group AS (\n\tSELECT\n\tsup_risk_unit_grp_id,\n\ti_reins_risk_unit_grp,\n\trisk_unit_grp_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_risk_unit_grp_id,\n\t\t\ti_reins_risk_unit_grp,\n\t\t\trisk_unit_grp_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit_group\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_grp_code ORDER BY sup_risk_unit_grp_id) = 1\n),\nEXP_LKP_Values AS (\n\tSELECT\n\tLKP_policy.pol_ak_id AS i_pol_key_ak_id,\n\tLKP_sup_insurance_line.sup_ins_line_id AS i_sup_ins_line_id,\n\tLKP_sup_risk_unit_group.sup_risk_unit_grp_id AS i_sup_risk_unit_grp_id,\n\tLKP_sup_risk_unit.sup_risk_unit_id AS i_sup_risk_unit_id,\n\tLKP_SupReinsuranceMaster.SupReinsuranceMasterId AS i_SupReinsuranceMasterId,\n\tLKP_SupReinsuranceMaster.ReinsuranceMasterReinsuranceCompanyName AS i_reins_co_name,\n\tLKP_SupReinsuranceMaster.ReinsuranceMasterReinsuranceType,\n\tEXP_Values.o_reins_ins_line AS i_reins_ins_line,\n\tEXP_Values.o_reins_loc_unit_num AS i_reins_loc_unit_num,\n\tEXP_Values.o_reins_sub_loc_unit_num AS i_reins_sub_loc_unit_num,\n\tEXP_Values.o_reins_risk_unit_grp AS i_reins_risk_unit_grp,\n\tEXP_Values.o_reins_risk_unit_grp_seq_num AS i_reins_risk_unit_grp_seq_num,\n\tEXP_Values.o_reins_risk_unit AS i_reins_risk_unit,\n\tEXP_Values.o_reins_risk_unit_seq_num AS i_reins_risk_unit_seq_num,\n\tEXP_Values.o_reins_section_code AS i_reins_section_code,\n\tEXP_Values.o_reins_co_num AS i_reins_co_num,\n\tEXP_Values.o_reins_eff_date AS i_reins_eff_date,\n\tEXP_Values.o_reins_exp_date AS i_reins_exp_date,\n\tEXP_Values.o_reins_enter_date AS i_reins_enter_date,\n\tEXP_Values.o_reins_type AS i_reins_type,\n\tEXP_Values.o_reins_prcnt_prem_ceded AS i_reins_prcnt_prem_ceded,\n\tEXP_Values.o_reins_prcnt_loss_ceded AS i_reins_prcnt_loss_ceded,\n\tEXP_Values.o_reins_prcnt_facultative_commssn AS i_reins_prcnt_facultative_commssn,\n\tEXP_Values.o_eins_excess_amt AS i_eins_excess_amt,\n\tEXP_Values.o_reins_occurrence_lmt AS i_reins_occurrence_lmt,\n\tEXP_Values.o_reins_agg_lmt AS i_reins_agg_lmt,\n\ti_pol_key_ak_id AS o_pol_key_ak_id,\n\ti_reins_ins_line AS o_reins_ins_line,\n\ti_reins_loc_unit_num AS o_reins_loc_unit_num,\n\ti_reins_sub_loc_unit_num AS o_reins_sub_loc_unit_num,\n\ti_reins_risk_unit_grp AS o_reins_risk_unit_grp,\n\ti_reins_risk_unit_grp_seq_num AS o_reins_risk_unit_grp_seq_num,\n\ti_reins_risk_unit AS o_reins_risk_unit,\n\ti_reins_risk_unit_seq_num AS o_reins_risk_unit_seq_num,\n\ti_reins_section_code AS o_reins_section_code,\n\ti_reins_co_num AS o_reins_co_num,\n\t-- *INF*: IIF(ISNULL(i_reins_co_name),'N/A',i_reins_co_name)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(ISNULL(i_reins_co_name),'N/A',i_reins_co_name)\n\tIFF(i_reins_co_name IS NULL, 'N/A', i_reins_co_name) AS o_reins_co_name,\n\ti_reins_eff_date AS o_reins_eff_date,\n\ti_reins_exp_date AS o_reins_exp_date,\n\ti_reins_enter_date AS o_reins_enter_date,\n\ti_reins_type AS o_reins_type,\n\ti_reins_prcnt_prem_ceded AS o_reins_prcnt_prem_ceded,\n\ti_reins_prcnt_loss_ceded AS o_reins_prcnt_loss_ceded,\n\ti_reins_prcnt_facultative_commssn AS o_reins_prcnt_facultative_commssn,\n\ti_eins_excess_amt AS o_eins_excess_amt,\n\ti_reins_occurrence_lmt AS o_reins_occurrence_lmt,\n\ti_reins_agg_lmt AS o_reins_agg_lmt,\n\t-- *INF*: IIF(ISNULL(i_sup_ins_line_id),-1,i_sup_ins_line_id)\n\tIFF(i_sup_ins_line_id IS NULL, - 1, i_sup_ins_line_id) AS o_sup_ins_line_id,\n\t-- *INF*: IIF(ISNULL(i_sup_risk_unit_grp_id),-1,i_sup_risk_unit_grp_id)\n\tIFF(i_sup_risk_unit_grp_id IS NULL, - 1, i_sup_risk_unit_grp_id) AS o_sup_risk_unit_grp_id,\n\t-- *INF*: IIF(ISNULL(i_sup_risk_unit_id),-1,i_sup_risk_unit_id)\n\tIFF(i_sup_risk_unit_id IS NULL, - 1, i_sup_risk_unit_id) AS o_sup_risk_unit_id,\n\t-- *INF*: IIF(ISNULL(i_SupReinsuranceMasterId),-1,i_SupReinsuranceMasterId)\n\tIFF(i_SupReinsuranceMasterId IS NULL, - 1, i_SupReinsuranceMasterId) AS o_SupReinsuranceMasterID,\n\t-- *INF*: DECODE(ReinsuranceMasterReinsuranceType,\r\n\t-- '1', 'In House',\r\n\t-- '2', 'Facultative',\r\n\t-- '3', 'Treaty','N/A')\n\tDECODE(\n\t    ReinsuranceMasterReinsuranceType,\n\t    '1', 'In House',\n\t    '2', 'Facultative',\n\t    '3', 'Treaty',\n\t    'N/A'\n\t) AS o_ReinsuranceMethod\n\tFROM EXP_Values\n\tLEFT JOIN LKP_SupReinsuranceMaster\n\tON LKP_SupReinsuranceMaster.ReinsuranceMasterReinsuranceCompanyNumber = EXP_Values.o_reins_co_num\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_Values.o_pol_key\n\tLEFT JOIN LKP_sup_insurance_line\n\tON LKP_sup_insurance_line.ins_line_descript = EXP_Values.o_reins_ins_line\n\tLEFT JOIN LKP_sup_risk_unit\n\tON LKP_sup_risk_unit.risk_unit_code = EXP_Values.o_reins_risk_unit\n\tLEFT JOIN LKP_sup_risk_unit_group\n\tON LKP_sup_risk_unit_group.risk_unit_grp_code = EXP_Values.o_reins_risk_unit_grp\n),\nLKP_reinsurance_coverage AS (\n\tSELECT\n\treins_cov_id,\n\treins_co_name,\n\treins_exp_date,\n\treins_type,\n\treins_prcnt_prem_ceded,\n\treins_prcnt_loss_ceded,\n\treins_prcnt_facultative_commssn,\n\treins_excess_amt,\n\treins_occurrence_lmt,\n\treins_agg_lmt,\n\treins_cov_ak_id,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\treins_co_num,\n\treins_eff_date,\n\treins_enter_date\n\tFROM (\n\t\tSELECT \n\t\t\treins_cov_id,\n\t\t\treins_co_name,\n\t\t\treins_exp_date,\n\t\t\treins_type,\n\t\t\treins_prcnt_prem_ceded,\n\t\t\treins_prcnt_loss_ceded,\n\t\t\treins_prcnt_facultative_commssn,\n\t\t\treins_excess_amt,\n\t\t\treins_occurrence_lmt,\n\t\t\treins_agg_lmt,\n\t\t\treins_cov_ak_id,\n\t\t\tpol_ak_id,\n\t\t\treins_ins_line,\n\t\t\treins_loc_unit_num,\n\t\t\treins_sub_loc_unit_num,\n\t\t\treins_risk_unit_grp,\n\t\t\treins_risk_unit_grp_seq_num,\n\t\t\treins_risk_unit,\n\t\t\treins_risk_unit_seq_num,\n\t\t\treins_section_code,\n\t\t\treins_co_num,\n\t\t\treins_eff_date,\n\t\t\treins_enter_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,reins_ins_line,reins_loc_unit_num,reins_sub_loc_unit_num,reins_risk_unit_grp,reins_risk_unit_grp_seq_num,reins_risk_unit,reins_risk_unit_seq_num,reins_section_code,reins_co_num,reins_eff_date,reins_enter_date ORDER BY reins_cov_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_reinsurance_coverage.reins_cov_id AS i_reins_cov_id,\n\tLKP_reinsurance_coverage.reins_co_name AS i_reins_co_name,\n\tLKP_reinsurance_coverage.reins_exp_date AS i_reins_exp_date,\n\tLKP_reinsurance_coverage.reins_type AS i_reins_type,\n\tLKP_reinsurance_coverage.reins_prcnt_prem_ceded AS i_reins_prcnt_prem_ceded,\n\tLKP_reinsurance_coverage.reins_prcnt_loss_ceded AS i_reins_prcnt_loss_ceded,\n\tLKP_reinsurance_coverage.reins_prcnt_facultative_commssn AS i_reins_prcnt_facultative_commssn,\n\tLKP_reinsurance_coverage.reins_excess_amt AS i_reins_excess_amt,\n\tLKP_reinsurance_coverage.reins_occurrence_lmt AS i_reins_occurrence_lmt,\n\tLKP_reinsurance_coverage.reins_agg_lmt AS i_reins_agg_lmt,\n\tLKP_reinsurance_coverage.reins_cov_ak_id,\n\tEXP_LKP_Values.o_pol_key_ak_id AS pol_ak_id,\n\tEXP_LKP_Values.o_reins_ins_line AS reins_ins_line,\n\tEXP_LKP_Values.o_reins_loc_unit_num AS reins_loc_unit_num,\n\tEXP_LKP_Values.o_reins_sub_loc_unit_num AS reins_sub_loc_unit_num,\n\tEXP_LKP_Values.o_reins_risk_unit_grp AS reins_risk_unit_grp,\n\tEXP_LKP_Values.o_reins_risk_unit_grp_seq_num AS reins_risk_unit_grp_seq_num,\n\tEXP_LKP_Values.o_reins_risk_unit AS reins_risk_unit,\n\tEXP_LKP_Values.o_reins_risk_unit_seq_num AS reins_risk_unit_seq_num,\n\tEXP_LKP_Values.o_reins_section_code AS reins_section_code,\n\tEXP_LKP_Values.o_reins_co_num AS reins_co_num,\n\tEXP_LKP_Values.o_reins_co_name AS reins_co_name,\n\tEXP_LKP_Values.o_reins_eff_date AS reins_eff_date,\n\tEXP_LKP_Values.o_reins_exp_date AS reins_exp_date,\n\tEXP_LKP_Values.o_reins_enter_date AS reins_enter_date,\n\tEXP_LKP_Values.o_reins_type AS reins_type,\n\tEXP_LKP_Values.o_reins_prcnt_prem_ceded AS reins_prcnt_prem_ceded,\n\tEXP_LKP_Values.o_reins_prcnt_loss_ceded AS reins_prcnt_loss_ceded,\n\tEXP_LKP_Values.o_reins_prcnt_facultative_commssn AS reins_prcnt_facultative_commssn,\n\tEXP_LKP_Values.o_eins_excess_amt AS reins_excess_amt,\n\tEXP_LKP_Values.o_reins_occurrence_lmt AS reins_occurrence_lmt,\n\tEXP_LKP_Values.o_reins_agg_lmt AS reins_agg_lmt,\n\tEXP_LKP_Values.o_sup_ins_line_id AS sup_ins_line_id,\n\tEXP_LKP_Values.o_sup_risk_unit_grp_id AS sup_risk_unit_grp_id,\n\tEXP_LKP_Values.o_sup_risk_unit_id AS sup_risk_unit_id,\n\t-- *INF*: IIF(ISNULL(i_reins_cov_id),'NEW',\r\n\t-- \tIIF (\r\n\t-- \tLTRIM(RTRIM(i_reins_co_name)) <> LTRIM(RTRIM(reins_co_name)) or\r\n\t-- \t(i_reins_exp_date <> reins_exp_date) or\r\n\t-- \t(LTRIM(RTRIM(i_reins_type))  <> LTRIM(RTRIM(reins_type))) or\r\n\t-- \ti_reins_prcnt_prem_ceded <> reins_prcnt_prem_ceded or\r\n\t-- \ti_reins_prcnt_loss_ceded <> reins_prcnt_loss_ceded or\r\n\t-- \ti_reins_prcnt_facultative_commssn <> reins_prcnt_facultative_commssn or\r\n\t-- \ti_reins_excess_amt <> reins_excess_amt or\r\n\t-- \ti_reins_occurrence_lmt <> reins_occurrence_lmt or\r\n\t-- \ti_reins_agg_lmt <> reins_agg_lmt\r\n\t--   \t,'UPDATE'\r\n\t-- \t,'NOCHANGE'))\n\tIFF(\n\t    i_reins_cov_id IS NULL, 'NEW',\n\t    IFF(\n\t        LTRIM(RTRIM(i_reins_co_name)) <> LTRIM(RTRIM(reins_co_name))\n\t        or (i_reins_exp_date <> reins_exp_date)\n\t        or (LTRIM(RTRIM(i_reins_type)) <> LTRIM(RTRIM(reins_type)))\n\t        or i_reins_prcnt_prem_ceded <> reins_prcnt_prem_ceded\n\t        or i_reins_prcnt_loss_ceded <> reins_prcnt_loss_ceded\n\t        or i_reins_prcnt_facultative_commssn <> reins_prcnt_facultative_commssn\n\t        or i_reins_excess_amt <> reins_excess_amt\n\t        or i_reins_occurrence_lmt <> reins_occurrence_lmt\n\t        or i_reins_agg_lmt <> reins_agg_lmt,\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS Changed_Flag,\n\tEXP_LKP_Values.o_ReinsuranceMethod\n\tFROM EXP_LKP_Values\n\tLEFT JOIN LKP_reinsurance_coverage\n\tON LKP_reinsurance_coverage.pol_ak_id = EXP_LKP_Values.o_pol_key_ak_id AND LKP_reinsurance_coverage.reins_ins_line = EXP_LKP_Values.o_reins_ins_line AND LKP_reinsurance_coverage.reins_loc_unit_num = EXP_LKP_Values.o_reins_loc_unit_num AND LKP_reinsurance_coverage.reins_sub_loc_unit_num = EXP_LKP_Values.o_reins_sub_loc_unit_num AND LKP_reinsurance_coverage.reins_risk_unit_grp = EXP_LKP_Values.o_reins_risk_unit_grp AND LKP_reinsurance_coverage.reins_risk_unit_grp_seq_num = EXP_LKP_Values.o_reins_risk_unit_grp_seq_num AND LKP_reinsurance_coverage.reins_risk_unit = EXP_LKP_Values.o_reins_risk_unit AND LKP_reinsurance_coverage.reins_risk_unit_seq_num = EXP_LKP_Values.o_reins_risk_unit_seq_num AND LKP_reinsurance_coverage.reins_section_code = EXP_LKP_Values.o_reins_section_code AND LKP_reinsurance_coverage.reins_co_num = EXP_LKP_Values.o_reins_co_num AND LKP_reinsurance_coverage.reins_eff_date = EXP_LKP_Values.o_reins_eff_date AND LKP_reinsurance_coverage.reins_enter_date = EXP_LKP_Values.o_reins_enter_date\n),\nFIL_New_or_Changed AS (\n\tSELECT\n\treins_cov_ak_id, \n\tpol_ak_id, \n\treins_ins_line, \n\treins_loc_unit_num, \n\treins_sub_loc_unit_num, \n\treins_risk_unit_grp, \n\treins_risk_unit_grp_seq_num, \n\treins_risk_unit, \n\treins_risk_unit_seq_num, \n\treins_section_code, \n\treins_co_num, \n\treins_co_name, \n\treins_eff_date, \n\treins_exp_date, \n\treins_enter_date, \n\treins_type, \n\treins_prcnt_prem_ceded, \n\treins_prcnt_loss_ceded, \n\treins_prcnt_facultative_commssn, \n\treins_excess_amt, \n\treins_occurrence_lmt, \n\treins_agg_lmt, \n\tsup_ins_line_id, \n\tsup_risk_unit_grp_id, \n\tsup_risk_unit_id, \n\tChanged_Flag, \n\to_ReinsuranceMethod\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_Reins_Cov_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Reins_Cov_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tSEQ_Reins_Cov_AK_ID.NEXTVAL AS i_NEXTVAL,\n\treins_cov_ak_id AS i_reins_cov_ak_id,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\treins_co_num,\n\treins_co_name,\n\treins_eff_date,\n\treins_exp_date,\n\treins_enter_date,\n\treins_type,\n\treins_prcnt_prem_ceded,\n\treins_prcnt_loss_ceded,\n\treins_prcnt_facultative_commssn,\n\treins_excess_amt,\n\treins_occurrence_lmt,\n\treins_agg_lmt,\n\tsup_ins_line_id,\n\tsup_risk_unit_grp_id,\n\tsup_risk_unit_id,\n\tChanged_Flag,\n\t1 AS Crrnt_Snpsht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(Changed_Flag='NEW', TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), SYSDATE)\n\tIFF(\n\t    Changed_Flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date,\n\t'0' AS logical_flag,\n\t-- *INF*: IIF(Changed_Flag='NEW',\r\n\t-- i_NEXTVAL,\r\n\t-- i_reins_cov_ak_id)\n\tIFF(Changed_Flag = 'NEW', i_NEXTVAL, i_reins_cov_ak_id) AS o_reins_cov_ak_id,\n\to_ReinsuranceMethod\n\tFROM FIL_New_or_Changed\n),\nTGT_reinsurance_coverage_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, logical_flag, reins_cov_ak_id, pol_ak_id, reins_ins_line, reins_loc_unit_num, reins_sub_loc_unit_num, reins_risk_unit_grp, reins_risk_unit_grp_seq_num, reins_risk_unit, reins_risk_unit_seq_num, reins_section_code, reins_co_num, reins_co_name, reins_eff_date, reins_exp_date, reins_enter_date, reins_type, reins_prcnt_prem_ceded, reins_prcnt_loss_ceded, reins_prcnt_facultative_commssn, reins_excess_amt, reins_occurrence_lmt, reins_agg_lmt, SupInsuranceLineId, SupRiskUnitId, SupRiskUnitGroupId, ReinsuranceMethod)\n\tSELECT \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tLOGICAL_FLAG, \n\to_reins_cov_ak_id AS REINS_COV_AK_ID, \n\tPOL_AK_ID, \n\tREINS_INS_LINE, \n\tREINS_LOC_UNIT_NUM, \n\tREINS_SUB_LOC_UNIT_NUM, \n\tREINS_RISK_UNIT_GRP, \n\tREINS_RISK_UNIT_GRP_SEQ_NUM, \n\tREINS_RISK_UNIT, \n\tREINS_RISK_UNIT_SEQ_NUM, \n\tREINS_SECTION_CODE, \n\tREINS_CO_NUM, \n\tREINS_CO_NAME, \n\tREINS_EFF_DATE, \n\tREINS_EXP_DATE, \n\tREINS_ENTER_DATE, \n\tREINS_TYPE, \n\tREINS_PRCNT_PREM_CEDED, \n\tREINS_PRCNT_LOSS_CEDED, \n\tREINS_PRCNT_FACULTATIVE_COMMSSN, \n\tREINS_EXCESS_AMT, \n\tREINS_OCCURRENCE_LMT, \n\tREINS_AGG_LMT, \n\tsup_ins_line_id AS SUPINSURANCELINEID, \n\tsup_risk_unit_id AS SUPRISKUNITID, \n\tsup_risk_unit_grp_id AS SUPRISKUNITGROUPID, \n\to_ReinsuranceMethod AS REINSURANCEMETHOD\n\tFROM EXP_Determine_AK\n),\nSQ_reinsurance_coverage AS (\n\tSELECT \r\n\t\t A.reins_cov_id,\r\n\t       A.eff_from_date,\r\n\t       A.eff_to_date,\r\n\t\tA.reins_cov_ak_id\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t      AND a.reins_cov_ak_id = b.reins_cov_ak_id\r\n\t      AND b.source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tGROUP BY b.reins_cov_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.reins_cov_ak_id, a.eff_from_date desc\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\treins_cov_id AS i_reins_cov_id,\n\teff_from_date AS i_eff_from_date,\n\teff_to_date AS i_orig_eff_to_date,\n\treins_cov_ak_id AS i_reins_cov_ak_id,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- i_reins_cov_ak_id=v_PREV_ROW_reins_cov_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1)\r\n\t-- ,i_orig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    i_reins_cov_ak_id = v_PREV_ROW_reins_cov_ak_id, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    i_orig_eff_to_date\n\t) AS v_eff_to_date,\n\ti_reins_cov_ak_id AS v_PREV_ROW_reins_cov_ak_id,\n\ti_eff_from_date AS v_PREV_ROW_eff_from_date,\n\ti_orig_eff_to_date AS o_orig_eff_to_date,\n\ti_reins_cov_id AS o_reins_cov_id,\n\t0 AS o_crrnt_snapshot_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tsysdate AS o_modified_date\n\tFROM SQ_reinsurance_coverage\n),\nFIL_Expire_Rows AS (\n\tSELECT\n\to_orig_eff_to_date AS i_orig_eff_to_date, \n\to_reins_cov_id AS reins_cov_id, \n\to_crrnt_snapshot_flag AS crrnt_snapshot_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Expire_Rows\n\tWHERE i_orig_eff_to_date != eff_to_date\n),\nUPD_reinsurance_coverage AS (\n\tSELECT\n\treins_cov_id, \n\tcrrnt_snapshot_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_Expire_Rows\n),\nTGT_reinsurance_coverage_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage AS T\n\tUSING UPD_reinsurance_coverage AS S\n\tON T.reins_cov_id = S.reins_cov_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}