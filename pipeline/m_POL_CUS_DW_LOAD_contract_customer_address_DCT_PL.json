{
    "name": "s_m_POL_CUS_DW_LOAD_contract_customer_address_DCT_PL",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_contract_customer_address_DCT_PL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkDCTPLParty AS (\n\tSELECT distinct P.PolicyNumber, \r\n\tP.PolicyVersion, \r\n\tISNULL(P.StreetAddressLine1,'') StreetAddressLine1, \r\n\tISNULL(P.StreetAddressLine2,'') StreetAddressLine2, \r\n\tISNULL(P.StreetAddressLine3,'') StreetAddressLine3, \r\n\tISNULL(P.CityName,'') CityName, \r\n\tISNULL(P.StateName,'') StateName, \r\n\tISNULL(P.PostalCode,'') PostalCode, \r\n\tISNULL(P.PostalCodeExt,'') PostalCodeExt,\r\n\tISNULL(P.CountyName,'') CountyName, \r\n\tISNULL(P.CountryName,'') CountryName\r\n\tfrom\r\n\t(select *,case when AddressType='Insured MailingAddress' then 1 else 2 end Customer_Record\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty \r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')) P\r\n\tinner join (select PolicyKey,StartDate,min(case when AddressType='Insured MailingAddress' then 1 else 2 end) Customer_Record\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty P\r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')\r\n\tgroup by PolicyKey,StartDate) B\r\n\ton P.Policykey=B.PolicyKey\r\n\tand P.StartDate=B.STartDate\r\n\tand P.Customer_Record=B.Customer_Record\n),\nEXP_Src_Data_Collect AS (\n\tSELECT\n\tCountryName AS i_country,\n\tPolicyNumber AS i_PolicyNumber,\n\tPolicyVersion AS i_PolicyVersion,\n\t-- *INF*: i_PolicyNumber|| IIF(ISNULL(ltrim(rtrim(i_PolicyVersion))) or Length(ltrim(rtrim(i_PolicyVersion)))=0 or IS_SPACES(i_PolicyVersion),'00',i_PolicyVersion)\n\ti_PolicyNumber || IFF(ltrim(rtrim(i_PolicyVersion)) IS NULL OR Length(ltrim(rtrim(i_PolicyVersion))) = 0 OR IS_SPACES(i_PolicyVersion), '00', i_PolicyVersion) AS o_contract_key,\n\t'MAILING' AS o_addr_type,\n\t'0000' AS o_loc_unit_num,\n\t-- *INF*: IIF(ISNULL(i_country) or IS_SPACES(i_country)  or LENGTH(i_country)=0,'N/A',LTRIM(RTRIM(i_country)))\n\tIFF(i_country IS NULL OR IS_SPACES(i_country) OR LENGTH(i_country) = 0, 'N/A', LTRIM(RTRIM(i_country))) AS o_Country,\n\t'N\\A' AS o_no_match_flag,\n\t'N\\A' AS o_delivery_confirmation_flag,\n\t'N/A' AS o_group1_match_code,\n\t0 AS o_latitude,\n\t0 AS o_longitude,\n\tStreetAddressLine1,\n\tStreetAddressLine2,\n\tStreetAddressLine3,\n\tCityName,\n\tStateName,\n\tPostalCode,\n\tPostalCodeExt,\n\tCountyName\n\tFROM SQ_WorkDCTPLParty\n),\nLKP_contract_customer_key AS (\n\tSELECT\n\tcontract_cust_ak_id,\n\tcontract_key\n\tFROM (\n\t\tSELECT \r\n\t\tcontract_customer.contract_cust_ak_id as contract_cust_ak_id, \r\n\t\tltrim(rtrim(contract_customer.contract_key)) as contract_key \r\n\t\tFROM \r\n\t\tcontract_customer\r\n\t\tWHERE contract_customer.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY contract_key ORDER BY contract_cust_ak_id DESC) = 1\n),\nLKP_contract_customer_address AS (\n\tSELECT\n\tcontract_cust_addr_id,\n\tloc_unit_num,\n\taddr_line_1,\n\taddr_line_2,\n\taddr_line_3,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tzip_postal_code_extension,\n\tcounty_parish_name,\n\tcountry_name,\n\tno_match_flag,\n\tdelivery_confirmation_flag,\n\tgroup1_match_code,\n\tlatitude,\n\tlongitude,\n\tcontract_cust_addr_ak_id,\n\tcontract_cust_ak_id,\n\taddr_type\n\tFROM (\n\t\tSELECT \n\t\t\tcontract_cust_addr_id,\n\t\t\tloc_unit_num,\n\t\t\taddr_line_1,\n\t\t\taddr_line_2,\n\t\t\taddr_line_3,\n\t\t\tcity_name,\n\t\t\tstate_prov_code,\n\t\t\tzip_postal_code,\n\t\t\tzip_postal_code_extension,\n\t\t\tcounty_parish_name,\n\t\t\tcountry_name,\n\t\t\tno_match_flag,\n\t\t\tdelivery_confirmation_flag,\n\t\t\tgroup1_match_code,\n\t\t\tlatitude,\n\t\t\tlongitude,\n\t\t\tcontract_cust_addr_ak_id,\n\t\t\tcontract_cust_ak_id,\n\t\t\taddr_type\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer_address\n\t\tWHERE CRRNT_SNPSHT_FLAG=1 and source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand contract_cust_ak_id in (\r\n\t\tselect contract_cust_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer\r\n\t\twhere contract_key in (\r\n\t\tselect PolicyNumber+ISNULL(RIGHT('00'+CONVERT(varchar(3),PolicyVersion),2),'00') from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty)\r\n\t\tand crrnt_snpsht_flag=1)\r\n\t\torder by contract_cust_ak_id,addr_type,Created_date Desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY contract_cust_ak_id,addr_type ORDER BY contract_cust_addr_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_contract_customer_address.contract_cust_addr_id AS i_cust_addr_id,\n\tLKP_contract_customer_address.loc_unit_num AS i_loc_unit_num,\n\tLKP_contract_customer_address.addr_line_1 AS i_addr_line_1,\n\tLKP_contract_customer_address.addr_line_2 AS i_addr_line_2,\n\tLKP_contract_customer_address.addr_line_3 AS i_addr_line_3,\n\tLKP_contract_customer_address.city_name AS i_city,\n\tLKP_contract_customer_address.state_prov_code AS i_state,\n\tLKP_contract_customer_address.zip_postal_code AS i_zip_code,\n\tLKP_contract_customer_address.zip_postal_code_extension AS i_zip_postal_code_extension,\n\tLKP_contract_customer_address.county_parish_name AS i_county,\n\tLKP_contract_customer_address.country_name AS i_country,\n\tLKP_contract_customer_address.no_match_flag AS i_no_match_flag,\n\tLKP_contract_customer_address.delivery_confirmation_flag AS i_delivery_confirmation_flag,\n\tLKP_contract_customer_address.group1_match_code AS i_group1_match_code,\n\tLKP_contract_customer_address.latitude AS i_latitude,\n\tLKP_contract_customer_address.longitude AS i_longitude,\n\t-- *INF*: IIF(ISNULL(cust_addr_ak_id), 'NEW', \r\n\t-- IIF(LTRIM(RTRIM(i_addr_line_1)) != LTRIM(RTRIM(addr_line_1)) OR\r\n\t-- LTRIM(RTRIM(i_addr_line_2)) != LTRIM(RTRIM(addr_line_2)) OR\r\n\t-- LTRIM(RTRIM(i_addr_line_3)) != LTRIM(RTRIM(addr_line_3)) OR\r\n\t-- LTRIM(RTRIM(i_city)) != LTRIM(RTRIM(city))  OR\r\n\t-- LTRIM(RTRIM(i_state)) != LTRIM(RTRIM(state)) OR\r\n\t-- LTRIM(RTRIM(i_zip_code)) != LTRIM(RTRIM(zip_postal_code)) OR\r\n\t-- LTRIM(RTRIM(i_zip_postal_code_extension)) != LTRIM(RTRIM(zip_postal_code_extension)) OR\r\n\t-- LTRIM(RTRIM(i_loc_unit_num)) != LTRIM(RTRIM(loc_unit_num)) OR\r\n\t-- LTRIM(RTRIM(i_county)) != LTRIM(RTRIM(county_parish_name)) OR\t\r\n\t-- LTRIM(RTRIM(i_country)) != LTRIM(RTRIM(country)) OR\r\n\t-- LTRIM(RTRIM(i_no_match_flag)) != LTRIM(RTRIM(no_match_flag)) OR\r\n\t-- LTRIM(RTRIM(i_delivery_confirmation_flag)) != LTRIM(RTRIM(delivery_confirmation_flag)) OR\r\n\t-- LTRIM(RTRIM(i_group1_match_code)) != LTRIM(RTRIM(group1_match_code)) OR\r\n\t-- i_latitude  != latitude OR\r\n\t-- i_longitude != longitude,\r\n\t-- 'UPDATE', 'NOCHANGE'))\r\n\t-- \r\n\t-- \r\n\t-- --iif(NewLookupRow=1,'NEW',IIF(NewLookupRow=2,'UPDATE','NOCHANGE'))\n\tIFF(cust_addr_ak_id IS NULL, 'NEW', IFF(LTRIM(RTRIM(i_addr_line_1)) != LTRIM(RTRIM(addr_line_1)) OR LTRIM(RTRIM(i_addr_line_2)) != LTRIM(RTRIM(addr_line_2)) OR LTRIM(RTRIM(i_addr_line_3)) != LTRIM(RTRIM(addr_line_3)) OR LTRIM(RTRIM(i_city)) != LTRIM(RTRIM(city)) OR LTRIM(RTRIM(i_state)) != LTRIM(RTRIM(state)) OR LTRIM(RTRIM(i_zip_code)) != LTRIM(RTRIM(zip_postal_code)) OR LTRIM(RTRIM(i_zip_postal_code_extension)) != LTRIM(RTRIM(zip_postal_code_extension)) OR LTRIM(RTRIM(i_loc_unit_num)) != LTRIM(RTRIM(loc_unit_num)) OR LTRIM(RTRIM(i_county)) != LTRIM(RTRIM(county_parish_name)) OR LTRIM(RTRIM(i_country)) != LTRIM(RTRIM(country)) OR LTRIM(RTRIM(i_no_match_flag)) != LTRIM(RTRIM(no_match_flag)) OR LTRIM(RTRIM(i_delivery_confirmation_flag)) != LTRIM(RTRIM(delivery_confirmation_flag)) OR LTRIM(RTRIM(i_group1_match_code)) != LTRIM(RTRIM(group1_match_code)) OR i_latitude != latitude OR i_longitude != longitude, 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\t-- *INF*: IIF(v_changed_flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(v_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS v_eff_from_date,\n\tLKP_contract_customer_address.contract_cust_addr_ak_id AS cust_addr_ak_id,\n\tEXP_Src_Data_Collect.o_addr_type AS addr_type,\n\tLKP_contract_customer_key.contract_cust_ak_id AS cust_ak_id,\n\tEXP_Src_Data_Collect.StreetAddressLine1 AS addr_line_1,\n\tEXP_Src_Data_Collect.StreetAddressLine2 AS addr_line_2,\n\tEXP_Src_Data_Collect.StreetAddressLine3 AS addr_line_3,\n\tEXP_Src_Data_Collect.CityName AS city,\n\tEXP_Src_Data_Collect.StateName AS state,\n\tEXP_Src_Data_Collect.PostalCode AS zip_postal_code,\n\tEXP_Src_Data_Collect.PostalCodeExt AS zip_postal_code_extension,\n\tEXP_Src_Data_Collect.CountyName AS county_parish_name,\n\tEXP_Src_Data_Collect.o_loc_unit_num AS loc_unit_num,\n\tEXP_Src_Data_Collect.o_Country AS country,\n\tEXP_Src_Data_Collect.o_no_match_flag AS no_match_flag,\n\tEXP_Src_Data_Collect.o_delivery_confirmation_flag AS delivery_confirmation_flag,\n\tEXP_Src_Data_Collect.o_group1_match_code AS group1_match_code,\n\tEXP_Src_Data_Collect.o_latitude AS latitude,\n\tEXP_Src_Data_Collect.o_longitude AS longitude,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tv_eff_from_date AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_system_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM EXP_Src_Data_Collect\n\tLEFT JOIN LKP_contract_customer_address\n\tON LKP_contract_customer_address.contract_cust_ak_id = LKP_contract_customer_key.contract_cust_ak_id AND LKP_contract_customer_address.addr_type = EXP_Src_Data_Collect.o_addr_type\n\tLEFT JOIN LKP_contract_customer_key\n\tON LKP_contract_customer_key.contract_key = EXP_Src_Data_Collect.o_contract_key\n),\nFIL_Insert AS (\n\tSELECT\n\tcust_addr_ak_id, \n\taddr_type, \n\tcust_ak_id, \n\taddr_line_1, \n\taddr_line_2, \n\taddr_line_3, \n\tcity, \n\tstate, \n\tzip_postal_code, \n\tzip_postal_code_extension, \n\tcounty_parish_name, \n\tloc_unit_num, \n\tcountry, \n\tno_match_flag, \n\tdelivery_confirmation_flag, \n\tgroup1_match_code, \n\tlatitude, \n\tlongitude, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_system_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW' OR changed_flag='UPDATE'\n),\nSEQ_customer_address AS (\n\tCREATE SEQUENCE SEQ_customer_address\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Customer_address_ak_id AS (\n\tSELECT\n\tcust_addr_ak_id AS i_cust_addr_ak_id,\n\tSEQ_customer_address.NEXTVAL,\n\taddr_type,\n\tcust_ak_id,\n\taddr_line_1,\n\taddr_line_2,\n\taddr_line_3,\n\tcity,\n\tstate,\n\tzip_postal_code,\n\tzip_postal_code_extension,\n\tcounty_parish_name,\n\tloc_unit_num,\n\tcountry,\n\tno_match_flag,\n\tdelivery_confirmation_flag,\n\tgroup1_match_code,\n\tlatitude,\n\tlongitude,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_system_id,\n\tcreated_date,\n\tmodified_date,\n\t-- *INF*: IIF(ISNULL(i_cust_addr_ak_id),NEXTVAL,i_cust_addr_ak_id)\n\tIFF(i_cust_addr_ak_id IS NULL, NEXTVAL, i_cust_addr_ak_id) AS cust_addr_ak_id\n\tFROM FIL_Insert\n),\nTGT_contract_customer_address_INSERT AS (\n\tINSERT INTO contract_customer_address\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, contract_cust_addr_ak_id, contract_cust_ak_id, addr_type, loc_unit_num, addr_line_1, addr_line_2, addr_line_3, city_name, state_prov_code, zip_postal_code, zip_postal_code_extension, county_parish_name, country_name, no_match_flag, delivery_confirmation_flag, group1_match_code, latitude, longitude)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tsource_system_id AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tcust_addr_ak_id AS CONTRACT_CUST_ADDR_AK_ID, \n\tcust_ak_id AS CONTRACT_CUST_AK_ID, \n\tADDR_TYPE, \n\tLOC_UNIT_NUM, \n\tADDR_LINE_1, \n\tADDR_LINE_2, \n\tADDR_LINE_3, \n\tcity AS CITY_NAME, \n\tstate AS STATE_PROV_CODE, \n\tZIP_POSTAL_CODE, \n\tZIP_POSTAL_CODE_EXTENSION, \n\tCOUNTY_PARISH_NAME, \n\tcountry AS COUNTRY_NAME, \n\tNO_MATCH_FLAG, \n\tDELIVERY_CONFIRMATION_FLAG, \n\tGROUP1_MATCH_CODE, \n\tLATITUDE, \n\tLONGITUDE\n\tFROM EXP_Customer_address_ak_id\n),\nSQ_contract_customer_address AS (\n\tSELECT \r\n\t\tcontract_cust_addr_id,\r\n\t\teff_from_date,\r\n\t\teff_to_date,\r\n\t\tcontract_cust_addr_ak_id \r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}. contract_customer_address a\r\n\tWHERE  EXISTS\r\n\t\t (SELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer_address b\r\n\t\t   WHERE crrnt_snpsht_flag = 1 and source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t   AND a.contract_cust_addr_ak_id = b.contract_cust_addr_ak_id\r\n\tGROUP BY  contract_cust_addr_ak_id  HAVING count(*) > 1)\r\n\tAND source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tORDER BY  contract_cust_addr_ak_id ,eff_from_date  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\teff_from_date AS i_eff_from_date,\n\tcontract_cust_addr_ak_id AS i_cust_addr_ak_id,\n\tcontract_cust_addr_id AS cust_addr_id,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_cust_addr_ak_id = v_prev_cust_addr_ak_id ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_cust_addr_ak_id = v_prev_cust_addr_ak_id, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\ti_cust_addr_ak_id AS v_prev_cust_addr_ak_id,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_contract_customer_address\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tcust_addr_id, \n\torig_eff_to_date AS i_orig_eff_to_date, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE i_orig_eff_to_date != eff_to_date\n),\nUPD_customer_address AS (\n\tSELECT\n\tcust_addr_id, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTGT_contract_customer_address_UPDATE AS (\n\tMERGE INTO contract_customer_address AS T\n\tUSING UPD_customer_address AS S\n\tON T.contract_cust_addr_id = S.cust_addr_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905512"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604102"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:12:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:29:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}