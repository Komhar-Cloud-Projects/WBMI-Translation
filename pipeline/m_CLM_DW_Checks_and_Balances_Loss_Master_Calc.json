{
    "name": "m_CLM_DW_Checks_and_Balances_Loss_Master_Calc",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_Checks_and_Balances_Loss_Master_Calc",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_loss_master_calculation AS (\n\tSELECT COUNT(*) AS EDW_Count, 'Count of claim_occurrence_ak_id from Loss_Master_Calculation where claim_occurrence_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_occurrence_ak_id = - 1\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of pol_ak_id from Loss_Master_Calculation where pol_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where pol_ak_id = - 1\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of claim_party_ak_id from Loss_Master_Calculation where claim_party_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_party_ak_id = - 1\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of claimant_cov_det_ak_id from Loss_Master_Calculation where claimant_cov_det_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claimant_cov_det_ak_id = - 1\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of claim_party_occurrence_ak_id from Loss_Master_Calculation where claim_party_occurrence_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_party_occurrence_ak_id = - 1\r\n\t\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_trans_ak_id from  Loss_Master_Calculation where claim_trans_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_trans_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_reins_trans_ak_id from  Loss_Master_Calculation where claim_reins_trans_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_reins_trans_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of agency_ak_id from Loss_Master_Calculation where agency_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where agency_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of contract_cust_ak_id from Loss_Master_Calculation where contract_cust_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where contract_cust_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_primary_rep_ak_id from Loss_Master_Calculation where claim_primary_rep_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_primary_rep_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_examiner_ak_id from Loss_Master_Calculation where claim_examiner_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_examiner_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_case_ak_id from Loss_Master_Calculation where claim_case_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_case_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of wc_claimant_det_ak_id from Loss_Master_Calculation where wc_claimant_det_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where wc_claimant_det_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of claim_pay_ak_id from Loss_Master_Calculation where claim_pay_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where claim_pay_ak_id = - 1\r\n\t\r\n\t--UNION\r\n\t\r\n\t--SELECT COUNT(*) AS EDW_Count, 'Count of reins_cov_ak_id from Loss_Master_Calculation where reins_cov_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Loss_Master_Calculation where reins_cov_ak_id = - 1\n),\nEXP_default AS (\n\tSELECT\n\tEDW_Count AS EDW_count,\n\tCheck_Out_Message AS check_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\tTarget_Name AS target_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_loss_master_calculation\n),\nFILTRANS AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default\n\tWHERE EDW_count>0\n),\nwbmi_checkout_curr_row_count AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS\n),\nSQ_loss_master_calculation_high_threshold AS (\n\tSELECT COUNT(*) AS EDW_Count, 'Count of cov_ak_id from Loss_Master_Calculation where cov_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM Loss_Master_Calculation LMC, dbo.claimant_coverage_detail CCD where LMC.cov_ak_id = - 1 and LMC.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id AND \r\n\tCCD.crrnt_snpsht_flag = 1 AND CCD.major_peril_code <> '101'\r\n\tAND CCD.PolicySourceID NOT IN ('PDC','DUC') --- For Claims of DuckCreek Policies will not have Cov_AK_ID values\r\n\tAND LMC.created_date >='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT COUNT(*) AS EDW_Count, 'Count of temp_pol_trans_ak_id from Loss_Master_Calculation where temp_pol_trans_ak_id = - 1 is ' + CONVERT(varchar,COUNT(*)) as Check_Out_Message,'Loss_Master_Calculation' as Target_Name FROM Loss_Master_Calculation LMC,dbo.claimant_coverage_detail CCD where LMC.temp_pol_trans_ak_id = - 1 and LMC.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id \r\n\tAND CCD.crrnt_snpsht_flag = 1 AND CCD.major_peril_code <> '101'\r\n\tAND CCD.PolicySourceID NOT IN ('PDC','DUC') --- For Claims of DuckCreek Policies will not have Temp_Pol_Trans_AK_ID values\r\n\tAND LMC.created_date >='@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_default_high_threshold AS (\n\tSELECT\n\tEDW_Count AS EDW_count,\n\tCheck_Out_Message AS check_out_message,\n\t@{pipeline().parameters.WBMI_SESSION_CONTROL_RUN_ID} AS wbmi_session_control_run_id,\n\t'InformS' AS created_user_id,\n\tSYSDATE AS created_date,\n\t'InformS' AS modified_user_id,\n\tSYSDATE AS modified_date,\n\tTarget_Name AS target_name,\n\t-- *INF*: 'E'\r\n\t-- \r\n\t-- //E - Error, W - Warning\n\t'E' AS checkout_type_code\n\tFROM SQ_loss_master_calculation_high_threshold\n),\nFILTRANS_high_threshold AS (\n\tSELECT\n\tEDW_count, \n\tcheck_out_message, \n\twbmi_session_control_run_id, \n\tcreated_user_id, \n\tcreated_date, \n\tmodified_user_id, \n\tmodified_date, \n\ttarget_name, \n\tcheckout_type_code\n\tFROM EXP_default_high_threshold\n\tWHERE EDW_count > 0\n),\nwbmi_checkout_curr_row_count_high_threshold AS (\n\tINSERT INTO wbmi_checkout\n\t(wbmi_session_control_run_id, checkout_type_code, checkout_message, target_name, target_count, created_user_id, created_date, modified_user_id, modified_date)\n\tSELECT \n\tWBMI_SESSION_CONTROL_RUN_ID, \n\tCHECKOUT_TYPE_CODE, \n\tcheck_out_message AS CHECKOUT_MESSAGE, \n\tTARGET_NAME, \n\tEDW_count AS TARGET_COUNT, \n\tCREATED_USER_ID, \n\tCREATED_DATE, \n\tMODIFIED_USER_ID, \n\tMODIFIED_DATE\n\tFROM FILTRANS_high_threshold\n),\nSQ_wbmi_checkout AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code = 'E' and \r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\trtrim(wbmi_batch_control_run.batch_name) = 'LOSS_MASTER_CALCULATION'\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject AS (\n\tSELECT\n\temail_address,\n\tcheckout_message,\n\t-- *INF*: 'There are errors in the Loss_Master_Calculation EDW data. Execution aborted (' || sysdate || ')'\n\t'There are errors in the Loss_Master_Calculation EDW data. Execution aborted (' || sysdate || ')' AS email_subject\n\tFROM SQ_wbmi_checkout\n),\nAGG_Distinct_Email_Id AS (\n\tSELECT\n\temail_address, \n\temail_subject\n\tFROM EXP_Email_Subject\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY email_address, email_subject ORDER BY NULL) = 1\n),\nemail_address AS (\n\tINSERT INTO email_address\n\t(FIELD1)\n\tSELECT \n\temail_address AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nemail_subject AS (\n\tINSERT INTO email_subject\n\t(FIELD1)\n\tSELECT \n\temail_subject AS FIELD1\n\tFROM AGG_Distinct_Email_Id\n),\nemail_body AS (\n\tINSERT INTO email_body\n\t(FIELD1)\n\tSELECT \n\tcheckout_message AS FIELD1\n\tFROM EXP_Email_Subject\n),\nSQ_wbmi_checkout1 AS (\n\tselect \r\n\twbmi_checkout.checkout_message + ' <BR> <BR> ',\r\n\twbmi_batch_control_run.email_address\r\n\tfrom \r\n\tdbo.wbmi_checkout wbmi_checkout,\r\n\tdbo.wbmi_session_control_run wbmi_session_control_run,\r\n\tdbo.wbmi_batch_control_run wbmi_batch_control_run\r\n\twhere\r\n\twbmi_checkout.checkout_type_code = 'E' and \r\n\twbmi_checkout.wbmi_session_control_run_id = wbmi_session_control_run.wbmi_session_control_run_id and\r\n\twbmi_session_control_run.current_ind = 'Y'  and \r\n\twbmi_session_control_run.wbmi_batch_control_run_id = wbmi_batch_control_run.wbmi_batch_control_run_id and\r\n\trtrim(wbmi_batch_control_run.batch_name)  = 'LOSS_MASTER_CALCULATION'\r\n\torder by wbmi_checkout_id\n),\nEXP_Email_Subject1 AS (\n\tSELECT\n\temail_address,\n\tcheckout_message,\n\t-- *INF*: Abort('There are issues with the Loss Master Calc EDW data')\n\tAbort('There are issues with the Loss Master Calc EDW data') AS error\n\tFROM SQ_wbmi_checkout1\n),\nFIL_STOP_PROCESSING AS (\n\tSELECT\n\tcheckout_message, \n\terror\n\tFROM EXP_Email_Subject1\n\tWHERE FALSE\n),\nwbmi_checkout_dummy_target AS (\n\tINSERT INTO wbmi_checkout\n\t(checkout_message)\n\tSELECT \n\tCHECKOUT_MESSAGE\n\tFROM FIL_STOP_PROCESSING\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244800"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893123"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542572"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 06:07:41"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 11:42:32"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_InformaticaAuditControl"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS AND EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}