{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCACoverageDriveOtherCarOTCStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCACoverageDriveOtherCa_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_CA_CoverageDriveOtherCarOTC AS (\n\tWITH cte_DCCACoverageDriveOtherCarOTCStage(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CoverageId,\r\n\tX.CA_CoverageDriveOtherCarOTCId,\r\n\tX.SessionId,\r\n\tX.ExperienceRatingBasicLimitPremium,\r\n\tX.DeductibleType,\r\n\tX.FullGlassIndicator\r\n\tFROM\r\n\tDC_CA_CoverageDriveOtherCarOTC X\r\n\tinner join\r\n\tcte_DCCACoverageDriveOtherCarOTCStage Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEX_Metadata AS (\n\tSELECT\n\tSYSDATE AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tCoverageId,\n\tCA_CoverageDriveOtherCarOTCId,\n\tSessionId,\n\tExperienceRatingBasicLimitPremium,\n\tDeductibleType,\n\tFullGlassIndicator AS i_FullGlassIndicator,\n\t-- *INF*: decode(i_FullGlassIndicator,'T',1,'F',0,NULL)\n\tdecode(\n\t    i_FullGlassIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_FullGlassIndicator\n\tFROM SQ_DC_CA_CoverageDriveOtherCarOTC\n),\nDCCACoverageDriveOtherCarOTCStage AS (\n\tTRUNCATE TABLE DCCACoverageDriveOtherCarOTCStage;\n\tINSERT INTO DCCACoverageDriveOtherCarOTCStage\n\t(ExtractDate, SourceSystemId, CoverageId, CA_CoverageDriveOtherCarOTCId, SessionId, ExperienceRatingBasicLimitPremium, DeductibleType, FullGlassIndicator)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tCOVERAGEID, \n\tCA_COVERAGEDRIVEOTHERCAROTCID, \n\tSESSIONID, \n\tEXPERIENCERATINGBASICLIMITPREMIUM, \n\tDEDUCTIBLETYPE, \n\to_FullGlassIndicator AS FULLGLASSINDICATOR\n\tFROM EX_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}