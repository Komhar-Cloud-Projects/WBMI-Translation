{
    "name": "m_POL_DW_LOAD_Driver_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_Driver_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DCDriverStaging AS (\n\tSELECT \r\n\tDCCADriverStaging.SessionId, \r\n\tDCCADriverStaging.DriversLicenseNumber, \r\n\tDCCADriverStaging.StateLicensed, \r\n\tWBCADriverStaging.DateOfBirth, \r\n\tWBCADriverStaging.Name, \r\n\tWBCADriverStaging.MiddleInitial, \r\n\tWBCADriverStaging.LastName, \r\n\tWBCADriverStaging.Gender, \r\n\tWBCADriverStaging.ExcludeDriver, \r\n\tWBCADriverStaging.MVRStatus, \r\n\tDCPolicyStaging.Id, \r\n\tDCPolicyStaging.PolicyNumber,\r\n\tWBPolicyStaging.PolicyVersion \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPolicyStaging\r\n\tinner join\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCADriverStaging\r\n\ton\r\n\tDCPolicyStaging.SessionId = DCCADriverStaging.SessionID\r\n\tand\r\n\tDCPolicyStaging.Status<>'Quote'\r\n\tand\r\n\tLEN(DCPolicyStaging.PolicyNumber)=7\r\n\tinner join\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCTransactionStaging\r\n\ton\r\n\tDCPolicyStaging.SessionId = DCTransactionStaging.SessionId\r\n\tand\r\n\tDCTransactionStaging.State='Committed'\r\n\tinner join\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCADriverStaging\r\n\ton\r\n\tDCPolicyStaging.SessionId = WBCADriverStaging.SessionID\r\n\tand\r\n\tDCCADriverStaging.CA_DriverID = WBCADriverStaging.CA_DriverID\r\n\tinner join\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPolicyStaging\r\n\ton\r\n\tDCPolicyStaging.SessionId = WBPolicyStaging.SessionID\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Source AS (\n\tSELECT\n\tSessionId,\n\tDriversLicenseNumber,\n\tStateLicensed,\n\tDateOfBirth,\n\tName,\n\tMiddleInitial,\n\tLastName,\n\tGender,\n\tExcludeDriver,\n\tMVRStatus,\n\tId,\n\tPolicyNumber,\n\tPolicyVersion\n\tFROM SQ_DCDriverStaging\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tSessionId AS i_SessionId, \n\tId AS i_Id, \n\tDriversLicenseNumber AS i_DriversLicenseNumber, \n\tStateLicensed AS i_StateLicensed, \n\tPolicyVersion AS i_PolicyVersion, \n\tDateOfBirth, \n\tName, \n\tMiddleInitial, \n\tLastName, \n\tGender, \n\tExcludeDriver, \n\tMVRStatus, \n\ti_SessionId AS o_SessionId, \n\tIFF(i_Id IS NULL OR IS_SPACES(i_Id) OR LENGTH(i_Id) = 0, 'N/A', LTRIM(RTRIM(i_Id))) AS o_Id, \n\tIFF(i_DriversLicenseNumber IS NULL OR IS_SPACES(i_DriversLicenseNumber) OR LENGTH(i_DriversLicenseNumber) = 0, 'N/A', LTRIM(RTRIM(i_DriversLicenseNumber))) AS o_DriversLicenseNumber, \n\tIFF(i_StateLicensed IS NULL OR IS_SPACES(i_StateLicensed) OR LENGTH(i_StateLicensed) = 0, 'N/A', LTRIM(RTRIM(i_StateLicensed))) AS o_LicenseState, \n\tPolicyNumber, \n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS o_PolicyVersion\n\tFROM EXP_Source\n\tGROUP BY o_Id, o_DriversLicenseNumber, o_LicenseState, PolicyNumber, o_PolicyVersion\n),\nEXP_PostAggregator AS (\n\tSELECT\n\to_SessionId AS i_SessionId,\n\to_DriversLicenseNumber AS DriversLicenseNumber,\n\to_LicenseState AS LicenseState,\n\tDateOfBirth,\n\tName,\n\tMiddleInitial,\n\tLastName,\n\tGender,\n\tExcludeDriver,\n\tMVRStatus,\n\to_Id AS i_Id,\n\tPolicyNumber AS i_PolicyNumber,\n\to_PolicyVersion AS i_PolicyVersion,\n\ti_PolicyNumber||i_PolicyVersion AS o_PolicyKey\n\tFROM AGG_Remove_Duplicates\n),\nLKP_policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nEXP_Pre_Target_Lookup AS (\n\tSELECT\n\tLKP_policy.pol_ak_id AS i_PolicyAKID,\n\t-- *INF*: IIF(ISNULL(i_PolicyAKID), -1, i_PolicyAKID)\n\tIFF(i_PolicyAKID IS NULL, - 1, i_PolicyAKID) AS v_PolicyAKID,\n\tv_PolicyAKID AS o_PolicyAKID,\n\tEXP_PostAggregator.LicenseState,\n\tEXP_PostAggregator.DriversLicenseNumber,\n\tEXP_PostAggregator.LastName,\n\tEXP_PostAggregator.Name AS FirstName,\n\tEXP_PostAggregator.MiddleInitial,\n\tEXP_PostAggregator.Gender,\n\tEXP_PostAggregator.ExcludeDriver,\n\tEXP_PostAggregator.MVRStatus,\n\t-- *INF*: IIF(ISNULL(LastName) or IS_SPACES(LastName)  or LENGTH(LastName)=0,'N/A',LTRIM(RTRIM(LastName)))\n\tIFF(LastName IS NULL OR IS_SPACES(LastName) OR LENGTH(LastName) = 0, 'N/A', LTRIM(RTRIM(LastName))) AS o_LastName,\n\t-- *INF*: IIF(ISNULL(FirstName) or IS_SPACES(FirstName)  or LENGTH(FirstName)=0,'N/A',LTRIM(RTRIM(FirstName)))\n\tIFF(FirstName IS NULL OR IS_SPACES(FirstName) OR LENGTH(FirstName) = 0, 'N/A', LTRIM(RTRIM(FirstName))) AS o_FirstName,\n\t-- *INF*: IIF(ISNULL(MiddleInitial) or IS_SPACES(MiddleInitial)  or LENGTH(MiddleInitial)=0,'N/A',LTRIM(RTRIM(MiddleInitial)))\n\tIFF(MiddleInitial IS NULL OR IS_SPACES(MiddleInitial) OR LENGTH(MiddleInitial) = 0, 'N/A', LTRIM(RTRIM(MiddleInitial))) AS o_MiddleInitial,\n\t-- *INF*: DECODE\r\n\t-- (LTRIM(RTRIM(Gender)),\r\n\t-- 'Male','M',\r\n\t-- 'Female','F',\r\n\t-- 'U')\n\tDECODE(LTRIM(RTRIM(Gender)),\n\t'Male', 'M',\n\t'Female', 'F',\n\t'U') AS o_Gender,\n\t-- *INF*: IIF(ISNULL(ExcludeDriver) or IS_SPACES(ExcludeDriver)  or LENGTH(ExcludeDriver)=0,'N/A',LTRIM(RTRIM(ExcludeDriver)))\n\tIFF(ExcludeDriver IS NULL OR IS_SPACES(ExcludeDriver) OR LENGTH(ExcludeDriver) = 0, 'N/A', LTRIM(RTRIM(ExcludeDriver))) AS o_ExcludeDriver,\n\t-- *INF*: IIF(ISNULL(MVRStatus) or IS_SPACES(MVRStatus)  or LENGTH(MVRStatus)=0,'N/A',LTRIM(RTRIM(MVRStatus)))\n\tIFF(MVRStatus IS NULL OR IS_SPACES(MVRStatus) OR LENGTH(MVRStatus) = 0, 'N/A', LTRIM(RTRIM(MVRStatus))) AS o_MVRStatus,\n\tEXP_PostAggregator.DateOfBirth\n\tFROM EXP_PostAggregator\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_PostAggregator.o_PolicyKey\n),\nLKP_Driver AS (\n\tSELECT\n\tDriverId,\n\tDriverAKId,\n\tPolicyAKId,\n\tLicenseState,\n\tLicenseNumber,\n\tLastName,\n\tFirstName,\n\tMiddleName,\n\tGenderCode,\n\tBirthdate,\n\tExcludeDriver,\n\tMVRStatus\n\tFROM (\n\t\tSELECT \n\t\t\tDriverId,\n\t\t\tDriverAKId,\n\t\t\tPolicyAKId,\n\t\t\tLicenseState,\n\t\t\tLicenseNumber,\n\t\t\tLastName,\n\t\t\tFirstName,\n\t\t\tMiddleName,\n\t\t\tGenderCode,\n\t\t\tBirthdate,\n\t\t\tExcludeDriver,\n\t\t\tMVRStatus\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Driver\n\t\tWHERE CurrentSnapshotFlag = 1 and SourcesystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKId,LicenseState,LicenseNumber ORDER BY DriverId DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Driver.DriverAKId AS lkp_DriverAKId,\n\tLKP_Driver.PolicyAKId AS lkp_PolicyAKId,\n\tLKP_Driver.LicenseState AS lkp_LicenseState,\n\tLKP_Driver.LicenseNumber AS lkp_LicenseNumber,\n\tLKP_Driver.LastName AS lkp_LastName,\n\tLKP_Driver.FirstName AS lkp_FirstName,\n\tLKP_Driver.MiddleName AS lkp_MiddleName,\n\tLKP_Driver.GenderCode AS lkp_GenderCode,\n\tLKP_Driver.Birthdate AS lkp_Birthdate,\n\tLKP_Driver.ExcludeDriver AS lkp_ExcludeDriver,\n\tLKP_Driver.MVRStatus AS lkp_MVRStatus,\n\tEXP_Pre_Target_Lookup.o_PolicyAKID AS i_PolicyAKID,\n\tEXP_Pre_Target_Lookup.LicenseState AS i_LicenseState,\n\tEXP_Pre_Target_Lookup.DriversLicenseNumber AS i_LicenseNumber,\n\tEXP_Pre_Target_Lookup.o_LastName AS i_LastName,\n\tEXP_Pre_Target_Lookup.o_FirstName AS i_FirstName,\n\tEXP_Pre_Target_Lookup.o_MiddleInitial AS i_MiddleInitial,\n\tEXP_Pre_Target_Lookup.o_Gender AS i_Gender,\n\tEXP_Pre_Target_Lookup.DateOfBirth AS i_DateOfBirth,\n\tEXP_Pre_Target_Lookup.o_ExcludeDriver AS i_ExcludeDriver,\n\tEXP_Pre_Target_Lookup.o_MVRStatus AS i_MVRStatus,\n\t-- *INF*: IIF(ISNULL(i_PolicyAKID), -1, i_PolicyAKID)\n\tIFF(i_PolicyAKID IS NULL, - 1, i_PolicyAKID) AS v_pol_ak_id,\n\tv_pol_ak_id AS o_PolicyAKID,\n\t-- *INF*: IIF(ISNULL(lkp_DriverAKId), 'NEW', \r\n\t-- IIF(\r\n\t-- LTRIM(RTRIM(lkp_LastName)) != LTRIM(RTRIM(i_LastName)) OR\r\n\t-- LTRIM(RTRIM(lkp_FirstName)) != LTRIM(RTRIM(i_FirstName)) OR \r\n\t-- LTRIM(RTRIM(lkp_MiddleName)) != LTRIM(RTRIM(i_MiddleInitial)) OR lkp_Birthdate !=i_DateOfBirth OR LTRIM(RTRIM(lkp_GenderCode)) != LTRIM(RTRIM(i_Gender)) OR \r\n\t-- LTRIM(RTRIM(lkp_ExcludeDriver)) != LTRIM(RTRIM(i_ExcludeDriver)) OR\r\n\t-- LTRIM(RTRIM(lkp_MVRStatus)) != LTRIM(RTRIM(i_MVRStatus)),\r\n\t-- 'UPDATE', 'NOCHANGE'))\n\tIFF(lkp_DriverAKId IS NULL, 'NEW', IFF(LTRIM(RTRIM(lkp_LastName)) != LTRIM(RTRIM(i_LastName)) OR LTRIM(RTRIM(lkp_FirstName)) != LTRIM(RTRIM(i_FirstName)) OR LTRIM(RTRIM(lkp_MiddleName)) != LTRIM(RTRIM(i_MiddleInitial)) OR lkp_Birthdate != i_DateOfBirth OR LTRIM(RTRIM(lkp_GenderCode)) != LTRIM(RTRIM(i_Gender)) OR LTRIM(RTRIM(lkp_ExcludeDriver)) != LTRIM(RTRIM(i_ExcludeDriver)) OR LTRIM(RTRIM(lkp_MVRStatus)) != LTRIM(RTRIM(i_MVRStatus)), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\tv_Changed_Flag AS o_Changed_Flag\n\tFROM EXP_Pre_Target_Lookup\n\tLEFT JOIN LKP_Driver\n\tON LKP_Driver.PolicyAKId = EXP_Pre_Target_Lookup.o_PolicyAKID AND LKP_Driver.LicenseState = EXP_Pre_Target_Lookup.LicenseState AND LKP_Driver.LicenseNumber = EXP_Pre_Target_Lookup.DriversLicenseNumber\n),\nFIL_Insert AS (\n\tSELECT\n\to_Changed_Flag AS Changed_Flag, \n\tlkp_DriverAKId AS DriverAKID, \n\ti_PolicyAKID AS PolicyAKID, \n\ti_LicenseNumber AS DriversLicenseNumber, \n\ti_LicenseState AS LicenseState, \n\ti_DateOfBirth AS DateOfBirth, \n\ti_FirstName AS Name, \n\ti_MiddleInitial AS MiddleInitial, \n\ti_LastName AS LastName, \n\ti_Gender AS Gender, \n\ti_ExcludeDriver AS ExcludeDriver, \n\ti_MVRStatus AS MVRStatus\n\tFROM EXP_Detect_Changes\n\tWHERE (Changed_Flag='NEW' OR Changed_Flag='UPDATE')\n),\nSEQ_DriverAKID AS (\n\tCREATE SEQUENCE SEQ_DriverAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tSEQ_DriverAKID.NEXTVAL,\n\tChanged_Flag AS i_Changed_Flag,\n\tDriverAKID AS i_DriverAKID,\n\t-- *INF*: IIF(i_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(i_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS v_EffectiveDate,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tv_EffectiveDate AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tPolicyAKID,\n\t-- *INF*: IIF(ISNULL(i_DriverAKID),NEXTVAL,i_DriverAKID)\n\tIFF(i_DriverAKID IS NULL, NEXTVAL, i_DriverAKID) AS DriverAKID,\n\tDriversLicenseNumber,\n\tLicenseState,\n\tDateOfBirth,\n\tName,\n\tMiddleInitial,\n\tLastName,\n\tGender,\n\tExcludeDriver,\n\tMVRStatus\n\tFROM FIL_Insert\n),\nTarget_Driver_Insert AS (\n\tINSERT INTO Driver\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, DriverAKId, PolicyAKId, LicenseState, LicenseNumber, LastName, FirstName, MiddleName, GenderCode, Birthdate, ExcludeDriver, MVRStatus)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAuditID AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSourceSystemID AS SOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tDriverAKID AS DRIVERAKID, \n\tPolicyAKID AS POLICYAKID, \n\tLICENSESTATE, \n\tDriversLicenseNumber AS LICENSENUMBER, \n\tLASTNAME, \n\tName AS FIRSTNAME, \n\tMiddleInitial AS MIDDLENAME, \n\tGender AS GENDERCODE, \n\tDateOfBirth AS BIRTHDATE, \n\tEXCLUDEDRIVER, \n\tMVRSTATUS\n\tFROM EXP_Detemine_AK_ID\n),\nSQ_Driver AS (\n\tSELECT \r\n\t\tDriverID,\r\n\t\tEffectiveDate, \r\n\t\tExpirationDate,\r\n\t\tDriverAKID\r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.Driver a\r\n\tWHERE  EXISTS\r\n\t\t (SELECT 1\r\n\t\t FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Driver b \r\n\t\t   WHERE CurrentSnapshotFlag = 1 and SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t    and a.DriverAKID = b.DriverAKID\r\n\tGROUP BY  DriverAKID  HAVING count(*) > 1)\r\n\tAND SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tORDER BY  DriverAKID ,EffectiveDate  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tDriverId AS DriverID,\n\tEffectiveDate AS i_eff_from_date,\n\tExpirationDate AS orig_eff_to_date,\n\tDriverAKId AS i_DriverAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_DriverAKID = v_PrevDriverAKID ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_DriverAKID = v_PrevDriverAKID, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\ti_DriverAKID AS v_PrevDriverAKID,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_Driver\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tDriverID, \n\torig_eff_to_date, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Driver AS (\n\tSELECT\n\tDriverID, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTarget_Driver_Update AS (\n\tMERGE INTO Driver AS T\n\tUSING UPD_Driver AS S\n\tON T.DriverId = S.DriverID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.crrnt_snpsht_flag, T.ExpirationDate = S.eff_to_date, T.ModifiedDate = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603270"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "where DCCADriverStaging.DriversLicenseNumber is not null and DCCADriverStaging.StateLicensed is not null and WBCADriverStaging.DateOfBirth is not null"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}