{
    "name": "s_m_POL_DW_LOAD_CoverageDetailWorkersCompensation_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailWorkersCompensation_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_STG AS (\n\tSELECT\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageId,\n\t\tWorkDCTCoverageTransaction.CoverageGUID,\n\t\tWorkDCTInsuranceLine.LineType,\n\t\tWorkDCTPolicy.PolicyNumber,\n\t\tWorkDCTPolicy.PolicyVersion,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.SessionId,\n\t\tDCWCLineStaging.AnyARDIndicator,\n\t\tDCWCLineStaging.ExperienceRated,\n\t\tWorkDCTCoverageTransaction.ParentCoverageObjectId,\n\t\tWorkDCTCoverageTransaction.ParentCoverageObjectName,\n\t\tWorkDCTPolicy.PolicyEffectiveDate,\n\t\tWorkDCTPolicy.PolicyExpirationDate\n\tFROM WorkDCTPolicy\n\tINNER JOIN WorkDCTInsuranceLine\n\tINNER JOIN WorkDCTCoverageTransaction\n\tINNER JOIN WorkDCTTransactionInsuranceLineLocationBridge\n\tINNER JOIN DCWCLineStaging\n\tON WorkDCTCoverageTransaction.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId and WorkDCTTransactionInsuranceLineLocationBridge.LineId=WorkDCTInsuranceLine.LineId and WorkDCTInsuranceLine.PolicyId=WorkDCTPolicy.PolicyId and\r\n\tWorkDCTTransactionInsuranceLineLocationBridge.SessionId=DCWCLineStaging.SessionId\r\n\t and WorkDCTInsuranceLine.LineType='WorkersCompensation'\n),\nEXP_PolicyKey AS (\n\tSELECT\n\tCoverageId,\n\tCoverageGUID,\n\tSessionId,\n\tPolicyNumber AS i_PolicyNumber,\n\tPolicyVersion AS i_PolicyVersion,\n\t-- *INF*: rtrim(ltrim(IIF(ISNULL(i_PolicyNumber) or IS_SPACES(i_PolicyNumber) or LENGTH(i_PolicyNumber)=0, 'N/A', LTRIM(RTRIM(i_PolicyNumber)))))\n\trtrim(ltrim(IFF(i_PolicyNumber IS NULL OR IS_SPACES(i_PolicyNumber) OR LENGTH(i_PolicyNumber) = 0, 'N/A', LTRIM(RTRIM(i_PolicyNumber))))) AS v_PolicyNumber,\n\t-- *INF*: rtrim(ltrim(IIF(ISNULL(i_PolicyVersion), '00', LPAD(TO_CHAR(i_PolicyVersion),2,'0'))))\n\trtrim(ltrim(IFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')))) AS v_PolicyVersion,\n\tv_PolicyNumber||v_PolicyVersion AS o_PolicyKey,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tParentCoverageObjectId,\n\tParentCoverageObjectName,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate\n\tFROM SQ_STG\n),\nSQ_IL AS (\n\tSELECT DISTINCT PT.PremiumTransactionID, \r\n\tPT.CurrentSnapshotFlag, \r\n\tWPT.PremiumTransactionStageId \r\n\tFROM\r\n\tWorkpremiumtransaction WPT INNER JOIN Premiumtransaction PT ON PT.Premiumtransactionakid = WPT.Premiumtransactionakid \r\n\t       INNER JOIN Ratingcoverage RC ON RC.Ratingcoverageakid = PT.Ratingcoverageakid AND RC.Effectivedate = PT.Effectivedate \r\n\t       INNER JOIN Policycoverage PC ON RC.Policycoverageakid = PC.Policycoverageakid AND PC.Currentsnapshotflag =1\r\n\t       INNER JOIN Product P ON P.Productakid = RC.Productakid \r\n\tWHERE PT.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}' AND PT.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tAND WPT.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tAND PC.InsuranceLine = 'WorkersCompensation'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nJNR_IL_STG AS (SELECT\n\tSQ_IL.PremiumTransactionID, \n\tSQ_IL.CurrentSnapshotFlag, \n\tSQ_IL.PremiumTransactionStageId, \n\tEXP_PolicyKey.CoverageId, \n\tEXP_PolicyKey.CoverageGUID, \n\tEXP_PolicyKey.SessionId, \n\tEXP_PolicyKey.o_PolicyKey AS PolicyKey, \n\tEXP_PolicyKey.AnyARDIndicator, \n\tEXP_PolicyKey.ExperienceRated, \n\tEXP_PolicyKey.ParentCoverageObjectId, \n\tEXP_PolicyKey.ParentCoverageObjectName, \n\tEXP_PolicyKey.PolicyEffectiveDate, \n\tEXP_PolicyKey.PolicyExpirationDate\n\tFROM EXP_PolicyKey\n\tINNER JOIN SQ_IL\n\tON SQ_IL.PremiumTransactionStageId = EXP_PolicyKey.CoverageId\n),\nAGG_DuplicateRemove AS (\n\tSELECT\n\tPremiumTransactionID, \n\tCurrentSnapshotFlag, \n\tCoverageGUID, \n\tPolicyKey, \n\tCoverageId, \n\tSessionId, \n\tAnyARDIndicator, \n\tExperienceRated, \n\tParentCoverageObjectId, \n\tParentCoverageObjectName, \n\tPolicyEffectiveDate, \n\tPolicyExpirationDate\n\tFROM JNR_IL_STG\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY NULL) = 1\n),\nEXP_DefaultValue AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tCurrentSnapshotFlag AS i_CurrentSnapshotFlag,\n\tCoverageGUID AS i_CoverageGUID,\n\tCoverageId AS i_CoverageId,\n\tSessionId AS i_SessionId,\n\tPolicyKey,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\ti_CurrentSnapshotFlag AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\ti_CoverageGUID AS o_CoverageGuid,\n\ti_CoverageId AS o_CoverageId,\n\ti_SessionId AS o_SessionId,\n\tAnyARDIndicator,\n\tExperienceRated,\n\tParentCoverageObjectId,\n\tParentCoverageObjectName,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate\n\tFROM AGG_DuplicateRemove\n),\nLKP_CoverageDetailWorkersCompensation AS (\n\tSELECT\n\tPremiumTransactionID,\n\tCoverageGuid,\n\tAdmiraltyActFlag,\n\tFederalEmployersLiabilityActFlag,\n\tUSLongShoreAndHarborWorkersCompensationActFlag\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tCoverageGuid,\n\t\t\tAdmiraltyActFlag,\n\t\t\tFederalEmployersLiabilityActFlag,\n\t\t\tUSLongShoreAndHarborWorkersCompensationActFlag\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailWorkersCompensation\n\t\tWHERE SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nLKP_DCStatCodeStaging AS (\n\tSELECT\n\tDeductibleType,\n\tDeductibleBasis,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tSELECT s.ObjectId as ObjectId,\r\n\t\t\ts.SessionId as SessionId,\r\n\t\t\ts.Value as DeductibleType,\r\n\t\t\ts2.Value as DeductibleBasis\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging s\r\n\t\tinner JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging s2\r\n\t\ton s.ObjectId = s2.ObjectId\r\n\t\tand s.SessionId = s2.SessionId\r\n\t\tand s2.ObjectName = 'DC_Coverage'\r\n\t\tand s2.Type = 'DeductibleBasis'\r\n\t\tWHERE s.ObjectName = 'DC_Coverage'\r\n\t\tAND s.Type = 'DeductibleType'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY DeductibleType) = 1\n),\nLKP_DCWCCoverageManualPremiumStage AS (\n\tSELECT\n\tWC_CoverageManualPremiumId,\n\tDCWCCoverageManualPremiumStagingId,\n\tCoverageId,\n\tSessionId,\n\tAdmiraltyProgramType,\n\tFELAProgramType,\n\tUSLandHAct\n\tFROM (\n\t\tselect distinct\r\n\t\tM.DCWCCoverageManualPremiumStagingId as DCWCCoverageManualPremiumStagingId,\r\n\t\tc.CoverageId as CoverageId,\r\n\t\tISNULL(MM.WC_CoverageManualPremiumId,M.WC_CoverageManualPremiumId) as WC_CoverageManualPremiumId,\r\n\t\tc.SessionId as SessionId,\r\n\t\tcase when cc.CoverageId is null then M.AdmiraltyProgramType else MM.AdmiraltyProgramType end as AdmiraltyProgramType,\r\n\t\tcase when cc.CoverageId is null then M.FELAProgramType else MM.FELAProgramType end as FELAProgramType,\r\n\t\tcase when cc.CoverageId is null then M.USLandHAct else MM.USLandHAct end as USLandHAct,\r\n\t\tcase when cc.CoverageId is null then M.AdmiraltyProgramType else MM.AdmiraltyProgramType end as AdmiraltyProgramType \r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging c\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCCoverageManualPremiumStaging m on M.SessionId = c.SessionId and M.CoverageId = c.CoverageId\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging cc on c.ObjectId=cc.CoverageId and c.SessionId = cc.SessionId\r\n\t\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCCoverageManualPremiumStaging MM on MM.SessionId = cc.SessionId and MM.CoverageId = cc.CoverageId\r\n\t\torder by SessionId desc--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId,SessionId ORDER BY WC_CoverageManualPremiumId) = 1\n),\nLKP_DCWCStateTermStaging AS (\n\tSELECT\n\tWC_StateTermId,\n\tPeriodStartDate,\n\tPeriodEndDate,\n\tTermType,\n\tObjectName,\n\tParentCoverageObjectId,\n\tParentCoverageObjectName\n\tFROM (\n\t\tSELECT s.PeriodStartDate AS PeriodStartDate\r\n\t\t\t,s.PeriodEndDate AS PeriodEndDate\r\n\t\t\t,s.WC_StateTermId AS WC_StateTermId\r\n\t\t\t,s.TermType AS TermType\r\n\t\t\t,'DC_WC_StateTerm' AS ObjectName\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateTermStaging s\r\n\t\tORDER BY s.WC_StateTermId --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WC_StateTermId,ObjectName ORDER BY WC_StateTermId DESC) = 1\n),\nLKP_WBWCCoverageManualPremiumStage AS (\n\tSELECT\n\tWCCoverageManualPremiumId,\n\tConsentToRate,\n\tRateOverride,\n\tWC_CoverageManualPremiumId\n\tFROM (\n\t\tSELECT \n\t\t\tWCCoverageManualPremiumId,\n\t\t\tConsentToRate,\n\t\t\tRateOverride,\n\t\t\tWC_CoverageManualPremiumId\n\t\tFROM WBWCCoverageManualPremiumStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WCCoverageManualPremiumId ORDER BY WCCoverageManualPremiumId) = 1\n),\nLKP_WBWCCoverageTermStage AS (\n\tSELECT\n\tPeriodStartDate,\n\tPeriodEndDate,\n\tCoverageId,\n\tTermType,\n\tCoverageId1\n\tFROM (\n\t\tSELECT CT.PeriodStartDate AS PeriodStartDate\r\n\t\t\t,CT.PeriodEndDate AS PeriodEndDate\r\n\t\t\t,WBC.CoverageId AS CoverageId\r\n\t\t\t,CT.TermType AS TermType\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBWCCoverageTermStage CT\r\n\t\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCoverageStage WBC ON CT.WB_CoverageId = WBC.WBCoverageId\r\n\t\t\tAND ct.SessionId = WBC.SessionId\r\n\t\tORDER BY WBC.CoverageId\r\n\t\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY PeriodStartDate DESC) = 1\n),\nEXP_DetectChange AS (\n\tSELECT\n\tLKP_CoverageDetailWorkersCompensation.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailWorkersCompensation.CoverageGuid AS lkp_CoverageGuid,\n\tLKP_CoverageDetailWorkersCompensation.AdmiraltyActFlag AS lkp_AdmiraltyActFlag,\n\tLKP_CoverageDetailWorkersCompensation.FederalEmployersLiabilityActFlag AS lkp_FederalEmployersLiabilityActFlag,\n\tLKP_CoverageDetailWorkersCompensation.USLongShoreAndHarborWorkersCompensationActFlag AS lkp_USLongShoreAndHarborWorkersCompensationActFlag,\n\tEXP_DefaultValue.o_PremiumTransactionID AS PremiumTransactionID,\n\tEXP_DefaultValue.o_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\tEXP_DefaultValue.o_AuditID AS AuditID,\n\tEXP_DefaultValue.o_EffectiveDate AS EffectiveDate,\n\tEXP_DefaultValue.o_ExpirationDate AS ExpirationDate,\n\tEXP_DefaultValue.o_SourceSystemID AS SourceSystemID,\n\tEXP_DefaultValue.o_CreatedDate AS CreatedDate,\n\tEXP_DefaultValue.o_ModifiedDate AS ModifiedDate,\n\tEXP_DefaultValue.o_CoverageGuid AS CoverageGuid,\n\tLKP_DCWCCoverageManualPremiumStage.AdmiraltyProgramType AS i_AdmiraltyProgramType,\n\tLKP_DCWCCoverageManualPremiumStage.FELAProgramType AS i_FELAProgramType,\n\tLKP_DCWCCoverageManualPremiumStage.USLandHAct AS i_USLandHAct,\n\t-- *INF*: IIF(lkp_AdmiraltyActFlag='T','1','0')\n\tIFF(lkp_AdmiraltyActFlag = 'T', '1', '0') AS v_lkp_AdmiraltyActFlag,\n\t-- *INF*: IIF(lkp_FederalEmployersLiabilityActFlag='T','1','0')\n\tIFF(lkp_FederalEmployersLiabilityActFlag = 'T', '1', '0') AS v_lkp_FederalEmployersLiabilityActFlag,\n\t-- *INF*: IIF(lkp_USLongShoreAndHarborWorkersCompensationActFlag='T','1','0')\n\tIFF(lkp_USLongShoreAndHarborWorkersCompensationActFlag = 'T', '1', '0') AS v_lkp_USLongShoreAndHarborWorkersCompensationActFlag,\n\t-- *INF*: IIF(ISNULL(i_AdmiraltyProgramType),'0','1')\n\tIFF(i_AdmiraltyProgramType IS NULL, '0', '1') AS v_AdmiraltyActFlag,\n\t-- *INF*: IIF(ISNULL(i_FELAProgramType),'0','1')\n\tIFF(i_FELAProgramType IS NULL, '0', '1') AS v_FederalEmployersLiabilityActFlag,\n\t-- *INF*: IIF(i_USLandHAct='T','1','0')\n\tIFF(i_USLandHAct = 'T', '1', '0') AS v_USLongShoreAndHarborWorkersCompensationActFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_PremiumTransactionID), 'New', \r\n\t-- (lkp_CoverageGuid<>CoverageGuid\r\n\t--  OR v_lkp_AdmiraltyActFlag<>v_AdmiraltyActFlag\r\n\t--  OR v_lkp_FederalEmployersLiabilityActFlag<>v_FederalEmployersLiabilityActFlag\r\n\t--  OR v_lkp_USLongShoreAndHarborWorkersCompensationActFlag<>v_USLongShoreAndHarborWorkersCompensationActFlag), 'Update',\r\n\t-- 'No Change'\r\n\t-- ) \n\tDECODE(TRUE,\n\tlkp_PremiumTransactionID IS NULL, 'New',\n\t( lkp_CoverageGuid <> CoverageGuid OR v_lkp_AdmiraltyActFlag <> v_AdmiraltyActFlag OR v_lkp_FederalEmployersLiabilityActFlag <> v_FederalEmployersLiabilityActFlag OR v_lkp_USLongShoreAndHarborWorkersCompensationActFlag <> v_USLongShoreAndHarborWorkersCompensationActFlag ), 'Update',\n\t'No Change') AS v_ChangeFlag,\n\tv_ChangeFlag AS o_ChangeFlag,\n\tLKP_WBWCCoverageManualPremiumStage.ConsentToRate,\n\tLKP_WBWCCoverageManualPremiumStage.RateOverride,\n\t-- *INF*: IIF(ISNULL(ConsentToRate),'0',ConsentToRate)\n\tIFF(ConsentToRate IS NULL, '0', ConsentToRate) AS o_ConsentToRate,\n\t-- *INF*: IIF(ISNULL(RateOverride),0.00,RateOverride)\n\tIFF(RateOverride IS NULL, 0.00, RateOverride) AS o_RateOverride,\n\tv_AdmiraltyActFlag AS o_AdmiraltyActFlag,\n\tv_FederalEmployersLiabilityActFlag AS o_FederalEmployersLiabilityActFlag,\n\tv_USLongShoreAndHarborWorkersCompensationActFlag AS o_USLongshoreandHarborWorkersCompensationActFlag,\n\tLKP_DCWCStateTermStaging.PeriodStartDate AS lkp_st_PeriodStartDate,\n\tLKP_DCWCStateTermStaging.PeriodEndDate AS lkp_st_PeriodEndDate,\n\tLKP_DCWCStateTermStaging.TermType AS lkp_st_TermType,\n\tLKP_WBWCCoverageTermStage.PeriodStartDate AS lkp_PeriodStartDate,\n\tLKP_WBWCCoverageTermStage.PeriodEndDate AS lkp_PeriodEndDate,\n\tLKP_WBWCCoverageTermStage.TermType AS lkp_TermType,\n\tLKP_DCStatCodeStaging.DeductibleType AS lkp_DeductibleType,\n\tLKP_DCStatCodeStaging.DeductibleBasis AS lkp_DeductibleBasis,\n\t-- *INF*: DECODE(TRUE, NOT ISNULL(lkp_st_PeriodStartDate),lkp_st_PeriodStartDate,\r\n\t-- NOT ISNULL(lkp_PeriodStartDate), lkp_PeriodStartDate,PolicyEffectiveDate)\n\tDECODE(TRUE,\n\tNOT lkp_st_PeriodStartDate IS NULL, lkp_st_PeriodStartDate,\n\tNOT lkp_PeriodStartDate IS NULL, lkp_PeriodStartDate,\n\tPolicyEffectiveDate) AS o_PeriodStartDate,\n\t-- *INF*: DECODE(TRUE, NOT ISNULL(lkp_st_PeriodEndDate),lkp_st_PeriodEndDate,\r\n\t-- NOT ISNULL(lkp_PeriodEndDate), lkp_PeriodEndDate,PolicyExpirationDate)\n\tDECODE(TRUE,\n\tNOT lkp_st_PeriodEndDate IS NULL, lkp_st_PeriodEndDate,\n\tNOT lkp_PeriodEndDate IS NULL, lkp_PeriodEndDate,\n\tPolicyExpirationDate) AS o_PeriodEndDate,\n\t-- *INF*: DECODE(TRUE, NOT ISNULL(lkp_st_TermType),lkp_st_TermType,\r\n\t-- NOT ISNULL(lkp_TermType), lkp_TermType,'ORG')\n\tDECODE(TRUE,\n\tNOT lkp_st_TermType IS NULL, lkp_st_TermType,\n\tNOT lkp_TermType IS NULL, lkp_TermType,\n\t'ORG') AS o_TermType,\n\tEXP_DefaultValue.AnyARDIndicator,\n\tEXP_DefaultValue.ExperienceRated,\n\tEXP_DefaultValue.PolicyEffectiveDate,\n\tEXP_DefaultValue.PolicyExpirationDate,\n\t-- *INF*: IIF(ISNULL(lkp_DeductibleType),'00',lkp_DeductibleType)\n\tIFF(lkp_DeductibleType IS NULL, '00', lkp_DeductibleType) AS o_DeductibleType,\n\t-- *INF*: IIF(ISNULL(lkp_DeductibleBasis),'00',lkp_DeductibleBasis)\n\tIFF(lkp_DeductibleBasis IS NULL, '00', lkp_DeductibleBasis) AS o_DeductibleBasis\n\tFROM EXP_DefaultValue\n\tLEFT JOIN LKP_CoverageDetailWorkersCompensation\n\tON LKP_CoverageDetailWorkersCompensation.PremiumTransactionID = EXP_DefaultValue.o_PremiumTransactionID\n\tLEFT JOIN LKP_DCStatCodeStaging\n\tON LKP_DCStatCodeStaging.ObjectId = EXP_DefaultValue.o_CoverageId AND LKP_DCStatCodeStaging.SessionId = EXP_DefaultValue.o_SessionId\n\tLEFT JOIN LKP_DCWCCoverageManualPremiumStage\n\tON LKP_DCWCCoverageManualPremiumStage.CoverageId = EXP_DefaultValue.o_CoverageId AND LKP_DCWCCoverageManualPremiumStage.SessionId = EXP_DefaultValue.o_SessionId\n\tLEFT JOIN LKP_DCWCStateTermStaging\n\tON LKP_DCWCStateTermStaging.WC_StateTermId = EXP_DefaultValue.ParentCoverageObjectId AND LKP_DCWCStateTermStaging.ObjectName = EXP_DefaultValue.ParentCoverageObjectName\n\tLEFT JOIN LKP_WBWCCoverageManualPremiumStage\n\tON LKP_WBWCCoverageManualPremiumStage.WCCoverageManualPremiumId = LKP_DCWCCoverageManualPremiumStage.WC_CoverageManualPremiumId\n\tLEFT JOIN LKP_WBWCCoverageTermStage\n\tON LKP_WBWCCoverageTermStage.CoverageId = EXP_DefaultValue.o_CoverageId\n),\nFIL_Records AS (\n\tSELECT\n\tPremiumTransactionID, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tCoverageGuid, \n\to_ChangeFlag AS ChangeFlag, \n\to_ConsentToRate AS ConsentToRate, \n\to_RateOverride AS RateOverride, \n\to_AdmiraltyActFlag AS AdmiraltyActFlag, \n\to_FederalEmployersLiabilityActFlag AS FederalEmployersLiabilityActFlag, \n\to_USLongshoreandHarborWorkersCompensationActFlag AS USLongshoreandHarborWorkersCompensationActFlag, \n\to_PeriodStartDate AS PeriodStartDate, \n\to_PeriodEndDate AS PeriodEndDate, \n\to_TermType AS TermType, \n\tAnyARDIndicator, \n\tExperienceRated, \n\to_DeductibleType AS DeductibleType, \n\to_DeductibleBasis AS DeductibleBasis\n\tFROM EXP_DetectChange\n\tWHERE ChangeFlag='New'\n),\nTGT_CoverageDetailWorkersCompensation_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailWorkersCompensation\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, ConsentToRateFlag, RateOverride, AdmiraltyActFlag, FederalEmployersLiabilityActFlag, USLongShoreAndHarborWorkersCompensationActFlag, TermType, TermStartDate, TermEndDate, ARDIndicatorFlag, ExperienceRatedFlag, DeductibleType, DeductibleBasis)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGEGUID, \n\tConsentToRate AS CONSENTTORATEFLAG, \n\tRATEOVERRIDE, \n\tADMIRALTYACTFLAG, \n\tFEDERALEMPLOYERSLIABILITYACTFLAG, \n\tUSLongshoreandHarborWorkersCompensationActFlag AS USLONGSHOREANDHARBORWORKERSCOMPENSATIONACTFLAG, \n\tTERMTYPE, \n\tPeriodStartDate AS TERMSTARTDATE, \n\tPeriodEndDate AS TERMENDDATE, \n\tAnyARDIndicator AS ARDINDICATORFLAG, \n\tExperienceRated AS EXPERIENCERATEDFLAG, \n\tDEDUCTIBLETYPE, \n\tDEDUCTIBLEBASIS\n\tFROM FIL_Records\n),\nSQ_CoverageDetailWorkersCompensation AS (\n\tSELECT \r\n\tCDWC_ONSET.ConsentToRateFlag,\r\n\tCDWC_ONSET.RateOverride,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID,\r\n\tCDWC_ONSET.AdmiraltyActFlag,\r\n\tCDWC_ONSET.FederalEmployersLiabilityActFlag,\r\n\tCDWC_ONSET.USLongshoreandHarborWorkersCompensationActFlag \r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join CoverageDetailWorkersCompensation CDWC_ONSET\r\n\ton ( CDWC_ONSET.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join CoverageDetailWorkersCompensation CDWC_OFFSET\r\n\ton ( CDWC_OFFSET.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL.premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Offset'\r\n\tWHERE\r\n\t(CDWC_ONSET.ConsentToRateFlag <> CDWC_OFFSET.ConsentToRateFlag or \r\n\tCDWC_ONSET.RateOverride <> CDWC_OFFSET.RateOverride \r\n\tOr CDWC_ONSET.AdmiraltyActFlag <> CDWC_OFFSET.AdmiraltyActFlag \r\n\tOr CDWC_ONSET.FederalEmployersLiabilityActFlag <> CDWC_OFFSET.FederalEmployersLiabilityActFlag Or\r\n\tCDWC_ONSET.USLongshoreandHarborWorkersCompensationActFlag <> CDWC_OFFSET.USLongshoreandHarborWorkersCompensationActFlag)\n),\nExp_CoverageDetailWorkersCompensation AS (\n\tSELECT\n\tConsentToRateFlag,\n\tRateOverride,\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate,\n\tAdmiraltyActFlag,\n\tFederalEmployersLiabilityActFlag,\n\tUSLongShoreAndHarborWorkersCompensationActFlag\n\tFROM SQ_CoverageDetailWorkersCompensation\n),\nUPD_CoverageDetailWorkersCompensation AS (\n\tSELECT\n\tConsentToRateFlag, \n\tRateOverride, \n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate, \n\tAdmiraltyActFlag, \n\tFederalEmployersLiabilityActFlag, \n\tUSLongShoreAndHarborWorkersCompensationActFlag\n\tFROM Exp_CoverageDetailWorkersCompensation\n),\nTGT_CoverageDetailWorkersCompensation_Upd_Offsets AS (\n\tMERGE INTO CoverageDetailWorkersCompensation AS T\n\tUSING UPD_CoverageDetailWorkersCompensation AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.ConsentToRateFlag = S.ConsentToRateFlag, T.RateOverride = S.RateOverride, T.AdmiraltyActFlag = S.AdmiraltyActFlag, T.FederalEmployersLiabilityActFlag = S.FederalEmployersLiabilityActFlag, T.USLongShoreAndHarborWorkersCompensationActFlag = S.USLongShoreAndHarborWorkersCompensationActFlag\n),\nSQ_CoverageDetailWorkersCompensation_Deprecated AS (\n\tSELECT \r\n\tCDWC_ONSET.ConsentToRateFlag,\r\n\tCDWC_ONSET.RateOverride,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID,\r\n\tCDWC_ONSET.AdmiraltyActFlag,\r\n\tCDWC_ONSET.FederalEmployersLiabilityActFlag,\r\n\tCDWC_ONSET.USLongshoreandHarborWorkersCompensationActFlag \r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join CoverageDetailWorkersCompensation CDWC_ONSET\r\n\ton ( CDWC_ONSET.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join CoverageDetailWorkersCompensation CDWC_OFFSET\r\n\ton ( CDWC_OFFSET.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL.premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Deprecated'\r\n\tWHERE\r\n\t(CDWC_ONSET.ConsentToRateFlag <> CDWC_OFFSET.ConsentToRateFlag or \r\n\tCDWC_ONSET.RateOverride <> CDWC_OFFSET.RateOverride \r\n\tOr CDWC_ONSET.AdmiraltyActFlag <> CDWC_OFFSET.AdmiraltyActFlag \r\n\tOr CDWC_ONSET.FederalEmployersLiabilityActFlag <> CDWC_OFFSET.FederalEmployersLiabilityActFlag Or\r\n\tCDWC_ONSET.USLongshoreandHarborWorkersCompensationActFlag <> CDWC_OFFSET.USLongshoreandHarborWorkersCompensationActFlag)\n),\nExp_CoverageDetailWorkersCompensation_Deprecated AS (\n\tSELECT\n\tConsentToRateFlag,\n\tRateOverride,\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate,\n\tAdmiraltyActFlag,\n\tFederalEmployersLiabilityActFlag,\n\tUSLongShoreAndHarborWorkersCompensationActFlag\n\tFROM SQ_CoverageDetailWorkersCompensation_Deprecated\n),\nUPD_CoverageDetailWorkersCompensation_Deprecated AS (\n\tSELECT\n\tConsentToRateFlag, \n\tRateOverride, \n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate, \n\tAdmiraltyActFlag, \n\tFederalEmployersLiabilityActFlag, \n\tUSLongShoreAndHarborWorkersCompensationActFlag\n\tFROM Exp_CoverageDetailWorkersCompensation_Deprecated\n),\nTGT_CoverageDetailWorkersCompensation_Upd_Deprecated AS (\n\tMERGE INTO CoverageDetailWorkersCompensation AS T\n\tUSING UPD_CoverageDetailWorkersCompensation_Deprecated AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.ConsentToRateFlag = S.ConsentToRateFlag, T.RateOverride = S.RateOverride, T.AdmiraltyActFlag = S.AdmiraltyActFlag, T.FederalEmployersLiabilityActFlag = S.FederalEmployersLiabilityActFlag, T.USLongShoreAndHarborWorkersCompensationActFlag = S.USLongShoreAndHarborWorkersCompensationActFlag\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}