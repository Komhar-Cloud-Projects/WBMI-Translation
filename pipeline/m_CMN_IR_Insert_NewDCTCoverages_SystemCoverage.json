{
    "name": "m_CMN_IR_Insert_NewDCTCoverages_SystemCoverage",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_IR_Insert_NewDCTCoverages_SystemCoverage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_RatingCoverage AS (\n\tSELECT distinct RC.RiskType, RC.CoverageType, RC.CoverageVersion, RC.PerilGroup, RC.SubCoverageTypeCode, PC.InsuranceLine, SIL.StandardInsuranceLineCode, SIL.StandardInsuranceLineDescription\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\tINNER JOIN\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\tON RC.PolicyCoverageAKId=PC.PolicyCoverageAKId\r\n\tLEFT JOIN\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL\r\n\tON SIL.ins_line_code=PC.InsuranceLine\r\n\t-- AND source_sys_id='DCT'\r\n\tAND crrnt_snpsht_flag=1\r\n\tWHERE NOT EXISTS (\r\n\tSELECT 1 FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SystemCoverage SC\r\n\tWHERE SIL.StandardInsuranceLineCode=SC.InsuranceLineCode\r\n\tAND SC.DctRiskTypeCode=RC.RiskType\r\n\tAND SC.DctCoverageTypeCode=RC.CoverageType\r\n\tAND SC.DctPerilGroup=RC.PerilGroup\r\n\tAND SC.DctSubCoverageTypeCode=RC.SubCoverageTypeCode\r\n\tAND SC.DctCoverageVersion=RC.CoverageVersion\r\n\tAND NOT SC.ConformedCoverageId IN (-1,-99))\n),\nEXP_FormatValues AS (\n\tSELECT\n\tStandardInsuranceLineCode AS lkp_StandardInsuranceLineCode,\n\tStandardInsuranceLineDescription AS lkp_StandardInsuranceLineDescription,\n\tInsuranceLine AS i_LineType,\n\tCoverageType AS i_CoverageType,\n\tSubCoverageTypeCode AS i_SubCoverageType,\n\tRiskType AS i_RiskType,\n\tCoverageVersion AS i_CoverageVersion,\n\tPerilGroup AS i_PerilGroup,\n\t-- *INF*: IIF(IsNull(lkp_StandardInsuranceLineCode),'Line Not Found.  Source Line: ' || i_LineType, lkp_StandardInsuranceLineCode)\n\tIFF(lkp_StandardInsuranceLineCode IS NULL, 'Line Not Found.  Source Line: ' || i_LineType, lkp_StandardInsuranceLineCode) AS o_InsuranceLineCode,\n\t-- *INF*: IIF(IsNull(lkp_StandardInsuranceLineDescription), 'No Description Found For Line', lkp_StandardInsuranceLineDescription)\n\tIFF(lkp_StandardInsuranceLineDescription IS NULL, 'No Description Found For Line', lkp_StandardInsuranceLineDescription) AS o_InsuranceLineDescription,\n\t-- *INF*: IIF(IsNull(i_CoverageType) or IS_SPACES(i_CoverageType), 'N/A', rtrim(ltrim(i_CoverageType)))\n\tIFF(i_CoverageType IS NULL OR IS_SPACES(i_CoverageType), 'N/A', rtrim(ltrim(i_CoverageType))) AS o_CoverageType,\n\t-- *INF*: IIF(IsNull(i_SubCoverageType) or IS_SPACES(i_SubCoverageType), 'N/A', rtrim(ltrim(i_SubCoverageType)))\r\n\t-- \n\tIFF(i_SubCoverageType IS NULL OR IS_SPACES(i_SubCoverageType), 'N/A', rtrim(ltrim(i_SubCoverageType))) AS o_SubCoverageType,\n\t-- *INF*: IIF(IsNull(i_RiskType) or IS_SPACES(i_RiskType), 'N/A', rtrim(ltrim(i_RiskType)))\n\tIFF(i_RiskType IS NULL OR IS_SPACES(i_RiskType), 'N/A', rtrim(ltrim(i_RiskType))) AS o_RiskType,\n\t-- *INF*: IIF(IsNull(i_CoverageVersion) or IS_SPACES(i_CoverageVersion), 'N/A', rtrim(ltrim(i_CoverageVersion)))\r\n\t-- \n\tIFF(i_CoverageVersion IS NULL OR IS_SPACES(i_CoverageVersion), 'N/A', rtrim(ltrim(i_CoverageVersion))) AS o_CoverageVersion,\n\t-- *INF*: IIF(IsNull(i_PerilGroup) or IS_SPACES(i_PerilGroup), 'N/A', rtrim(ltrim(i_PerilGroup)))\r\n\t-- \n\tIFF(i_PerilGroup IS NULL OR IS_SPACES(i_PerilGroup), 'N/A', rtrim(ltrim(i_PerilGroup))) AS o_PerilGroup\n\tFROM SQ_RatingCoverage\n),\nAgg_Distinct AS (\n\tSELECT\n\to_InsuranceLineCode AS InsuranceLineCode, \n\to_InsuranceLineDescription AS InsuranceLineDescription, \n\to_CoverageType AS CoverageType, \n\to_SubCoverageType AS SubCoverageType, \n\to_RiskType AS RiskType, \n\to_CoverageVersion AS CoverageVersion, \n\to_PerilGroup AS PerilGroup\n\tFROM EXP_FormatValues\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode, InsuranceLineDescription, CoverageType, SubCoverageType, RiskType, CoverageVersion, PerilGroup ORDER BY NULL) = 1\n),\nLKP_SystemCoverage_IR AS (\n\tSELECT\n\tSystemCoverageId,\n\tConformedCoverageId,\n\tInsuranceLineCode,\n\tDctCoverageTypeCode,\n\tDctSubCoverageTypeCode,\n\tDctRiskTypeCode,\n\tDctCoverageVersion,\n\tDctPerilGroup\n\tFROM (\n\t\tSELECT \n\t\t\tSystemCoverageId,\n\t\t\tConformedCoverageId,\n\t\t\tInsuranceLineCode,\n\t\t\tDctCoverageTypeCode,\n\t\t\tDctSubCoverageTypeCode,\n\t\t\tDctRiskTypeCode,\n\t\t\tDctCoverageVersion,\n\t\t\tDctPerilGroup\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SystemCoverage\n\t\tWHERE SourceSystemId = 'DCT'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctCoverageTypeCode,DctSubCoverageTypeCode,DctRiskTypeCode,DctCoverageVersion,DctPerilGroup ORDER BY SystemCoverageId) = 1\n),\nEXP_CheckForNew AS (\n\tSELECT\n\tLKP_SystemCoverage_IR.SystemCoverageId AS lkp_SystemCoverageId,\n\tLKP_SystemCoverage_IR.ConformedCoverageId AS lkp_ConformedCoverageId,\n\tAgg_Distinct.InsuranceLineCode AS i_InsuranceLineCode,\n\tAgg_Distinct.InsuranceLineDescription AS i_InsuranceLineDescription,\n\tAgg_Distinct.CoverageType AS i_CoverageType,\n\tAgg_Distinct.SubCoverageType AS i_SubCoverageType,\n\tAgg_Distinct.RiskType AS i_RiskType,\n\tAgg_Distinct.CoverageVersion AS i_CoverageVersion,\n\tAgg_Distinct.PerilGroup AS i_PerilGroup,\n\t-- *INF*: IIF(IsNull(lkp_SystemCoverageId), 'Insert', 'Ignore')\n\tIFF(lkp_SystemCoverageId IS NULL, 'Insert', 'Ignore') AS o_InsertOrIgnore,\n\t-- *INF*: IIF(IsNull(lkp_ConformedCoverageId), -99, lkp_ConformedCoverageId)\n\tIFF(lkp_ConformedCoverageId IS NULL, - 99, lkp_ConformedCoverageId) AS o_ConformedCoverageId,\n\t'DCT' AS o_SourceSystemId,\n\tsysdate AS o_CurrentDate,\n\t'UNK' AS o_UnassignedCode,\n\t-- *INF*: 'Value not assigned (NEW)'\n\t'Value not assigned (NEW)' AS o_UnassignedDescription,\n\t'N/A' AS o_NACode,\n\t'Not Applicable' AS o_NADescription,\n\t'N/A' AS o_ISOMajorCrimeGroup\n\tFROM Agg_Distinct\n\tLEFT JOIN LKP_SystemCoverage_IR\n\tON LKP_SystemCoverage_IR.InsuranceLineCode = Agg_Distinct.InsuranceLineCode AND LKP_SystemCoverage_IR.DctCoverageTypeCode = Agg_Distinct.CoverageType AND LKP_SystemCoverage_IR.DctSubCoverageTypeCode = Agg_Distinct.SubCoverageType AND LKP_SystemCoverage_IR.DctRiskTypeCode = Agg_Distinct.RiskType AND LKP_SystemCoverage_IR.DctCoverageVersion = Agg_Distinct.CoverageVersion AND LKP_SystemCoverage_IR.DctPerilGroup = Agg_Distinct.PerilGroup\n),\nRTR_MissingCoveragesOnly AS (\n\tSELECT\n\ti_InsuranceLineCode AS InsuranceLineCode,\n\ti_InsuranceLineDescription AS InsuranceLineDescription,\n\ti_CoverageType AS CoverageType,\n\ti_SubCoverageType AS SubCoverageType,\n\ti_RiskType AS RiskType,\n\ti_CoverageVersion AS CoverageVersion,\n\ti_PerilGroup AS PerilGroup,\n\to_InsertOrIgnore AS InsertOrIgnore,\n\to_ConformedCoverageId AS ConformedCoverageId,\n\to_SourceSystemId AS SourceSystemId,\n\to_CurrentDate AS CurrentDate,\n\to_UnassignedCode AS UnassignedCode,\n\to_UnassignedDescription AS UnassignedDescription,\n\to_NACode AS NACode,\n\to_NADescription AS NADescription,\n\to_ISOMajorCrimeGroup AS ISOMajorCrimeGroup\n\tFROM EXP_CheckForNew\n),\nRTR_MissingCoveragesOnly_Insert AS (SELECT * FROM RTR_MissingCoveragesOnly WHERE InsertOrIgnore='Insert'),\nRTR_MissingCoveragesOnly_File AS (SELECT * FROM RTR_MissingCoveragesOnly WHERE IN(ConformedCoverageId,-1,-99)),\nUPDTRANS AS (\n\tSELECT\n\tInsuranceLineCode, \n\tInsuranceLineDescription, \n\tCoverageType, \n\tSubCoverageType, \n\tRiskType, \n\tCoverageVersion, \n\tPerilGroup, \n\tConformedCoverageId, \n\tSourceSystemId, \n\tCurrentDate, \n\tNACode AS o_NACode, \n\tNADescription AS o_NADescription, \n\tISOMajorCrimeGroup\n\tFROM RTR_MissingCoveragesOnly_Insert\n),\nSystemCoverage_InsertNew1 AS (\n\tSET QUOTED_IDENTIFIER ON;\r\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.SystemCoverage(CreatedDate,ModifiedDate,ConformedCoverageId,InsuranceLineCode,InsuranceLineDescription,SourceSystemId,DctRiskTypeCode,DctCoverageTypeCode,PmsRiskUnitGroupCode,PmsRiskUnitGroupDescription,PmsRiskUnitCode,PmsRiskUnitDescription,PmsMajorPerilCode,PmsMajorPerilDescription,PmsProductTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion,LossHistoryCode,LossHistoryDescription,ISOMajorCrimeGroup\r\n\t) \n\tSELECT S.CreatedDate,S.ModifiedDate,S.ConformedCoverageId,S.InsuranceLineCode,S.InsuranceLineDescription,S.SourceSystemId,S.DctRiskTypeCode,S.DctCoverageTypeCode,S.PmsRiskUnitGroupCode,S.PmsRiskUnitGroupDescription,S.PmsRiskUnitCode,S.PmsRiskUnitDescription,S.PmsMajorPerilCode,S.PmsMajorPerilDescription, S.PmsProductTypeCode,S.DctPerilGroup,S.DctSubCoverageTypeCode,S.DctCoverageVersion,S.LossHistoryCode,S.LossHistoryDescription,S.ISOMajorCrimeGroup\n\tFROM UPDTRANS S\n),\nReportNewCoverageCombinations AS (\n\tINSERT INTO NewCoverageCombinations\n\t(CoverageSummaryCode, CoverageSummaryDescription, CoverageGroupCode, CoverageGroupDescription, CoverageCode, CoverageDescription, RatedCoverageCode, RatedCoverageDescription, InsuranceLineCode, InsuranceLineDescription, SourceSystemId, DctRiskTypeCode, DctCoverageTypeCode, DctSubCoverageTypeCode, DCTPerilGroup, DctCoverageVersion, PmsRiskUnitGroupCode, PmsRiskUnitGroupDescription, PmsRiskUnitCode, PmsRiskUnitDescription, PmsMajorPerilCode, PmsMajorPerilDescription, PmsProductTypeCode, LossHistoryCode, LossHistoryDescription)\n\tSELECT \n\tUnassignedCode AS COVERAGESUMMARYCODE, \n\tUnassignedDescription AS COVERAGESUMMARYDESCRIPTION, \n\tUnassignedCode AS COVERAGEGROUPCODE, \n\tUnassignedDescription AS COVERAGEGROUPDESCRIPTION, \n\tUnassignedCode AS COVERAGECODE, \n\tUnassignedDescription AS COVERAGEDESCRIPTION, \n\tUnassignedCode AS RATEDCOVERAGECODE, \n\tUnassignedDescription AS RATEDCOVERAGEDESCRIPTION, \n\tINSURANCELINECODE, \n\tINSURANCELINEDESCRIPTION, \n\tSOURCESYSTEMID, \n\tRiskType AS DCTRISKTYPECODE, \n\tCoverageType AS DCTCOVERAGETYPECODE, \n\tSubCoverageType AS DCTSUBCOVERAGETYPECODE, \n\tPerilGroup AS DCTPERILGROUP, \n\tCoverageVersion AS DCTCOVERAGEVERSION, \n\tNACode AS PMSRISKUNITGROUPCODE, \n\tNACode AS PMSRISKUNITGROUPDESCRIPTION, \n\tNACode AS PMSRISKUNITCODE, \n\tNACode AS PMSRISKUNITDESCRIPTION, \n\tNACode AS PMSMAJORPERILCODE, \n\tNACode AS PMSMAJORPERILDESCRIPTION, \n\tNACode AS PMSPRODUCTTYPECODE, \n\tNACode AS LOSSHISTORYCODE, \n\tNACode AS LOSSHISTORYDESCRIPTION\n\tFROM RTR_MissingCoveragesOnly_File\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246503"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905511"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604101"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:10:23"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:27:23"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_InsuranceReference_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "DBCONNECTION_IL": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Policy"
            },
            "SOURCESYSTEMID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "PMSUCCESSEMAILUSER": {
                "type": "string",
                "defaultValue": "DIntegration@wbmi.com;dgovernance@wbmi.com;fschulz@wbmi.com;mvlasak@wbmi.com"
            },
            "EMAIL_SUBJECT": {
                "type": "string",
                "defaultValue": "Todays Production Conformed Coverages"
            }
        },
        "folder": {
            "name": "Common DataWarehouse/"
        },
        "annotations": []
    }
}