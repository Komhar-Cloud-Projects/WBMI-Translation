{
    "name": "s_m_FEED_DCT_FIS_CustomerDataFile",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_DCT_FIS_CustomerDataFile",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_BIL_AccountActivity AS (\n\tSELECT\n\t\tAccountActivityId,\n\t\tModifiedUserId,\n\t\tModifiedDate,\n\t\tAccountId,\n\t\tActivitySource,\n\t\tProcessedStatusCode,\n\t\tErrorDescription,\n\t\tBankingSystemCode\n\tFROM WB_BIL_AccountActivity\n\tWHERE WB_BIL_AccountActivity.BankingSystemCode = 'FIS' AND WB_BIL_AccountActivity.ProcessedStatusCode = 'N' @{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Batch_WebService AS (\n\tSELECT\n\tAccountActivityId,\n\t-- *INF*: IIF(ISNULL(var_SequenceNumber), 0, var_SequenceNumber + 1)\n\tIFF(var_SequenceNumber IS NULL, 0, var_SequenceNumber + 1) AS var_SequenceNumber,\n\t-- *INF*: IIF(ISNULL(var_BatchNumber),\r\n\t--  1, \r\n\t--  IIF(MOD(var_SequenceNumber, @{pipeline().parameters.DUCKCREEKFACADESERVICE_BATCHSIZE})  != 1,\r\n\t--   var_BatchNumber,\r\n\t--   var_BatchNumber + 1))\n\tIFF(\n\t    var_BatchNumber IS NULL, 1,\n\t    IFF(\n\t        MOD(var_SequenceNumber, @{pipeline().parameters.DUCKCREEKFACADESERVICE_BATCHSIZE}) != 1, var_BatchNumber,\n\t        var_BatchNumber + 1\n\t    )\n\t) AS var_BatchNumber,\n\tvar_SequenceNumber AS out_SequenceNumber,\n\tvar_BatchNumber AS out_BatchNumber,\n\t1 AS testNumber\n\tFROM SQ_WB_BIL_AccountActivity\n),\nAGG_EnvID_ByBatchID AS (\n\tSELECT\n\tout_BatchNumber\n\tFROM EXP_Batch_WebService\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY out_BatchNumber ORDER BY NULL) = 1\n),\nGetFisCustomerDataFile AS (-- GetFisCustomerDataFile\n\n\t##############################################\n\n\t# TODO: Place holder for Custom transformation\n\n\t##############################################\n),\nEXP_ACR_Output AS (\n\tSELECT\n\ttns3_OriginalAccountNumber AS OriginalAccountNumber,\n\ttns3_OriginalServiceId AS OriginalServiceId,\n\ttns3_NewAccountNumber AS NewAccountNumber,\n\ttns3_NewServiceId AS NewServiceId\n\tFROM GetFisCustomerDataFile\n),\nEXP_PARSE_ACR AS (\n\tSELECT\n\tOriginalAccountNumber,\n\tOriginalServiceId,\n\tNewAccountNumber,\n\tNewServiceId,\n\t'D' AS DetailIndicator,\n\t-- *INF*: IIF(NOT ISNULL(OriginalAccountNumber) AND  NOT ISNULL(NewAccountNumber),'Y','N')\n\tIFF(OriginalAccountNumber IS NULL AND NewAccountNumber IS NOT NOT NULL, 'Y', 'N') AS validACR,\n\t-- *INF*: TO_CHAR(SESSSTARTTIME,'YYYYMMDD_hhmmss')\n\tTO_CHAR(SESSSTARTTIME, 'YYYYMMDD_hhmmss') AS ACRBatchId,\n\t-- *INF*: IIF(NOT ISNULL(OriginalAccountNumber) AND  NOT ISNULL(NewAccountNumber),v_counter_ACR+1,0)\r\n\t-- \r\n\t-- -- add null check in case we get empty files\n\tIFF(\n\t    OriginalAccountNumber IS NULL AND NewAccountNumber IS NOT NOT NULL, v_counter_ACR + 1, 0\n\t) AS v_counter_ACR,\n\tv_counter_ACR AS o_counter_ACR\n\tFROM EXP_ACR_Output\n),\nFIL_ValidACR AS (\n\tSELECT\n\tDetailIndicator AS Record_Indicator, \n\tOriginalAccountNumber, \n\tOriginalServiceId, \n\tNewAccountNumber, \n\tNewServiceId, \n\tvalidACR\n\tFROM EXP_PARSE_ACR\n\tWHERE validACR = 'Y'\n),\nFIS_ARF_Detail AS (\n\tINSERT INTO FIS_ARF_Detail\n\t(Record_Indicator, OriginalAccountNumber, OriginalServiceId, NewAccountNumber, NewServiceId)\n\tSELECT \n\tRECORD_INDICATOR, \n\tORIGINALACCOUNTNUMBER, \n\tORIGINALSERVICEID, \n\tNEWACCOUNTNUMBER, \n\tNEWSERVICEID\n\tFROM FIL_ValidACR\n),\nEXP_WS_Output AS (\n\tSELECT\n\ttns3_AccountId AS AccountId,\n\ttns3_AccountNumber AS AccountNumber,\n\ttns3_BusinessName AS BusinessName,\n\ttns3_CustomerType AS CustomerType,\n\ttns3_Balance AS Balance,\n\ttns3_InvoiceNumber AS InvoiceNumber,\n\ttns3_InvoiceDueDate AS InvoiceDueDate,\n\ttns3_CreditCardAccepted AS CreditCardAccepted,\n\ttns3_BankAccountAccepted AS BankAccountAccepted,\n\ttns3_FirstTimePin AS FirstTimePin,\n\ttns3_LocationAddressLine1 AS LocationAddressLine1,\n\ttns3_LocationAddressLine2 AS LocationAddressLine2,\n\ttns3_LocationCity AS LocationCity,\n\ttns3_LocationStateCode AS LocationStateCode,\n\ttns3_ServiceCode AS ServiceCode,\n\ttns3_Strategicprofitcenter AS Strategicprofitcenter,\n\ttns3_Signaturedebitallowed AS Signaturedebitallowed,\n\ttns3_LastPaymentDate AS LastPaymentDate,\n\ttns3_TotalAccountBalance AS TotalAccountBalance,\n\ttns3_LastPaymentAmount AS LastPaymentAmount,\n\ttns3_NewBillDrop AS NewBillDrop,\n\ttns3_NewBillDropDate AS NewBillDropDate,\n\ttns3_TotalAmountDue AS TotalAmountDue,\n\ttns3_DueDate AS DueDate,\n\ttns3_AccountActivityId0,\n\ttns3_AmountDue\n\tFROM GetFisCustomerDataFile\n),\nEXP_Match_TO_FIS_Fields AS (\n\tSELECT\n\t-- *INF*: TO_CHAR(SESSSTARTTIME,'YYYYMMDD_hhmmss')\n\tTO_CHAR(SESSSTARTTIME, 'YYYYMMDD_hhmmss') AS Batch_Id,\n\t'D' AS Record_Indicator,\n\tServiceCode AS Service_Ext_Code,\n\tAccountNumber AS Primary_Account_Id,\n\tFirstTimePin AS Secondary_Id,\n\tTotalAmountDue AS Display_Info_1,\n\t'\"'||Display_Info_1||'\"' AS o_Display_Info_1,\n\tDueDate AS Display_Info_2,\n\t'\"'||Display_Info_2||'\"' AS o_Display_Info_2,\n\tTotalAccountBalance AS Display_Info_3,\n\t'\"'||Display_Info_3||'\"' AS o_Display_Info_3,\n\tLastPaymentAmount AS Display_Info_4,\n\t'\"'||Display_Info_4||'\"' AS o_Display_Info_4,\n\tLastPaymentDate AS Display_Info_5,\n\t'\"'||Display_Info_5||'\"' AS o_Display_Info_5,\n\ttns3_AmountDue AS Total_Amount_Due,\n\tInvoiceDueDate AS i_InvoiceDueDate,\n\t-- *INF*: TO_CHAR(i_InvoiceDueDate,'yyyyMMdd')\n\tTO_CHAR(i_InvoiceDueDate, 'yyyyMMdd') AS o_Date_Due,\n\tCreditCardAccepted AS Credit_Card_Allowed,\n\tBankAccountAccepted AS ACH_Allowed,\n\tCustomerType AS Customer_Type,\n\tBusinessName AS Business_Name___Full_Name,\n\t'\"'||Business_Name___Full_Name||'\"' AS o_BusinessNameFullName,\n\tLocationAddressLine1 AS Address_Line_1,\n\t'\"'||Address_Line_1 ||'\"' AS o_Address_Line_1,\n\tLocationAddressLine2 AS Address_Line_2,\n\t'\"' || Address_Line_2 || '\"' AS o_Address_Line_2,\n\tLocationCity AS City,\n\t'\"' || City || '\"' AS o_City,\n\tLocationStateCode AS State,\n\tFirstTimePin AS ZIP_Postal_Code,\n\tInvoiceNumber AS Invoice___PO_Number,\n\tAccountId AS Insert_Code,\n\tStrategicprofitcenter AS Custom_Account_Category,\n\tNewBillDrop AS New_Bill_Drop,\n\tNewBillDropDate AS i_NewBillDropDate,\n\t-- *INF*: TO_CHAR(i_NewBillDropDate,'yyyyMMdd')\n\tTO_CHAR(i_NewBillDropDate, 'yyyyMMdd') AS o_New_Bill_Drop_Date,\n\tSignaturedebitallowed AS Signature_Debit__Allowed,\n\t'' AS DefaultEmptyString,\n\t-- *INF*: IIF(NOT ISNULL(Primary_Account_Id),v_counter+1,0)\r\n\t-- \r\n\t-- -- add null check in case we get empty files\n\tIFF(Primary_Account_Id IS NOT NULL, v_counter + 1, 0) AS v_counter,\n\tv_counter AS o_counter\n\tFROM EXP_WS_Output\n),\nAGG_Count_Records AS (\n\tSELECT\n\tBatch_Id,\n\to_counter AS counter,\n\t-- *INF*: TO_CHAR(COUNT(counter))\n\tTO_CHAR(COUNT(counter)) AS Number_Of_Records\n\tFROM EXP_Match_TO_FIS_Fields\n\tGROUP BY Batch_Id\n),\nEXP_Output_Header_Trailer AS (\n\tSELECT\n\tBatch_Id,\n\t'H' AS Record_Indicator_Header,\n\t'T' AS Record_Indicator_Trailer,\n\t'723021300' AS Biller_Id,\n\tNumber_Of_Records,\n\t'' AS DefaultEmptyString,\n\t'WBM' AS CustomerIdentifier,\n\t'ACR' AS FileIdentifier,\n\t-- *INF*: TO_CHAR(SESSSTARTTIME,'YYYYMMDDhhmm')\n\tTO_CHAR(SESSSTARTTIME, 'YYYYMMDDhhmm') AS DateGenerated,\n\t0 AS DefaultARFTrailerCount\n\tFROM AGG_Count_Records\n),\nFIS_ARF_Detail_Header AS (\n\tINSERT INTO FIS_ARF_Detail_Header\n\t(RecordType, CustomerIdentifier, FileTypeIdentifier, DateGenerated)\n\tSELECT \n\tRecord_Indicator_Header AS RECORDTYPE, \n\tCUSTOMERIDENTIFIER, \n\tFileIdentifier AS FILETYPEIDENTIFIER, \n\tDATEGENERATED\n\tFROM EXP_Output_Header_Trailer\n),\nAGG_Count_ACR AS (\n\tSELECT\n\tACRBatchId AS Batch_Id,\n\to_counter_ACR AS counter_ACR,\n\t-- *INF*: COUNT(counter_ACR)\n\tCOUNT(counter_ACR) AS NumberOfACRRecords\n\tFROM EXP_PARSE_ACR\n\tGROUP BY \n),\nUnion_ARF_TrailerCount AS (\n\tSELECT counter_ACR\n\tFROM AGG_Count_ACR\n\tUNION\n\tSELECT DefaultARFTrailerCount AS counter_ACR\n\tFROM EXP_Output_Header_Trailer\n),\nEXP_Legit_Trailer AS (\n\tSELECT\n\t'T' AS RecordIndicator,\n\tcounter_ACR,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(counter_ACR),0,\r\n\t-- counter_ACR)\n\tDECODE(\n\t    TRUE,\n\t    counter_ACR IS NULL, 0,\n\t    counter_ACR\n\t) AS o_counter_ACR\n\tFROM Union_ARF_TrailerCount\n),\nAGG_Pick_Trailer AS (\n\tSELECT\n\tRecordIndicator,\n\to_counter_ACR AS counter_ACR,\n\t-- *INF*: MAX(counter_ACR)\n\tMAX(counter_ACR) AS max_counter,\n\t-- *INF*: TO_CHAR(MAX(counter_ACR))\n\tTO_CHAR(MAX(counter_ACR)) AS ARFCounter\n\tFROM EXP_Legit_Trailer\n\tGROUP BY RecordIndicator\n),\nEXP_ARF_Trlr AS (\n\tSELECT\n\tRecordIndicator,\n\tARFCounter\n\tFROM AGG_Pick_Trailer\n),\nFIS_ARF_Detail_Trailer AS (\n\tINSERT INTO FIS_ARF_Detail_Trailer\n\t(RecordIndicator, NumberOfRecords)\n\tSELECT \n\tRECORDINDICATOR, \n\tARFCounter AS NUMBEROFRECORDS\n\tFROM EXP_ARF_Trlr\n),\nFIL_LogError AS (\n\tSELECT\n\ttns3_ErrorMessage\n\tFROM GetFisCustomerDataFile\n\tWHERE NOT ISNULL(tns3_ErrorMessage)\n),\nEXP_LogError AS (\n\tSELECT\n\ttns3_ErrorMessage,\n\t-- *INF*: --IIF(NOT ISNULL(tns3_ErrorMessage),ERROR(tns3_ErrorMessage),'')\n\t'' AS ForceFail\n\tFROM FIL_LogError\n),\nErrorFile AS (\n\tINSERT INTO ServiceError\n\t(ErrorMessage)\n\tSELECT \n\ttns3_ErrorMessage AS ERRORMESSAGE\n\tFROM EXP_LogError\n),\nEXP_WB_BIL_AccountActivity_Update AS (\n\tSELECT\n\ttns3_AccountActivityId0 AS AccountActivityId,\n\t@{pipeline().parameters.MODIFIEDUSERNAME} AS out_ModifiedUserId,\n\tSYSDATE AS out_ModifiedDate,\n\t'I' AS out_Status\n\tFROM EXP_WS_Output\n),\nUPD_WB_BIL_AccountActivity AS (\n\tSELECT\n\tAccountActivityId, \n\tout_ModifiedUserId, \n\tout_ModifiedDate, \n\tout_Status\n\tFROM EXP_WB_BIL_AccountActivity_Update\n),\nWB_BIL_AccountActivity_Update AS (\n\tMERGE INTO WB_BIL_AccountActivity AS T\n\tUSING UPD_WB_BIL_AccountActivity AS S\n\tON T.AccountActivityId = S.AccountActivityId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedUserId = S.out_ModifiedUserId, T.ModifiedDate = S.out_ModifiedDate, T.ProcessedStatusCode = S.out_Status\n),\nFIS_CDF_Detail_Trailer1 AS (\n\tINSERT INTO FIS_CDF_Detail_Trailer\n\t(Batch_Id, Record_Indicator, Number_Of_Records)\n\tSELECT \n\tBATCH_ID, \n\tRecord_Indicator_Trailer AS RECORD_INDICATOR, \n\tNUMBER_OF_RECORDS\n\tFROM EXP_Output_Header_Trailer\n),\nFIS_CDF_Detail1 AS (\n\tINSERT INTO FIS_CDF_Detail\n\t(Batch_Id, Record_Indicator, Service_Ext_Code, Primary_Account_Id, Secondary_Id, Additional_Authentication_Id, Display_Info_1, Display_Info_2, Display_Info_3, Display_Info_4, Display_Info_5, Display_Info_6, Total_Amount_Due, Date_Due, Pre_fill_1, Pre_fill_2, Pre_fill_3, Payment_Future_Placeholder, Credit_Card_Allowed, ACH_Allowed, Customer_Type, Last_Name, First_Name, Business_Name_/_Full_Name, Secondary_Name_/_Joint_holder_Name, Address_Line_1, Address_Line_2, City, State, ZIP/Postal_Code, Day_time_telephone, E_mail, Marketing_URL, Detailed_Bill_URL, Sales_Tax_Amount, Pre_Fill_Field, Invoice_/_PO_Number, Insert_Code, Custom_Account_Category, New_Bill_Drop, New_Bill_Drop_Date, Bill_Amount_1, Bill_Amount_2, Bill_Amount_3, Bill_Amount_4, Signature_Debit__Allowed, Payment_Amount__Future_Use, Payment_Flag_Future_Use)\n\tSELECT \n\tBATCH_ID, \n\tRECORD_INDICATOR, \n\tSERVICE_EXT_CODE, \n\tPRIMARY_ACCOUNT_ID, \n\tSECONDARY_ID, \n\tDefaultEmptyString AS ADDITIONAL_AUTHENTICATION_ID, \n\to_Display_Info_1 AS DISPLAY_INFO_1, \n\to_Display_Info_2 AS DISPLAY_INFO_2, \n\to_Display_Info_3 AS DISPLAY_INFO_3, \n\to_Display_Info_4 AS DISPLAY_INFO_4, \n\to_Display_Info_5 AS DISPLAY_INFO_5, \n\tDefaultEmptyString AS DISPLAY_INFO_6, \n\tTOTAL_AMOUNT_DUE, \n\to_Date_Due AS DATE_DUE, \n\tDefaultEmptyString AS PRE_FILL_1, \n\tDefaultEmptyString AS PRE_FILL_2, \n\tDefaultEmptyString AS PRE_FILL_3, \n\tDefaultEmptyString AS PAYMENT_FUTURE_PLACEHOLDER, \n\tCREDIT_CARD_ALLOWED, \n\tACH_ALLOWED, \n\tCUSTOMER_TYPE, \n\tDefaultEmptyString AS LAST_NAME, \n\tDefaultEmptyString AS FIRST_NAME, \n\to_BusinessNameFullName AS BUSINESS_NAME_/_FULL_NAME, \n\tDefaultEmptyString AS SECONDARY_NAME_/_JOINT_HOLDER_NAME, \n\to_Address_Line_1 AS ADDRESS_LINE_1, \n\to_Address_Line_2 AS ADDRESS_LINE_2, \n\to_City AS CITY, \n\tSTATE, \n\tZIP_Postal_Code AS ZIP/POSTAL_CODE, \n\tDefaultEmptyString AS DAY_TIME_TELEPHONE, \n\tDefaultEmptyString AS E_MAIL, \n\tDefaultEmptyString AS MARKETING_URL, \n\tDefaultEmptyString AS DETAILED_BILL_URL, \n\tDefaultEmptyString AS SALES_TAX_AMOUNT, \n\tDefaultEmptyString AS PRE_FILL_FIELD, \n\tInvoice___PO_Number AS INVOICE_/_PO_NUMBER, \n\tINSERT_CODE, \n\tCUSTOM_ACCOUNT_CATEGORY, \n\tNEW_BILL_DROP, \n\to_New_Bill_Drop_Date AS NEW_BILL_DROP_DATE, \n\tDefaultEmptyString AS BILL_AMOUNT_1, \n\tDefaultEmptyString AS BILL_AMOUNT_2, \n\tDefaultEmptyString AS BILL_AMOUNT_3, \n\tDefaultEmptyString AS BILL_AMOUNT_4, \n\tSIGNATURE_DEBIT__ALLOWED, \n\tDefaultEmptyString AS PAYMENT_AMOUNT__FUTURE_USE, \n\tDefaultEmptyString AS PAYMENT_FLAG_FUTURE_USE\n\tFROM EXP_Match_TO_FIS_Fields\n),\nFIS_CDF_Detail_Header1 AS (\n\tINSERT INTO FIS_CDF_Detail_Header\n\t(Batch_Id, Record_Indicator, Date_Generated, Biller_Id)\n\tSELECT \n\tBATCH_ID, \n\tRecord_Indicator_Header AS RECORD_INDICATOR, \n\tDefaultEmptyString AS DATE_GENERATED, \n\tBILLER_ID\n\tFROM EXP_Output_Header_Trailer\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DUCKCREEKFACADESERVICE_BATCHSIZE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "MODIFIEDUSERNAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "BillingDataServices/"
        },
        "annotations": []
    }
}