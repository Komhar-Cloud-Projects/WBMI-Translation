{
    "name": "s_m_CLM_DM_LOAD_Claim_Bank_Payment",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Claim_Bank_Payment",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_bank_file_stage AS (\n\tSELECT\n\t\tbank_file_stage_id,\n\t\tws_type,\n\t\tws_bank_nbr,\n\t\tws_acct_nbr,\n\t\tws_trans_type,\n\t\tws_check_nbr,\n\t\tws_amount,\n\t\tws_trans_code,\n\t\tws_trans_date,\n\t\tws_control_nbr,\n\t\tws_trans_status,\n\t\tws_total_cr_amount,\n\t\tws_total_cr_count,\n\t\tws_total_db_amount,\n\t\tws_total_db_count,\n\t\tws_processing_date,\n\t\tws_cycle_to_date_amount,\n\t\tws_balance_sign,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id\n\tFROM bank_file_stage\n),\nEXP_Source AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS O_audit_id,\n\tsysdate AS O_eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS O_eff_to_date,\n\tsysdate AS O_created_date,\n\tsysdate AS O_modified_date,\n\tws_type,\n\tws_bank_nbr,\n\tws_acct_nbr,\n\tws_trans_type,\n\tws_check_nbr,\n\tws_amount,\n\tws_trans_code,\n\tws_trans_date,\n\tws_trans_status,\n\tws_total_db_amount,\n\tws_total_db_count,\n\t-- *INF*: IIF(ws_type = 'D' AND ws_trans_type = 'K', ROUND(v_total_db_amount_chk + ws_amount,2), v_total_db_amount_chk)\n\tIFF(ws_type = 'D' \n\t\tAND ws_trans_type = 'K',\n\t\tROUND(v_total_db_amount_chk + ws_amount, 2\n\t\t),\n\t\tv_total_db_amount_chk\n\t) AS v_total_db_amount_chk,\n\t-- *INF*: IIF(ws_type = 'D' AND ws_trans_type = 'K', v_total_db_count_chk +  1, v_total_db_count_chk)\n\tIFF(ws_type = 'D' \n\t\tAND ws_trans_type = 'K',\n\t\tv_total_db_count_chk + 1,\n\t\tv_total_db_count_chk\n\t) AS v_total_db_count_chk,\n\t-- *INF*: IIF(ws_type = 'T' AND v_total_db_amount_chk != ws_total_db_amount, 'N','Y')\n\tIFF(ws_type = 'T' \n\t\tAND v_total_db_amount_chk != ws_total_db_amount,\n\t\t'N',\n\t\t'Y'\n\t) AS v_db_amt_check,\n\t-- *INF*: IIF(ws_type = 'T' AND v_total_db_count_chk != ws_total_db_count, 'N','Y')\n\tIFF(ws_type = 'T' \n\t\tAND v_total_db_count_chk != ws_total_db_count,\n\t\t'N',\n\t\t'Y'\n\t) AS v_db_cnt_check\n\tFROM SQ_bank_file_stage\n),\nFLT_Source_Rows AS (\n\tSELECT\n\tO_audit_id, \n\tO_eff_from_date, \n\tO_eff_to_date, \n\tO_created_date, \n\tO_modified_date, \n\tws_type, \n\tws_bank_nbr, \n\tws_acct_nbr, \n\tws_trans_type, \n\tws_check_nbr, \n\tws_amount, \n\tws_trans_code, \n\tws_trans_date, \n\tws_trans_status\n\tFROM EXP_Source\n\tWHERE ws_type = 'D' AND ws_trans_type = 'K'\n),\nEXP_Insert AS (\n\tSELECT\n\tO_audit_id,\n\tO_eff_from_date,\n\tO_eff_to_date,\n\tSYSDATE AS O_created_date,\n\tSYSDATE AS O_modified_date,\n\tws_bank_nbr,\n\t-- *INF*: IIF(ISNULL(ltrim(rtrim(ws_bank_nbr))),'N/A',ws_bank_nbr)\n\tIFF(ltrim(rtrim(ws_bank_nbr\n\t\t\t)\n\t\t) IS NULL,\n\t\t'N/A',\n\t\tws_bank_nbr\n\t) AS o_ws_bank_nbr,\n\tws_acct_nbr,\n\t-- *INF*: IIF(ISNULL(ltrim(rtrim(ws_acct_nbr))),'N/A',ws_acct_nbr)\n\tIFF(ltrim(rtrim(ws_acct_nbr\n\t\t\t)\n\t\t) IS NULL,\n\t\t'N/A',\n\t\tws_acct_nbr\n\t) AS o_ws_acct_nbr,\n\tws_trans_type,\n\tws_check_nbr,\n\tws_amount,\n\tws_trans_code,\n\tws_trans_date,\n\t-- *INF*: IIF(ISNULL(ws_trans_date),TO_DATE('1/1/1800','MM/DD/YYYY'),ws_trans_date)\n\tIFF(ws_trans_date IS NULL,\n\t\tTO_DATE('1/1/1800', 'MM/DD/YYYY'\n\t\t),\n\t\tws_trans_date\n\t) AS o_ws_trans_date,\n\tws_trans_status\n\tFROM FLT_Source_Rows\n),\nclaim_bank_payment AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_bank_payment\n\t(audit_id, eff_from_date, eff_to_date, created_date, modified_date, bank_num, acct_num, draft_num, pay_amt, pay_date)\n\tSELECT \n\tO_audit_id AS AUDIT_ID, \n\tO_eff_from_date AS EFF_FROM_DATE, \n\tO_eff_to_date AS EFF_TO_DATE, \n\tO_created_date AS CREATED_DATE, \n\tO_modified_date AS MODIFIED_DATE, \n\to_ws_bank_nbr AS BANK_NUM, \n\to_ws_acct_nbr AS ACCT_NUM, \n\tws_check_nbr AS DRAFT_NUM, \n\tws_amount AS PAY_AMT, \n\to_ws_trans_date AS PAY_DATE\n\tFROM EXP_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "26773"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905151"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7602408"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 10:01:44"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 10:02:02"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "BANKFILE"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}