{
    "name": "s_m_QTE_Load_QuoteStatusDim",
    "properties": {
        "activities": [
            {
                "name": "m_QTE_Load_QuoteStatusDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Quote AS (\n\tSELECT\n\t\tQuoteStatusCode\n\tFROM Quote\n\tWHERE Quote.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\n),\nLKP_QuoteStatusDim AS (\n\tSELECT\n\tQuoteStatusDimID,\n\tQuoteStatusCode\n\tFROM (\n\t\tSELECT \n\t\t\tQuoteStatusDimID,\n\t\t\tQuoteStatusCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteStatusDim\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteStatusCode ORDER BY QuoteStatusDimID) = 1\n),\nEXP_ExistingChecking AS (\n\tSELECT\n\tLKP_QuoteStatusDim.QuoteStatusDimID AS lkp_QuoteStatusDimID,\n\t-- *INF*: IIF(ISNULL(lkp_QuoteStatusDimID), 'Insert', \r\n\t--  'Update')\n\tIFF(lkp_QuoteStatusDimID IS NULL, 'Insert', 'Update') AS v_ChangeFlag,\n\tv_ChangeFlag AS ChangeFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59','YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t-1 AS QuoteStatusAKId,\n\tSQ_Quote.QuoteStatusCode AS i_StandardQuoteStatusCode,\n\t-- *INF*: IIF(ISNULL(i_StandardQuoteStatusCode ), 'N/A', i_StandardQuoteStatusCode )\n\tIFF(i_StandardQuoteStatusCode IS NULL, 'N/A', i_StandardQuoteStatusCode) AS v_StandardQuoteStatusCode,\n\tv_StandardQuoteStatusCode AS o_StandardQuoteStatusCode,\n\tv_StandardQuoteStatusCode AS o_StandardQuoteStatusDescription\n\tFROM SQ_Quote\n\tLEFT JOIN LKP_QuoteStatusDim\n\tON LKP_QuoteStatusDim.QuoteStatusCode = SQ_Quote.QuoteStatusCode\n),\nRTR_InsertUpdate AS (\n\tSELECT\n\tlkp_QuoteStatusDimID AS QuoteStatusDimID,\n\tChangeFlag,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreatedDate,\n\tModifiedDate,\n\tQuoteStatusAKId,\n\to_StandardQuoteStatusCode AS StandardQuoteStatusCode,\n\to_StandardQuoteStatusDescription AS StandardQuoteStatusDescription\n\tFROM EXP_ExistingChecking\n),\nRTR_InsertUpdate_Insert AS (SELECT * FROM RTR_InsertUpdate WHERE ChangeFlag = 'Insert'),\nRTR_InsertUpdate_DEFAULT1 AS (SELECT * FROM RTR_InsertUpdate WHERE NOT ( (ChangeFlag = 'Insert') )),\nUPD_QuoteStatusDim_Insert AS (\n\tSELECT\n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tQuoteStatusAKId, \n\tStandardQuoteStatusCode, \n\tStandardQuoteStatusDescription\n\tFROM RTR_InsertUpdate_Insert\n),\nTGT_QuoteStatusDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteStatusDim\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, EDWQuoteStatusAKId, QuoteStatusCode, QuoteStatusDescription)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tQuoteStatusAKId AS EDWQUOTESTATUSAKID, \n\tStandardQuoteStatusCode AS QUOTESTATUSCODE, \n\tStandardQuoteStatusDescription AS QUOTESTATUSDESCRIPTION\n\tFROM UPD_QuoteStatusDim_Insert\n),\nUPD_QuoteStatusDim_Update AS (\n\tSELECT\n\tQuoteStatusDimID, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tQuoteStatusAKId AS QuoteStatusAKId2, \n\tStandardQuoteStatusCode, \n\tStandardQuoteStatusDescription\n\tFROM RTR_InsertUpdate_DEFAULT1\n),\nTGT_QuoteStatusDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.QuoteStatusDim AS T\n\tUSING UPD_QuoteStatusDim_Update AS S\n\tON T.QuoteStatusDimId = S.QuoteStatusDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.EDWQuoteStatusAKId = S.QuoteStatusAKId2, T.QuoteStatusCode = S.StandardQuoteStatusCode, T.QuoteStatusDescription = S.StandardQuoteStatusDescription\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246496"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905496"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603416"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:46:53"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:06:25"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            }
        },
        "folder": {
            "name": "Quote DataMart/"
        },
        "annotations": []
    }
}