{
    "name": "m_POL_DW_LOAD_PremiumTransactionRatingRisk_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PremiumTransactionRatingRisk_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction AS (\n\tSelect DISTINCT PT.PremiumTransactionID,\r\n\tPT.PremiumTransactionAKID,\r\n\tWTLLB.CensusBlockGroup,\r\n\tWTLLB.Latitude,\r\n\tWTLLB.Longitude,\r\n\tWTLLB.RatingTerritoryCode\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT on WPT.PremiumTransactionAKID=PT.PremiumTransactionAKID\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTTransactionInsuranceLineLocationBridge WTLLB on WTLLB.CoverageId=WPT.PremiumTransactionStageId\r\n\twhere  PT.SourceSystemId='DCT'\r\n\tand PT.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\n),\nLKP_PremiumTransactionRatingRisk AS (\n\tSELECT\n\tin_PremiumTransactionID,\n\tPremiumTransactionID\n\tFROM (\n\t\tSELECT PTRR.PremiumTransactionID as PremiumTransactionID FROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionRatingRisk PTRR INNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT on WPT.PremiumTransactionAKID=PTRR.PremiumTransactionAKID\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY in_PremiumTransactionID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_PremiumTransactionRatingRisk.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tSQ_PremiumTransaction.PremiumTransactionID AS i_PremiumTransactionID,\n\tSQ_PremiumTransaction.PremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tSQ_PremiumTransaction.CensusBlockGroup AS i_CensusBlockGroup,\n\tSQ_PremiumTransaction.Latitude AS i_Latitude,\n\tSQ_PremiumTransaction.Longitude AS i_Longitude,\n\tSQ_PremiumTransaction.RatingTerritoryCode AS i_RatingTerritoryCode,\n\t-- *INF*: IIF( ISNULL(lkp_PremiumTransactionID),1,0)\r\n\t-- --1 - Insert; 0-Ignore\n\tIFF(lkp_PremiumTransactionID IS NULL, 1, 0) AS o_Changeflag,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionAKID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t'DCT' AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CensusBlockGroup),'N/A',\r\n\t-- LENGTH(LTRIM(RTRIM(i_CensusBlockGroup)))=10,SUBSTR(i_CensusBlockGroup,1,3),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\ti_CensusBlockGroup IS NULL, 'N/A',\n\tLENGTH(LTRIM(RTRIM(i_CensusBlockGroup))) = 10, SUBSTR(i_CensusBlockGroup, 1, 3),\n\t'N/A') AS o_CensusBlockGroupCountyCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CensusBlockGroup),'N/A',\r\n\t-- LENGTH(LTRIM(RTRIM(i_CensusBlockGroup)))=10,SUBSTR(i_CensusBlockGroup,4,6),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\ti_CensusBlockGroup IS NULL, 'N/A',\n\tLENGTH(LTRIM(RTRIM(i_CensusBlockGroup))) = 10, SUBSTR(i_CensusBlockGroup, 4, 6),\n\t'N/A') AS o_CensusBlockGroupTractCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CensusBlockGroup),'N/A',\r\n\t-- LENGTH(LTRIM(RTRIM(i_CensusBlockGroup)))=10,SUBSTR(i_CensusBlockGroup,10,1),\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\ti_CensusBlockGroup IS NULL, 'N/A',\n\tLENGTH(LTRIM(RTRIM(i_CensusBlockGroup))) = 10, SUBSTR(i_CensusBlockGroup, 10, 1),\n\t'N/A') AS o_CensusBlockGroupBlockGroupCode,\n\t-- *INF*: IIF(ISNULL(i_Latitude),000.000000,i_Latitude)\n\tIFF(i_Latitude IS NULL, 000.000000, i_Latitude) AS o_Latitude,\n\t-- *INF*: IIF(ISNULL(i_Longitude),000.000000,i_Longitude)\n\tIFF(i_Longitude IS NULL, 000.000000, i_Longitude) AS o_Longitude,\n\t-- *INF*: IIF(ISNULL(i_RatingTerritoryCode) OR IS_SPACES(i_RatingTerritoryCode) OR LTRIM(RTRIM(i_RatingTerritoryCode))='','N/A',i_RatingTerritoryCode)\n\tIFF(i_RatingTerritoryCode IS NULL OR IS_SPACES(i_RatingTerritoryCode) OR LTRIM(RTRIM(i_RatingTerritoryCode)) = '', 'N/A', i_RatingTerritoryCode) AS o_RatingTerritoryCode\n\tFROM SQ_PremiumTransaction\n\tLEFT JOIN LKP_PremiumTransactionRatingRisk\n\tON LKP_PremiumTransactionRatingRisk.PremiumTransactionID = SQ_PremiumTransaction.PremiumTransactionID\n),\nFIL_PassInsertOnlyRows AS (\n\tSELECT\n\to_Changeflag AS Changeflag, \n\to_PremiumTransactionID AS PremiumTransactionID, \n\to_PremiumTransactionAKID AS PremiumTransactionAKID, \n\to_AuditID AS AuditID, \n\to_SourceSystemID AS SourceSystemID, \n\to_CreatedDate AS CreatedDate, \n\to_ModifiedDate AS ModifiedDate, \n\to_CensusBlockGroupCountyCode AS CensusBlockGroupCountyCode, \n\to_CensusBlockGroupTractCode AS CensusBlockGroupTractCode, \n\to_CensusBlockGroupBlockGroupCode AS CensusBlockGroupBlockGroupCode, \n\to_Latitude AS Latitude, \n\to_Longitude AS Longitude, \n\to_RatingTerritoryCode AS RatingTerritoryCode\n\tFROM EXP_DetectChanges\n\tWHERE IIF(Changeflag=1,TRUE,FALSE)\n),\nEXP_PassthroughTarget AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tAuditID,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tCensusBlockGroupCountyCode,\n\tCensusBlockGroupTractCode,\n\tCensusBlockGroupBlockGroupCode,\n\tLatitude,\n\tLongitude,\n\tRatingTerritoryCode\n\tFROM FIL_PassInsertOnlyRows\n),\nPremiumTransactionRatingRisk AS (\n\tINSERT INTO PremiumTransactionRatingRisk\n\t(PremiumTransactionID, PremiumTransactionAKID, AuditID, SourceSystemID, CreatedDate, ModifiedDate, CensusBlockGroupCountyCode, CensusBlockGroupTractCode, CensusBlockGroupBlockGroupCode, Latitude, Longitude, RatingTerritoryCode)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONAKID, \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCENSUSBLOCKGROUPCOUNTYCODE, \n\tCENSUSBLOCKGROUPTRACTCODE, \n\tCENSUSBLOCKGROUPBLOCKGROUPCODE, \n\tLATITUDE, \n\tLONGITUDE, \n\tRATINGTERRITORYCODE\n\tFROM EXP_PassthroughTarget\n),\nSQ_PremiumTransactionRatingRisk_Offset AS (\n\tSELECT \r\n\tWPTOL.PremiumTransactionID,\r\n\tPTRRPrevious.PremiumTransactionRatingRiskId,\r\n\tPTRRPrevious.CensusBlockGroupCountyCode,\r\n\tPTRRPrevious.CensusBlockGroupTractCode,\r\n\tPTRRPrevious.CensusBlockGroupBlockGroupCode,\r\n\tPTRRPrevious.Latitude,\r\n\tPTRRPrevious.Longitude,\r\n\tPTRRPrevious.RatingTerritoryCode\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionRatingRisk PTRRPrevious\r\n\ton ( PTRRPrevious.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionRatingRisk PTRRToUpdate\r\n\ton ( PTRRToUpdate.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.premiumtransaction pt WITH (NOLOCK) on\r\n\tWPTOL.premiumtransactionID=pt.premiumtransactionID and PT.OffsetOnsetCode='Offset'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\tPTRRPrevious.CensusBlockGroupCountyCode <> PTRRToUpdate.CensusBlockGroupCountyCode \r\n\tOR PTRRPrevious.CensusBlockGroupTractCode <> PTRRToUpdate.CensusBlockGroupTractCode \r\n\tOR PTRRPrevious.CensusBlockGroupBlockGroupCode <> PTRRToUpdate.CensusBlockGroupBlockGroupCode \r\n\tOR PTRRPrevious.Latitude <> PTRRToUpdate.Latitude \r\n\tOR PTRRPrevious.Longitude <> PTRRToUpdate.Longitude \r\n\tOR PTRRPrevious.RatingTerritoryCode <> PTRRToUpdate.RatingTerritoryCode\r\n\t)\n),\nExp_PremiumTransactionRatingRisk_Offset AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionRatingRiskId,\n\tSYSDATE AS o_ModifiedDate,\n\tCensusBlockGroupCountyCode,\n\tCensusBlockGroupTractCode,\n\tCensusBlockGroupBlockGroupCode,\n\tLatitude,\n\tLongitude,\n\tRatingTerritoryCode\n\tFROM SQ_PremiumTransactionRatingRisk_Offset\n),\nUPD_PremiumTransactionRatingRisk_Offset AS (\n\tSELECT\n\tPremiumTransactionRatingRiskId, \n\to_ModifiedDate AS ModifiedDate, \n\tCensusBlockGroupCountyCode, \n\tCensusBlockGroupTractCode, \n\tCensusBlockGroupBlockGroupCode, \n\tLatitude, \n\tLongitude, \n\tRatingTerritoryCode\n\tFROM Exp_PremiumTransactionRatingRisk_Offset\n),\nPremiumTransactionRatingRisk_Upd_Offset AS (\n\tMERGE INTO PremiumTransactionRatingRisk AS T\n\tUSING UPD_PremiumTransactionRatingRisk_Offset AS S\n\tON T.PremiumTransactionRatingRiskId = S.PremiumTransactionRatingRiskId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CensusBlockGroupCountyCode = S.CensusBlockGroupCountyCode, T.CensusBlockGroupTractCode = S.CensusBlockGroupTractCode, T.CensusBlockGroupBlockGroupCode = S.CensusBlockGroupBlockGroupCode, T.Latitude = S.Latitude, T.Longitude = S.Longitude, T.RatingTerritoryCode = S.RatingTerritoryCode\n),\nSQ_PremiumTransactionRatingRisk_Deprecated AS (\n\tSELECT \r\n\tWPTOL.PremiumTransactionID,\r\n\tPTRRPrevious.PremiumTransactionRatingRiskId,\r\n\tPTRRPrevious.CensusBlockGroupCountyCode,\r\n\tPTRRPrevious.CensusBlockGroupTractCode,\r\n\tPTRRPrevious.CensusBlockGroupBlockGroupCode,\r\n\tPTRRPrevious.Latitude,\r\n\tPTRRPrevious.Longitude,\r\n\tPTRRPrevious.RatingTerritoryCode\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionRatingRisk PTRRPrevious\r\n\ton ( PTRRPrevious.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionRatingRisk PTRRToUpdate\r\n\ton ( PTRRToUpdate.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.premiumtransaction pt WITH (NOLOCK) on\r\n\tWPTOL.premiumtransactionID=pt.premiumtransactionID and PT.OffsetOnsetCode='Deprecated'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\tPTRRPrevious.CensusBlockGroupCountyCode <> PTRRToUpdate.CensusBlockGroupCountyCode \r\n\tOR PTRRPrevious.CensusBlockGroupTractCode <> PTRRToUpdate.CensusBlockGroupTractCode \r\n\tOR PTRRPrevious.CensusBlockGroupBlockGroupCode <> PTRRToUpdate.CensusBlockGroupBlockGroupCode \r\n\tOR PTRRPrevious.Latitude <> PTRRToUpdate.Latitude \r\n\tOR PTRRPrevious.Longitude <> PTRRToUpdate.Longitude \r\n\tOR PTRRPrevious.RatingTerritoryCode <> PTRRToUpdate.RatingTerritoryCode\r\n\t)\n),\nExp_PremiumTransactionRatingRisk_Deprecated AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionRatingRiskId,\n\tSYSDATE AS o_ModifiedDate,\n\tCensusBlockGroupCountyCode,\n\tCensusBlockGroupTractCode,\n\tCensusBlockGroupBlockGroupCode,\n\tLatitude,\n\tLongitude,\n\tRatingTerritoryCode\n\tFROM SQ_PremiumTransactionRatingRisk_Deprecated\n),\nUPD_PremiumTransactionRatingRisk_Deprecated AS (\n\tSELECT\n\tPremiumTransactionRatingRiskId, \n\to_ModifiedDate AS ModifiedDate, \n\tCensusBlockGroupCountyCode, \n\tCensusBlockGroupTractCode, \n\tCensusBlockGroupBlockGroupCode, \n\tLatitude, \n\tLongitude, \n\tRatingTerritoryCode\n\tFROM Exp_PremiumTransactionRatingRisk_Deprecated\n),\nPremiumTransactionRatingRisk_Upd_Deprecated AS (\n\tMERGE INTO PremiumTransactionRatingRisk AS T\n\tUSING UPD_PremiumTransactionRatingRisk_Deprecated AS S\n\tON T.PremiumTransactionRatingRiskId = S.PremiumTransactionRatingRiskId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CensusBlockGroupCountyCode = S.CensusBlockGroupCountyCode, T.CensusBlockGroupTractCode = S.CensusBlockGroupTractCode, T.CensusBlockGroupBlockGroupCode = S.CensusBlockGroupBlockGroupCode, T.Latitude = S.Latitude, T.Longitude = S.Longitude, T.RatingTerritoryCode = S.RatingTerritoryCode\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603261"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_CLAIM"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}