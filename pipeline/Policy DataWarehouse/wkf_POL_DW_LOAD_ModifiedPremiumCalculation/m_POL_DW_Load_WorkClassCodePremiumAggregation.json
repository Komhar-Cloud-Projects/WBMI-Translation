{
    "name": "m_POL_DW_Load_WorkClassCodePremiumAggregation",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_Load_WorkClassCodePremiumAggregation",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction AS (\n\twith f as \r\n\t(SELECT [LineOfBusinessAbbreviation],\r\n\t       Ext_RatingStateCode AS [RatingStateCode],\r\n\t       [ClassCode] class_code,\r\n\t       [RatableClassIndicator] ratable_class_ind,\r\n\t       [SubjectToExperienceModificationClassIndicator] subject_to_exprnc_modfctn_class_ind,\r\n\t       [ExperienceModificationClassIndicator] exprnc_modfctn_class_ind,\r\n\t       [ScheduledModificationClassIndicator] sched_modfctn_class_ind,\r\n\t       [SurchargeClassIndicator] surchg_class_ind,\r\n\t       [OtherModificationClassIndicator] other_modfctn_class_ind\r\n\tFROM (SELECT [LineOfBusinessAbbreviation],\r\n\t             supState.state_abbrev Ext_RatingStateCode,\r\n\t             [RatingStateCode],\r\n\t             MIN([RatingStateCode]) OVER (PARTITION BY ClassCode, state_abbrev) MinRatingStateCode,\r\n\t             [ClassCode],\r\n\t             [RatableClassIndicator],\r\n\t             [SubjectToExperienceModificationClassIndicator],\r\n\t             [ExperienceModificationClassIndicator],\r\n\t             [ScheduledModificationClassIndicator],\r\n\t             [SurchargeClassIndicator],\r\n\t             [OtherModificationClassIndicator]\r\n\tFROM SupClassificationWorkersCompensation\r\n\tINNER JOIN (SELECT Allstate.state_abbrev AllAtateAbbrev,\r\n\t                   otherstate.state_abbrev\r\n\tFROM sup_state Allstate,\r\n\t     sup_state otherstate  --FULL OUTER JOIN\r\n\tWHERE Allstate.state_abbrev = '99'\r\n\tAND otherstate.state_abbrev != '99'\r\n\tUNION\r\n\tSELECT otherstate.state_abbrev allAtateAbbrev,\r\n\t       otherstate.state_abbrev\r\n\tFROM sup_state otherstate\r\n\tWHERE otherstate.state_abbrev != '99') AS supState\r\n\t  ON SupClassificationWorkersCompensation.RatingStateCode = supState.AllAtateAbbrev\r\n\tWHERE CurrentSnapshotFlag = 1) Extent_SupClassificationWorkersCompensation\r\n\tWHERE MinRatingStateCode = [RatingStateCode])\r\n\t----------------------------------------------------------------------\r\n\tSELECT\r\n\t  *\r\n\tFROM (SELECT\r\n\t  a.SourceSystemId,\r\n\t  d.PolicyAKID,\r\n\t  d.StateProvinceCode AS RatingState,\r\n\t  LEFT(b.ClassCode, 4) AS ClassCode,\r\n\t  CAST(FLOOR(CAST(CASE\r\n\t    WHEN a.PremiumMasterCoverageEffectiveDate >= a.PremiumTransactionEnteredDate THEN a.PremiumMasterCoverageEffectiveDate\r\n\t    ELSE a.PremiumTransactionEnteredDate\r\n\t  END AS float)) AS datetime) AS RunDate,\r\n\t  SUM(a.PremiumMasterPremium) AS DirectWrittenPremium,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.subject_to_exprnc_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium --Subject To Experience Modification Class Indicator\r\n\t    ELSE 0\r\n\t  END) AS SubjectDirectWrittenPremium,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.exprnc_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium --Experience Modification Class Indicator\r\n\t    ELSE 0\r\n\t  END) AS ExperienceModifiedAdjustmentAmount,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.sched_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium\r\n\t    ELSE 0\r\n\t  END) AS ScheduleModifiedAdjustmentAmount,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    --WHEN LEFT(b.ClassCode, 4) = '9046' THEN a.PremiumMasterPremium\r\n\t\tWHEN f.other_modfctn_class_ind='Y' THEN a.PremiumMasterPremium  --Other Modification Class Indicator\r\n\t    ELSE 0\r\n\t  END) AS OtherModifiedAdjustmentAmount,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.ratable_class_ind = 'N' AND\t\t\t\t\t\t\t\t--Ratable Class Indicator\r\n\t      f.subject_to_exprnc_modfctn_class_ind = 'N' AND\t\t\t\t--Subject To Experience Modification Class Indicator\r\n\t      f.exprnc_modfctn_class_ind = 'N' AND\t\t\t\t\t\t\t--Experience Modification Class Indicator\r\n\t      f.sched_modfctn_class_ind = 'N' AND\t\t\t\t\t\t\t--Scheduled Modification Class Indicator\r\n\t      --LEFT(b.ClassCode, 4) <> '9046' AND\t\t\t\t\t\t\t\r\n\t\t  f.other_modfctn_class_ind='N' AND\t\t\t\t\t\t\t\t--Other Modification Class Indicator\r\n\t      f.surchg_class_ind = 'N' THEN a.PremiumMasterPremium\t\t\t--Surcharge Class Indicator\r\n\t    ELSE 0\r\n\t  END) AS ClassifiedAdjustmentAmount,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.subject_to_exprnc_modfctn_class_ind = 'Y' THEN 1\r\n\t    ELSE 0\r\n\t  END) AS SubjectTransactionCount,\r\n\t  ----------------------------------------------------------\r\n\t  SUM(CASE\r\n\t    WHEN f.ratable_class_ind = 'Y' THEN 1\r\n\t    ELSE 0\r\n\t  END) AS RateableTransactionCount\r\n\t  ----------------------------------------------------------\r\n\tFROM PremiumMasterCalculation a\r\n\tJOIN StatisticalCoverage b\r\n\t  ON a.StatisticalCoverageAKID = b.StatisticalCoverageAKID\r\n\tJOIN PolicyCoverage c\r\n\t  ON c.PolicyCoverageAKID = a.PolicyCoverageAKID\r\n\t  AND c.TypeBureauCode in ('WC','WP') \r\n\t  AND c.SourceSystemID = 'PMS'\r\n\tJOIN RiskLocation d\r\n\t  ON d.RiskLocationAKID = a.RiskLocationAKID\r\n\t  AND d.SourceSystemID = 'PMS'\r\n\tJOIN --master_classification_sup \r\n\t\tf\r\n\t  ON f.class_code = LEFT(b.ClassCode, 4) and f.RatingStateCode=d.StateProvinceCode\r\n\tWHERE a.CurrentSnapshotFlag = 1\r\n\tAND a.PremiumMasterPremiumType = 'D'\r\n\tAND a.SourceSystemId = 'PMS'\r\n\tAND a.PremiumMasterReasonAmendedCode NOT IN ('COL', 'CWO', 'Claw Back' ,'CWB')\r\n\t-----------------------\r\n\t\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\r\n\tGROUP BY d.PolicyAKID,\r\n\t         d.StateProvinceCode,\r\n\t         LEFT(b.ClassCode, 4),\r\n\t         CAST(FLOOR(CAST(CASE\r\n\t           WHEN a.PremiumMasterCoverageEffectiveDate >= a.PremiumTransactionEnteredDate THEN a.PremiumMasterCoverageEffectiveDate\r\n\t           ELSE a.PremiumTransactionEnteredDate\r\n\t         END AS float)) AS datetime),\r\n\t         a.SourceSystemId\r\n\tUNION ALL\r\n\tSELECT\r\n\t  a.SourceSystemId,\r\n\t  d.PolicyAKID,\r\n\t  d.StateProvinceCode AS RatingState,\r\n\t  LEFT(b.ClassCode, 4) AS ClassCode,\r\n\t  CAST(FLOOR(CAST(CASE\r\n\t    WHEN a.PremiumMasterCoverageEffectiveDate >= a.PremiumTransactionEnteredDate THEN a.PremiumMasterCoverageEffectiveDate\r\n\t    ELSE a.PremiumTransactionEnteredDate\r\n\t  END AS float)) AS datetime) AS RunDate,\r\n\t  SUM(a.PremiumMasterPremium) AS DirectWrittenPremium,\r\n\t  SUM(CASE\r\n\t    WHEN f.subject_to_exprnc_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium\r\n\t    ELSE 0\r\n\t  END) AS SubjectDirectWrittenPremium,\r\n\t  SUM(CASE\r\n\t    WHEN f.exprnc_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium\r\n\t    ELSE 0\r\n\t  END) AS ExperienceModifiedAdjustmentAmount,\r\n\t  SUM(CASE\r\n\t    WHEN f.sched_modfctn_class_ind = 'Y' THEN a.PremiumMasterPremium\r\n\t    ELSE 0\r\n\t  END) AS ScheduleModifiedAdjustmentAmount,\r\n\t  SUM(CASE\r\n\t    --WHEN LEFT(b.ClassCode, 4) = '9046' THEN a.PremiumMasterPremium\r\n\t\tWHEN f.other_modfctn_class_ind='Y' THEN a.PremiumMasterPremium  --Other Modification Class Indicator\r\n\t    ELSE 0\r\n\t  END) AS OtherModifiedAdjustmentAmount,\r\n\t  SUM(CASE\r\n\t    WHEN f.ratable_class_ind = 'N' AND\r\n\t      f.subject_to_exprnc_modfctn_class_ind = 'N' AND\r\n\t      f.exprnc_modfctn_class_ind = 'N' AND\r\n\t      f.sched_modfctn_class_ind = 'N' AND\r\n\t      --LEFT(b.ClassCode, 4) <> '9046' AND\t\t\t\t\t\t\t\r\n\t\t  f.other_modfctn_class_ind='N' AND\t\t\t\t\t\t\t\t--Other Modification Class Indicator\r\n\t      f.surchg_class_ind = 'N' THEN a.PremiumMasterPremium\r\n\t    ELSE 0\r\n\t  END) AS ClassifiedAdjustmentAmount,\r\n\t  SUM(CASE\r\n\t    WHEN f.subject_to_exprnc_modfctn_class_ind = 'Y' THEN 1\r\n\t    ELSE 0\r\n\t  END) AS SubjectTransactionCount,\r\n\t  SUM(CASE\r\n\t    WHEN f.ratable_class_ind = 'Y' THEN 1\r\n\t    ELSE 0\r\n\t  END) AS RateableTransactionCount\r\n\tFROM PremiumMasterCalculation a\r\n\tJOIN RatingCoverage b\r\n\t  ON a.RatingCoverageAKId = b.RatingCoverageAKID\r\n\t  AND b.EffectiveDate = a.RatingCoverageEffectiveDate\r\n\tJOIN PolicyCoverage c\r\n\t  ON c.PolicyCoverageAKID = b.PolicyCoverageAKID\r\n\t  AND c.CurrentSnapshotFlag = 1\r\n\t  AND c.InsuranceLine = 'WorkersCompensation'\r\n\tJOIN RiskLocation d\r\n\t  ON d.RiskLocationAKID = c.RiskLocationAKID\r\n\t  AND d.CurrentSnapshotFlag = 1\r\n\tJOIN --master_classification_sup \r\n\t\tf\r\n\t  ON f.class_code = LEFT(b.ClassCode, 4) and f.RatingStateCode=d.StateProvinceCode\r\n\tWHERE a.CurrentSnapshotFlag = 1\r\n\tAND a.PremiumMasterPremiumType = 'D'\r\n\tAND a.PremiumMasterReasonAmendedCode NOT IN ('COL', 'CWO', 'Claw Back' ,'CWB')\r\n\tAND a.SourceSystemId = 'DCT'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\r\n\tGROUP BY d.PolicyAKID,\r\n\t         d.StateProvinceCode,\r\n\t         LEFT(b.ClassCode, 4),\r\n\t         CAST(FLOOR(CAST(CASE\r\n\t           WHEN a.PremiumMasterCoverageEffectiveDate >= a.PremiumTransactionEnteredDate THEN a.PremiumMasterCoverageEffectiveDate\r\n\t           ELSE a.PremiumTransactionEnteredDate\r\n\t         END AS float)) AS datetime),\r\n\t         a.SourceSystemId) a\r\n\tORDER BY PolicyAKId, RatingState, ClassCode, RunDate\n),\nEXP_ClassCode AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tSourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tPolicyAKId,\n\tRatingState,\n\tClassCode,\n\tRunDate,\n\t-- *INF*: ADD_TO_DATE(RunDate,'SS',86399)\n\tADD_TO_DATE(RunDate, 'SS', 86399) AS o_RunDate,\n\tDirectWrittenPremium,\n\tSubjectDirectWrittenPremium,\n\tExperienceModifiedAdjustmentAmount,\n\tScheduleModifiedAdjustmentAmount,\n\tOtherModifiedAdjustmentAmount,\n\tClassifiedAdjustmentAmount,\n\tSubjectTransactionCount,\n\tRateableTransactionCount\n\tFROM SQ_PremiumTransaction\n),\nWorkClassCodePremiumAggregation AS (\n\tTRUNCATE TABLE WorkClassCodePremiumAggregation;\n\tINSERT INTO WorkClassCodePremiumAggregation\n\t(AuditId, SourceSystemID, CreatedDate, ModifiedDate, RunDate, PolicyAKId, RatingState, ClassCode, DirectWrittenPremium, SubjectDirectWrittenPremium, ExperienceModifiedAdjustmentAmount, ScheduleModifiedAdjustmentAmount, OtherModifiedAdjustmentAmount, ClassifiedAdjustmentAmount, SubjectTransactionCount, RateableTransactionCount)\n\tSELECT \n\tAUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\to_RunDate AS RUNDATE, \n\tPOLICYAKID, \n\tRATINGSTATE, \n\tCLASSCODE, \n\tDIRECTWRITTENPREMIUM, \n\tSUBJECTDIRECTWRITTENPREMIUM, \n\tEXPERIENCEMODIFIEDADJUSTMENTAMOUNT, \n\tSCHEDULEMODIFIEDADJUSTMENTAMOUNT, \n\tOTHERMODIFIEDADJUSTMENTAMOUNT, \n\tCLASSIFIEDADJUSTMENTAMOUNT, \n\tSUBJECTTRANSACTIONCOUNT, \n\tRATEABLETRANSACTIONCOUNT\n\tFROM EXP_ClassCode\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244834"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893408"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7543475"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 09:08:21"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 23:13:55"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_CLAIM"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_CLAIM"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}