{
    "name": "m_POL_CUS_DW_LOAD_contract_customer_DCT_PL",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_contract_customer_DCT_PL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkDCTPLParty AS (\n\tSELECT distinct P.RoleCode, \r\n\tP.RoleDesc, \r\n\tP.PolicyNumber, \r\n\tP.PolicyVersion, \r\n\tP.CustomerNumber, \r\n\tP.FullName, \r\n\tP.FEIN, \r\n\tP.BusinessName, \r\n\tisnull(P.PrimaryPhone,'11111111111') PrimaryPhone, \r\n\tP.PhoneExtension, \r\n\tisnull(P.Email,'N/A') Email, \r\n\tP.LastName, \r\n\tP.LegalEntityCode, \r\n\tP.FirstName, \r\n\tP.MiddleName \r\n\tfrom\r\n\t(select *,case when AddressType='Insured MailingAddress' then 1 else 2 end Customer_Record\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty \r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')) P\r\n\tinner join (select PolicyKey,StartDate,min(case when AddressType='Insured MailingAddress' then 1 else 2 end) Customer_Record\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPLParty P\r\n\twhere AddressType in ('Insured MailingAddress','Insured InsuredsAddress')\r\n\tgroup by PolicyKey,StartDate) B\r\n\ton P.Policykey=B.PolicyKey\r\n\tand P.StartDate=B.STartDate\r\n\tand P.Customer_Record=B.Customer_Record\n),\nEXP_Source_Data_Collect AS (\n\tSELECT\n\tRoleCode,\n\tRoleDesc,\n\tPolicyNumber,\n\tPolicyVersion,\n\t-- *INF*: PolicyNumber || IIF(ISNULL(ltrim(rtrim(PolicyVersion))) or Length(ltrim(rtrim(PolicyVersion)))=0 or IS_SPACES(PolicyVersion),'00',PolicyVersion)\n\tPolicyNumber || IFF(ltrim(rtrim(PolicyVersion)) IS NULL OR Length(ltrim(rtrim(PolicyVersion))) = 0 OR IS_SPACES(PolicyVersion), '00', PolicyVersion) AS o_ContractKey,\n\tCustomerNumber,\n\tFullName,\n\tFEIN,\n\tBusinessName,\n\t-- *INF*: IIF(ISNULL(BusinessName) or IS_SPACES(BusinessName)  or LENGTH(BusinessName)=0,'N/A',LTRIM(RTRIM(BusinessName))) \n\tIFF(BusinessName IS NULL OR IS_SPACES(BusinessName) OR LENGTH(BusinessName) = 0, 'N/A', LTRIM(RTRIM(BusinessName))) AS o_BusinessName,\n\tPrimaryPhone,\n\t-- *INF*: REPLACECHR( 0, REPLACECHR( 0, REPLACECHR( 0, PrimaryPhone, ')', '' ), '(', '' ), '-', '' )\r\n\t-- \n\tREPLACECHR(0, REPLACECHR(0, REPLACECHR(0, PrimaryPhone, ')', ''), '(', ''), '-', '') AS v_ph_num_full,\n\tv_ph_num_full AS o_ph_num_full,\n\t-- *INF*: REVERSE(SUBSTR(REVERSE(v_ph_num_full),7,3))\n\tREVERSE(SUBSTR(REVERSE(v_ph_num_full), 7, 3)) AS o_ph_area_code,\n\t-- *INF*: REVERSE(SUBSTR(REVERSE(v_ph_num_full),5,3))\n\tREVERSE(SUBSTR(REVERSE(v_ph_num_full), 5, 3)) AS o_ph_exchange,\n\t-- *INF*: REVERSE(SUBSTR(REVERSE(v_ph_num_full),1,4))\n\tREVERSE(SUBSTR(REVERSE(v_ph_num_full), 1, 4)) AS o_ph_num,\n\tPhoneExtension,\n\tEmail,\n\tLastName,\n\t-- *INF*: IIF(ISNULL(LastName) or IS_SPACES(LastName)  or LENGTH(LastName)=0,'N/A',LTRIM(RTRIM(LastName))) \n\tIFF(LastName IS NULL OR IS_SPACES(LastName) OR LENGTH(LastName) = 0, 'N/A', LTRIM(RTRIM(LastName))) AS o_LastName,\n\t-- *INF*: IIF(ISNULL(LastName) or IS_SPACES(LastName)  or LENGTH(LastName)=0,'N/A',SUBSTR(LTRIM(RTRIM(LastName)),1,4)) \n\tIFF(LastName IS NULL OR IS_SPACES(LastName) OR LENGTH(LastName) = 0, 'N/A', SUBSTR(LTRIM(RTRIM(LastName)), 1, 4)) AS o_sort_name,\n\tLegalEntityCode,\n\tFirstName,\n\t-- *INF*: IIF(ISNULL(FirstName) or IS_SPACES(FirstName)  or LENGTH(FirstName)=0,'N/A',LTRIM(RTRIM(FirstName))) \r\n\t-- \n\tIFF(FirstName IS NULL OR IS_SPACES(FirstName) OR LENGTH(FirstName) = 0, 'N/A', LTRIM(RTRIM(FirstName))) AS o_FirstName,\n\tMiddleName,\n\t-- *INF*: IIF(ISNULL(MiddleName) or IS_SPACES(MiddleName)  or LENGTH(MiddleName)=0,'N/A',LTRIM(RTRIM(MiddleName))) \n\tIFF(MiddleName IS NULL OR IS_SPACES(MiddleName) OR LENGTH(MiddleName) = 0, 'N/A', LTRIM(RTRIM(MiddleName))) AS o_MiddleName,\n\t-1 AS o_sup_lgl_ent_code_id,\n\t'' AS o_sic_code,\n\t'' AS o_naics_code,\n\t-1 AS o_yr_in_bus\n\tFROM SQ_WorkDCTPLParty\n),\nLKP_contract_customer AS (\n\tSELECT\n\tcontract_cust_id,\n\tcontract_cust_ak_id,\n\tcust_num,\n\tname,\n\tfed_tax_id,\n\tdoing_bus_as,\n\tsic_code,\n\tnaics_code,\n\tlgl_ent_code,\n\tyr_in_bus,\n\tph_num_full,\n\tph_area_code,\n\tph_exchange,\n\tph_num,\n\tph_extension,\n\tbus_email_addr,\n\tsort_name,\n\tsup_lgl_ent_code_id,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tcontract_key,\n\tcust_role\n\tFROM (\n\t\tSELECT C.contract_cust_id as contract_cust_id, C.contract_cust_ak_id as contract_cust_ak_id, C.cust_num as cust_num, C.name as name, C.fed_tax_id as fed_tax_id, C.doing_bus_as as doing_bus_as, C.sic_code as sic_code, C.naics_code as naics_code, C.lgl_ent_code as lgl_ent_code, C.yr_in_bus as yr_in_bus, C.ph_num_full as ph_num_full, C.ph_area_code as ph_area_code, C.ph_exchange as ph_exchange, C.ph_num as ph_num, C.ph_extension as ph_extension, C.bus_email_addr as bus_email_addr, C.sort_name as sort_name, C.sup_lgl_ent_code_id as sup_lgl_ent_code_id, C.FirstName as FirstName, C.LastName as LastName, C.MiddleName as MiddleName, C.contract_key as contract_key, C.cust_role as cust_role \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer C\r\n\t\twhere crrnt_snpsht_flag=1 \r\n\t\tand source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\torder by contract_key,eff_from_date,created_date Desc\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY contract_key,cust_role ORDER BY contract_cust_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_contract_customer.contract_cust_id AS lkp_cust_id,\n\tLKP_contract_customer.contract_cust_ak_id AS lkp_cust_ak_id,\n\tLKP_contract_customer.cust_num AS lkp_cust_num,\n\tLKP_contract_customer.name AS lkp_name,\n\tLKP_contract_customer.fed_tax_id AS lkp_fed_tax_id,\n\tLKP_contract_customer.doing_bus_as AS lkp_doing_bus_as,\n\tLKP_contract_customer.sic_code AS lkp_sic_code,\n\tLKP_contract_customer.naics_code AS lkp_naics_code,\n\tLKP_contract_customer.lgl_ent_code AS lkp_lgl_ent_code,\n\tLKP_contract_customer.yr_in_bus AS lkp_yr_in_bus,\n\tLKP_contract_customer.ph_num_full AS lkp_ph_num_full,\n\tLKP_contract_customer.ph_area_code AS lkp_ph_area_code,\n\tLKP_contract_customer.ph_exchange AS lkp_ph_exchange,\n\tLKP_contract_customer.ph_num AS lkp_ph_num,\n\tLKP_contract_customer.ph_extension AS lkp_ph_extension,\n\tLKP_contract_customer.bus_email_addr AS lkp_bus_email_addr,\n\tLKP_contract_customer.sort_name AS lkp_sort_name,\n\tLKP_contract_customer.sup_lgl_ent_code_id AS lkp_sup_lgl_ent_code_id,\n\tLKP_contract_customer.FirstName AS lkp_FirstName,\n\tLKP_contract_customer.LastName AS lkp_LastName,\n\tLKP_contract_customer.MiddleName AS lkp_MiddleName,\n\tEXP_Source_Data_Collect.o_sup_lgl_ent_code_id AS i_sup_lgl_ent_code_id,\n\tEXP_Source_Data_Collect.o_ContractKey AS contract_key,\n\tEXP_Source_Data_Collect.RoleCode AS cust_role,\n\tEXP_Source_Data_Collect.CustomerNumber AS customer_number,\n\tEXP_Source_Data_Collect.FullName AS name,\n\tEXP_Source_Data_Collect.FEIN AS fed_tax_id,\n\tEXP_Source_Data_Collect.o_BusinessName AS doing_bus_as,\n\tEXP_Source_Data_Collect.o_sic_code AS sic_code,\n\tEXP_Source_Data_Collect.o_naics_code AS naics_code,\n\tEXP_Source_Data_Collect.LegalEntityCode AS lgl_ent_code,\n\tEXP_Source_Data_Collect.o_yr_in_bus AS yr_in_bus,\n\tEXP_Source_Data_Collect.o_ph_num_full AS ph_num_full,\n\tEXP_Source_Data_Collect.o_ph_area_code AS ph_area_code,\n\tEXP_Source_Data_Collect.o_ph_exchange AS ph_exchange,\n\tEXP_Source_Data_Collect.o_ph_num AS ph_num,\n\tEXP_Source_Data_Collect.PhoneExtension AS ph_extension,\n\tEXP_Source_Data_Collect.Email AS bus_email_addr,\n\tEXP_Source_Data_Collect.o_sort_name AS sort_name,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(i_sup_lgl_ent_code_id),\r\n\t--   -1,\r\n\t--   i_sup_lgl_ent_code_id\r\n\t-- )\n\tIFF(i_sup_lgl_ent_code_id IS NULL, - 1, i_sup_lgl_ent_code_id) AS v_lgl_ent_code_id,\n\t-- *INF*: IIF(ISNULL(lkp_cust_ak_id), 'NEW', IIF(\r\n\t-- lkp_name != name OR\r\n\t-- lkp_fed_tax_id != fed_tax_id OR\r\n\t-- lkp_doing_bus_as != doing_bus_as  OR\r\n\t-- lkp_sic_code != sic_code  OR\r\n\t-- lkp_naics_code != naics_code  OR\r\n\t-- lkp_lgl_ent_code != lgl_ent_code  OR\r\n\t-- lkp_yr_in_bus != yr_in_bus OR\r\n\t-- lkp_ph_num_full != ph_num_full OR\r\n\t-- lkp_ph_area_code != ph_area_code OR \r\n\t-- lkp_ph_exchange != ph_exchange OR\r\n\t-- lkp_ph_num != ph_num OR\r\n\t-- lkp_ph_extension != ph_extension OR\r\n\t-- lkp_bus_email_addr != bus_email_addr OR\r\n\t-- LTRIM(RTRIM(lkp_sort_name)) != sort_name OR\r\n\t-- lkp_sup_lgl_ent_code_id!=v_lgl_ent_code_id OR\r\n\t-- lkp_FirstName != FirstName OR\r\n\t-- lkp_LastName != LastName OR\r\n\t-- lkp_MiddleName != MiddleName,\r\n\t-- 'UPDATE', 'NOCHANGE'))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIFNewLookupRow=1,'NEW',IIFNewLookupRow=2,'UPDATE','NOCHANGE'\n\tIFF(lkp_cust_ak_id IS NULL, 'NEW', IFF(lkp_name != name OR lkp_fed_tax_id != fed_tax_id OR lkp_doing_bus_as != doing_bus_as OR lkp_sic_code != sic_code OR lkp_naics_code != naics_code OR lkp_lgl_ent_code != lgl_ent_code OR lkp_yr_in_bus != yr_in_bus OR lkp_ph_num_full != ph_num_full OR lkp_ph_area_code != ph_area_code OR lkp_ph_exchange != ph_exchange OR lkp_ph_num != ph_num OR lkp_ph_extension != ph_extension OR lkp_bus_email_addr != bus_email_addr OR LTRIM(RTRIM(lkp_sort_name)) != sort_name OR lkp_sup_lgl_ent_code_id != v_lgl_ent_code_id OR lkp_FirstName != FirstName OR lkp_LastName != LastName OR lkp_MiddleName != MiddleName, 'UPDATE', 'NOCHANGE')) AS o_changed_flag,\n\tv_lgl_ent_code_id AS o_lgl_ent_code_id,\n\tEXP_Source_Data_Collect.o_FirstName AS FirstName,\n\tEXP_Source_Data_Collect.o_LastName AS LastName,\n\tEXP_Source_Data_Collect.o_MiddleName AS MiddleName\n\tFROM EXP_Source_Data_Collect\n\tLEFT JOIN LKP_contract_customer\n\tON LKP_contract_customer.contract_key = EXP_Source_Data_Collect.o_ContractKey AND LKP_contract_customer.cust_role = EXP_Source_Data_Collect.RoleCode\n),\nFIL_insert AS (\n\tSELECT\n\tlkp_cust_ak_id AS cust_ak_id, \n\tcontract_key, \n\tcust_role, \n\tcustomer_number, \n\tname, \n\tfed_tax_id, \n\tdoing_bus_as, \n\tsic_code, \n\tnaics_code, \n\tlgl_ent_code, \n\tyr_in_bus, \n\tph_num_full, \n\tph_area_code, \n\tph_exchange, \n\tph_num, \n\tph_extension, \n\tbus_email_addr, \n\tsort_name AS pif_sort_name, \n\to_changed_flag AS changed_flag, \n\to_lgl_ent_code_id, \n\tFirstName, \n\tLastName, \n\tMiddleName\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW'  OR changed_flag='UPDATE'\n),\nSEQ_customer AS (\n\tCREATE SEQUENCE SEQ_customer\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_customer_ak_id AS (\n\tSELECT\n\tSEQ_customer.NEXTVAL AS i_NEXTVAL,\n\tcust_ak_id AS i_cust_ak_id,\n\tcontract_key,\n\tcust_role,\n\tcustomer_number,\n\tname,\n\tfed_tax_id,\n\tdoing_bus_as,\n\tsic_code,\n\tnaics_code,\n\tlgl_ent_code,\n\tyr_in_bus,\n\tph_num_full,\n\tph_area_code,\n\tph_exchange,\n\tph_num,\n\tph_extension,\n\tbus_email_addr,\n\tpif_sort_name,\n\tchanged_flag AS i_changed_flag,\n\to_lgl_ent_code_id AS lgl_ent_code_id,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\t1 AS o_crrnt_snpsht_flag,\n\t-- *INF*: IIF(ISNULL(i_cust_ak_id),i_NEXTVAL,i_cust_ak_id)\n\tIFF(i_cust_ak_id IS NULL, i_NEXTVAL, i_cust_ak_id) AS o_cust_ak_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_audit_id,\n\t-- *INF*: IIF(i_changed_flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(i_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS o_eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_source_sys_id,\n\tSYSDATE AS o_created_date,\n\tSYSDATE AS o_modified_date\n\tFROM FIL_insert\n),\nTGT_contract_customer_INSERT AS (\n\tINSERT INTO contract_customer\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, contract_cust_ak_id, cust_num, contract_key, cust_role, name, fed_tax_id, doing_bus_as, sic_code, naics_code, lgl_ent_code, yr_in_bus, ph_num_full, ph_area_code, ph_exchange, ph_num, ph_extension, bus_email_addr, sort_name, sup_lgl_ent_code_id, FirstName, LastName, MiddleName)\n\tSELECT \n\to_crrnt_snpsht_flag AS CRRNT_SNPSHT_FLAG, \n\to_audit_id AS AUDIT_ID, \n\to_eff_from_date AS EFF_FROM_DATE, \n\to_eff_to_date AS EFF_TO_DATE, \n\to_source_sys_id AS SOURCE_SYS_ID, \n\to_created_date AS CREATED_DATE, \n\to_modified_date AS MODIFIED_DATE, \n\to_cust_ak_id AS CONTRACT_CUST_AK_ID, \n\tcustomer_number AS CUST_NUM, \n\tCONTRACT_KEY, \n\tCUST_ROLE, \n\tNAME, \n\tFED_TAX_ID, \n\tDOING_BUS_AS, \n\tSIC_CODE, \n\tNAICS_CODE, \n\tLGL_ENT_CODE, \n\tYR_IN_BUS, \n\tPH_NUM_FULL, \n\tPH_AREA_CODE, \n\tPH_EXCHANGE, \n\tPH_NUM, \n\tPH_EXTENSION, \n\tBUS_EMAIL_ADDR, \n\tpif_sort_name AS SORT_NAME, \n\tlgl_ent_code_id AS SUP_LGL_ENT_CODE_ID, \n\tFIRSTNAME, \n\tLASTNAME, \n\tMIDDLENAME\n\tFROM EXP_customer_ak_id\n),\nSQ_contract_customer AS (\n\tSELECT \r\n\t\tcontract_cust_id,\r\n\t\teff_from_date,\r\n\t\teff_to_date,\r\n\t\tcontract_cust_ak_id \r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer a\r\n\tWHERE  exists \r\n\t\t   (SELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer b\r\n\t           WHERE crrnt_snpsht_flag = 1 AND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND a.contract_cust_ak_id=b.contract_cust_ak_id GROUP BY contract_cust_ak_id  HAVING count(*) > 1)\r\n\tAND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tORDER BY  contract_cust_ak_id , eff_from_date  DESC\r\n\t\r\n\t--IN Subquery exists to pick AK ID column values that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag \r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tcontract_cust_id AS i_cust_id,\n\teff_from_date AS i_eff_from_date,\n\teff_to_date AS i_orig_eff_to_date,\n\tcontract_cust_ak_id AS i_cust_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_cust_ak_id = v_prev_cust_ak_id  ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),i_orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_cust_ak_id = v_prev_cust_ak_id, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\ti_orig_eff_to_date) AS v_eff_to_date,\n\ti_cust_ak_id AS v_prev_cust_ak_id,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\ti_orig_eff_to_date AS o_orig_eff_to_date,\n\ti_cust_id AS o_cust_id,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_contract_customer\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\to_orig_eff_to_date AS i_orig_eff_to_date, \n\to_cust_id AS cust_id, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE i_orig_eff_to_date != eff_to_date\n),\nUPD_customer AS (\n\tSELECT\n\tcust_id, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTGT_contract_customer_UPDATE AS (\n\tMERGE INTO contract_customer AS T\n\tUSING UPD_customer AS S\n\tON T.contract_cust_id = S.cust_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905512"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604103"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:12:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:29:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}