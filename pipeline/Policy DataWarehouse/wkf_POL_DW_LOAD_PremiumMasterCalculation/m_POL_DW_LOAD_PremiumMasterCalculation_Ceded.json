{
    "name": "m_POL_DW_LOAD_PremiumMasterCalculation_Ceded",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PremiumMasterCalculation_Ceded",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumCalculationCededTransactions AS (\n\tSELECT\tPOL.source_sys_id,\r\n\t\tPOL.pol_ak_id, \r\n\t      POL.agency_ak_id,\r\n\t\tPOL.pol_sym, \r\n\t\tPOL.pol_num, \r\n\t\tPOL.pol_mod, \r\n\t\tPOL.pol_key, \r\n\t\tPOL.pol_eff_date, \r\n\t\tPOL.pol_exp_date, \r\n\t\tPOL.pms_pol_lob_code, \r\n\t\tPOL.pol_term, \r\n\t\tPOL.pol_issue_code, \r\n\t      POL.pol_audit_frqncy,\r\n\t\tPOL.contract_cust_ak_id, \r\n\t\tCUSADDR.addr_line_1, \r\n\t\tCUSADDR.city_name, \r\n\t\tCUSADDR.state_prov_code, \r\n\t\tCUSADDR.zip_postal_code, \r\n\t\tLOC.RiskLocationAKID, \r\n\t\tLOC.LocationUnitNumber, \r\n\t\tLOC.LocationIndicator, \r\n\t\tPOLCOV.PolicyCoverageAKID, \r\n\t\tPOLCOV.InsuranceLine, \r\n\t\tPOLCOV.TypeBureauCode, \r\n\t\tPOLCOV.PolicyCoverageEffectiveDate, \r\n\t\tPOLCOV.PolicyCoverageExpirationDate, \r\n\t\tSTATCOV.StatisticalCoverageAKID, \r\n\t\tSTATCOV.SubLocationUnitNumber, \r\n\t\tSTATCOV.RiskUnitGroup, \r\n\t\tSTATCOV.RiskUnitGroupSequenceNumber, \r\n\t\tSTATCOV.RiskUnit, \r\n\t\tSTATCOV.RiskUnitSequenceNumber, \r\n\t\tSTATCOV.MajorPerilCode, \r\n\t\tSTATCOV.MajorPerilSequenceNumber, \r\n\t\tSTATCOV.SublineCode, \r\n\t\tSTATCOV.PMSTypeExposure, \r\n\t\tSTATCOV.ClassCode, \r\n\t\tPT.Exposure, \r\n\t\tSTATCOV.StatisticalCoverageEffectiveDate,\r\n\t\tSTATCOV.StatisticalCoverageExpirationDate, \r\n\t\tPT.AgencyActualCommissionRate, \r\n\t\tSTATCOV.ReinsuranceSectionCode, \r\n\t\tPT.PremiumLoadSequence, \r\n\t\tPT.PremiumTransactionAKID, \r\n\t      PT.ReinsuranceCoverageAKID, \r\n\t\tPT.PMSFunctionCode, \r\n\t\tPT.PremiumTransactionCode, \r\n\t\tPT.PremiumTransactionEnteredDate, \r\n\t\tPT.PremiumTransactionEffectiveDate, \t\t\r\n\t\tPT.PremiumTransactionExpirationDate, \r\n\t\tPT.PremiumTransactionBookedDate, \r\n\t\tPT.PremiumTransactionAmount, \r\n\t\tPT.FullTermPremium, \r\n\t\tPT.PremiumType, \r\n\t\tPT.ReasonAmendedCode, \r\n\t\tSTATCOD.BureauStatisticalCodeAKID, \r\n\t\tSTATCOD.BureauCode1, \r\n\t\tSTATCOD.BureauCode2, \r\n\t\tSTATCOD.BureauCode3, \r\n\t\tSTATCOD.BureauCode4, \r\n\t\tSTATCOD.BureauCode5, \r\n\t\tSTATCOD.BureauCode6, \r\n\t\tSTATCOD.BureauCode7, \r\n\t\tSTATCOD.BureauCode8, \r\n\t\tSTATCOD.BureauCode9, \r\n\t\tSTATCOD.BureauCode10, \r\n\t\tSTATCOD.BureauCode11, \r\n\t\tSTATCOD.BureauCode12, \r\n\t\tSTATCOD.BureauCode13, \r\n\t\tSTATCOD.BureauCode14, \r\n\t\tSTATCOD.BureauCode15, \r\n\t\tSTATCOD.BureauSpecialUseCode, \r\n\t\tSTATCOD.PMSAnnualStatementLine, \r\n\t\tSTATCOD.RatingDateIndicator, \r\n\t\tSTATCOD.BureauStatisticalUserLine, \r\n\t\tSTATCOD.AuditReinstatementIndicator,\r\n\t\tPT.WrittenExposure, PT.DeclaredEventFlag\r\n\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy POL,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_address CUSADDR,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation LOC  with (nolock), \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage POLCOV  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage STATCOV  with (nolock),\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode STATCOD with (nolock),\r\n\t    \t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT with (nolock)\r\n\tWHERE \r\n\t    \t          CUSADDR.contract_cust_ak_id = POL.contract_cust_ak_id\r\n\t    \tAND LOC.PolicyAKID = POL.pol_ak_id\r\n\t\tAND LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\tAND POLCOV.PolicyCoverageAKID = STATCOV.PolicyCoverageAKID\r\n\t    \tAND STATCOV.StatisticalCoverageAKID = PT.StatisticalCoverageAKID\r\n\t    \tAND PT.PremiumTransactionAKID = STATCOD.PremiumTransactionAKID\r\n\t      AND PT.PremiumType = 'C'\r\n\t\tAND CUSADDR.crrnt_snpsht_flag = 1  \r\n\t\tAND POL.crrnt_snpsht_flag = 1 \r\n\t\tAND LOC.CurrentSnapshotFlag =1\r\n\t\tAND STATCOV.CurrentSnapshotFlag =1 \r\n\t\tAND POLCOV.CurrentSnapshotFlag =1 \r\n\t\tAND PT.CurrentSnapshotFlag =1 \r\n\t\tAND STATCOD.CurrentSnapshotFlag =1\r\n\t      \tAND datepart(MM,PremiumTransactionBookedDate)=datepart(MM,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE()))) \r\n\t\tAND datepart(YYYY,PremiumTransactionBookedDate)=datepart(YYYY,(DATEADD(MM,@{pipeline().parameters.NO_OF_MONTHS},GETDATE())))\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\t\tORDER BY \r\n\t\t POL.pol_sym\r\n\t    \t,POL.pol_num\r\n\t    \t,POL.pol_mod \r\n\t      ,PT.PMSFunctionCode\r\n\t\t,POLCOV.InsuranceLine\r\n\t\t,LOC.LocationUnitNumber\r\n\t\t,STATCOV.SubLocationUnitNumber\r\n\t\t,STATCOV.RiskUnitGroup\r\n\t\t,STATCOV.RiskUnitGroupSequenceNumber\r\n\t\t,STATCOV.RiskUnit \r\n\t\t,STATCOV.RiskUnitSequenceNumber \r\n\t\t,STATCOV.PMSTypeExposure\r\n\t\t,STATCOV.MajorPerilCode\r\n\t\t,STATCOV.MajorPerilSequenceNumber\r\n\t\t,POLCOV.PolicyCoverageEffectiveDate\r\n\t    \t,PT.PremiumTransactionEffectiveDate\r\n\t\t,PT.PremiumTransactionEnteredDate\r\n\t\t,PT.PremiumLoadSequence  desc\n),\nEXP_CededTransactions AS (\n\tSELECT\n\tsource_sys_id,\n\tagency_ak_id,\n\tpol_ak_id,\n\tpol_sym,\n\tpol_num,\n\tpol_mod,\n\tpol_key,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpms_pol_lob_code,\n\tpol_issue_code,\n\tcontract_cust_ak_id,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tRiskLocationAKID,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tPolicyCoverageAKID,\n\tInsuranceLine,\n\tTypeBureauCode,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tStatisticalCoverageAKID,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tSublineCode,\n\tPMSTypeExposure,\n\tClassCode,\n\tExposure AS i_Exposure,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tAgencyActualCommissionRate,\n\tReinsuranceSectionCode,\n\tPremiumLoadSequence,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tPMSFunctionCode,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tBureauStatisticalCodeAKID,\n\tBureauCode1,\n\tBureauCode2,\n\tBureauCode3,\n\tBureauCode4,\n\tBureauCode5,\n\tBureauCode6,\n\tBureauCode7,\n\tBureauCode8,\n\tBureauCode9,\n\tBureauCode10,\n\tBureauCode11,\n\tBureauCode12,\n\tBureauCode13,\n\tBureauCode14,\n\tBureauCode15,\n\tBureauSpecialUseCode,\n\tPMSAnnualStatementLine,\n\tRatingDateIndicator,\n\tBureauStatisticalUserLine,\n\tAuditReinstatementIndicator,\n\tpol_audit_frqncy,\n\tpol_term,\n\tWrittenExposure AS i_WrittenExposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(InsuranceLine))='WC' AND PremiumTransactionAmount<0 AND i_WrittenExposure>0,\r\n\t-- -1 * i_WrittenExposure,\r\n\t-- i_WrittenExposure)\n\tDECODE(TRUE,\n\tLTRIM(RTRIM(InsuranceLine)) = 'WC' AND PremiumTransactionAmount < 0 AND i_WrittenExposure > 0, - 1 * i_WrittenExposure,\n\ti_WrittenExposure) AS v_WrittenExposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(InsuranceLine))='WC' AND PremiumTransactionAmount<0 AND i_Exposure>0,\r\n\t-- -1 * i_Exposure,\r\n\t-- i_Exposure)\n\tDECODE(TRUE,\n\tLTRIM(RTRIM(InsuranceLine)) = 'WC' AND PremiumTransactionAmount < 0 AND i_Exposure > 0, - 1 * i_Exposure,\n\ti_Exposure) AS o_Exposure,\n\tv_WrittenExposure AS o_WrittenExposure,\n\tDeclaredEventsFlag\n\tFROM SQ_PremiumCalculationCededTransactions\n),\nLKP_Reinsurance_Coverage AS (\n\tSELECT\n\treins_prcnt_facultative_commssn,\n\treins_cov_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\treins_prcnt_facultative_commssn,\n\t\t\treins_cov_ak_id\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.reinsurance_coverage\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY reins_cov_ak_id ORDER BY reins_prcnt_facultative_commssn DESC) = 1\n),\nlkp_sup_reason_amended_code AS (\n\tSELECT\n\tStandardReasonAmendedCode,\n\trsn_amended_code,\n\tsource_sys_id\n\tFROM (\n\t\tSELECT \n\t\t\tStandardReasonAmendedCode,\n\t\t\trsn_amended_code,\n\t\t\tsource_sys_id\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_reason_amended_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code,source_sys_id ORDER BY StandardReasonAmendedCode) = 1\n),\nEXP_Evaluate_fields AS (\n\tSELECT\n\tEXP_CededTransactions.agency_ak_id,\n\tEXP_CededTransactions.pol_ak_id,\n\tEXP_CededTransactions.pol_sym,\n\tEXP_CededTransactions.pol_num,\n\tEXP_CededTransactions.pol_mod,\n\tEXP_CededTransactions.pol_key,\n\tEXP_CededTransactions.pol_eff_date,\n\tEXP_CededTransactions.pol_exp_date,\n\tEXP_CededTransactions.pms_pol_lob_code,\n\tEXP_CededTransactions.pol_issue_code,\n\tEXP_CededTransactions.contract_cust_ak_id,\n\tEXP_CededTransactions.addr_line_1,\n\tEXP_CededTransactions.city_name,\n\tEXP_CededTransactions.state_prov_code,\n\tEXP_CededTransactions.zip_postal_code,\n\tEXP_CededTransactions.RiskLocationAKID,\n\tEXP_CededTransactions.LocationUnitNumber,\n\tEXP_CededTransactions.LocationIndicator,\n\tEXP_CededTransactions.PolicyCoverageAKID,\n\tEXP_CededTransactions.InsuranceLine,\n\tEXP_CededTransactions.TypeBureauCode,\n\tEXP_CededTransactions.PolicyCoverageEffectiveDate,\n\tEXP_CededTransactions.PolicyCoverageExpirationDate,\n\tEXP_CededTransactions.StatisticalCoverageAKID,\n\tEXP_CededTransactions.SubLocationUnitNumber,\n\tEXP_CededTransactions.RiskUnitGroup,\n\tEXP_CededTransactions.RiskUnitGroupSequenceNumber,\n\tEXP_CededTransactions.RiskUnit,\n\tEXP_CededTransactions.RiskUnitSequenceNumber,\n\tEXP_CededTransactions.MajorPerilCode,\n\tEXP_CededTransactions.MajorPerilSequenceNumber,\n\tEXP_CededTransactions.SublineCode,\n\tEXP_CededTransactions.PMSTypeExposure,\n\tEXP_CededTransactions.ClassCode,\n\tEXP_CededTransactions.o_Exposure AS Exposure,\n\tEXP_CededTransactions.StatisticalCoverageEffectiveDate,\n\tEXP_CededTransactions.StatisticalCoverageExpirationDate,\n\tLKP_Reinsurance_Coverage.reins_prcnt_facultative_commssn,\n\tEXP_CededTransactions.AgencyActualCommissionRate,\n\tEXP_CededTransactions.ReinsuranceSectionCode,\n\tEXP_CededTransactions.PremiumLoadSequence,\n\tEXP_CededTransactions.PremiumTransactionAKID,\n\tEXP_CededTransactions.ReinsuranceCoverageAKID,\n\tEXP_CededTransactions.PMSFunctionCode,\n\tEXP_CededTransactions.PremiumTransactionCode,\n\tEXP_CededTransactions.PremiumTransactionEnteredDate,\n\tEXP_CededTransactions.PremiumTransactionEffectiveDate,\n\tEXP_CededTransactions.PremiumTransactionExpirationDate,\n\tEXP_CededTransactions.PremiumTransactionBookedDate,\n\tEXP_CededTransactions.PremiumTransactionAmount,\n\tEXP_CededTransactions.FullTermPremium,\n\tEXP_CededTransactions.PremiumType,\n\tlkp_sup_reason_amended_code.StandardReasonAmendedCode AS ReasonAmendedCode,\n\tEXP_CededTransactions.BureauStatisticalCodeAKID,\n\tEXP_CededTransactions.BureauCode1,\n\tEXP_CededTransactions.BureauCode2,\n\tEXP_CededTransactions.BureauCode3,\n\tEXP_CededTransactions.BureauCode4,\n\tEXP_CededTransactions.BureauCode5,\n\tEXP_CededTransactions.BureauCode6,\n\tEXP_CededTransactions.BureauCode7,\n\tEXP_CededTransactions.BureauCode8,\n\tEXP_CededTransactions.BureauCode9,\n\tEXP_CededTransactions.BureauCode10,\n\tEXP_CededTransactions.BureauCode11,\n\tEXP_CededTransactions.BureauCode12,\n\tEXP_CededTransactions.BureauCode13,\n\tEXP_CededTransactions.BureauCode14,\n\tEXP_CededTransactions.BureauCode15,\n\tEXP_CededTransactions.BureauSpecialUseCode,\n\tEXP_CededTransactions.PMSAnnualStatementLine,\n\tEXP_CededTransactions.RatingDateIndicator,\n\tEXP_CededTransactions.BureauStatisticalUserLine,\n\t-- *INF*: BureauCode1 || BureauCode2 || BureauCode3 || BureauCode4 || BureauCode5 || BureauCode6 || BureauCode7 || BureauCode8 || BureauCode9 || BureauCode10 || BureauCode11 || BureauCode12 || BureauCode13 || BureauCode14 || BureauCode15\r\n\t-- \r\n\t-- ---- we concatenate the individual BureauCode components to get a 38 byte string for future manipulations\n\tBureauCode1 || BureauCode2 || BureauCode3 || BureauCode4 || BureauCode5 || BureauCode6 || BureauCode7 || BureauCode8 || BureauCode9 || BureauCode10 || BureauCode11 || BureauCode12 || BureauCode13 || BureauCode14 || BureauCode15 AS v_StatisticalCodes,\n\t-- *INF*: SUBSTR(TO_CHAR((ADD_TO_DATE(SYSTIMESTAMP(),'MM',@{pipeline().parameters.NO_OF_MONTHS})),'YYYYMMDD'),1,6)\r\n\t-- \r\n\t-- -- This calculation derives the monthly close out date subtracting the parametrized number of months from current system date\n\tSUBSTR(TO_CHAR(( ADD_TO_DATE(SYSTIMESTAMP(), 'MM', @{pipeline().parameters.NO_OF_MONTHS}) ), 'YYYYMMDD'), 1, 6) AS v_Account_Date,\n\t-- *INF*: IIF(substr(TO_CHAR(PremiumTransactionBookedDate, 'YYYYMMDD'),1,6) = v_Account_Date,'VALID','INVALID')\r\n\t-- \r\n\t-- --- We flag transactions that were booked outside of the closeout month as invalid\n\tIFF(substr(TO_CHAR(PremiumTransactionBookedDate, 'YYYYMMDD'), 1, 6) = v_Account_Date, 'VALID', 'INVALID') AS v_Valid_Record_Generation,\n\t-- *INF*: 'REINSURANCE'\r\n\t-- \r\n\t-- \r\n\t-- --Below check was comented out as part of Limits, as we need the Transactions which have a premium of 0.0\r\n\t-- --IIF(PremiumTransactionAmount = 0.0 AND FullTermPremium =0.0,'NOGENERATION','REINSURANCE')\r\n\t-- \r\n\t-- -- Flagging transactions with zero monies for dropping since they are not passed through to the Premium Master\r\n\t-- \n\t'REINSURANCE' AS v_status,\n\t-- *INF*: IIF(v_Valid_Record_Generation = 'VALID',v_status,v_Valid_Record_Generation)\r\n\t-- \r\n\t-- -- setting a flag for transactions in the closeout month and marking the remaining and/or those with zero monies as invalid\n\tIFF(v_Valid_Record_Generation = 'VALID', v_status, v_Valid_Record_Generation) AS Status,\n\tv_StatisticalCodes AS StatisticalCodes,\n\t-- *INF*: IIF(RatingDateIndicator='C',StatisticalCoverageEffectiveDate,pol_eff_date)\r\n\t-- \r\n\t-- -- Inception date defaults to policy effective date except if the Rating Date Indicator is 'C' in which case it is the transaction Coverage effective date\n\tIFF(RatingDateIndicator = 'C', StatisticalCoverageEffectiveDate, pol_eff_date) AS v_inc_date,\n\t-- *INF*: DECODE(TRUE,IN( RTRIM(PremiumTransactionCode),'83','84'),PremiumTransactionEffectiveDate,v_inc_date)\r\n\t-- \r\n\t-- -- for SERP or SERP reversed premium transactions, the inception date is overriden by transaction effective date\n\tDECODE(TRUE,\n\tIN(RTRIM(PremiumTransactionCode), '83', '84'), PremiumTransactionEffectiveDate,\n\tv_inc_date) AS PremiumMasterBureauInceptionDate,\n\t-- *INF*: rtrim(addr_line_1)\n\trtrim(addr_line_1) AS PremiumMasterRiskAddress,\n\t-- *INF*: rtrim(city_name) || ', ' || rtrim(state_prov_code)\n\trtrim(city_name) || ', ' || rtrim(state_prov_code) AS PremiumMasterRiskCityState,\n\tEXP_CededTransactions.AuditReinstatementIndicator,\n\t-- *INF*: IIF(RTRIM(PremiumTransactionCode) = '15' AND RTRIM(AuditReinstatementIndicator) = 'R','R',' ')\r\n\t-- \r\n\t-- -- Renewal indicator is defaulted to spaces except if it is a reinstated policy in which case it is 'R'\n\tIFF(RTRIM(PremiumTransactionCode) = '15' AND RTRIM(AuditReinstatementIndicator) = 'R', 'R', ' ') AS PremiumMasterRenewalIndicator,\n\tEXP_CededTransactions.pol_audit_frqncy,\n\tEXP_CededTransactions.pol_term,\n\t-- *INF*: 'CEDED'\r\n\t-- \r\n\t-- -- flagging pure ceded transactions that pass through and create corresponding ceded transaction on a one to one basis\n\t'CEDED' AS PremiumMasterRecordType,\n\tEXP_CededTransactions.o_WrittenExposure AS WrittenExposure,\n\tEXP_CededTransactions.DeclaredEventsFlag\n\tFROM EXP_CededTransactions\n\tLEFT JOIN LKP_Reinsurance_Coverage\n\tON LKP_Reinsurance_Coverage.reins_cov_ak_id = EXP_CededTransactions.ReinsuranceCoverageAKID\n\tLEFT JOIN lkp_sup_reason_amended_code\n\tON lkp_sup_reason_amended_code.rsn_amended_code = EXP_CededTransactions.ReasonAmendedCode AND lkp_sup_reason_amended_code.source_sys_id = EXP_CededTransactions.source_sys_id\n),\nLKP_Sup_Type_Bureau_Code AS (\n\tSELECT\n\ttype_bureau_code,\n\tStandardTypeBureauCode,\n\tTypeBureauCode\n\tFROM (\n\t\tSELECT \n\t\t\ttype_bureau_code,\n\t\t\tStandardTypeBureauCode,\n\t\t\tTypeBureauCode\n\t\tFROM sup_type_bureau_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_bureau_code ORDER BY type_bureau_code) = 1\n),\nFIL_Invalid_Records AS (\n\tSELECT\n\tEXP_Evaluate_fields.agency_ak_id AS AgencyAKID, \n\tEXP_Evaluate_fields.pol_ak_id AS PolicyAKID, \n\tEXP_Evaluate_fields.contract_cust_ak_id AS ContractCustomerAKID, \n\tEXP_Evaluate_fields.RiskLocationAKID, \n\tEXP_Evaluate_fields.PolicyCoverageAKID, \n\tEXP_Evaluate_fields.StatisticalCoverageAKID, \n\tEXP_Evaluate_fields.PremiumTransactionAKID, \n\tEXP_Evaluate_fields.BureauStatisticalCodeAKID, \n\tEXP_Evaluate_fields.ReinsuranceCoverageAKID, \n\tEXP_Evaluate_fields.pol_sym, \n\tEXP_Evaluate_fields.pol_num, \n\tEXP_Evaluate_fields.pol_mod, \n\tEXP_Evaluate_fields.pol_key, \n\tEXP_Evaluate_fields.pol_eff_date, \n\tEXP_Evaluate_fields.pol_exp_date, \n\tEXP_Evaluate_fields.pms_pol_lob_code, \n\tEXP_Evaluate_fields.pol_issue_code, \n\tEXP_Evaluate_fields.LocationUnitNumber, \n\tEXP_Evaluate_fields.LocationIndicator, \n\tEXP_Evaluate_fields.InsuranceLine, \n\tLKP_Sup_Type_Bureau_Code.StandardTypeBureauCode AS TypeBureauCode, \n\tEXP_Evaluate_fields.PolicyCoverageEffectiveDate, \n\tEXP_Evaluate_fields.PolicyCoverageExpirationDate, \n\tEXP_Evaluate_fields.SubLocationUnitNumber, \n\tEXP_Evaluate_fields.RiskUnitGroup, \n\tEXP_Evaluate_fields.RiskUnitGroupSequenceNumber, \n\tEXP_Evaluate_fields.RiskUnit, \n\tEXP_Evaluate_fields.RiskUnitSequenceNumber, \n\tEXP_Evaluate_fields.MajorPerilCode, \n\tEXP_Evaluate_fields.MajorPerilSequenceNumber, \n\tEXP_Evaluate_fields.SublineCode, \n\tEXP_Evaluate_fields.PMSTypeExposure, \n\tEXP_Evaluate_fields.ClassCode, \n\tEXP_Evaluate_fields.Exposure, \n\tEXP_Evaluate_fields.StatisticalCoverageEffectiveDate, \n\tEXP_Evaluate_fields.StatisticalCoverageExpirationDate, \n\tEXP_Evaluate_fields.reins_prcnt_facultative_commssn AS AgencyActualCommissionRate, \n\tEXP_Evaluate_fields.ReinsuranceSectionCode, \n\tEXP_Evaluate_fields.PremiumLoadSequence, \n\tEXP_Evaluate_fields.PMSFunctionCode, \n\tEXP_Evaluate_fields.PremiumTransactionCode, \n\tEXP_Evaluate_fields.PremiumTransactionEnteredDate, \n\tEXP_Evaluate_fields.PremiumTransactionEffectiveDate, \n\tEXP_Evaluate_fields.PremiumTransactionExpirationDate, \n\tEXP_Evaluate_fields.PremiumTransactionBookedDate, \n\tEXP_Evaluate_fields.PremiumTransactionAmount, \n\tEXP_Evaluate_fields.FullTermPremium, \n\tEXP_Evaluate_fields.PremiumType, \n\tEXP_Evaluate_fields.ReasonAmendedCode, \n\tEXP_Evaluate_fields.BureauSpecialUseCode, \n\tEXP_Evaluate_fields.PMSAnnualStatementLine, \n\tEXP_Evaluate_fields.RatingDateIndicator, \n\tEXP_Evaluate_fields.BureauStatisticalUserLine, \n\tEXP_Evaluate_fields.Status, \n\tEXP_Evaluate_fields.StatisticalCodes, \n\tEXP_Evaluate_fields.PremiumMasterBureauInceptionDate, \n\tEXP_Evaluate_fields.PremiumMasterRiskAddress, \n\tEXP_Evaluate_fields.PremiumMasterRiskCityState, \n\tEXP_Evaluate_fields.PremiumMasterRenewalIndicator, \n\tEXP_Evaluate_fields.pol_audit_frqncy, \n\tEXP_Evaluate_fields.pol_term, \n\tEXP_Evaluate_fields.PremiumMasterRecordType, \n\tEXP_Evaluate_fields.WrittenExposure, \n\tEXP_Evaluate_fields.DeclaredEventsFlag\n\tFROM EXP_Evaluate_fields\n\tLEFT JOIN LKP_Sup_Type_Bureau_Code\n\tON LKP_Sup_Type_Bureau_Code.type_bureau_code = EXP_Evaluate_fields.TypeBureauCode\n\tWHERE Status = 'REINSURANCE'\r\n\r\n--- Filters all invalid records that are ineligible because of date or premium monies being zero\n),\nmplt_PremiumMasterStatisticalCodeDerivation AS (WITH\n\tLKP_Pif_43LD_for_AuditCode AS (\n\t\tSELECT\n\t\tpmd4d_frequency,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module,\n\t\tpmd4d_insurance_line\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.pmd4d_frequency as pmd4d_frequency, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module, A.pmd4d_insurance_line as pmd4d_insurance_line FROM \r\n\t\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_43ld_stage A\r\n\t\t\tWHERE A.pmd4d_segment_id = '43'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,pmd4d_insurance_line ORDER BY pmd4d_frequency DESC) = 1\n\t),\n\tLKP_PIF_03_for_CounterSign AS (\n\t\tSELECT\n\t\tcomments_area_Return,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.comments_reason_suspended + A.comments_area as comments_area_Return, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_03_stage A\r\n\t\t\twhere A.comments_reason_suspended = 'CS'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module ORDER BY comments_area_Return DESC) = 1\n\t),\n\tLKP_PIF_02_FOR_FIELDS AS (\n\t\tSELECT\n\t\tpif_number_installments_a,\n\t\tpol_sym,\n\t\tpol_num,\n\t\tpol_mod,\n\t\tpif_symbol,\n\t\tpif_policy_number,\n\t\tpif_module\n\t\tFROM (\n\t\t\tSELECT DISTINCT A.pif_number_installments_a as pif_number_installments_a, A.pif_symbol as pif_symbol, A.pif_policy_number as pif_policy_number, A.pif_module as pif_module \r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME2}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.arch_pif_02_stage A\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module ORDER BY pif_number_installments_a DESC) = 1\n\t),\n\tIN_PremiumMasterRecord AS (\n\t\t\n\t),\n\tEXP_Pre_StatCode_ops AS (\n\t\tSELECT\n\t\tSourceSystemID,\n\t\tAgencyAKID,\n\t\tPolicyAKID,\n\t\tContractCustomerAKID,\n\t\tRiskLocationAKID,\n\t\tPolicyCoverageAKID,\n\t\tStatisticalCoverageAKID,\n\t\tReinsuranceCoverageAKID,\n\t\tPremiumTransactionAKID,\n\t\tBureauStatisticalCodeAKID,\n\t\tPremiumTransactionCode,\n\t\tPremiumTransactionBookedDate,\n\t\tPolicyCoverageEffectiveDate,\n\t\tPolicyCoverageExpirationDate,\n\t\tPremiumTransactionEffectiveDate,\n\t\tPremiumTransactionExpirationDate,\n\t\tPremiumType AS PremiumMasterPremiumType,\n\t\tAgencyActualCommissionRate,\n\t\tExposure,\n\t\tStatisticalCodes,\n\t\tBureauInceptionDate AS PremiumMasterBureauInceptionDate,\n\t\tPremiumTransactionAmount,\n\t\tFullTermPremium,\n\t\tRiskAddress AS PremiumMasterRiskAddress,\n\t\tRiskCityState AS PremiumMasterRiskCityState,\n\t\tRenewalIndicator AS PremiumMasterRenewalIndicator,\n\t\tClassCode,\n\t\tTypeBureauCode,\n\t\t-- *INF*: LTRIM(RTRIM(TypeBureauCode))\r\n\t\t-- \r\n\t\t-- -- Type Bureau Code is transformed in the statistical code expression however it passes through unchanged to the target field\n\t\tLTRIM(RTRIM(TypeBureauCode)) AS v_type_bureau,\n\t\tMajorPerilCode,\n\t\tPremiumLoadSequence5,\n\t\t-- *INF*: DECODE(TRUE,IN( v_type_bureau,'AL','LP','AI','LI','RL'), '100',\r\n\t\t-- IN( v_type_bureau,'GS','GM','RG'),'400',\r\n\t\t-- IN( v_type_bureau,'WC','WP'),'500',\r\n\t\t-- IN( v_type_bureau,'GL','GI','GN','RQ'),'600',\r\n\t\t-- IN( v_type_bureau,'FF','FM','BF','BP','FT','FP'),'711',\r\n\t\t-- IN( v_type_bureau,'BD'),'722',\r\n\t\t-- IN( v_type_bureau,'BI','BT','RB','CR','C1','C2'),'800','N/A')\n\t\tDECODE(TRUE,\n\t\tIN(v_type_bureau, 'AL', 'LP', 'AI', 'LI', 'RL'), '100',\n\t\tIN(v_type_bureau, 'GS', 'GM', 'RG'), '400',\n\t\tIN(v_type_bureau, 'WC', 'WP'), '500',\n\t\tIN(v_type_bureau, 'GL', 'GI', 'GN', 'RQ'), '600',\n\t\tIN(v_type_bureau, 'FF', 'FM', 'BF', 'BP', 'FT', 'FP'), '711',\n\t\tIN(v_type_bureau, 'BD'), '722',\n\t\tIN(v_type_bureau, 'BI', 'BT', 'RB', 'CR', 'C1', 'C2'), '800',\n\t\t'N/A') AS v_BureauStatisticalLine,\n\t\tv_BureauStatisticalLine AS PremiumMasterBureauStatisticalLine,\n\t\tpol_key5,\n\t\tpol_sym,\n\t\tpol_num,\n\t\tpol_mod,\n\t\tInsuranceLine5,\n\t\t-- *INF*: IIF(InsuranceLine5='N/A','  ',LTRIM(RTRIM(InsuranceLine5)))\n\t\tIFF(InsuranceLine5 = 'N/A', '  ', LTRIM(RTRIM(InsuranceLine5))) AS ins_line,\n\t\tpif02_audit_code,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_43LD_FOR_AUDITCODE(pol_sym, pol_num, pol_mod, ins_line), 'N/A')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pmd4d_frequency, 'N/A') AS v_pif43ld_audit_code,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', IIF(ISNULL(v_pif43ld_audit_code),pif02_audit_code,v_pif43ld_audit_code),'N/A')\n\t\tIFF(SourceSystemID = 'PMS', IFF(v_pif43ld_audit_code IS NULL, pif02_audit_code, v_pif43ld_audit_code), 'N/A') AS AuditCode,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_03_FOR_COUNTERSIGN(pol_sym,pol_num,pol_mod), 'N/A')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.comments_area_Return, 'N/A') AS v_comments_area,\n\t\t-- *INF*: IIF(SUBSTR(v_comments_area,1,2)='CS',SUBSTR(v_comments_area,3,12),'')\n\t\tIFF(SUBSTR(v_comments_area, 1, 2) = 'CS', SUBSTR(v_comments_area, 3, 12), '') AS comments_cs,\n\t\tpol_eff_date5,\n\t\tpol_exp_date5,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_exp_date5, 'YYYY'))\n\t\tto_integer(TO_CHAR(pol_exp_date5, 'YYYY')) AS v_pif_exp_yr,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_exp_date5, 'MM'))\n\t\tto_integer(TO_CHAR(pol_exp_date5, 'MM')) AS v_pif_exp_mm,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_eff_date5, 'YYYY'))\n\t\tto_integer(TO_CHAR(pol_eff_date5, 'YYYY')) AS v_pif_eff_yr,\n\t\t-- *INF*: to_integer(TO_CHAR(pol_eff_date5, 'MM'))\n\t\tto_integer(TO_CHAR(pol_eff_date5, 'MM')) AS v_pif_eff_mm,\n\t\t-- *INF*: IIF(SourceSystemID='PMS', :LKP.LKP_PIF_02_FOR_FIELDS(pol_sym,pol_num,pol_mod),'1')\n\t\tIFF(SourceSystemID = 'PMS', LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_number_installments_a, '1') AS v_pif_installment_term,\n\t\t-- *INF*: TO_INTEGER(v_pif_installment_term)\n\t\tTO_INTEGER(v_pif_installment_term) AS v_pif_installment_term_n,\n\t\t-- *INF*:  ( v_pif_exp_yr * 12 + v_pif_exp_mm) - (v_pif_eff_yr * 12 + v_pif_eff_mm)\r\n\t\t-- \r\n\t\t-- --to_integer(DATE_DIFF(pol_exp_date5,pol_eff_date5,'MM'))\n\t\t( v_pif_exp_yr * 12 + v_pif_exp_mm ) - ( v_pif_eff_yr * 12 + v_pif_eff_mm ) AS v_calc_pol_term,\n\t\t-- *INF*: IIF(Pol_Term='999' or ISNULL(Pol_Term),IIF(v_calc_pol_term<1,1,v_calc_pol_term),to_integer(Pol_Term))\n\t\tIFF(Pol_Term = '999' OR Pol_Term IS NULL, IFF(v_calc_pol_term < 1, 1, v_calc_pol_term), to_integer(Pol_Term)) AS v_pol_term,\n\t\t-- *INF*: (to_integer(DATE_DIFF(PremiumTransactionEffectiveDate,pol_eff_date5,'MM')) / v_pif_installment_term_n) + 1\n\t\t( to_integer(DATE_DIFF(PremiumTransactionEffectiveDate, pol_eff_date5, 'MM')) / v_pif_installment_term_n ) + 1 AS v_calc_installments,\n\t\t-- *INF*: v_pif_eff_yr+TO_INTEGER((v_pif_installment_term_n * v_calc_installments)/12,TRUE)+1\n\t\tv_pif_eff_yr + TO_INTEGER(( v_pif_installment_term_n * v_calc_installments ) / 12, TRUE) + 1 AS v_calc_yr,\n\t\t-- *INF*: IIF(v_pif_installment_term_n <> 0,IIF(Pol_Term='0' OR Pol_Term='999',v_pif_exp_yr,\r\n\t\t-- \tIIF(v_calc_yr<v_pif_exp_yr,v_calc_yr,v_pif_exp_yr)),9999)\n\t\tIFF(v_pif_installment_term_n <> 0, IFF(Pol_Term = '0' OR Pol_Term = '999', v_pif_exp_yr, IFF(v_calc_yr < v_pif_exp_yr, v_calc_yr, v_pif_exp_yr)), 9999) AS v_PremiumMasterPolicyExpirationYear,\n\t\t-- *INF*: substr(to_char(v_PremiumMasterPolicyExpirationYear),3,2)\n\t\tsubstr(to_char(v_PremiumMasterPolicyExpirationYear), 3, 2) AS PremiumMasterPolicyExpirationYear,\n\t\t-- *INF*: to_char(v_pol_term)\n\t\tto_char(v_pol_term) AS PremiumMasterPolicyTerm,\n\t\t-- *INF*: IIF(IN(v_pif_installment_term,'0','999'),v_pif_installment_term,\r\n\t\t-- to_char(v_calc_installments))\n\t\tIFF(IN(v_pif_installment_term, '0', '999'), v_pif_installment_term, to_char(v_calc_installments)) AS PremiumMasterInstallmentNumber,\n\t\tRecordType AS PremiumMasterRecordType,\n\t\tBureauStatisticalUserLine5,\n\t\t-- *INF*: ltrim(rtrim(BureauStatisticalUserLine5))\r\n\t\t-- \r\n\t\t-- -- Product line is the first two bytes of the stat sarbreakdownline and saruserline fields\n\t\tltrim(rtrim(BureauStatisticalUserLine5)) AS ProductLine,\n\t\tSubLineCode,\n\t\tReasonAmendedCode,\n\t\tPol_Term,\n\t\tRatingCoverageAKId,\n\t\tRatingCoverageEffectiveDate,\n\t\tRatingCoverageExpirationDate,\n\t\tPremiumTransactionEnteredDate,\n\t\tPremiumMasterCustomerCareCommissionRate,\n\t\tWrittenExposure\n\t\tFROM IN_PremiumMasterRecord\n\t\tLEFT JOIN LKP_PIF_43LD_FOR_AUDITCODE LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line\n\t\tON LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_symbol = pol_sym\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_policy_number = pol_num\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pif_module = pol_mod\n\t\tAND LKP_PIF_43LD_FOR_AUDITCODE_pol_sym_pol_num_pol_mod_ins_line.pmd4d_insurance_line = ins_line\n\t\n\t\tLEFT JOIN LKP_PIF_03_FOR_COUNTERSIGN LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod\n\t\tON LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_symbol = pol_sym\n\t\tAND LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_policy_number = pol_num\n\t\tAND LKP_PIF_03_FOR_COUNTERSIGN_pol_sym_pol_num_pol_mod.pif_module = pol_mod\n\t\n\t\tLEFT JOIN LKP_PIF_02_FOR_FIELDS LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod\n\t\tON LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_symbol = pol_sym\n\t\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_policy_number = pol_num\n\t\tAND LKP_PIF_02_FOR_FIELDS_pol_sym_pol_num_pol_mod.pif_module = pol_mod\n\t\n\t),\n\tEXP_Transform_Statistical_Codes AS (\n\t\tSELECT\n\t\tStatisticalCodes AS statistical_code,\n\t\tMajorPerilCode AS major_peril,\n\t\tTypeBureauCode AS Type_Bureau,\n\t\tClassCode AS sar_class_code,\n\t\t-- *INF*: statistical_code\r\n\t\t-- \r\n\t\t-- --DECODE(TRUE, Type_Bureau = 'BE', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'BF', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RP' AND major_peril = '145', ' '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RL' AND major_peril = '114', '  '  || statistical_code,\r\n\t\t-- --Type_Bureau = 'RL' AND major_peril = '119', '     '  || statistical_code,\r\n\t\t-- --statistical_code)\r\n\t\t-- \r\n\t\t-- ---- Had to introduce space at the begining of the field because of LTRIM(RTRIM)) to statistical codes in Temp_Policy_transaction Table.\n\t\tstatistical_code AS v_statistical_code,\n\t\t'D' AS v_stat_plan_id,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,1,1))=0,' ',SUBSTR(v_statistical_code,1,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 1, 1)) = 0, ' ', SUBSTR(v_statistical_code, 1, 1)) AS v_pos_1,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,2,1))=0,' ',SUBSTR(v_statistical_code,2,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 2, 1)) = 0, ' ', SUBSTR(v_statistical_code, 2, 1)) AS v_pos_2,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,3,1))=0,' ',SUBSTR(v_statistical_code,3,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 3, 1)) = 0, ' ', SUBSTR(v_statistical_code, 3, 1)) AS v_pos_3,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,4,1))=0,' ',SUBSTR(v_statistical_code,4,1))\r\n\t\t-- \r\n\t\t-- ----Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 4, 1)) = 0, ' ', SUBSTR(v_statistical_code, 4, 1)) AS v_pos_4,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,5,1))=0,' ',SUBSTR(v_statistical_code,5,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 5, 1)) = 0, ' ', SUBSTR(v_statistical_code, 5, 1)) AS v_pos_5,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,6,1))=0,' ',SUBSTR(v_statistical_code,6,1))\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 6, 1)) = 0, ' ', SUBSTR(v_statistical_code, 6, 1)) AS v_pos_6,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,7,1))=0,' ',SUBSTR(v_statistical_code,7,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 7, 1)) = 0, ' ', SUBSTR(v_statistical_code, 7, 1)) AS v_pos_7,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,8,1))=0,' ',SUBSTR(v_statistical_code,8,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 8, 1)) = 0, ' ', SUBSTR(v_statistical_code, 8, 1)) AS v_pos_8,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,9,1))=0,' ',SUBSTR(v_statistical_code,9,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 9, 1)) = 0, ' ', SUBSTR(v_statistical_code, 9, 1)) AS v_pos_9,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,10,1))=0,' ',SUBSTR(v_statistical_code,10,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 10, 1)) = 0, ' ', SUBSTR(v_statistical_code, 10, 1)) AS v_pos_10,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,11,1))=0,' ',SUBSTR(v_statistical_code,11,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 11, 1)) = 0, ' ', SUBSTR(v_statistical_code, 11, 1)) AS v_pos_11,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,12,1))=0,' ',SUBSTR(v_statistical_code,12,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 12, 1)) = 0, ' ', SUBSTR(v_statistical_code, 12, 1)) AS v_pos_12,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,13,1))=0,' ',SUBSTR(v_statistical_code,13,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 13, 1)) = 0, ' ', SUBSTR(v_statistical_code, 13, 1)) AS v_pos_13,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,14,1))=0,' ',SUBSTR(v_statistical_code,14,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 14, 1)) = 0, ' ', SUBSTR(v_statistical_code, 14, 1)) AS v_pos_14,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,15,1))=0,' ',SUBSTR(v_statistical_code,15,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 15, 1)) = 0, ' ', SUBSTR(v_statistical_code, 15, 1)) AS v_pos_15,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,16,1))=0,' ',SUBSTR(v_statistical_code,16,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 16, 1)) = 0, ' ', SUBSTR(v_statistical_code, 16, 1)) AS v_pos_16,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,17,1))=0,' ',SUBSTR(v_statistical_code,17,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 17, 1)) = 0, ' ', SUBSTR(v_statistical_code, 17, 1)) AS v_pos_17,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,18,1))=0,' ',SUBSTR(v_statistical_code,18,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 18, 1)) = 0, ' ', SUBSTR(v_statistical_code, 18, 1)) AS v_pos_18,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,19,1))=0,' ',SUBSTR(v_statistical_code,19,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 19, 1)) = 0, ' ', SUBSTR(v_statistical_code, 19, 1)) AS v_pos_19,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,20,1))=0,' ',SUBSTR(v_statistical_code,20,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 20, 1)) = 0, ' ', SUBSTR(v_statistical_code, 20, 1)) AS v_pos_20,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,21,1))=0,' ',SUBSTR(v_statistical_code,21,1))\r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,21,1))=0,' ',SUBSTR(v_statistical_code,21,1))\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 21, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 21, 1)) AS v_pos_21,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,22,1))=0,' ',SUBSTR(v_statistical_code,22,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,22,1))=0,' ',SUBSTR(v_statistical_code,22,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 22, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 22, 1)) AS v_pos_22,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,23,1))=0,' ',SUBSTR(v_statistical_code,23,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,23,1))=0,' ',SUBSTR(v_statistical_code,23,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 23, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 23, 1)) AS v_pos_23,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','0',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,24,1))=0,' ',SUBSTR(v_statistical_code,24,1))\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,24,1))=0,' ',SUBSTR(v_statistical_code,24,1))\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '0'\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '0',\n\t\tLENGTH(SUBSTR(v_statistical_code, 24, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 24, 1)) AS v_pos_24,\n\t\t-- *INF*: DECODE(TRUE,Type_Bureau='RP','{',\r\n\t\t-- LENGTH(SUBSTR(v_statistical_code,25,1))=0,' ',SUBSTR(v_statistical_code,25,1))\r\n\t\t-- \r\n\t\t-- --- IN COBOL \"{\" represents a  +ve sign and \"}\" is -ve sign, since this is base rate for Type_Bureau RP is a sign field so COBOL creates \"{\". Replicating the COBOL logic.\r\n\t\t-- \r\n\t\t-- --- Statistical Code field is initialised at the begining of the WMM01A0 module to all spaces but since it is a sign field for Type Bureau of RP, these are defaulted to '{'\r\n\t\t-- \r\n\t\t-- --IIF(LENGTH(SUBSTR(v_statistical_code,25,1))=0,' ',SUBSTR(v_statistical_code,25,1))\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'RP', '{',\n\t\tLENGTH(SUBSTR(v_statistical_code, 25, 1)) = 0, ' ',\n\t\tSUBSTR(v_statistical_code, 25, 1)) AS v_pos_25,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,26,1))=0,' ',SUBSTR(v_statistical_code,26,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 26, 1)) = 0, ' ', SUBSTR(v_statistical_code, 26, 1)) AS v_pos_26,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,27,1))=0,' ',SUBSTR(v_statistical_code,27,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 27, 1)) = 0, ' ', SUBSTR(v_statistical_code, 27, 1)) AS v_pos_27,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,28,1))=0,' ',SUBSTR(v_statistical_code,28,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 28, 1)) = 0, ' ', SUBSTR(v_statistical_code, 28, 1)) AS v_pos_28,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,29,1))=0,' ',SUBSTR(v_statistical_code,29,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 29, 1)) = 0, ' ', SUBSTR(v_statistical_code, 29, 1)) AS v_pos_29,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,30,1))=0,' ',SUBSTR(v_statistical_code,30,1))\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 30, 1)) = 0, ' ', SUBSTR(v_statistical_code, 30, 1)) AS v_pos_30,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,31,1))=0,' ',SUBSTR(v_statistical_code,31,1))\r\n\t\t-- \r\n\t\t-- ----8/18/2011 Uma Bollu - Introducing Blank Space intentionally as PIF_4514_Stage has spaces but when we add this data into EDW we do a LTRIM, RTRIM so this Target Lookup finds a match but this Statistical Code calculation we need spaces because of the logic which re-arranges the fields and this is very important for Bureau Reporting etc.\n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 31, 1)) = 0, ' ', SUBSTR(v_statistical_code, 31, 1)) AS v_pos_31,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,32,1))=0,' ',SUBSTR(v_statistical_code,32,1))\r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 32, 1)) = 0, ' ', SUBSTR(v_statistical_code, 32, 1)) AS v_pos_32,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,33,1))=0,' ',SUBSTR(v_statistical_code,33,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 33, 1)) = 0, ' ', SUBSTR(v_statistical_code, 33, 1)) AS v_pos_33,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,34,1))=0,' ',SUBSTR(v_statistical_code,34,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 34, 1)) = 0, ' ', SUBSTR(v_statistical_code, 34, 1)) AS v_pos_34,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,35,1))=0,' ',SUBSTR(v_statistical_code,35,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 35, 1)) = 0, ' ', SUBSTR(v_statistical_code, 35, 1)) AS v_pos_35,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,36,1))=0,' ',SUBSTR(v_statistical_code,36,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 36, 1)) = 0, ' ', SUBSTR(v_statistical_code, 36, 1)) AS v_pos_36,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,37,1))=0,' ',SUBSTR(v_statistical_code,37,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 37, 1)) = 0, ' ', SUBSTR(v_statistical_code, 37, 1)) AS v_pos_37,\n\t\t-- *INF*: IIF(LENGTH(SUBSTR(v_statistical_code,38,1))=0,' ',SUBSTR(v_statistical_code,38,1))\r\n\t\t-- \r\n\t\t-- \n\t\tIFF(LENGTH(SUBSTR(v_statistical_code, 38, 1)) = 0, ' ', SUBSTR(v_statistical_code, 38, 1)) AS v_pos_38,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS Generic,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Code_AC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_AI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_26 || '       ' || v_pos_25 || v_pos_23  || v_pos_24  || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_26 || '       ' || v_pos_25 || v_pos_23 || v_pos_24 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 ) AS v_Stat_Codes_AL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10  || v_pos_11|| v_pos_20 || v_pos_21  || \r\n\t\t-- '             ' ||  v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19  )\r\n\t\t-- \r\n\t\t--  -----It has a Filler of 13 spaces\r\n\t\t-- --- I have checked this code this is fine\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_20 || v_pos_21 || '             ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 ) AS v_Stat_Codes_AN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 ||\r\n\t\t-- '      ' || v_pos_14 || v_pos_23  || v_pos_24  || '  '  ||  v_pos_26  || v_pos_27  || v_pos_28  || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || '      ' || v_pos_14 || v_pos_23 || v_pos_24 || '  ' || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 ) AS v_Stat_Codes_AP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_11 || v_pos_10 || \r\n\t\t--   v_pos_12 || v_pos_13 )\r\n\t\t-- \r\n\t\t-- --- Verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_11 || v_pos_10 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_A2,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_11 || v_pos_12 )\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_11 || v_pos_12 ) AS v_Stat_Codes_A3,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 ||\r\n\t\t-- '           '  ||  v_pos_22 || v_pos_29 || '  ' || v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28)\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || '           ' || v_pos_22 || v_pos_29 || '  ' || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 ) AS v_Stat_Codes_BB,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17  || v_pos_20  || v_pos_27  || v_pos_28  || v_pos_29 || '    ' ||v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26 )\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- -- Verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_20 || v_pos_27 || v_pos_28 || v_pos_29 || '    ' || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 ) AS v_Stat_Codes_BC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- --- Verified logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_BD,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 ||  v_pos_6 || v_pos_7 || '                    ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13)\r\n\t\t-- \r\n\t\t-- \r\n\t\t--  ---  Verified Logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || '                    ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_BE,\n\t\t-- *INF*: ('  '  || v_pos_4  || v_pos_5 || ' ' || v_pos_14 || '  ' || v_pos_15 || v_pos_16 || '   ' ||  v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || '     ' || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22 || '   ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --8/22/2011 - Added 2 spaces in the beginning. In COBOL, statitistical code field is initialised to spaces at the start of reformatting. If there is no code to move certain fields then the spaces stay as it is except other fileds are layed out over spaces.\r\n\t\t-- --- Verified the logic\r\n\t\t-- \n\t\t( '  ' || v_pos_4 || v_pos_5 || ' ' || v_pos_14 || '  ' || v_pos_15 || v_pos_16 || '   ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || '     ' || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || '   ' ) AS v_Stat_Codes_BF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_4  || v_pos_5)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_BP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 )\r\n\t\t-- \r\n\t\t-- --- Verified the logic\n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_BI,\n\t\t-- *INF*: v_pos_1\r\n\t\t-- \r\n\t\t-- -- verified the logic\n\t\tv_pos_1 AS v_Stat_Codes_BL,\n\t\t-- *INF*: (SUBSTR(sar_class_code,1,3) || '  ' || v_pos_18  ||  v_pos_19 || v_pos_1 ||  ' ' ||  v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 \r\n\t\t-- || '    ' ||  v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34 || v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28 || '   ' )\r\n\t\t-- \r\n\t\t-- --- Verfied the logic\n\t\t( SUBSTR(sar_class_code, 1, 3) || '  ' || v_pos_18 || v_pos_19 || v_pos_1 || ' ' || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || '    ' || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || '   ' ) AS v_Stat_Codes_BM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || '      '  ||  v_pos_8 || v_pos_9 || '           ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19)\r\n\t\t-- \r\n\t\t--  ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '      ' || v_pos_8 || v_pos_9 || '           ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 ) AS v_Stat_Codes_BT,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || '      '  || v_pos_9 || v_pos_10 || v_pos_17 || v_pos_18 ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || '      ' || v_pos_9 || v_pos_10 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 ) AS v_Stat_Codes_B2,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17)\r\n\t\t-- \r\n\t\t-- ----- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 ) AS v_Stat_Codes_CC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || \r\n\t\t--  v_pos_17 || v_pos_18  || ' ' ||  v_pos_20 || '              ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_17 || v_pos_18 || ' ' || v_pos_20 || '              ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_CF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- ---- Generic \r\n\t\t-- -- No Change from Input copybook to Output\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_CR,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_6 || v_pos_7 || ' '  || v_pos_9 || '  ' || v_pos_12 || ' ' || v_pos_14 || v_pos_15 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_6 || v_pos_7 || ' ' || v_pos_9 || '  ' || v_pos_12 || ' ' || v_pos_14 || v_pos_15 ) AS v_Stat_Codes_CI,\n\t\t-- *INF*: (v_pos_1 || v_pos_4  || v_pos_6 || v_pos_7 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_4 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_CL,\n\t\t-- *INF*: ('  ' || v_pos_1 || v_pos_2 || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( '  ' || v_pos_1 || v_pos_2 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_CP,\n\t\t-- *INF*: (v_pos_3 || v_pos_4  || v_pos_5 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_CN,\n\t\t-- *INF*: v_pos_1\r\n\t\t-- \r\n\t\t-- -----\n\t\tv_pos_1 AS v_Stat_Codes_EI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || '                   ' ||v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 19 spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_EQ,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 ) AS v_Stat_Codes_FC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 \r\n\t\t-- || '                  ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- ---- 18 Spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '                  ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_FF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_FM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 19 spaces\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || '                   ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 ) AS v_Stat_Codes_FO,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 ) AS v_Stat_Codes_FP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || ' ' || v_pos_3 || '  ' || v_pos_6 || v_pos_7 || '   ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 ||\r\n\t\t-- '       ' || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22 || '   ')\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || ' ' || v_pos_3 || '  ' || v_pos_6 || v_pos_7 || '   ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || '       ' || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || '   ' ) AS v_Stat_Codes_FT,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_12 || v_pos_13 || '                '  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- -- 17 Spaces\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_12 || v_pos_13 || '                ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 ) AS v_Stat_Codes_GI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_4  || v_pos_5  || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || '      ' || v_pos_13 || v_pos_29  || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19 ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_6 || v_pos_7 || v_pos_4 || v_pos_5 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || '      ' || v_pos_13 || v_pos_29 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 ) AS v_Stat_Codes_GL,\n\t\t-- *INF*: (v_pos_1 || '           '  ||   v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || '           ' || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_GP,\n\t\t-- *INF*: (v_pos_1 || '                       ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_11 || v_pos_12 || v_pos_13)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 23 spaces\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\t( v_pos_1 || '                       ' || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_11 || v_pos_12 || v_pos_13 ) AS v_Stat_Codes_GS,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_18  ||  v_pos_19  \r\n\t\t-- || ' ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || '                ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- ---- verified the logic\r\n\t\t-- --- 16 Spaces at the end\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_18 || v_pos_19 || ' ' || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || '                ' ) AS v_Stat_Codes_HO,\n\t\t-- *INF*: ('        ' || v_pos_11 || v_pos_12 || '               '  || v_pos_4  || v_pos_5  || v_pos_6  || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_14 || v_pos_15 || v_pos_17)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( '        ' || v_pos_11 || v_pos_12 || '               ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_14 || v_pos_15 || v_pos_17 ) AS v_Stat_Codes_IM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  || v_pos_24  || v_pos_25  || v_pos_26 || v_pos_28  || v_pos_29  || v_pos_30 || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 ) AS v_Stat_Codes_JR,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  )\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_ME,\n\t\t-- *INF*: (v_pos_1 || ' '  || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' ||  v_pos_11 || v_pos_12 || v_pos_13 || '  ' || v_pos_18  || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || '                ' ) \r\n\t\t-- \r\n\t\t-- --- need logic for stat-plan -id\r\n\t\t-- ---- 16 Spaces at the end\n\t\t( v_pos_1 || ' ' || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_10 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || '  ' || v_pos_18 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || '                ' ) AS v_Stat_Codes_MH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || '                  '  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7)\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || '                  ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 ) AS v_Stat_Codes_MI,\n\t\t-- *INF*: (v_pos_6 || v_pos_7 || v_pos_3 || v_pos_4  || v_pos_2 || '      ' || v_pos_1 || '        ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || ' ' ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24 )\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_6 || v_pos_7 || v_pos_3 || v_pos_4 || v_pos_2 || '      ' || v_pos_1 || '        ' || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || ' ' || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_ML,\n\t\t-- *INF*: -- No Stats code in the Output Copybook just the policy_type logic\n\t\t'' AS v_Stat_Codes_MP,\n\t\t-- *INF*: (SUBSTR(sar_class_code,1,3) || v_pos_17 || v_pos_18 ||  v_pos_19  || v_pos_1 || v_pos_2 || v_pos_3 || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || '   ' || '       ' || '      ' )\r\n\t\t-- \r\n\t\t-- --- Need to look at complete logic\r\n\t\t-- \n\t\t( SUBSTR(sar_class_code, 1, 3) || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_1 || v_pos_2 || v_pos_3 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || '   ' || '       ' || '      ' ) AS v_Stat_Codes_M2,\n\t\t-- *INF*: ( '                 ' || v_stat_plan_id)\r\n\t\t-- \r\n\t\t-- ----verified the logic\n\t\t( '                 ' || v_stat_plan_id ) AS v_Stat_Codes_NE,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  ||  v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_19)\r\n\t\t-- \r\n\t\t-- --- Verified the Logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_19 ) AS v_Stat_Codes_PC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || v_pos_19  || v_pos_20  ||  v_pos_21)\r\n\t\t-- \r\n\t\t-- --- verified the logic\r\n\t\t--  \n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || ' ' || v_pos_19 || v_pos_20 || v_pos_21 ) AS v_Stat_Codes_PH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PF,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_PL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 ||  v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 ) AS v_Stat_Codes_PM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2)\r\n\t\t-- \r\n\t\t-- --- verified the logic\r\n\t\t-- \n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_RB,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 ) AS v_Stat_Codes_RG,\n\t\t-- *INF*: (v_pos_1 || v_pos_2)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 ) AS v_Stat_Codes_RI,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_RL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_8 || v_pos_9 || v_pos_10 ) AS v_Stat_Codes_RM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || ' ' || \r\n\t\t-- v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21 || v_pos_22 ||  v_pos_23  || v_pos_24)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || ' ' || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 ) AS v_Stat_Codes_RN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29 || v_pos_30 || v_pos_31|| v_pos_33 || v_pos_34  ||  v_pos_35  || v_pos_32)\r\n\t\t-- \r\n\t\t-- ----\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_32 ) AS v_Stat_Codes_RP,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 ) AS v_Stat_Codes_RQ,\n\t\t-- *INF*: (v_pos_1 || ' ' || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || ' ' || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 ) AS v_Stat_Codes_SM,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_6 || v_pos_8 || v_pos_11 || v_pos_9)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_6 || v_pos_8 || v_pos_11 || v_pos_9 ) AS v_Stat_Codes_TH,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 \r\n\t\t-- || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19\r\n\t\t-- ||  v_pos_22  ||  v_pos_23  || v_pos_24 || '       ' || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_22 || v_pos_23 || v_pos_24 || '       ' || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 ) AS v_Stat_Codes_VL,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19 \r\n\t\t--  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30 || ' ' || v_pos_32  ||  v_pos_33\r\n\t\t-- || v_pos_34  ||  v_pos_35  || v_pos_36 )\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || ' ' || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 ) AS v_Stat_Codes_VP,\n\t\t-- *INF*: ('   ' || v_pos_4  || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12  || ' ' || v_pos_14 || v_pos_15 || '              ' \r\n\t\t-- || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34 || v_pos_35)\r\n\t\t-- \r\n\t\t-- --- verified the logic\n\t\t( '   ' || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || ' ' || v_pos_14 || v_pos_15 || '              ' || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 ) AS v_Stat_Codes_VN,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  \r\n\t\t-- || ' ' || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || '    ' || v_pos_36 || v_pos_37  || v_pos_38)\r\n\t\t-- \r\n\t\t-- ---- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || ' ' || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || '    ' || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Codes_VC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31)\r\n\t\t-- \r\n\t\t--  --- verified the logic\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 ) AS v_Stat_Codes_WC,\n\t\t-- *INF*: (v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4  || v_pos_5  || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18  ||  v_pos_19  || v_pos_20  ||  v_pos_21  ||  v_pos_22  ||  v_pos_23  || v_pos_24  || v_pos_25  || v_pos_26  || v_pos_27  || v_pos_28  || v_pos_29  || v_pos_30  || v_pos_31 || v_pos_32  ||  v_pos_33  || v_pos_34  ||  v_pos_35  || v_pos_36 || v_pos_37  || v_pos_38)\n\t\t( v_pos_1 || v_pos_2 || v_pos_3 || v_pos_4 || v_pos_5 || v_pos_6 || v_pos_7 || v_pos_8 || v_pos_9 || v_pos_10 || v_pos_11 || v_pos_12 || v_pos_13 || v_pos_14 || v_pos_15 || v_pos_16 || v_pos_17 || v_pos_18 || v_pos_19 || v_pos_20 || v_pos_21 || v_pos_22 || v_pos_23 || v_pos_24 || v_pos_25 || v_pos_26 || v_pos_27 || v_pos_28 || v_pos_29 || v_pos_30 || v_pos_31 || v_pos_32 || v_pos_33 || v_pos_34 || v_pos_35 || v_pos_36 || v_pos_37 || v_pos_38 ) AS v_Stat_Code_WP,\n\t\t-- *INF*: ('   ' || v_pos_1 || v_pos_2 || '            ' || v_stat_plan_id)\r\n\t\t-- \r\n\t\t-- --8/19/2011 Added v_stat_plan_id\r\n\t\t-- --- need to bring stat plan_id\r\n\t\t--  --- verified the logic but need stat plan id\r\n\t\t-- \n\t\t( '   ' || v_pos_1 || v_pos_2 || '            ' || v_stat_plan_id ) AS v_Stat_Codes_WL,\n\t\t-- *INF*: DECODE(Type_Bureau, 'AC', v_Stat_Code_AC, 'AI', v_Stat_Codes_AI, 'AL', v_Stat_Codes_AL, 'AN', v_Stat_Codes_AN, 'AP', v_Stat_Codes_AP, 'A2', v_Stat_Codes_A2, 'A3', v_Stat_Codes_A3, 'BB', v_Stat_Codes_BB, 'BC', v_Stat_Codes_BC, 'BD', v_Stat_Codes_BD, 'BE', v_Stat_Codes_BE, 'BF', v_Stat_Codes_BF, 'BP', v_Stat_Codes_BP, 'BI', v_Stat_Codes_BI, 'BL', v_Stat_Codes_BL, 'BM', v_Stat_Codes_BM, 'BT', v_Stat_Codes_BT, 'B2', v_Stat_Codes_B2, 'CC', v_Stat_Codes_CC, 'CF', v_Stat_Codes_CF, 'CI', v_Stat_Codes_CI, 'CL', v_Stat_Codes_CL, 'CN', v_Stat_Codes_CN, 'CP', v_Stat_Codes_CP, 'EI', v_Stat_Codes_EI, 'EQ', v_Stat_Codes_EQ, 'FC', v_Stat_Codes_FC, 'FF', v_Stat_Codes_FF, 'FM', v_Stat_Codes_FM, 'FO', v_Stat_Codes_FO, 'FP', v_Stat_Codes_FP, 'FT', v_Stat_Codes_FT, 'GI', v_Stat_Codes_GI, 'GL', v_Stat_Codes_GL, 'GP', v_Stat_Codes_GP, 'GS', v_Stat_Codes_GS, 'HO', v_Stat_Codes_HO, 'IM', v_Stat_Codes_IM, 'JR', v_Stat_Codes_JR, 'ME', v_Stat_Codes_ME, 'MH', v_Stat_Codes_MH, 'MI', v_Stat_Codes_MI, 'ML',\r\n\t\t-- v_Stat_Codes_ML, 'MP', v_Stat_Codes_MP, 'M2', v_Stat_Codes_M2, 'NE', v_Stat_Codes_NE, 'PC', v_Stat_Codes_PC, 'PH', v_Stat_Codes_PH, 'PM', v_Stat_Codes_PM, 'RB', v_Stat_Codes_RB, 'RG', v_Stat_Codes_RG, 'RI', v_Stat_Codes_RI, 'RL', v_Stat_Codes_RL, 'RM', v_Stat_Codes_RM, 'RN', v_Stat_Codes_RN, 'RP', v_Stat_Codes_RP, 'RQ', v_Stat_Codes_RQ, 'SM', v_Stat_Codes_SM, 'TH', v_Stat_Codes_TH, 'VL', v_Stat_Codes_VL, 'VP', v_Stat_Codes_VP, 'VN', v_Stat_Codes_VN, 'VC', v_Stat_Codes_VC, 'WC', v_Stat_Codes_WC, 'WL', v_Stat_Codes_WL,\r\n\t\t-- 'CR', v_Stat_Code_CR, 'PF', v_Stat_Code_PF,'PI', v_Stat_Code_PI, 'PL', v_Stat_Code_PL,\r\n\t\t-- 'WP', v_Stat_Code_WP,v_statistical_code) \n\t\tDECODE(Type_Bureau,\n\t\t'AC', v_Stat_Code_AC,\n\t\t'AI', v_Stat_Codes_AI,\n\t\t'AL', v_Stat_Codes_AL,\n\t\t'AN', v_Stat_Codes_AN,\n\t\t'AP', v_Stat_Codes_AP,\n\t\t'A2', v_Stat_Codes_A2,\n\t\t'A3', v_Stat_Codes_A3,\n\t\t'BB', v_Stat_Codes_BB,\n\t\t'BC', v_Stat_Codes_BC,\n\t\t'BD', v_Stat_Codes_BD,\n\t\t'BE', v_Stat_Codes_BE,\n\t\t'BF', v_Stat_Codes_BF,\n\t\t'BP', v_Stat_Codes_BP,\n\t\t'BI', v_Stat_Codes_BI,\n\t\t'BL', v_Stat_Codes_BL,\n\t\t'BM', v_Stat_Codes_BM,\n\t\t'BT', v_Stat_Codes_BT,\n\t\t'B2', v_Stat_Codes_B2,\n\t\t'CC', v_Stat_Codes_CC,\n\t\t'CF', v_Stat_Codes_CF,\n\t\t'CI', v_Stat_Codes_CI,\n\t\t'CL', v_Stat_Codes_CL,\n\t\t'CN', v_Stat_Codes_CN,\n\t\t'CP', v_Stat_Codes_CP,\n\t\t'EI', v_Stat_Codes_EI,\n\t\t'EQ', v_Stat_Codes_EQ,\n\t\t'FC', v_Stat_Codes_FC,\n\t\t'FF', v_Stat_Codes_FF,\n\t\t'FM', v_Stat_Codes_FM,\n\t\t'FO', v_Stat_Codes_FO,\n\t\t'FP', v_Stat_Codes_FP,\n\t\t'FT', v_Stat_Codes_FT,\n\t\t'GI', v_Stat_Codes_GI,\n\t\t'GL', v_Stat_Codes_GL,\n\t\t'GP', v_Stat_Codes_GP,\n\t\t'GS', v_Stat_Codes_GS,\n\t\t'HO', v_Stat_Codes_HO,\n\t\t'IM', v_Stat_Codes_IM,\n\t\t'JR', v_Stat_Codes_JR,\n\t\t'ME', v_Stat_Codes_ME,\n\t\t'MH', v_Stat_Codes_MH,\n\t\t'MI', v_Stat_Codes_MI,\n\t\t'ML', v_Stat_Codes_ML,\n\t\t'MP', v_Stat_Codes_MP,\n\t\t'M2', v_Stat_Codes_M2,\n\t\t'NE', v_Stat_Codes_NE,\n\t\t'PC', v_Stat_Codes_PC,\n\t\t'PH', v_Stat_Codes_PH,\n\t\t'PM', v_Stat_Codes_PM,\n\t\t'RB', v_Stat_Codes_RB,\n\t\t'RG', v_Stat_Codes_RG,\n\t\t'RI', v_Stat_Codes_RI,\n\t\t'RL', v_Stat_Codes_RL,\n\t\t'RM', v_Stat_Codes_RM,\n\t\t'RN', v_Stat_Codes_RN,\n\t\t'RP', v_Stat_Codes_RP,\n\t\t'RQ', v_Stat_Codes_RQ,\n\t\t'SM', v_Stat_Codes_SM,\n\t\t'TH', v_Stat_Codes_TH,\n\t\t'VL', v_Stat_Codes_VL,\n\t\t'VP', v_Stat_Codes_VP,\n\t\t'VN', v_Stat_Codes_VN,\n\t\t'VC', v_Stat_Codes_VC,\n\t\t'WC', v_Stat_Codes_WC,\n\t\t'WL', v_Stat_Codes_WL,\n\t\t'CR', v_Stat_Code_CR,\n\t\t'PF', v_Stat_Code_PF,\n\t\t'PI', v_Stat_Code_PI,\n\t\t'PL', v_Stat_Code_PL,\n\t\t'WP', v_Stat_Code_WP,\n\t\tv_statistical_code) AS V_Formatted_Stat_Codes,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,1,25)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 1, 25) AS Formatted_Stat_Codes,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,26,9)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 26, 9) AS Formatted_Stat_Codes_26_34,\n\t\t-- *INF*: SUBSTR(V_Formatted_Stat_Codes,35,4)\n\t\tSUBSTR(V_Formatted_Stat_Codes, 35, 4) AS Formatted_Stat_Codes_34_38,\n\t\t-- *INF*: DECODE(Type_Bureau,'AI', (v_pos_11 || v_pos_12),\r\n\t\t-- 'AL', (v_pos_15  ||  v_pos_16),\r\n\t\t-- 'AN',(v_pos_12 || v_pos_13),\r\n\t\t-- 'AP',(v_pos_12 || v_pos_13),\r\n\t\t-- 'A2',(v_pos_8 || v_pos_9),\r\n\t\t-- 'A3',(v_pos_8 || v_pos_9),\r\n\t\t-- 'BB',(v_pos_20 || v_pos_21),\r\n\t\t-- 'BC',(v_pos_18 || v_pos_19),\r\n\t\t-- 'BE', ( v_pos_4  || v_pos_5),\r\n\t\t-- 'BF', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'BP', (' '  ||  v_pos_2),\r\n\t\t-- 'BI', (v_pos_3 ||  v_pos_4),\r\n\t\t-- 'BL', (v_pos_3  ||  v_pos_4),\r\n\t\t-- 'BM',(v_pos_20 || v_pos_21),\r\n\t\t-- 'BT', (v_pos_11  ||  v_pos_12),\r\n\t\t-- 'B2',(v_pos_14  ||  v_pos_15),\r\n\t\t-- 'CF', (v_pos_8  || v_pos_9),\r\n\t\t-- 'CI',(v_pos_3  ||  v_pos_4),\r\n\t\t-- 'CN', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'CP', (v_pos_3  ||  v_pos_4),\r\n\t\t-- 'EI', (v_pos_2  ||  v_pos_3),\r\n\t\t-- 'EQ', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FF', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FI', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'FM', (v_pos_6  ||  v_pos_7),\r\n\t\t-- 'FO', (v_pos_8  || v_pos_9),\r\n\t\t-- 'FP', (v_pos_2  ||  v_pos_3),\r\n\t\t-- 'FT', (v_pos_4  ||  v_pos_5),\r\n\t\t-- 'GI', (v_pos_10  ||  v_pos_11),\r\n\t\t-- 'GL',(v_pos_20 || v_pos_21),\r\n\t\t-- 'GM', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'GP', (v_pos_8  || v_pos_9),\r\n\t\t-- 'GS',(v_pos_3  ||  v_pos_4),\r\n\t\t-- 'II', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'IM', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'MI',(v_pos_10  ||  v_pos_11),\r\n\t\t-- 'ML', (v_pos_16  ||  v_pos_17),\r\n\t\t-- 'MP', (v_pos_1  ||  v_pos_2),\r\n\t\t-- 'M2', (v_pos_15  ||  v_pos_16),'  ')\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tDECODE(Type_Bureau,\n\t\t'AI', ( v_pos_11 || v_pos_12 ),\n\t\t'AL', ( v_pos_15 || v_pos_16 ),\n\t\t'AN', ( v_pos_12 || v_pos_13 ),\n\t\t'AP', ( v_pos_12 || v_pos_13 ),\n\t\t'A2', ( v_pos_8 || v_pos_9 ),\n\t\t'A3', ( v_pos_8 || v_pos_9 ),\n\t\t'BB', ( v_pos_20 || v_pos_21 ),\n\t\t'BC', ( v_pos_18 || v_pos_19 ),\n\t\t'BE', ( v_pos_4 || v_pos_5 ),\n\t\t'BF', ( v_pos_1 || v_pos_2 ),\n\t\t'BP', ( ' ' || v_pos_2 ),\n\t\t'BI', ( v_pos_3 || v_pos_4 ),\n\t\t'BL', ( v_pos_3 || v_pos_4 ),\n\t\t'BM', ( v_pos_20 || v_pos_21 ),\n\t\t'BT', ( v_pos_11 || v_pos_12 ),\n\t\t'B2', ( v_pos_14 || v_pos_15 ),\n\t\t'CF', ( v_pos_8 || v_pos_9 ),\n\t\t'CI', ( v_pos_3 || v_pos_4 ),\n\t\t'CN', ( v_pos_1 || v_pos_2 ),\n\t\t'CP', ( v_pos_3 || v_pos_4 ),\n\t\t'EI', ( v_pos_2 || v_pos_3 ),\n\t\t'EQ', ( v_pos_8 || v_pos_9 ),\n\t\t'FF', ( v_pos_8 || v_pos_9 ),\n\t\t'FI', ( v_pos_1 || v_pos_2 ),\n\t\t'FM', ( v_pos_6 || v_pos_7 ),\n\t\t'FO', ( v_pos_8 || v_pos_9 ),\n\t\t'FP', ( v_pos_2 || v_pos_3 ),\n\t\t'FT', ( v_pos_4 || v_pos_5 ),\n\t\t'GI', ( v_pos_10 || v_pos_11 ),\n\t\t'GL', ( v_pos_20 || v_pos_21 ),\n\t\t'GM', ( v_pos_1 || v_pos_2 ),\n\t\t'GP', ( v_pos_8 || v_pos_9 ),\n\t\t'GS', ( v_pos_3 || v_pos_4 ),\n\t\t'II', ( v_pos_1 || v_pos_2 ),\n\t\t'IM', ( v_pos_1 || v_pos_2 ),\n\t\t'MI', ( v_pos_10 || v_pos_11 ),\n\t\t'ML', ( v_pos_16 || v_pos_17 ),\n\t\t'MP', ( v_pos_1 || v_pos_2 ),\n\t\t'M2', ( v_pos_15 || v_pos_16 ),\n\t\t'  ') AS V_Policy_Type,\n\t\tV_Policy_Type AS Policy_Type,\n\t\t-- *INF*: SUBSTR(sar_class_code,1,3)\n\t\tSUBSTR(sar_class_code, 1, 3) AS v_sar_class_3,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- IN (Type_Bureau,'BP','FP','BF','FT'),V_Policy_Type)\n\t\tDECODE(TRUE,\n\t\tIN(Type_Bureau, 'BP', 'FP', 'BF', 'FT'), V_Policy_Type) AS v_type_policy_45,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t-- Type_Bureau='BP',v_pos_2,\r\n\t\t-- Type_Bureau='BF',v_pos_2,\r\n\t\t-- Type_Bureau='FP',' ',\r\n\t\t-- Type_Bureau='FT',' '  )\n\t\tDECODE(TRUE,\n\t\tType_Bureau = 'BP', v_pos_2,\n\t\tType_Bureau = 'BF', v_pos_2,\n\t\tType_Bureau = 'FP', ' ',\n\t\tType_Bureau = 'FT', ' ') AS v_type_of_bond_6,\n\t\t-- *INF*: DECODE(TRUE,\r\n\t\t--  IN(Type_Bureau,'BP','BF','FP','FT'),v_sar_class_3  || v_type_policy_45 || v_type_of_bond_6,\r\n\t\t-- sar_class_code)\n\t\tDECODE(TRUE,\n\t\tIN(Type_Bureau, 'BP', 'BF', 'FP', 'FT'), v_sar_class_3 || v_type_policy_45 || v_type_of_bond_6,\n\t\tsar_class_code) AS v_hold_sar_class_code,\n\t\tv_hold_sar_class_code AS sar_class_code_out\n\t\tFROM EXP_Pre_StatCode_ops\n\t),\n\tEXP_Derive_CSP_Fields AS (\n\t\tSELECT\n\t\tFormatted_Stat_Codes_26_34,\n\t\t-- *INF*: SUBSTR(Formatted_Stat_Codes_26_34,1,3)\n\t\tSUBSTR(Formatted_Stat_Codes_26_34, 1, 3) AS csp_rate_mod,\n\t\t-- *INF*: SUBSTR(Formatted_Stat_Codes_26_34,4,3)\n\t\tSUBSTR(Formatted_Stat_Codes_26_34, 4, 3) AS csp_rate_dep\n\t\tFROM EXP_Transform_Statistical_Codes\n\t),\n\tEXP_PassThrough_Preoutput AS (\n\t\tSELECT\n\t\tEXP_Pre_StatCode_ops.SourceSystemID,\n\t\tEXP_Pre_StatCode_ops.AgencyAKID,\n\t\tEXP_Pre_StatCode_ops.PolicyAKID,\n\t\tEXP_Pre_StatCode_ops.ContractCustomerAKID,\n\t\tEXP_Pre_StatCode_ops.RiskLocationAKID,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.StatisticalCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.ReinsuranceCoverageAKID,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionAKID,\n\t\tEXP_Pre_StatCode_ops.BureauStatisticalCodeAKID,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionCode,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionBookedDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPolicyExpirationYear,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.PolicyCoverageExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPolicyTerm,\n\t\tEXP_Transform_Statistical_Codes.Policy_Type AS PremiumMasterBureauPolicyType,\n\t\tEXP_Pre_StatCode_ops.AuditCode AS PremiumMasterAuditCode,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterPremiumType,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterBureauStatisticalLine,\n\t\tEXP_Pre_StatCode_ops.AgencyActualCommissionRate AS PremiumMasterAgencyCommissionRate,\n\t\tEXP_Pre_StatCode_ops.Exposure AS PremiumMasterExposure,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes AS PremiumMasterStatisticalCode1,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes_26_34 AS PremiumMasterStatisticalCode2,\n\t\tEXP_Transform_Statistical_Codes.Formatted_Stat_Codes_34_38 AS PremiumMasterStatisticalCode3,\n\t\tEXP_Derive_CSP_Fields.csp_rate_mod AS PremiumMasterRateModifier,\n\t\tEXP_Derive_CSP_Fields.csp_rate_dep AS PremiumMasterRateDeparture,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterBureauInceptionDate,\n\t\tEXP_Pre_StatCode_ops.comments_cs,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionAmount AS PremiumMasterPremium,\n\t\tEXP_Pre_StatCode_ops.FullTermPremium AS PremiumMasterFullTermPremium,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRiskAddress,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRiskCityState,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRenewalIndicator,\n\t\tEXP_Pre_StatCode_ops.ClassCode AS PremiumMasterClassCode,\n\t\tEXP_Pre_StatCode_ops.TypeBureauCode AS TypeBureauCodeIn,\n\t\t-- *INF*: DECODE(TRUE,IN( substr(ProductLine,1,2),'87','88','89','90','91','92','93','94','95','96','97'), 'NB',TypeBureauCodeIn)\r\n\t\t-- \r\n\t\t-- -- Type Bureau Code is overriden to 'NB' for SAR-NON-REPORTING-SB-LINE (see comment)\n\t\tDECODE(TRUE,\n\t\tIN(substr(ProductLine, 1, 2), '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97'), 'NB',\n\t\tTypeBureauCodeIn) AS PremiumMasterTypeBureauCode,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterRecordType,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterInstallmentNumber,\n\t\tEXP_Pre_StatCode_ops.ProductLine,\n\t\tEXP_Pre_StatCode_ops.SubLineCode,\n\t\tEXP_Pre_StatCode_ops.pol_key5 AS PolicyKey,\n\t\tEXP_Pre_StatCode_ops.ReasonAmendedCode AS PremiumMasterReasonAmendedCode,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageAKId,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageEffectiveDate,\n\t\tEXP_Pre_StatCode_ops.RatingCoverageExpirationDate,\n\t\tEXP_Pre_StatCode_ops.PremiumTransactionEnteredDate,\n\t\tEXP_Pre_StatCode_ops.PremiumMasterCustomerCareCommissionRate,\n\t\tEXP_Pre_StatCode_ops.WrittenExposure AS PremiumMasterWrittenExposure\n\t\tFROM EXP_Derive_CSP_Fields\n\t\t -- Manually join with EXP_Pre_StatCode_ops\n\t\t -- Manually join with EXP_Transform_Statistical_Codes\n\t),\n\tOUT_PremiumMasterRecord AS (\n\t\tSELECT\n\t\tSourceSystemID, \n\t\tAgencyAKID, \n\t\tPolicyAKID, \n\t\tContractCustomerAKID, \n\t\tRiskLocationAKID, \n\t\tPolicyCoverageAKID, \n\t\tStatisticalCoverageAKID, \n\t\tReinsuranceCoverageAKID, \n\t\tPremiumTransactionAKID, \n\t\tBureauStatisticalCodeAKID, \n\t\tPremiumTransactionCode, \n\t\tPremiumTransactionBookedDate, \n\t\tPremiumMasterPolicyExpirationYear, \n\t\tPolicyCoverageEffectiveDate, \n\t\tPolicyCoverageExpirationDate, \n\t\tPremiumTransactionEffectiveDate, \n\t\tPremiumTransactionExpirationDate, \n\t\tPremiumMasterPolicyTerm, \n\t\tPremiumMasterBureauPolicyType, \n\t\tPremiumMasterAuditCode, \n\t\tPremiumMasterPremiumType, \n\t\tPremiumMasterBureauStatisticalLine, \n\t\tPremiumMasterAgencyCommissionRate, \n\t\tPremiumMasterExposure, \n\t\tPremiumMasterStatisticalCode1, \n\t\tPremiumMasterStatisticalCode2, \n\t\tPremiumMasterStatisticalCode3, \n\t\tPremiumMasterRateModifier, \n\t\tPremiumMasterRateDeparture, \n\t\tPremiumMasterBureauInceptionDate, \n\t\tcomments_cs, \n\t\tPremiumMasterPremium, \n\t\tPremiumMasterFullTermPremium, \n\t\tPremiumMasterRiskAddress, \n\t\tPremiumMasterRiskCityState, \n\t\tPremiumMasterRenewalIndicator, \n\t\tPremiumMasterClassCode, \n\t\tPremiumMasterTypeBureauCode, \n\t\tPremiumMasterRecordType, \n\t\tPremiumMasterInstallmentNumber, \n\t\tProductLine AS PremiumMasterProductLine, \n\t\tSubLineCode AS PremiumMasterSubLine, \n\t\tPolicyKey, \n\t\tPremiumMasterReasonAmendedCode, \n\t\tRatingCoverageAKId, \n\t\tRatingCoverageEffectiveDate, \n\t\tRatingCoverageExpirationDate, \n\t\tPremiumTransactionEnteredDate, \n\t\tPremiumMasterCustomerCareCommissionRate, \n\t\tPremiumMasterWrittenExposure\n\t\tFROM EXP_PassThrough_Preoutput\n\t),\n),\nEXP_Insert_CededTransactions AS (\n\tSELECT\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t'PMS' AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.AgencyAKID1 AS AgencyAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyAKID1 AS PolicyAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.ContractCustomerAKID1 AS ContractCustomerAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.RiskLocationAKID1 AS RiskLocationAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyCoverageAKID1 AS PolicyCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.StatisticalCoverageAKID1 AS StatisticalCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.ReinsuranceCoverageAKID1 AS ReinsuranceCoverageAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionAKID1 AS PremiumTransactionAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.BureauStatisticalCodeAKID1 AS BureauStatisticalCodeAKID,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionCode1 AS PremiumMasterTransactionCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionBookedDate1 AS PremiumMasterBookedDate,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART(last_day(add_to_date(sysdate,'MM',@{pipeline().parameters.NO_OF_MONTHS})), 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\r\n\t-- \r\n\t-- -- Determine last day of month and change timestamp to 23:59:59\r\n\t-- \n\tSET_DATE_PART(SET_DATE_PART(SET_DATE_PART(last_day(add_to_date(sysdate, 'MM', @{pipeline().parameters.NO_OF_MONTHS})), 'HH', 23), 'MI', 59), 'SS', 59) AS PremiumMasterBookedDateOut,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPolicyExpirationYear,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionEffectiveDate1 AS PremiumMasterCoverageEffectiveDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionExpirationDate1 AS PremiumMasterCoverageExpirationDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPolicyTerm,\n\t-- *INF*: IIF(ISNULL(PremiumMasterPolicyTerm), '0', PremiumMasterPolicyTerm)\n\tIFF(PremiumMasterPolicyTerm IS NULL, '0', PremiumMasterPolicyTerm) AS o_PremiumMasterPolicyTerm,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauPolicyType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterAuditCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPremiumType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauStatisticalLine,\n\t-- *INF*: IIF(ISNULL(ltrim(rtrim(PremiumMasterBureauStatisticalLine))),'N/A',PremiumMasterBureauStatisticalLine)\n\tIFF(ltrim(rtrim(PremiumMasterBureauStatisticalLine)) IS NULL, 'N/A', PremiumMasterBureauStatisticalLine) AS PremiumMasterBureauStatisticalLineout,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterAgencyCommissionRate,\n\t-- *INF*: IIF(ISNULL(PremiumMasterAgencyCommissionRate), 0.00000, PremiumMasterAgencyCommissionRate)\n\tIFF(PremiumMasterAgencyCommissionRate IS NULL, 0.00000, PremiumMasterAgencyCommissionRate) AS o_PremiumMasterAgencyCommissionRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterExposure,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode1,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode2,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterStatisticalCode3,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRateModifier,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRateDeparture,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterBureauInceptionDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.comments_cs,\n\t-- *INF*: IIF(ISNULL(SUBSTR(comments_cs,1,1)),'   ',SUBSTR(comments_cs,1,1))\n\tIFF(SUBSTR(comments_cs, 1, 1) IS NULL, '   ', SUBSTR(comments_cs, 1, 1)) AS PremiumMasterCountersignAgencyType,\n\t-- *INF*: IIF(ISNULL(SUBSTR(comments_cs,2,7)),'   ',SUBSTR(comments_cs,2,7))\n\tIFF(SUBSTR(comments_cs, 2, 7) IS NULL, '   ', SUBSTR(comments_cs, 2, 7)) AS PremiumMasterCountersignAgencyCode,\n\t-- *INF*: IIF(ISNULL(SUBSTR(comments_cs,9,2)),'   ',SUBSTR(comments_cs,9,2))\n\tIFF(SUBSTR(comments_cs, 9, 2) IS NULL, '   ', SUBSTR(comments_cs, 9, 2)) AS PremiumMasterCountersignAgencyState,\n\t-- *INF*: IIF(ISNULL(SUBSTR(comments_cs,11,2)),'   ',REPLACECHR(0, SUBSTR(comments_cs,11,2), ',', '0'))\n\tIFF(SUBSTR(comments_cs, 11, 2) IS NULL, '   ', REPLACECHR(0, SUBSTR(comments_cs, 11, 2), ',', '0')) AS PremiumMasterCountersignAgencyRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterPremium,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterFullTermPremium,\n\t'50' AS TaxBoardPercentage,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRiskAddress,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRiskCityState,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRenewalIndicator,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterRecordType,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterClassCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterTypeBureauCode,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterProductLine,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterSubLine,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PolicyKey,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterReasonAmendedCode,\n\t-1 AS DefaultID,\n\t-1 AS RatingCoverageAKId,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS RatingCoverageExpirationDate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumTransactionEnteredDate1,\n\t1 AS o_PremiumMasterCustomerCareCommissionRate,\n\tmplt_PremiumMasterStatisticalCodeDerivation.PremiumMasterWrittenExposure,\n\tFIL_Invalid_Records.DeclaredEventsFlag,\n\t-- *INF*: DECODE(DeclaredEventsFlag, 'T', 1, 'F', 0,Null)\n\tDECODE(DeclaredEventsFlag,\n\t'T', 1,\n\t'F', 0,\n\tNull) AS o_DeclaredEventsFlag\n\tFROM FIL_Invalid_Records\n\t -- Manually join with mplt_PremiumMasterStatisticalCodeDerivation\n),\nPremiumMasterCalculation AS (\n\tINSERT INTO PremiumMasterCalculation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, AgencyAKID, PolicyAKID, ContractCustomerAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, ReinsuranceCoverageAKID, PremiumTransactionAKID, BureauStatisticalCodeAKID, PremiumMasterTransactionCode, PremiumMasterPolicyExpirationYear, PremiumMasterCoverageEffectiveDate, PremiumMasterCoverageExpirationDate, PremiumMasterPolicyTerm, PremiumMasterBureauPolicyType, PremiumMasterAuditCode, PremiumMasterPremiumType, PremiumMasterTypeBureauCode, PremiumMasterBureauStatisticalLine, PremiumMasterProductLine, PremiumMasterAgencyCommissionRate, PremiumMasterClassCode, PremiumMasterExposure, PremiumMasterSubLine, PremiumMasterStatisticalCode1, PremiumMasterStatisticalCode2, PremiumMasterStatisticalCode3, PremiumMasterRateModifier, PremiumMasterRateDeparture, PremiumMasterBureauInceptionDate, PremiumMasterCountersignAgencyType, PremiumMasterCountersignAgencyCode, PremiumMasterCountersignAgencyState, PremiumMasterCountersignAgencyRate, PremiumMasterPremium, PremiumMasterFullTermPremium, TaxBoardPercentage, PremiumMasterRiskAddress, PremiumMasterRiskCityState, PremiumMasterRenewalIndicator, PremiumMasterRecordType, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, StagePremiumMasterPKID, PolicyKey, PremiumMasterRunDate, PremiumMasterReasonAmendedCode, PremiumTransactionEnteredDate, PremiumMasterCustomerCareCommissionRate, PremiumMasterWrittenExposure, DeclaredEventFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tAGENCYAKID, \n\tPOLICYAKID, \n\tCONTRACTCUSTOMERAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tREINSURANCECOVERAGEAKID, \n\tPREMIUMTRANSACTIONAKID, \n\tBUREAUSTATISTICALCODEAKID, \n\tPREMIUMMASTERTRANSACTIONCODE, \n\tPREMIUMMASTERPOLICYEXPIRATIONYEAR, \n\tPREMIUMMASTERCOVERAGEEFFECTIVEDATE, \n\tPREMIUMMASTERCOVERAGEEXPIRATIONDATE, \n\to_PremiumMasterPolicyTerm AS PREMIUMMASTERPOLICYTERM, \n\tPREMIUMMASTERBUREAUPOLICYTYPE, \n\tPREMIUMMASTERAUDITCODE, \n\tPREMIUMMASTERPREMIUMTYPE, \n\tPREMIUMMASTERTYPEBUREAUCODE, \n\tPremiumMasterBureauStatisticalLineout AS PREMIUMMASTERBUREAUSTATISTICALLINE, \n\tPREMIUMMASTERPRODUCTLINE, \n\to_PremiumMasterAgencyCommissionRate AS PREMIUMMASTERAGENCYCOMMISSIONRATE, \n\tPREMIUMMASTERCLASSCODE, \n\tPREMIUMMASTEREXPOSURE, \n\tPREMIUMMASTERSUBLINE, \n\tPREMIUMMASTERSTATISTICALCODE1, \n\tPREMIUMMASTERSTATISTICALCODE2, \n\tPREMIUMMASTERSTATISTICALCODE3, \n\tPREMIUMMASTERRATEMODIFIER, \n\tPREMIUMMASTERRATEDEPARTURE, \n\tPREMIUMMASTERBUREAUINCEPTIONDATE, \n\tPREMIUMMASTERCOUNTERSIGNAGENCYTYPE, \n\tPREMIUMMASTERCOUNTERSIGNAGENCYCODE, \n\tPREMIUMMASTERCOUNTERSIGNAGENCYSTATE, \n\tPREMIUMMASTERCOUNTERSIGNAGENCYRATE, \n\tPREMIUMMASTERPREMIUM, \n\tPREMIUMMASTERFULLTERMPREMIUM, \n\tTAXBOARDPERCENTAGE, \n\tPREMIUMMASTERRISKADDRESS, \n\tPREMIUMMASTERRISKCITYSTATE, \n\tPREMIUMMASTERRENEWALINDICATOR, \n\tPREMIUMMASTERRECORDTYPE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tDefaultID AS STAGEPREMIUMMASTERPKID, \n\tPOLICYKEY, \n\tPremiumMasterBookedDateOut AS PREMIUMMASTERRUNDATE, \n\tPREMIUMMASTERREASONAMENDEDCODE, \n\tPremiumTransactionEnteredDate1 AS PREMIUMTRANSACTIONENTEREDDATE, \n\to_PremiumMasterCustomerCareCommissionRate AS PREMIUMMASTERCUSTOMERCARECOMMISSIONRATE, \n\tPREMIUMMASTERWRITTENEXPOSURE, \n\to_DeclaredEventsFlag AS DECLAREDEVENTFLAG\n\tFROM EXP_Insert_CededTransactions\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244784"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893053"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7542184"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 04:35:30"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 09:25:41"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "v2"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "-1"
            },
            "DBCONNECTION_SOURCE2": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Policy"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME2": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}