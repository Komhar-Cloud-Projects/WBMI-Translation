{
    "name": "m_POL_DW_LOAD_PolicyLimit",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PolicyLimit",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SRC_Dept1553_D_AND_O AS (\n\tSELECT\n\tValue,\n\tin_PifSymbol,\n\tin_PifPolicyNumber,\n\tin_PifModule,\n\tin_TYPE,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tTYPE\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(replace(replace(replace(replace(replace(replace(\r\n\t\tcase \r\n\t\twhen DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(A) EACH LOSS',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(B) EACH POLICY YEAR',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue)))-CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\t \r\n\t\t\twhen DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\t \r\n\t\t\r\n\t\t\twhen DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(A) EACH LOSS',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('(A) EACH LOSS',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(B) EACH POLICY YEAR',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue)))-CHARINDEX('@',SourceValue,charindex('(B) EACH POLICY YEAR',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\t \r\n\t\t\twhen DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t\t else 'N/A'\r\n\t\tend,',',''),' ',''),'.',''),'O','0'),'\\',''),'$','')))\t  AS VALUE,\r\n\t\tPifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tcase when DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(A) EACH LOSS',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'     \r\n\t\t\t when DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(B) EACH POLICY YEAR',SourceValue )>0\t\tthen 'PolicyAggregateLimit'     \r\n\t\t\t when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue )>0 then 'PolicyPerClaimLimit'     \r\n\t\t\t when DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0\t\t\t\tthen 'PolicyAggregateLimit'\r\n\t\t\t when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'     \r\n\t\t     when DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\tthen 'PolicyAggregateLimit'     \r\n\t\t     when DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0\t\tthen 'PolicyPerClaimLimit'     \r\n\t\t\t when DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\t\t\tthen 'PolicyAggregateLimit' \r\n\t\t     ELSE 'N/A'end as TYPE\r\n\t\t\r\n\t\tfrom (\r\n\t\tselect PifSymbol,\r\n\t\tPifPolicyNumber,\r\n\t\tPifModule,\r\n\t\tltrim(rtrim(DECLPTFormNumber)) as DECLPTFormNumber,\r\n\t\tltrim(rtrim(DECLPTText1701))+' '+ltrim(rtrim(DECLPTText71791)) as SourceValue\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553} dept1553\r\n\t\twhere \r\n\t\tDECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01','CPEPL02', 'CPEPL03','CPNFE01','NSDOA01','CPNFP01','CPNFP02')\r\n\t\tand not exists (\r\n\t\tselect 1\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}\r\n\t\twhere dept1553.PifSymbol=PifSymbol\r\n\t\tand dept1553.PifPolicyNumber=PifPolicyNumber\r\n\t\tand dept1553.PifModule=PifModule\r\n\t\tand RIGHT(dept1553.DECLPTFormNumber,2)=RIGHT(DECLPTFormNumber,2)\r\n\t\tand dept1553.DECLPTSeq0098=DECLPTSeq0098\r\n\t\tand dept1553.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID}<@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID})\r\n\t\tunion all\r\n\t\tselect PifSymbol,\r\n\t\tPifPolicyNumber,\r\n\t\tPifModule,\r\n\t\tltrim(rtrim(DECLPTFormNumber)) as DECLPTFormNumber,\r\n\t\tltrim(rtrim(DECLPTText1702))+' '+ltrim(rtrim(DECLPTText71792)) as SourceValue\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553} dept1553\r\n\t\twhere \r\n\t\tDECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01','CPEPL02', 'CPEPL03','CPNFE01','NSDOA01','CPNFP01','CPNFP02')\r\n\t\tand not exists (\r\n\t\tselect 1\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}\r\n\t\twhere dept1553.PifSymbol=PifSymbol\r\n\t\tand dept1553.PifPolicyNumber=PifPolicyNumber\r\n\t\tand dept1553.PifModule=PifModule\r\n\t\tand RIGHT(dept1553.DECLPTFormNumber,2)=RIGHT(DECLPTFormNumber,2)\r\n\t\tand dept1553.DECLPTSeq0098=DECLPTSeq0098\r\n\t\tand dept1553.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID}<@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID})\r\n\t\t) Common\r\n\t\twhere  \r\n\t\t(DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(A) EACH LOSS',SourceValue )>0\t\t\t\t)or    \r\n\t\t\t(DECLPTFormNumber in ('CPNFP01','CPNFP02','WBDOA01') and charindex('(B) EACH POLICY YEAR',SourceValue )>0\t\t)or     \r\n\t\t\t(DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('LIMIT OF LIABILITY:  EACH CLAIM LIMIT',SourceValue )>0)or\r\n\t\t\t(DECLPTFormNumber in ('CPEPL02', 'CPEPL03') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0\t\t\t\t)or\r\n\t\t\t(DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0\t\t\t\t)or    \r\n\t\t    (DECLPTFormNumber in ('CPNFE01', 'NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\t)or     \r\n\t\t    (DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0\t\t)or    \r\n\t\t\t(DECLPTFormNumber in ('CPNFP01','CPNFP02') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\t\t\t)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,TYPE ORDER BY Value DESC) = 1\n),\nLKP_SRC_Dept1553_EPLI AS (\n\tSELECT\n\tValue,\n\tin_PifSymbol,\n\tin_PifPolicyNumber,\n\tin_PifModule,\n\tin_TYPE,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tTYPE\n\tFROM (\n\t\tSELECT\r\n\t\tltrim(rtrim(replace(replace(replace(replace(replace(replace(\r\n\t\tcase when DECLPTFormNumber in ('CPEPL01') and charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL01','CPNFP02','NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('EACH CLAIM LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('SELF-INSURED RETENTION',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue)))-CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('LIMIT OF LIABILITY',SourceValue )>0 AND CHARINDEX('',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue))+1,\r\n\t\t          CHARINDEX('',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue))-1) \r\n\t\t\r\n\t\t\twhen DECLPTFormNumber in ('CPEPL01') and charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL01','CPNFP02','NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('TOTAL AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t     when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('EACH CLAIM LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('EACH CLAIM LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue)))-CHARINDEX('@',SourceValue,charindex('POLICY AGGREGATE LIMIT',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('SELF-INSURED RETENTION',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue)))-CHARINDEX('@',SourceValue,charindex('SELF-INSURED RETENTION',SourceValue))-1)\r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('LIMIT OF LIABILITY',SourceValue )>0 AND CHARINDEX('^',SourceValue)>0\r\n\t\t     then SUBSTRING(SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue))+1,\r\n\t\t          CHARINDEX('^',SourceValue,CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue)))-CHARINDEX('@',SourceValue,charindex('LIMIT OF LIABILITY',SourceValue))-1)\r\n\t\t\t else 'N/A'\r\n\t\tend,',',''),' ',''),'.',''),'O','0'),'\\',''),'$','')))\t  AS VALUE,\r\n\t\tPifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tcase when DECLPTFormNumber in ('CPEPL01') and charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'  \r\n\t\t     when DECLPTFormNumber in ('CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'  \r\n\t\t     when DECLPTFormNumber in ('NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'       \r\n\t\t     when DECLPTFormNumber in ('CPEPL01','CPNFP02','NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\tthen 'PolicyAggregateLimit'        \r\n\t\t\t when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('EACH CLAIM LIMIT',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'     \r\n\t\t     when DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0\t\tthen 'PolicyAggregateLimit'     \r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('SELF-INSURED RETENTION',SourceValue )>0\t\t\t\tthen 'PolicyPerClaimLimit'       \r\n\t\t\t when DECLPTFormNumber in ('SLMYM01') and charindex('LIMIT OF LIABILITY',SourceValue )>0\t\t\t\tthen 'PolicyAggregateLimit'     \r\n\t\t     ELSE 'N/A'end as TYPE\r\n\t\tfrom (\r\n\t\tselect PifSymbol,\r\n\t\tPifPolicyNumber,\r\n\t\tPifModule,\r\n\t\tLTRIM(RTRIM(DECLPTFormNumber)) as DECLPTFormNumber,\r\n\t\tltrim(rtrim(DECLPTText1701))+' '+ltrim(rtrim(DECLPTText71791)) as SourceValue\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553} dept1553\r\n\t\twhere \r\n\t\tDECLPTFormNumber in ('CPEPL01','CPEPL02','CPEPL03','CPEPL04','CPNFP02','NSDOA01','SLMYM01')\r\n\t\tand not exists (\r\n\t\tselect 1\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}\r\n\t\twhere dept1553.PifSymbol=PifSymbol\r\n\t\tand dept1553.PifPolicyNumber=PifPolicyNumber\r\n\t\tand dept1553.PifModule=PifModule\r\n\t\tand RIGHT(dept1553.DECLPTFormNumber,2)=RIGHT(DECLPTFormNumber,2)\r\n\t\tand dept1553.DECLPTSeq0098=DECLPTSeq0098\r\n\t\tand dept1553.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID}<@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID})\r\n\t\tunion all\r\n\t\tselect PifSymbol,\r\n\t\tPifPolicyNumber,\r\n\t\tPifModule,\r\n\t\tLTRIM(RTRIM(DECLPTFormNumber)) as DECLPTFormNumber,\r\n\t\tltrim(rtrim(DECLPTText1702))+' '+ltrim(rtrim(DECLPTText71792)) as SourceValue\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553} dept1553\r\n\t\twhere \r\n\t\tDECLPTFormNumber in ('CPEPL01','CPEPL02','CPEPL03','CPEPL04','CPNFP02','NSDOA01','SLMYM01')\r\n\t\tand not exists (\r\n\t\tselect 1\r\n\t\tfrom DBO.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}\r\n\t\twhere dept1553.PifSymbol=PifSymbol\r\n\t\tand dept1553.PifPolicyNumber=PifPolicyNumber\r\n\t\tand dept1553.PifModule=PifModule\r\n\t\tand RIGHT(dept1553.DECLPTFormNumber,2)=RIGHT(DECLPTFormNumber,2)\r\n\t\tand dept1553.DECLPTSeq0098=DECLPTSeq0098\r\n\t\tand dept1553.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID}<@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553}.@{pipeline().parameters.SOURCE_TABLE_NAME_DEPT1553ID})\r\n\t\t\r\n\t\t) Common\r\n\t\twhere \r\n\t\t(DECLPTFormNumber in ('CPEPL01') and charindex('LIMIT OF LIABILITY:  EACH RELATED WRONGFUL EMPLOYMENT PRACTICE',SourceValue )>0\t) or\t\t\t \r\n\t\t(DECLPTFormNumber in ('CPNFP02') and charindex('LIMIT OF LIABILITY:  EACH LOSS',SourceValue )>0\t\t\t\t                          ) or\r\n\t\t(DECLPTFormNumber in ('NSDOA01') and charindex('LIMIT OF LIABILITY:  EACH CLAIM',SourceValue )>0\t\t\t\t                        ) or\r\n\t\t(DECLPTFormNumber in ('CPEPL01','CPNFP02','NSDOA01') and charindex('TOTAL AGGREGATE LIMIT',SourceValue )>0\t\t                  ) or\r\n\t\t(DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('EACH CLAIM LIMIT',SourceValue )>0\t\t\t\t                    ) or\r\n\t\t(DECLPTFormNumber in ('CPEPL02','CPEPL03','CPEPL04') and charindex('POLICY AGGREGATE LIMIT',SourceValue )>0\t\t                  ) or\r\n\t\t(DECLPTFormNumber in ('SLMYM01') and charindex('SELF-INSURED RETENTION',SourceValue )>0\t\t\t\t                                  ) or\r\n\t\t(DECLPTFormNumber in ('SLMYM01') and charindex('LIMIT OF LIABILITY',SourceValue )>0\t\t\t\t                                      )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,TYPE ORDER BY Value DESC) = 1\n),\nLKP_Pif11Stage_WB100 AS (\n\tSELECT\n\tLimitValue,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tLimitType\n\tFROM (\n\t\tselect \r\n\t\tPifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tLimitType as LimitType,\r\n\t\tLimitValue as LimitValue\r\n\t\tfrom (\r\n\t\tselect PifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tLTRIM(RTRIM(replace(raw_type,'0',''))) as LimitType,\r\n\t\tcase when patindex('% [0-9]%',raw_value)>0 then ltrim(rtrim(substring(raw_value,1,patindex('% [0-9]%',raw_value)))) when patindex('% [A-Z]%',raw_value)>0 then ltrim(rtrim(substring(raw_value,1,patindex('% [A-Z]%',raw_value)))) else raw_value end as LimitValue,\r\n\t\trow_number() over(partition by PifSymbol, PifPolicyNumber, PifModule,raw_type order by DocumentSegmentSeq desc,id desc) as rn\r\n\t\tfrom (\r\n\t\tselect \r\n\t\tid as id,\r\n\t\tDocumentSegmentSeq as DocumentSegmentSeq,\r\n\t\tPifSymbol as PifSymbol,\r\n\t\tPifPolicyNumber as PifPolicyNumber,\r\n\t\tPifModule as PifModule,\r\n\t\tltrim(rtrim(case when id=1 then raw_type_1 else raw_type_2 end)) as raw_type,\r\n\t\tltrim(rtrim(replace(replace(case when id=1 then raw_value_1 else raw_value_2 end,'$',''),',',''))) as raw_value\r\n\t\tfrom (\r\n\t\tselect \r\n\t\tt1.DocumentSegmentSeq as DocumentSegmentSeq\r\n\t\t,t1.PifSymbol as PifSymbol\r\n\t\t,t1.PifPolicyNumber as PifPolicyNumber\r\n\t\t,t1.PifModule as PifModule\r\n\t\t,t1.DocumentText as DocumentText\r\n\t\t,replace(substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)-17,22),'ITY:','') as raw_type_1\r\n\t\t,substring(substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,50),patindex('%$%',substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,50)),22) as raw_value_1\r\n\t\t,case when t1.DocumentText like '%LIMIT  %$%LIMIT  %$%' then replace(substring(\r\n\t\t  substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,len(t1.DocumentText)),\r\n\t\t  patindex('%LIMIT  %$%',substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,len(t1.DocumentText)))-17\r\n\t\t  ,22\r\n\t\t  ),'ITY:','')\r\n\t\telse NULL end as raw_type_2\r\n\t\t,case when t1.DocumentText like '%LIMIT  %$%LIMIT  %$%' then substring(\r\n\t\t  substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,len(t1.DocumentText)),\r\n\t\t  patindex('%LIMIT  %$%',substring(t1.DocumentText,patindex('%LIMIT  %$%',t1.DocumentText)+5,len(t1.DocumentText)))+5\r\n\t\t  ,30)\r\n\t\telse NULL end as raw_value_2\r\n\t\tfrom dbo.@{pipeline().parameters.SOURCE_TABLE_NAME_PIF11} t1\r\n\t\twhere t1.DocumentType='CM'and t1.DocumentName in ('WB100','WB100L')\r\n\t\tand not exists(\r\n\t\t  select 1 from dbo.@{pipeline().parameters.SOURCE_TABLE_NAME_PIF11} t2\r\n\t\t  where t1.DocumentType=t2.DocumentType\r\n\t\t  and t1.DocumentName=t2.DocumentName\r\n\t\t  and t1.PifSymbol=t2.PifSymbol\r\n\t\t  and t1.PifPolicyNumber=t2.PifPolicyNumber\r\n\t\t  and t1.PifModule=t2.PifModule\r\n\t\t  and t1.DocumentSegmentSeq=t2.DocumentSegmentSeq\r\n\t\t  and t1.@{pipeline().parameters.SOURCE_COL_NAME_PIFF11STAGEID}<t2.@{pipeline().parameters.SOURCE_COL_NAME_PIFF11STAGEID}\r\n\t\t)\r\n\t\tand patindex('%LIMIT  %$%',t1.DocumentText)>0) raw_limit\r\n\t\tjoin (\r\n\t\tselect 1 as id\r\n\t\tunion all\r\n\t\tselect 2 as id\r\n\t\t) dummy_table\r\n\t\ton 1=1\r\n\t\t) pivot_limit\r\n\t\twhere raw_type is not null\r\n\t\tand raw_value is not null) a\r\n\t\twhere rn=1\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,LimitType ORDER BY LimitValue) = 1\n),\nSQ_pif_4514_stage AS (\n\tSELECT DISTINCT RTRIM(A.pif_symbol) as pif_symbol,\r\n\t       A.pif_policy_number as pif_policy_number,\r\n\t       A.pif_module as pif_module,\r\n\t       ltrim(rtrim(sar_insurance_line)) as sar_insurance_line, \r\n\tcase when ltrim(rtrim(sar_risk_unit_group)) in ('286','287','900','367','366')\r\n\t\t\t\tthen ltrim(rtrim(sar_risk_unit_group)) ELSE '' END as sar_risk_unit_group\r\n\tFROM  @{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_4514}  A\r\n\tWHERE ((sar_insurance_line='GL' AND sar_major_peril<>'517') OR sar_insurance_line='WC')\r\n\t\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tpif_symbol, \n\tpif_policy_number, \n\tpif_module, \n\tsar_insurance_line, \n\tsar_risk_unit_group AS i_sar_risk_unit_group, \n\tMAX(i_sar_risk_unit_group) AS o_sar_risk_unit_group\n\tFROM SQ_pif_4514_stage\n\tGROUP BY pif_symbol, pif_policy_number, pif_module, sar_insurance_line\n),\nEXP_Set_Values AS (\n\tSELECT\n\tsar_insurance_line AS i_sar_insurance_line,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpif_symbol||pif_policy_number||pif_module AS o_pol_key,\n\to_sar_risk_unit_group AS sar_risk_unit_group,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_insurance_line)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_sar_insurance_line) AS o_InsuranceLine\n\tFROM AGG_RemoveDuplicates\n),\nLKP_Pif43LXZWCStage AS (\n\tSELECT\n\tPmdl4w1CovIiLmtsStdEach,\n\tPmdl4w1CovIiLmtsStdPol,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tPmdl4w1InsuranceLine\n\tFROM (\n\t\tSELECT PifSymbol as PifSymbol\r\n\t\t\t,PifPolicyNumber as PifPolicyNumber\r\n\t\t\t,PifModule as PifModule\r\n\t\t\t,Pmdl4w1InsuranceLine as Pmdl4w1InsuranceLine\r\n\t\t\t,Pmdl4w1CovIiLmtsStdEach as Pmdl4w1CovIiLmtsStdEach\r\n\t\t\t,Pmdl4w1CovIiLmtsStdPol as Pmdl4w1CovIiLmtsStdPol\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_43LXZWC}\r\n\t\tWHERE Pmdl4w1InsuranceLine='WC' and (Pmdl4w1CovIiLmtsStdEach is not null or Pmdl4w1CovIiLmtsStdPol is not null)\r\n\t\t@{pipeline().parameters.ORDER_CLAUSE_43LXZWC}\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,Pmdl4w1InsuranceLine ORDER BY Pmdl4w1CovIiLmtsStdEach) = 1\n),\nLKP_Pif43RXGLStage_Agg AS (\n\tSELECT\n\tPmdrxg1LimOcc,\n\tPmdrxg1LimitSubline,\n\tPmdrxg1RiskTypeInd,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tPmdrxg1InsuranceLine\n\tFROM (\n\t\tSELECT pmdrxg1limocc                       AS Pmdrxg1LimOcc, \r\n\t\t\t\t  Pmdrxg1LimitSubline     AS Pmdrxg1LimitSubline,\r\n\t\tPmdrxg1RiskTypeInd as Pmdrxg1RiskTypeInd,\r\n\t\t               pifsymbol                           AS PifSymbol, \r\n\t\t               pifpolicynumber                     AS PifPolicyNumber, \r\n\t\t               pifmodule                           AS PifModule, \r\n\t\t               Ltrim(Rtrim(pmdrxg1insuranceline))  AS Pmdrxg1InsuranceLine\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_43RXGL} \r\n\t\t WHERE  pmdrxg1insuranceline = 'GL' \r\n\t\tAND (Pmdrxg1RiskTypeInd='O' AND Pmdrxg1PmsDefGlSubline='340' OR Pmdrxg1PmsDefGlSubline IN ('345','346','355','365','367'))\r\n\t\tAND ( ( pmdrxg1limocc IS NOT NULL \r\n\t\t AND Ltrim(Rtrim(pmdrxg1limocc)) <> '' ) \r\n\t\tOR (Pmdrxg1LimitSubline IS NOT NULL\r\n\t\tAND LTRIM(RTRIM(Pmdrxg1LimitSubline))<>''))\r\n\t\t@{pipeline().parameters.ORDER_CLAUSE_43RXGL}\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,Pmdrxg1InsuranceLine ORDER BY Pmdrxg1LimOcc) = 1\n),\nLKP_Pif43RXGLStage_ProductAgg AS (\n\tSELECT\n\tPmdrxg1LimOcc,\n\tPmdrxg1LimitSubline,\n\tPifSymbol,\n\tPifPolicyNumber,\n\tPifModule,\n\tPmdrxg1InsuranceLine\n\tFROM (\n\t\tSELECT pmdrxg1limocc                       AS Pmdrxg1LimOcc, \r\n\t\t\t\t  Pmdrxg1LimitSubline     AS Pmdrxg1LimitSubline,\r\n\t\t               pifsymbol                           AS PifSymbol, \r\n\t\t               pifpolicynumber                     AS PifPolicyNumber, \r\n\t\t               pifmodule                           AS PifModule, \r\n\t\t               Ltrim(Rtrim(pmdrxg1insuranceline))  AS Pmdrxg1InsuranceLine\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_43RXGL} \r\n\t\t WHERE  pmdrxg1insuranceline = 'GL' \r\n\t\tAND Pmdrxg1RiskTypeInd='P'\r\n\t\tAND ( ( pmdrxg1limocc IS NOT NULL \r\n\t\t AND Ltrim(Rtrim(pmdrxg1limocc)) <> '' ) \r\n\t\tOR (Pmdrxg1LimitSubline IS NOT NULL\r\n\t\tAND LTRIM(RTRIM(Pmdrxg1LimitSubline))<>''))\r\n\t\t@{pipeline().parameters.ORDER_CLAUSE_43RXGL}\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PifSymbol,PifPolicyNumber,PifModule,Pmdrxg1InsuranceLine ORDER BY Pmdrxg1LimOcc) = 1\n),\nLKP_Policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag=1 AND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nEXP_IDAndLookupValues AS (\n\tSELECT\n\tEXP_Set_Values.pif_symbol,\n\tEXP_Set_Values.pif_policy_number,\n\tEXP_Set_Values.pif_module,\n\tLKP_Pif43RXGLStage_Agg.Pmdrxg1LimOcc AS i_Pmdrxg1LimOcc_Agg,\n\tLKP_Pif43RXGLStage_Agg.Pmdrxg1LimitSubline AS i_Pmdrxg1LimitSubline_Agg,\n\tLKP_Pif43RXGLStage_Agg.Pmdrxg1RiskTypeInd AS i_Pmdrxg1RiskTypeInd,\n\tLKP_Pif43RXGLStage_ProductAgg.Pmdrxg1LimOcc AS i_Pmdrxg1LimOcc_ProductAgg,\n\tLKP_Pif43RXGLStage_ProductAgg.Pmdrxg1LimitSubline AS i_Pmdrxg1LimitSubline_ProductAgg,\n\tLKP_Pif43LXZWCStage.Pmdl4w1CovIiLmtsStdEach AS i_Pmdl4w1CovIiLmtsStdEach,\n\tLKP_Pif43LXZWCStage.Pmdl4w1CovIiLmtsStdPol AS i_Pmdl4w1CovIiLmtsStdPol,\n\tLKP_Policy.pol_ak_id AS i_pol_ak_id,\n\tEXP_Set_Values.sar_risk_unit_group AS i_sar_risk_unit_group,\n\tEXP_Set_Values.o_InsuranceLine AS InsuranceLine,\n\t-- *INF*: IIF(:UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_Agg)='N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_ProductAgg),:UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_Agg))\n\tIFF(:UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_Agg) = 'N/A', :UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_ProductAgg), :UDF.DEFAULT_VALUE_FOR_STRINGS(i_Pmdrxg1LimOcc_Agg)) AS v_PolicyPerOccurenceLimit,\n\t-- *INF*: IIF(ISNULL(i_Pmdrxg1LimitSubline_Agg) OR IS_SPACES(i_Pmdrxg1LimitSubline_Agg) OR LENGTH(i_Pmdrxg1LimitSubline_Agg)=0,'N/A',LTRIM(RTRIM(i_Pmdrxg1LimitSubline_Agg)))\n\tIFF(i_Pmdrxg1LimitSubline_Agg IS NULL OR IS_SPACES(i_Pmdrxg1LimitSubline_Agg) OR LENGTH(i_Pmdrxg1LimitSubline_Agg) = 0, 'N/A', LTRIM(RTRIM(i_Pmdrxg1LimitSubline_Agg))) AS v_Pmdrxg1LimitSubline_Agg,\n\t-- *INF*: IIF(ISNULL(i_Pmdrxg1LimitSubline_ProductAgg) OR IS_SPACES(i_Pmdrxg1LimitSubline_ProductAgg) OR LENGTH(i_Pmdrxg1LimitSubline_ProductAgg)=0,'N/A',LTRIM(RTRIM(i_Pmdrxg1LimitSubline_ProductAgg)))\n\tIFF(i_Pmdrxg1LimitSubline_ProductAgg IS NULL OR IS_SPACES(i_Pmdrxg1LimitSubline_ProductAgg) OR LENGTH(i_Pmdrxg1LimitSubline_ProductAgg) = 0, 'N/A', LTRIM(RTRIM(i_Pmdrxg1LimitSubline_ProductAgg))) AS v_Pmdrxg1LimitSubline_ProductAgg,\n\t-- *INF*: IIF(ISNULL(i_Pmdl4w1CovIiLmtsStdEach), 'N/A', TO_CHAR(i_Pmdl4w1CovIiLmtsStdEach))\n\tIFF(i_Pmdl4w1CovIiLmtsStdEach IS NULL, 'N/A', TO_CHAR(i_Pmdl4w1CovIiLmtsStdEach)) AS v_Pmdl4w1CovIiLmtsStdEach,\n\t-- *INF*: IIF(ISNULL(i_Pmdl4w1CovIiLmtsStdPol), 'N/A', TO_CHAR(i_Pmdl4w1CovIiLmtsStdPol))\n\tIFF(i_Pmdl4w1CovIiLmtsStdPol IS NULL, 'N/A', TO_CHAR(i_Pmdl4w1CovIiLmtsStdPol)) AS v_Pmdl4w1CovIiLmtsStdPol,\n\ti_pol_ak_id AS o_pol_ak_id,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IIF(InsuranceLine='GL' AND i_sar_risk_unit_group!='367',v_PolicyPerOccurenceLimit,'N/A'),'0'))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IFF(InsuranceLine = 'GL' AND i_sar_risk_unit_group != '367', v_PolicyPerOccurenceLimit, 'N/A'), '0')) AS o_PolicyPerOccurenceLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- InsuranceLine='WC',v_Pmdl4w1CovIiLmtsStdPol,\r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'286', '287', '900')  , \r\n\t-- IIF(IN(:LKP.LKP_SRC_Dept1553_D_AND_O(pif_symbol,pif_policy_number,pif_module,'PolicyAggregateLimit'),'SEEWB100','SEEWB100L'),\r\n\t-- :LKP.LKP_PIF11STAGE_WB100(pif_symbol,pif_policy_number,pif_module,'POLICY AGGREGATE LIMIT'),\r\n\t-- :LKP.LKP_SRC_Dept1553_D_AND_O(pif_symbol,pif_policy_number,pif_module,'PolicyAggregateLimit')\r\n\t-- ),\r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'366')  , \r\n\t-- IIF(IN(:LKP.LKP_SRC_Dept1553_EPLI(pif_symbol,pif_policy_number,pif_module,'PolicyAggregateLimit'),'SEEWB100','SEEWB100L'),\r\n\t-- :LKP.LKP_PIF11STAGE_WB100(pif_symbol,pif_policy_number,pif_module,'POLICY AGGREGATE LIMIT'),\r\n\t-- :LKP.LKP_SRC_Dept1553_EPLI(pif_symbol,pif_policy_number,pif_module,'PolicyAggregateLimit')\r\n\t-- ),\r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'367'), v_Pmdrxg1LimitSubline_Agg, \r\n\t-- InsuranceLine='GL' ,v_Pmdrxg1LimitSubline_Agg,\r\n\t-- 'N/A')\r\n\t-- \n\tDECODE(TRUE,\n\tInsuranceLine = 'WC', v_Pmdl4w1CovIiLmtsStdPol,\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '286', '287', '900'), IFF(IN(LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.Value, 'SEEWB100', 'SEEWB100L'), LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.LimitValue, LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.Value),\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '366'), IFF(IN(LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.Value, 'SEEWB100', 'SEEWB100L'), LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.LimitValue, LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.Value),\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '367'), v_Pmdrxg1LimitSubline_Agg,\n\tInsuranceLine = 'GL', v_Pmdrxg1LimitSubline_Agg,\n\t'N/A') AS v_PolicyAggregateLimit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IIF(ISNULL(v_PolicyAggregateLimit), 'N/A', v_PolicyAggregateLimit ),'0'))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IFF(v_PolicyAggregateLimit IS NULL, 'N/A', v_PolicyAggregateLimit), '0')) AS o_PolicyAggregateLimit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IIF(InsuranceLine='GL' ,v_Pmdrxg1LimitSubline_ProductAgg,'N/A'),'0'))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IFF(InsuranceLine = 'GL', v_Pmdrxg1LimitSubline_ProductAgg, 'N/A'), '0')) AS o_PolicyProductAggregateLimit,\n\tv_Pmdl4w1CovIiLmtsStdEach AS o_PolicyPerAccidentLimit,\n\tv_Pmdl4w1CovIiLmtsStdEach AS o_PolicyPerDiseaseLimit,\n\t-- *INF*: DECODE(True, \r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'286', '287', '900') ,\r\n\t-- IIF(IN(:LKP.LKP_SRC_Dept1553_D_AND_O(pif_symbol,pif_policy_number,pif_module,'PolicyPerClaimLimit'),'SEEWB100','SEEWB100L'),\r\n\t-- :LKP.LKP_PIF11STAGE_WB100(pif_symbol,pif_policy_number,pif_module,'EACH CLAIM LIMIT'),\r\n\t-- :LKP.LKP_SRC_Dept1553_D_AND_O(pif_symbol,pif_policy_number,pif_module,'PolicyPerClaimLimit')\r\n\t-- ),\r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'367'), i_Pmdrxg1LimOcc_Agg, \r\n\t-- InsuranceLine='GL' and in(i_sar_risk_unit_group,'366') ,\r\n\t-- IIF(IN(:LKP.LKP_SRC_Dept1553_EPLI(pif_symbol,pif_policy_number,pif_module,'PolicyPerClaimLimit'),'SEEWB100','SEEWB100L'),\r\n\t-- :LKP.LKP_PIF11STAGE_WB100(pif_symbol,pif_policy_number,pif_module,'EACH CLAIM LIMIT'),\r\n\t-- :LKP.LKP_SRC_Dept1553_EPLI(pif_symbol,pif_policy_number,pif_module,'PolicyPerClaimLimit')\r\n\t-- ),\r\n\t-- 'N/A'\r\n\t--  )\n\tDECODE(True,\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '286', '287', '900'), IFF(IN(LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.Value, 'SEEWB100', 'SEEWB100L'), LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.LimitValue, LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.Value),\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '367'), i_Pmdrxg1LimOcc_Agg,\n\tInsuranceLine = 'GL' AND in(i_sar_risk_unit_group, '366'), IFF(IN(LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.Value, 'SEEWB100', 'SEEWB100L'), LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.LimitValue, LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.Value),\n\t'N/A') AS v_PolicyPerClaimLimit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IIF(ISNULL(v_PolicyPerClaimLimit), 'N/A', v_PolicyPerClaimLimit),'0'))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(IFF(v_PolicyPerClaimLimit IS NULL, 'N/A', v_PolicyPerClaimLimit), '0')) AS o_PolicyPerClaimLimit\n\tFROM EXP_Set_Values\n\tLEFT JOIN LKP_Pif43LXZWCStage\n\tON LKP_Pif43LXZWCStage.PifSymbol = EXP_Set_Values.pif_symbol AND LKP_Pif43LXZWCStage.PifPolicyNumber = EXP_Set_Values.pif_policy_number AND LKP_Pif43LXZWCStage.PifModule = EXP_Set_Values.pif_module AND LKP_Pif43LXZWCStage.Pmdl4w1InsuranceLine = EXP_Set_Values.o_InsuranceLine\n\tLEFT JOIN LKP_Pif43RXGLStage_Agg\n\tON LKP_Pif43RXGLStage_Agg.PifSymbol = EXP_Set_Values.pif_symbol AND LKP_Pif43RXGLStage_Agg.PifPolicyNumber = EXP_Set_Values.pif_policy_number AND LKP_Pif43RXGLStage_Agg.PifModule = EXP_Set_Values.pif_module AND LKP_Pif43RXGLStage_Agg.Pmdrxg1InsuranceLine = EXP_Set_Values.o_InsuranceLine\n\tLEFT JOIN LKP_Pif43RXGLStage_ProductAgg\n\tON LKP_Pif43RXGLStage_ProductAgg.PifSymbol = EXP_Set_Values.pif_symbol AND LKP_Pif43RXGLStage_ProductAgg.PifPolicyNumber = EXP_Set_Values.pif_policy_number AND LKP_Pif43RXGLStage_ProductAgg.PifModule = EXP_Set_Values.pif_module AND LKP_Pif43RXGLStage_ProductAgg.Pmdrxg1InsuranceLine = EXP_Set_Values.o_InsuranceLine\n\tLEFT JOIN LKP_Policy\n\tON LKP_Policy.pol_key = EXP_Set_Values.o_pol_key\n\tLEFT JOIN LKP_SRC_DEPT1553_D_AND_O LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit\n\tON LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifSymbol = pif_symbol\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifPolicyNumber = pif_policy_number\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifModule = pif_module\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.TYPE = 'PolicyAggregateLimit'\n\n\tLEFT JOIN LKP_PIF11STAGE_WB100 LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT\n\tON LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.PifSymbol = pif_symbol\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.PifPolicyNumber = pif_policy_number\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.PifModule = pif_module\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_POLICY_AGGREGATE_LIMIT.LimitType = 'POLICY AGGREGATE LIMIT'\n\n\tLEFT JOIN LKP_SRC_DEPT1553_EPLI LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit\n\tON LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifSymbol = pif_symbol\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifPolicyNumber = pif_policy_number\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.PifModule = pif_module\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyAggregateLimit.TYPE = 'PolicyAggregateLimit'\n\n\tLEFT JOIN LKP_SRC_DEPT1553_D_AND_O LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit\n\tON LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifSymbol = pif_symbol\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifPolicyNumber = pif_policy_number\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifModule = pif_module\n\tAND LKP_SRC_DEPT1553_D_AND_O_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.TYPE = 'PolicyPerClaimLimit'\n\n\tLEFT JOIN LKP_PIF11STAGE_WB100 LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT\n\tON LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.PifSymbol = pif_symbol\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.PifPolicyNumber = pif_policy_number\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.PifModule = pif_module\n\tAND LKP_PIF11STAGE_WB100_pif_symbol_pif_policy_number_pif_module_EACH_CLAIM_LIMIT.LimitType = 'EACH CLAIM LIMIT'\n\n\tLEFT JOIN LKP_SRC_DEPT1553_EPLI LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit\n\tON LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifSymbol = pif_symbol\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifPolicyNumber = pif_policy_number\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.PifModule = pif_module\n\tAND LKP_SRC_DEPT1553_EPLI_pif_symbol_pif_policy_number_pif_module_PolicyPerClaimLimit.TYPE = 'PolicyPerClaimLimit'\n\n),\nLKP_PolicyLimit AS (\n\tSELECT\n\tPolicyLimitId,\n\tPolicyLimitAKId,\n\tPolicyPerOccurenceLimit,\n\tPolicyAggregateLimit,\n\tPolicyProductAggregateLimit,\n\tPolicyPerAccidentLimit,\n\tPolicyPerDiseaseLimit,\n\tPolicyPerClaimLimit,\n\tInsuranceLine,\n\tPolicyAKId\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyLimitId,\n\t\t\tPolicyLimitAKId,\n\t\t\tPolicyPerOccurenceLimit,\n\t\t\tPolicyAggregateLimit,\n\t\t\tPolicyProductAggregateLimit,\n\t\t\tPolicyPerAccidentLimit,\n\t\t\tPolicyPerDiseaseLimit,\n\t\t\tPolicyPerClaimLimit,\n\t\t\tInsuranceLine,\n\t\t\tPolicyAKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyLimit\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLine,PolicyAKId ORDER BY PolicyLimitId) = 1\n),\nSEQ_PolicyLimitAKId AS (\n\tCREATE SEQUENCE SEQ_PolicyLimitAKId\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_DetectChange AS (\n\tSELECT\n\tLKP_PolicyLimit.PolicyLimitId AS lkp_PolicyLimitId,\n\tLKP_PolicyLimit.PolicyLimitAKId AS lkp_PolicyLimitAKId,\n\tLKP_PolicyLimit.PolicyPerOccurenceLimit AS lkp_PolicyPerOccurenceLimit,\n\tLKP_PolicyLimit.PolicyAggregateLimit AS lkp_PolicyAggregateLimit,\n\tLKP_PolicyLimit.PolicyProductAggregateLimit AS lkp_PolicyProductAggregateLimit,\n\tLKP_PolicyLimit.PolicyPerAccidentLimit AS lkp_PolicyPerAccidentLimit,\n\tLKP_PolicyLimit.PolicyPerDiseaseLimit AS lkp_PolicyPerDiseaseLimit,\n\tLKP_PolicyLimit.PolicyPerClaimLimit AS lkp_PolicyPerClaimLimit,\n\tSEQ_PolicyLimitAKId.NEXTVAL AS i_NEXTVAL,\n\tEXP_IDAndLookupValues.o_pol_ak_id AS pol_ak_id,\n\tEXP_IDAndLookupValues.InsuranceLine,\n\tEXP_IDAndLookupValues.o_PolicyPerOccurenceLimit AS PolicyPerOccurenceLimit,\n\tEXP_IDAndLookupValues.o_PolicyAggregateLimit AS PolicyAggregateLimit,\n\tEXP_IDAndLookupValues.o_PolicyProductAggregateLimit AS PolicyProductAggregateLimit,\n\tEXP_IDAndLookupValues.o_PolicyPerAccidentLimit AS PolicyPerAccidentLimit,\n\tEXP_IDAndLookupValues.o_PolicyPerDiseaseLimit AS PolicyPerDiseaseLimit,\n\tEXP_IDAndLookupValues.o_PolicyPerClaimLimit AS PolicyPerClaimLimit,\n\t-- *INF*: DECODE(TRUE,ISNULL(lkp_PolicyLimitId) AND pol_ak_id<>-1,1,\r\n\t-- pol_ak_id<>-1 \r\n\t-- AND (lkp_PolicyPerOccurenceLimit<>PolicyPerOccurenceLimit\r\n\t-- OR lkp_PolicyAggregateLimit<>PolicyAggregateLimit\r\n\t-- OR lkp_PolicyProductAggregateLimit<>PolicyProductAggregateLimit\r\n\t-- OR lkp_PolicyPerAccidentLimit<>PolicyPerAccidentLimit\r\n\t-- OR lkp_PolicyPerDiseaseLimit<>PolicyPerDiseaseLimit\r\n\t-- OR lkp_PolicyPerClaimLimit<>PolicyPerClaimLimit),2,0)\n\tDECODE(TRUE,\n\tlkp_PolicyLimitId IS NULL AND pol_ak_id <> - 1, 1,\n\tpol_ak_id <> - 1 AND ( lkp_PolicyPerOccurenceLimit <> PolicyPerOccurenceLimit OR lkp_PolicyAggregateLimit <> PolicyAggregateLimit OR lkp_PolicyProductAggregateLimit <> PolicyProductAggregateLimit OR lkp_PolicyPerAccidentLimit <> PolicyPerAccidentLimit OR lkp_PolicyPerDiseaseLimit <> PolicyPerDiseaseLimit OR lkp_PolicyPerClaimLimit <> PolicyPerClaimLimit ), 2,\n\t0) AS v_change_flag,\n\t'1' AS o_CurrentSnapshotFlag_Active,\n\t'0' AS o_CurrentSnapshotFlag_Inactive,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: IIF(v_change_flag=1,TO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(v_change_flag = 1, TO_DATE('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate_Active,\n\t-- *INF*: ADD_TO_DATE(SYSDATE,'SS',-1)\n\tADD_TO_DATE(SYSDATE, 'SS', - 1) AS o_ExpirationDate_Inactive,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: IIF(v_change_flag=1,i_NEXTVAL,lkp_PolicyLimitAKId)\n\tIFF(v_change_flag = 1, i_NEXTVAL, lkp_PolicyLimitAKId) AS o_PolicyLimitAKId,\n\tv_change_flag AS o_change_flag\n\tFROM EXP_IDAndLookupValues\n\tLEFT JOIN LKP_PolicyLimit\n\tON LKP_PolicyLimit.InsuranceLine = EXP_IDAndLookupValues.InsuranceLine AND LKP_PolicyLimit.PolicyAKId = EXP_IDAndLookupValues.o_pol_ak_id\n),\nRTR_Insert_Update AS (\n\tSELECT\n\to_change_flag AS i_change_flag,\n\tlkp_PolicyLimitId AS PolicyLimitId_Inactive,\n\to_CurrentSnapshotFlag_Active AS CurrentSnapshotFlag_Active,\n\to_CurrentSnapshotFlag_Inactive AS CurrentSnapshotFlag_Inactive,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate_Active AS ExpirationDate_Active,\n\to_ExpirationDate_Inactive AS ExpirationDate_Inactive,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_PolicyLimitAKId AS PolicyLimitAKId,\n\tpol_ak_id,\n\tInsuranceLine,\n\tPolicyPerOccurenceLimit,\n\tPolicyAggregateLimit,\n\tPolicyProductAggregateLimit,\n\tPolicyPerAccidentLimit,\n\tPolicyPerDiseaseLimit,\n\tPolicyPerClaimLimit\n\tFROM EXP_DetectChange\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE i_change_flag=1),\nRTR_Insert_Update_UPDATE AS (SELECT * FROM RTR_Insert_Update WHERE i_change_flag=2),\nTGT_PolicyLimit_INSERT_NEW AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyLimit\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyLimitAKId, PolicyAKId, InsuranceLine, PolicyPerOccurenceLimit, PolicyAggregateLimit, PolicyProductAggregateLimit, PolicyPerAccidentLimit, PolicyPerDiseaseLimit, PolicyPerClaimLimit)\n\tSELECT \n\tCurrentSnapshotFlag_Active AS CURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tExpirationDate_Active AS EXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYLIMITAKID, \n\tpol_ak_id AS POLICYAKID, \n\tINSURANCELINE, \n\tPOLICYPEROCCURENCELIMIT, \n\tPOLICYAGGREGATELIMIT, \n\tPOLICYPRODUCTAGGREGATELIMIT, \n\tPOLICYPERACCIDENTLIMIT, \n\tPOLICYPERDISEASELIMIT, \n\tPOLICYPERCLAIMLIMIT\n\tFROM RTR_Insert_Update_INSERT\n),\nUPD_PolicyLimit AS (\n\tSELECT\n\tPolicyLimitId_Inactive, \n\tCurrentSnapshotFlag_Inactive, \n\tExpirationDate_Inactive, \n\tModifiedDate\n\tFROM RTR_Insert_Update_UPDATE\n),\nTGT_PolicyLimit_EXPIRE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyLimit AS T\n\tUSING UPD_PolicyLimit AS S\n\tON T.PolicyLimitId = S.PolicyLimitId_Inactive\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag_Inactive, T.ExpirationDate = S.ExpirationDate_Inactive, T.ModifiedDate = S.ModifiedDate\n),\nTGT_PolicyLimit_UPD_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyLimit\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyLimitAKId, PolicyAKId, InsuranceLine, PolicyPerOccurenceLimit, PolicyAggregateLimit, PolicyProductAggregateLimit, PolicyPerAccidentLimit, PolicyPerDiseaseLimit, PolicyPerClaimLimit)\n\tSELECT \n\tCurrentSnapshotFlag_Active AS CURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tExpirationDate_Active AS EXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYLIMITAKID, \n\tpol_ak_id AS POLICYAKID, \n\tINSURANCELINE, \n\tPOLICYPEROCCURENCELIMIT, \n\tPOLICYAGGREGATELIMIT, \n\tPOLICYPRODUCTAGGREGATELIMIT, \n\tPOLICYPERACCIDENTLIMIT, \n\tPOLICYPERDISEASELIMIT, \n\tPOLICYPERCLAIMLIMIT\n\tFROM RTR_Insert_Update_UPDATE\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604196"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "dbo"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_TABLE_NAME_4514": {
                "type": "string",
                "defaultValue": "pif_4514_stage"
            },
            "SOURCE_TABLE_NAME_43RXGL": {
                "type": "string",
                "defaultValue": "pif43RXGLStage"
            },
            "SOURCE_TABLE_NAME_43LXZWC": {
                "type": "string",
                "defaultValue": "pif43LXZWCStage"
            },
            "SOURCE_TABLE_NAME_DEPT1553": {
                "type": "string",
                "defaultValue": "PifDept1553Stage"
            },
            "ORDER_CLAUSE_43RXGL": {
                "type": "string",
                "defaultValue": ""
            },
            "ORDER_CLAUSE_43LXZWC": {
                "type": "string",
                "defaultValue": ""
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "JOIN_CONDITION": {
                "type": "string",
                "defaultValue": "INNER JOIN"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "AND 1=1"
            },
            "WHERE_CLAUSE_EDW": {
                "type": "string",
                "defaultValue": "1=1"
            },
            "SOURCE_TABLE_NAME_PIF11": {
                "type": "string",
                "defaultValue": "Pif11Stage"
            },
            "SOURCE_COL_NAME_PIFF11STAGEID": {
                "type": "string",
                "defaultValue": "Pif11StageId"
            },
            "SOURCE_TABLE_NAME_DEPT1553ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}