{
    "name": "m_POL_DW_LOAD_RiskLocation_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_RiskLocation_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DCLocationStaging AS (\n\tSELECT WorkDCTLocation.SessionId, WorkDCTPolicy.PartyId, WorkDCTLocation.LocationId, WorkDCTLocation.StateProvince,\r\n\t WorkDCTLocation.PostalCode, WorkDCTPolicy.PolicyGUId, WorkDCTPolicy.PolicyNumber, WorkDCTPolicy.PolicyVersion, \r\n\t WorkDCTLocation.LocationNumber, WorkDCTLocation.LocationXmlId, WorkDCTPolicy.CustomerNum, WorkDCTLocation.City,\r\n\t  WorkDCTLocation.County, WorkDCTLocation.Address1, WorkDCTLocation.Territory \r\n\t  ,CTE.ParentCoverageObjectName,CTE.LineType, CTE.CoverageGUID \r\n\t  FROM\r\n\t  DBO.WorkDCTLocation INNER JOIN DBO.WorkDCTPolicy ON WorkDCTLocation.SessionId = WorkDCTPolicy.SessionId\r\n\t  Left Outer JOIN \r\n\t  (\r\n\t SELECT\r\n\t WorkDCTCoverageTransaction.ParentCoverageObjectName, \r\n\t  WorkDCTInsuranceLine.LineType, WorkDCTCoverageTransaction.CoverageGUID,WorkDCTTransactionInsuranceLineLocationBridge.LocationAssociationId,\r\n\t  WorkDCTInsuranceLine.PolicyId\r\n\t  FROM WorkDCTCoverageTransaction, WorkDCTInsuranceLine,WorkDCTTransactionInsuranceLineLocationBridge\r\n\t   WHERE WorkDCTCoverageTransaction.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId\r\n\tand\r\n\tWorkDCTInsuranceLine.LineId=WorkDCTTransactionInsuranceLineLocationBridge.LineId\r\n\t) CTE\r\n\tON CTE.LocationAssociationId=WorkDCTLocation.LocationAssociationId\r\n\tAND CTE.PolicyId=WorkDCTPolicy.PolicyId\r\n\tWHERE\r\n\t WorkDCTPolicy.PolicyStatus<>'Quote'and WorkDCTPolicy.TransactionState='committed'\r\n\tAnd \r\n\tWorkDCTPolicy.TransactionType NOT IN ('RescindNonRenew','Reporting','VoidReporting','Information','Dividend','RevisedDividend',\r\n\t'VoidDividend','NonRenew','RescindCancelPending','CancelPending')\n),\nEXP_Extract_Stage AS (\n\tSELECT\n\tSessionId,\n\tPartyId,\n\tLocationId,\n\tStateProvince,\n\tPostalCode,\n\tPolicyGUId,\n\tPolicyNumber,\n\tPolicyVersion,\n\tLocationNumber,\n\tLocationXmlId,\n\tCustomerNum,\n\tCity,\n\tCounty,\n\tAddress1,\n\tTerritory,\n\tParentCoverageObjectName,\n\tLineType,\n\tCoverageGUID\n\tFROM SQ_DCLocationStaging\n),\nMplt_RiskLocation_Key AS (WITH\n\tLKP_RiskLocation_RiskLocationKey_LocNum AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey,\n\t\tLocationUnitNumber\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey,\n\t\t\t\tLocationUnitNumber\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey,LocationUnitNumber ORDER BY RiskLocationAKID) = 1\n\t),\n\tLKP_RiskLocation_RiskLocationKey AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey ORDER BY RiskLocationAKID) = 1\n\t),\n\tLKP_RiskLocation_RiskLocationKey_LocNum_Territory AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey,\n\t\tLocationUnitNumber,\n\t\tRiskTerritory\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey,\n\t\t\t\tLocationUnitNumber,\n\t\t\t\tRiskTerritory\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey,LocationUnitNumber,RiskTerritory ORDER BY RiskLocationAKID) = 1\n\t),\n\tSource_Input AS (\n\t\t\n\t),\n\tEXP_Source_Data AS (\n\t\tSELECT\n\t\tSessionId,\n\t\tPartyId,\n\t\tLocationId,\n\t\tStateProvince,\n\t\tPostalCode,\n\t\tPolicyGUId,\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tLocationNumber,\n\t\tLocationXmlId,\n\t\tCustomerNum,\n\t\tCity,\n\t\tCounty,\n\t\tAddress1,\n\t\tTerritory,\n\t\tParentCoverageObjectName,\n\t\tLineType,\n\t\tCoverageGUID,\n\t\t-- *INF*: rtrim(ltrim(IIF(ISNULL(PolicyNumber) or IS_SPACES(PolicyNumber) or LENGTH(PolicyNumber)=0, 'N/A', LTRIM(RTRIM(PolicyNumber)))))\n\t\trtrim(ltrim(IFF(PolicyNumber IS NULL OR IS_SPACES(PolicyNumber) OR LENGTH(PolicyNumber) = 0, 'N/A', LTRIM(RTRIM(PolicyNumber))))) AS v_PolicyNumber,\n\t\t-- *INF*: rtrim(ltrim(IIF(ISNULL(PolicyVersion), '00', LPAD(TO_CHAR(PolicyVersion),2,'0'))))\n\t\trtrim(ltrim(IFF(PolicyVersion IS NULL, '00', LPAD(TO_CHAR(PolicyVersion), 2, '0')))) AS v_PolicyVersion,\n\t\tv_PolicyNumber AS o_PolicyNumber,\n\t\tv_PolicyVersion AS o_PolicyVersion,\n\t\tv_PolicyNumber||v_PolicyVersion AS o_PolicyKey\n\t\tFROM Source_Input\n\t),\n\tLKP_policy AS (\n\t\tSELECT\n\t\tpol_ak_id,\n\t\tpol_key\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_ak_id,\n\t\t\t\tpol_key\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tand exists (\r\n\t\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\t\twhere WCT.PolicyNumber=pol_num\r\n\t\t\tand ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol_mod)\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n\t),\n\tEXP_PolicyAKID_Deduction AS (\n\t\tSELECT\n\t\tEXP_Source_Data.SessionId,\n\t\tEXP_Source_Data.PartyId,\n\t\tEXP_Source_Data.LocationId,\n\t\tEXP_Source_Data.StateProvince,\n\t\tEXP_Source_Data.PostalCode,\n\t\tEXP_Source_Data.PolicyGUId,\n\t\tEXP_Source_Data.o_PolicyNumber AS PolicyNumber,\n\t\tEXP_Source_Data.o_PolicyVersion AS PolicyVersion,\n\t\tEXP_Source_Data.LocationNumber,\n\t\tEXP_Source_Data.LocationXmlId,\n\t\tEXP_Source_Data.CustomerNum,\n\t\tEXP_Source_Data.City,\n\t\tEXP_Source_Data.County,\n\t\tEXP_Source_Data.Address1,\n\t\tEXP_Source_Data.Territory,\n\t\tEXP_Source_Data.ParentCoverageObjectName,\n\t\tEXP_Source_Data.LineType,\n\t\tEXP_Source_Data.CoverageGUID,\n\t\tEXP_Source_Data.o_PolicyKey,\n\t\tLKP_policy.pol_ak_id AS i_pol_ak_id,\n\t\t-- *INF*: iif(isnull(i_pol_ak_id),-1,i_pol_ak_id)\n\t\tIFF(i_pol_ak_id IS NULL, - 1, i_pol_ak_id) AS o_Pol_AK_ID\n\t\tFROM EXP_Source_Data\n\t\tLEFT JOIN LKP_policy\n\t\tON LKP_policy.pol_key = EXP_Source_Data.o_PolicyKey\n\t),\n\tRTE_Parent_Object_Group AS (\n\t\tSELECT\n\t\tSessionId,\n\t\tPartyId,\n\t\tLocationId,\n\t\tStateProvince,\n\t\tPostalCode,\n\t\tPolicyGUId,\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tLocationNumber,\n\t\tLocationXmlId,\n\t\tCustomerNum,\n\t\tCity,\n\t\tCounty,\n\t\tAddress1,\n\t\tTerritory,\n\t\tParentCoverageObjectName,\n\t\tLineType,\n\t\tCoverageGUID,\n\t\to_PolicyKey AS PolicyKey,\n\t\to_Pol_AK_ID AS Pol_AK_ID\n\t\tFROM EXP_PolicyAKID_Deduction\n\t),\n\tRTE_Parent_Object_Group_RiskLevel AS (SELECT * FROM RTE_Parent_Object_Group WHERE 1=1),\n\tRTE_Parent_Object_Group_StateLevel AS (SELECT * FROM RTE_Parent_Object_Group WHERE IN(ParentCoverageObjectName,'DC_CA_State','DC_WC_StateTerm','WB_GOC_State','WB_HIO_State','WB_IM_State', 'WB_EC_State','DC_WC_State')=1),\n\tRTE_Parent_Object_Group_LineLevel AS (SELECT * FROM RTE_Parent_Object_Group WHERE IN(ParentCoverageObjectName,'DC_CR_Endorsement','DC_CR_Risk','DC_CR_RiskCrime','DC_Line','DC_CU_UmbrellaEmployersLiability','DC_IM_CoverageForm','WB_CU_PremiumDetail')=1),\n\tExp_RiskLevel AS (\n\t\tSELECT\n\t\tSessionId,\n\t\tPartyId,\n\t\tLocationId,\n\t\tStateProvince,\n\t\tPostalCode,\n\t\tPolicyGUId,\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tLocationNumber,\n\t\tLocationXmlId,\n\t\tCustomerNum,\n\t\tCity,\n\t\tCounty,\n\t\tAddress AS Address1,\n\t\tTerritory,\n\t\tParentCoverageObjectName,\n\t\tLineType,\n\t\tCoverageGUID,\n\t\tPolicyKey,\n\t\tPol_AK_ID,\n\t\t-- *INF*: IIF(ISNULL(StateProvince) or IS_SPACES(StateProvince)  or LENGTH(StateProvince)=0,'N/A',LTRIM(RTRIM(StateProvince)))\n\t\tIFF(StateProvince IS NULL OR IS_SPACES(StateProvince) OR LENGTH(StateProvince) = 0, 'N/A', LTRIM(RTRIM(StateProvince))) AS v_StateProvince,\n\t\tv_StateProvince AS o_StateProvince,\n\t\t-- *INF*: IIF(ISNULL(LineType) or IS_SPACES(LineType) or LENGTH(LineType)=0,'N/A',LTRIM(RTRIM(LineType)))\n\t\tIFF(LineType IS NULL OR IS_SPACES(LineType) OR LENGTH(LineType) = 0, 'N/A', LTRIM(RTRIM(LineType))) AS v_LineType,\n\t\tv_LineType AS o_LineType,\n\t\t-- *INF*: IIF(ISNULL(LocationXmlId) OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId)=0,'N/A',LTRIM(RTRIM(LocationXmlId)))\n\t\tIFF(LocationXmlId IS NULL OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId) = 0, 'N/A', LTRIM(RTRIM(LocationXmlId))) AS v_LocationXmlId,\n\t\tv_LocationXmlId AS o_LocationXmlId,\n\t\tPol_AK_ID||'~'||v_LocationXmlId AS o_RiskLocationKey\n\t\tFROM RTE_Parent_Object_Group_RiskLevel\n\t),\n\tExp_StateLevel AS (\n\t\tSELECT\n\t\tSessionId,\n\t\tPartyId,\n\t\tLocationId,\n\t\tStateProvince,\n\t\tPostalCode,\n\t\tPolicyGUId,\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tLocationNumber,\n\t\tLocationXmlId,\n\t\tCustomerNum,\n\t\tCity,\n\t\tCounty,\n\t\tAddress1,\n\t\tTerritory,\n\t\tParentCoverageObjectName,\n\t\tLineType,\n\t\tCoverageGUID,\n\t\tPolicyKey,\n\t\tPol_AK_ID,\n\t\t-- *INF*: IIF(ISNULL(LocationXmlId) OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId)=0,'N/A',LTRIM(RTRIM(LocationXmlId)))\n\t\tIFF(LocationXmlId IS NULL OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId) = 0, 'N/A', LTRIM(RTRIM(LocationXmlId))) AS v_LocationXmlId,\n\t\tv_LocationXmlId AS o_LocationXmlId,\n\t\t-- *INF*: IIF(ISNULL(StateProvince) or IS_SPACES(StateProvince)  or LENGTH(StateProvince)=0,'N/A',LTRIM(RTRIM(StateProvince)))\n\t\tIFF(StateProvince IS NULL OR IS_SPACES(StateProvince) OR LENGTH(StateProvince) = 0, 'N/A', LTRIM(RTRIM(StateProvince))) AS v_StateProvince,\n\t\tv_StateProvince AS o_StateProvince,\n\t\t-- *INF*: IIF(ISNULL(LineType) or IS_SPACES(LineType) or LENGTH(LineType)=0,'N/A',LTRIM(RTRIM(LineType)))\n\t\tIFF(LineType IS NULL OR IS_SPACES(LineType) OR LENGTH(LineType) = 0, 'N/A', LTRIM(RTRIM(LineType))) AS v_LineType,\n\t\tv_LineType AS o_LineType,\n\t\tPol_AK_ID||'~'||'PrimaryLocation'||'~'||v_StateProvince||'~'||v_LineType AS RiskLocationKey\n\t\tFROM RTE_Parent_Object_Group_StateLevel\n\t),\n\tExp_LineLevel AS (\n\t\tSELECT\n\t\tSessionId,\n\t\tPartyId,\n\t\tLocationId,\n\t\tStateProvince,\n\t\tPostalCode,\n\t\tPolicyGUId,\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tLocationNumber,\n\t\tLocationXmlId,\n\t\tCustomerNum,\n\t\tCity,\n\t\tCounty,\n\t\tAddress1,\n\t\tTerritory,\n\t\tParentCoverageObjectName,\n\t\tLineType,\n\t\tCoverageGUID,\n\t\tPolicyKey,\n\t\tPol_AK_ID,\n\t\t-- *INF*: IIF(ISNULL(LocationXmlId) OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId)=0,'N/A',LTRIM(RTRIM(LocationXmlId)))\n\t\tIFF(LocationXmlId IS NULL OR IS_SPACES(LocationXmlId) OR LENGTH(LocationXmlId) = 0, 'N/A', LTRIM(RTRIM(LocationXmlId))) AS v_LocationXmlId,\n\t\tv_LocationXmlId AS o_LocationXmlId,\n\t\t-- *INF*: IIF(ISNULL(StateProvince) or IS_SPACES(StateProvince)  or LENGTH(StateProvince)=0,'N/A',LTRIM(RTRIM(StateProvince)))\n\t\tIFF(StateProvince IS NULL OR IS_SPACES(StateProvince) OR LENGTH(StateProvince) = 0, 'N/A', LTRIM(RTRIM(StateProvince))) AS v_StateProvince,\n\t\tv_StateProvince AS o_StateProvince,\n\t\t-- *INF*: IIF(ISNULL(LineType) or IS_SPACES(LineType) or LENGTH(LineType)=0,'N/A',LTRIM(RTRIM(LineType)))\n\t\tIFF(LineType IS NULL OR IS_SPACES(LineType) OR LENGTH(LineType) = 0, 'N/A', LTRIM(RTRIM(LineType))) AS v_LineType,\n\t\tv_LineType AS o_LineType,\n\t\tPol_AK_ID||'~'||'PrimaryLocation'||'~'||v_LineType AS RiskLocationKey\n\t\tFROM RTE_Parent_Object_Group_LineLevel\n\t),\n\tUn_Risk_State_Line_Object AS (\n\t\tSELECT SessionId, PartyId, LocationId, PostalCode, PolicyGUId, PolicyNumber, PolicyVersion, LocationNumber, CustomerNum, City, County, Address1, Territory, ParentCoverageObjectName, CoverageGUID, PolicyKey, Pol_AK_ID, o_StateProvince AS StateProvince, o_LocationXmlId AS LocationXmlId, o_RiskLocationKey AS RiskLocationKey, o_LineType AS LineType\n\t\tFROM Exp_RiskLevel\n\t\tUNION\n\t\tSELECT SessionId, PartyId, LocationId, PostalCode, PolicyGUId, PolicyNumber, PolicyVersion, LocationNumber, CustomerNum, City, County, Address1, Territory, ParentCoverageObjectName, CoverageGUID, PolicyKey, Pol_AK_ID, o_StateProvince AS StateProvince, o_LocationXmlId AS LocationXmlId, RiskLocationKey, o_LineType AS LineType\n\t\tFROM Exp_StateLevel\n\t\tUNION\n\t\tSELECT SessionId, PartyId, LocationId, PostalCode, PolicyGUId, PolicyNumber, PolicyVersion, LocationNumber, CustomerNum, City, County, Address1, Territory, ParentCoverageObjectName, CoverageGUID, PolicyKey, Pol_AK_ID, o_StateProvince AS StateProvince, o_LocationXmlId AS LocationXmlId, RiskLocationKey, o_LineType AS LineType\n\t\tFROM Exp_LineLevel\n\t),\n\tLKP_RatingCoverage_RiskLocation AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey,\n\t\tPolicyAKID,\n\t\tCoverageGUID\n\t\tFROM (\n\t\t\tSELECT R.RiskLocationAKID as RiskLocationAKID, R.RiskLocationKey as RiskLocationKey, R.PolicyAKID as PolicyAKID, RC.CoverageGUID as CoverageGUID \r\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\t\tAND RC.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation R ON R.RiskLocationAKID = PC.RiskLocationAKID\r\n\t\t\t\tAND PC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\t\t       AND R.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\tAND R.CurrentSnapshotFlag = 1\r\n\t\t\t\tAND EXISTS ( SELECT 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol \r\n\t\t\t                 INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t                ON WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod \r\n\t\t\t                 AND pol.crrnt_snpsht_flag=1 and R.PolicyAKId=pol.pol_ak_id) \r\n\t\t\tORDER BY RC.RatingCoverageAKID\t,RC.EffectiveDate --\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,CoverageGUID ORDER BY RiskLocationAKID DESC) = 1\n\t),\n\tEXP_ParentObject_Level AS (\n\t\tSELECT\n\t\tUn_Risk_State_Line_Object.SessionId,\n\t\tUn_Risk_State_Line_Object.PartyId,\n\t\tUn_Risk_State_Line_Object.LocationId,\n\t\tUn_Risk_State_Line_Object.PostalCode,\n\t\tUn_Risk_State_Line_Object.PolicyGUId,\n\t\tUn_Risk_State_Line_Object.PolicyNumber,\n\t\tUn_Risk_State_Line_Object.PolicyVersion,\n\t\tUn_Risk_State_Line_Object.LocationNumber,\n\t\tUn_Risk_State_Line_Object.CustomerNum,\n\t\tUn_Risk_State_Line_Object.City,\n\t\tUn_Risk_State_Line_Object.County,\n\t\tUn_Risk_State_Line_Object.Address1,\n\t\tUn_Risk_State_Line_Object.Territory,\n\t\tLKP_RatingCoverage_RiskLocation.RiskLocationAKID AS lkp_RiskLocationAKID,\n\t\tLKP_RatingCoverage_RiskLocation.RiskLocationKey AS lkp_RiskLocationKey,\n\t\tUn_Risk_State_Line_Object.ParentCoverageObjectName,\n\t\tUn_Risk_State_Line_Object.CoverageGUID,\n\t\tUn_Risk_State_Line_Object.PolicyKey,\n\t\tUn_Risk_State_Line_Object.Pol_AK_ID,\n\t\tUn_Risk_State_Line_Object.StateProvince,\n\t\tUn_Risk_State_Line_Object.LocationXmlId,\n\t\tUn_Risk_State_Line_Object.RiskLocationKey,\n\t\tUn_Risk_State_Line_Object.LineType,\n\t\t-- *INF*: IIF(ISNULL(LocationNumber) or IS_SPACES(LocationNumber) or LENGTH(LocationNumber)=0,'0000', LPAD(LTRIM(RTRIM (LocationNumber)), 4, '0'))\n\t\tIFF(LocationNumber IS NULL OR IS_SPACES(LocationNumber) OR LENGTH(LocationNumber) = 0, '0000', LPAD(LTRIM(RTRIM(LocationNumber)), 4, '0')) AS v_LocationNumber,\n\t\t-- *INF*: IIF(ISNULL(Territory) or IS_SPACES(Territory)  or LENGTH(Territory)=0,'N/A',LTRIM(RTRIM(Territory)))\n\t\tIFF(Territory IS NULL OR IS_SPACES(Territory) OR LENGTH(Territory) = 0, 'N/A', LTRIM(RTRIM(Territory))) AS v_Territory,\n\t\t-- *INF*: :LKP.LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY(RiskLocationKey,v_LocationNumber,v_Territory)\n\t\tLKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_RiskLocationKey_v_LocationNumber_v_Territory.RiskLocationAKID AS v_RiskLocationAKID_RiskKey_Location_Territory,\n\t\t-- *INF*: IIF(ISNULL(v_RiskLocationAKID_RiskKey_Location_Territory),:LKP.LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM(RiskLocationKey,v_LocationNumber),v_RiskLocationAKID_RiskKey_Location_Territory)\n\t\tIFF(v_RiskLocationAKID_RiskKey_Location_Territory IS NULL, LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_RiskLocationKey_v_LocationNumber.RiskLocationAKID, v_RiskLocationAKID_RiskKey_Location_Territory) AS v_RiskLocationAKID_RiskKey_Location,\n\t\t-- *INF*: IIF(ISNULL(v_RiskLocationAKID_RiskKey_Location),:LKP.LKP_RISKLOCATION_RISKLOCATIONKEY(RiskLocationKey),v_RiskLocationAKID_RiskKey_Location)\n\t\tIFF(v_RiskLocationAKID_RiskKey_Location IS NULL, LKP_RISKLOCATION_RISKLOCATIONKEY_RiskLocationKey.RiskLocationAKID, v_RiskLocationAKID_RiskKey_Location) AS v_RiskLocationAKID_RiskKey,\n\t\t-- *INF*: DECODE ( TRUE, \r\n\t\t-- ---Condition to check for Locations which are not associated with any of the coverageguid\r\n\t\t-- ISNULL(CoverageGUID),v_RiskLocationAKID_RiskKey,\r\n\t\t-- ---Condition to check the RisklocationAKID for RiskLevel made up records(Records which are not part of risk level parenet object but created for State and Line level)\r\n\t\t-- NOT IN (ParentCoverageObjectName,'DC_BP_Location','DC_BP_Risk','DC_CA_Risk','DC_CF_Risk','DC_GL_Risk','DC_IM_Risk','DC_WC_Risk','DCBPLocation','WB_GOC_Risk','WB_HIO_Risk') AND RiskLocationKey = Pol_AK_ID||'~'||LocationXmlId AND (lkp_RiskLocationKey  != RiskLocationKey),v_RiskLocationAKID_RiskKey,\r\n\t\t-- --Condition to check risklocationakid for new location which is coming with new coverage.\r\n\t\t-- ISNULL(lkp_RiskLocationAKID),v_RiskLocationAKID_RiskKey,\r\n\t\t-- lkp_RiskLocationAKID)\n\t\tDECODE(TRUE,\n\t\tCoverageGUID IS NULL, v_RiskLocationAKID_RiskKey,\n\t\tNOT IN(ParentCoverageObjectName, 'DC_BP_Location', 'DC_BP_Risk', 'DC_CA_Risk', 'DC_CF_Risk', 'DC_GL_Risk', 'DC_IM_Risk', 'DC_WC_Risk', 'DCBPLocation', 'WB_GOC_Risk', 'WB_HIO_Risk') AND RiskLocationKey = Pol_AK_ID || '~' || LocationXmlId AND ( lkp_RiskLocationKey != RiskLocationKey ), v_RiskLocationAKID_RiskKey,\n\t\tlkp_RiskLocationAKID IS NULL, v_RiskLocationAKID_RiskKey,\n\t\tlkp_RiskLocationAKID) AS v_RiskLocationAKID,\n\t\tv_RiskLocationAKID AS o_RiskLocationAKID,\n\t\t-- *INF*: iif(isnull(to_char(v_RiskLocationAKID)),RiskLocationKey,to_char(v_RiskLocationAKID))\r\n\t\t-- -- This column is created to group by in mapping based on Exsiting RisklocationAKID or New RiskLocationKey\n\t\tIFF(to_char(v_RiskLocationAKID) IS NULL, RiskLocationKey, to_char(v_RiskLocationAKID)) AS RiskLocation_Group\n\t\tFROM Un_Risk_State_Line_Object\n\t\tLEFT JOIN LKP_RatingCoverage_RiskLocation\n\t\tON LKP_RatingCoverage_RiskLocation.PolicyAKID = Un_Risk_State_Line_Object.Pol_AK_ID AND LKP_RatingCoverage_RiskLocation.CoverageGUID = Un_Risk_State_Line_Object.CoverageGUID\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_RiskLocationKey_v_LocationNumber_v_Territory\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_RiskLocationKey_v_LocationNumber_v_Territory.RiskLocationKey = RiskLocationKey\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_RiskLocationKey_v_LocationNumber_v_Territory.LocationUnitNumber = v_LocationNumber\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_RiskLocationKey_v_LocationNumber_v_Territory.RiskTerritory = v_Territory\n\t\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_RiskLocationKey_v_LocationNumber\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_RiskLocationKey_v_LocationNumber.RiskLocationKey = RiskLocationKey\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_RiskLocationKey_v_LocationNumber.LocationUnitNumber = v_LocationNumber\n\t\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY LKP_RISKLOCATION_RISKLOCATIONKEY_RiskLocationKey\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_RiskLocationKey.RiskLocationKey = RiskLocationKey\n\t\n\t),\n\tRiskTarget AS (\n\t\tSELECT\n\t\tSessionId, \n\t\tPartyId, \n\t\tLocationId, \n\t\tPostalCode, \n\t\tPolicyGUId, \n\t\tPolicyNumber, \n\t\tPolicyVersion, \n\t\tLocationNumber, \n\t\tCustomerNum, \n\t\tCity, \n\t\tCounty, \n\t\tAddress1, \n\t\tTerritory, \n\t\tParentCoverageObjectName, \n\t\tCoverageGUID, \n\t\tPolicyKey, \n\t\tPol_AK_ID, \n\t\tStateProvince, \n\t\tLocationXmlId, \n\t\tRiskLocationKey, \n\t\tLineType, \n\t\to_RiskLocationAKID AS o_RiskLocationnAKID, \n\t\tRiskLocation_Group\n\t\tFROM EXP_ParentObject_Level\n\t),\n),\nLKP_WBLocationAccountStage AS (\n\tSELECT\n\tCityTaxCode,\n\tGeoTaxCountyDistrictCode,\n\tGeoTaxCityDistrictCode,\n\tKYTaxFactorAppliedIndicator,\n\tTerritoryIllinoisFireTaxLocationCode,\n\tSessionId,\n\tLocationId\n\tFROM (\n\t\tSELECT a.CityTaxCode as CityTaxCode,\r\n\t\ta.GeoTaxCountyDistrictCode as GeoTaxCountyDistrictCode,\r\n\t\ta.GeoTaxCityDistrictCode as GeoTaxCityDistrictCode,\r\n\t\tCASE WHEN b.KYTaxFactorAppliedIndicator='Difference' \r\n\t\tTHEN (CASE WHEN b.TaxFactorApplied=a.CityTaxPercent THEN 'City' WHEN b.TaxFactorApplied=a.CountyTaxPercent THEN 'County' END)\r\n\t\tELSE b.KYTaxFactorAppliedIndicator END as KYTaxFactorAppliedIndicator,\r\n\t\ta.TerritoryIllinoisFireTaxLocationCode as TerritoryIllinoisFireTaxLocationCode,\r\n\t\ta.SessionId as SessionId,\r\n\t\ta.LocationId as LocationId\r\n\t\tFROM dbo.WBLocationAccountStage a\r\n\t\tleft join dbo.WBCLLocationAccountStage b\r\n\t\ton a.SessionId=b.SessionId\r\n\t\tand a.WBLocationAccountId=b.WBLocationAccountId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,LocationId ORDER BY CityTaxCode) = 1\n),\nEXP_Extract_RiskLocationKey AS (\n\tSELECT\n\tMplt_RiskLocation_Key.SessionId1 AS SessionId,\n\tMplt_RiskLocation_Key.PartyId1 AS PartyId,\n\tMplt_RiskLocation_Key.LocationId1 AS LocationId,\n\tMplt_RiskLocation_Key.PostalCode1 AS PostalCode,\n\tMplt_RiskLocation_Key.PolicyGUId1 AS PolicyGUId,\n\tMplt_RiskLocation_Key.PolicyNumber1 AS PolicyNumber,\n\tMplt_RiskLocation_Key.PolicyVersion1 AS PolicyVersion,\n\tMplt_RiskLocation_Key.LocationNumber1 AS LocationNumber,\n\tMplt_RiskLocation_Key.CustomerNum1 AS CustomerNum,\n\tMplt_RiskLocation_Key.City1 AS City,\n\tMplt_RiskLocation_Key.County1 AS County,\n\tMplt_RiskLocation_Key.Address11 AS Address1,\n\tMplt_RiskLocation_Key.Territory1 AS Territory,\n\tMplt_RiskLocation_Key.ParentCoverageObjectName1 AS ParentCoverageObjectName,\n\tMplt_RiskLocation_Key.CoverageGUID1 AS CoverageGUID,\n\tMplt_RiskLocation_Key.PolicyKey,\n\tMplt_RiskLocation_Key.Pol_AK_ID,\n\tMplt_RiskLocation_Key.StateProvince1 AS StateProvince,\n\tMplt_RiskLocation_Key.LocationXmlId1 AS LocationXmlId,\n\tMplt_RiskLocation_Key.RiskLocationKey,\n\tMplt_RiskLocation_Key.LineType1 AS LineType,\n\tMplt_RiskLocation_Key.o_RiskLocationnAKID,\n\tMplt_RiskLocation_Key.RiskLocation_Group,\n\tLKP_WBLocationAccountStage.CityTaxCode,\n\tLKP_WBLocationAccountStage.GeoTaxCountyDistrictCode,\n\tLKP_WBLocationAccountStage.GeoTaxCityDistrictCode,\n\tLKP_WBLocationAccountStage.KYTaxFactorAppliedIndicator,\n\tLKP_WBLocationAccountStage.TerritoryIllinoisFireTaxLocationCode\n\tFROM Mplt_RiskLocation_Key\n\tLEFT JOIN LKP_WBLocationAccountStage\n\tON LKP_WBLocationAccountStage.SessionId = Mplt_RiskLocation_Key.SessionId1 AND LKP_WBLocationAccountStage.LocationId = Mplt_RiskLocation_Key.LocationId1\n),\nAGG_Remove_Duplicate AS (\n\tSELECT\n\tSessionId AS i_SessionId, \n\tPartyId AS i_PartyId, \n\tStateProvince AS i_StateProv, \n\tPostalCode AS i_PostalCode, \n\tPolicyGUId AS i_Id, \n\tPolicyVersion AS i_PolicyVersion, \n\tPolicyNumber AS i_PolicyNumber, \n\tLocationNumber AS i_LocationNumber, \n\tLocationXmlId AS i_LocationXmlId, \n\tCustomerNum AS i_CustomerNumber, \n\tCityTaxCode AS i_CityTaxCode, \n\tGeoTaxCountyDistrictCode AS i_GeoTaxCountyDistrictCode, \n\tGeoTaxCityDistrictCode AS i_GeoTaxCityDistrictCode, \n\tKYTaxFactorAppliedIndicator AS i_KYTaxFactorAppliedIndicator, \n\tTerritoryIllinoisFireTaxLocationCode AS i_TerritoryIllinoisFireTaxLocationCode, \n\tTerritory AS i_Territory, \n\tCity, \n\tCounty, \n\tAddress1, \n\tPol_AK_ID AS pol_ak_id, \n\ti_SessionId AS o_SessionID, \n\ti_PartyId AS o_PartyId, \n\tIFF(i_CustomerNumber IS NULL OR IS_SPACES(i_CustomerNumber) OR LENGTH(i_CustomerNumber) = 0, 'N/A', LTRIM(RTRIM(i_CustomerNumber))) AS o_CustomerNumber, \n\tIFF(i_Id IS NULL OR IS_SPACES(i_Id) OR LENGTH(i_Id) = 0, 'N/A', LTRIM(RTRIM(i_Id))) AS o_Id, \n\tIFF(i_PolicyNumber IS NULL OR IS_SPACES(i_PolicyNumber) OR LENGTH(i_PolicyNumber) = 0, 'N/A', LTRIM(RTRIM(i_PolicyNumber))) AS o_PolicyNumber, \n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS o_PolicyVersion, \n\tIFF(i_LocationNumber IS NULL OR IS_SPACES(i_LocationNumber) OR LENGTH(i_LocationNumber) = 0, '0000', LPAD(LTRIM(RTRIM(i_LocationNumber)), 4, '0')) AS o_LocationNumber, \n\tIFF(i_Territory IS NULL OR IS_SPACES(i_Territory) OR LENGTH(i_Territory) = 0, 'N/A', LTRIM(RTRIM(i_Territory))) AS o_Territory, \n\ti_LocationXmlId AS o_LocationXmlId, \n\ti_StateProv AS o_StateProv, \n\ti_PostalCode AS o_PostalCode, \n\tIFF(i_CityTaxCode IS NULL OR IS_SPACES(i_CityTaxCode) OR LENGTH(i_CityTaxCode) = 0, 'N/A', LTRIM(RTRIM(i_CityTaxCode))) AS o_CityTaxCode, \n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_KYTaxFactorAppliedIndicator) AS o_KYTaxFactorAppliedIndicator, \n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_GeoTaxCountyDistrictCode) AS o_GeoTaxCountyDistrictCode, \n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_GeoTaxCityDistrictCode) AS o_GeoTaxCityDistrictCode, \n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_TerritoryIllinoisFireTaxLocationCode) AS o_TerritoryIllinoisFireTaxLocationCode, \n\tRiskLocationKey AS o_RiskLocationKey, \n\to_RiskLocationnAKID AS o_RiskLocationAKID, \n\tRiskLocation_Group AS RiskLocation_GroupKey\n\tFROM EXP_Extract_RiskLocationKey\n\tGROUP BY RiskLocation_GroupKey\n),\nLKP_DCWCStateDefaultStaging AS (\n\tSELECT\n\tExperienceModRiskIDDefault,\n\tSessionId,\n\tPartyId,\n\tState\n\tFROM (\n\t\tselect ptya.SessionId as SessionId,\r\n\t\tptya.PartyId as PartyId,\r\n\t\tLTRIM(RTRIM(st.State)) as State,\r\n\t\tLTRIM(RTRIM(sd.ExperienceModRiskIDDefault)) as ExperienceModRiskIDDefault\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateDefaultStaging sd,\r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateStaging st, \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging lin,\r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPartyAssociationStaging ptya\r\n\t\twhere sd.SessionId = st.SessionId\r\n\t\tand sd.WC_StateId = st.WC_StateId\r\n\t\tand st.SessionId = lin.SessionId\r\n\t\tand st.LineId = lin.LineId\r\n\t\tand ptya.SessionId = lin.SessionId\r\n\t\tand ptya.PartyAssociationType = 'Account'\r\n\t\tand lin.Type = 'WorkersCompensation'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,PartyId,State ORDER BY ExperienceModRiskIDDefault) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tAGG_Remove_Duplicate.City AS i_City,\n\tAGG_Remove_Duplicate.County AS i_County,\n\tAGG_Remove_Duplicate.Address1 AS i_Address1,\n\tAGG_Remove_Duplicate.o_CustomerNumber AS i_CustomerNumber,\n\tAGG_Remove_Duplicate.o_Id AS i_Id,\n\tAGG_Remove_Duplicate.o_PolicyNumber AS i_PolicyNumber,\n\tAGG_Remove_Duplicate.o_PolicyVersion AS i_PolicyVersion,\n\tAGG_Remove_Duplicate.o_LocationNumber AS i_LocationNumber,\n\tAGG_Remove_Duplicate.o_Territory AS i_Territory,\n\tAGG_Remove_Duplicate.o_LocationXmlId AS i_LocationXmlId,\n\tAGG_Remove_Duplicate.o_StateProv AS i_StateProv,\n\tAGG_Remove_Duplicate.o_PostalCode AS i_PostalCode,\n\tAGG_Remove_Duplicate.o_CityTaxCode AS i_CityTaxCode,\n\tLKP_DCWCStateDefaultStaging.ExperienceModRiskIDDefault AS i_ExperienceModRiskIDDefault,\n\tAGG_Remove_Duplicate.o_KYTaxFactorAppliedIndicator AS i_KYTaxFactorAppliedIndicator,\n\tAGG_Remove_Duplicate.o_GeoTaxCountyDistrictCode AS i_GeoTaxCountyDistrictCode,\n\tAGG_Remove_Duplicate.o_GeoTaxCityDistrictCode AS i_GeoTaxCityDistrictCode,\n\tAGG_Remove_Duplicate.o_TerritoryIllinoisFireTaxLocationCode AS i_TerritoryIllinoisFireTaxLocationCode,\n\tAGG_Remove_Duplicate.pol_ak_id AS i_pol_ak_id,\n\t-- *INF*: IIF(ISNULL(i_StateProv) or IS_SPACES(i_StateProv)  or LENGTH(i_StateProv)=0,'N/A',LTRIM(RTRIM(i_StateProv)))\n\tIFF(i_StateProv IS NULL OR IS_SPACES(i_StateProv) OR LENGTH(i_StateProv) = 0, 'N/A', LTRIM(RTRIM(i_StateProv))) AS v_StateProv,\n\t0 AS o_logicalIndicator,\n\t-- *INF*: IIF(ISNULL(i_pol_ak_id), -1, i_pol_ak_id)\n\tIFF(i_pol_ak_id IS NULL, - 1, i_pol_ak_id) AS v_pol_ak_id,\n\t-- *INF*: v_pol_ak_id\r\n\t-- \r\n\t-- -- change policykey with PolAKID as per UID Change\r\n\t-- --v_Pol_Key\r\n\t-- \n\tv_pol_ak_id AS o_Pol_Key,\n\ti_LocationNumber AS o_LocationNumber,\n\t-- *INF*: IIF(i_LocationNumber = '0000','N','Y')\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(i_LocationNumber = '0000', 'N', 'Y') AS o_locationIndicator,\n\t-- *INF*: IIF(ISNULL(i_Territory) or IS_SPACES(i_Territory)  or LENGTH(i_Territory)=0,'N/A',LTRIM(RTRIM(i_Territory)))\n\tIFF(i_Territory IS NULL OR IS_SPACES(i_Territory) OR LENGTH(i_Territory) = 0, 'N/A', LTRIM(RTRIM(i_Territory))) AS o_Territory,\n\tv_StateProv AS o_StateProv,\n\t-- *INF*: IIF(ISNULL(i_PostalCode) or IS_SPACES(i_PostalCode)  or LENGTH(i_PostalCode)=0,'N/A',LTRIM(RTRIM(i_PostalCode)))\n\tIFF(i_PostalCode IS NULL OR IS_SPACES(i_PostalCode) OR LENGTH(i_PostalCode) = 0, 'N/A', LTRIM(RTRIM(i_PostalCode))) AS o_PostalCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- --IL\r\n\t-- i_StateProv = 'IL' and i_TerritoryIllinoisFireTaxLocationCode <> 'N/A', i_TerritoryIllinoisFireTaxLocationCode,\r\n\t-- --Other states\r\n\t-- i_KYTaxFactorAppliedIndicator='City',i_GeoTaxCityDistrictCode,\r\n\t-- i_KYTaxFactorAppliedIndicator='County',i_GeoTaxCountyDistrictCode,\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(TRUE,\n\ti_StateProv = 'IL' AND i_TerritoryIllinoisFireTaxLocationCode <> 'N/A', i_TerritoryIllinoisFireTaxLocationCode,\n\ti_KYTaxFactorAppliedIndicator = 'City', i_GeoTaxCityDistrictCode,\n\ti_KYTaxFactorAppliedIndicator = 'County', i_GeoTaxCountyDistrictCode,\n\t'N/A') AS o_TaxLocation,\n\t-- *INF*: IIF(ISNULL(i_City) OR IS_SPACES(i_City) OR LENGTH(i_City)=0,'N/A',LTRIM(RTRIM(i_City)))\n\tIFF(i_City IS NULL OR IS_SPACES(i_City) OR LENGTH(i_City) = 0, 'N/A', LTRIM(RTRIM(i_City))) AS o_RatingCity,\n\t-- *INF*: IIF(ISNULL(i_County) OR IS_SPACES(i_County) OR LENGTH(i_County)=0,'N/A',LTRIM(RTRIM(i_County)))\n\tIFF(i_County IS NULL OR IS_SPACES(i_County) OR LENGTH(i_County) = 0, 'N/A', LTRIM(RTRIM(i_County))) AS v_RatingCounty,\n\t-- *INF*: LTRIM(RTRIM(REPLACESTR(0,v_RatingCounty,'county','')))\n\tLTRIM(RTRIM(REPLACESTR(0, v_RatingCounty, 'county', ''))) AS o_RatingCounty,\n\ti_CityTaxCode AS o_TaxCode,\n\t-- *INF*: IIF(ISNULL(i_Address1) OR IS_SPACES(i_Address1) OR LENGTH(i_Address1)=0,'N/A',LTRIM(RTRIM(i_Address1)))\n\tIFF(i_Address1 IS NULL OR IS_SPACES(i_Address1) OR LENGTH(i_Address1) = 0, 'N/A', LTRIM(RTRIM(i_Address1))) AS o_Address1,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_ExperienceModRiskIDDefault,1,9))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_ExperienceModRiskIDDefault, 1, 9)) AS o_IntrastateRiskID,\n\tAGG_Remove_Duplicate.o_RiskLocationKey,\n\tAGG_Remove_Duplicate.o_RiskLocationAKID\n\tFROM AGG_Remove_Duplicate\n\tLEFT JOIN LKP_DCWCStateDefaultStaging\n\tON LKP_DCWCStateDefaultStaging.SessionId = AGG_Remove_Duplicate.o_SessionID AND LKP_DCWCStateDefaultStaging.PartyId = AGG_Remove_Duplicate.o_PartyId AND LKP_DCWCStateDefaultStaging.State = AGG_Remove_Duplicate.o_StateProv\n),\nLKP_SupCounty_IL AS (\n\tSELECT\n\tTaxLocationCountyCode,\n\tCountyName,\n\tStateCode\n\tFROM (\n\t\tselect ltrim(rtrim(a.CountyName)) as CountyName,\r\n\t\tltrim(rtrim(b.state_code)) as StateCode,\r\n\t\ta.TaxLocationCountyCode as TaxLocationCountyCode\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.SupCounty a\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state b\r\n\t\ton a.StateAbbreviation=b.state_code\r\n\t\twhere a.CurrentSnapshotFlag=1\r\n\t\tand b.crrnt_snpsht_flag=1\r\n\t\tand a.StateAbbreviation in ('IL')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CountyName,StateCode ORDER BY TaxLocationCountyCode) = 1\n),\nLKP_ISOFireProtectStage AS (\n\tSELECT\n\tCity,\n\tTaxLoc_County,\n\tTaxLoc_City\n\tFROM (\n\t\tSELECT  City AS City,  case when substring(TaxLoc,1,2)='00' then 'N/A' \r\n\t\telse  substring(TaxLoc,1,2) end AS TaxLoc_County,  substring(TaxLoc,3,4) AS TaxLoc_City from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ISOFireProtectStage\r\n\t\twhere ISOExpDate='2999-12-31 00:00:00.000'\r\n\t\tand taxloc is not null\r\n\t\tand ltrim(rtrim(taxloc)) <> '' ORDER BY TaxLoc_County,TaxLoc_City,City\r\n\t\t---\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TaxLoc_County,TaxLoc_City ORDER BY City) = 1\n),\nLKP_RiskLocation AS (\n\tSELECT\n\tRiskLocationAKID,\n\tRiskLocationKey,\n\tLocationIndicator,\n\tTaxLocation,\n\tsup_state_id,\n\tTaxCode,\n\tRiskLocationHashKey,\n\tIntrastateRiskId,\n\tISOFireProtectCity,\n\tLocationUnitNumber,\n\tRiskTerritory\n\tFROM (\n\t\tSELECT \n\t\t\tRiskLocationAKID,\n\t\t\tRiskLocationKey,\n\t\t\tLocationIndicator,\n\t\t\tTaxLocation,\n\t\t\tsup_state_id,\n\t\t\tTaxCode,\n\t\t\tRiskLocationHashKey,\n\t\t\tIntrastateRiskId,\n\t\t\tISOFireProtectCity,\n\t\t\tLocationUnitNumber,\n\t\t\tRiskTerritory\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand\r\n\t\tPolicyAKId in (\r\n\t\tselect pol_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\twhere WCT.PolicyNumber=pol.pol_num\r\n\t\tand ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod)\r\n\t\tand pol.crrnt_snpsht_flag=1)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationAKID ORDER BY RiskLocationAKID) = 1\n),\nLKP_SupState AS (\n\tSELECT\n\tsup_state_id,\n\tstate_abbrev,\n\tstate_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_state_id,\n\t\t\tstate_abbrev,\n\t\t\tstate_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id = 'EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY sup_state_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_RiskLocation.RiskLocationAKID AS lkp_RiskLocationAKID,\n\tLKP_RiskLocation.LocationIndicator AS lkp_LocationIndicator,\n\tLKP_RiskLocation.TaxLocation AS lkp_TaxLocation,\n\tLKP_RiskLocation.sup_state_id AS lkp_sup_state_id,\n\tLKP_RiskLocation.TaxCode AS lkp_KYTaxCode,\n\tLKP_RiskLocation.RiskLocationHashKey AS lkp_RiskLocationHashKey,\n\tLKP_RiskLocation.IntrastateRiskId AS lkp_IntrastateRiskId,\n\tLKP_RiskLocation.ISOFireProtectCity AS lkp_ISOFireProtectCity,\n\tLKP_RiskLocation.LocationUnitNumber AS lkp_LocationUnitNumber,\n\tLKP_RiskLocation.RiskTerritory AS lkp_RiskTerritory,\n\tLKP_RiskLocation.RiskLocationKey AS lkp_RiskLocationKey,\n\tLKP_SupState.sup_state_id AS i_sup_state_id,\n\tLKP_SupState.state_abbrev AS i_state_abbrev,\n\tEXP_Values.o_logicalIndicator AS i_LogicalIndicator,\n\tEXP_Values.o_RiskLocationKey AS i_RiskLocationKey,\n\tEXP_Values.o_LocationNumber AS i_LocationUnitNumber,\n\tEXP_Values.o_locationIndicator AS i_LocationIndicator,\n\tEXP_Values.o_Territory AS i_RiskTerritory,\n\tEXP_Values.o_PostalCode AS i_ZipPostalCode,\n\tEXP_Values.o_TaxLocation AS i_TaxLocation,\n\tEXP_Values.o_RatingCity AS i_RatingCity,\n\tEXP_Values.o_RatingCounty AS i_RatingCounty,\n\tEXP_Values.o_TaxCode AS i_TaxCode,\n\tEXP_Values.o_Address1 AS i_Address1,\n\tLKP_ISOFireProtectStage.City AS i_ISOFireProtectCity,\n\t-- *INF*: IIF(i_state_abbrev='12' and NOT ISNULL(i_ISOFireProtectCity),i_ISOFireProtectCity,'N/A')\n\tIFF(i_state_abbrev = '12' AND NOT i_ISOFireProtectCity IS NULL, i_ISOFireProtectCity, 'N/A') AS v_ISOFireProtectCity,\n\t-- *INF*: IIF(ISNULL(i_state_abbrev), 'N/A', i_state_abbrev)\n\tIFF(i_state_abbrev IS NULL, 'N/A', i_state_abbrev) AS v_StateProvinceCode,\n\t-- *INF*: MD5(i_Address1||i_RatingCity||v_StateProvinceCode||i_ZipPostalCode)\n\tMD5(i_Address1 || i_RatingCity || v_StateProvinceCode || i_ZipPostalCode) AS v_RiskLocationHashKey,\n\t-- *INF*:   IIF(ISNULL(lkp_RiskLocationAKID), 'NEW', \r\n\t-- IIF(\r\n\t-- LTRIM(RTRIM(lkp_LocationIndicator)) != LTRIM(RTRIM(i_LocationIndicator)) OR LTRIM(RTRIM(lkp_LocationUnitNumber)) != LTRIM(RTRIM(i_LocationUnitNumber)) OR LTRIM(RTRIM(lkp_RiskTerritory)) != LTRIM(RTRIM(i_RiskTerritory)) OR\r\n\t-- LTRIM(RTRIM(lkp_TaxLocation)) != LTRIM(RTRIM(i_TaxLocation)) OR lkp_sup_state_id != i_sup_state_id OR LTRIM(RTRIM(lkp_KYTaxCode)) != LTRIM(RTRIM(i_TaxCode)) OR LTRIM(RTRIM(lkp_RiskLocationHashKey)) != LTRIM(RTRIM(v_RiskLocationHashKey))  OR LTRIM(RTRIM(lkp_IntrastateRiskId)) != LTRIM(RTRIM(IntrastateRiskID)) OR LTRIM(RTRIM(lkp_ISOFireProtectCity)) != LTRIM(RTRIM(v_ISOFireProtectCity)) ,\r\n\t-- 'UPDATE', 'NOCHANGE'))\n\tIFF(lkp_RiskLocationAKID IS NULL, 'NEW', IFF(LTRIM(RTRIM(lkp_LocationIndicator)) != LTRIM(RTRIM(i_LocationIndicator)) OR LTRIM(RTRIM(lkp_LocationUnitNumber)) != LTRIM(RTRIM(i_LocationUnitNumber)) OR LTRIM(RTRIM(lkp_RiskTerritory)) != LTRIM(RTRIM(i_RiskTerritory)) OR LTRIM(RTRIM(lkp_TaxLocation)) != LTRIM(RTRIM(i_TaxLocation)) OR lkp_sup_state_id != i_sup_state_id OR LTRIM(RTRIM(lkp_KYTaxCode)) != LTRIM(RTRIM(i_TaxCode)) OR LTRIM(RTRIM(lkp_RiskLocationHashKey)) != LTRIM(RTRIM(v_RiskLocationHashKey)) OR LTRIM(RTRIM(lkp_IntrastateRiskId)) != LTRIM(RTRIM(IntrastateRiskID)) OR LTRIM(RTRIM(lkp_ISOFireProtectCity)) != LTRIM(RTRIM(v_ISOFireProtectCity)), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\tv_Changed_Flag AS o_Changed_Flag,\n\tlkp_RiskLocationAKID AS o_RiskLocationAKID,\n\ti_LogicalIndicator AS o_LogicalIndicator,\n\tEXP_Values.o_Pol_Key AS o_PolicyAKID,\n\t-- *INF*: IIF(ISNULL(lkp_RiskLocationAKID),i_RiskLocationKey,lkp_RiskLocationKey)\n\tIFF(lkp_RiskLocationAKID IS NULL, i_RiskLocationKey, lkp_RiskLocationKey) AS o_RiskLocationKey,\n\ti_LocationUnitNumber AS o_LocationUnitNumber,\n\ti_LocationIndicator AS o_LocationIndicator,\n\ti_RiskTerritory AS o_RiskTerritory,\n\tv_StateProvinceCode AS o_StateProvinceCode,\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\ti_TaxLocation AS o_TaxLocation,\n\ti_sup_state_id AS o_sup_state_id,\n\ti_RatingCity AS o_RatingCity,\n\ti_RatingCounty AS o_RatingCounty,\n\ti_TaxCode AS o_TaxCode,\n\tv_RiskLocationHashKey AS o_RiskLocationHashKey,\n\ti_Address1 AS o_Address1,\n\tv_ISOFireProtectCity AS o_ISOFireProtectCity,\n\tEXP_Values.o_IntrastateRiskID AS IntrastateRiskID\n\tFROM EXP_Values\n\tLEFT JOIN LKP_ISOFireProtectStage\n\tON LKP_ISOFireProtectStage.TaxLoc_County = LKP_SupCounty_IL.TaxLocationCountyCode AND LKP_ISOFireProtectStage.TaxLoc_City = EXP_Values.o_TaxLocation\n\tLEFT JOIN LKP_RiskLocation\n\tON LKP_RiskLocation.RiskLocationAKID = EXP_Values.o_RiskLocationAKID\n\tLEFT JOIN LKP_SupState\n\tON LKP_SupState.state_code = EXP_Values.o_StateProv\n),\nFIL_Insert AS (\n\tSELECT\n\to_Changed_Flag AS Changed_Flag, \n\to_RiskLocationAKID AS RiskLocationAKID, \n\to_LogicalIndicator AS LogicalIndicator, \n\to_PolicyAKID AS PolicyAKID, \n\to_RiskLocationKey AS RiskLocationKey, \n\to_LocationUnitNumber AS LocationUnitNumber, \n\to_LocationIndicator AS LocationIndicator, \n\to_RiskTerritory AS RiskTerritory, \n\to_StateProvinceCode AS StateProvinceCode, \n\to_ZipPostalCode AS ZipPostalCode, \n\to_TaxLocation AS TaxLocation, \n\to_sup_state_id AS sup_state_id, \n\to_RatingCity AS RatingCity, \n\to_RatingCounty AS RatingCounty, \n\to_TaxCode AS TaxCode, \n\to_RiskLocationHashKey AS RiskLocationHashKey, \n\to_Address1 AS Address1, \n\tIntrastateRiskID, \n\to_ISOFireProtectCity AS ISOFireProtectCity\n\tFROM EXP_Detect_Changes\n\tWHERE (Changed_Flag='NEW' OR Changed_Flag='UPDATE')\n),\nSEQ_RiskLocationAKID AS (\n\tCREATE SEQUENCE SEQ_RiskLocationAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tSEQ_RiskLocationAKID.NEXTVAL,\n\tChanged_Flag AS i_Changed_Flag,\n\tRiskLocationAKID AS i_RiskLocationAKID,\n\tLogicalIndicator,\n\tPolicyAKID,\n\tRiskLocationKey,\n\tLocationUnitNumber,\n\tLocationIndicator,\n\tRiskTerritory,\n\tStateProvinceCode,\n\tZipPostalCode,\n\tTaxLocation,\n\tsup_state_id,\n\tRatingCity,\n\tRatingCounty,\n\tTaxCode,\n\t-- *INF*: IIF(i_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(i_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS v_EffectiveDate,\n\tRiskLocationHashKey,\n\tAddress1,\n\tIntrastateRiskID,\n\tISOFireProtectCity,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tv_EffectiveDate AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t-- *INF*: IIF(ISNULL(i_RiskLocationAKID),NEXTVAL,i_RiskLocationAKID)\n\tIFF(i_RiskLocationAKID IS NULL, NEXTVAL, i_RiskLocationAKID) AS RiskLocationAKID,\n\t'N/A' AS o_ISOFireProtectCounty\n\tFROM FIL_Insert\n),\nTgt_RiskLocation_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RiskLocationAKID, PolicyAKID, RiskLocationKey, LocationUnitNumber, LocationIndicator, RiskTerritory, StateProvinceCode, ZipPostalCode, TaxLocation, sup_state_id, RatingCity, RatingCounty, TaxCode, RiskLocationHashKey, StreetAddress, ISOFireProtectCity, ISOFireProtectCounty, IntrastateRiskId)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tRISKLOCATIONAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONKEY, \n\tLOCATIONUNITNUMBER, \n\tLOCATIONINDICATOR, \n\tRISKTERRITORY, \n\tSTATEPROVINCECODE, \n\tZIPPOSTALCODE, \n\tTAXLOCATION, \n\tSUP_STATE_ID, \n\tRATINGCITY, \n\tRATINGCOUNTY, \n\tTAXCODE, \n\tRISKLOCATIONHASHKEY, \n\tAddress1 AS STREETADDRESS, \n\tISOFIREPROTECTCITY, \n\to_ISOFireProtectCounty AS ISOFIREPROTECTCOUNTY, \n\tIntrastateRiskID AS INTRASTATERISKID\n\tFROM EXP_Detemine_AK_ID\n),\nSQ_RiskLocation AS (\n\tSELECT \r\n\t\tRiskLocationID,\r\n\t\tEffectiveDate, \r\n\t\tExpirationDate,\r\n\t\tRiskLocationAKID\r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation a\r\n\tWHERE   EXISTS\r\n\t\t (SELECT 1\r\n\t\t FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation b \r\n\t\t   WHERE CurrentSnapshotFlag = 1 and SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t    and a.RiskLocationAKID = b.RiskLocationAKID\r\n\tGROUP BY  RiskLocationAKID  HAVING count(*) > 1)\r\n\tAND SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tORDER BY  RiskLocationAKID ,EffectiveDate  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tRiskLocationID,\n\tEffectiveDate AS i_eff_from_date,\n\tExpirationDate AS orig_eff_to_date,\n\tRiskLocationAKID AS i_RiskLocationAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_RiskLocationAKID = v_PrevRiskLocationAKID ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_RiskLocationAKID = v_PrevRiskLocationAKID, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\ti_RiskLocationAKID AS v_PrevRiskLocationAKID,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_RiskLocation\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tRiskLocationID, \n\torig_eff_to_date, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_RiskLocation AS (\n\tSELECT\n\tRiskLocationID, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTgt_RiskLocation_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation AS T\n\tUSING UPD_RiskLocation AS S\n\tON T.RiskLocationID = S.RiskLocationID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.crrnt_snpsht_flag, T.ExpirationDate = S.eff_to_date, T.ModifiedDate = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603297"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}