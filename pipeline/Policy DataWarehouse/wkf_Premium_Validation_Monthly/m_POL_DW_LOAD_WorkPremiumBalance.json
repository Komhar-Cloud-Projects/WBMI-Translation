{
    "name": "m_POL_DW_LOAD_WorkPremiumBalance",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkPremiumBalance",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_arch_pif_4514_stage AS (\n\tSELECT \r\n\t        LTRIM(RTRIM(arch.pif_symbol)),\r\n\t       arch.pif_policy_number,\r\n\t       arch.pif_module,\r\n\t       arch.sar_id,\r\n\t       LTRIM(RTRIM(arch.sar_insurance_line)),\r\n\t       LTRIM(RTRIM(arch.sar_location_x)),\r\n\t       LTRIM(RTRIM(arch.sar_sub_location_x)),\r\n\t       LTRIM(RTRIM(arch.sar_risk_unit_group)),\r\n\t       LTRIM(RTRIM(arch.sar_class_code_grp_x)),\r\n\t       LTRIM(RTRIM(arch.sar_class_code_mem_x)),\r\n\t       LTRIM(RTRIM(arch.sar_unit)),\r\n\t       LTRIM(RTRIM(arch.sar_risk_unit_continued)),\r\n\t       LTRIM(RTRIM(arch.sar_seq_rsk_unt_a)),\r\n\t       LTRIM(RTRIM(arch.sar_major_peril)),\r\n\t       LTRIM(RTRIM(arch.sar_seq_no)),\r\n\t       arch.sar_cov_eff_year,\r\n\t       arch.sar_cov_eff_month,\r\n\t       arch.sar_cov_eff_day,\r\n\t       sar_part_code,\r\n\t       LTRIM(RTRIM(arch.sar_entrd_date)),\r\n\t       arch.sar_transaction,\r\n\t       arch.sar_premium,\r\n\t       arch.sar_original_prem,\r\n\t       arch.sar_agents_comm_rate,\r\n\t       arch.sar_acct_entrd_date,\r\n\t       LTRIM(RTRIM(arch.sar_state)),\r\n\t       arch.sar_rsn_amend_one,\r\n\t       arch.sar_rsn_amend_two,\r\n\t       arch.sar_rsn_amend_three,\r\n\t       arch.sar_special_use,\r\n\t       arch.sar_type_bureau\r\n\tFROM   @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_ARCH} arch\r\n\tINNER JOIN\r\n\t(SELECT pif_symbol,\r\n\tpif_policy_number,\r\n\tpif_module,\r\n\tMAX(audit_id) AS audit_id\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_ARCH}                  \r\n\tWHERE  logical_flag IN ('0','1','2','3')  \r\n\tAND sar_acct_entrd_date=CONVERT(char(6), DATEADD(MONTH,DATEDIFF(MONTH,0,GETDATE())-@{pipeline().parameters.NO_OF_MONTH},0),112) \r\n\tAND @{pipeline().parameters.WHERE_CLAUSE_ARCH}            \r\n\tGROUP  BY pif_symbol,pif_policy_number,pif_module) A\r\n\tON arch.pif_symbol=A.pif_symbol\r\n\tAND arch.pif_policy_number=A.pif_policy_number\r\n\tAND arch.pif_module=A.pif_module\r\n\tAND arch.audit_id=A.audit_id\r\n\tWHERE arch.logical_flag IN ('0','1','2','3')  \r\n\tAND arch.sar_acct_entrd_date=CONVERT(char(6), DATEADD(MONTH,DATEDIFF(MONTH,0,GETDATE())-@{pipeline().parameters.NO_OF_MONTH},0),112) \r\n\tAND @{pipeline().parameters.WHERE_CLAUSE_2}\n),\nEXP_Default_Archive AS (\n\tSELECT\n\tpif_symbol AS arch_pif_symbol,\n\tpif_policy_number AS arch_pif_policy_number,\n\tpif_module AS arch_pif_module,\n\tsar_id AS arch_sar_id,\n\tsar_insurance_line AS arch_sar_insurance_line,\n\tsar_location_x AS arch_sar_location_x,\n\tsar_sub_location_x AS arch_sar_sub_location_x,\n\tsar_risk_unit_group AS arch_sar_risk_unit_group,\n\tsar_class_code_grp_x AS arch_sar_class_code_grp_x,\n\tsar_class_code_mem_x AS arch_sar_class_code_mem_x,\n\tsar_unit AS arch_sar_unit,\n\tsar_risk_unit_continued AS arch_sar_risk_unit_continued,\n\tsar_seq_rsk_unt_a AS arch_sar_seq_rsk_unt_a,\n\tsar_major_peril AS arch_sar_major_peril,\n\tsar_seq_no AS arch_sar_seq_no,\n\tsar_cov_eff_year AS arch_sar_cov_eff_year,\n\tsar_cov_eff_month AS arch_sar_cov_eff_month,\n\tsar_cov_eff_day AS arch_sar_cov_eff_day,\n\tsar_part_code AS arch_sar_part_code,\n\tsar_entrd_date AS arch_sar_entrd_date,\n\tsar_transaction AS arch_sar_transaction,\n\tsar_premium AS arch_sar_premium,\n\tsar_original_prem AS arch_sar_original_prem,\n\tsar_agents_comm_rate AS arch_sar_agents_comm_rate,\n\tsar_acct_entrd_date AS arch_sar_acct_entrd_date,\n\tsar_state AS arch_sar_state,\n\tsar_rsn_amend_one AS arch_sar_rsn_amend_one,\n\tsar_rsn_amend_two AS arch_sar_rsn_amend_two,\n\tsar_rsn_amend_three AS arch_sar_rsn_amend_three,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(arch_sar_rsn_amend_one  ||  arch_sar_rsn_amend_two || arch_sar_rsn_amend_three)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(arch_sar_rsn_amend_one || arch_sar_rsn_amend_two || arch_sar_rsn_amend_three) AS o_ReasonAmendedCode,\n\tsar_special_use AS arch_sar_special_use,\n\tsar_type_bureau AS arch_sar_type_bureau\n\tFROM SQ_arch_pif_4514_stage\n),\nEXP_Evaluate AS (\n\tSELECT\n\tarch_pif_symbol AS i_arch_pif_symbol,\n\tarch_pif_policy_number AS i_arch_pif_policy_number,\n\tarch_pif_module AS i_arch_pif_module,\n\tarch_sar_major_peril,\n\tarch_sar_part_code,\n\tarch_sar_entrd_date,\n\tarch_sar_transaction,\n\tarch_sar_premium,\n\tarch_sar_original_prem,\n\tarch_sar_agents_comm_rate,\n\tarch_sar_acct_entrd_date,\n\tarch_sar_state,\n\to_ReasonAmendedCode AS ReasonAmendedCode,\n\tarch_sar_special_use,\n\tarch_sar_type_bureau,\n\ti_arch_pif_symbol  ||  i_arch_pif_policy_number  || i_arch_pif_module AS o_PolicyKey\n\tFROM EXP_Default_Archive\n),\nEXP_Values AS (\n\tSELECT\n\tarch_sar_major_peril AS i_arch_sar_major_peril,\n\tarch_sar_part_code AS i_arch_sar_part_code,\n\tarch_sar_entrd_date AS i_arch_sar_entrd_date,\n\tarch_sar_transaction AS i_arch_sar_transaction,\n\tarch_sar_premium AS i_arch_sar_premium,\n\tarch_sar_original_prem AS i_arch_sar_original_prem,\n\tarch_sar_agents_comm_rate AS i_arch_sar_agents_comm_rate,\n\tarch_sar_acct_entrd_date AS i_arch_sar_acct_entrd_date,\n\tarch_sar_state AS i_arch_sar_state,\n\tReasonAmendedCode AS i_ReasonAmendedCode,\n\tarch_sar_special_use AS i_arch_sar_special_use,\n\tarch_sar_type_bureau AS i_arch_sar_type_bureau,\n\to_PolicyKey AS i_PolicyKey,\n\tSYSDATE AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\ti_PolicyKey AS o_PolicyKey,\n\ti_arch_sar_major_peril AS o_SarMajorPerilCode,\n\ti_arch_sar_part_code AS o_SarPartCode,\n\ti_arch_sar_entrd_date AS o_SarEnteredDate,\n\ti_arch_sar_transaction AS o_SarTransaction,\n\ti_arch_sar_premium AS o_SarPremium,\n\ti_arch_sar_original_prem AS o_SarOriginalPremium,\n\ti_arch_sar_agents_comm_rate AS o_SarAgentCommissionRate,\n\ti_arch_sar_acct_entrd_date AS o_SarAccountEnteredDate,\n\ti_arch_sar_state AS o_SarState,\n\ti_ReasonAmendedCode AS o_ReasonAmendedCode,\n\ti_arch_sar_special_use AS o_SarSpecialUse,\n\ti_arch_sar_type_bureau AS o_SarTypeBureau\n\tFROM EXP_Evaluate\n),\nWorkPremiumBalance AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumBalance;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumBalance\n\t(ExtractDate, SourceSystemId, PolicyKey, SarMajorPerilCode, SarPartCode, SarEnteredDate, SarTransaction, SarPremium, SarOriginalPremium, SarAgentCommissionRate, SarAccountEnteredDate, SarState, ReasonAmendedCode, SarSpecialUse, SarTypeBureau)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\to_PolicyKey AS POLICYKEY, \n\to_SarMajorPerilCode AS SARMAJORPERILCODE, \n\to_SarPartCode AS SARPARTCODE, \n\to_SarEnteredDate AS SARENTEREDDATE, \n\to_SarTransaction AS SARTRANSACTION, \n\to_SarPremium AS SARPREMIUM, \n\to_SarOriginalPremium AS SARORIGINALPREMIUM, \n\to_SarAgentCommissionRate AS SARAGENTCOMMISSIONRATE, \n\to_SarAccountEnteredDate AS SARACCOUNTENTEREDDATE, \n\to_SarState AS SARSTATE, \n\to_ReasonAmendedCode AS REASONAMENDEDCODE, \n\to_SarSpecialUse AS SARSPECIALUSE, \n\to_SarTypeBureau AS SARTYPEBUREAU\n\tFROM EXP_Values\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "5818"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7714"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "72885"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/22/2013 03:17:36"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "10/09/2013 15:51:25"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "SOURCE_TABLE_NAME_ARCH": {
                "type": "string",
                "defaultValue": "arch_pif_4514_stage"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "NO_OF_MONTH": {
                "type": "string",
                "defaultValue": "1"
            },
            "WHERE_CLAUSE_ARCH": {
                "type": "string",
                "defaultValue": "extract_date<DATEADD(HOUR,10,DATEADD(MONTH,DATEDIFF(MONTH,0,GETDATE())-$$NO_OF_MONTH+1,0))"
            },
            "WHERE_CLAUSE_2": {
                "type": "string",
                "defaultValue": "arch.extract_date<DATEADD(HOUR,10,DATEADD(MONTH,DATEDIFF(MONTH,0,GETDATE())-$$NO_OF_MONTH+1,0))"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}