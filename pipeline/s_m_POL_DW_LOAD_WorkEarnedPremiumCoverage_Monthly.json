{
    "name": "s_m_POL_DW_LOAD_WorkEarnedPremiumCoverage_Monthly",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkEarnedPremiumCoverage_Monthly",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_WorkEarnedPremiumCoverage AS (\n\tSELECT\n\tWorkEarnedPremiumCoverageMonthlyID,\n\tPolicyAKID,\n\tStatisticalCoverageAKID,\n\tRatingCoverageAKID,\n\tRunDate\n\tFROM (\n\t\tSELECT A.WorkEarnedPremiumCoverageMonthlyID as WorkEarnedPremiumCoverageMonthlyID, \r\n\t\tA.PolicyAKID as PolicyAKID, \r\n\t\tA.StatisticalCoverageAKID as StatisticalCoverageAKID,\r\n\t\tA.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tA.RunDate as RunDate\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkEarnedPremiumCoverageMonthly A\r\n\t\tWHERE A.RUNDATE>= DATEADD(mm,-@{pipeline().parameters.NO_OF_MONTHS},GETDATE())\r\n\t\tAND A.RUNDATE< DATEADD(mm,-@{pipeline().parameters.NO_OF_MONTHS}+1,GETDATE())\r\n\t\t@{pipeline().parameters.LOOKUP_WORK_CLAUSE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKID,RunDate ORDER BY WorkEarnedPremiumCoverageMonthlyID) = 1\n),\nLKP_ClassCode_9115 AS (\n\tSELECT\n\tClassCode,\n\tPolicyAkid,\n\tRatingCoverageAKid,\n\tStatisticalCoverageAKID\n\tFROM (\n\t\tselect SC.ClassCode as ClassCode,PC.PolicyAkid as PolicyAkid,sc.StatisticalCoverageAKID as StatisticalCoverageAKID,-1 as RatingCoverageAKid\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\t\twhere PC.InsuranceLine='WC'\r\n\t\tUNION\r\n\t\tselect RC.ClassCode as ClassCode,PC.PolicyAkid as PolicyAkid,-1 as StatisticalCoverageAKID,RC.RatingCoverageAKid as RatingCoverageAKid\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\twhere PC.InsuranceLine='WorkersCompensation'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAkid,StatisticalCoverageAKID,RatingCoverageAKid ORDER BY ClassCode DESC) = 1\n),\nSQ_PremiumMasterCalculation_PMS AS (\n\tDECLARE @Date1 AS DATETIME,\r\n\t        @Date2 AS DATETIME,\r\n\t        @Date3 AS INT,\r\n\t        @Date4 AS INT\r\n\t        \r\n\tset @Date1=DATEADD(MM, -@{pipeline().parameters.NO_OF_MONTHS}, GETDATE())\r\n\tset @Date2=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS}-1),0))\r\n\tset @Date3=DATEPART(YEAR,DATEADD(MM, -@{pipeline().parameters.NO_OF_MONTHS}, GETDATE()))\r\n\tset @Date4=DATEPART(YEAR,DATEADD(MM, -@{pipeline().parameters.NO_OF_MONTHS}+12, GETDATE()))\r\n\t\r\n\tSELECT \r\n\t@Date1 AS eff_from_date,\r\n\tA.PolicyKey, \r\n\tA.AgencyAKID, \r\n\tA.ContractCustomerAKID, \r\n\tA.PolicyAKID,\r\n\tA.RiskLocationAKID, \r\n\tA.PolicyCoverageAKID, \r\n\tA.StatisticalCoverageAKID, \r\n\tA.ReinsuranceCoverageAKID, \r\n\tA.PremiumTransactionAKID, \r\n\tA.PremiumMasterTransactionCode, \r\n\tA.PremiumMasterRunDate, \r\n\tA.PremiumTransactionEnteredDate,\r\n\tA.PremiumMasterCoverageEffectiveDate, \r\n\tA.PremiumMasterCoverageExpirationDate,\r\n\tcase when B.ChangedCoverageExpirationDate is null then A.PremiumMasterCoverageExpirationDate else B.ChangedCoverageExpirationDate end ChangedCoverageExpirationDate, \r\n\tA.PremiumMasterPremiumType, \r\n\tA.PremiumMasterTypeBureauCode, \r\n\tA.PremiumMasterAgencyCommissionRate, \r\n\tA.PremiumMasterReasonAmendedCode, \r\n\tA.PremiumMasterPremium, \r\n\tA.PremiumMasterFullTermPremium,\r\n\tA.RatingCoverageAKId,\r\n\tA.RatingCoverageEffectiveDate,\r\n\tA.RatingCoverageExpirationDate  \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation A with(nolock) left outer join \r\n\t (select AgencyAKID,ContractCustomerAKID,PolicyAKID,RiskLocationAKID,PolicyCoverageAKID,StatisticalCoverageAKID,MAX(PremiumMasterCoverageExpirationDate) ChangedCoverageExpirationDate,PremiumMasterPremiumType\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation with(nolock)\r\n\twhere PremiumMasterRunDate<=@Date2\r\n\t@{pipeline().parameters.REASON_AMENDED_CODE}\r\n\tgroup by AgencyAKID,ContractCustomerAKID,PolicyAKID,RiskLocationAKID,PolicyCoverageAKID,StatisticalCoverageAKID,PremiumMasterPremiumType\r\n\thaving SUM(premiummasterfulltermpremium)=0) B\r\n\ton A.AgencyAKID=B.AgencyAKID\r\n\tand A.ContractCustomerAKID=B.ContractCustomerAKID\r\n\tand A.PolicyAKID=B.PolicyAKID\r\n\tand A.RiskLocationAKID=B.RiskLocationAKID\r\n\tand A.PolicyCoverageAKID=B.PolicyCoverageAKID\r\n\tand A.StatisticalCoverageAKID=B.StatisticalCoverageAKID\r\n\tand A.PremiumMasterPremiumType=B.PremiumMasterPremiumType\r\n\tWHERE  A.PremiumMasterFullTermPremium <> 0.0\r\n\tAND premiummasterrundate<=@Date2\r\n\tand convert(varchar(6),case when B.ChangedCoverageExpirationDate is null then A.PremiumMasterCoverageExpirationDate else B.ChangedCoverageExpirationDate end,112)>=convert(varchar(6),@Date2,112)\r\n\tAND  A.CurrentSnapshotFlag=1 \r\n\tAND A.SourceSystemID='PMS'\r\n\t@{pipeline().parameters.REASON_AMENDED_CODE}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\r\n\tORDER BY A.PolicyAKID,A.RiskLocationAKID,A.PolicyCoverageAKID,A.StatisticalCoverageAKID,\r\n\tA.PremiumMasterCoverageEffectiveDate,A.PremiumMasterRunDate  desc\n),\nEXP_DirectTransactions AS (\n\tSELECT\n\teff_from_date,\n\tAgencyAKID AS agency_ak_id,\n\tPolicyAKID AS pol_ak_id,\n\tContractCustomerAKID AS contract_cust_ak_id,\n\tPolicyKey AS pol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tPremiumMasterTypeBureauCode AS TypeBureauCode,\n\tStatisticalCoverageAKID,\n\tPremiumMasterCoverageEffectiveDate AS StatisticalCoverageEffectiveDate,\n\tPremiumMasterCoverageExpirationDate AS StatisticalCoverageExpirationDate,\n\tChangedCoverageExpirationDate,\n\tPremiumMasterAgencyCommissionRate AS AgencyActualCommissionRate,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tPremiumMasterTransactionCode AS PremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumMasterCoverageEffectiveDate AS PremiumTransactionEffectiveDate,\n\tPremiumMasterCoverageExpirationDate AS PremiumTransactionExpirationDate,\n\tPremiumMasterRunDate AS PremiumTransactionBookedDate,\n\tPremiumMasterPremium AS PremiumTransactionAmount,\n\tPremiumMasterFullTermPremium AS FullTermPremium,\n\tPremiumMasterPremiumType AS PremiumType,\n\tPremiumMasterReasonAmendedCode AS ReasonAmendedCode,\n\t-- *INF*: LAST_DAY(Add_To_Date(eff_from_date, 'MS', -Get_Date_Part(eff_from_date, 'MS')))\r\n\t-- \r\n\t-- --LAST_DAY(eff_from_date)\n\tLAST_DAY(DATEADD(MS,- DATE_PART(eff_from_date, 'MS'),eff_from_date)) AS V_Last_Day_of_Last_Month,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART( V_Last_Day_of_Last_Month, 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\n\tDATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(HOUR,23-DATE_PART(HOUR,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(HOUR,23-DATE_PART(HOUR,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month))) AS V_RunDate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tV_RunDate AS RunDate,\n\t-- *INF*: LAST_DAY(ADD_TO_DATE(V_RunDate,'MM',-1))\n\tLAST_DAY(DATEADD(MONTH,- 1,V_RunDate)) AS v_PreviousMonthsRunDate,\n\tv_PreviousMonthsRunDate AS PreviousMonthsRunDate,\n\t-- *INF*: SET_DATE_PART(\r\n\t--                         SET_DATE_PART(\r\n\t--                                       SET_DATE_PART(\r\n\t--                                                 SET_DATE_PART( V_Last_Day_of_Last_Month, 'DD', 1 )\r\n\t--                                            ,'HH',0),\r\n\t--                           'MI',0),\r\n\t-- 'SS',0)\r\n\t-- \r\n\t-- ---- Changing the RunDate to FirstDay of the Run Month \n\tDATEADD(SECOND,0-DATE_PART(SECOND,DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month))),DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)))),DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month))),DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)),DATEADD(DAY,1-DATE_PART(DAY,V_Last_Day_of_Last_Month),V_Last_Day_of_Last_Month)))) AS v_FirstDayOfRunMonth,\n\tv_FirstDayOfRunMonth AS FirstDayOfRunMonth,\n\t-- *INF*: DATE_DIFF(V_RunDate,IIF(in(PremiumTransactionCode,'14','24'),TO_DATE('1800/01/01','YYYY/MM/DD'),PremiumTransactionBookedDate),'MM')\n\tDATEDIFF(MONTH,V_RunDate,\n\t    IFF(\n\t        PremiumTransactionCode IN ('14','24'), TO_TIMESTAMP('1800/01/01', 'YYYY/MM/DD'),\n\t        PremiumTransactionBookedDate\n\t    )) AS LatestRecordMonth,\n\t-- *INF*: IIF(PremiumTransactionCode='29',1,0)\n\tIFF(PremiumTransactionCode = '29', 1, 0) AS CancellationSubjectedToAuditFlag\n\tFROM SQ_PremiumMasterCalculation_PMS\n),\nFIL_SourceRows AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tTypeBureauCode, \n\tStatisticalCoverageAKID, \n\tChangedCoverageExpirationDate, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tPremiumTransactionCode, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tReasonAmendedCode, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRunDate, \n\tFirstDayOfRunMonth, \n\tLatestRecordMonth, \n\tCancellationSubjectedToAuditFlag\n\tFROM EXP_DirectTransactions\n\tWHERE IIF(PremiumTransactionEnteredDate <= RunDate AND PremiumTransactionBookedDate <=RunDate\r\nAND PremiumTransactionEffectiveDate <= RunDate AND ChangedCoverageExpirationDate >= FirstDayOfRunMonth ,TRUE,FALSE)\n),\nSRT_OrderBy_LatestCancellation AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tLocationUnitNumber, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tSubLocationUnitNumber, \n\tRiskUnitGroup, \n\tRiskUnitGroupSequenceNumber, \n\tRiskUnit, \n\tRiskUnitSequenceNumber, \n\tMajorPerilCode, \n\tMajorPerilSequenceNumber, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tPremiumTransactionCode, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRunDate, \n\tLatestRecordMonth, \n\tCancellationSubjectedToAuditFlag\n\tFROM FIL_SourceRows\n\tORDER BY agency_ak_id ASC, pol_ak_id ASC, contract_cust_ak_id ASC, RiskLocationAKID ASC, PolicyCoverageAKID ASC, StatisticalCoverageAKID ASC, PremiumTransactionEnteredDate ASC, PremiumType ASC, LatestRecordMonth DESC, CancellationSubjectedToAuditFlag ASC\n),\nAGG_CoverageCancellationDate AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tLocationUnitNumber,\n\tSubLocationUnitNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\t-- *INF*: SUM(PremiumTransactionAmount)\n\tSUM(PremiumTransactionAmount) AS TotalPremiumTransactionAmount,\n\t-- *INF*: SUM(FullTermPremium)\n\tSUM(FullTermPremium) AS TotalFullTermPremium,\n\t-- *INF*: MAX(PremiumTransactionAmount)\n\tMAX(PremiumTransactionAmount) AS Max_Premium,\n\t-- *INF*: MIN(ABS(PremiumTransactionAmount))\n\tMIN(ABS(PremiumTransactionAmount)) AS Min_Premium,\n\t-- *INF*: MAX(PremiumTransactionEffectiveDate)\n\tMAX(PremiumTransactionEffectiveDate) AS StatisticalCoverageCancellationDate,\n\tRunDate,\n\tLatestRecordMonth,\n\t-- *INF*: min(LatestRecordMonth)\n\tmin(LatestRecordMonth) AS CurrentMonthFlag,\n\tCancellationSubjectedToAuditFlag\n\tFROM SRT_OrderBy_LatestCancellation\n\tGROUP BY agency_ak_id, pol_ak_id, contract_cust_ak_id, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, PremiumType\n),\nEXP_Values AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tTotalPremiumTransactionAmount,\n\tTotalFullTermPremium,\n\tStatisticalCoverageCancellationDate,\n\t-- *INF*: IIF(TotalFullTermPremium = 0.0 , StatisticalCoverageCancellationDate, TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS'))\n\tIFF(\n\t    TotalFullTermPremium = 0.0, StatisticalCoverageCancellationDate,\n\t    TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t) AS v_StatisticalCoverageCancellationDate,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(pol_ak_id,StatisticalCoverageAKID,RatingCoverageAKId,RunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.WorkEarnedPremiumCoverageMonthlyID AS v_WorkEarnedPremiumCoverageMonthlyID,\n\tv_StatisticalCoverageCancellationDate AS StatisticalCoverageCancellationDate_Out,\n\t-- *INF*: IIF(v_StatisticalCoverageCancellationDate = TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') OR NOT ISNULL(v_WorkEarnedPremiumCoverageMonthlyID),'FILTER','NOFILTER')\n\tIFF(\n\t    v_StatisticalCoverageCancellationDate = TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t    or v_WorkEarnedPremiumCoverageMonthlyID IS NOT NULL,\n\t    'FILTER',\n\t    'NOFILTER'\n\t) AS Flag,\n\tRunDate,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tMax_Premium,\n\tMin_Premium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(pol_ak_id,StatisticalCoverageAKID,-1)\n\tLKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,iif(LKP_ClassCode='9115',1.00,IIF(LatestRecordMonth=CurrentMonthFlag and CancellationSubjectedToAuditFlag='1',0.0,1.00)))\r\n\t-- \r\n\t-- \r\n\t-- --IIF(ISNULL(:LKP.LKP_POOL_POLICIES(pol_ak_id)) or (not isnull(:LKP.LKP_CLASSCODE_9115(StatisticalCoverageAKID))),1.00,Min_Premium)\n\tIFF(\n\t    LKP_ClassCode IS NULL, 1.00,\n\t    IFF(\n\t        LKP_ClassCode = '9115', 1.00,\n\t        IFF(\n\t            LatestRecordMonth = CurrentMonthFlag\n\t        and CancellationSubjectedToAuditFlag = '1',\n\t            0.0,\n\t            1.00\n\t        )\n\t    )\n\t) AS O_Min_Premium,\n\t-- *INF*: DATE_DIFF(\r\n\t-- v_StatisticalCoverageCancellationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \r\n\t-- \n\tDATEDIFF(DAY,v_StatisticalCoverageCancellationDate,PremiumTransactionEffectiveDate) AS v_Numertor,\n\t-- *INF*: DATE_DIFF(\r\n\t-- PremiumTransactionExpirationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \n\tDATEDIFF(DAY,PremiumTransactionExpirationDate,PremiumTransactionEffectiveDate) AS v_Denominator,\n\t-- *INF*: IIF((v_Numertor  = 0 AND v_Denominator = 0)  OR v_Denominator =  0, TotalPremiumTransactionAmount,\r\n\t-- ROUND(TotalPremiumTransactionAmount * (v_Numertor/v_Denominator),4)\r\n\t-- )\n\tIFF(\n\t    (v_Numertor = 0 AND v_Denominator = 0) OR v_Denominator = 0, TotalPremiumTransactionAmount,\n\t    ROUND(TotalPremiumTransactionAmount * (v_Numertor / v_Denominator), 4)\n\t) AS v_Earned_Premium,\n\tv_Earned_Premium AS Earned_Premium,\n\tPremiumType,\n\tLatestRecordMonth,\n\tCurrentMonthFlag,\n\tPremiumTransactionCode,\n\tCancellationSubjectedToAuditFlag\n\tFROM AGG_CoverageCancellationDate\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.PolicyAKID = pol_ak_id\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RunDate = RunDate\n\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1\n\tON LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.PolicyAkid = pol_ak_id\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.RatingCoverageAKid = - 1\n\n),\nFIL_Active AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tTotalPremiumTransactionAmount, \n\tTotalFullTermPremium, \n\tStatisticalCoverageCancellationDate_Out AS StatisticalCoverageCancellationDate, \n\tFlag, \n\tRunDate, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tSourceSystemID, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tMax_Premium, \n\tO_Min_Premium AS Min_Premium, \n\tEarned_Premium, \n\tPremiumType\n\tFROM EXP_Values\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageMonthly_PMS AS (\n\tINSERT INTO WorkEarnedPremiumCoverageMonthly\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tCreatedDate AS MODIFIEDDATE, \n\tpol_key AS POLICYKEY, \n\tagency_ak_id AS AGENCYAKID, \n\tcontract_cust_ak_id AS CONTRACTCUSTOMERAKID, \n\tpol_ak_id AS POLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tTotalPremiumTransactionAmount AS STATISTICALCOVERAGEPREMIUM, \n\tTotalFullTermPremium AS STATISTICALCOVERAGEFULLTERMPREMIUM, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMin_Premium AS MINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active\n),\nSQ_PremiumMasterCalculation_DCT AS (\n\tDECLARE @FirstDayOfPrevMonth AS DATETIME,\r\n\t        @LastDayOfPrevMonth AS DATETIME\r\n\t        \r\n\tset @FirstDayOfPrevMonth=DATEADD(mm, DATEDIFF(m,0,GETDATE())-@{pipeline().parameters.NO_OF_MONTHS},0)\r\n\tset @LastDayOfPrevMonth=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS}-1),0)) \r\n\t\r\n\t\r\n\tSELECT \r\n\t@LastDayOfPrevMonth AS RunDate,\r\n\tA.PolicyKey, \r\n\tA.AgencyAKID, \r\n\tA.ContractCustomerAKID, \r\n\tA.PolicyAKID,\r\n\tA.RiskLocationAKID, \r\n\tA.PolicyCoverageAKID, \r\n\tA.StatisticalCoverageAKID, \r\n\tA.PremiumMasterCoverageEffectiveDate, \r\n\tA.PremiumMasterCoverageExpirationDate,\r\n\tA.PremiumMasterPremiumType, \r\n\tA.PremiumMasterPremium, \r\n\tA.PremiumMasterFullTermPremium,\r\n\tA.RatingCoverageAKId,\r\n\tA.RatingCoverageEffectiveDate,\r\n\tA.RatingCoverageExpirationDate,\r\n\tC.RatingCoverageCancellationDate\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation A with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage C with (nolock)\r\n\ton C.RatingCoverageAKId=A.RatingCoverageAKId\r\n\tand A.PremiumTransactionEnteredDate between C.EffectiveDate and C.ExpirationDate\r\n\twhere A.CurrentSnapshotFlag=1 AND A.SourceSystemID='DCT'\r\n\tand A.Premiummasterrundate <= @LastDayOfPrevMonth \r\n\tAND A.PremiumMasterCoverageEffectiveDate <= @LastDayOfPrevMonth AND A.PremiumMasterCoverageExpirationDate >= @FirstDayOfPrevMonth\r\n\tAND A.PremiumMasterReasonAmendedCode not in ('CWO','CWB')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\r\n\tORDER BY A.RatingCoverageAKId,A.PremiumMasterCoverageEffectiveDate,A.Premiummasterrundate,A.PremiumTransactionEnteredDate\n),\nAGG_CoverageCancellationDate_DCT AS (\n\tSELECT\n\tRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumMasterCoverageEffectiveDate,\n\tPremiumMasterCoverageExpirationDate,\n\tPremiumMasterPremiumType,\n\tPremiumMasterPremium,\n\tPremiumMasterFullTermPremium,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\t-- *INF*: Min(abs(PremiumMasterPremium))\n\tMin(abs(PremiumMasterPremium)) AS MinimumPremium\n\tFROM SQ_PremiumMasterCalculation_DCT\n\tGROUP BY PolicyAKID, PremiumMasterPremiumType, RatingCoverageAKId\n),\nFIL_NonCancellations AS (\n\tSELECT\n\tRunDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumMasterCoverageEffectiveDate, \n\tPremiumMasterCoverageExpirationDate, \n\tPremiumMasterPremiumType, \n\tPremiumMasterPremium, \n\tPremiumMasterFullTermPremium, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate, \n\tMinimumPremium\n\tFROM AGG_CoverageCancellationDate_DCT\n\tWHERE RatingCoverageCancellationDate<TO_DATE('21001231','YYYYMMDD')\n),\nLKP_PremiumTransaction AS (\n\tSELECT\n\tPremiumTransactionExpirationDate,\n\tPolicyAkid,\n\tRatingCoverageAKId\n\tFROM (\n\t\tDECLARE @FirstDayOfPrevMonth AS DATETIME,\r\n\t\t        @LastDayOfPrevMonth AS DATETIME\r\n\t\t        \r\n\t\tset @FirstDayOfPrevMonth=DATEADD(mm, DATEDIFF(m,0,GETDATE())-@{pipeline().parameters.NO_OF_MONTHS},0)\r\n\t\tset @LastDayOfPrevMonth=DATEADD(SS,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-(@{pipeline().parameters.NO_OF_MONTHS}-1),0))\r\n\t\t\r\n\t\tSELECT DISTINCT B.PremiumTransactionExpirationDate as PremiumTransactionExpirationDate,\r\n\t\tA.PolicyAkid as PolicyAkid,\r\n\t\tA.RatingCoverageAKId as RatingCoverageAKId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation A with (nolock)\r\n\t\tINNER JOIN\r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction B with (nolock)\r\n\t\ton A.PremiumTransactionAKId=B.PremiumTransactionAKId AND\r\n\t\t       B.PremiumTransactionEnteredDate <=@LastDayOfPrevMonth\r\n\t\tAND B.PremiumTransactionBookedDate <=@LastDayOfPrevMonth\r\n\t\tAND B.PremiumTransactionEffectiveDate <= @LastDayOfPrevMonth\r\n\t\tAND B.PremiumTransactionExpirationDate >= @FirstDayOfPrevMonth\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage C with (nolock)\r\n\t\ton C.RatingCoverageAKId=B.RatingCoverageAKId\r\n\t\tand C.EffectiveDate=B.EffectiveDate\r\n\t\tand C.RatingCoverageCancellationDate='2100-12-31 23:59:59'\r\n\t\twhere B.CurrentSnapshotFlag=1 AND B.SourceSystemID='DCT'\r\n\t\tORDER BY A.RatingCoverageAKId,B.PremiumTransactionExpirationDate\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAkid,RatingCoverageAKId,PremiumTransactionExpirationDate ORDER BY PremiumTransactionExpirationDate) = 1\n),\nEXP_ValidateAfterCancellationExpires AS (\n\tSELECT\n\tFIL_NonCancellations.RunDate,\n\tFIL_NonCancellations.PolicyKey,\n\tFIL_NonCancellations.AgencyAKID,\n\tFIL_NonCancellations.ContractCustomerAKID,\n\tFIL_NonCancellations.PolicyAKID,\n\tFIL_NonCancellations.RiskLocationAKID,\n\tFIL_NonCancellations.PolicyCoverageAKID,\n\tFIL_NonCancellations.StatisticalCoverageAKID,\n\tFIL_NonCancellations.PremiumMasterCoverageEffectiveDate,\n\tFIL_NonCancellations.PremiumMasterCoverageExpirationDate,\n\tFIL_NonCancellations.PremiumMasterPremiumType,\n\tFIL_NonCancellations.PremiumMasterPremium,\n\tFIL_NonCancellations.PremiumMasterFullTermPremium,\n\tFIL_NonCancellations.RatingCoverageAKId,\n\tFIL_NonCancellations.RatingCoverageEffectiveDate,\n\tFIL_NonCancellations.RatingCoverageExpirationDate,\n\tFIL_NonCancellations.RatingCoverageCancellationDate,\n\tFIL_NonCancellations.MinimumPremium,\n\tLKP_PremiumTransaction.PremiumTransactionExpirationDate AS LKP_PremiumTransactionExpirationDate,\n\tLKP_PremiumTransaction.RatingCoverageAKId AS LKP_RatingCoverageAKId,\n\tLKP_PremiumTransaction.PolicyAkid AS LKP_PolicyAkid,\n\t-- *INF*: --:LKP.LKP_PREMIUMTRANSACTION(PolicyAKID,RatingCoverageAKId, PremiumMasterCoverageExpirationDate)\n\t'' AS v_RatingCoverageAKId,\n\t-- *INF*: IIF(PremiumMasterCoverageExpirationDate>RunDate, NULL, LKP_RatingCoverageAKId)\n\tIFF(PremiumMasterCoverageExpirationDate > RunDate, NULL, LKP_RatingCoverageAKId) AS o_RatingCoverageAKId\n\tFROM FIL_NonCancellations\n\tLEFT JOIN LKP_PremiumTransaction\n\tON LKP_PremiumTransaction.PolicyAkid = FIL_NonCancellations.PolicyAKID AND LKP_PremiumTransaction.RatingCoverageAKId = FIL_NonCancellations.RatingCoverageAKId AND LKP_PremiumTransaction.PremiumTransactionExpirationDate > FIL_NonCancellations.PremiumMasterCoverageEffectiveDate\n),\nFIL_EffectiveCoverageAfterCancellationExpires AS (\n\tSELECT\n\tRunDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumMasterCoverageEffectiveDate, \n\tPremiumMasterCoverageExpirationDate, \n\tPremiumMasterPremiumType, \n\tPremiumMasterPremium, \n\tPremiumMasterFullTermPremium, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate, \n\tMinimumPremium, \n\to_RatingCoverageAKId AS lkp_RatingCoverageAKId\n\tFROM EXP_ValidateAfterCancellationExpires\n\tWHERE ISNULL(lkp_RatingCoverageAKId)\n),\nEXP_Values_DCT AS (\n\tSELECT\n\tRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumMasterCoverageEffectiveDate,\n\tPremiumMasterCoverageExpirationDate,\n\tPremiumMasterPremiumType,\n\tPremiumMasterPremium,\n\tPremiumMasterFullTermPremium,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\tMinimumPremium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(PolicyAKID,-1,RatingCoverageAKId)\n\tLKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,MinimumPremium)\n\tIFF(LKP_ClassCode IS NULL, 1.00, MinimumPremium) AS O_MinimumPremium,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId,RunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.WorkEarnedPremiumCoverageMonthlyID AS v_WorkEarnedPremiumCoverageMonthlyID,\n\t-- *INF*: IIF(NOT ISNULL(v_WorkEarnedPremiumCoverageMonthlyID),'FILTER','NOFILTER')\n\tIFF(v_WorkEarnedPremiumCoverageMonthlyID IS NOT NULL, 'FILTER', 'NOFILTER') AS Flag,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t'DCT' AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM FIL_EffectiveCoverageAfterCancellationExpires\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId\n\tON LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.PolicyAkid = PolicyAKID\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.StatisticalCoverageAKID = - 1\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.RatingCoverageAKid = RatingCoverageAKId\n\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.PolicyAKID = PolicyAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RunDate = RunDate\n\n),\nFIL_Active_DCT AS (\n\tSELECT\n\tFlag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumMasterCoverageEffectiveDate AS StatisticalCoverageEffectiveDate, \n\tPremiumMasterCoverageExpirationDate AS StatisticalCoverageExpirationDate, \n\tRatingCoverageCancellationDate AS StatisticalCoverageCancellationDate, \n\tPremiumMasterPremium AS StatisticalCoveragePremium, \n\tPremiumMasterFullTermPremium AS StatisticalCoverageFullTermPremium, \n\tRunDate, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tO_MinimumPremium AS MinimumPremium, \n\tPremiumMasterPremiumType AS PremiumType\n\tFROM EXP_Values_DCT\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageMonthly_DCT AS (\n\tINSERT INTO WorkEarnedPremiumCoverageMonthly\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\tAGENCYAKID, \n\tCONTRACTCUSTOMERAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tSTATISTICALCOVERAGEPREMIUM, \n\tSTATISTICALCOVERAGEFULLTERMPREMIUM, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active_DCT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LOOKUP_WORK_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "REASON_AMENDED_CODE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataWarehouse/"
        },
        "annotations": []
    }
}