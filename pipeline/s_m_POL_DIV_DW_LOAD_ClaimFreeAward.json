{
    "name": "s_m_POL_DIV_DW_LOAD_ClaimFreeAward",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DIV_DW_LOAD_ClaimFreeAward",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PVACCTHistStage AS (\n\tSELECT\n\t\tPVACCTHistStageID,\n\t\tExtractDate,\n\t\tSourceSyStemID,\n\t\tPvahPolicyNumber,\n\t\tPvahExpYYYY,\n\t\tPvahExpMM,\n\t\tPvahMod,\n\t\tPvahHHPolicyNumber,\n\t\tPvahHHExpYYMM,\n\t\tPvahSymbol,\n\t\tPvahRenewalCode,\n\t\tPvahTerm,\n\t\tPvahPremHome,\n\t\tPvahPremAuto,\n\t\tPvahPremUMB,\n\t\tPvahPremIM,\n\t\tPvahPremAutoBI,\n\t\tPvahPremAutoPD,\n\t\tPvahPremAutoColl,\n\t\tPvahPremAutoComp,\n\t\tPvahCashApplied1,\n\t\tPvahPaymntType1,\n\t\tPvahYYMDApplied1,\n\t\tPvahCashApplied2,\n\t\tPvahPaymntType2,\n\t\tPvahYYMDApplied2,\n\t\tPvahCashApplied3,\n\t\tPvahPaymntType3,\n\t\tPvahYYMDApplied3,\n\t\tPvahCashApplied4,\n\t\tPvahPaymntType4,\n\t\tPvahYYMDApplied4,\n\t\tPvahCashApplied5,\n\t\tPvahPaymntType5,\n\t\tPvahYYMDApplied5,\n\t\tPvahBCMSAcctNumber,\n\t\tPvahBCMSSUBAcctNum,\n\t\tPvahBCMSBillingEntity,\n\t\tPvahBCMSBillingType,\n\t\tPvahBCMSBillingClass,\n\t\tPvahSYS38MaintCD,\n\t\tPvahState,\n\t\tPvahAgency,\n\t\tPvahName,\n\t\tPvahPremDFire\n\tFROM PVACCTHistStage\n\tWHERE PVACCTHistStage.ExtractDate>='@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_GetValues AS (\n\tSELECT\n\tPvahPolicyNumber AS i_PvahPolicyNumber,\n\tPvahMod AS i_PvahMod,\n\tPvahSymbol AS i_PvahSymbol,\n\tPvahCashApplied1 AS i_PvahCashApplied1,\n\tPvahPaymntType1 AS i_PvahPaymntType1,\n\tPvahYYMDApplied1 AS i_PvahYYMDApplied1,\n\tPvahCashApplied2 AS i_PvahCashApplied2,\n\tPvahPaymntType2 AS i_PvahPaymntType2,\n\tPvahYYMDApplied2 AS i_PvahYYMDApplied2,\n\tPvahCashApplied3 AS i_PvahCashApplied3,\n\tPvahPaymntType3 AS i_PvahPaymntType3,\n\tPvahYYMDApplied3 AS i_PvahYYMDApplied3,\n\tPvahCashApplied4 AS i_PvahCashApplied4,\n\tPvahPaymntType4 AS i_PvahPaymntType4,\n\tPvahYYMDApplied4 AS i_PvahYYMDApplied4,\n\tPvahCashApplied5 AS i_PvahCashApplied5,\n\tPvahPaymntType5 AS i_PvahPaymntType5,\n\tPvahYYMDApplied5 AS i_PvahYYMDApplied5,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(RTRIM(i_PvahPolicyNumber)))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(RTRIM(i_PvahPolicyNumber))) AS v_PvahPolicyNumber,\n\t-- *INF*: LPAD(:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(i_PvahMod)),2,'0')\n\tLPAD(:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(i_PvahMod)), 2, '0') AS v_PvahMod,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(RTRIM(i_PvahSymbol)))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(LTRIM(RTRIM(i_PvahSymbol))) AS v_PvahSymbol,\n\tv_PvahSymbol||v_PvahPolicyNumber||v_PvahMod AS o_pol_key,\n\ti_PvahCashApplied1 AS o_PvahCashApplied1,\n\t-- *INF*: LTRIM(RTRIM(i_PvahPaymntType1))\n\tLTRIM(RTRIM(i_PvahPaymntType1)) AS o_PvahPaymntType1,\n\t-- *INF*: TO_CHAR(i_PvahYYMDApplied1)\n\tTO_CHAR(i_PvahYYMDApplied1) AS o_PvahYYMDApplied1,\n\ti_PvahCashApplied2 AS o_PvahCashApplied2,\n\t-- *INF*: LTRIM(RTRIM(i_PvahPaymntType2))\n\tLTRIM(RTRIM(i_PvahPaymntType2)) AS o_PvahPaymntType2,\n\t-- *INF*: TO_CHAR(i_PvahYYMDApplied2)\n\tTO_CHAR(i_PvahYYMDApplied2) AS o_PvahYYMDApplied2,\n\ti_PvahCashApplied3 AS o_PvahCashApplied3,\n\t-- *INF*: LTRIM(RTRIM(i_PvahPaymntType3))\n\tLTRIM(RTRIM(i_PvahPaymntType3)) AS o_PvahPaymntType3,\n\t-- *INF*: TO_CHAR(i_PvahYYMDApplied3)\n\tTO_CHAR(i_PvahYYMDApplied3) AS o_PvahYYMDApplied3,\n\ti_PvahCashApplied4 AS o_PvahCashApplied4,\n\t-- *INF*: LTRIM(RTRIM(i_PvahPaymntType4))\n\tLTRIM(RTRIM(i_PvahPaymntType4)) AS o_PvahPaymntType4,\n\t-- *INF*: TO_CHAR(i_PvahYYMDApplied4)\n\tTO_CHAR(i_PvahYYMDApplied4) AS o_PvahYYMDApplied4,\n\ti_PvahCashApplied5 AS o_PvahCashApplied5,\n\t-- *INF*: LTRIM(RTRIM(i_PvahPaymntType5))\n\tLTRIM(RTRIM(i_PvahPaymntType5)) AS o_PvahPaymntType5,\n\t-- *INF*: TO_CHAR(i_PvahYYMDApplied5)\n\tTO_CHAR(i_PvahYYMDApplied5) AS o_PvahYYMDApplied5\n\tFROM SQ_PVACCTHistStage\n),\nLKP_policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag=1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PVACCTHistStage\r\n\t\twhere LTRIM(RTRIM(PVACCTHistStage.PvahSymbol))=policy.pol_sym\r\n\t\tand LTRIM(RTRIM(PVACCTHistStage.PvahPolicyNumber))=policy.pol_num)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nEXP_UpdateInvalid AS (\n\tSELECT\n\tLKP_policy.pol_ak_id AS i_pol_ak_id,\n\tEXP_GetValues.o_PvahCashApplied1 AS i_PvahCashApplied1,\n\tEXP_GetValues.o_PvahPaymntType1 AS i_PvahPaymntType1,\n\tEXP_GetValues.o_PvahYYMDApplied1 AS i_PvahYYMDApplied1,\n\tEXP_GetValues.o_PvahCashApplied2 AS i_PvahCashApplied2,\n\tEXP_GetValues.o_PvahPaymntType2 AS i_PvahPaymntType2,\n\tEXP_GetValues.o_PvahYYMDApplied2 AS i_PvahYYMDApplied2,\n\tEXP_GetValues.o_PvahCashApplied3 AS i_PvahCashApplied3,\n\tEXP_GetValues.o_PvahPaymntType3 AS i_PvahPaymntType3,\n\tEXP_GetValues.o_PvahYYMDApplied3 AS i_PvahYYMDApplied3,\n\tEXP_GetValues.o_PvahCashApplied4 AS i_PvahCashApplied4,\n\tEXP_GetValues.o_PvahPaymntType4 AS i_PvahPaymntType4,\n\tEXP_GetValues.o_PvahYYMDApplied4 AS i_PvahYYMDApplied4,\n\tEXP_GetValues.o_PvahCashApplied5 AS i_PvahCashApplied5,\n\tEXP_GetValues.o_PvahPaymntType5 AS i_PvahPaymntType5,\n\tEXP_GetValues.o_PvahYYMDApplied5 AS i_PvahYYMDApplied5,\n\ti_PvahCashApplied1 AS v_PvahCashApplied1,\n\ti_PvahPaymntType1 AS v_PvahPaymntType1,\n\ti_PvahYYMDApplied1 AS v_PvahYYMDApplied1,\n\t-- *INF*: IIF(v_PvahCashApplied1=0 and v_PvahYYMDApplied1='0' and v_PvahPaymntType1='',0,i_PvahCashApplied2)\n\tIFF(v_PvahCashApplied1 = 0 AND v_PvahYYMDApplied1 = '0' AND v_PvahPaymntType1 = '', 0, i_PvahCashApplied2) AS v_PvahCashApplied2,\n\t-- *INF*: IIF(v_PvahCashApplied1=0 and v_PvahYYMDApplied1='0' and v_PvahPaymntType1='','',i_PvahPaymntType2)\n\tIFF(v_PvahCashApplied1 = 0 AND v_PvahYYMDApplied1 = '0' AND v_PvahPaymntType1 = '', '', i_PvahPaymntType2) AS v_PvahPaymntType2,\n\t-- *INF*: IIF(v_PvahCashApplied1=0 and v_PvahYYMDApplied1='0' and v_PvahPaymntType1='','0',i_PvahYYMDApplied2)\n\tIFF(v_PvahCashApplied1 = 0 AND v_PvahYYMDApplied1 = '0' AND v_PvahPaymntType1 = '', '0', i_PvahYYMDApplied2) AS v_PvahYYMDApplied2,\n\t-- *INF*: IIF(v_PvahCashApplied2=0 and v_PvahYYMDApplied2='0' and RTRIM(v_PvahPaymntType2)='',0,i_PvahCashApplied3)\n\tIFF(v_PvahCashApplied2 = 0 AND v_PvahYYMDApplied2 = '0' AND RTRIM(v_PvahPaymntType2) = '', 0, i_PvahCashApplied3) AS v_PvahCashApplied3,\n\t-- *INF*: IIF(v_PvahCashApplied2=0 and v_PvahYYMDApplied2='0' and RTRIM(v_PvahPaymntType2)='','',i_PvahPaymntType3)\n\tIFF(v_PvahCashApplied2 = 0 AND v_PvahYYMDApplied2 = '0' AND RTRIM(v_PvahPaymntType2) = '', '', i_PvahPaymntType3) AS v_PvahPaymntType3,\n\t-- *INF*: IIF(v_PvahCashApplied2=0 and v_PvahYYMDApplied2='0' and RTRIM(v_PvahPaymntType2)='','0',i_PvahYYMDApplied3)\n\tIFF(v_PvahCashApplied2 = 0 AND v_PvahYYMDApplied2 = '0' AND RTRIM(v_PvahPaymntType2) = '', '0', i_PvahYYMDApplied3) AS v_PvahYYMDApplied3,\n\t-- *INF*: IIF(v_PvahCashApplied3=0 and v_PvahYYMDApplied3='0' and RTRIM(v_PvahPaymntType3)='',0,i_PvahCashApplied4)\n\tIFF(v_PvahCashApplied3 = 0 AND v_PvahYYMDApplied3 = '0' AND RTRIM(v_PvahPaymntType3) = '', 0, i_PvahCashApplied4) AS v_PvahCashApplied4,\n\t-- *INF*: IIF(v_PvahCashApplied3=0 and v_PvahYYMDApplied3='0' and RTRIM(v_PvahPaymntType3)='','',i_PvahPaymntType4)\n\tIFF(v_PvahCashApplied3 = 0 AND v_PvahYYMDApplied3 = '0' AND RTRIM(v_PvahPaymntType3) = '', '', i_PvahPaymntType4) AS v_PvahPaymntType4,\n\t-- *INF*: IIF(v_PvahCashApplied3=0 and v_PvahYYMDApplied3='0' and RTRIM(v_PvahPaymntType3)='','0',i_PvahYYMDApplied4)\n\tIFF(v_PvahCashApplied3 = 0 AND v_PvahYYMDApplied3 = '0' AND RTRIM(v_PvahPaymntType3) = '', '0', i_PvahYYMDApplied4) AS v_PvahYYMDApplied4,\n\t-- *INF*: IIF(v_PvahCashApplied4=0 and v_PvahYYMDApplied4='0' and RTRIM(v_PvahPaymntType4)='',0,i_PvahCashApplied5)\n\tIFF(v_PvahCashApplied4 = 0 AND v_PvahYYMDApplied4 = '0' AND RTRIM(v_PvahPaymntType4) = '', 0, i_PvahCashApplied5) AS v_PvahCashApplied5,\n\t-- *INF*: IIF(v_PvahCashApplied4=0 and v_PvahYYMDApplied4='0' and RTRIM(v_PvahPaymntType4)='','',i_PvahPaymntType5)\n\tIFF(v_PvahCashApplied4 = 0 AND v_PvahYYMDApplied4 = '0' AND RTRIM(v_PvahPaymntType4) = '', '', i_PvahPaymntType5) AS v_PvahPaymntType5,\n\t-- *INF*: IIF(v_PvahCashApplied4=0 and v_PvahYYMDApplied4='0' and RTRIM(v_PvahPaymntType4)='','0',i_PvahYYMDApplied5)\n\tIFF(v_PvahCashApplied4 = 0 AND v_PvahYYMDApplied4 = '0' AND RTRIM(v_PvahPaymntType4) = '', '0', i_PvahYYMDApplied5) AS v_PvahYYMDApplied5,\n\t-- *INF*: IIF(ISNULL(i_pol_ak_id),-1,i_pol_ak_id)\n\tIFF(i_pol_ak_id IS NULL, - 1, i_pol_ak_id) AS o_pol_ak_id,\n\tv_PvahCashApplied1 AS o_PvahCashApplied1,\n\tv_PvahPaymntType1 AS o_PvahPaymntType1,\n\tv_PvahYYMDApplied1 AS o_PvahYYMDApplied1,\n\tv_PvahCashApplied2 AS o_PvahCashApplied2,\n\tv_PvahPaymntType2 AS o_PvahPaymntType2,\n\tv_PvahYYMDApplied2 AS o_PvahYYMDApplied2,\n\tv_PvahCashApplied3 AS o_PvahCashApplied3,\n\tv_PvahPaymntType3 AS o_PvahPaymntType3,\n\tv_PvahYYMDApplied3 AS o_PvahYYMDApplied3,\n\tv_PvahCashApplied4 AS o_PvahCashApplied4,\n\tv_PvahPaymntType4 AS o_PvahPaymntType4,\n\tv_PvahYYMDApplied4 AS o_PvahYYMDApplied4,\n\tv_PvahCashApplied5 AS o_PvahCashApplied5,\n\tv_PvahPaymntType5 AS o_PvahPaymntType5,\n\tv_PvahYYMDApplied5 AS o_PvahYYMDApplied5\n\tFROM EXP_GetValues\n\tLEFT JOIN LKP_policy\n\tON LKP_policy.pol_key = EXP_GetValues.o_pol_key\n),\nNRM_TRANS AS (\n),\nFIL_RemoveInvalid AS (\n\tSELECT\n\tpol_ak_id, \n\tPvahCashApplied, \n\tPvahPaymntType, \n\tPvahYYMDApplied\n\tFROM NRM_TRANS\n\tWHERE PvahCashApplied>0 and PvahYYMDApplied>'0' and RTRIM(PvahPaymntType)>'' and IIF(IS_DATE(PvahYYMDApplied,'YYYYMMDD'),PvahYYMDApplied,'0')>='20010101'\r\nand pol_ak_id<>-1\n),\nAGG_SUM AS (\n\tSELECT\n\tpol_ak_id,\n\tPvahCashApplied,\n\t-- *INF*: ROUND(SUM(PvahCashApplied),2)\n\tROUND(SUM(PvahCashApplied), 2) AS sum_PvahCashApplied,\n\tPvahPaymntType,\n\tPvahYYMDApplied\n\tFROM FIL_RemoveInvalid\n\tGROUP BY pol_ak_id, PvahPaymntType, PvahYYMDApplied\n),\nEXP_ClaimFreeAwardType AS (\n\tSELECT\n\tpol_ak_id AS i_pol_ak_id,\n\tsum_PvahCashApplied AS i_PvahCashApplied,\n\tPvahPaymntType AS i_PvahPaymntType,\n\tPvahYYMDApplied AS i_PvahYYMDApplied,\n\ti_pol_ak_id AS o_PolicyAKId,\n\ti_PvahCashApplied AS o_ClaimFreeAwardAmount,\n\t-- *INF*: DECODE(\r\n\t-- i_PvahPaymntType,\r\n\t-- 'L','CLAIM',\r\n\t-- 'P','PREMIUM',\r\n\t-- 'C','CLOSOUT',\r\n\t-- 'M','MOVEPV',\r\n\t-- 'N','GETPV',\r\n\t-- 'Q','LIQ-CHK',\r\n\t-- 'W','LIQ-WOFF',\r\n\t-- 'K','CHECK',\r\n\t-- 'Z','MANUAL-DISB',\r\n\t-- i_PvahPaymntType\r\n\t-- )\n\tDECODE(i_PvahPaymntType,\n\t\t'L', 'CLAIM',\n\t\t'P', 'PREMIUM',\n\t\t'C', 'CLOSOUT',\n\t\t'M', 'MOVEPV',\n\t\t'N', 'GETPV',\n\t\t'Q', 'LIQ-CHK',\n\t\t'W', 'LIQ-WOFF',\n\t\t'K', 'CHECK',\n\t\t'Z', 'MANUAL-DISB',\n\t\ti_PvahPaymntType) AS o_ClaimFreeAwardType,\n\t-- *INF*: TO_DATE( i_PvahYYMDApplied,'YYYYMMDD')\n\tTO_DATE(i_PvahYYMDApplied, 'YYYYMMDD') AS o_ClaimFreeAwardTransactionEnteredDate\n\tFROM AGG_SUM\n),\nLKP_ClaimFreeAward AS (\n\tSELECT\n\tClaimFreeAwardID,\n\tClaimFreeAwardAKId,\n\tClaimFreeAwardAmount,\n\tClaimFreeAwardRunDate,\n\tPolicyAKId,\n\tClaimFreeAwardType,\n\tClaimFreeAwardTransactionEnteredDate\n\tFROM (\n\t\tSELECT \n\t\t\tClaimFreeAwardID,\n\t\t\tClaimFreeAwardAKId,\n\t\t\tClaimFreeAwardAmount,\n\t\t\tClaimFreeAwardRunDate,\n\t\t\tPolicyAKId,\n\t\t\tClaimFreeAwardType,\n\t\t\tClaimFreeAwardTransactionEnteredDate\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ClaimFreeAward\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKId,ClaimFreeAwardType,ClaimFreeAwardTransactionEnteredDate ORDER BY ClaimFreeAwardID) = 1\n),\nEXP_ChangeFlag AS (\n\tSELECT\n\tLKP_ClaimFreeAward.ClaimFreeAwardID AS lkp_ClaimFreeAwardID,\n\tLKP_ClaimFreeAward.ClaimFreeAwardAKId AS lkp_ClaimFreeAwardAKId,\n\tLKP_ClaimFreeAward.ClaimFreeAwardAmount AS lkp_ClaimFreeAwardAmount,\n\tLKP_ClaimFreeAward.ClaimFreeAwardRunDate AS lkp_ClaimFreeAwardRunDate,\n\tEXP_ClaimFreeAwardType.o_PolicyAKId AS PolicyAKId,\n\tEXP_ClaimFreeAwardType.o_ClaimFreeAwardAmount AS ClaimFreeAwardAmount,\n\tEXP_ClaimFreeAwardType.o_ClaimFreeAwardType AS ClaimFreeAwardType,\n\tEXP_ClaimFreeAwardType.o_ClaimFreeAwardTransactionEnteredDate AS ClaimFreeAwardTransactionEnteredDate,\n\t-- *INF*: LAST_DAY(ClaimFreeAwardTransactionEnteredDate)\n\tLAST_DAY(ClaimFreeAwardTransactionEnteredDate) AS v_ClaimFreeAwardRunDate,\n\t-- *INF*: IIF(ISNULL(lkp_ClaimFreeAwardAKId),'NEW',IIF(\r\n\t-- ClaimFreeAwardAmount<>lkp_ClaimFreeAwardAmount OR lkp_ClaimFreeAwardRunDate <> v_ClaimFreeAwardRunDate,'UPDATE','NOCHANGE'))\n\tIFF(lkp_ClaimFreeAwardAKId IS NULL, 'NEW', IFF(ClaimFreeAwardAmount <> lkp_ClaimFreeAwardAmount OR lkp_ClaimFreeAwardRunDate <> v_ClaimFreeAwardRunDate, 'UPDATE', 'NOCHANGE')) AS o_Change_Flag,\n\tv_ClaimFreeAwardRunDate AS o_ClaimFreeAwardRunDate,\n\t1 AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 01:00:00', 'YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('1800-01-01 01:00:00', 'YYYY-MM-DD HH24:MI:SS') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS')\n\tTO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate\n\tFROM EXP_ClaimFreeAwardType\n\tLEFT JOIN LKP_ClaimFreeAward\n\tON LKP_ClaimFreeAward.PolicyAKId = EXP_ClaimFreeAwardType.o_PolicyAKId AND LKP_ClaimFreeAward.ClaimFreeAwardType = EXP_ClaimFreeAwardType.o_ClaimFreeAwardType AND LKP_ClaimFreeAward.ClaimFreeAwardTransactionEnteredDate = EXP_ClaimFreeAwardType.o_ClaimFreeAwardTransactionEnteredDate\n),\nRTR_Target AS (\n\tSELECT\n\to_Change_Flag AS Change_Flag,\n\tlkp_ClaimFreeAwardID AS ClaimFreeAwardID,\n\tlkp_ClaimFreeAwardAKId AS ClaimFreeAwardAKId,\n\tPolicyAKId,\n\tClaimFreeAwardAmount,\n\tClaimFreeAwardType,\n\tClaimFreeAwardTransactionEnteredDate,\n\to_ClaimFreeAwardRunDate AS ClaimFreeAwardRunDate,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemId AS SourceSystemId,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate\n\tFROM EXP_ChangeFlag\n),\nRTR_Target_INSERT AS (SELECT * FROM RTR_Target WHERE Change_Flag='NEW'),\nRTR_Target_UPDATE AS (SELECT * FROM RTR_Target WHERE Change_Flag='UPDATE'),\nUPD_UPDATE AS (\n\tSELECT\n\tClaimFreeAwardID, \n\tClaimFreeAwardAmount, \n\tClaimFreeAwardRunDate, \n\tAuditID, \n\tModifiedDate\n\tFROM RTR_Target_UPDATE\n),\nClaimFreeAward_UPDATE AS (\n\tMERGE INTO ClaimFreeAward AS T\n\tUSING UPD_UPDATE AS S\n\tON T.ClaimFreeAwardID = S.ClaimFreeAwardID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditID = S.AuditID, T.ModifiedDate = S.ModifiedDate, T.ClaimFreeAwardAmount = S.ClaimFreeAwardAmount, T.ClaimFreeAwardRunDate = S.ClaimFreeAwardRunDate\n),\nSEQ_ClaimFreeAwardAKId AS (\n\tCREATE SEQUENCE SEQ_ClaimFreeAwardAKId\n\tSTART = 1\n\tINCREMENT = 1;\n),\nClaimFreeAward_INSERT AS (\n\tINSERT INTO ClaimFreeAward\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, ClaimFreeAwardAKId, PolicyAKId, ClaimFreeAwardAmount, ClaimFreeAwardType, ClaimFreeAwardTransactionEnteredDate, ClaimFreeAwardRunDate)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSourceSystemId AS SOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tSEQ_ClaimFreeAwardAKId.NEXTVAL AS CLAIMFREEAWARDAKID, \n\tPOLICYAKID, \n\tCLAIMFREEAWARDAMOUNT, \n\tCLAIMFREEAWARDTYPE, \n\tCLAIMFREEAWARDTRANSACTIONENTEREDDATE, \n\tCLAIMFREEAWARDRUNDATE\n\tFROM RTR_Target_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905520"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604319"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:27:36"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:03:07"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_CLAIM"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}