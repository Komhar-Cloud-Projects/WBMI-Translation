{
    "name": "s_m_POL_DW_LOAD_CoverageDetailCommercialAuto_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CoverageDetailCommercialAuto_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_5NewColumns AS (\n\tSELECT\n\tlkp_result,\n\tClassCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT ClassCode as ClassCode,\r\n\t\tRatingStateCode as RatingStateCode,\r\n\t\tVehicleTypeSize+'@1'\r\n\t\t       +BusinessUseClass+'@2'\r\n\t\t\t   +SecondaryClass+'@3'\r\n\t\t\t   +FleetType+'@4'\r\n\t\t\t   +SecondaryClassGroup+'@5'\r\n\t\t         +RadiusOfOperation+'@6'\r\n\t\t      as lkp_result\r\n\t\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClassificationCommercialAuto\r\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,RatingStateCode ORDER BY lkp_result) = 1\n),\nLKP_CoverageLimit AS (\n\tSELECT\n\tCoverageLimitType,\n\tPremiumTransactionAKID\n\tFROM (\n\t\tSELECT\r\n\t\tCoverageLimit.CoverageLimitType AS CoverageLimitType,\r\n\t\tCLB.PremiumTransactionAKID AS PremiumTransactionAKID\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageLimit\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageLimitBridge CLB\r\n\t\tON CoverageLimit.CoverageLimitID=CLB.CoverageLimitID\r\n\t\tINNER JOIN  dbo.PremiumTransaction PT ON CLB.PremiumTransactionAKID = PT.PremiumTransactionAKID\r\n\t\tAND PT.CreatedDate >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tWHERE CoverageLimit.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tORDER BY PremiumTransactionAKID--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKID ORDER BY CoverageLimitType) = 1\n),\nSQ_DCT_StageTables AS (\n\tSELECT DISTINCT WorkDCTCoverageTransaction.CoverageId,\r\n\t  WorkDCTCoverageTransaction.CoverageGUID id,\r\n\t  DCCARS.Type,\r\n\t  DCCATS.GCW,\r\n\t  DCCATS.GVW,\r\n\t  DCCAVS.RadiusOfOperation,\r\n\t  DCCATS.SecondaryClassCategory,\r\n\t  DCCATS.UsedInDumping,\r\n\t  DCCAVS.Year,\r\n\t  CASE WHEN WorkDCTCoverageTransaction.CoverageType like 'HiredAndBorrowed%' THEN HB.StatedAmountEstimate\r\n\t  ELSE DCCAVS.StatedAmount END AS StatedAmount,\r\n\t  (CASE WHEN DCCARS.Deleted='1' THEN WorkDCTPolicy.TransactionEffectiveDate ELSE '2100-12-31 23:59:59' END) AS VehicleDeleteDate,\r\n\t  DCCAVS.VIN,\r\n\t  DCCAVS.Make,\r\n\t  DCCAVS.Model,\r\n\t  DCCARS.VehicleNumber,\r\n\t DCCALine.CompositeRating,\r\n\t DCCAVS.ZoneTerminal,\r\n\t DCCARS.RegistrationState,\r\n\t DCCASS.SubjectToNoFault,\r\n\t DCCACPS.GuestPIP,\r\n\t WBCASS.PipWorkComp,\r\n\t DCCACPS.CoordinationOfBenefits,\r\n\t WBCARS.TotalVehicleCost,\r\n\t WorkDCTTransactionInsuranceLineLocationBridge.RetroactiveDate,\r\n\t DCCACPS.ExclustionOfWorkLoss,\r\n\t DCCACPS.AdditionalLimit,\r\n\t UMBI.IncludeUIM,\r\n\t  DCCACPS.WorkComp,\r\n\tWBCAPS.MedicalExpenses,\r\n\tWBCASS.AdditionalLimitKS,\r\n\tWBCASS.AdditionalLimitKY,\r\n\tWBCASS.AdditionalLimitMN,\r\n\tDCCAVS.ZoneGaraging,\r\n\tCASE\r\n\t\tWHEN WorkDCTCoverageTransaction.SubCoverageType = 'OTCCoverage' THEN WBCACOS.ReplacementCost\r\n\t\tWHEN WorkDCTCoverageTransaction.SubCoverageType = 'CollisionCoverage' THEN WBCACCS.ReplacementCost\r\n\t\tEND AS ReplacementCost,\r\n\tCASE\r\n\t\tWHEN WorkDCTCoverageTransaction.SubCoverageType = 'OTCCoverage' THEN WBCACOS.FullSafetyGlassCoverage\r\n\t\tWHEN WorkDCTCoverageTransaction.CoverageType = 'DriveOtherCarOTC' THEN DCCACDOCOS.FullGlassIndicator\r\n\t\tEND AS FullGlassIndicator,\r\n\tDCCARS.HistoricVehicle\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTTransactionInsuranceLineLocationBridge\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTCoverageTransaction\r\n\tON\r\n\tWorkDCTCoverageTransaction.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTInsuranceLine\r\n\tON\r\n\tWorkDCTInsuranceLine.LineId=WorkDCTTransactionInsuranceLineLocationBridge.LineId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy\r\n\tON\r\n\tWorkDCTInsuranceLine.PolicyId=WorkDCTPolicy.PolicyId AND WorkDCTInsuranceLine.LineType='CommercialAuto'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCALineStaging DCCALine\r\n\tON \r\n\tWorkDCTTransactionInsuranceLineLocationBridge.LineId=DCCALine.LineId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCARiskStaging DCCARS\r\n\tON \r\n\tWorkDCTCoverageTransaction.ParentCoverageObjectId = DCCARS.CA_RiskId\r\n\t--AND WorkDCTCoverageTransaction.ParentCoverageObjectName='DC_CA_Risk'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCARiskStaging WBCARS\r\n\tON \r\n\tDCCARS.CA_RiskId = WBCARS.CA_RiskId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAVehicleStaging DCCAVS\r\n\tON \r\n\tDCCARS.CA_RiskId = DCCAVS.CA_RiskId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCATruckStaging DCCATS\r\n\tON \r\n\tDCCAVS.CA_VehicleId = DCCATS.CA_VehicleId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging DCCASS\r\n\tON DCCASS.CA_StateId=DCCARS.CA_StateId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging DCCASS_State\r\n\tON WorkDCTCoverageTransaction.ParentCoverageObjectId = DCCASS_State.CA_StateId\r\n\tAND WorkDCTCoverageTransaction.ParentCoverageObjectName='DC_CA_State'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCACoveragePIPStage DCCACPS\r\n\tON DCCACPS.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCAStateStaging WBCASS\r\n\tON WBCASS.CA_StateId=DCCARS.CA_StateId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAHiredAndBorrowStage HB\r\n\tON WorkDCTCoverageTransaction.ParentCoverageObjectId=HB.CA_StateId\r\n\tand WorkDCTCoverageTransaction.ParentCoverageObjectName='DC_CA_State' and HB.Type='riskHiredAndBorrowedPhysicalDamage'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCACoverageUMBIStaging UMBI\r\n\ton UMBI.SessionId=WorkDCTCoverageTransaction.SessionId\r\n\tand UMBI.CoverageId=WorkDCTCoverageTransaction.CoverageId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCACoveragePIPStage WBCAPS\r\n\tON WBCAPS.CACoveragePIPId =  DCCACPS.CA_CoveragePIPId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging DCCOTC\r\n\tON DCCOTC.ObjectId = DCCARS.CA_RiskId and DCCOTC.ObjectName = 'DC_CA_Risk' AND DCCOTC.[Type] = 'OTC'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging DCCCollision\r\n\tON DCCCollision.ObjectId = DCCARS.CA_RiskId and DCCCollision.ObjectName = 'DC_CA_Risk' AND DCCCollision.[Type] = 'Collision'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging DCCDriveOtherCar\r\n\tON DCCDriveOtherCar.ObjectId = DCCASS_State.CA_StateId and DCCDriveOtherCar.ObjectName = 'DC_CA_State' AND DCCDriveOtherCar.[Type] = 'DriveOtherCarOTC'\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCACoverageOTCStage DCCACOS\r\n\tON DCCACOS.CoverageId = DCCOTC.CoverageId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCACoverageOTCStage WBCACOS\r\n\tON WBCACOS.CA_CoverageOTCId = DCCACOS.CA_CoverageOTCId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCACoverageCollisionStaging DCCACCS\r\n\tON DCCACCS.CoverageId = DCCCollision.CoverageId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCACoverageCollisionStage WBCACCS\r\n\tON WBCACCS.CA_CoverageCollisionId = DCCACCS.CA_CoverageCollisionId\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCACoverageDriveOtherCarOTCStage DCCACDOCOS\r\n\tON DCCACDOCOS.CoverageId = DCCDriveOtherCar.CoverageId\r\n\t--INNER JOIN (select * from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction where SourceSystemID ='DCT'  )  WPT\r\n\t--ON WPT. PremiumTransactionStageId= WorkDCTCoverageTransaction.CoverageId\r\n\t@{pipeline().parameters.WHERE_CLAUSE_STAGE}\n),\nEXP_Default AS (\n\tSELECT\n\tCoverageId,\n\tId,\n\tType,\n\tGCW,\n\tGVW,\n\tRadiusOfOperation,\n\tSecondaryClassCategory,\n\tUsedInDumping,\n\tYear,\n\tStatedAmount,\n\tVehicleDeleteDate,\n\tVIN,\n\tMake,\n\tModel,\n\tVehicleNumber,\n\tCompositeRating,\n\tZoneTerminal,\n\tRegistrationState,\n\tSubjectToNoFault,\n\tGuestPIP,\n\tPipWorkComp,\n\tCoordinationOfBenefits,\n\tTotalVehicleCost,\n\tRetroactiveDate,\n\tExclustionOfWorkLoss,\n\tAdditionalLimit,\n\tIncludeUIM,\n\tWorkComp,\n\tMedicalExpenses,\n\t-- *INF*: IIF(ISNULL(CoordinationOfBenefits),'N/A',CoordinationOfBenefits)\n\tIFF(CoordinationOfBenefits IS NULL, 'N/A', CoordinationOfBenefits) AS o_CoordinationOfBenefits,\n\t-- *INF*: IIF(ISNULL(MedicalExpenses),'N/A',MedicalExpenses)\n\tIFF(MedicalExpenses IS NULL, 'N/A', MedicalExpenses) AS o_MedicalExpenses,\n\t-- *INF*: IIF(ISNULL(WorkComp),0,IIF(WorkComp = 'T',1,0))\n\tIFF(WorkComp IS NULL, 0, IFF(\n\t        WorkComp = 'T', 1, 0\n\t    )) AS o_WorkComp,\n\tAdditionalLimitKS,\n\tAdditionalLimitKY,\n\tAdditionalLimitMN,\n\tZoneGaraging,\n\tReplacementCost,\n\t-- *INF*: IIF(ISNULL(ReplacementCost),0,IIF(ReplacementCost = 'T',1,0))\n\tIFF(ReplacementCost IS NULL, 0, IFF(\n\t        ReplacementCost = 'T', 1, 0\n\t    )) AS o_ReplacementCost,\n\tFullGlassIndicator,\n\t-- *INF*: IIF(ISNULL(FullGlassIndicator),0,IIF(FullGlassIndicator = 'T',1,0))\n\tIFF(FullGlassIndicator IS NULL, 0, IFF(\n\t        FullGlassIndicator = 'T', 1, 0\n\t    )) AS o_FullGlassIndicator,\n\tHistoricVehicleIndicator,\n\t-- *INF*: IIF(ISNULL(HistoricVehicleIndicator),0,IIF(HistoricVehicleIndicator= 'T',1,0))\n\tIFF(\n\t    HistoricVehicleIndicator IS NULL, 0,\n\t    IFF(\n\t        HistoricVehicleIndicator = 'T', 1, 0\n\t    )\n\t) AS o_HistoricVehicleIndicator\n\tFROM SQ_DCT_StageTables\n),\nSQ_DCT_ILTables AS (\n\tSELECT PT.PremiumTransactionID, PT.PremiumTransactionAKID, RC.ClassCode, PT.PremiumTransactionEffectiveDate, \r\n\tRL.StateProvinceCode, WPT.PremiumTransactionStageId \r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransaction WPT \r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.Premiumtransaction PT ON PT.PremiumTransactionAKID = WPT.PremiumTransactionAKID \r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.Ratingcoverage RC ON RC.RatingCoverageAKID = PT.RatingCoverageAKID AND RC.Effectivedate = PT.Effectivedate \r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.Policycoverage PC ON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID AND PC.Currentsnapshotflag =1 \r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL ON RL.RiskLocationAKID = PC.RiskLocationAKID AND RL.Currentsnapshotflag =1 \r\n\tWHERE  PT.Sourcesystemid = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND WPT.Sourcesystemid = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tAND PC.InsuranceLine = 'CommercialAuto'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IL}\n),\nJNR_IL_Stage AS (SELECT\n\tEXP_Default.CoverageId, \n\tEXP_Default.Id, \n\tEXP_Default.Type, \n\tEXP_Default.GCW, \n\tEXP_Default.GVW, \n\tEXP_Default.RadiusOfOperation, \n\tEXP_Default.SecondaryClassCategory, \n\tEXP_Default.UsedInDumping, \n\tEXP_Default.Year, \n\tEXP_Default.StatedAmount, \n\tEXP_Default.VehicleDeleteDate, \n\tEXP_Default.VIN, \n\tEXP_Default.Make, \n\tEXP_Default.Model, \n\tEXP_Default.VehicleNumber, \n\tEXP_Default.CompositeRating, \n\tEXP_Default.ZoneTerminal, \n\tEXP_Default.RegistrationState, \n\tEXP_Default.SubjectToNoFault, \n\tEXP_Default.GuestPIP, \n\tEXP_Default.PipWorkComp, \n\tEXP_Default.o_CoordinationOfBenefits AS CoordinationOfBenefits, \n\tEXP_Default.TotalVehicleCost, \n\tEXP_Default.RetroactiveDate, \n\tEXP_Default.ExclustionOfWorkLoss, \n\tEXP_Default.AdditionalLimit, \n\tEXP_Default.IncludeUIM, \n\tSQ_DCT_ILTables.PremiumTransactionID, \n\tSQ_DCT_ILTables.PremiumTransactionAKID, \n\tSQ_DCT_ILTables.ClassCode, \n\tSQ_DCT_ILTables.PremiumTransactionEffectiveDate, \n\tSQ_DCT_ILTables.StateProvinceCode, \n\tSQ_DCT_ILTables.PremiumTransactionStageId, \n\tEXP_Default.o_MedicalExpenses AS MedicalExpenses, \n\tEXP_Default.o_WorkComp AS WorkComp, \n\tEXP_Default.AdditionalLimitKS, \n\tEXP_Default.AdditionalLimitKY, \n\tEXP_Default.AdditionalLimitMN, \n\tEXP_Default.ZoneGaraging, \n\tEXP_Default.o_ReplacementCost AS ReplacementCost, \n\tEXP_Default.o_FullGlassIndicator AS FullGlassIndicator, \n\tEXP_Default.o_HistoricVehicleIndicator AS HistoricVehicleIndicator\n\tFROM EXP_Default\n\tINNER JOIN SQ_DCT_ILTables\n\tON SQ_DCT_ILTables.PremiumTransactionStageId = EXP_Default.CoverageId\n),\nEXP_MetaData AS (\n\tSELECT\n\tPremiumTransactionID AS i_PremiumTransactionID,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tType AS i_Type,\n\tGCW AS i_GCW,\n\tGVW AS i_GVW,\n\tRadiusOfOperation AS i_RadiusOfOperation,\n\tSecondaryClassCategory AS i_SecondaryClassCategory,\n\tUsedInDumping AS i_UsedInDumping,\n\tId AS i_Id,\n\tYear AS i_Year,\n\tStatedAmount AS i_StatedAmount,\n\tVehicleDeleteDate,\n\tVIN AS i_VIN,\n\tMake AS i_Make,\n\tModel AS i_Model,\n\tVehicleNumber AS i_VehicleNumber,\n\tCompositeRating AS i_CompositeRating,\n\tZoneTerminal AS i_ZoneTerminal,\n\tRegistrationState AS i_RegistrationState,\n\tSubjectToNoFault AS i_SubjectToNoFault,\n\tGuestPIP AS i_GuestPIP,\n\tPipWorkComp AS i_PipWorkComp,\n\tCoordinationOfBenefits AS i_CoordinationOfBenefits,\n\tTotalVehicleCost AS i_TotalVehicleCost,\n\tAdditionalLimitKS AS i_AdditionalLimitKS,\n\tAdditionalLimitKY AS i_AdditionalLimitKY,\n\tAdditionalLimitMN AS i_AdditionalLimitMN,\n\tZoneGaraging AS i_ZoneGaraging,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_RegistrationState)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_RegistrationState) AS v_RegistrationState,\n\t-- *INF*: DECODE(i_SubjectToNoFault,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_SubjectToNoFault,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS v_SubjectToNoFault,\n\t-- *INF*: DECODE(i_GuestPIP,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_GuestPIP,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS v_GuestPIP,\n\t-- *INF*: DECODE(i_PipWorkComp,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_PipWorkComp,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS v_PipWorkComp,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_CoordinationOfBenefits)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_CoordinationOfBenefits) AS v_CoordinationOfBenefits,\n\t-- *INF*: :LKP.LKP_COVERAGELIMIT(i_PremiumTransactionAKID)\n\tLKP_COVERAGELIMIT_i_PremiumTransactionAKID.CoverageLimitType AS v_CoverageLimitType,\n\tClassCode AS i_ClassCode,\n\tPremiumTransactionEffectiveDate AS i_PTExpDate,\n\tStateProvinceCode AS i_RSC,\n\tRetroactiveDate AS i_RetroactiveDate,\n\tExclustionOfWorkLoss AS i_ExclustionOfWorkLoss,\n\t-- *INF*: IIF(ISNULL(i_ExclustionOfWorkLoss) OR i_ExclustionOfWorkLoss='-1' OR i_ExclustionOfWorkLoss='0' OR i_ExclustionOfWorkLoss='n/a','N/A', ltrim(rtrim(i_ExclustionOfWorkLoss)))\r\n\t-- \r\n\t-- --IIF(ISNULL(i_ExclustionOfWorkLoss) OR i_ExclustionOfWorkLoss='-1','N/A', ltrim(rtrim(i_ExclustionOfWorkLoss)))\n\tIFF(\n\t    i_ExclustionOfWorkLoss IS NULL\n\t    or i_ExclustionOfWorkLoss = '-1'\n\t    or i_ExclustionOfWorkLoss = '0'\n\t    or i_ExclustionOfWorkLoss = 'n/a',\n\t    'N/A',\n\t    ltrim(rtrim(i_ExclustionOfWorkLoss))\n\t) AS v_ExclustionOfWorkLoss,\n\tAdditionalLimit AS i_AdditionalLimit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_AdditionalLimit),'0',\r\n\t-- i_AdditionalLimit='F','0',\r\n\t-- i_AdditionalLimit='N','0',\r\n\t-- i_AdditionalLimit='0','0',\r\n\t-- '1')\r\n\t-- \r\n\t-- \r\n\t-- -- think of all the goofy ways Informatica handles bit types and try to translate them.\n\tDECODE(\n\t    TRUE,\n\t    i_AdditionalLimit IS NULL, '0',\n\t    i_AdditionalLimit = 'F', '0',\n\t    i_AdditionalLimit = 'N', '0',\n\t    i_AdditionalLimit = '0', '0',\n\t    '1'\n\t) AS v_AdditionalLimit,\n\tIncludeUIM AS i_IncludeUIM,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_IncludeUIM),'N/A',\r\n\t-- i_IncludeUIM='F','0',\r\n\t-- i_IncludeUIM='N','0',\r\n\t-- i_IncludeUIM='0','0',\r\n\t-- '1')\n\tDECODE(\n\t    TRUE,\n\t    i_IncludeUIM IS NULL, 'N/A',\n\t    i_IncludeUIM = 'F', '0',\n\t    i_IncludeUIM = 'N', '0',\n\t    i_IncludeUIM = '0', '0',\n\t    '1'\n\t) AS v_IncludeUIM,\n\t-- *INF*: DECODE(true,\r\n\t-- NOT ISNULL(:LKP.LKP_5NewColumns(i_ClassCode,i_RSC)),:LKP.LKP_5NewColumns(i_ClassCode,i_RSC),\r\n\t-- NOT ISNULL(:LKP.LKP_5NewColumns(i_ClassCode,'99')),:LKP.LKP_5NewColumns(i_ClassCode,'99'),\r\n\t-- 'N/A')\n\tDECODE(\n\t    true,\n\t    LKP_5NEWCOLUMNS_i_ClassCode_i_RSC.lkp_result IS NOT NULL, LKP_5NEWCOLUMNS_i_ClassCode_i_RSC.lkp_result,\n\t    LKP_5NEWCOLUMNS_i_ClassCode_99.lkp_result IS NOT NULL, LKP_5NEWCOLUMNS_i_ClassCode_99.lkp_result,\n\t    'N/A'\n\t) AS v_lkp_result,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- in(v_CoverageLimitType,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') and v_AdditionalLimit = '0','PersonalInjuryProtectionBasicLimit',\r\n\t-- \r\n\t-- in(v_CoverageLimitType,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') and v_AdditionalLimit = '1','PersonalInjuryProtectionExcessLimit',\r\n\t-- \r\n\t-- v_CoverageLimitType)\r\n\t-- \r\n\t-- \r\n\t-- -- Because CoverageLimitType of basic and excess are almost always created even if they aren't actually selected use the AdditionalLimit indicator as the rule whether excess or basic was selected  and only for cases where Basic or Excess are returned\n\tDECODE(\n\t    TRUE,\n\t    v_CoverageLimitType IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') and v_AdditionalLimit = '0', 'PersonalInjuryProtectionBasicLimit',\n\t    v_CoverageLimitType IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') and v_AdditionalLimit = '1', 'PersonalInjuryProtectionExcessLimit',\n\t    v_CoverageLimitType\n\t) AS v_CoverageLimitType_Alt,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: RTRIM(LTRIM(i_Type))\n\tRTRIM(LTRIM(i_Type)) AS o_Type,\n\t-- *INF*: IIF(ISNULL(i_GCW),0,i_GCW)\n\tIFF(i_GCW IS NULL, 0, i_GCW) AS o_GCW,\n\t-- *INF*: IIF(ISNULL(i_GVW),0,i_GVW)\n\tIFF(i_GVW IS NULL, 0, i_GVW) AS o_GVW,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@5')+2,instr(v_lkp_result,'@6')-instr(v_lkp_result,'@5')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@5') + 2, REGEXP_INSTR(v_lkp_result, '@6') - REGEXP_INSTR(v_lkp_result, '@5') - 2) AS o_RadiusOfOperation,\n\t-- *INF*: IIF(NOT ISNULL(i_SecondaryClassCategory), RTRIM(LTRIM(i_SecondaryClassCategory)), 'N/A')\n\tIFF(i_SecondaryClassCategory IS NOT NULL, RTRIM(LTRIM(i_SecondaryClassCategory)), 'N/A') AS o_SecondaryClassCategory,\n\t-- *INF*: DECODE(i_UsedInDumping,'T',1,0)\n\tDECODE(\n\t    i_UsedInDumping,\n\t    'T', 1,\n\t    0\n\t) AS o_UsedInDumping,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_Id)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_Id) AS o_CoverageGuid,\n\t-- *INF*: IIF(ISNULL(i_VIN), 'N/A', i_VIN)\n\tIFF(i_VIN IS NULL, 'N/A', i_VIN) AS o_VIN,\n\t-- *INF*: IIF(ISNULL(i_Make), 'N/A', i_Make)\n\tIFF(i_Make IS NULL, 'N/A', i_Make) AS o_Make,\n\t-- *INF*: IIF(ISNULL(i_Model), 'N/A', i_Model)\n\tIFF(i_Model IS NULL, 'N/A', i_Model) AS o_Model,\n\t-- *INF*: IIF(ISNULL(i_VehicleNumber), 0, i_VehicleNumber)\n\tIFF(i_VehicleNumber IS NULL, 0, i_VehicleNumber) AS o_VehicleNumber,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CompositeRating),0,\r\n\t-- i_CompositeRating='T',1,\r\n\t-- i_CompositeRating='F',0,\r\n\t-- 0\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_CompositeRating IS NULL, 0,\n\t    i_CompositeRating = 'T', 1,\n\t    i_CompositeRating = 'F', 0,\n\t    0\n\t) AS o_CompositeRating,\n\t-- *INF*: IIF(ISNULL(i_ZoneTerminal),'N/A',TO_CHAR(i_ZoneTerminal))\n\tIFF(i_ZoneTerminal IS NULL, 'N/A', TO_CHAR(i_ZoneTerminal)) AS o_ZoneTerminal,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- -- rules fields\r\n\t--  -- v_RegistrationState v_SubjectToNoFault v_CoverageLimitType  v_CoordinationOfBenefits <>  v_ExclustionOfWorkLoss\r\n\t-- \r\n\t-- -- KS----------------------\r\n\t-- v_RegistrationState = 'KS' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionBasicLimit' ,'681',\r\n\t-- \r\n\t-- v_RegistrationState = 'KS' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionExcessLimit' ,'682',\r\n\t-- \r\n\t-- --  KY-----------------------\r\n\t-- v_RegistrationState='KY' AND v_CoverageLimitType_Alt='PersonalInjuryProtectionBasicLimit' AND v_PipWorkComp='1','671',\r\n\t-- \r\n\t-- v_RegistrationState='KY' AND v_CoverageLimitType_Alt='PersonalInjuryProtectionExcessLimit' AND v_PipWorkComp='1','672',\r\n\t-- \r\n\t-- v_RegistrationState='KY' AND v_CoverageLimitType_Alt='PersonalInjuryProtectionBasicLimit' AND v_PipWorkComp='0','681',\r\n\t-- \r\n\t-- v_RegistrationState='KY' AND v_CoverageLimitType_Alt='PersonalInjuryProtectionExcessLimit' AND v_PipWorkComp='0','682',\r\n\t-- \r\n\t-- v_RegistrationState='KY' AND v_SubjectToNoFault='0' AND v_GuestPIP='1' AND v_PipWorkComp='1','675',\r\n\t-- \r\n\t-- v_RegistrationState='KY' AND v_SubjectToNoFault='0' AND v_GuestPIP='1' AND (v_PipWorkComp='0' or ISNULL(i_PipWorkComp)),'685',\r\n\t-- \r\n\t-- -- MI-------------------------\r\n\t-- v_RegistrationState='MI'  AND v_PipWorkComp='1','671',\r\n\t-- \r\n\t-- v_RegistrationState='MI' AND IN(v_CoordinationOfBenefits,'None','N/A','0') AND v_PipWorkComp='0','681',\r\n\t-- \r\n\t-- v_RegistrationState='MI' AND IN(v_CoordinationOfBenefits,'MedicalExpenses') AND v_PipWorkComp='0','691',\r\n\t-- \r\n\t-- v_RegistrationState='MI' AND IN(v_CoordinationOfBenefits,'WorkLoss') AND v_PipWorkComp='0','692',\r\n\t-- \r\n\t-- v_RegistrationState='MI' AND IN(v_CoordinationOfBenefits,'MedicalWorkLoss') AND v_PipWorkComp='0','693',\r\n\t-- \r\n\t-- -- MN -----------------------------\r\n\t-- v_RegistrationState='MN' AND IN(v_CoverageLimitType_Alt,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp='1' AND v_ExclustionOfWorkLoss='N/A','671',\r\n\t-- \r\n\t-- v_RegistrationState='MN' AND  IN(v_CoverageLimitType_Alt,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp='1' \r\n\t--  AND v_ExclustionOfWorkLoss <> 'N/A', '675',\r\n\t-- --AND IN(v_ExclustionOfWorkLoss,'NamedInsuredOnly','NamedInsuredAndRelative'),'675',\r\n\t-- \r\n\t-- v_RegistrationState='MN' AND v_GuestPIP='0' AND IN(v_CoverageLimitType_Alt,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp='0' AND v_ExclustionOfWorkLoss='N/A','681',\r\n\t-- \r\n\t-- v_RegistrationState='MN' AND v_GuestPIP='0' AND IN(v_CoverageLimitType_Alt,'PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp='0' \r\n\t-- AND v_ExclustionOfWorkLoss <> 'N/A', '685',\r\n\t-- --AND IN(v_ExclustionOfWorkLoss,'NamedInsuredOnly','NamedInsuredAndRelative'),'685',\r\n\t-- 'N/A')\n\tDECODE(\n\t    TRUE,\n\t    v_RegistrationState = 'KS' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionBasicLimit', '681',\n\t    v_RegistrationState = 'KS' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionExcessLimit', '682',\n\t    v_RegistrationState = 'KY' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionBasicLimit' AND v_PipWorkComp = '1', '671',\n\t    v_RegistrationState = 'KY' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionExcessLimit' AND v_PipWorkComp = '1', '672',\n\t    v_RegistrationState = 'KY' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionBasicLimit' AND v_PipWorkComp = '0', '681',\n\t    v_RegistrationState = 'KY' AND v_CoverageLimitType_Alt = 'PersonalInjuryProtectionExcessLimit' AND v_PipWorkComp = '0', '682',\n\t    v_RegistrationState = 'KY' AND v_SubjectToNoFault = '0' AND v_GuestPIP = '1' AND v_PipWorkComp = '1', '675',\n\t    v_RegistrationState = 'KY' AND v_SubjectToNoFault = '0' AND v_GuestPIP = '1' AND (v_PipWorkComp = '0' or i_PipWorkComp IS NULL), '685',\n\t    v_RegistrationState = 'MI' AND v_PipWorkComp = '1', '671',\n\t    v_RegistrationState = 'MI' AND v_CoordinationOfBenefits IN ('None','N/A','0') AND v_PipWorkComp = '0', '681',\n\t    v_RegistrationState = 'MI' AND v_CoordinationOfBenefits IN ('MedicalExpenses') AND v_PipWorkComp = '0', '691',\n\t    v_RegistrationState = 'MI' AND v_CoordinationOfBenefits IN ('WorkLoss') AND v_PipWorkComp = '0', '692',\n\t    v_RegistrationState = 'MI' AND v_CoordinationOfBenefits IN ('MedicalWorkLoss') AND v_PipWorkComp = '0', '693',\n\t    v_RegistrationState = 'MN' AND v_CoverageLimitType_Alt IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp = '1' AND v_ExclustionOfWorkLoss = 'N/A', '671',\n\t    v_RegistrationState = 'MN' AND v_CoverageLimitType_Alt IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp = '1' AND v_ExclustionOfWorkLoss <> 'N/A', '675',\n\t    v_RegistrationState = 'MN' AND v_GuestPIP = '0' AND v_CoverageLimitType_Alt IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp = '0' AND v_ExclustionOfWorkLoss = 'N/A', '681',\n\t    v_RegistrationState = 'MN' AND v_GuestPIP = '0' AND v_CoverageLimitType_Alt IN ('PersonalInjuryProtectionBasicLimit','PersonalInjuryProtectionExcessLimit') AND v_PipWorkComp = '0' AND v_ExclustionOfWorkLoss <> 'N/A', '685',\n\t    'N/A'\n\t) AS o_PIPBureaucoverageCode,\n\t-- *INF*: IIF(ISNULL(i_TotalVehicleCost),0, i_TotalVehicleCost)\n\tIFF(i_TotalVehicleCost IS NULL, 0, i_TotalVehicleCost) AS o_TotalVehicleCost,\n\t-- *INF*: SUBSTR(v_lkp_result,1,instr(v_lkp_result,'@1')-1)\n\tSUBSTR(v_lkp_result, 1, REGEXP_INSTR(v_lkp_result, '@1') - 1) AS o_CommercialAutoVehicleType,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@1')+2,instr(v_lkp_result,'@2')-instr(v_lkp_result,'@1')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@1') + 2, REGEXP_INSTR(v_lkp_result, '@2') - REGEXP_INSTR(v_lkp_result, '@1') - 2) AS o_CommercialAutoBusinessUseClass,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@2')+2,instr(v_lkp_result,'@3')-instr(v_lkp_result,'@2')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@2') + 2, REGEXP_INSTR(v_lkp_result, '@3') - REGEXP_INSTR(v_lkp_result, '@2') - 2) AS o_SecondaryClass,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@3')+2,instr(v_lkp_result,'@4')-instr(v_lkp_result,'@3')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@3') + 2, REGEXP_INSTR(v_lkp_result, '@4') - REGEXP_INSTR(v_lkp_result, '@3') - 2) AS o_FleetType,\n\t-- *INF*: SUBSTR(v_lkp_result,instr(v_lkp_result,'@4')+2,instr(v_lkp_result,'@5')-instr(v_lkp_result,'@4')-2)\n\tSUBSTR(v_lkp_result, REGEXP_INSTR(v_lkp_result, '@4') + 2, REGEXP_INSTR(v_lkp_result, '@5') - REGEXP_INSTR(v_lkp_result, '@4') - 2) AS o_SecondaryClassGroup,\n\t-- *INF*: IIF(ISNULL(i_RetroactiveDate),\r\n\t-- TO_DATE('1800-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),\r\n\t-- i_RetroactiveDate\r\n\t-- )\n\tIFF(\n\t    i_RetroactiveDate IS NULL, TO_TIMESTAMP('1800-01-01 00:00:00', 'YYYY-MM-DD HH24:MI:SS'),\n\t    i_RetroactiveDate\n\t) AS o_RetroactiveDate,\n\tv_IncludeUIM AS o_IncludeUIM,\n\ti_CoordinationOfBenefits AS o_CoordinationOfBenefits,\n\tMedicalExpenses,\n\tWorkComp,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SubjectToNoFault='T','Yes',\r\n\t-- i_SubjectToNoFault='F','No', 'N/A')\n\tDECODE(\n\t    TRUE,\n\t    i_SubjectToNoFault = 'T', 'Yes',\n\t    i_SubjectToNoFault = 'F', 'No',\n\t    'N/A'\n\t) AS o_SubjectToNoFault,\n\t-- *INF*: IIF(ISNULL(i_AdditionalLimitKS), -1, i_AdditionalLimitKS)\n\tIFF(i_AdditionalLimitKS IS NULL, - 1, i_AdditionalLimitKS) AS o_AdditionalLimitKS,\n\t-- *INF*: IIF(ISNULL(i_AdditionalLimitKY), -1, i_AdditionalLimitKY)\n\tIFF(i_AdditionalLimitKY IS NULL, - 1, i_AdditionalLimitKY) AS o_AdditionalLimitKY,\n\t-- *INF*: IIF(ISNULL(i_AdditionalLimitMN), -1, i_AdditionalLimitMN)\n\tIFF(i_AdditionalLimitMN IS NULL, - 1, i_AdditionalLimitMN) AS o_AdditionalLimitMN,\n\t-- *INF*: IIF(ISNULL(i_ZoneGaraging),'N/A',TO_CHAR(i_ZoneGaraging))\n\tIFF(i_ZoneGaraging IS NULL, 'N/A', TO_CHAR(i_ZoneGaraging)) AS o_ZoneGaraging,\n\tReplacementCost,\n\tFullGlassIndicator,\n\tHistoricVehicleIndicator\n\tFROM JNR_IL_Stage\n\tLEFT JOIN LKP_COVERAGELIMIT LKP_COVERAGELIMIT_i_PremiumTransactionAKID\n\tON LKP_COVERAGELIMIT_i_PremiumTransactionAKID.PremiumTransactionAKID = i_PremiumTransactionAKID\n\n\tLEFT JOIN LKP_5NEWCOLUMNS LKP_5NEWCOLUMNS_i_ClassCode_i_RSC\n\tON LKP_5NEWCOLUMNS_i_ClassCode_i_RSC.ClassCode = i_ClassCode\n\tAND LKP_5NEWCOLUMNS_i_ClassCode_i_RSC.RatingStateCode = i_RSC\n\n\tLEFT JOIN LKP_5NEWCOLUMNS LKP_5NEWCOLUMNS_i_ClassCode_99\n\tON LKP_5NEWCOLUMNS_i_ClassCode_99.ClassCode = i_ClassCode\n\tAND LKP_5NEWCOLUMNS_i_ClassCode_99.RatingStateCode = '99'\n\n),\nEXP_CoverageDetailCommercialAuto AS (\n\tSELECT\n\to_PremiumTransactionID AS i_PremiumTransactionID,\n\to_CoverageGuid AS i_CoverageGuid,\n\to_Type AS i_Type,\n\to_GCW AS i_GCW,\n\to_GVW AS i_GVW,\n\to_RadiusOfOperation AS i_RadiusOfOperation,\n\to_SecondaryClassCategory AS i_SecondaryClassCategory,\n\to_UsedInDumping AS i_UsedInDumping,\n\to_VIN AS i_VIN,\n\to_Make AS i_Make,\n\to_Model AS i_Model,\n\to_ZoneTerminal AS i_ZoneTerminal,\n\to_CommercialAutoVehicleType AS i_CommercialAutoVehicleType,\n\to_CommercialAutoBusinessUseClass AS i_CommercialAutoBusinessUseClass,\n\to_SecondaryClass AS i_SecondaryClass,\n\to_FleetType AS i_FleetType,\n\to_SecondaryClassGroup AS i_SecondaryClassGroup,\n\ti_Year AS Year,\n\ti_StatedAmount AS StatedAmount,\n\tVehicleDeleteDate,\n\to_PIPBureaucoverageCode AS PIPBureaucoverageCode,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t-- *INF*: IIF(ISNULL(i_CoverageGuid),'N/A',i_CoverageGuid)\n\tIFF(i_CoverageGuid IS NULL, 'N/A', i_CoverageGuid) AS o_CoverageGUID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_Type='Truck' ,DECODE(TRUE,i_GVW <= 10000,'Light Trucks',i_GVW  >= 10001 AND i_GVW <= 20000,'Medium Trucks',i_GVW  >= 20001 AND i_GVW <=  45000,'Heavy Trucks',i_GVW > 45000,'Extra Heavy Trucks'),\r\n\t-- i_Type='TruckTractor',DECODE(TRUE,i_GCW <= 45000,'Heavy Truck Tractors',i_GCW > 45000,'Extra Heavy Truck Tractors'),\r\n\t-- i_Type='Semitrailer','Semitrailers',\r\n\t-- i_Type='Trailer','Trailers',\r\n\t-- i_Type='ServiceUtilityTrailer','ServiceUtilityTrailers',\r\n\t-- IN(i_Type,'PrivatePassenger','FuneralDirectors'), 'PrivatePassenger',\r\n\t-- IN(i_Type,'Ambulance','RegistrationPlates','Motorcycle','PublicVehicle','RepossessedAutos','MobileHome','MobileHomeContents','GolfMobile','AntiqueAuto','SpecialOrMobileEquipment', 'Snowmobile', 'AllTerrainUtilityTaskVehicle') ,'Special Class',\r\n\t-- i_Type='Garage','Garage',\r\n\t-- 'N/A'\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_Type = 'Truck', DECODE(\n\t        TRUE,\n\t        i_GVW <= 10000, 'Light Trucks',\n\t        i_GVW >= 10001 AND i_GVW <= 20000, 'Medium Trucks',\n\t        i_GVW >= 20001 AND i_GVW <= 45000, 'Heavy Trucks',\n\t        i_GVW > 45000, 'Extra Heavy Trucks'\n\t    ),\n\t    i_Type = 'TruckTractor', DECODE(\n\t        TRUE,\n\t        i_GCW <= 45000, 'Heavy Truck Tractors',\n\t        i_GCW > 45000, 'Extra Heavy Truck Tractors'\n\t    ),\n\t    i_Type = 'Semitrailer', 'Semitrailers',\n\t    i_Type = 'Trailer', 'Trailers',\n\t    i_Type = 'ServiceUtilityTrailer', 'ServiceUtilityTrailers',\n\t    i_Type IN ('PrivatePassenger','FuneralDirectors'), 'PrivatePassenger',\n\t    i_Type IN ('Ambulance','RegistrationPlates','Motorcycle','PublicVehicle','RepossessedAutos','MobileHome','MobileHomeContents','GolfMobile','AntiqueAuto','SpecialOrMobileEquipment','Snowmobile','AllTerrainUtilityTaskVehicle'), 'Special Class',\n\t    i_Type = 'Garage', 'Garage',\n\t    'N/A'\n\t) AS o_VehicleGroupCode,\n\t-- *INF*: IIF(length(i_RadiusOfOperation)=0,'N/A',i_RadiusOfOperation)\r\n\t-- \n\tIFF(length(i_RadiusOfOperation) = 0, 'N/A', i_RadiusOfOperation) AS o_RadiusOfOperation,\n\t-- *INF*: IIF(NOT ISNULL(i_SecondaryClassCategory),i_SecondaryClassCategory,'N/A')\n\tIFF(i_SecondaryClassCategory IS NOT NULL, i_SecondaryClassCategory, 'N/A') AS o_SecondaryVehicleType,\n\ti_UsedInDumping AS o_UsedInDumpingIndicator,\n\t-- *INF*: IIF(NOT ISNULL(i_VIN),i_VIN,'N/A')\n\tIFF(i_VIN IS NOT NULL, i_VIN, 'N/A') AS o_VIN,\n\t-- *INF*: IIF(NOT ISNULL(i_Make),i_Make,'N/A')\n\tIFF(i_Make IS NOT NULL, i_Make, 'N/A') AS o_Make,\n\t-- *INF*: IIF(NOT ISNULL(i_Model),i_Model,'N/A')\n\tIFF(i_Model IS NOT NULL, i_Model, 'N/A') AS o_Model,\n\to_VehicleNumber,\n\to_CompositeRating AS CompositeRating,\n\t-- *INF*: IIF(NOT ISNULL(i_ZoneTerminal),i_ZoneTerminal,'N/A')\n\tIFF(i_ZoneTerminal IS NOT NULL, i_ZoneTerminal, 'N/A') AS o_ZoneTerminal,\n\t-- *INF*: IIF(NOT ISNULL(i_Type),i_Type,'N/A')\n\tIFF(i_Type IS NOT NULL, i_Type, 'N/A') AS o_VehicleType,\n\to_TotalVehicleCost,\n\t-- *INF*: IIF(length(i_CommercialAutoVehicleType)=0,'N/A',i_CommercialAutoVehicleType)\n\tIFF(length(i_CommercialAutoVehicleType) = 0, 'N/A', i_CommercialAutoVehicleType) AS o_CommercialAutoVehicleType,\n\t-- *INF*: IIF(length(i_CommercialAutoBusinessUseClass)=0,'N/A',i_CommercialAutoBusinessUseClass)\n\tIFF(length(i_CommercialAutoBusinessUseClass) = 0, 'N/A', i_CommercialAutoBusinessUseClass) AS o_CommercialAutoBusinessUseClass,\n\t-- *INF*: IIF(length(i_SecondaryClass)=0,'N/A',i_SecondaryClass)\r\n\t-- \r\n\t-- \n\tIFF(length(i_SecondaryClass) = 0, 'N/A', i_SecondaryClass) AS o_SecondaryClass,\n\t-- *INF*: IIF(length(i_FleetType)=0,'N/A',i_FleetType)\r\n\t-- \n\tIFF(length(i_FleetType) = 0, 'N/A', i_FleetType) AS o_FleetType,\n\t-- *INF*: IIF(length(i_SecondaryClassGroup)=0,'N/A',i_SecondaryClassGroup)\r\n\t-- \r\n\t-- \n\tIFF(length(i_SecondaryClassGroup) = 0, 'N/A', i_SecondaryClassGroup) AS o_SecondaryClassGroup,\n\to_RetroactiveDate AS RetroactiveDate,\n\to_IncludeUIM AS IncludeUIM,\n\to_CoordinationOfBenefits,\n\tMedicalExpenses,\n\tWorkComp,\n\to_SubjectToNoFault,\n\to_AdditionalLimitKS AS AdditionalLimitKS,\n\to_AdditionalLimitKY AS AdditionalLimitKY,\n\to_AdditionalLimitMN AS AdditionalLimitMN,\n\to_ZoneGaraging AS ZoneGaraging,\n\tReplacementCost,\n\tFullGlassIndicator,\n\tHistoricVehicleIndicator\n\tFROM EXP_MetaData\n),\nLKP_CoverageDetailCommercialAuto AS (\n\tSELECT\n\tPremiumTransactionID,\n\tVehicleGroupCode,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tVIN,\n\tVehicleMake,\n\tVehicleModel,\n\tVehicleNumber,\n\tCompositeRatedFlag,\n\tTerminalZoneCode,\n\tVehicleType,\n\tPIPBureaucoverageCode,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tIncludeUIM,\n\tRatingZoneCode,\n\tReplacementCost,\n\tFullGlassIndicator,\n\tHistoricVehicleIndicator\n\tFROM (\n\t\tSELECT \n\t\t\tPremiumTransactionID,\n\t\t\tVehicleGroupCode,\n\t\t\tRadiusOfOperation,\n\t\t\tSecondaryVehicleType,\n\t\t\tUsedInDumpingIndicator,\n\t\t\tVehicleYear,\n\t\t\tStatedAmount,\n\t\t\tCostNew,\n\t\t\tVehicleDeleteDate,\n\t\t\tVIN,\n\t\t\tVehicleMake,\n\t\t\tVehicleModel,\n\t\t\tVehicleNumber,\n\t\t\tCompositeRatedFlag,\n\t\t\tTerminalZoneCode,\n\t\t\tVehicleType,\n\t\t\tPIPBureaucoverageCode,\n\t\t\tVehicleTypeSize,\n\t\t\tBusinessUseClass,\n\t\t\tSecondaryClass,\n\t\t\tFleetType,\n\t\t\tSecondaryClassGroup,\n\t\t\tIncludeUIM,\n\t\t\tRatingZoneCode,\n\t\t\tReplacementCost,\n\t\t\tFullGlassIndicator,\n\t\t\tHistoricVehicleIndicator\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailCommercialAuto\n\t\tWHERE SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand PremiumTransactionID  in (select pt.PremiumTransactionID from\r\n\t\tPremiumTransaction pt\r\n\t\tinner join WorkPremiumTransaction wpt\r\n\t\ton pt.PremiumTransactionAKID=wpt.PremiumTransactionAKId)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY PremiumTransactionID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_CoverageDetailCommercialAuto.PremiumTransactionID AS lkp_PremiumTransactionID,\n\tLKP_CoverageDetailCommercialAuto.VehicleGroupCode AS lkp_VehicleGroupCode,\n\tLKP_CoverageDetailCommercialAuto.RadiusOfOperation AS lkp_RadiusOfOperation,\n\tLKP_CoverageDetailCommercialAuto.SecondaryVehicleType AS lkp_SecondaryVehicleType,\n\tLKP_CoverageDetailCommercialAuto.UsedInDumpingIndicator AS lkp_UsedInDumpingIndicator,\n\t-- *INF*: IIF(lkp_UsedInDumpingIndicator='T',1,0)\n\tIFF(lkp_UsedInDumpingIndicator = 'T', 1, 0) AS v_UsedInDumpingIndicator,\n\tLKP_CoverageDetailCommercialAuto.VehicleYear AS lkp_VehicleYear,\n\tLKP_CoverageDetailCommercialAuto.StatedAmount AS lkp_StatedAmount,\n\tLKP_CoverageDetailCommercialAuto.CostNew AS lkp_CostNew,\n\tLKP_CoverageDetailCommercialAuto.VehicleDeleteDate AS lkp_VehicleDeleteDate,\n\tLKP_CoverageDetailCommercialAuto.VIN AS lkp_VIN,\n\tLKP_CoverageDetailCommercialAuto.VehicleMake AS lkp_VehicleMake,\n\tLKP_CoverageDetailCommercialAuto.VehicleModel AS lkp_VehicleModel,\n\tLKP_CoverageDetailCommercialAuto.VehicleNumber AS lkp_VehicleNumber,\n\tLKP_CoverageDetailCommercialAuto.CompositeRatedFlag AS lkp_CompositeRatedFlag,\n\t-- *INF*: IIF(lkp_CompositeRatedFlag='T',1,0)\n\tIFF(lkp_CompositeRatedFlag = 'T', 1, 0) AS v_CompositeRatedFlag,\n\tLKP_CoverageDetailCommercialAuto.TerminalZoneCode AS lkp_TerminalZoneCode,\n\tLKP_CoverageDetailCommercialAuto.VehicleType AS lkp_VehicleType,\n\tLKP_CoverageDetailCommercialAuto.PIPBureaucoverageCode AS lkp_PIPBureaucoverageCode,\n\tLKP_CoverageDetailCommercialAuto.VehicleTypeSize AS lkp_VehicleTypeSize,\n\tLKP_CoverageDetailCommercialAuto.BusinessUseClass AS lkp_BusinessUseClass,\n\tLKP_CoverageDetailCommercialAuto.SecondaryClass AS lkp_SecondaryClass,\n\tLKP_CoverageDetailCommercialAuto.FleetType AS lkp_FleetType,\n\tLKP_CoverageDetailCommercialAuto.SecondaryClassGroup AS lkp_SecondaryClassGroup,\n\tLKP_CoverageDetailCommercialAuto.IncludeUIM AS lkp_IncludeUIM,\n\tLKP_CoverageDetailCommercialAuto.RatingZoneCode AS lkp_RatingZoneCode,\n\tLKP_CoverageDetailCommercialAuto.ReplacementCost AS lkp_ReplacementCost,\n\tLKP_CoverageDetailCommercialAuto.FullGlassIndicator AS lkp_FullGlassIndicator,\n\tLKP_CoverageDetailCommercialAuto.HistoricVehicleIndicator AS lkp_HistoricVehicleIndicator,\n\tEXP_CoverageDetailCommercialAuto.o_PremiumTransactionID AS i_PremiumTransactionID,\n\tEXP_CoverageDetailCommercialAuto.o_CoverageGUID AS i_CoverageGUID,\n\tEXP_CoverageDetailCommercialAuto.o_VehicleGroupCode AS i_VehicleGroupCode,\n\tEXP_CoverageDetailCommercialAuto.o_RadiusOfOperation AS i_RadiusOfOperation,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryVehicleType AS i_SecondaryVehicleType,\n\tEXP_CoverageDetailCommercialAuto.o_UsedInDumpingIndicator AS i_UsedInDumpingIndicator,\n\tEXP_CoverageDetailCommercialAuto.Year AS i_Year,\n\tEXP_CoverageDetailCommercialAuto.StatedAmount AS i_StatedAmount,\n\tEXP_CoverageDetailCommercialAuto.VehicleDeleteDate AS i_VehicleDeleteDate,\n\tEXP_CoverageDetailCommercialAuto.PIPBureaucoverageCode AS i_PIPBureaucoverageCode,\n\t-- *INF*: SUBSTR('0000' || IIF(ISNULL(i_Year), '0000', TO_CHAR(i_Year)), -4, 4)\n\tSUBSTR('0000' || \n\t    IFF(\n\t        i_Year IS NULL, '0000', TO_CHAR(i_Year)\n\t    ), - 4, 4) AS v_Year,\n\t-- *INF*: TO_CHAR(IIF(ISNULL(i_StatedAmount), 0, i_StatedAmount))\n\tTO_CHAR(\n\t    IFF(\n\t        i_StatedAmount IS NULL, 0, i_StatedAmount\n\t    )) AS v_StatedAmount,\n\tEXP_CoverageDetailCommercialAuto.o_VIN,\n\tEXP_CoverageDetailCommercialAuto.o_Make,\n\tEXP_CoverageDetailCommercialAuto.o_Model,\n\tEXP_CoverageDetailCommercialAuto.o_VehicleNumber,\n\tEXP_CoverageDetailCommercialAuto.CompositeRating,\n\ti_PremiumTransactionID AS o_PremiumTransactionID,\n\t'1' AS o_CurrentSnapshotFlag,\n\tEXP_CoverageDetailCommercialAuto.o_ZoneTerminal AS o_TerminalZoneCode,\n\tEXP_CoverageDetailCommercialAuto.o_VehicleType AS VehicleType,\n\tEXP_CoverageDetailCommercialAuto.o_TotalVehicleCost AS i_TotalVehicleCost,\n\ti_TotalVehicleCost AS v_CostNew,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t-- *INF*: TO_DATE('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_TIMESTAMP('1800-01-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US')\n\tTO_TIMESTAMP('2100-12-31 23:59:59.000', 'YYYY-MM-DD HH24:MI:SS.US') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\ti_CoverageGUID AS o_CoverageGUID,\n\ti_VehicleGroupCode AS o_VehicleGroupCode,\n\ti_RadiusOfOperation AS o_RadiusOfOperation,\n\ti_SecondaryVehicleType AS o_SecondaryVehicleType,\n\ti_UsedInDumpingIndicator AS o_UsedInDumpingIndicator,\n\tv_Year AS o_Year,\n\tv_StatedAmount AS o_StatedAmount,\n\tv_CostNew AS o_CostNew,\n\ti_VehicleDeleteDate AS o_VehicleDeleteDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_PremiumTransactionID),\r\n\t-- 'NEW',\r\n\t-- lkp_VehicleGroupCode = i_VehicleGroupCode AND lkp_RadiusOfOperation =i_RadiusOfOperation AND lkp_SecondaryVehicleType = i_SecondaryVehicleType AND v_UsedInDumpingIndicator = i_UsedInDumpingIndicator AND v_Year = lkp_VehicleYear AND v_StatedAmount  = lkp_StatedAmount\r\n\t-- AND lkp_CostNew=v_CostNew\r\n\t-- AND lkp_VehicleDeleteDate=i_VehicleDeleteDate\r\n\t-- AND lkp_VIN = o_VIN\r\n\t-- AND lkp_VehicleMake = o_Make\r\n\t-- AND lkp_VehicleModel = o_Model\r\n\t-- AND lkp_VehicleNumber = o_VehicleNumber\r\n\t-- AND v_CompositeRatedFlag = CompositeRating\r\n\t-- AND lkp_TerminalZoneCode=o_TerminalZoneCode\r\n\t-- AND lkp_VehicleType=VehicleType\r\n\t-- AND lkp_VehicleTypeSize=o_CommercialAutoVehicleType\r\n\t-- AND lkp_BusinessUseClass=o_CommercialAutoBusinessUseClass\r\n\t-- AND lkp_SecondaryClass=o_SecondaryClass\r\n\t-- AND lkp_FleetType=o_FleetType\r\n\t-- AND lkp_SecondaryClassGroup=o_SecondaryClassGroup\r\n\t-- AND lkp_PIPBureaucoverageCode=i_PIPBureaucoverageCode\r\n\t-- AND lkp_IncludeUIM=IncludeUIM\r\n\t-- AND lkp_RatingZoneCode=RatingZoneCode\r\n\t-- AND lkp_ReplacementCost=ReplacementCost\r\n\t-- AND lkp_FullGlassIndicator=FullGlassIndicator\r\n\t-- AND lkp_HistoricVehicleIndicator=HistoricVehicleIndicator,\r\n\t-- 'NOCHANGE',\r\n\t-- 'UPDATE')\n\tDECODE(\n\t    TRUE,\n\t    lkp_PremiumTransactionID IS NULL, 'NEW',\n\t    lkp_VehicleGroupCode = i_VehicleGroupCode AND lkp_RadiusOfOperation = i_RadiusOfOperation AND lkp_SecondaryVehicleType = i_SecondaryVehicleType AND v_UsedInDumpingIndicator = i_UsedInDumpingIndicator AND v_Year = lkp_VehicleYear AND v_StatedAmount = lkp_StatedAmount AND lkp_CostNew = v_CostNew AND lkp_VehicleDeleteDate = i_VehicleDeleteDate AND lkp_VIN = o_VIN AND lkp_VehicleMake = o_Make AND lkp_VehicleModel = o_Model AND lkp_VehicleNumber = o_VehicleNumber AND v_CompositeRatedFlag = CompositeRating AND lkp_TerminalZoneCode = o_TerminalZoneCode AND lkp_VehicleType = VehicleType AND lkp_VehicleTypeSize = o_CommercialAutoVehicleType AND lkp_BusinessUseClass = o_CommercialAutoBusinessUseClass AND lkp_SecondaryClass = o_SecondaryClass AND lkp_FleetType = o_FleetType AND lkp_SecondaryClassGroup = o_SecondaryClassGroup AND lkp_PIPBureaucoverageCode = i_PIPBureaucoverageCode AND lkp_IncludeUIM = IncludeUIM AND lkp_RatingZoneCode = RatingZoneCode AND lkp_ReplacementCost = ReplacementCost AND lkp_FullGlassIndicator = FullGlassIndicator AND lkp_HistoricVehicleIndicator = HistoricVehicleIndicator, 'NOCHANGE',\n\t    'UPDATE'\n\t) AS o_ChangeFlag,\n\ti_PIPBureaucoverageCode AS o_PIPBureaucoverageCode,\n\tEXP_CoverageDetailCommercialAuto.o_CommercialAutoVehicleType,\n\tEXP_CoverageDetailCommercialAuto.o_CommercialAutoBusinessUseClass,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryClass,\n\tEXP_CoverageDetailCommercialAuto.o_FleetType,\n\tEXP_CoverageDetailCommercialAuto.o_SecondaryClassGroup,\n\tEXP_CoverageDetailCommercialAuto.RetroactiveDate,\n\tEXP_CoverageDetailCommercialAuto.IncludeUIM,\n\tEXP_CoverageDetailCommercialAuto.o_CoordinationOfBenefits,\n\tEXP_CoverageDetailCommercialAuto.MedicalExpenses,\n\tEXP_CoverageDetailCommercialAuto.WorkComp,\n\tEXP_CoverageDetailCommercialAuto.o_SubjectToNoFault,\n\tEXP_CoverageDetailCommercialAuto.AdditionalLimitKS,\n\tEXP_CoverageDetailCommercialAuto.AdditionalLimitKY,\n\tEXP_CoverageDetailCommercialAuto.AdditionalLimitMN,\n\tEXP_CoverageDetailCommercialAuto.ZoneGaraging AS RatingZoneCode,\n\tEXP_CoverageDetailCommercialAuto.ReplacementCost,\n\tEXP_CoverageDetailCommercialAuto.FullGlassIndicator,\n\tEXP_CoverageDetailCommercialAuto.HistoricVehicleIndicator\n\tFROM EXP_CoverageDetailCommercialAuto\n\tLEFT JOIN LKP_CoverageDetailCommercialAuto\n\tON LKP_CoverageDetailCommercialAuto.PremiumTransactionID = EXP_CoverageDetailCommercialAuto.o_PremiumTransactionID\n),\nFIL_Insert AS (\n\tSELECT\n\to_VIN, \n\to_Make, \n\to_Model, \n\to_VehicleNumber, \n\tCompositeRating, \n\to_PremiumTransactionID, \n\to_CurrentSnapshotFlag, \n\to_TerminalZoneCode, \n\tVehicleType, \n\to_AuditID, \n\to_EffectiveDate, \n\to_ExpirationDate, \n\to_SourceSystemID, \n\to_CreatedDate, \n\to_ModifiedDate, \n\to_CoverageGUID, \n\to_VehicleGroupCode, \n\to_RadiusOfOperation, \n\to_SecondaryVehicleType, \n\to_UsedInDumpingIndicator, \n\to_Year, \n\to_StatedAmount, \n\to_CostNew, \n\to_VehicleDeleteDate, \n\to_ChangeFlag, \n\to_PIPBureaucoverageCode, \n\to_CommercialAutoVehicleType, \n\to_CommercialAutoBusinessUseClass, \n\to_SecondaryClass, \n\to_FleetType, \n\to_SecondaryClassGroup, \n\tRetroactiveDate, \n\tIncludeUIM, \n\to_CoordinationOfBenefits, \n\tMedicalExpenses, \n\tWorkComp, \n\to_SubjectToNoFault, \n\tAdditionalLimitKS, \n\tAdditionalLimitKY, \n\tAdditionalLimitMN, \n\tRatingZoneCode, \n\tReplacementCost, \n\tFullGlassIndicator, \n\tHistoricVehicleIndicator\n\tFROM EXP_DetectChanges\n\tWHERE o_ChangeFlag = 'NEW'\n),\nCoverageDetailCommercialAuto_INSERT AS (\n\tINSERT INTO CoverageDetailCommercialAuto\n\t(PremiumTransactionID, CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, CoverageGuid, VehicleGroupCode, RadiusOfOperation, SecondaryVehicleType, UsedInDumpingIndicator, VehicleYear, StatedAmount, CostNew, VehicleDeleteDate, VIN, VehicleMake, VehicleModel, VehicleNumber, CompositeRatedFlag, TerminalZoneCode, VehicleType, PIPBureauCoverageCode, RetroactiveDate, VehicleTypeSize, BusinessUseClass, SecondaryClass, FleetType, SecondaryClassGroup, IncludeUIM, CoordinationOfBenefits, MedicalExpensesOption, CoveredByWorkersCompensationFlag, SubjectToNoFault, AdditionalLimitKS, AdditionalLimitKY, AdditionalLimitMN, RatingZoneCode, ReplacementCost, FullGlassIndicator, HistoricVehicleIndicator)\n\tSELECT \n\to_PremiumTransactionID AS PREMIUMTRANSACTIONID, \n\to_CurrentSnapshotFlag AS CURRENTSNAPSHOTFLAG, \n\to_AuditID AS AUDITID, \n\to_EffectiveDate AS EFFECTIVEDATE, \n\to_ExpirationDate AS EXPIRATIONDATE, \n\to_SourceSystemID AS SOURCESYSTEMID, \n\to_CreatedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\to_CoverageGUID AS COVERAGEGUID, \n\to_VehicleGroupCode AS VEHICLEGROUPCODE, \n\to_RadiusOfOperation AS RADIUSOFOPERATION, \n\to_SecondaryVehicleType AS SECONDARYVEHICLETYPE, \n\to_UsedInDumpingIndicator AS USEDINDUMPINGINDICATOR, \n\to_Year AS VEHICLEYEAR, \n\to_StatedAmount AS STATEDAMOUNT, \n\to_CostNew AS COSTNEW, \n\to_VehicleDeleteDate AS VEHICLEDELETEDATE, \n\to_VIN AS VIN, \n\to_Make AS VEHICLEMAKE, \n\to_Model AS VEHICLEMODEL, \n\to_VehicleNumber AS VEHICLENUMBER, \n\tCompositeRating AS COMPOSITERATEDFLAG, \n\to_TerminalZoneCode AS TERMINALZONECODE, \n\tVEHICLETYPE, \n\to_PIPBureaucoverageCode AS PIPBUREAUCOVERAGECODE, \n\tRETROACTIVEDATE, \n\to_CommercialAutoVehicleType AS VEHICLETYPESIZE, \n\to_CommercialAutoBusinessUseClass AS BUSINESSUSECLASS, \n\to_SecondaryClass AS SECONDARYCLASS, \n\to_FleetType AS FLEETTYPE, \n\to_SecondaryClassGroup AS SECONDARYCLASSGROUP, \n\tINCLUDEUIM, \n\to_CoordinationOfBenefits AS COORDINATIONOFBENEFITS, \n\tMedicalExpenses AS MEDICALEXPENSESOPTION, \n\tWorkComp AS COVEREDBYWORKERSCOMPENSATIONFLAG, \n\to_SubjectToNoFault AS SUBJECTTONOFAULT, \n\tADDITIONALLIMITKS, \n\tADDITIONALLIMITKY, \n\tADDITIONALLIMITMN, \n\tRATINGZONECODE, \n\tREPLACEMENTCOST, \n\tFULLGLASSINDICATOR, \n\tHISTORICVEHICLEINDICATOR\n\tFROM FIL_Insert\n),\nSQ_CoverageDetailCommercialAuto AS (\n\tSELECT \r\n\tCDCAPrevious.VehicleGroupCode, \r\n\tCDCAPrevious.RadiusOfOperation, \r\n\tCDCAPrevious.SecondaryVehicleType, \r\n\tCDCAPrevious.UsedInDumpingIndicator, \r\n\tCDCAPrevious.VehicleYear, \r\n\tCDCAPrevious.StatedAmount, \r\n\tCDCAPrevious.CostNew, \r\n\tCDCAPrevious.VehicleDeleteDate, \r\n\tCDCAPrevious.VIN, \r\n\tCDCAPrevious.VehicleMake, \r\n\tCDCAPrevious.VehicleModel, \r\n\tCDCAPrevious.VehicleNumber, \r\n\tCDCAPrevious.CompositeRatedFlag, \r\n\tCDCAPrevious.TerminalZoneCode, \r\n\tCDCAPrevious.VehicleType, \r\n\tCDCAPrevious.PIPBureauCoverageCode, \r\n\tCDCAPrevious.VehicleTypeSize, \r\n\tCDCAPrevious.BusinessUseClass, \r\n\tCDCAPrevious.SecondaryClass, \r\n\tCDCAPrevious.FleetType, \r\n\tCDCAPrevious.SecondaryClassGroup,\r\n\tCDCAPrevious.RetroactiveDate,\r\n\tCDCAPrevious.IncludeUIM,\r\n\tCDCAPrevious.CoordinationOfBenefits,\r\n\tCDCAPrevious.MedicalExpensesOption,\r\n\tCDCAPrevious.CoveredByWorkersCompensationFlag,\r\n\tCDCAPrevious.SubjectToNoFault,\r\n\tCDCAPrevious.AdditionalLimitKS,\r\n\tCDCAPrevious.AdditionalLimitKY,\r\n\tCDCAPrevious.AdditionalLimitMN,\r\n\tCDCAPrevious.RatingZoneCode,\r\n\tCDCAPrevious.ReplacementCost,\r\n\tCDCAPrevious.FullGlassIndicator,\r\n\tCDCAPrevious.HistoricVehicleIndicator,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID\r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL inner join CoverageDetailCommercialAuto CDCAPrevious\r\n\ton ( CDCAPrevious.PremiumTransactionID = WPTOL.PreviousPremiumTransactionID)\r\n\tINNER JOIN CoverageDetailCommercialAuto CDCAToUpdate\r\n\ton ( CDCAToUpdate.PremiumTransactionID = WPTOL.PremiumTransactionid)\r\n\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL .premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Offset'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\t  CDCAPrevious.VehicleGroupCode <> CDCAToUpdate.VehicleGroupCode\r\n\t  OR CDCAPrevious.RadiusOfOperation <> CDCAToUpdate.RadiusOfOperation\r\n\t  OR CDCAPrevious.SecondaryVehicleType <> CDCAToUpdate.SecondaryVehicleType\r\n\t  OR CDCAPrevious.UsedInDumpingIndicator <> CDCAToUpdate.UsedInDumpingIndicator\r\n\t  OR CDCAPrevious.VehicleYear <> CDCAToUpdate.VehicleYear\r\n\t  OR CDCAPrevious.StatedAmount <> CDCAToUpdate.StatedAmount\r\n\t  OR CDCAPrevious.CostNew <> CDCAToUpdate.CostNew\r\n\t  OR CDCAPrevious.VehicleDeleteDate <> CDCAToUpdate.VehicleDeleteDate\r\n\t  OR CDCAPrevious.VIN <> CDCAToUpdate.VIN\r\n\t  OR CDCAPrevious.VehicleMake <> CDCAToUpdate.VehicleMake\r\n\t  OR CDCAPrevious.VehicleModel <> CDCAToUpdate.VehicleModel\r\n\t  OR CDCAPrevious.VehicleNumber <> CDCAToUpdate.VehicleNumber\r\n\t  OR CDCAPrevious.CompositeRatedFlag <> CDCAToUpdate.CompositeRatedFlag\r\n\t  OR CDCAPrevious.TerminalZoneCode <> CDCAToUpdate.TerminalZoneCode\r\n\t  OR CDCAPrevious.VehicleType <> CDCAToUpdate.VehicleType\r\n\t  OR CDCAPrevious.PIPBureauCoverageCode <> CDCAToUpdate.PIPBureauCoverageCode\r\n\t  OR CDCAPrevious.VehicleTypeSize <> CDCAToUpdate.VehicleTypeSize\r\n\t  OR CDCAPrevious.BusinessUseClass <> CDCAToUpdate.BusinessUseClass\r\n\t  OR CDCAPrevious.SecondaryClass <> CDCAToUpdate.SecondaryClass\r\n\t  OR CDCAPrevious.FleetType <> CDCAToUpdate.FleetType\r\n\t  OR CDCAPrevious.SecondaryClassGroup <> CDCAToUpdate.SecondaryClassGroup\r\n\t  OR CDCAPrevious.RetroactiveDate <> CDCAToUpdate.RetroactiveDate\r\n\t  OR CDCAPrevious.IncludeUIM <> CDCAToUpdate.IncludeUIM\r\n\t  OR CDCAPrevious.CoordinationOfBenefits <> CDCAToUpdate.CoordinationOfBenefits\r\n\t  OR CDCAPrevious.MedicalExpensesOption <>  CDCAToUpdate.MedicalExpensesOption \r\n\t  OR CDCAPrevious.CoveredByWorkersCompensationFlag <> CDCAToUpdate.CoveredByWorkersCompensationFlag\r\n\t  OR CDCAPrevious.SubjectToNoFault <> CDCAToUpdate.SubjectToNoFault\r\n\t  OR CDCAPrevious.AdditionalLimitKS <> CDCAToUpdate.AdditionalLimitKS\r\n\t  OR CDCAPrevious.AdditionalLimitKY <> CDCAToUpdate.AdditionalLimitKY\r\n\t  OR CDCAPrevious.AdditionalLimitMN <> CDCAToUpdate.AdditionalLimitMN\r\n\t  --added null check to make sure null attributes are being offset with the correct value\r\n\t  OR ISNULL(CDCAPrevious.RatingZoneCode, 'N/A') <> CDCAToUpdate.RatingZoneCode\r\n\t  OR ISNULL(CDCAPrevious.ReplacementCost, 0) <> CDCAToUpdate.ReplacementCost\r\n\t  OR ISNULL(CDCAPrevious.FullGlassIndicator, 0) <> CDCAToUpdate.FullGlassIndicator\r\n\t  OR ISNULL(CDCAPrevious.HistoricVehicleIndicator, 0) <> CDCAToUpdate.HistoricVehicleIndicator\r\n\t)\n),\nEXP_Coveragedetailauto AS (\n\tSELECT\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate,\n\tVehicleGroupCode,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tVIN,\n\tVehicleMake,\n\tVehicleModel,\n\tVehicleNumber,\n\tCompositeRatedFlag,\n\tTerminalZoneCode,\n\tVehicleType,\n\tPIPBureaucoverageCode,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tRetroactiveDate,\n\tIncludeUIM,\n\tCoordinationOfBenefits,\n\tMedicalExpensesOption,\n\tCoveredByWorkersCompensationFlag AS CoveredByWorkComp,\n\t-- *INF*: IIF(ISNULL(CoordinationOfBenefits),'N/A',CoordinationOfBenefits)\n\tIFF(CoordinationOfBenefits IS NULL, 'N/A', CoordinationOfBenefits) AS o_CoordinationOfBenefits,\n\t-- *INF*: IIF(ISNULL(MedicalExpensesOption),'N/A',MedicalExpensesOption)\n\tIFF(MedicalExpensesOption IS NULL, 'N/A', MedicalExpensesOption) AS o_MedicalExpensesOption,\n\t-- *INF*: IIF(ISNULL(CoveredByWorkComp),0,IIF(CoveredByWorkComp='T',1,0))\n\tIFF(CoveredByWorkComp IS NULL, 0, IFF(\n\t        CoveredByWorkComp = 'T', 1, 0\n\t    )) AS o_CoveredByWorkComp,\n\tSubjectToNoFault,\n\tAdditionalLimitKS,\n\tAdditionalLimitKY,\n\tAdditionalLimitMN,\n\tRatingZoneCode,\n\t-- *INF*: IIF(ISNULL(RatingZoneCode),'N/A',TO_CHAR(RatingZoneCode))\n\tIFF(RatingZoneCode IS NULL, 'N/A', TO_CHAR(RatingZoneCode)) AS o_RatingZoneCode,\n\tReplacementCost,\n\t-- *INF*: IIF(ISNULL(ReplacementCost),0,IIF(ReplacementCost = 'T',1,0))\n\tIFF(ReplacementCost IS NULL, 0, IFF(\n\t        ReplacementCost = 'T', 1, 0\n\t    )) AS o_ReplacementCost,\n\tFullGlassIndicator,\n\t-- *INF*: IIF(ISNULL(FullGlassIndicator),0,IIF(FullGlassIndicator = 'T',1,0))\n\tIFF(FullGlassIndicator IS NULL, 0, IFF(\n\t        FullGlassIndicator = 'T', 1, 0\n\t    )) AS o_FullGlassIndicator,\n\tHistoricVehicleIndicator,\n\t-- *INF*: IIF(ISNULL(HistoricVehicleIndicator),0,IIF(HistoricVehicleIndicator= 'T',1,0))\n\tIFF(\n\t    HistoricVehicleIndicator IS NULL, 0,\n\t    IFF(\n\t        HistoricVehicleIndicator = 'T', 1, 0\n\t    )\n\t) AS o_HistoricVehicleIndicator\n\tFROM SQ_CoverageDetailCommercialAuto\n),\nUPD_Coveragedetailcommercialauto AS (\n\tSELECT\n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate, \n\tVehicleGroupCode, \n\tRadiusOfOperation, \n\tSecondaryVehicleType, \n\tUsedInDumpingIndicator, \n\tVehicleYear, \n\tStatedAmount, \n\tCostNew, \n\tVehicleDeleteDate, \n\tVIN, \n\tVehicleMake, \n\tVehicleModel, \n\tVehicleNumber, \n\tCompositeRatedFlag, \n\tTerminalZoneCode, \n\tVehicleType, \n\tPIPBureaucoverageCode, \n\tVehicleTypeSize, \n\tBusinessUseClass, \n\tSecondaryClass, \n\tFleetType, \n\tSecondaryClassGroup, \n\tRetroactiveDate, \n\tIncludeUIM, \n\to_CoordinationOfBenefits AS CoordinationOfBenefits, \n\to_MedicalExpensesOption AS MedicalExpensesOption, \n\to_CoveredByWorkComp AS CoveredByWorkComp, \n\tSubjectToNoFault, \n\tAdditionalLimitKS, \n\tAdditionalLimitKY, \n\tAdditionalLimitMN, \n\to_RatingZoneCode AS RatingZoneCode, \n\to_ReplacementCost AS ReplacementCost, \n\to_FullGlassIndicator AS FullGlassIndicator, \n\to_HistoricVehicleIndicator AS HistoricVehicleIndicator\n\tFROM EXP_Coveragedetailauto\n),\nTGT_CoverageDetailCommercialAuto_Offset AS (\n\tMERGE INTO CoverageDetailCommercialAuto AS T\n\tUSING UPD_Coveragedetailcommercialauto AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.VehicleGroupCode = S.VehicleGroupCode, T.RadiusOfOperation = S.RadiusOfOperation, T.SecondaryVehicleType = S.SecondaryVehicleType, T.UsedInDumpingIndicator = S.UsedInDumpingIndicator, T.VehicleYear = S.VehicleYear, T.StatedAmount = S.StatedAmount, T.CostNew = S.CostNew, T.VehicleDeleteDate = S.VehicleDeleteDate, T.VIN = S.VIN, T.VehicleMake = S.VehicleMake, T.VehicleModel = S.VehicleModel, T.VehicleNumber = S.VehicleNumber, T.CompositeRatedFlag = S.CompositeRatedFlag, T.TerminalZoneCode = S.TerminalZoneCode, T.VehicleType = S.VehicleType, T.PIPBureauCoverageCode = S.PIPBureaucoverageCode, T.RetroactiveDate = S.RetroactiveDate, T.VehicleTypeSize = S.VehicleTypeSize, T.BusinessUseClass = S.BusinessUseClass, T.SecondaryClass = S.SecondaryClass, T.FleetType = S.FleetType, T.SecondaryClassGroup = S.SecondaryClassGroup, T.IncludeUIM = S.IncludeUIM, T.CoordinationOfBenefits = S.CoordinationOfBenefits, T.MedicalExpensesOption = S.MedicalExpensesOption, T.CoveredByWorkersCompensationFlag = S.CoveredByWorkComp, T.SubjectToNoFault = S.SubjectToNoFault, T.AdditionalLimitKS = S.AdditionalLimitKS, T.AdditionalLimitKY = S.AdditionalLimitKY, T.AdditionalLimitMN = S.AdditionalLimitMN, T.RatingZoneCode = S.RatingZoneCode, T.ReplacementCost = S.ReplacementCost, T.FullGlassIndicator = S.FullGlassIndicator, T.HistoricVehicleIndicator = S.HistoricVehicleIndicator\n),\nSQ_CoverageDetailCommercialAuto_Deprecated AS (\n\tSELECT \r\n\tCDCAPrevious.VehicleGroupCode, \r\n\tCDCAPrevious.RadiusOfOperation, \r\n\tCDCAPrevious.SecondaryVehicleType, \r\n\tCDCAPrevious.UsedInDumpingIndicator, \r\n\tCDCAPrevious.VehicleYear, \r\n\tCDCAPrevious.StatedAmount, \r\n\tCDCAPrevious.CostNew, \r\n\tCDCAPrevious.VehicleDeleteDate, \r\n\tCDCAPrevious.VIN, \r\n\tCDCAPrevious.VehicleMake, \r\n\tCDCAPrevious.VehicleModel, \r\n\tCDCAPrevious.VehicleNumber, \r\n\tCDCAPrevious.CompositeRatedFlag, \r\n\tCDCAPrevious.TerminalZoneCode, \r\n\tCDCAPrevious.VehicleType, \r\n\tCDCAPrevious.PIPBureauCoverageCode, \r\n\tCDCAPrevious.VehicleTypeSize, \r\n\tCDCAPrevious.BusinessUseClass, \r\n\tCDCAPrevious.SecondaryClass, \r\n\tCDCAPrevious.FleetType, \r\n\tCDCAPrevious.SecondaryClassGroup,\r\n\tCDCAPrevious.RetroactiveDate,\r\n\tCDCAPrevious.IncludeUIM,\r\n\tCDCAPrevious.CoordinationOfBenefits, \r\n\tCDCAPrevious.MedicalExpensesOption, \r\n\tCDCAPrevious.CoveredByWorkersCompensationFlag, \r\n\tCDCAPrevious.SubjectToNoFault,\r\n\tCDCAPrevious.AdditionalLimitKS,\r\n\tCDCAPrevious.AdditionalLimitKY,\r\n\tCDCAPrevious.AdditionalLimitMN,\r\n\tCDCAPrevious.RatingZoneCode,\r\n\tCDCAPrevious.ReplacementCost,\r\n\tCDCAPrevious.FullGlassIndicator,\r\n\tCDCAPrevious.HistoricVehicleIndicator,\r\n\tWPTOL.PremiumTransactionID AS Wrk_PremiumTransactionID\r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL inner join CoverageDetailCommercialAuto CDCAPrevious\r\n\ton ( CDCAPrevious.PremiumTransactionID = WPTOL.PreviousPremiumTransactionID)\r\n\tinner join CoverageDetailCommercialAuto CDCAToUpdate\r\n\ton ( CDCAToUpdate.PremiumTransactionID = WPTOL.PremiumTransactionid)\r\n\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\t\tWPTOL .premiumtransactionid=pt.premiumtransactionid and PT.OffsetOnsetCode='Deprecated'\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\t  CDCAPrevious.VehicleGroupCode <> CDCAToUpdate.VehicleGroupCode\r\n\t  OR CDCAPrevious.RadiusOfOperation <> CDCAToUpdate.RadiusOfOperation\r\n\t  OR CDCAPrevious.SecondaryVehicleType <> CDCAToUpdate.SecondaryVehicleType\r\n\t  OR CDCAPrevious.UsedInDumpingIndicator <> CDCAToUpdate.UsedInDumpingIndicator\r\n\t  OR CDCAPrevious.VehicleYear <> CDCAToUpdate.VehicleYear\r\n\t  OR CDCAPrevious.StatedAmount <> CDCAToUpdate.StatedAmount\r\n\t  OR CDCAPrevious.CostNew <> CDCAToUpdate.CostNew\r\n\t  OR CDCAPrevious.VehicleDeleteDate <> CDCAToUpdate.VehicleDeleteDate\r\n\t  OR CDCAPrevious.VIN <> CDCAToUpdate.VIN\r\n\t  OR CDCAPrevious.VehicleMake <> CDCAToUpdate.VehicleMake\r\n\t  OR CDCAPrevious.VehicleModel <> CDCAToUpdate.VehicleModel\r\n\t  OR CDCAPrevious.VehicleNumber <> CDCAToUpdate.VehicleNumber\r\n\t  OR CDCAPrevious.CompositeRatedFlag <> CDCAToUpdate.CompositeRatedFlag\r\n\t  OR CDCAPrevious.TerminalZoneCode <> CDCAToUpdate.TerminalZoneCode\r\n\t  OR CDCAPrevious.VehicleType <> CDCAToUpdate.VehicleType\r\n\t  OR CDCAPrevious.PIPBureauCoverageCode <> CDCAToUpdate.PIPBureauCoverageCode\r\n\t  OR CDCAPrevious.VehicleTypeSize <> CDCAToUpdate.VehicleTypeSize\r\n\t  OR CDCAPrevious.BusinessUseClass <> CDCAToUpdate.BusinessUseClass\r\n\t  OR CDCAPrevious.SecondaryClass <> CDCAToUpdate.SecondaryClass\r\n\t  OR CDCAPrevious.FleetType <> CDCAToUpdate.FleetType\r\n\t  OR CDCAPrevious.SecondaryClassGroup <> CDCAToUpdate.SecondaryClassGroup\r\n\t  OR CDCAPrevious.RetroactiveDate <> CDCAToUpdate.RetroactiveDate\r\n\t  OR CDCAPrevious.IncludeUIM <> CDCAToUpdate.IncludeUIM\r\n\t  OR CDCAPrevious.CoordinationOfBenefits <> CDCAToUpdate.CoordinationOfBenefits\r\n\t  OR CDCAPrevious.MedicalExpensesOption <>  CDCAToUpdate.MedicalExpensesOption \r\n\t  OR CDCAPrevious.CoveredByWorkersCompensationFlag <> CDCAToUpdate.CoveredByWorkersCompensationFlag\r\n\t  OR CDCAPrevious.SubjectToNoFault <> CDCAToUpdate.SubjectToNoFault\r\n\t  OR CDCAPrevious.AdditionalLimitKS <> CDCAToUpdate.AdditionalLimitKS\r\n\t  OR CDCAPrevious.AdditionalLimitKY <> CDCAToUpdate.AdditionalLimitKY\r\n\t  OR CDCAPrevious.AdditionalLimitMN <> CDCAToUpdate.AdditionalLimitMN\r\n\t  --added null check to make sure attribute is being offset with the correct value\r\n\t  OR ISNULL(CDCAPrevious.RatingZoneCode, 'N/A') <> CDCAToUpdate.RatingZoneCode\r\n\t  OR ISNULL(CDCAPrevious.ReplacementCost, 0) <> CDCAToUpdate.ReplacementCost\r\n\t  OR ISNULL(CDCAPrevious.FullGlassIndicator, 0) <> CDCAToUpdate.FullGlassIndicator\r\n\t  OR ISNULL(CDCAPrevious.HistoricVehicleIndicator, 0) <> CDCAToUpdate.HistoricVehicleIndicator\r\n\t  )\n),\nEXP_Coveragedetailauto_Deprecated AS (\n\tSELECT\n\tWrk_PremiumTransactionID,\n\tSYSDATE AS o_ModifiedDate,\n\tVehicleGroupCode,\n\tRadiusOfOperation,\n\tSecondaryVehicleType,\n\tUsedInDumpingIndicator,\n\tVehicleYear,\n\tStatedAmount,\n\tCostNew,\n\tVehicleDeleteDate,\n\tVIN,\n\tVehicleMake,\n\tVehicleModel,\n\tVehicleNumber,\n\tCompositeRatedFlag,\n\tTerminalZoneCode,\n\tVehicleType,\n\tPIPBureaucoverageCode,\n\tVehicleTypeSize,\n\tBusinessUseClass,\n\tSecondaryClass,\n\tFleetType,\n\tSecondaryClassGroup,\n\tRetroactiveDate,\n\tIncludeUIM,\n\tCoordinationOfBenefits,\n\tMedicalExpensesOption,\n\tCoveredByWorkersCompensationFlag,\n\t-- *INF*: IIF(ISNULL(CoordinationOfBenefits),'N/A',CoordinationOfBenefits)\n\tIFF(CoordinationOfBenefits IS NULL, 'N/A', CoordinationOfBenefits) AS o_CoordinationOfBenefits,\n\t-- *INF*: IIF(ISNULL(MedicalExpensesOption),'N/A',MedicalExpensesOption)\n\tIFF(MedicalExpensesOption IS NULL, 'N/A', MedicalExpensesOption) AS o_MedicalExpensesOption,\n\t-- *INF*: IIF(ISNULL(CoveredByWorkersCompensationFlag),0,IIF(CoveredByWorkersCompensationFlag='T',1,0))\n\tIFF(\n\t    CoveredByWorkersCompensationFlag IS NULL, 0,\n\t    IFF(\n\t        CoveredByWorkersCompensationFlag = 'T', 1, 0\n\t    )\n\t) AS o_CoveredByWorkersCompensationFlag,\n\tSubjectToNoFault,\n\tAdditionalLimitKS,\n\tAdditionalLimitKY,\n\tAdditionalLimitMN,\n\tRatingZoneCode,\n\t-- *INF*: IIF(ISNULL(RatingZoneCode),'N/A',TO_CHAR(RatingZoneCode))\n\tIFF(RatingZoneCode IS NULL, 'N/A', TO_CHAR(RatingZoneCode)) AS o_RatingZoneCode,\n\tReplacementCost,\n\t-- *INF*: IIF(ISNULL(ReplacementCost),0,IIF(ReplacementCost = 'T',1,0))\n\tIFF(ReplacementCost IS NULL, 0, IFF(\n\t        ReplacementCost = 'T', 1, 0\n\t    )) AS o_ReplacementCost,\n\tFullGlassIndicator,\n\t-- *INF*: IIF(ISNULL(FullGlassIndicator),0,IIF(FullGlassIndicator = 'T',1,0))\n\tIFF(FullGlassIndicator IS NULL, 0, IFF(\n\t        FullGlassIndicator = 'T', 1, 0\n\t    )) AS o_FullGlassIndicator,\n\tHistoricVehicleIndicator,\n\t-- *INF*: IIF(ISNULL(HistoricVehicleIndicator),0,IIF(HistoricVehicleIndicator= 'T',1,0))\n\tIFF(\n\t    HistoricVehicleIndicator IS NULL, 0,\n\t    IFF(\n\t        HistoricVehicleIndicator = 'T', 1, 0\n\t    )\n\t) AS o_HistoricVehicleIndicator\n\tFROM SQ_CoverageDetailCommercialAuto_Deprecated\n),\nUPD_Coveragedetailcommercialauto_Deprecated AS (\n\tSELECT\n\tWrk_PremiumTransactionID, \n\to_ModifiedDate AS ModifiedDate, \n\tVehicleGroupCode, \n\tRadiusOfOperation, \n\tSecondaryVehicleType, \n\tUsedInDumpingIndicator, \n\tVehicleYear, \n\tStatedAmount, \n\tCostNew, \n\tVehicleDeleteDate, \n\tVIN, \n\tVehicleMake, \n\tVehicleModel, \n\tVehicleNumber, \n\tCompositeRatedFlag, \n\tTerminalZoneCode, \n\tVehicleType, \n\tPIPBureaucoverageCode, \n\tVehicleTypeSize, \n\tBusinessUseClass, \n\tSecondaryClass, \n\tFleetType, \n\tSecondaryClassGroup, \n\tRetroactiveDate, \n\tIncludeUIM, \n\to_CoordinationOfBenefits AS CoordinationOfBenefits, \n\to_MedicalExpensesOption AS MedicalExpensesOption, \n\to_CoveredByWorkersCompensationFlag AS CoveredByWorkersCompensationFlag, \n\tSubjectToNoFault, \n\tAdditionalLimitKS, \n\tAdditionalLimitKY, \n\tAdditionalLimitMN, \n\to_RatingZoneCode AS RatingZoneCode, \n\to_ReplacementCost AS ReplacementCost, \n\to_FullGlassIndicator AS FullGlassIndicator, \n\to_HistoricVehicleIndicator AS HistoricVehicleIndicator\n\tFROM EXP_Coveragedetailauto_Deprecated\n),\nTGT_CoverageDetailCommercialAuto_Deprecated AS (\n\tMERGE INTO CoverageDetailCommercialAuto AS T\n\tUSING UPD_Coveragedetailcommercialauto_Deprecated AS S\n\tON T.PremiumTransactionID = S.Wrk_PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.VehicleGroupCode = S.VehicleGroupCode, T.RadiusOfOperation = S.RadiusOfOperation, T.SecondaryVehicleType = S.SecondaryVehicleType, T.UsedInDumpingIndicator = S.UsedInDumpingIndicator, T.VehicleYear = S.VehicleYear, T.StatedAmount = S.StatedAmount, T.CostNew = S.CostNew, T.VehicleDeleteDate = S.VehicleDeleteDate, T.VIN = S.VIN, T.VehicleMake = S.VehicleMake, T.VehicleModel = S.VehicleModel, T.VehicleNumber = S.VehicleNumber, T.CompositeRatedFlag = S.CompositeRatedFlag, T.TerminalZoneCode = S.TerminalZoneCode, T.VehicleType = S.VehicleType, T.PIPBureauCoverageCode = S.PIPBureaucoverageCode, T.RetroactiveDate = S.RetroactiveDate, T.VehicleTypeSize = S.VehicleTypeSize, T.BusinessUseClass = S.BusinessUseClass, T.SecondaryClass = S.SecondaryClass, T.FleetType = S.FleetType, T.SecondaryClassGroup = S.SecondaryClassGroup, T.IncludeUIM = S.IncludeUIM, T.CoordinationOfBenefits = S.CoordinationOfBenefits, T.MedicalExpensesOption = S.MedicalExpensesOption, T.CoveredByWorkersCompensationFlag = S.CoveredByWorkersCompensationFlag, T.SubjectToNoFault = S.SubjectToNoFault, T.AdditionalLimitKS = S.AdditionalLimitKS, T.AdditionalLimitKY = S.AdditionalLimitKY, T.AdditionalLimitMN = S.AdditionalLimitMN, T.RatingZoneCode = S.RatingZoneCode, T.ReplacementCost = S.ReplacementCost, T.FullGlassIndicator = S.FullGlassIndicator, T.HistoricVehicleIndicator = S.HistoricVehicleIndicator\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_STAGE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_IL": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}