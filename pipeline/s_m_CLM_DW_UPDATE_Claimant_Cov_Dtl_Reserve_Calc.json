{
    "name": "s_m_CLM_DW_UPDATE_Claimant_Cov_Dtl_Reserve_Calc",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_UPDATE_Claimant_Cov_Dtl_Reserve_Calc",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_claimant_cov_dl_rsrv_calc AS (\n\tSELECT\n\treserve_date,\n\tIN_claimant_cov_det_ak_id,\n\tIN_financial_type_code,\n\tIN_reserve_date,\n\tIN_reserve_date_type,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date_type\n\tFROM (\n\t\tSELECT \n\t\t\treserve_date,\n\t\t\tIN_claimant_cov_det_ak_id,\n\t\t\tIN_financial_type_code,\n\t\t\tIN_reserve_date,\n\t\t\tIN_reserve_date_type,\n\t\t\tclaimant_cov_det_ak_id,\n\t\t\tfinancial_type_code,\n\t\t\treserve_date_type\n\t\tFROM claimant_coverage_detail_reserve_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,financial_type_code,reserve_date,reserve_date_type ORDER BY reserve_date) = 1\n),\nSQ_claimant_coverage_detail_reserve_calculation_delete_reopens_recloses AS (\n\tSELECT claimant_coverage_detail_reserve_calculation.claimant_cov_det_reserve_calculation_id, claimant_coverage_detail_reserve_calculation.claimant_cov_det_reserve_calculation_ak_id, claimant_coverage_detail_reserve_calculation.claimant_cov_det_ak_id, claimant_coverage_detail_reserve_calculation.financial_type_code, claimant_coverage_detail_reserve_calculation.reserve_date, claimant_coverage_detail_reserve_calculation.reserve_date_type, claimant_coverage_detail_reserve_calculation.financial_type_status_code, claimant_coverage_detail_reserve_calculation.logical_flag, claimant_coverage_detail_reserve_calculation.crrnt_snpsht_flag, claimant_coverage_detail_reserve_calculation.audit_id, claimant_coverage_detail_reserve_calculation.eff_from_date, claimant_coverage_detail_reserve_calculation.eff_to_date, claimant_coverage_detail_reserve_calculation.source_sys_id, claimant_coverage_detail_reserve_calculation.created_date, claimant_coverage_detail_reserve_calculation.modified_date \r\n\tFROM\r\n\t claimant_coverage_detail_reserve_calculation\r\n\twhere claimant_coverage_detail_reserve_calculation.reserve_date_type != '1NOTICEONLY' AND\r\n\tclaimant_coverage_detail_reserve_calculation.created_date >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\tORDER BY claimant_coverage_detail_reserve_calculation.claimant_cov_det_ak_id,\r\n\tclaimant_coverage_detail_reserve_calculation.financial_type_code, \r\n\tclaimant_coverage_detail_reserve_calculation.reserve_date\n),\nRTR_delete_reopens_recloses AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date\n\tFROM SQ_claimant_coverage_detail_reserve_calculation_delete_reopens_recloses\n),\nRTR_delete_reopens_recloses_DELETE_REOPEN AS (SELECT * FROM RTR_delete_reopens_recloses WHERE reserve_date_type = '4REOPEN'),\nRTR_delete_reopens_recloses_DELETE_RECLOSED AS (SELECT * FROM RTR_delete_reopens_recloses WHERE reserve_date_type = \r\n'5CLOSEDAFTERREOPEN'),\nRTR_delete_reopens_recloses_UPDATE_REOPEN AS (SELECT * FROM RTR_delete_reopens_recloses WHERE TRUE),\nEXP_get_values AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date\n\tFROM RTR_delete_reopens_recloses_UPDATE_REOPEN\n),\nAGG_get_min_reserve_date AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tMIN(reserve_date) AS reserve_date_out\n\tFROM EXP_get_values\n\tGROUP BY claimant_cov_det_ak_id, financial_type_code\n),\nEXP_get_lookup_values AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tfinancial_type_code,\n\treserve_date_out,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id, financial_type_code, reserve_date_out, '2OPEN')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date_out, 'OPEN')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN.reserve_date AS V_reserve_date_open,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id,  financial_type_code, reserve_date_out, '3CLOSED')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date_out, 'CLOSED')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED.reserve_date AS V_reserve_date_closed,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id, financial_type_code, reserve_date_out, '4REOPEN')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date_out, 'REOPEN')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN.reserve_date AS V_reserve_date_reopen,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id, financial_type_code, reserve_date_out, '5CLOSEDAFTERREOPEN')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date_out, 'CLOSEDAFTERREOPEN')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN.reserve_date AS V_reserve_Date_reclosed,\n\t-- *INF*: IIF(ISNULL(V_reserve_date_open), IIF(NOT ISNULL(V_reserve_date_closed), 'INSERTOPEN'), 'NOCHANGE')\r\n\t-- \r\n\t-- --IIF(ISNULL(V_reserve_date_open), IIF(NOT ISNULL(V_reserve_date_closed),  'INSERTOPEN',  'NOCHANGE')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(V_reserve_date_open IS NULL, IFF(NOT V_reserve_date_closed IS NULL, 'INSERTOPEN'), 'NOCHANGE') AS V_flag,\n\tV_flag AS flag,\n\t-- *INF*: IIF(ISNULL(V_reserve_date_open), \r\n\t-- IIF(ISNULL(V_reserve_date_closed), reserve_date_out, V_reserve_date_closed), V_reserve_date_open)\n\tIFF(V_reserve_date_open IS NULL, IFF(V_reserve_date_closed IS NULL, reserve_date_out, V_reserve_date_closed), V_reserve_date_open) AS reserve_date_new,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date\n\tFROM AGG_get_min_reserve_date\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN.reserve_date = reserve_date_out\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_2OPEN.reserve_date_type = '2OPEN'\n\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED.reserve_date = reserve_date_out\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_3CLOSED.reserve_date_type = '3CLOSED'\n\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN.reserve_date = reserve_date_out\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_4REOPEN.reserve_date_type = '4REOPEN'\n\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN.reserve_date = reserve_date_out\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_out_5CLOSEDAFTERREOPEN.reserve_date_type = '5CLOSEDAFTERREOPEN'\n\n),\nFIL_insert_open AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tfinancial_type_code, \n\treserve_date_out, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tflag, \n\treserve_date_new, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_get_lookup_values\n\tWHERE flag= 'INSERTOPEN'\n),\nEXP_insert_missing_opens AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tfinancial_type_code,\n\treserve_date_out AS reserve_date,\n\t'2OPEN' AS reserve_date_type,\n\t'O' AS financial_type_status_code,\n\tflag,\n\t-1 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsource_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM FIL_insert_open\n),\nSEQ_Clmt_Cov_Dtl_Rsrv_Calc_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Clmt_Cov_Dtl_Rsrv_Calc_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaimant_coverage_detail_reserve_calculation_insert_open AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\tRESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_insert_missing_opens\n),\nEXP_find_extra_reopens AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id, financial_type_code, reserve_date, '2OPEN')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date, 'OPEN')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN.reserve_date AS v_Open_date,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id, financial_type_code, reserve_date, '3CLOSED')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date, 'OPEN')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date AS v_closed_date,\n\t-- *INF*: IIF(v_Open_date = reserve_date, 'DELETE',  IIF(ISNULL(v_Open_date) AND ISNULL(v_closed_date), 'UPDATE', 'NOCHANGE'))\r\n\t-- \r\n\t-- \n\tIFF(v_Open_date = reserve_date, 'DELETE', IFF(v_Open_date IS NULL AND v_closed_date IS NULL, 'UPDATE', 'NOCHANGE')) AS delete_flag\n\tFROM RTR_delete_reopens_recloses_DELETE_REOPEN\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN.reserve_date = reserve_date\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_2OPEN.reserve_date_type = '2OPEN'\n\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date = reserve_date\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date_type = '3CLOSED'\n\n),\nRTRTRANS AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tdelete_flag\n\tFROM EXP_find_extra_reopens\n),\nRTRTRANS_DELETE AS (SELECT * FROM RTRTRANS WHERE delete_flag = 'DELETE'),\nRTRTRANS_UPDATE AS (SELECT * FROM RTRTRANS WHERE delete_flag = 'UPDATE'),\nUPD_Delete_reopen AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tdelete_flag\n\tFROM RTRTRANS_DELETE\n),\nclaimant_coverage_detail_reserve_calculation_delete_reopen AS (\n\tDELETE FROM claimant_coverage_detail_reserve_calculation\n\tWHERE (claimant_cov_det_reserve_calculation_id) IN (SELECT  CLAIMANT_COV_DET_RESERVE_CALCULATION_ID FROM UPD_Delete_reopen)\n),\nEXP_update_reopens AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tfinancial_type_code,\n\treserve_date AS reserve_date_out,\n\t'2OPEN' AS reserve_date_type,\n\tfinancial_type_status_code,\n\t-2 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM RTRTRANS_UPDATE\n),\nUPD_reopens AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tfinancial_type_code, \n\treserve_date_out, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tflag, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_update_reopens\n),\nclaimant_coverage_detail_reserve_calculation_update_reopen AS (\n\tMERGE INTO claimant_coverage_detail_reserve_calculation AS T\n\tUSING UPD_reopens AS S\n\tON T.claimant_cov_det_reserve_calculation_id = S.claimant_cov_det_reserve_calculation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.reserve_date_type = S.reserve_date_type, T.logical_flag = S.logical_flag, T.modified_date = S.modified_date\n),\nEXP_find_extra_recloses AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DL_RSRV_CALC(claimant_cov_det_ak_id,  financial_type_code, reserve_date, '3CLOSED')\r\n\t-- \r\n\t-- --:LKP.LKP_CLMNT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id, claimant_cov_cause_of_loss, financial_type_code, reserve_date, 'CLOSED')\n\tLKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date AS v_Closed_date,\n\t-- *INF*: IIF(v_Closed_date = reserve_date OR(logical_flag = '100' AND v_Closed_date < reserve_date), 'DELETE',  'NOCHANGE')\r\n\t-- \r\n\t-- \n\tIFF(v_Closed_date = reserve_date OR ( logical_flag = '100' AND v_Closed_date < reserve_date ), 'DELETE', 'NOCHANGE') AS delete_flag\n\tFROM RTR_delete_reopens_recloses_DELETE_RECLOSED\n\tLEFT JOIN LKP_CLAIMANT_COV_DL_RSRV_CALC LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED\n\tON LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date = reserve_date\n\tAND LKP_CLAIMANT_COV_DL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_3CLOSED.reserve_date_type = '3CLOSED'\n\n),\nFIL_recloses AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tdelete_flag\n\tFROM EXP_find_extra_recloses\n\tWHERE delete_flag = 'DELETE'\n),\nUPD_delete_reclose AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tdelete_flag\n\tFROM FIL_recloses\n),\nclaimant_coverage_detail_reserve_calculation_delete_reclosed AS (\n\tDELETE FROM claimant_coverage_detail_reserve_calculation\n\tWHERE (claimant_cov_det_reserve_calculation_id) IN (SELECT  CLAIMANT_COV_DET_RESERVE_CALCULATION_ID FROM UPD_delete_reclose)\n),\nSQ_claimant_coverage_detail_reserve_calculation_insert_closed_reclosed AS (\n\tSELECT claimant_coverage_detail_reserve_calculation.claimant_cov_det_reserve_calculation_id, claimant_coverage_detail_reserve_calculation.claimant_cov_det_reserve_calculation_ak_id, claimant_coverage_detail_reserve_calculation.claimant_cov_det_ak_id, claimant_coverage_detail_reserve_calculation.financial_type_code, claimant_coverage_detail_reserve_calculation.reserve_date, claimant_coverage_detail_reserve_calculation.reserve_date_type, claimant_coverage_detail_reserve_calculation.financial_type_status_code, claimant_coverage_detail_reserve_calculation.logical_flag, claimant_coverage_detail_reserve_calculation.crrnt_snpsht_flag, claimant_coverage_detail_reserve_calculation.audit_id, claimant_coverage_detail_reserve_calculation.eff_from_date, claimant_coverage_detail_reserve_calculation.eff_to_date, claimant_coverage_detail_reserve_calculation.source_sys_id, claimant_coverage_detail_reserve_calculation.created_date, claimant_coverage_detail_reserve_calculation.modified_date \r\n\tFROM\r\n\t claimant_coverage_detail_reserve_calculation\r\n\tWHERE claimant_coverage_detail_reserve_calculation.reserve_date_type != '1NOTICEONLY' \r\n\tAND claimant_coverage_detail_reserve_calculation.created_date >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\tORDER BY claimant_coverage_detail_reserve_calculation.claimant_cov_det_ak_id,\r\n\tclaimant_coverage_detail_reserve_calculation.financial_type_code, \r\n\tclaimant_coverage_detail_reserve_calculation.reserve_date, \r\n\tclaimant_coverage_detail_reserve_calculation.reserve_date_type\n),\nEXP_determine_insert AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\t-- *INF*: IIF(reserve_date_type = '4REOPEN', IIF(claimant_cov_det_ak_id = v_ak_id AND claimant_cov_cause_of_loss = V_prev_row_claimant_cov_cause_of_loss  AND claimant_cov_reserve_ctgry = v_prev_row_claimant_cov_reserve_ctgry AND financial_type_code = v_prev_row_financial_type_code, IIF(v_prev_row_reserve_date_type = '2OPEN', 'INSERT_CLOSED', IIF(v_prev_row_reserve_date_type = '4REOPEN', 'INSERT_RECLOSED', 'NOCHANGE')), 'NOCHANGE'), 'NOCHANGE')\n\tIFF(reserve_date_type = '4REOPEN', IFF(claimant_cov_det_ak_id = v_ak_id AND claimant_cov_cause_of_loss = V_prev_row_claimant_cov_cause_of_loss AND claimant_cov_reserve_ctgry = v_prev_row_claimant_cov_reserve_ctgry AND financial_type_code = v_prev_row_financial_type_code, IFF(v_prev_row_reserve_date_type = '2OPEN', 'INSERT_CLOSED', IFF(v_prev_row_reserve_date_type = '4REOPEN', 'INSERT_RECLOSED', 'NOCHANGE')), 'NOCHANGE'), 'NOCHANGE') AS v_insert_flag,\n\tv_insert_flag AS insert_flag,\n\tv_prev_row_reserve_date AS v_prev_row_reserve_date_out,\n\tv_prev_row_reserve_date_out AS prev_row_reserve_date_out,\n\tclaimant_cov_det_ak_id AS v_ak_id,\n\tclaimant_cov_cause_of_loss AS V_prev_row_claimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry AS v_prev_row_claimant_cov_reserve_ctgry,\n\tfinancial_type_code AS v_prev_row_financial_type_code,\n\treserve_date AS v_prev_row_reserve_date,\n\treserve_date_type AS v_prev_row_reserve_date_type\n\tFROM SQ_claimant_coverage_detail_reserve_calculation_insert_closed_reclosed\n),\nFIL_no_change AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\tclaimant_cov_det_reserve_calculation_ak_id, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\treserve_date, \n\tprev_row_reserve_date_out, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tclaimant_cov_cause_of_loss, \n\tclaimant_cov_reserve_ctgry, \n\tinsert_flag, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_determine_insert\n\tWHERE IIF(insert_flag = 'NOCHANGE', FALSE, TRUE)\n),\nEXP_set_default_value AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_reserve_calculation_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\tprev_row_reserve_date_out,\n\tinsert_flag,\n\t-- *INF*: IIF(insert_flag = 'INSERT_CLOSED', '3CLOSED', IIF(insert_flag = 'INSERT_RECLOSED', '5CLOSEDAFTERREOPEN'))\r\n\t-- \r\n\t-- \n\tIFF(insert_flag = 'INSERT_CLOSED', '3CLOSED', IFF(insert_flag = 'INSERT_RECLOSED', '5CLOSEDAFTERREOPEN')) AS reserve_date_type,\n\t'C' AS financial_type_status_code,\n\tclaimant_cov_cause_of_loss,\n\tclaimant_cov_reserve_ctgry,\n\t-3 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tprev_row_reserve_date_out AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsource_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM FIL_no_change\n),\nclaimant_coverage_detail_reserve_calculation_insert_closed AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\tprev_row_reserve_date_out AS RESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_set_default_value\n),\nSQ_claimant_coverage_detail_reserve_calculation_update AS (\n\tSELECT a.claimant_cov_det_reserve_calculation_id, a.claimant_cov_det_ak_id, a.financial_type_code,  a.eff_from_date, a.eff_to_date, a.source_sys_id \r\n\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail_reserve_calculation a\r\n\twhere EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail_reserve_calculation b\r\n\tWHERE b.crrnt_snpsht_flag = 1\r\n\tAND a.claimant_cov_det_ak_id = b.claimant_cov_det_ak_id\r\n\tand a.source_sys_id = b.source_sys_id\r\n\tand a.financial_type_code = b.financial_type_code\r\n\tGROUP BY b.claimant_cov_det_ak_id, b.financial_type_code, b.source_sys_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY a.claimant_cov_det_ak_id, a.financial_type_code, a.source_sys_id,  a.eff_from_date  DESC, a.reserve_date_type DESC\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of eff_to_date='12/31/2100 23:59:59' and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\r\n\t\r\n\t--- In the order by clause we add reserve_date_type DESC because status of '2OPEN' and '3CLOSED' happens on same day for PMS data, the row with '3CLOSED' \r\n\t--- status should have a crrnt_snpsht_flag =1\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, claimant_cov_det_ak_id = v_PREV_ROW_claimant_cov_det_ak_id and source_sys_id = v_PREV_ROW_source_sys_id and financial_type_code = v_PREV_ROW_financial_type_code ,ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tclaimant_cov_det_ak_id = v_PREV_ROW_claimant_cov_det_ak_id AND source_sys_id = v_PREV_ROW_source_sys_id AND financial_type_code = v_PREV_ROW_financial_type_code, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaimant_cov_det_ak_id AS v_PREV_ROW_claimant_cov_det_ak_id,\n\tfinancial_type_code AS v_PREV_ROW_financial_type_code,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_Snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claimant_coverage_detail_reserve_calculation_update\n),\nFLT_Claimant_cov_dtl_rsrv_calc_Upd AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Claimant_cov_dtl_rsrv_calc AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM FLT_Claimant_cov_dtl_rsrv_calc_Upd\n),\nclmt_cov_dtl_rsrv_calc_update AS (\n\tMERGE INTO claimant_coverage_detail_reserve_calculation AS T\n\tUSING UPD_Claimant_cov_dtl_rsrv_calc AS S\n\tON T.claimant_cov_det_reserve_calculation_id = S.claimant_cov_det_reserve_calculation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_Snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246506"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905523"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604393"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:25"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:03"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}