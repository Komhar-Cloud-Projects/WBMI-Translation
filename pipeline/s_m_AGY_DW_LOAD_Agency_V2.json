{
    "name": "s_m_AGY_DW_LOAD_Agency_V2",
    "properties": {
        "activities": [
            {
                "name": "m_AGY_DW_LOAD_Agency_V2",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_AgencyODSStage AS (\n\tSELECT\n\t\tModifiedUserID,\n\t\tModifiedDate,\n\t\tAgencyID,\n\t\tAgencyCode,\n\t\tLegalName,\n\t\tDoingBusinessAsName,\n\t\tPrimaryPhoneNumber,\n\t\tPrimaryFaxNumber,\n\t\tPrimaryEmailAddress,\n\t\tStatusCode,\n\t\tStatusDescription,\n\t\tAppointedDate,\n\t\tTerminatedDate,\n\t\tSourceSystemID,\n\t\tCustomerCareStatus,\n\t\tFederalTaxID,\n\t\tProfitSharingGuaranteeFlag,\n\t\tLicensedIndicator,\n\t\tAbbreviatedName,\n\t\tAssignedStateCode,\n\t\tClosedDate\n\tFROM AgencyODSStage\n),\nLKP_RSMRelationship AS (\n\tSELECT\n\tin_AgencyCode,\n\tAgencyCode,\n\tAgencyID,\n\tAssociateID,\n\tWestBendAssociateID\n\tFROM (\n\t\tSELECT \n\t\t\tin_AgencyCode,\n\t\t\tAgencyCode,\n\t\t\tAgencyID,\n\t\t\tAssociateID,\n\t\t\tWestBendAssociateID\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.RegionalSalesManagerRelationshipStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode ORDER BY in_AgencyCode) = 1\n),\nLKP_SalesTerritoryRelationship AS (\n\tSELECT\n\tin_AgencyCode,\n\tAgencyCode,\n\tAgencyID,\n\tSalesTerritoryID,\n\tSalesTerritoryCode\n\tFROM (\n\t\tSELECT \n\t\t\tin_AgencyCode,\n\t\t\tAgencyCode,\n\t\t\tAgencyID,\n\t\t\tSalesTerritoryID,\n\t\t\tSalesTerritoryCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SalesTerritoryRelationshipStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode ORDER BY in_AgencyCode) = 1\n),\nEXP_CleanupData AS (\n\tSELECT\n\tSQ_AgencyODSStage.AgencyCode,\n\tSQ_AgencyODSStage.LegalName,\n\t-- *INF*: IIF(IsNull(LegalName), 'N/A', LegalName)\n\tIFF(LegalName IS NULL, 'N/A', LegalName) AS o_LegalName,\n\tSQ_AgencyODSStage.DoingBusinessAsName,\n\t-- *INF*: IIF(IsNull(DoingBusinessAsName), 'N/A', DoingBusinessAsName)\n\tIFF(DoingBusinessAsName IS NULL, 'N/A', DoingBusinessAsName) AS o_DoingBusinessAsName,\n\tSQ_AgencyODSStage.PrimaryPhoneNumber,\n\t-- *INF*: IIF(IsNull(PrimaryPhoneNumber), '000-000-0000', PrimaryPhoneNumber)\n\tIFF(PrimaryPhoneNumber IS NULL, '000-000-0000', PrimaryPhoneNumber) AS o_PrimaryPhoneNumber,\n\tSQ_AgencyODSStage.PrimaryFaxNumber,\n\t-- *INF*: IIF(IsNull(PrimaryFaxNumber), '000-000-0000', PrimaryFaxNumber)\n\tIFF(PrimaryFaxNumber IS NULL, '000-000-0000', PrimaryFaxNumber) AS o_PrimaryFaxNumber,\n\tSQ_AgencyODSStage.PrimaryEmailAddress,\n\t-- *INF*: IIF(IsNull(PrimaryEmailAddress), 'N/A', PrimaryEmailAddress)\n\tIFF(PrimaryEmailAddress IS NULL, 'N/A', PrimaryEmailAddress) AS o_PrimaryEmailAddress,\n\tSQ_AgencyODSStage.StatusCode,\n\t-- *INF*: IIF(IsNull(StatusCode), '?', StatusCode)\n\tIFF(StatusCode IS NULL, '?', StatusCode) AS o_StatusCode,\n\tSQ_AgencyODSStage.StatusDescription,\n\t-- *INF*: IIF(IsNull(StatusDescription), 'N/A', StatusDescription)\n\tIFF(StatusDescription IS NULL, 'N/A', StatusDescription) AS o_StatusDescription,\n\tSQ_AgencyODSStage.AppointedDate,\n\t-- *INF*: IIF(IsNull(AppointedDate), to_date('1900-01-01', 'YYYY-MM-DD'), AppointedDate)\n\tIFF(AppointedDate IS NULL, to_date('1900-01-01', 'YYYY-MM-DD'), AppointedDate) AS o_AppointedDate,\n\tSQ_AgencyODSStage.TerminatedDate,\n\t-- *INF*: IIF(IsNull(TerminatedDate), to_date('2999-12-31', 'YYYY-MM-DD'), TerminatedDate)\n\tIFF(TerminatedDate IS NULL, to_date('2999-12-31', 'YYYY-MM-DD'), TerminatedDate) AS o_TerminatedDate,\n\tSQ_AgencyODSStage.SourceSystemID,\n\tSQ_AgencyODSStage.CustomerCareStatus,\n\t-- *INF*: IIF(IsNull(CustomerCareStatus), 'N/A', CustomerCareStatus)\n\tIFF(CustomerCareStatus IS NULL, 'N/A', CustomerCareStatus) AS o_CustomerCareStatus,\n\tSQ_AgencyODSStage.FederalTaxID,\n\t-- *INF*: IIF(IsNull(FederalTaxID), 'N/A', FederalTaxID)\n\tIFF(FederalTaxID IS NULL, 'N/A', FederalTaxID) AS o_FederalTaxID,\n\tLKP_SalesTerritoryRelationship.SalesTerritoryCode AS lkp_SalesTerritoryCode,\n\tLKP_RSMRelationship.WestBendAssociateID AS lkp_WestBendAssociateID,\n\tSQ_AgencyODSStage.ProfitSharingGuaranteeFlag,\n\tSQ_AgencyODSStage.LicensedIndicator,\n\tSQ_AgencyODSStage.AbbreviatedName,\n\tSQ_AgencyODSStage.AssignedStateCode,\n\tSQ_AgencyODSStage.ClosedDate\n\tFROM SQ_AgencyODSStage\n\tLEFT JOIN LKP_RSMRelationship\n\tON LKP_RSMRelationship.AgencyCode = SQ_AgencyODSStage.AgencyCode\n\tLEFT JOIN LKP_SalesTerritoryRelationship\n\tON LKP_SalesTerritoryRelationship.AgencyCode = SQ_AgencyODSStage.AgencyCode\n),\nLKP_RegionalSalesManager AS (\n\tSELECT\n\tin_WestBendAssociateID,\n\tRegionalSalesManagerAKID,\n\tWestBendAssociateID\n\tFROM (\n\t\tSELECT \n\t\t\tin_WestBendAssociateID,\n\t\t\tRegionalSalesManagerAKID,\n\t\t\tWestBendAssociateID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RegionalSalesManager\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WestBendAssociateID ORDER BY in_WestBendAssociateID) = 1\n),\nLKP_SalesTerritoryAKID AS (\n\tSELECT\n\tin_SalesTerritoryCode,\n\tSalesTerritoryAKID,\n\tSalesTerritoryCode\n\tFROM (\n\t\tSELECT \n\t\t\tin_SalesTerritoryCode,\n\t\t\tSalesTerritoryAKID,\n\t\t\tSalesTerritoryCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SalesTerritory\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SalesTerritoryCode ORDER BY in_SalesTerritoryCode) = 1\n),\nEXP_GetAKIDs AS (\n\tSELECT\n\tEXP_CleanupData.AgencyCode,\n\tEXP_CleanupData.o_LegalName AS LegalName,\n\tEXP_CleanupData.o_DoingBusinessAsName AS DoingBusinessAsName,\n\tEXP_CleanupData.o_PrimaryPhoneNumber AS PrimaryPhoneNumber,\n\tEXP_CleanupData.o_PrimaryFaxNumber AS PrimaryFaxNumber,\n\tEXP_CleanupData.o_PrimaryEmailAddress AS PrimaryEmailAddress,\n\tEXP_CleanupData.o_StatusCode AS StatusCode,\n\tEXP_CleanupData.o_StatusDescription AS StatusDescription,\n\tEXP_CleanupData.o_AppointedDate AS AppointedDate,\n\tEXP_CleanupData.o_TerminatedDate AS TerminatedDate,\n\tEXP_CleanupData.SourceSystemID,\n\tEXP_CleanupData.o_CustomerCareStatus AS CustomerCareStatus,\n\tEXP_CleanupData.o_FederalTaxID AS FederalTaxID,\n\tLKP_SalesTerritoryAKID.SalesTerritoryAKID AS lkp_SalesTerritoryAKID,\n\t-- *INF*: IIF(IsNull(lkp_SalesTerritoryAKID), -1, lkp_SalesTerritoryAKID)\n\tIFF(lkp_SalesTerritoryAKID IS NULL, - 1, lkp_SalesTerritoryAKID) AS o_SalesTerritoryAKID,\n\tLKP_RegionalSalesManager.RegionalSalesManagerAKID AS lkp_RegionalSalesManagerAKID,\n\t-- *INF*: IIF(IsNull(lkp_RegionalSalesManagerAKID), -1, lkp_RegionalSalesManagerAKID)\n\tIFF(lkp_RegionalSalesManagerAKID IS NULL, - 1, lkp_RegionalSalesManagerAKID) AS o_RegionalSalesManagerAKID,\n\tEXP_CleanupData.ProfitSharingGuaranteeFlag AS in_ProfitSharingGuaranteeFlag,\n\t-- *INF*: IIF(ISNULL(in_ProfitSharingGuaranteeFlag),'0',in_ProfitSharingGuaranteeFlag)\n\tIFF(in_ProfitSharingGuaranteeFlag IS NULL, '0', in_ProfitSharingGuaranteeFlag) AS out_ProfitSharingGuaranteeFlag,\n\tEXP_CleanupData.LicensedIndicator AS in_LicensedIndicator,\n\t-- *INF*: IIF(ISNULL(in_LicensedIndicator),'0',in_LicensedIndicator)\n\tIFF(in_LicensedIndicator IS NULL, '0', in_LicensedIndicator) AS out_LicensedIndicator,\n\tEXP_CleanupData.AbbreviatedName AS in_AbbreviatedName,\n\t-- *INF*: IIF(ISNULL(in_AbbreviatedName),'N/A',in_AbbreviatedName)\n\tIFF(in_AbbreviatedName IS NULL, 'N/A', in_AbbreviatedName) AS out_AbbreviatedName,\n\tEXP_CleanupData.AssignedStateCode AS in_AssignedStateCode,\n\t-- *INF*: IIF(ISNULL(in_AssignedStateCode),'N/A',in_AssignedStateCode)\n\tIFF(in_AssignedStateCode IS NULL, 'N/A', in_AssignedStateCode) AS out_AssignedStateCode,\n\tEXP_CleanupData.ClosedDate\n\tFROM EXP_CleanupData\n\tLEFT JOIN LKP_RegionalSalesManager\n\tON LKP_RegionalSalesManager.WestBendAssociateID = EXP_CleanupData.lkp_WestBendAssociateID\n\tLEFT JOIN LKP_SalesTerritoryAKID\n\tON LKP_SalesTerritoryAKID.SalesTerritoryCode = EXP_CleanupData.lkp_SalesTerritoryCode\n),\nLKP_ExistingAgency AS (\n\tSELECT\n\tHashKey,\n\tAgencyAKID,\n\tClosedDate,\n\tAgencyCode\n\tFROM (\n\t\tSELECT \n\t\t\tHashKey,\n\t\t\tAgencyAKID,\n\t\t\tClosedDate,\n\t\t\tAgencyCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyCode ORDER BY HashKey) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_GetAKIDs.AgencyCode,\n\tEXP_GetAKIDs.LegalName,\n\tEXP_GetAKIDs.DoingBusinessAsName,\n\tEXP_GetAKIDs.PrimaryPhoneNumber,\n\tEXP_GetAKIDs.PrimaryFaxNumber,\n\tEXP_GetAKIDs.PrimaryEmailAddress,\n\tEXP_GetAKIDs.StatusCode,\n\tEXP_GetAKIDs.StatusDescription,\n\tEXP_GetAKIDs.AppointedDate,\n\tEXP_GetAKIDs.TerminatedDate,\n\tEXP_GetAKIDs.CustomerCareStatus,\n\tLKP_ExistingAgency.HashKey AS lkp_HashKey,\n\tLKP_ExistingAgency.AgencyAKID AS lkp_AgencyAKID,\n\tLKP_ExistingAgency.ClosedDate AS lkp_ClosedDate,\n\tEXP_GetAKIDs.o_SalesTerritoryAKID AS SalesTerritoryAKID,\n\tEXP_GetAKIDs.o_RegionalSalesManagerAKID AS RegionalSalesManagerAKID,\n\tEXP_GetAKIDs.FederalTaxID,\n\tEXP_GetAKIDs.out_ProfitSharingGuaranteeFlag AS ProfitSharingGuaranteeFlag,\n\tEXP_GetAKIDs.out_LicensedIndicator AS LicensedIndicator,\n\tEXP_GetAKIDs.out_AbbreviatedName AS AbbreviatedName,\n\tEXP_GetAKIDs.out_AssignedStateCode AS AssignedStateCode,\n\t-- *INF*: MD5(to_char(SalesTerritoryAKID) || '&' ||  to_char(RegionalSalesManagerAKID) || '&' ||  LegalName || '&' ||  DoingBusinessAsName || '&' ||  StatusCode || '&' ||  StatusDescription || '&' ||  to_char(AppointedDate) || '&' ||  to_char(TerminatedDate) || '&' ||  CustomerCareStatus || '&' ||  PrimaryPhoneNumber || '&' ||  PrimaryFaxNumber || '&' ||  PrimaryEmailAddress || '&' ||  FederalTaxID || '&' || to_char(ProfitSharingGuaranteeFlag) || '&' ||  to_char(LicensedIndicator) || '&' ||   AbbreviatedName || '&' ||   to_char(AssignedStateCode))\r\n\t-- \n\tMD5(to_char(SalesTerritoryAKID) || '&' || to_char(RegionalSalesManagerAKID) || '&' || LegalName || '&' || DoingBusinessAsName || '&' || StatusCode || '&' || StatusDescription || '&' || to_char(AppointedDate) || '&' || to_char(TerminatedDate) || '&' || CustomerCareStatus || '&' || PrimaryPhoneNumber || '&' || PrimaryFaxNumber || '&' || PrimaryEmailAddress || '&' || FederalTaxID || '&' || to_char(ProfitSharingGuaranteeFlag) || '&' || to_char(LicensedIndicator) || '&' || AbbreviatedName || '&' || to_char(AssignedStateCode)) AS v_NewHashKey,\n\tEXP_GetAKIDs.ClosedDate,\n\tv_NewHashKey AS o_NewHashKey,\n\t-- *INF*: IIF(IsNull(lkp_AgencyAKID), 'NEW', \r\n\t-- IIF((lkp_HashKey <> v_NewHashKey or lkp_ClosedDate<>ClosedDate), 'UPDATE' ,\r\n\t-- 'NOCHANGE'))\n\tIFF(lkp_AgencyAKID IS NULL, 'NEW', IFF(( lkp_HashKey <> v_NewHashKey OR lkp_ClosedDate <> ClosedDate ), 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: iif(v_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveFromDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveToDate,\n\tEXP_GetAKIDs.SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM EXP_GetAKIDs\n\tLEFT JOIN LKP_ExistingAgency\n\tON LKP_ExistingAgency.AgencyCode = EXP_GetAKIDs.AgencyCode\n),\nFIL_insert AS (\n\tSELECT\n\tlkp_AgencyAKID, \n\tchanged_flag AS ChangedFlag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveFromDate, \n\tEffectiveToDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\to_NewHashKey AS HashKey, \n\tSalesTerritoryAKID, \n\tRegionalSalesManagerAKID, \n\tAgencyCode, \n\tLegalName, \n\tDoingBusinessAsName, \n\tPrimaryPhoneNumber, \n\tPrimaryFaxNumber, \n\tPrimaryEmailAddress, \n\tStatusCode, \n\tStatusDescription, \n\tAppointedDate, \n\tTerminatedDate, \n\tCustomerCareStatus AS CustomerCareStatus1, \n\tFederalTaxID, \n\tProfitSharingGuaranteeFlag, \n\tLicensedIndicator, \n\tAbbreviatedName, \n\tAssignedStateCode, \n\tClosedDate\n\tFROM EXP_Detect_Changes\n\tWHERE ChangedFlag='NEW'or ChangedFlag='UPDATE'\n),\nSEQ_V2Agency_AKID AS (\n\tCREATE SEQUENCE SEQ_V2Agency_AKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Assign_AKID AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveFromDate AS EffectiveDate,\n\tEffectiveToDate AS ExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tHashKey,\n\tlkp_AgencyAKID,\n\tSEQ_V2Agency_AKID.NEXTVAL,\n\t-- *INF*: iif(isnull(lkp_AgencyAKID),NEXTVAL,lkp_AgencyAKID)\n\tIFF(lkp_AgencyAKID IS NULL, NEXTVAL, lkp_AgencyAKID) AS o_AgencyAKID,\n\tSalesTerritoryAKID,\n\tRegionalSalesManagerAKID,\n\tAgencyCode,\n\tLegalName,\n\tDoingBusinessAsName,\n\tPrimaryPhoneNumber,\n\tPrimaryFaxNumber,\n\tPrimaryEmailAddress,\n\tStatusCode,\n\tStatusDescription,\n\tAppointedDate,\n\tTerminatedDate,\n\tCustomerCareStatus1,\n\tFederalTaxID,\n\tProfitSharingGuaranteeFlag,\n\tLicensedIndicator,\n\tAbbreviatedName,\n\tAssignedStateCode,\n\tClosedDate\n\tFROM FIL_insert\n),\nAgency_InsertNew AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, HashKey, AgencyAKID, SalesTerritoryAKID, RegionalSalesManagerAKID, AgencyCode, LegalName, DoingBusinessAsName, PrimaryPhoneNumber, PrimaryFaxNumber, PrimaryEmailAddress, StatusCode, StatusDescription, AppointedDate, TerminatedDate, CustomerCareStatus, FederalTaxId, ProfitSharingGuaranteeFlag, LicensedIndicator, AbbreviatedName, AssignedStateCode, ClosedDate)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tHASHKEY, \n\to_AgencyAKID AS AGENCYAKID, \n\tSALESTERRITORYAKID, \n\tREGIONALSALESMANAGERAKID, \n\tAGENCYCODE, \n\tLEGALNAME, \n\tDOINGBUSINESSASNAME, \n\tPRIMARYPHONENUMBER, \n\tPRIMARYFAXNUMBER, \n\tPRIMARYEMAILADDRESS, \n\tSTATUSCODE, \n\tSTATUSDESCRIPTION, \n\tAPPOINTEDDATE, \n\tTERMINATEDDATE, \n\tCustomerCareStatus1 AS CUSTOMERCARESTATUS, \n\tFederalTaxID AS FEDERALTAXID, \n\tPROFITSHARINGGUARANTEEFLAG, \n\tLICENSEDINDICATOR, \n\tABBREVIATEDNAME, \n\tASSIGNEDSTATECODE, \n\tCLOSEDDATE\n\tFROM EXP_Assign_AKID\n),\nSQ_Agency_V2 AS (\n\tSELECT \r\n\t\ta.AgencyID, \r\n\t\ta.EffectiveDate,\r\n\t\ta.ExpirationDate, \r\n\t\ta.AgencyAKID\r\n\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency a\r\n\tWHERE  a.AgencyAKID  IN\r\n\t\t( SELECT AgencyAKID  FROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency\r\n\t\tWHERE CurrentSnapshotFlag = 1 GROUP BY AgencyAKID HAVING count(*) > 1) \r\n\tORDER BY a.AgencyAKID, a.EffectiveDate DESC\r\n\t\r\n\t\r\n\t\r\n\t--IN Subquery exists to pick AK ID column values that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag \r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tAgencyID,\n\tEffectiveDate AS EffectiveFromDate,\n\tExpirationDate AS OriginalEffectiveToDate,\n\tAgencyAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- AgencyAKID = v_prev_AKID , ADD_TO_DATE(v_prev_EffectiveFromDate,'SS',-1),\r\n\t-- OriginalEffectiveToDate)\n\tDECODE(TRUE,\n\t\tAgencyAKID = v_prev_AKID, ADD_TO_DATE(v_prev_EffectiveFromDate, 'SS', - 1),\n\t\tOriginalEffectiveToDate) AS v_EffectiveToDate,\n\tv_EffectiveToDate AS o_EffectiveToDate,\n\tAgencyAKID AS v_prev_AKID,\n\tEffectiveFromDate AS v_prev_EffectiveFromDate,\n\t0 AS CurrentSnapshotFlag,\n\tSYSDATE AS ModifiedDate\n\tFROM SQ_Agency_V2\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tAgencyID, \n\tOriginalEffectiveToDate, \n\to_EffectiveToDate AS NewEffectiveToDate, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM EXP_Lag_eff_from_date\n\tWHERE OriginalEffectiveToDate != NewEffectiveToDate\n),\nUPD_OldRecord AS (\n\tSELECT\n\tAgencyID, \n\tNewEffectiveToDate AS EffectiveToDate, \n\tCurrentSnapshotFlag, \n\tModifiedDate\n\tFROM FIL_FirstRowInAKGroup\n),\nAgency_Expire AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Agency AS T\n\tUSING UPD_OldRecord AS S\n\tON T.AgencyID = S.AgencyID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.EffectiveToDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246490"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905469"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603188"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:19:20"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:18:59"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCESYSTEMID": {
                "type": "string",
                "defaultValue": "AgencyODS"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            }
        },
        "folder": {
            "name": "Agency DataWarehouse/"
        },
        "annotations": []
    }
}