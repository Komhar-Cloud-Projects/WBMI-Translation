{
    "name": "m_CLM_DM_LOAD_Claim_Party_Role_dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Claim_Party_Role_dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_claim_party_occurrence AS (\n\tSELECT \r\n\tCPO.claim_occurrence_ak_id, \r\n\tCPO.claim_party_role_code, \r\n\tCPO.claim_party_ak_id, \r\n\tCPO.eff_from_date, \r\n\tCPO.preferred_contact_method \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO \r\n\tWHERE (created_date >= '@{pipeline().parameters.SELECTION_START_TS}' OR modified_date >= '@{pipeline().parameters.SELECTION_START_TS}')\n),\nEXP_default AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_party_role_code,\n\t-- *INF*: DECODE(LTRIM(RTRIM(claim_party_role_code)), 'CMT','CLMT',\r\n\t--                                                                                                           'DRV','DRVR',\r\n\t--                                                                                                           'HS','HOSP',\r\n\t--                                                                                                           'PS','PSTH',\r\n\t--                                                                                                            'UNL','UNSP',   \r\n\t--  \t\t\t\tLTRIM(RTRIM(claim_party_role_code)))\r\n\t-- \r\n\t-- \r\n\t-- --IIF(LTRIM(RTRIM(claim_party_role_code))='CMT','CLMT',LTRIM(RTRIM(claim_party_role_code)))\n\tDECODE(LTRIM(RTRIM(claim_party_role_code)),\n\t'CMT', 'CLMT',\n\t'DRV', 'DRVR',\n\t'HS', 'HOSP',\n\t'PS', 'PSTH',\n\t'UNL', 'UNSP',\n\tLTRIM(RTRIM(claim_party_role_code))) AS v_claim_party_role_code,\n\tv_claim_party_role_code AS claim_party_role_code_out,\n\tclaim_party_ak_id AS edw_claim_party_ak_id,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\teff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59' , 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\tpreferred_contact_method\n\tFROM SQ_claim_party_occurrence\n),\nLKP_sup_claim_party_role_code AS (\n\tSELECT\n\tclaim_party_role_descript,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT \r\n\t\tA.claim_party_role_descript as claim_party_role_descript, \r\n\t\tLTRIM(RTRIM(A.claim_party_role_code)) as claim_party_role_code \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_claim_party_role_code A\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_role_code ORDER BY claim_party_role_descript) = 1\n),\nEXP_Lookup_Values AS (\n\tSELECT\n\tEXP_default.claim_occurrence_ak_id,\n\tEXP_default.claim_party_role_code_out,\n\tLKP_sup_claim_party_role_code.claim_party_role_descript,\n\t-- *INF*: IIF(ISNULL(claim_party_role_descript),'N/A',claim_party_role_descript)\n\tIFF(claim_party_role_descript IS NULL, 'N/A', claim_party_role_descript) AS claim_party_role_descript_Out,\n\tEXP_default.edw_claim_party_ak_id,\n\tEXP_default.crrnt_snpsht_flag,\n\tEXP_default.audit_id,\n\tEXP_default.eff_from_date,\n\tEXP_default.eff_to_date,\n\tEXP_default.created_date,\n\tEXP_default.modified_date,\n\tEXP_default.preferred_contact_method\n\tFROM EXP_default\n\tLEFT JOIN LKP_sup_claim_party_role_code\n\tON LKP_sup_claim_party_role_code.claim_party_role_code = EXP_default.claim_party_role_code_out\n),\nLKP_Claim_Party_Role_Dim AS (\n\tSELECT\n\tclaim_party_role_dim_id,\n\tpreferred_contact_method,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_ak_id,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT \r\n\t\tA.claim_party_role_dim_id as claim_party_role_dim_id, \r\n\t\tA.edw_claim_occurrence_ak_id as edw_claim_occurrence_ak_id, \r\n\t\tA.edw_claim_party_ak_id as edw_claim_party_ak_id, \r\n\t\tLTRIM(RTRIM(A.claim_party_role_code)) as claim_party_role_code, \r\n\t\tA.preferred_contact_method as preferred_contact_method \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_role_dim A\r\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id,edw_claim_party_ak_id,claim_party_role_code ORDER BY claim_party_role_dim_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Claim_Party_Role_Dim.claim_party_role_dim_id AS LKP_claim_party_role_dim_id,\n\tLKP_Claim_Party_Role_Dim.preferred_contact_method AS LKP_preferred_contact_method,\n\tEXP_Lookup_Values.claim_occurrence_ak_id,\n\tEXP_Lookup_Values.edw_claim_party_ak_id,\n\tEXP_Lookup_Values.claim_party_role_code_out,\n\tEXP_Lookup_Values.claim_party_role_descript_Out,\n\tEXP_Lookup_Values.crrnt_snpsht_flag,\n\tEXP_Lookup_Values.audit_id,\n\tEXP_Lookup_Values.eff_from_date,\n\tEXP_Lookup_Values.eff_to_date,\n\tEXP_Lookup_Values.created_date,\n\tEXP_Lookup_Values.modified_date,\n\tEXP_Lookup_Values.preferred_contact_method,\n\t-- *INF*: IIF(ISNULL(LKP_claim_party_role_dim_id),\r\n\t-- \t'NEW',\r\n\t-- \tIIF(ltrim(rtrim(LKP_preferred_contact_method)) <> ltrim(rtrim(preferred_contact_method)), \r\n\t-- \t\t\t'UPDATE',\r\n\t-- \t\t'NOCHANGE'))\n\tIFF(LKP_claim_party_role_dim_id IS NULL, 'NEW', IFF(ltrim(rtrim(LKP_preferred_contact_method)) <> ltrim(rtrim(preferred_contact_method)), 'UPDATE', 'NOCHANGE')) AS v_ChangeFlag,\n\tv_ChangeFlag AS o_ChangeFlag\n\tFROM EXP_Lookup_Values\n\tLEFT JOIN LKP_Claim_Party_Role_Dim\n\tON LKP_Claim_Party_Role_Dim.edw_claim_occurrence_ak_id = EXP_Lookup_Values.claim_occurrence_ak_id AND LKP_Claim_Party_Role_Dim.edw_claim_party_ak_id = EXP_Lookup_Values.edw_claim_party_ak_id AND LKP_Claim_Party_Role_Dim.claim_party_role_code = EXP_Lookup_Values.claim_party_role_code_out\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tLKP_claim_party_role_dim_id AS claim_party_role_dim_id,\n\tclaim_occurrence_ak_id AS edw_claim_occurrence_ak_id,\n\tedw_claim_party_ak_id,\n\tclaim_party_role_code_out AS claim_party_role_code,\n\tclaim_party_role_descript_Out AS claim_party_role_descript,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date,\n\tpreferred_contact_method,\n\to_ChangeFlag\n\tFROM EXP_Detect_Changes\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE o_ChangeFlag='NEW'),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE o_ChangeFlag='UPDATE'),\nUPD_Insert AS (\n\tSELECT\n\tedw_claim_occurrence_ak_id AS edw_claim_occurrence_ak_id1, \n\tedw_claim_party_ak_id, \n\tclaim_party_role_code AS claim_party_role_code1, \n\tclaim_party_role_descript AS claim_party_role_descript1, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag1, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tcreated_date AS created_date1, \n\tmodified_date AS modified_date1, \n\tpreferred_contact_method AS preferred_contact_method1\n\tFROM RTR_INSERT_UPDATE_INSERT\n),\nclaim_party_role_dim_insert AS (\n\tINSERT INTO claim_party_role_dim\n\t(edw_claim_occurrence_ak_id, edw_claim_party_ak_id, claim_party_role_code, claim_party_role_code_descript, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date, preferred_contact_method)\n\tSELECT \n\tedw_claim_occurrence_ak_id1 AS EDW_CLAIM_OCCURRENCE_AK_ID, \n\tEDW_CLAIM_PARTY_AK_ID, \n\tclaim_party_role_code1 AS CLAIM_PARTY_ROLE_CODE, \n\tclaim_party_role_descript1 AS CLAIM_PARTY_ROLE_CODE_DESCRIPT, \n\tcrrnt_snpsht_flag1 AS CRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\teff_from_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tcreated_date1 AS CREATED_DATE, \n\tmodified_date1 AS MODIFIED_DATE, \n\tpreferred_contact_method1 AS PREFERRED_CONTACT_METHOD\n\tFROM UPD_Insert\n),\nUPD_update AS (\n\tSELECT\n\tclaim_party_role_dim_id AS claim_party_role_dim_id2, \n\tedw_claim_occurrence_ak_id AS edw_claim_occurrence_ak_id2, \n\tedw_claim_party_ak_id, \n\tclaim_party_role_code AS claim_party_role_code2, \n\tclaim_party_role_descript AS claim_party_role_descript2, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag2, \n\taudit_id AS audit_id2, \n\teff_from_date AS eff_from_date2, \n\teff_to_date AS eff_to_date2, \n\tcreated_date AS created_date2, \n\tmodified_date AS modified_date2, \n\tpreferred_contact_method AS preferred_contact_method3\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nclaim_party_role_dim_update AS (\n\tMERGE INTO claim_party_role_dim AS T\n\tUSING UPD_update AS S\n\tON T.claim_party_role_dim_id = S.claim_party_role_dim_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.edw_claim_occurrence_ak_id = S.edw_claim_occurrence_ak_id2, T.edw_claim_party_ak_id = S.edw_claim_party_ak_id, T.claim_party_role_code = S.claim_party_role_code2, T.claim_party_role_code_descript = S.claim_party_role_descript2, T.crrnt_snpsht_flag = S.crrnt_snpsht_flag2, T.audit_id = S.audit_id2, T.eff_from_date = S.eff_from_date2, T.eff_to_date = S.eff_to_date2, T.modified_date = S.modified_date2, T.preferred_contact_method = S.preferred_contact_method3\n),\nSQ_claim_party_role_dim AS (\n\tSELECT A.claim_party_role_dim_id, A.edw_claim_occurrence_ak_id, A.edw_claim_party_ak_id, A.claim_party_role_code, A.eff_from_date, A.eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_role_dim A\r\n\tWHERE \r\n\tEXISTS\r\n\t(\r\n\tSELECT  1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_role_dim B\r\n\tWHERE CRRNT_SNPSHT_FLAG = 1 AND \r\n\tA.edw_claim_occurrence_ak_id =B.edw_claim_occurrence_ak_id AND\r\n\tA.edw_claim_party_ak_id = B.edw_claim_party_ak_id AND\r\n\tA.claim_party_role_code = B.claim_party_role_code\r\n\tGROUP BY B.edw_claim_occurrence_ak_id, B.edw_claim_party_ak_id, B.claim_party_role_code  \r\n\tHAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY  A.edw_claim_occurrence_ak_id, A.edw_claim_party_ak_id, A.claim_party_role_code, A.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_party_role_dim_id,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_ak_id,\n\tclaim_party_role_code,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tedw_claim_occurrence_ak_id = v_PREV_ROW_edw_claim_occurrence_ak_id AND \r\n\t--       edw_claim_party_ak_id = v_PREV_ROW_edw_claim_party_ak_id AND\r\n\t--        claim_party_role_code = v_PREV_ROW_claim_party_role_code\r\n\t--        , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tedw_claim_occurrence_ak_id = v_PREV_ROW_edw_claim_occurrence_ak_id AND edw_claim_party_ak_id = v_PREV_ROW_edw_claim_party_ak_id AND claim_party_role_code = v_PREV_ROW_claim_party_role_code, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tedw_claim_occurrence_ak_id AS v_PREV_ROW_edw_claim_occurrence_ak_id,\n\tclaim_party_role_code AS v_PREV_ROW_claim_party_role_code,\n\tedw_claim_party_ak_id AS v_PREV_ROW_edw_claim_party_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_claim_party_role_dim\n),\nFILTRANS AS (\n\tSELECT\n\tclaim_party_role_dim_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\n),\nUPD_EFF_TO_DATE AS (\n\tSELECT\n\tclaim_party_role_dim_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FILTRANS\n),\nclaim_party_role_dim_expire AS (\n\tMERGE INTO claim_party_role_dim AS T\n\tUSING UPD_EFF_TO_DATE AS S\n\tON T.claim_party_role_dim_id = S.claim_party_role_dim_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246509"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905529"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604469"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:45"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:48"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}