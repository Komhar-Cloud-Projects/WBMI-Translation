{
    "name": "s_m_DIM_Load_PartyDim",
    "properties": {
        "activities": [
            {
                "name": "m_DIM_Load_PartyDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Party AS (\n\tSELECT\n\t\tPartyId,\n\t\tCreatedDate,\n\t\tPartyAKId,\n\t\tPartyNumber,\n\t\tPrimaryPhoneNumber,\n\t\tOriginalPolicyInceptionDate,\n\t\tDeletedIndicator,\n\t\tStatusCode,\n\t\tName,\n\t\tDoingBusinessAs,\n\t\tLegalEntityTypeCode,\n\t\tSICCode AS SicCode,\n\t\tSICCodeTitle AS SicCodeTitle,\n\t\tNAICSCode AS NaicsCode,\n\t\tNAICSCodeTitle AS NaicsCodeTitle,\n\t\tPrefixTitleCode,\n\t\tFirstName,\n\t\tMiddleName,\n\t\tLastName,\n\t\tAssociationCode\n\tFROM Party\n\tWHERE CreatedDate > '@{pipeline().parameters.SELECTION_START_TS}' @{pipeline().parameters.WHERE_CLAUSE}\n),\nLKP_Association AS (\n\tSELECT\n\tAssociationDescription,\n\tAssociationCode\n\tFROM (\n\t\tSELECT \n\t\t\tAssociationDescription,\n\t\t\tAssociationCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.Association\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AssociationCode ORDER BY AssociationDescription) = 1\n),\nLKP_ExistingPartyDim AS (\n\tSELECT\n\tEDWPartyPKID,\n\tEDWPartyAKID\n\tFROM (\n\t\tSELECT \n\t\t\tEDWPartyPKID,\n\t\t\tEDWPartyAKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPartyAKID ORDER BY EDWPartyPKID) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_ExistingPartyDim.EDWPartyPKID AS lkp_EDWPartyPKID,\n\tSQ_Party.PartyId AS i_PartyId,\n\tSQ_Party.PartyAKId AS i_PartyAKId,\n\tSQ_Party.PartyNumber AS i_PartyNumber,\n\tSQ_Party.PrimaryPhoneNumber AS i_PrimaryPhoneNumber,\n\tSQ_Party.OriginalPolicyInceptionDate AS i_OriginalPolicyInceptionDate,\n\tSQ_Party.DeletedIndicator AS i_DeletedIndicator,\n\tSQ_Party.StatusCode AS i_StatusCode,\n\tSQ_Party.Name AS i_Name,\n\tSQ_Party.DoingBusinessAs AS i_DoingBusinessAs,\n\tSQ_Party.LegalEntityTypeCode AS i_LegalEntityTypeCode,\n\tSQ_Party.SicCode AS i_SicCode,\n\tSQ_Party.SicCodeTitle AS i_SicCodeTitle,\n\tSQ_Party.NaicsCode AS i_NaicsCode,\n\tSQ_Party.NaicsCodeTitle AS i_NaicsCodeTitle,\n\tSQ_Party.PrefixTitleCode AS i_PrefixTitleCode,\n\tSQ_Party.FirstName AS i_FirstName,\n\tSQ_Party.MiddleName AS i_MiddleName,\n\tSQ_Party.LastName AS i_LastName,\n\tSQ_Party.AssociationCode AS i_AssociationCode,\n\tLKP_Association.AssociationDescription AS i_AssociationDescription,\n\t-- *INF*: IIF(ISNULL(lkp_EDWPartyPKID), 'NEW', 'NOCHANGE')\n\tIFF(lkp_EDWPartyPKID IS NULL, 'NEW', 'NOCHANGE') AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: IIF(v_changed_flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(\n\t    v_changed_flag = 'NEW', TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\ti_PartyId AS PartyId,\n\t-- *INF*: IIF( ISNULL(i_PartyNumber ), 'N/A', i_PartyNumber )\n\tIFF(i_PartyNumber IS NULL, 'N/A', i_PartyNumber) AS PartyNumber,\n\t-- *INF*: IIF( ISNULL(i_PartyAKId), -1, i_PartyAKId)\n\tIFF(i_PartyAKId IS NULL, - 1, i_PartyAKId) AS PartyAKId,\n\t-- *INF*: IIF( ISNULL(i_PrimaryPhoneNumber ), 'N/A', i_PrimaryPhoneNumber )\n\tIFF(i_PrimaryPhoneNumber IS NULL, 'N/A', i_PrimaryPhoneNumber) AS PrimaryPhoneNumber,\n\t-- *INF*: IIF(ISNULL(i_OriginalPolicyInceptionDate), TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS'), i_OriginalPolicyInceptionDate)\n\tIFF(\n\t    i_OriginalPolicyInceptionDate IS NULL,\n\t    TO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    i_OriginalPolicyInceptionDate\n\t) AS OriginalPolicyInceptionDate,\n\t-- *INF*: IIF(ISNULL(i_DeletedIndicator), 'N/A', i_DeletedIndicator)\n\tIFF(i_DeletedIndicator IS NULL, 'N/A', i_DeletedIndicator) AS DeletedIndicator,\n\t-- *INF*: IIF(ISNULL(i_StatusCode), 'N/A', i_StatusCode)\n\tIFF(i_StatusCode IS NULL, 'N/A', i_StatusCode) AS StatusCode,\n\t-- *INF*: IIF(ISNULL(i_Name), 'N/A', i_Name)\n\tIFF(i_Name IS NULL, 'N/A', i_Name) AS Name,\n\t-- *INF*: IIF(ISNULL(i_DoingBusinessAs), 'N/A', i_DoingBusinessAs)\n\tIFF(i_DoingBusinessAs IS NULL, 'N/A', i_DoingBusinessAs) AS DoingBusinessAs,\n\t-- *INF*: IIF(ISNULL(i_LegalEntityTypeCode), 'N/A', i_LegalEntityTypeCode)\n\tIFF(i_LegalEntityTypeCode IS NULL, 'N/A', i_LegalEntityTypeCode) AS LegalEntityTypeCode,\n\t-- *INF*: IIF(ISNULL(i_SicCode), 'N/A', i_SicCode)\n\tIFF(i_SicCode IS NULL, 'N/A', i_SicCode) AS SicCode,\n\t-- *INF*: IIF(ISNULL(i_SicCodeTitle), 'N/A', i_SicCodeTitle)\n\tIFF(i_SicCodeTitle IS NULL, 'N/A', i_SicCodeTitle) AS SicCodeTitle,\n\t-- *INF*: IIF(ISNULL(i_NaicsCode), 'N/A', i_NaicsCode)\n\tIFF(i_NaicsCode IS NULL, 'N/A', i_NaicsCode) AS NaicsCode,\n\t-- *INF*: IIF(ISNULL(i_NaicsCodeTitle), 'N/A', i_NaicsCodeTitle)\n\tIFF(i_NaicsCodeTitle IS NULL, 'N/A', i_NaicsCodeTitle) AS NaicsCodeTitle,\n\t-- *INF*: IIF(ISNULL(i_PrefixTitleCode), 'N/A', i_PrefixTitleCode)\n\tIFF(i_PrefixTitleCode IS NULL, 'N/A', i_PrefixTitleCode) AS PrefixTitleCode,\n\t-- *INF*: IIF(ISNULL(i_FirstName), 'N/A', i_FirstName)\n\tIFF(i_FirstName IS NULL, 'N/A', i_FirstName) AS FirstName,\n\t-- *INF*: IIF(ISNULL(i_MiddleName), 'N/A', i_MiddleName)\n\tIFF(i_MiddleName IS NULL, 'N/A', i_MiddleName) AS MiddleName,\n\t-- *INF*: IIF(ISNULL(i_LastName), 'N/A', i_LastName)\n\tIFF(i_LastName IS NULL, 'N/A', i_LastName) AS LastName,\n\t-- *INF*: IIF(  ISNULL(i_AssociationCode), 'N/A', i_AssociationCode)\n\tIFF(i_AssociationCode IS NULL, 'N/A', i_AssociationCode) AS AssociationCode,\n\t-- *INF*: IIF(  ISNULL(i_AssociationDescription ), 'N/A', i_AssociationDescription )\n\tIFF(i_AssociationDescription IS NULL, 'N/A', i_AssociationDescription) AS AssociationDescription\n\tFROM SQ_Party\n\tLEFT JOIN LKP_Association\n\tON LKP_Association.AssociationCode = SQ_Party.AssociationCode\n\tLEFT JOIN LKP_ExistingPartyDim\n\tON LKP_ExistingPartyDim.EDWPartyAKID = SQ_Party.PartyAKId\n),\nFIL_insert AS (\n\tSELECT\n\tchanged_flag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tPartyId AS EDWPartyPKID, \n\tPartyNumber, \n\tPartyAKId AS EDWPartyAKID, \n\tPrimaryPhoneNumber, \n\tOriginalPolicyInceptionDate, \n\tDeletedIndicator, \n\tStatusCode, \n\tName, \n\tDoingBusinessAs, \n\tLegalEntityTypeCode, \n\tSicCode, \n\tSicCodeTitle, \n\tNaicsCode, \n\tNaicsCodeTitle, \n\tPrefixTitleCode, \n\tFirstName, \n\tMiddleName, \n\tLastName, \n\tAssociationCode, \n\tAssociationDescription\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW'\n),\nTGT_PartyDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, EDWPartyPKId, PartyNumber, EDWPartyAKId, PrimaryPhoneNumber, OriginalPolicyInceptionDate, DeletedIndicator, StatusCode, Name, DoingBusinessAs, LegalEntityTypeCode, SICCode, SICCodeTitle, NAICSCode, NAICSCodeTitle, PrefixTitleCode, FirstName, MiddleName, LastName, AssociationCode, AssociationDescription)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAuditID AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tEDWPartyPKID AS EDWPARTYPKID, \n\tPARTYNUMBER, \n\tEDWPartyAKID AS EDWPARTYAKID, \n\tPRIMARYPHONENUMBER, \n\tORIGINALPOLICYINCEPTIONDATE, \n\tDELETEDINDICATOR, \n\tSTATUSCODE, \n\tNAME, \n\tDOINGBUSINESSAS, \n\tLEGALENTITYTYPECODE, \n\tSicCode AS SICCODE, \n\tSicCodeTitle AS SICCODETITLE, \n\tNaicsCode AS NAICSCODE, \n\tNaicsCodeTitle AS NAICSCODETITLE, \n\tPREFIXTITLECODE, \n\tFIRSTNAME, \n\tMIDDLENAME, \n\tLASTNAME, \n\tASSOCIATIONCODE, \n\tASSOCIATIONDESCRIPTION\n\tFROM FIL_insert\n),\nSQ_PartyDim AS (\n\tSELECT \r\n\t\ta.PartyDimID, \r\n\t\ta.EffectiveDate,\r\n\t\ta.ExpirationDate, \r\n\t\ta.EDWPartyAKID\r\n\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim a\r\n\tWHERE  a.EDWPartyAKID  IN\r\n\t\t ( SELECT EDWPartyAKID FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim\r\n\t\t   WHERE CurrentSnapshotFlag = 1 GROUP BY EDWPartyAKID HAVING count(*) > 1) \r\n\tORDER BY a.EDWPartyAKID,a.EffectiveDate DESC\r\n\t\r\n\t\r\n\t\r\n\t--IN Subquery exists to pick AK ID column values that have multiple rows with a 12/31/2100 EffectiveDate.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag \r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tPartyDimID,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate AS OriginalExpirationDate,\n\tEDWPartyAKID,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- EDWPartyAKID = v_prev_EDWPartyAKID , ADD_TO_DATE(v_prev_EffectiveDate,'SS',-1),\r\n\t-- OriginalExpirationDate)\n\tDECODE(\n\t    TRUE,\n\t    EDWPartyAKID = v_prev_EDWPartyAKID, DATEADD(SECOND,- 1,v_prev_EffectiveDate),\n\t    OriginalExpirationDate\n\t) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEDWPartyAKID AS v_prev_EDWPartyAKID,\n\tEffectiveDate AS v_prev_EffectiveDate,\n\tSYSDATE AS ModifiedDate\n\tFROM SQ_PartyDim\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tPartyDimID, \n\tCurrentSnapshotFlag, \n\tOriginalExpirationDate, \n\tExpirationDate AS NewExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_eff_from_date\n\tWHERE OriginalExpirationDate != NewExpirationDate\n),\nUPD_OldRecord AS (\n\tSELECT\n\tPartyDimID, \n\tCurrentSnapshotFlag, \n\tNewExpirationDate AS ExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowInAKGroup\n),\nTGT_PartyDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PartyDim AS T\n\tUSING UPD_OldRecord AS S\n\tON T.PartyDimId = S.PartyDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Quote DataMart/"
        },
        "annotations": []
    }
}