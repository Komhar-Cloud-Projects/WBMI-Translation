{
    "name": "s_m_POL_DM_LOAD_PremiumTransactionTypeDim_PremiumMasterCalculation",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_PremiumTransactionTypeDim_PremiumMaste_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumMasterCalculation_StatisticalCoverage AS (\n\tSELECT DISTINCT RTRIM(PC.PremiumMasterTransactionCode) PremiumMasterTransactionCode,\r\n\t       RTRIM(PC.PremiumMasterPremiumType) PremiumMasterPremiumType,\r\n\t       RTRIM(PC.PremiumMasterReasonAmendedCode) PremiumMasterReasonAmendedCode,\r\n\t       PC.PremiumMasterCustomerCareCommissionRate\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PC with (nolock)\r\n\tWHERE PC.PremiumMasterRunDate > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT DISTINCT RTRIM(PC.PremiumMasterTransactionCode) PremiumMasterTransactionCode,\r\n\t'C' PremiumMasterPremiumType,\r\n\t RTRIM(PC.PremiumMasterReasonAmendedCode) PremiumMasterReasonAmendedCode,\r\n\t1 as PremiumMasterCustomerCareCommissionRate\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PC with (nolock),\r\n\t    @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC  with (nolock)\r\n\tWHERE\r\n\t      PC.StatisticalCoverageAKID = SC.StatisticalCoverageAKID\r\n\t       AND SC.CurrentSnapshotFlag =1 AND sc.MajorPerilCode='050' \r\n\t       and PC.PremiumMasterRunDate > '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_Collect_Data_columns AS (\n\tSELECT\n\tPremiumMasterTransactionCode,\n\t-- *INF*: rtrim(PremiumMasterTransactionCode)\n\trtrim(PremiumMasterTransactionCode\n\t) AS PremiumMasterTransactionCode_out,\n\tPremiumMasterPremiumType,\n\t-- *INF*: rtrim(PremiumMasterPremiumType)\n\trtrim(PremiumMasterPremiumType\n\t) AS PremiumMasterPremiumType_out,\n\tPremiumMasterReasonAmendedCode AS ReasonAmendedCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(ReasonAmendedCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(ReasonAmendedCode\n\t) AS ReasonAmendedCode_out,\n\tPremiumMasterCustomerCareCommissionRate,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tSYSDATE AS createddate,\n\tSYSDATE AS modifieddate,\n\t-- *INF*: TO_DATE('1/1/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('1/1/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS'\n\t) AS ExpirationDate\n\tFROM SQ_PremiumMasterCalculation_StatisticalCoverage\n),\nlkp_sup_premium_transaction_code AS (\n\tSELECT\n\tprem_trans_code_descript,\n\tprem_trans_type_descript,\n\tprem_trans_code\n\tFROM (\n\t\tSELECT \r\n\t\tSPTC.prem_trans_code_descript as prem_trans_code_descript, \r\n\t\tSPTC.prem_trans_type_descript as prem_trans_type_descript, \r\n\t\tLTRIM(RTRIM(SPTC.prem_trans_code)) as prem_trans_code\r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_premium_transaction_code SPTC\r\n\t\twhere SPTC.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY prem_trans_code ORDER BY prem_trans_code_descript DESC) = 1\n),\nlkp_sup_reason_amended_code AS (\n\tSELECT\n\trsn_amended_code_descript,\n\trsn_amended_code\n\tFROM (\n\t\tSELECT \r\n\t\tsup_reason_amended_code.rsn_amended_code_descript as rsn_amended_code_descript, \r\n\t\tLTRIM(RTRIM(sup_reason_amended_code.rsn_amended_code)) as rsn_amended_code FROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_reason_amended_code\r\n\t\twhere sup_reason_amended_code.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code ORDER BY rsn_amended_code_descript DESC) = 1\n),\nExp_Collect_LookupData AS (\n\tSELECT\n\tlkp_sup_premium_transaction_code.prem_trans_code_descript AS lkp_prem_trans_code_descript,\n\t-- *INF*: iif(isnull(lkp_prem_trans_code_descript) or IS_SPACES(lkp_prem_trans_code_descript) or LENGTH(lkp_prem_trans_code_descript)=0,'N/A',LTRIM(RTRIM(lkp_prem_trans_code_descript)))\n\tIFF(lkp_prem_trans_code_descript IS NULL \n\t\tOR LENGTH(lkp_prem_trans_code_descript)>0 AND TRIM(lkp_prem_trans_code_descript)='' \n\t\tOR LENGTH(lkp_prem_trans_code_descript\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(lkp_prem_trans_code_descript\n\t\t\t)\n\t\t)\n\t) AS o_lkp_prem_trans_code_descript,\n\tlkp_sup_premium_transaction_code.prem_trans_type_descript AS lkp_prem_trans_type_descript,\n\t-- *INF*: iif(isnull(lkp_prem_trans_type_descript) or IS_SPACES(lkp_prem_trans_type_descript) or LENGTH(lkp_prem_trans_type_descript)=0,'N/A',LTRIM(RTRIM(lkp_prem_trans_type_descript)))\n\tIFF(lkp_prem_trans_type_descript IS NULL \n\t\tOR LENGTH(lkp_prem_trans_type_descript)>0 AND TRIM(lkp_prem_trans_type_descript)='' \n\t\tOR LENGTH(lkp_prem_trans_type_descript\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(lkp_prem_trans_type_descript\n\t\t\t)\n\t\t)\n\t) AS o_lkp_prem_trans_type_descript,\n\tlkp_sup_reason_amended_code.rsn_amended_code_descript AS lkp_rsn_amended_code_descript,\n\t-- *INF*: iif(isnull(lkp_rsn_amended_code_descript) or IS_SPACES(lkp_rsn_amended_code_descript) or LENGTH(lkp_rsn_amended_code_descript)=0,'N/A',LTRIM(RTRIM(lkp_rsn_amended_code_descript)))\n\tIFF(lkp_rsn_amended_code_descript IS NULL \n\t\tOR LENGTH(lkp_rsn_amended_code_descript)>0 AND TRIM(lkp_rsn_amended_code_descript)='' \n\t\tOR LENGTH(lkp_rsn_amended_code_descript\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(lkp_rsn_amended_code_descript\n\t\t\t)\n\t\t)\n\t) AS o_lkp_rsn_amended_code_descript,\n\tEXP_Collect_Data_columns.PremiumMasterTransactionCode_out AS PremiumTransactionCode,\n\tEXP_Collect_Data_columns.PremiumMasterPremiumType_out AS PremiumType,\n\tEXP_Collect_Data_columns.ReasonAmendedCode_out AS ReasonAmendedCode,\n\tEXP_Collect_Data_columns.CurrentSnapshotFlag,\n\tEXP_Collect_Data_columns.audit_id,\n\tEXP_Collect_Data_columns.createddate,\n\tEXP_Collect_Data_columns.modifieddate,\n\tEXP_Collect_Data_columns.EffectiveDate,\n\tEXP_Collect_Data_columns.ExpirationDate,\n\tEXP_Collect_Data_columns.PremiumMasterCustomerCareCommissionRate,\n\tPremiumMasterCustomerCareCommissionRate AS o_PremiumMasterCustomerCareCommissionRate\n\tFROM EXP_Collect_Data_columns\n\tLEFT JOIN lkp_sup_premium_transaction_code\n\tON lkp_sup_premium_transaction_code.prem_trans_code = EXP_Collect_Data_columns.PremiumMasterTransactionCode_out\n\tLEFT JOIN lkp_sup_reason_amended_code\n\tON lkp_sup_reason_amended_code.rsn_amended_code = EXP_Collect_Data_columns.PremiumMasterTransactionCode_out\n),\nlkp_PremiumTransactionTypeDim AS (\n\tSELECT\n\tPremiumTransactionTypeDimID,\n\tPremiumTransactionCode,\n\tReasonAmendedCode,\n\tPremiumTypeCode,\n\tCustomerCareCommissionRate\n\tFROM (\n\t\tSELECT \r\n\t\tPTTD.PremiumTransactionTypeDimID as PremiumTransactionTypeDimID,\r\n\t\tLTRIM(RTRIM(PTTD.PremiumTransactionCode)) as PremiumTransactionCode, \r\n\t\tLTRIM(RTRIM(PTTD.ReasonAmendedCode)) as ReasonAmendedCode, \r\n\t\tLTRIM(RTRIM(PTTD.PremiumTypeCode)) as PremiumTypeCode ,\r\n\t\tCustomerCareCommissionRate as CustomerCareCommissionRate\r\n\t\tFROM PremiumTransactionTypeDim PTTD\r\n\t\twhere PTTD.CurrentSnapShotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionCode,ReasonAmendedCode,PremiumTypeCode,CustomerCareCommissionRate ORDER BY PremiumTransactionTypeDimID DESC) = 1\n),\nRTR_PremiumTransactionTypeDim AS (\n\tSELECT\n\tlkp_PremiumTransactionTypeDim.PremiumTransactionTypeDimID AS lkp_PremiumTransactionTypeDimID,\n\tExp_Collect_LookupData.o_lkp_prem_trans_code_descript,\n\tExp_Collect_LookupData.o_lkp_prem_trans_type_descript,\n\tExp_Collect_LookupData.o_lkp_rsn_amended_code_descript,\n\tExp_Collect_LookupData.PremiumTransactionCode,\n\tExp_Collect_LookupData.PremiumType,\n\tExp_Collect_LookupData.ReasonAmendedCode,\n\tExp_Collect_LookupData.CurrentSnapshotFlag,\n\tExp_Collect_LookupData.audit_id,\n\tExp_Collect_LookupData.createddate,\n\tExp_Collect_LookupData.modifieddate,\n\tExp_Collect_LookupData.EffectiveDate,\n\tExp_Collect_LookupData.ExpirationDate,\n\tExp_Collect_LookupData.o_PremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate\n\tFROM Exp_Collect_LookupData\n\tLEFT JOIN lkp_PremiumTransactionTypeDim\n\tON lkp_PremiumTransactionTypeDim.PremiumTransactionCode = Exp_Collect_LookupData.PremiumTransactionCode AND lkp_PremiumTransactionTypeDim.ReasonAmendedCode = Exp_Collect_LookupData.ReasonAmendedCode AND lkp_PremiumTransactionTypeDim.PremiumTypeCode = Exp_Collect_LookupData.PremiumType AND lkp_PremiumTransactionTypeDim.CustomerCareCommissionRate = Exp_Collect_LookupData.o_PremiumMasterCustomerCareCommissionRate\n),\nRTR_PremiumTransactionTypeDim_INSERT AS (SELECT * FROM RTR_PremiumTransactionTypeDim WHERE isnull(lkp_PremiumTransactionTypeDimID)),\nRTR_PremiumTransactionTypeDim_DEFAULT1 AS (SELECT * FROM RTR_PremiumTransactionTypeDim WHERE NOT ( (isnull(lkp_PremiumTransactionTypeDimID)) )),\nUPD_PremiumTransactionTypeDim AS (\n\tSELECT\n\tlkp_PremiumTransactionTypeDimID AS PremiumTransactionTypeDimID, \n\tCurrentSnapshotFlag, \n\taudit_id AS AuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tcreateddate AS CreatedDate, \n\tmodifieddate AS ModifiedDate, \n\tPremiumTransactionCode, \n\to_lkp_prem_trans_code_descript AS PremiumTransactionCodeDescription, \n\to_lkp_prem_trans_type_descript AS PremiumTransactionTypeDescription, \n\tReasonAmendedCode, \n\to_lkp_rsn_amended_code_descript AS ReasonAmendedCodeDescription, \n\tPremiumType AS PremiumTypeCode, \n\tPremiumMasterCustomerCareCommissionRate AS PremiumMasterCustomerCareCommissionRate2\n\tFROM RTR_PremiumTransactionTypeDim_DEFAULT1\n),\nPremiumTransactionTypeDimUPD AS (\n\tMERGE INTO Shortcut_to_PremiumTransactionTypeDim AS T\n\tUSING UPD_PremiumTransactionTypeDim AS S\n\tON T.PremiumTransactionTypeDimID = S.PremiumTransactionTypeDimID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.PremiumTransactionCode = S.PremiumTransactionCode, T.PremiumTransactionCodeDescription = S.PremiumTransactionCodeDescription, T.PremiumTransactionTypeDescription = S.PremiumTransactionTypeDescription, T.ReasonAmendedCode = S.ReasonAmendedCode, T.ReasonAmendedCodeDescription = S.ReasonAmendedCodeDescription, T.PremiumTypeCode = S.PremiumTypeCode, T.CustomerCareCommissionRate = S.PremiumMasterCustomerCareCommissionRate2\n),\nPremiumTransactionTypeDimINS AS (\n\tINSERT INTO Shortcut_to_PremiumTransactionTypeDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, PremiumTransactionCode, PremiumTransactionCodeDescription, PremiumTransactionTypeDescription, ReasonAmendedCode, ReasonAmendedCodeDescription, PremiumTypeCode, CustomerCareCommissionRate)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\taudit_id AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tcreateddate AS CREATEDDATE, \n\tmodifieddate AS MODIFIEDDATE, \n\tPREMIUMTRANSACTIONCODE, \n\to_lkp_prem_trans_code_descript AS PREMIUMTRANSACTIONCODEDESCRIPTION, \n\to_lkp_prem_trans_type_descript AS PREMIUMTRANSACTIONTYPEDESCRIPTION, \n\tREASONAMENDEDCODE, \n\to_lkp_rsn_amended_code_descript AS REASONAMENDEDCODEDESCRIPTION, \n\tPremiumType AS PREMIUMTYPECODE, \n\tPremiumMasterCustomerCareCommissionRate AS CUSTOMERCARECOMMISSIONRATE\n\tFROM RTR_PremiumTransactionTypeDim_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}