{
    "name": "m_CLM_DW_LOAD_NurseReferral",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseReferral",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clmt_nurse_referral_stage AS (\n\tSELECT\n\t\tClmntNurseReferralStageId,\n\t\tnurse_referral_id,\n\t\tclmt_nurse_manage_id,\n\t\treferred_to_nurse_id,\n\t\treferral_date,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM clmt_nurse_referral_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tnurse_referral_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(nurse_referral_id))),-1,nurse_referral_id)\n\tIFF(ltrim(rtrim(nurse_referral_id)) IS NULL, - 1, nurse_referral_id) AS o_nurse_referral_id,\n\tclmt_nurse_manage_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(clmt_nurse_manage_id))),0,clmt_nurse_manage_id)\n\tIFF(ltrim(rtrim(clmt_nurse_manage_id)) IS NULL, 0, clmt_nurse_manage_id) AS o_clmt_nurse_manage_id,\n\treferred_to_nurse_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(referred_to_nurse_id),'N/A',\r\n\t-- IS_SPACES(referred_to_nurse_id),'N/A',\r\n\t-- LENGTH(referred_to_nurse_id)=0,'N/A',\r\n\t-- LTRIM(RTRIM(referred_to_nurse_id)))\n\tDECODE(TRUE,\n\treferred_to_nurse_id IS NULL, 'N/A',\n\tIS_SPACES(referred_to_nurse_id), 'N/A',\n\tLENGTH(referred_to_nurse_id) = 0, 'N/A',\n\tLTRIM(RTRIM(referred_to_nurse_id))) AS o_referred_to_nurse_id,\n\treferral_date,\n\t-- *INF*: iif(isnull(ltrim(rtrim(referral_date))),to_date('1/1/1800','MM/DD/YYYY'),referral_date)\n\tIFF(ltrim(rtrim(referral_date)) IS NULL, to_date('1/1/1800', 'MM/DD/YYYY'), referral_date) AS o_referral_date\n\tFROM SQ_clmt_nurse_referral_stage\n),\nLKP_NurseCase AS (\n\tSELECT\n\tNurseCaseAkid,\n\tclmt_nurse_manage_id\n\tFROM (\n\t\tSELECT\r\n\t\tNurseCase.SourceSystemId as SourceSystemId, NurseCase.NurseCaseAkid as NurseCaseAkid, NurseCase.clmt_nurse_manage_id as clmt_nurse_manage_id\r\n\t\t\r\n\t\t FROM NurseCase\r\n\t\t\r\n\t\twhere\r\n\t\tCurrentSnapshotFlag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clmt_nurse_manage_id ORDER BY NurseCaseAkid) = 1\n),\nLKP_claim_party AS (\n\tSELECT\n\tclaim_party_ak_id,\n\tclaim_party_key\n\tFROM (\n\t\tSELECT\r\n\t\tCP.claim_party_ak_id as claim_party_ak_id, \r\n\t\tCP.claim_party_key as claim_party_key \r\n\t\t\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP\r\n\t\t\r\n\t\twhere\r\n\t\tCP.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_key ORDER BY claim_party_ak_id) = 1\n),\nEXP_Lkp_Defualt AS (\n\tSELECT\n\tLKP_NurseCase.NurseCaseAkid,\n\t-- *INF*: iif(isnull(NurseCaseAkid), -1, NurseCaseAkid)\n\tIFF(NurseCaseAkid IS NULL, - 1, NurseCaseAkid) AS o_NurseCaseAkid,\n\tLKP_claim_party.claim_party_ak_id,\n\t-- *INF*: iif(isnull(claim_party_ak_id), -1,claim_party_ak_id)\n\tIFF(claim_party_ak_id IS NULL, - 1, claim_party_ak_id) AS o_claim_party_ak_id\n\tFROM \n\tLEFT JOIN LKP_NurseCase\n\tON LKP_NurseCase.clmt_nurse_manage_id = EXP_Src_Values.o_clmt_nurse_manage_id\n\tLEFT JOIN LKP_claim_party\n\tON LKP_claim_party.claim_party_key = EXP_Src_Values.o_referred_to_nurse_id\n),\nLKP_NurseReferral AS (\n\tSELECT\n\tNurseReferralId,\n\tNurseCaseAkId,\n\tclaim_party_ak_id,\n\tnurse_referral_id,\n\tReferralDate,\n\tNurseReferralAkId\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseReferralId as NurseReferralId, \r\n\t\tN.nurse_referral_id as nurse_referral_id, \r\n\t\tN.ReferralDate as ReferralDate, \r\n\t\tN.NurseReferralAkId as NurseReferralAkId, \r\n\t\tN.NurseCaseAkId as NurseCaseAkId, \r\n\t\tN.claim_party_ak_id as claim_party_ak_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferral N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag  = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseCaseAkId,claim_party_ak_id,nurse_referral_id ORDER BY NurseReferralId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseReferral.NurseReferralId AS Lkp_NurseReferralId,\n\tLKP_NurseReferral.NurseCaseAkId AS Lkp_NurseCaseAkId,\n\tLKP_NurseReferral.claim_party_ak_id AS Lkp_claim_party_ak_id,\n\tLKP_NurseReferral.nurse_referral_id AS LKp_nurse_referral_id,\n\tLKP_NurseReferral.ReferralDate AS Lkp_ReferralDate,\n\t-- *INF*: iif(isnull(Lkp_NurseReferralId),'NEW',\r\n\t-- \r\n\t--   iif(\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_NurseCaseAkId)) != ltrim(rtrim(NurseCaseAkId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--   ltrim(rtrim(Lkp_claim_party_ak_id)) != ltrim(rtrim(claim_party_ak_id))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--   ltrim(rtrim(LKp_nurse_referral_id)) != ltrim(rtrim(nurse_referral_id))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--   ltrim(rtrim(Lkp_ReferralDate)) != ltrim(rtrim(ReferralDate)),\r\n\t-- \r\n\t--     'UPDATE', 'NOCHANGE')\r\n\t-- \r\n\t--    )\n\tIFF(Lkp_NurseReferralId IS NULL, 'NEW', IFF(ltrim(rtrim(Lkp_NurseCaseAkId)) != ltrim(rtrim(NurseCaseAkId)) OR ltrim(rtrim(Lkp_claim_party_ak_id)) != ltrim(rtrim(claim_party_ak_id)) OR ltrim(rtrim(LKp_nurse_referral_id)) != ltrim(rtrim(nurse_referral_id)) OR ltrim(rtrim(Lkp_ReferralDate)) != ltrim(rtrim(ReferralDate)), 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\tEXP_Lkp_Defualt.o_NurseCaseAkid AS NurseCaseAkId,\n\tEXP_Lkp_Defualt.o_claim_party_ak_id AS claim_party_ak_id,\n\tEXP_Src_Values.o_nurse_referral_id AS nurse_referral_id,\n\tEXP_Src_Values.o_referral_date AS ReferralDate,\n\t-- *INF*: IIF(v_ChangedFlag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), SYSDATE)\n\tIFF(v_ChangedFlag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tLKP_NurseReferral.NurseReferralAkId AS Lkp_NurseReferralAkId\n\tFROM EXP_Lkp_Defualt\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseReferral\n\tON LKP_NurseReferral.NurseCaseAkId = EXP_Lkp_Defualt.o_NurseCaseAkid AND LKP_NurseReferral.claim_party_ak_id = EXP_Lkp_Defualt.o_claim_party_ak_id AND LKP_NurseReferral.nurse_referral_id = EXP_Src_Values.o_nurse_referral_id\n),\nFIL_Lkp_Records AS (\n\tSELECT\n\tChangedFlag, \n\tNurseCaseAkId, \n\tclaim_party_ak_id, \n\tnurse_referral_id, \n\tReferralDate, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemId, \n\tCreatedDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tLkp_NurseReferralAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseReferral AS (\n\tCREATE SEQUENCE SEQ_NurseReferral\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Akid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tNurseCaseAkId,\n\tclaim_party_ak_id,\n\tnurse_referral_id,\n\tReferralDate,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemId,\n\tCreatedDate,\n\tModifiedDate,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tLkp_NurseReferralAkId,\n\t-- *INF*: iif(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseReferralAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseReferralAkId) AS NurseReferralAkId,\n\tSEQ_NurseReferral.NEXTVAL\n\tFROM FIL_Lkp_Records\n),\nNurseReferral_Insert AS (\n\tINSERT INTO NurseReferral\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseReferralAkId, NurseCaseAkId, claim_party_ak_id, nurse_referral_id, ReferralDate)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSEREFERRALAKID, \n\tNURSECASEAKID, \n\tCLAIM_PARTY_AK_ID, \n\tNURSE_REFERRAL_ID, \n\tREFERRALDATE\n\tFROM EXP_Akid_Insert_Target\n),\nSQ_NurseReferral AS (\n\tSELECT\r\n\tA.NurseReferralId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.NurseReferralAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferral A\r\n\t\r\n\tWhere Exists \r\n\t    ( \r\n\tSELECT 1\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseReferral B\r\n\t\r\n\twhere\r\n\tB.CurrentSnapshotFlag =1\r\n\tAND\r\n\tA.NurseReferralAkId = B.NurseReferralAkId \r\n\t\r\n\tgroup by \r\n\tB.NurseReferralAkId \r\n\t\r\n\thaving \r\n\tcount(*) > 1\r\n\t    )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseReferralAkId , \r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseReferralId,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tNurseReferralAkId= v_PREV_ROW_NurseReferralAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\n\tDECODE(TRUE,\n\tNurseReferralAkId = v_PREV_ROW_NurseReferralAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseReferralAkId AS v_PREV_ROW_NurseReferralAkId,\n\tSYSDATE AS ModifiedDate,\n\tNurseReferralAkId,\n\t0 AS CurrentSnapshotFlag\n\tFROM SQ_NurseReferral\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tNurseReferralId, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_NurseReferral AS (\n\tSELECT\n\tNurseReferralId, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM FIL_FirstRowAkId\n),\nNurseReferral_Update AS (\n\tMERGE INTO NurseReferral AS T\n\tUSING UPD_NurseReferral AS S\n\tON T.NurseReferralId = S.NurseReferralId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246502"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905527"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604458"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:37"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:40"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}