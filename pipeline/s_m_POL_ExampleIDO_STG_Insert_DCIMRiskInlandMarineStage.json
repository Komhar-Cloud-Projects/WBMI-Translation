{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCIMRiskInlandMarineStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCIMRiskInlandMarineStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_IM_RiskInlandMarine AS (\n\tWITH cte_DCIMRiskInlandMarine(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.IM_RiskId, \r\n\tX.IM_RiskInlandMarineId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.Type, \r\n\tX.BG1PersonalPropertyBaseLossCostOverride, \r\n\tX.BG1PlusBG2PersonalPropertyRateOverride, \r\n\tX.BG2PersonalPropertyBaseLossCostOverride, \r\n\tX.CompanyFactor, \r\n\tX.CompanyRate, \r\n\tX.ExcessRate, \r\n\tX.PremiumBase, \r\n\tX.TentativeRate, \r\n\tX.NamedStormMaximum, \r\n\tX.NamedStormMinimum, \r\n\tX.NamedStormPercentage, \r\n\tX.ReceptacleTypeA, \r\n\tX.ReceptacleTypeB, \r\n\tX.ReceptacleTypeC, \r\n\tX.ReceptacleTypeD, \r\n\tX.ReceptacleTypeE, \r\n\tX.ReceptacleTypeF, \r\n\tX.ReceptacleTypeG \r\n\tFROM\r\n\tDC_IM_RiskInlandMarine X\r\n\tinner join\r\n\tcte_DCIMRiskInlandMarine Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tIM_RiskId,\n\tIM_RiskInlandMarineId,\n\tSessionId,\n\tId,\n\tType,\n\tBG1PersonalPropertyBaseLossCostOverride,\n\tBG1PlusBG2PersonalPropertyRateOverride,\n\tBG2PersonalPropertyBaseLossCostOverride,\n\tCompanyFactor,\n\tCompanyRate,\n\tExcessRate,\n\tPremiumBase,\n\tTentativeRate,\n\tNamedStormMaximum,\n\tNamedStormMinimum,\n\tNamedStormPercentage,\n\tReceptacleTypeA,\n\tReceptacleTypeB,\n\tReceptacleTypeC,\n\tReceptacleTypeD,\n\tReceptacleTypeE,\n\tReceptacleTypeF,\n\tReceptacleTypeG,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_IM_RiskInlandMarine\n),\nDCIMRiskInlandMarineStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCIMRiskInlandMarineStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCIMRiskInlandMarineStage\n\t(IMRiskId, IMRiskInlandMarineId, SessionId, Id, Type, BG1PersonalPropertyBaseLossCostOverride, BG1PlusBG2PersonalPropertyRateOverride, BG2PersonalPropertyBaseLossCostOverride, CompanyFactor, CompanyRate, ExcessRate, PremiumBase, TentativeRate, NamedStormMaximum, NamedStormMinimum, NamedStormPercentage, ReceptacleTypeA, ReceptacleTypeB, ReceptacleTypeC, ReceptacleTypeD, ReceptacleTypeE, ReceptacleTypeF, ReceptacleTypeG, ExtractDate, SourceSystemId)\n\tSELECT \n\tIM_RiskId AS IMRISKID, \n\tIM_RiskInlandMarineId AS IMRISKINLANDMARINEID, \n\tSESSIONID, \n\tID, \n\tTYPE, \n\tBG1PERSONALPROPERTYBASELOSSCOSTOVERRIDE, \n\tBG1PLUSBG2PERSONALPROPERTYRATEOVERRIDE, \n\tBG2PERSONALPROPERTYBASELOSSCOSTOVERRIDE, \n\tCOMPANYFACTOR, \n\tCOMPANYRATE, \n\tEXCESSRATE, \n\tPREMIUMBASE, \n\tTENTATIVERATE, \n\tNAMEDSTORMMAXIMUM, \n\tNAMEDSTORMMINIMUM, \n\tNAMEDSTORMPERCENTAGE, \n\tRECEPTACLETYPEA, \n\tRECEPTACLETYPEB, \n\tRECEPTACLETYPEC, \n\tRECEPTACLETYPED, \n\tRECEPTACLETYPEE, \n\tRECEPTACLETYPEF, \n\tRECEPTACLETYPEG, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}