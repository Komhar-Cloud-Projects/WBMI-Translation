{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCLimitStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCLimitStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_Limit AS (\n\tSELECT X.objectid,\r\n\t       X.objectname,\r\n\t       X.limitid,\r\n\t       X.sessionid,\r\n\t       X.type,\r\n\t       X.value,\r\n\t       X.datatype,\r\n\t       X.scope\r\n\tFROM   DC_limit X WITH(nolock)\r\n\t       INNER JOIN wbexampledata.dbo.wb_edwdataloadincrementalsessions Y WITH(\r\n\t                  nolock)\r\n\t               ON X.sessionid = Y.sessionid \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tObjectId,\n\tObjectName,\n\tLimitId,\n\tSessionId,\n\tType,\n\tValue AS i_Value,\n\t-- *INF*: SUBSTR(i_Value,1,80)\n\tSUBSTR(i_Value, 1, 80) AS o_Value,\n\tDataType,\n\tScope,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_Limit\n),\nDCLimitStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCLimitStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCLimitStaging\n\t(ObjectId, ObjectName, LimitId, SessionId, Type, Value, DataType, Scope, ExtractDate, SourceSystemId)\n\tSELECT \n\tOBJECTID, \n\tOBJECTNAME, \n\tLIMITID, \n\tSESSIONID, \n\tTYPE, \n\to_Value AS VALUE, \n\tDATATYPE, \n\tSCOPE, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}