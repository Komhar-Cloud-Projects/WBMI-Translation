{
    "name": "s_m_CLM_DW_LOAD_Claim_Occurrence_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Occurrence_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_TAB_STAGE AS (\n\tSELECT \r\n\tCLAIM_TAB_STAGE.CLM_CLAIM_NBR,\r\n\tCONVERT(VARCHAR,CLAIM_TAB_STAGE.CLM_LOSS_DT,101) as CLM_CAUSE_LOSS_CD,\r\n\tCLAIM_TAB_STAGE.CLM_CSR_CLAIM_NBR, \r\n\tCLAIM_TAB_STAGE.CLM_CREATE_TS, \r\n\tCLAIM_TAB_STAGE.CLM_ENTRY_OPR_ID,\r\n\tCLAIM_TAB_STAGE.CLM_OCCURRENCE_ID, \r\n\tCLAIM_TAB_STAGE.CLM_REPORTED_DT, CLAIM_TAB_STAGE.CLM_STATUS_CD,\r\n\tCONVERT(VARCHAR,CLAIM_TAB_STAGE.CLM_LOSS_TM,108) AS CLM_UPDATE_OPR_ID, \r\n\tCLAIM_TAB_STAGE.CLM_UPD_TS, CLAIM_TAB_STAGE.CLM_POSTAL_CD, \r\n\tCLAIM_TAB_STAGE.CLM_DISCOVERY_DT, \r\n\t CLAIM_TAB_STAGE.CLM_LOSS_CITY, \r\n\tCLAIM_TAB_STAGE.CLM_LOSS_COUNTY, CLAIM_TAB_STAGE.CLM_LOSS_DES_ID, \r\n\tCLAIM_TAB_STAGE.CLM_LOSS_STATE_CD, CLAIM_TAB_STAGE.CLM_NOT_CLAIM_IND, \r\n\tCLAIM_TAB_STAGE.CLM_TYPE_CD, CLAIM_TAB_STAGE.CLM_LOSS_PLACE_ID, \r\n\tCLAIM_TAB_STAGE.CLM_REI_NOTIFY_DT, CLAIM_TAB_STAGE.CLM_AT_FAULT_CD, \r\n\tCLAIM_TAB_STAGE.CLM_DRIVER_NBR, CLAIM_TAB_STAGE.CLM_DRV_SAME_IND, \r\n\tCLAIM_TAB_STAGE.CLM_VIOL_CIT_DESC, CLAIM_TAB_STAGE.CLM_HOW_CLM_RPTD, \r\n\tCLAIM_TAB_STAGE.CLM_METHOD_RPTD,\r\n\tCLAIM_TAB_STAGE.CLM_WC_CAT_CODE,\r\n\tCLAIM_TAB_STAGE.clm_primary_loc_code,\r\n\tCLAIM_TAB_STAGE.clm_secondary_dept_code\r\n\tFROM\r\n\tCLAIM_TAB_STAGE\r\n\t/*where exists\r\n\t( select 1 from\r\n\t(select\r\n\tltrim(rtrim(b.cob_claim_nbr)) as claim_nbr\r\n\t,ltrim(rtrim(c.cct_client_id)) as client_id\r\n\t,ltrim(rtrim(c.cct_client_role_cd)) as client_role_cd\r\n\t,LTRIM(RTRIM(a.ccp_object_seq_nbr)) as object_seq_nbr\r\n\t,ltrim(rtrim(a.ccp_object_type_cd)) as object_type_cd\r\n\tfrom WC_Stage_CO.dbo.clm_cov_pkg_stage a\r\n\tjoin WC_Stage_CO.dbo.claim_object_stage b\r\n\ton ltrim(rtrim(a.ccp_claim_nbr))=ltrim(rtrim(b.cob_claim_nbr))\r\n\tand ltrim(rtrim(a.ccp_object_seq_nbr))=ltrim(rtrim(b.cob_object_seq_nbr))\r\n\tand ltrim(rtrim(a.ccp_object_type_cd))=ltrim(rtrim(b.cob_object_type_cd))\r\n\tjoin WC_Stage_CO.dbo.claim_object_clt_stage c\r\n\ton ltrim(rtrim(a.ccp_claim_nbr))=ltrim(rtrim(c.cct_claim_nbr))\r\n\tjoin WC_Stage_CO.dbo.claim_claimant_nbr_stage d\r\n\ton ltrim(rtrim(d.ccn_claim_nbr))=ltrim(rtrim(b.cob_claim_nbr))\r\n\tjoin wc_stage_co.dbo.claim_transaction_stage e\r\n\ton ltrim(rtrim(e.ctx_claim_nbr))=ltrim(rtrim(b.cob_claim_nbr))\r\n\tand ltrim(rtrim(e.ctx_client_id))=ltrim(rtrim(c.cct_client_id))\r\n\tjoin WC_Stage_CO.dbo.claim_draft_stage f\r\n\ton ltrim(rtrim(e.ctx_draft_nbr))=ltrim(rtrim(f.dft_draft_nbr))\r\n\t) t2\r\n\twhere ltrim(rtrim(CLAIM_TAB_STAGE.clm_claim_nbr))=t2.claim_nbr\r\n\t)*/\n),\nEXP_Values AS (\n\tSELECT\n\tCLM_CLAIM_NBR,\n\tCLM_CSR_CLAIM_NBR,\n\tCLM_POSTAL_CD,\n\tCLM_DISCOVERY_DT,\n\tCLM_CAUSE_LOSS_CD AS CLM_LOSS_DT,\n\tCLM_LOSS_CITY,\n\tCLM_LOSS_COUNTY,\n\tCLM_LOSS_STATE_CD,\n\tCLM_TYPE_CD,\n\tCLM_REI_NOTIFY_DT AS in_CLM_REI_NOTIFY_DT,\n\t-- *INF*: IIF(isnull(in_CLM_REI_NOTIFY_DT), \r\n\t-- to_date('1800-01-01', 'YYYY-MM-DD'),\r\n\t-- to_date(in_CLM_REI_NOTIFY_DT, 'YYYY-MM-DD'))\n\tIFF(\n\t    in_CLM_REI_NOTIFY_DT IS NULL, TO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD'),\n\t    TO_TIMESTAMP(in_CLM_REI_NOTIFY_DT, 'YYYY-MM-DD')\n\t) AS CLM_REI_NOTIFY_DT,\n\tCLM_METHOD_RPTD,\n\tCLM_HOW_CLM_RPTD,\n\tCLM_VIOL_CIT_DESC,\n\tCLM_LOSS_PLACE_ID,\n\tCLM_OCCURRENCE_ID,\n\t-- *INF*: IIF(CLM_OCCURRENCE_ID= '99999999999999999999' OR CLM_OCCURRENCE_ID = '88888888888888888888', \r\n\t-- 'N/A',\r\n\t-- LPAD(rtrim(SUBSTR(CLM_OCCURRENCE_ID,19,2)),3,'0'))\n\tIFF(\n\t    CLM_OCCURRENCE_ID = '99999999999999999999' OR CLM_OCCURRENCE_ID = '88888888888888888888',\n\t    'N/A',\n\t    LPAD(rtrim(SUBSTR(CLM_OCCURRENCE_ID, 19, 2)), 3, '0')\n\t) AS CLM_CATASTROPHE_CODE,\n\tCLM_STATUS_CD,\n\tCLM_CREATE_TS,\n\tCLM_AT_FAULT_CD,\n\tCLM_DRIVER_NBR,\n\tCLM_DRV_SAME_IND,\n\tCLM_LOSS_DES_ID,\n\tCLM_NOT_CLAIM_IND,\n\tCLM_UPD_TS,\n\tCLM_REPORTED_DT,\n\tCLM_UPDATE_OPR_ID AS CLM_LOSS_TM,\n\t-- *INF*: IIF(ISNULL(CLM_LOSS_TM) , '00:00:00' ,CLM_LOSS_TM)\n\tIFF(CLM_LOSS_TM IS NULL, '00:00:00', CLM_LOSS_TM) AS V_CLM_LOSS_TM,\n\t-- *INF*: (CLM_LOSS_DT  || ' '  ||  V_CLM_LOSS_TM)\n\t(CLM_LOSS_DT || ' ' || V_CLM_LOSS_TM) AS v_CLM_LOSS_DATE_TIMESTAMP1,\n\t-- *INF*: TO_DATE( v_CLM_LOSS_DATE_TIMESTAMP1,'MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP(v_CLM_LOSS_DATE_TIMESTAMP1, 'MM/DD/YYYY HH24:MI:SS') AS CLM_LOSS_DATE_TIMESTAMP1,\n\t-- *INF*: --GET_DATE_PART(CLM_LOSS_TM,'HH24')\n\t'' AS V_loss_date_timestamp,\n\t-- *INF*: ---GET_DATE_PART(CLM_LOSS_TM,'MI')\n\t'' AS V_loss_date_timestamp_min,\n\t-- *INF*: ---SET_DATE_PART(CLM_LOSS_DT,'HH24',V_loss_date_timestamp)\n\t'' AS V_CLM_LOSS_DATE_HOUR,\n\t-- *INF*: ---SET_DATE_PART(V_CLM_LOSS_DATE_HOUR,'MI',V_loss_date_timestamp_min)\n\t'' AS v_CLM_LOSS_DATE_TIMESTAMP,\n\t-- *INF*: ---v_CLM_LOSS_DATE_TIMESTAMP\n\t'' AS CLM_LOSS_DATE_TIMESTAMP,\n\tCLM_ENTRY_OPR_ID,\n\tclm_wc_cat_code,\n\t-- *INF*: LTRIM(RTRIM(CLM_LOSS_STATE_CD))\n\tLTRIM(RTRIM(CLM_LOSS_STATE_CD)) AS o_CLM_LOSS_STATE_CD,\n\tclm_primary_loc_code,\n\tclm_secondary_dept_code\n\tFROM SQ_CLAIM_TAB_STAGE\n),\nLKP_Adjuster_Tab_Stage AS (\n\tSELECT\n\tCAJ_EMP_CLIENT_ID,\n\tCAJ_USER_ID\n\tFROM (\n\t\tSELECT \n\t\t\tCAJ_EMP_CLIENT_ID,\n\t\t\tCAJ_USER_ID\n\t\tFROM ADJUSTER_TAB_STAGE\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CAJ_USER_ID ORDER BY CAJ_EMP_CLIENT_ID) = 1\n),\nLKP_ClaimRelationShipStage AS (\n\tSELECT\n\tRelationshipId,\n\tTchClaimNbr\n\tFROM (\n\t\tSELECT \n\t\t\tRelationshipId,\n\t\t\tTchClaimNbr\n\t\tFROM ClaimRelationshipStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY TchClaimNbr ORDER BY RelationshipId) = 1\n),\nLKP_Claim_Coverage_Stage AS (\n\tSELECT\n\tin_CLM_CLAIM_NBR,\n\tcvr_pol_mod_nbr,\n\tcvr_policy_src_id,\n\tcvr_policy_id,\n\tcvr_pol_nbr,\n\tcvr_claim_nbr\n\tFROM (\n\t\tSELECT \n\t\t\tin_CLM_CLAIM_NBR,\n\t\t\tcvr_pol_mod_nbr,\n\t\t\tcvr_policy_src_id,\n\t\t\tcvr_policy_id,\n\t\t\tcvr_pol_nbr,\n\t\t\tcvr_claim_nbr\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_coverage_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cvr_claim_nbr ORDER BY in_CLM_CLAIM_NBR) = 1\n),\nLKP_Clm_Comments_Stage AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT comment.TCC_COMMENT_TXT as TCC_COMMENT_TXT, \r\n\t\tcomment.FOLDER_KEY as FOLDER_KEY, \r\n\t\tcomment.COMMENT_ITEM_NBR as COMMENT_ITEM_NBR \r\n\t\tFROM CLM_COMMENTS_STAGE comment\r\n\t\tINNER JOIN  claim_tab_stage claim_Tab\r\n\t\tON comment.folder_key = claim_Tab.CLM_CLAIM_NBR\r\n\t\tAND  comment.comment_item_nbr = claim_tab.CLM_LOSS_PLACE_ID\r\n\t\tORDER BY FOLDER_KEY,COMMENT_ITEM_NBR\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nLKP_Clm_Comments_Stage_Loss_Description AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT comment.TCC_COMMENT_TXT as TCC_COMMENT_TXT, \r\n\t\tcomment.FOLDER_KEY as FOLDER_KEY, \r\n\t\tcomment.COMMENT_ITEM_NBR as COMMENT_ITEM_NBR \r\n\t\tFROM CLM_COMMENTS_STAGE comment\r\n\t\tINNER JOIN  claim_tab_stage claim_Tab\r\n\t\tON comment.folder_key = claim_Tab.CLM_CLAIM_NBR\r\n\t\tAND  comment.comment_item_nbr = claim_tab.CLM_LOSS_DES_ID\r\n\t\tORDER BY FOLDER_KEY,COMMENT_ITEM_NBR\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nLKP_Clm_Log_Notes_Stage AS (\n\tSELECT\n\tcreate_date,\n\tclaim_nbr\n\tFROM (\n\t\tSELECT \r\n\t\tMAX(a.create_date) as create_date, \r\n\t\ta.claim_nbr as claim_nbr \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_log_notes_stage a\r\n\t\tWHERE  a.deleted_date is NULL\r\n\t\tGROUP BY a.claim_nbr\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_nbr ORDER BY create_date) = 1\n),\nLKP_Clm_Occurrence_Nbr_Stage AS (\n\tSELECT\n\tin_clm_claim_nbr,\n\tcon_claim_nbr,\n\tcon_policy_id,\n\tcon_occurrence_nbr\n\tFROM (\n\t\tSELECT \r\n\t\tSUBSTRING(clm_occurrence_nbr_stage.con_policy_id,1,12) as con_policy_id, \r\n\t\tclm_occurrence_nbr_stage.con_occurrence_nbr as con_occurrence_nbr, \r\n\t\tclm_occurrence_nbr_stage.con_claim_nbr as con_claim_nbr \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_occurrence_nbr_stage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY con_claim_nbr ORDER BY in_clm_claim_nbr) = 1\n),\nLKP_Sup_Claim_Catastrophe_Code AS (\n\tSELECT\n\tcat_start_date,\n\tcat_end_date,\n\tcat_code\n\tFROM (\n\t\tSELECT \r\n\t\ta.cat_start_date as cat_start_date, \r\n\t\ta.cat_end_date as cat_end_date, \r\n\t\trtrim(ltrim(a.cat_code)) as cat_code \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_catastrophe_code a\r\n\t\tWHERE\r\n\t\tsource_system_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY cat_code ORDER BY cat_start_date) = 1\n),\nLKP_Sup_State AS (\n\tSELECT\n\tsup_state_id,\n\tstate_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_state_id,\n\t\t\tstate_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY sup_state_id) = 1\n),\nmplt_claim_occurrence_next_diary AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_Task_NextDueDiary_ByClaim AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect MIN(T.DueDate) as DueDate, T.ClaimId as ClaimId \r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T \r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tgroup by T.ClaimId\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId ORDER BY DueDate DESC) = 1\n\t),\n\tLKP_Task_DiaryByClaimAndDueDate AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tAssignedUserName,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect T.DueDate as DueDate, T.AssignedUserName as AssignedUserName, T.ClaimId as ClaimId\r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T\r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId,DueDate ORDER BY DueDate DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tDueDate, \n\t\tAssignedUserName\n\t\tFROM LKP_Task_DiaryByClaimAndDueDate\n\t),\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tEXP_Values.CLM_CLAIM_NBR,\n\tEXP_Values.CLM_CSR_CLAIM_NBR AS in_CLM_CSR_CLAIM_NBR,\n\t-- *INF*: IIF(ISNULL(in_CLM_CSR_CLAIM_NBR),'N/A',\r\n\t--    IIF(IS_SPACES(in_CLM_CSR_CLAIM_NBR),'N/A',\r\n\t--     rtrim(in_CLM_CSR_CLAIM_NBR)))\n\tIFF(\n\t    in_CLM_CSR_CLAIM_NBR IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_CSR_CLAIM_NBR)>0\n\t    and TRIM(in_CLM_CSR_CLAIM_NBR)='', 'N/A',\n\t        rtrim(in_CLM_CSR_CLAIM_NBR)\n\t    )\n\t) AS CLM_CSR_CLAIM_NBR,\n\tEXP_Values.CLM_POSTAL_CD AS in_CLM_POSTAL_CD,\n\t-- *INF*: iif(isnull(in_CLM_POSTAL_CD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_POSTAL_CD),'N/A',\r\n\t--    rtrim( in_CLM_POSTAL_CD)))\n\tIFF(\n\t    in_CLM_POSTAL_CD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_POSTAL_CD)>0\n\t    and TRIM(in_CLM_POSTAL_CD)='', 'N/A',\n\t        rtrim(in_CLM_POSTAL_CD)\n\t    )\n\t) AS CLM_POSTAL_CD,\n\tEXP_Values.CLM_DISCOVERY_DT AS in_CLM_DISCOVERY_DT,\n\t-- *INF*: iif(isnull(in_CLM_DISCOVERY_DT),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_CLM_DISCOVERY_DT)\n\tIFF(\n\t    in_CLM_DISCOVERY_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_DISCOVERY_DT\n\t) AS CLM_DISCOVERY_DT,\n\tEXP_Values.CLM_LOSS_DATE_TIMESTAMP1 AS in_CLM_LOSS_DT,\n\t-- *INF*: iif(isnull(in_CLM_LOSS_DT),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_CLM_LOSS_DT)\n\tIFF(in_CLM_LOSS_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_LOSS_DT) AS CLM_LOSS_DT,\n\tEXP_Values.CLM_LOSS_CITY AS in_CLM_LOSS_CITY,\n\t-- *INF*: iif(isnull(in_CLM_LOSS_CITY),'N/A',\r\n\t--    iif(is_spaces(in_CLM_LOSS_CITY),'N/A',\r\n\t--    rtrim(in_CLM_LOSS_CITY)))\r\n\t-- \n\tIFF(\n\t    in_CLM_LOSS_CITY IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_LOSS_CITY)>0\n\t    and TRIM(in_CLM_LOSS_CITY)='', 'N/A',\n\t        rtrim(in_CLM_LOSS_CITY)\n\t    )\n\t) AS CLM_LOSS_CITY,\n\tEXP_Values.CLM_LOSS_COUNTY AS in_CLM_LOSS_COUNTY,\n\t-- *INF*: iif(isnull(in_CLM_LOSS_COUNTY),'N/A',\r\n\t--    iif(is_spaces(in_CLM_LOSS_COUNTY),'N/A',\r\n\t--    rtrim( in_CLM_LOSS_COUNTY)))\n\tIFF(\n\t    in_CLM_LOSS_COUNTY IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_LOSS_COUNTY)>0\n\t    and TRIM(in_CLM_LOSS_COUNTY)='', 'N/A',\n\t        rtrim(in_CLM_LOSS_COUNTY)\n\t    )\n\t) AS CLM_LOSS_COUNTY,\n\tEXP_Values.CLM_LOSS_STATE_CD AS in_CLM_LOSS_STATE_CD,\n\t-- *INF*: iif(isnull(in_CLM_LOSS_STATE_CD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_LOSS_STATE_CD),'N/A',\r\n\t--     rtrim(in_CLM_LOSS_STATE_CD)))\n\tIFF(\n\t    in_CLM_LOSS_STATE_CD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_LOSS_STATE_CD)>0\n\t    and TRIM(in_CLM_LOSS_STATE_CD)='', 'N/A',\n\t        rtrim(in_CLM_LOSS_STATE_CD)\n\t    )\n\t) AS CLM_LOSS_STATE_CD,\n\tEXP_Values.CLM_TYPE_CD AS in_CLM_TYPE_CD,\n\t-- *INF*: iif(isnull(in_CLM_TYPE_CD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_TYPE_CD),'N/A',\r\n\t--     rtrim(in_CLM_TYPE_CD)))\n\tIFF(\n\t    in_CLM_TYPE_CD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_TYPE_CD)>0\n\t    and TRIM(in_CLM_TYPE_CD)='', 'N/A', rtrim(in_CLM_TYPE_CD)\n\t    )\n\t) AS CLM_TYPE_CD,\n\tEXP_Values.CLM_REI_NOTIFY_DT AS in_CLM_REI_NOTIFY_DT,\n\t-- *INF*: iif(isnull(in_CLM_REI_NOTIFY_DT),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_CLM_REI_NOTIFY_DT)\n\tIFF(\n\t    in_CLM_REI_NOTIFY_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_REI_NOTIFY_DT\n\t) AS CLM_REI_NOTIFY_DT,\n\tEXP_Values.CLM_METHOD_RPTD AS in_CLM_METHOD_RPTD,\n\t-- *INF*: iif(isnull(in_CLM_METHOD_RPTD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_METHOD_RPTD),'N/A',\r\n\t--     rtrim(in_CLM_METHOD_RPTD)))\r\n\t-- \r\n\t-- \n\tIFF(\n\t    in_CLM_METHOD_RPTD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_METHOD_RPTD)>0\n\t    and TRIM(in_CLM_METHOD_RPTD)='', 'N/A',\n\t        rtrim(in_CLM_METHOD_RPTD)\n\t    )\n\t) AS CLM_METHOD_RPTD,\n\tEXP_Values.CLM_HOW_CLM_RPTD AS in_CLM_HOW_CLM_RPTD,\n\t-- *INF*: iif(isnull(in_CLM_HOW_CLM_RPTD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_HOW_CLM_RPTD),'N/A',\r\n\t--     rtrim(in_CLM_HOW_CLM_RPTD)))\n\tIFF(\n\t    in_CLM_HOW_CLM_RPTD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_HOW_CLM_RPTD)>0\n\t    and TRIM(in_CLM_HOW_CLM_RPTD)='', 'N/A',\n\t        rtrim(in_CLM_HOW_CLM_RPTD)\n\t    )\n\t) AS CLM_HOW_CLM_RPTD,\n\tEXP_Values.CLM_VIOL_CIT_DESC AS in_CLM_VIOL_CIT_DESC,\n\t-- *INF*: IIF(ISNULL(in_CLM_VIOL_CIT_DESC),'N/A',\r\n\t--    IIF(IS_SPACES(in_CLM_VIOL_CIT_DESC),'N/A',\r\n\t--    rtrim( in_CLM_VIOL_CIT_DESC)))\n\tIFF(\n\t    in_CLM_VIOL_CIT_DESC IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_VIOL_CIT_DESC)>0\n\t    and TRIM(in_CLM_VIOL_CIT_DESC)='', 'N/A',\n\t        rtrim(in_CLM_VIOL_CIT_DESC)\n\t    )\n\t) AS CLM_VIOL_CIT_DESC,\n\tLKP_Clm_Occurrence_Nbr_Stage.con_occurrence_nbr AS in_CON_OCCURRENCE_NBR,\n\t-- *INF*: IIF(ISNULL(in_CON_OCCURRENCE_NBR),'N/A',\r\n\t--    IIF(IS_SPACES(in_CON_OCCURRENCE_NBR),'N/A',\r\n\t--    rtrim( in_CON_OCCURRENCE_NBR)))\n\tIFF(\n\t    in_CON_OCCURRENCE_NBR IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CON_OCCURRENCE_NBR)>0\n\t    and TRIM(in_CON_OCCURRENCE_NBR)='', 'N/A',\n\t        rtrim(in_CON_OCCURRENCE_NBR)\n\t    )\n\t) AS CON_OCCURRENCE_NBR,\n\tEXP_Values.CLM_OCCURRENCE_ID,\n\tEXP_Values.CLM_CATASTROPHE_CODE AS in_CLM_CATASTROPHE_CODE,\n\tv_CLM_CATASTROPHE_CODE AS CLM_CATASTROPHE_CODE,\n\t-- *INF*: iif(isnull(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--    iif(is_spaces(in_CLM_CATASTROPHE_CODE),'N/A',\r\n\t--     rtrim(in_CLM_CATASTROPHE_CODE)))\n\tIFF(\n\t    in_CLM_CATASTROPHE_CODE IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_CATASTROPHE_CODE)>0\n\t    and TRIM(in_CLM_CATASTROPHE_CODE)='', 'N/A',\n\t        rtrim(in_CLM_CATASTROPHE_CODE)\n\t    )\n\t) AS v_CLM_CATASTROPHE_CODE,\n\tLKP_Clm_Comments_Stage.TCC_COMMENT_TXT AS in_TCC_COMMENT_TXT,\n\t-- *INF*: iif(isnull(in_TCC_COMMENT_TXT),'N/A',\r\n\t--    iif(is_spaces(in_TCC_COMMENT_TXT),'N/A',\r\n\t--    rtrim(in_TCC_COMMENT_TXT)))\n\tIFF(\n\t    in_TCC_COMMENT_TXT IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_TCC_COMMENT_TXT)>0\n\t    and TRIM(in_TCC_COMMENT_TXT)='', 'N/A',\n\t        rtrim(in_TCC_COMMENT_TXT)\n\t    )\n\t) AS TCC_COMMENT_TXT,\n\tLKP_Sup_Claim_Catastrophe_Code.cat_start_date AS in_COC_START_DT,\n\t-- *INF*: IIF(v_CLM_CATASTROPHE_CODE = 'N/A', TO_DATE('1/1/1800', 'MM/DD/YYYY'), \r\n\t-- IIF(ISNULL(in_COC_START_DT),TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- in_COC_START_DT))\n\tIFF(\n\t    v_CLM_CATASTROPHE_CODE = 'N/A', TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    IFF(\n\t        in_COC_START_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_COC_START_DT\n\t    )\n\t) AS COC_START_DT,\n\tLKP_Sup_Claim_Catastrophe_Code.cat_end_date AS in_COC_END_DT,\n\t-- *INF*: IIF(v_CLM_CATASTROPHE_CODE = 'N/A', TO_DATE('12/31/2100', 'MM/DD/YYYY'), \r\n\t-- IIF(ISNULL(in_COC_END_DT),TO_DATE('12/31/2100','MM/DD/YYYY'),\r\n\t-- in_COC_END_DT))\n\tIFF(\n\t    v_CLM_CATASTROPHE_CODE = 'N/A', TO_TIMESTAMP('12/31/2100', 'MM/DD/YYYY'),\n\t    IFF(\n\t        in_COC_END_DT IS NULL, TO_TIMESTAMP('12/31/2100', 'MM/DD/YYYY'), in_COC_END_DT\n\t    )\n\t) AS COC_END_DT,\n\tEXP_Values.CLM_STATUS_CD AS in_CLM_STATUS_CD,\n\t-- *INF*: iif(isnull(in_CLM_STATUS_CD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_STATUS_CD),'N/A',\r\n\t--      iif(in_CLM_STATUS_CD = 'O' and in_CLM_NOT_CLAIM_IND = 'N','NO',\r\n\t-- \trtrim(in_CLM_STATUS_CD))))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(\n\t    in_CLM_STATUS_CD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_STATUS_CD)>0\n\t    and TRIM(in_CLM_STATUS_CD)='', 'N/A',\n\t        IFF(\n\t            in_CLM_STATUS_CD = 'O'\n\t        and in_CLM_NOT_CLAIM_IND = 'N', 'NO',\n\t            rtrim(in_CLM_STATUS_CD)\n\t        )\n\t    )\n\t) AS CLM_STATUS_CD,\n\tEXP_Values.CLM_CREATE_TS AS in_CLM_CREATE_TS,\n\t-- *INF*: iif(isnull(in_CLM_CREATE_TS), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--    in_CLM_CREATE_TS)\r\n\t-- \n\tIFF(in_CLM_CREATE_TS IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_CREATE_TS) AS CLM_CREATE_TS,\n\tEXP_Values.CLM_AT_FAULT_CD AS in_CLM_AT_FAULT_CD,\n\t-- *INF*: iif(isnull(in_CLM_AT_FAULT_CD),'N/A',\r\n\t--    iif(is_spaces(in_CLM_AT_FAULT_CD),'N/A',\r\n\t--    rtrim(in_CLM_AT_FAULT_CD)))\n\tIFF(\n\t    in_CLM_AT_FAULT_CD IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_AT_FAULT_CD)>0\n\t    and TRIM(in_CLM_AT_FAULT_CD)='', 'N/A',\n\t        rtrim(in_CLM_AT_FAULT_CD)\n\t    )\n\t) AS CLM_AT_FAULT_CD,\n\tEXP_Values.CLM_DRIVER_NBR AS in_CLM_DRIVER_NBR,\n\t-- *INF*: IIF(\r\n\t-- (ISNULL(in_CLM_DRIVER_NBR) OR LENGTH(TO_CHAR(in_CLM_DRIVER_NBR))=0),\r\n\t-- -1,\r\n\t-- in_CLM_DRIVER_NBR)\n\tIFF(\n\t    (in_CLM_DRIVER_NBR IS NULL OR LENGTH(TO_CHAR(in_CLM_DRIVER_NBR)) = 0), - 1,\n\t    in_CLM_DRIVER_NBR\n\t) AS CLM_DRIVER_NBR,\n\tEXP_Values.CLM_DRV_SAME_IND AS in_CLM_DRV_SAME_IND,\n\t-- *INF*: iif(isnull(in_CLM_DRV_SAME_IND),'N/A',\r\n\t--    iif(is_spaces(in_CLM_DRV_SAME_IND),'N/A',\r\n\t--    rtrim(in_CLM_DRV_SAME_IND)))\n\tIFF(\n\t    in_CLM_DRV_SAME_IND IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_CLM_DRV_SAME_IND)>0\n\t    and TRIM(in_CLM_DRV_SAME_IND)='', 'N/A',\n\t        rtrim(in_CLM_DRV_SAME_IND)\n\t    )\n\t) AS CLM_DRV_SAME_IND,\n\tLKP_Clm_Log_Notes_Stage.create_date AS in_LOG_NOTE_LAST_ACTIVITY_DATE,\n\t-- *INF*: iif(isnull(in_LOG_NOTE_LAST_ACTIVITY_DATE), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--    in_LOG_NOTE_LAST_ACTIVITY_DATE)\n\tIFF(\n\t    in_LOG_NOTE_LAST_ACTIVITY_DATE IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    in_LOG_NOTE_LAST_ACTIVITY_DATE\n\t) AS LOG_NOTE_LAST_ACTIVITY_DATE,\n\tmplt_claim_occurrence_next_diary.DueDate AS in_CLAIM_NEXT_DIARY_DATE,\n\t-- *INF*: iif(isnull(in_CLAIM_NEXT_DIARY_DATE), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--   in_CLAIM_NEXT_DIARY_DATE)\n\tIFF(\n\t    in_CLAIM_NEXT_DIARY_DATE IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    in_CLAIM_NEXT_DIARY_DATE\n\t) AS CLAIM_NEXT_DIARY_DATE,\n\t-- *INF*: iif(isnull(in_ADJUSTER_NEXT_DIARY_DATE), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--   in_ADJUSTER_NEXT_DIARY_DATE)\n\tIFF(\n\t    in_ADJUSTER_NEXT_DIARY_DATE IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    in_ADJUSTER_NEXT_DIARY_DATE\n\t) AS ADJUSTER_NEXT_DIARY_DATE,\n\tLKP_Clm_Comments_Stage_Loss_Description.TCC_COMMENT_TXT AS in_LOSS_DESCRIPTION,\n\t-- *INF*: iif(isnull(in_LOSS_DESCRIPTION),'N/A',\r\n\t--    iif(is_spaces(in_LOSS_DESCRIPTION),'N/A',\r\n\t--    rtrim(in_LOSS_DESCRIPTION)))\n\tIFF(\n\t    in_LOSS_DESCRIPTION IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(in_LOSS_DESCRIPTION)>0\n\t    and TRIM(in_LOSS_DESCRIPTION)='', 'N/A',\n\t        rtrim(in_LOSS_DESCRIPTION)\n\t    )\n\t) AS LOSS_DESCRIPTION,\n\t'N/A' AS OFFSET_ONSET_INDICATOR,\n\t0 AS LOGICAL_FLAG,\n\tEXP_Values.CLM_NOT_CLAIM_IND AS in_CLM_NOT_CLAIM_IND,\n\t-- *INF*: iif((isnull(in_CLM_NOT_CLAIM_IND) OR is_spaces(in_CLM_NOT_CLAIM_IND) OR LENGTH(in_CLM_NOT_CLAIM_IND) = 0),'N/A',\r\n\t--    rtrim(in_CLM_NOT_CLAIM_IND))\n\tIFF(\n\t    (in_CLM_NOT_CLAIM_IND IS NULL\n\t    or LENGTH(in_CLM_NOT_CLAIM_IND)>0\n\t    and TRIM(in_CLM_NOT_CLAIM_IND)=''\n\t    or LENGTH(in_CLM_NOT_CLAIM_IND) = 0),\n\t    'N/A',\n\t    rtrim(in_CLM_NOT_CLAIM_IND)\n\t) AS CLM_NOT_CLAIM_IND,\n\tEXP_Values.CLM_UPD_TS AS in_CLM_UPD_TS,\n\t-- *INF*: iif(isnull(in_CLM_UPD_TS), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--    in_CLM_UPD_TS)\n\tIFF(in_CLM_UPD_TS IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_UPD_TS) AS CLM_UPD_TS,\n\tEXP_Values.CLM_REPORTED_DT AS in_CLM_REPORTED_DT,\n\t-- *INF*: iif(isnull(in_CLM_REPORTED_DT), TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t--    in_CLM_REPORTED_DT)\n\tIFF(in_CLM_REPORTED_DT IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), in_CLM_REPORTED_DT) AS CLM_REPORTED_DT,\n\tLKP_Adjuster_Tab_Stage.CAJ_EMP_CLIENT_ID,\n\t-- *INF*: IIF(ISNULL(CAJ_EMP_CLIENT_ID),'N/A',LTRIM(RTRIM(CAJ_EMP_CLIENT_ID)))\n\tIFF(CAJ_EMP_CLIENT_ID IS NULL, 'N/A', LTRIM(RTRIM(CAJ_EMP_CLIENT_ID))) AS v_claim_created_by_key,\n\tv_claim_created_by_key AS out_claim_created_by_key,\n\tmplt_claim_occurrence_next_diary.AssignedUserName AS claim_rep_full_name,\n\t-- *INF*: IIF(ISNULL(claim_rep_full_name),'N/A',claim_rep_full_name)\n\tIFF(claim_rep_full_name IS NULL, 'N/A', claim_rep_full_name) AS claim_rep_full_name_out,\n\tEXP_Values.clm_wc_cat_code,\n\t-- *INF*: iif((isnull(clm_wc_cat_code) OR is_spaces(clm_wc_cat_code) OR LENGTH(clm_wc_cat_code) = 0),'N/A',\r\n\t--    rtrim(clm_wc_cat_code))\n\tIFF(\n\t    (clm_wc_cat_code IS NULL\n\t    or LENGTH(clm_wc_cat_code)>0\n\t    and TRIM(clm_wc_cat_code)=''\n\t    or LENGTH(clm_wc_cat_code) = 0),\n\t    'N/A',\n\t    rtrim(clm_wc_cat_code)\n\t) AS clm_wc_cat_code_out,\n\tLKP_Sup_State.sup_state_id AS in_sup_state_id,\n\t-- *INF*: IIF(ISNULL(in_sup_state_id),'-1',in_sup_state_id)\r\n\t-- \n\tIFF(in_sup_state_id IS NULL, '-1', in_sup_state_id) AS sup_state_id,\n\t-- *INF*: iif (isnull(in_pol_ak_id) ,\r\n\t-- -1, \r\n\t-- in_pol_ak_id)\r\n\t-- \r\n\t-- \n\tIFF(in_pol_ak_id IS NULL, - 1, in_pol_ak_id) AS pol_ak_id,\n\tLKP_Clm_Occurrence_Nbr_Stage.con_policy_id AS in_con_policy_id,\n\t-- *INF*: iif((isnull(in_con_policy_id) OR is_spaces(in_con_policy_id) OR LENGTH(in_con_policy_id) = 0),'N/A',\r\n\t--    rtrim(in_con_policy_id))\n\tIFF(\n\t    (in_con_policy_id IS NULL\n\t    or LENGTH(in_con_policy_id)>0\n\t    and TRIM(in_con_policy_id)=''\n\t    or LENGTH(in_con_policy_id) = 0),\n\t    'N/A',\n\t    rtrim(in_con_policy_id)\n\t) AS v_con_policy_id,\n\tLKP_Claim_Coverage_Stage.cvr_pol_mod_nbr AS in_cvr_pol_mod_nbr,\n\tLKP_Claim_Coverage_Stage.cvr_policy_src_id AS in_cvr_policy_src_id,\n\tLKP_Claim_Coverage_Stage.cvr_policy_id AS in_cvr_policy_id,\n\tLKP_Claim_Coverage_Stage.cvr_pol_nbr AS in_civr_pol_nbr,\n\t-- *INF*: LTRIM(RTRIM(in_civr_pol_nbr)) ||LPAD(LTRIM(RTRIM(in_cvr_pol_mod_nbr)),2,'0')\n\tLTRIM(RTRIM(in_civr_pol_nbr)) || LPAD(LTRIM(RTRIM(in_cvr_pol_mod_nbr)), 2, '0') AS v_cvr_policy_key,\n\t-- *INF*: IIF(ISNULL(v_cvr_policy_key),'N/A', v_cvr_policy_key)\n\tIFF(v_cvr_policy_key IS NULL, 'N/A', v_cvr_policy_key) AS v_coverage_policy_key,\n\t-- *INF*: DECODE(LTRIM(RTRIM(in_cvr_policy_src_id)),\r\n\t-- 'PMS',v_con_policy_id,\r\n\t-- 'ESU',v_con_policy_id,\r\n\t-- 'DUC',v_coverage_policy_key,\r\n\t-- 'PDC',v_coverage_policy_key,\r\n\t-- 'N/A')\r\n\t-- \n\tDECODE(\n\t    LTRIM(RTRIM(in_cvr_policy_src_id)),\n\t    'PMS', v_con_policy_id,\n\t    'ESU', v_con_policy_id,\n\t    'DUC', v_coverage_policy_key,\n\t    'PDC', v_coverage_policy_key,\n\t    'N/A'\n\t) AS o_POLICY_KEY,\n\tEXP_Values.clm_primary_loc_code AS in_clm_primary_loc_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_clm_primary_loc_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_clm_primary_loc_code) AS out_clm_primary_loc_code,\n\tEXP_Values.clm_secondary_dept_code AS in_clm_secondary_dept_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_clm_secondary_dept_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(in_clm_secondary_dept_code) AS out_clm_secondary_dept_code,\n\tLKP_ClaimRelationShipStage.RelationshipId AS in_RelationshipId,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_RelationshipId))\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_RelationshipId)) AS out_RelationshipId\n\tFROM EXP_Values\n\t -- Manually join with mplt_claim_occurrence_next_diary\n\tLEFT JOIN LKP_Adjuster_Tab_Stage\n\tON LKP_Adjuster_Tab_Stage.CAJ_USER_ID = EXP_Values.CLM_ENTRY_OPR_ID\n\tLEFT JOIN LKP_ClaimRelationShipStage\n\tON LKP_ClaimRelationShipStage.TchClaimNbr = EXP_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Claim_Coverage_Stage\n\tON LKP_Claim_Coverage_Stage.cvr_claim_nbr = EXP_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Clm_Comments_Stage\n\tON LKP_Clm_Comments_Stage.FOLDER_KEY = EXP_Values.CLM_CLAIM_NBR AND LKP_Clm_Comments_Stage.COMMENT_ITEM_NBR = EXP_Values.CLM_LOSS_PLACE_ID\n\tLEFT JOIN LKP_Clm_Comments_Stage_Loss_Description\n\tON LKP_Clm_Comments_Stage_Loss_Description.FOLDER_KEY = EXP_Values.CLM_CLAIM_NBR AND LKP_Clm_Comments_Stage_Loss_Description.COMMENT_ITEM_NBR = EXP_Values.CLM_LOSS_DES_ID\n\tLEFT JOIN LKP_Clm_Log_Notes_Stage\n\tON LKP_Clm_Log_Notes_Stage.claim_nbr = EXP_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Clm_Occurrence_Nbr_Stage\n\tON LKP_Clm_Occurrence_Nbr_Stage.con_claim_nbr = EXP_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Sup_Claim_Catastrophe_Code\n\tON LKP_Sup_Claim_Catastrophe_Code.cat_code = EXP_Values.CLM_CATASTROPHE_CODE\n\tLEFT JOIN LKP_Sup_State\n\tON LKP_Sup_State.state_code = EXP_Values.o_CLM_LOSS_STATE_CD\n),\nLKP_Claim_Occurrence AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_ak_id,\n\tpol_key_ak_id,\n\tclaim_occurrence_type_code,\n\tsource_claim_occurrence_status_code,\n\tnotice_claim_ind,\n\ts3p_claim_created_date,\n\tsource_claim_rpted_date,\n\ts3p_claim_updated_date,\n\trpt_method,\n\thow_claim_rpted,\n\tloss_loc_addr,\n\tloss_loc_city,\n\tloss_loc_county,\n\tloss_loc_state,\n\tloss_loc_zip,\n\tclaim_loss_date,\n\tclaim_discovery_date,\n\tclaim_cat_code,\n\tclaim_cat_start_date,\n\tclaim_cat_end_date,\n\ts3p_claim_num,\n\treins_notified_date,\n\tclaim_occurrence_num,\n\tclaim_voilation_citation_descript,\n\tclaim_loss_descript,\n\tclaim_insd_at_fault_code,\n\tclaim_insd_driver_num,\n\tclaim_insd_driver_ind,\n\tclaim_log_note_last_act_date,\n\tnext_diary_date,\n\tnext_diary_date_rep,\n\toffset_onset_ind,\n\tclaim_created_by_key,\n\twc_cat_code,\n\tPrimaryWorkGroup,\n\tSecondaryWorkGroup,\n\tClaimRelationshipKey,\n\tclaim_occurrence_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.claim_occurrence_id as claim_occurrence_id, \r\n\t\ta.claim_occurrence_ak_id as claim_occurrence_ak_id, \r\n\t\ta.pol_key_ak_id as pol_key_ak_id, \r\n\t\ta.claim_occurrence_type_code as claim_occurrence_type_code, \r\n\t\ta.source_claim_occurrence_status_code as source_claim_occurrence_status_code, \r\n\t\ta.notice_claim_ind as notice_claim_ind,\r\n\t\ta.s3p_claim_created_date as s3p_claim_created_date, \r\n\t\ta.source_claim_rpted_date as source_claim_rpted_date,\r\n\t\ta.s3p_claim_updated_date as s3p_claim_updated_date,\r\n\t\ta.rpt_method as rpt_method, \r\n\t\ta.how_claim_rpted as how_claim_rpted, \r\n\t\ta.loss_loc_addr as loss_loc_addr, \r\n\t\ta.loss_loc_city as loss_loc_city, \r\n\t\ta.loss_loc_county as loss_loc_county, \r\n\t\ta.loss_loc_state as loss_loc_state, \r\n\t\ta.loss_loc_zip as loss_loc_zip, \r\n\t\ta.claim_loss_date as claim_loss_date, \r\n\t\ta.claim_discovery_date as claim_discovery_date, \r\n\t\ta.claim_cat_code as claim_cat_code, \r\n\t\ta.claim_cat_start_date as claim_cat_start_date,\r\n\t\ta.claim_cat_end_date as claim_cat_end_date, \r\n\t\ta.s3p_claim_num as s3p_claim_num, \r\n\t\ta.reins_notified_date as reins_notified_date, \r\n\t\ta.claim_occurrence_num as claim_occurrence_num, \r\n\t\ta.claim_voilation_citation_descript as claim_voilation_citation_descript, \r\n\t\ta.claim_loss_descript as claim_loss_descript, \r\n\t\ta.claim_insd_at_fault_code as claim_insd_at_fault_code, \r\n\t\ta.claim_insd_driver_num as claim_insd_driver_num,\r\n\t\ta.claim_insd_driver_ind as claim_insd_driver_ind, \r\n\t\ta.claim_log_note_last_act_date as claim_log_note_last_act_date, \r\n\t\ta.next_diary_date as next_diary_date, \r\n\t\ta.next_diary_date_rep as next_diary_date_rep, \r\n\t\ta.offset_onset_ind as offset_onset_ind, \r\n\t\ta.claim_created_by_key as claim_created_by_key,\r\n\t\ta.claim_occurrence_key as claim_occurrence_key ,\r\n\t\ta.wc_cat_code as wc_cat_code ,\r\n\t\ta.PrimaryWorkGroup as PrimaryWorkGroup,\r\n\t\ta.SecondaryWorkGroup as SecondaryWorkGroup,\r\n\t\ta.ClaimRelationshipKey as ClaimRelationshipKey\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence a ,@{pipeline().parameters.SOURCE_DATABASE}.dbo.claim_tab_stage b\r\n\t\tWHERE a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND a.crrnt_snpsht_flag = 1\r\n\t\tAND RTRIM(a.claim_occurrence_key) = b.clm_claim_nbr\r\n\t\tORDER BY claim_occurrence_key --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key ORDER BY claim_occurrence_id) = 1\n),\nLKP_Sup_Claim_Insured_At_Fault_Code AS (\n\tSELECT\n\tsup_claim_insd_at_fault_code_id,\n\tclaim_insd_at_fault_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_claim_insd_at_fault_code_id,\n\t\t\tclaim_insd_at_fault_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_insured_at_fault_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_insd_at_fault_code ORDER BY sup_claim_insd_at_fault_code_id) = 1\n),\nLKP_V2_Policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \r\n\t\ta.pol_ak_id as pol_ak_id, \r\n\t\ta.pol_key as pol_key \r\n\t\tFROM V2.policy a\r\n\t\tWHERE a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Lkp_Values.CLM_CLAIM_NBR,\n\tEXP_Lkp_Values.CLM_CSR_CLAIM_NBR,\n\tEXP_Lkp_Values.CLM_POSTAL_CD,\n\tEXP_Lkp_Values.CLM_DISCOVERY_DT,\n\tEXP_Lkp_Values.CLM_LOSS_DT,\n\tEXP_Lkp_Values.CLM_LOSS_CITY,\n\tEXP_Lkp_Values.CLM_LOSS_COUNTY,\n\tEXP_Lkp_Values.CLM_LOSS_STATE_CD,\n\tEXP_Lkp_Values.CLM_TYPE_CD,\n\tEXP_Lkp_Values.CLM_REI_NOTIFY_DT,\n\tEXP_Lkp_Values.CLM_METHOD_RPTD,\n\tEXP_Lkp_Values.CLM_HOW_CLM_RPTD,\n\tEXP_Lkp_Values.CLM_VIOL_CIT_DESC,\n\tEXP_Lkp_Values.CON_OCCURRENCE_NBR,\n\tEXP_Lkp_Values.CLM_CATASTROPHE_CODE,\n\tEXP_Lkp_Values.TCC_COMMENT_TXT,\n\tEXP_Lkp_Values.COC_START_DT,\n\tEXP_Lkp_Values.COC_END_DT,\n\tEXP_Lkp_Values.CLM_STATUS_CD,\n\tEXP_Lkp_Values.CLM_CREATE_TS,\n\tEXP_Lkp_Values.CLM_UPD_TS,\n\tEXP_Lkp_Values.LOSS_DESCRIPTION,\n\tEXP_Lkp_Values.CLM_AT_FAULT_CD,\n\tEXP_Lkp_Values.CLM_DRIVER_NBR,\n\tEXP_Lkp_Values.CLM_DRV_SAME_IND,\n\tEXP_Lkp_Values.LOG_NOTE_LAST_ACTIVITY_DATE,\n\tEXP_Lkp_Values.CLAIM_NEXT_DIARY_DATE,\n\tEXP_Lkp_Values.ADJUSTER_NEXT_DIARY_DATE,\n\tEXP_Lkp_Values.OFFSET_ONSET_INDICATOR,\n\tEXP_Lkp_Values.CLM_NOT_CLAIM_IND,\n\tEXP_Lkp_Values.CLM_REPORTED_DT,\n\tLKP_V2_Policy.pol_ak_id AS in_POL_AK_ID,\n\t-- *INF*: IIF(ISNULL(in_POL_AK_ID),-1,in_POL_AK_ID)\n\tIFF(in_POL_AK_ID IS NULL, - 1, in_POL_AK_ID) AS v_POL_AK_ID,\n\tv_POL_AK_ID AS POL_AK_ID,\n\tEXP_Lkp_Values.out_claim_created_by_key AS Out_claim_created_by_key,\n\tLKP_Claim_Occurrence.claim_occurrence_id,\n\tLKP_Claim_Occurrence.claim_occurrence_ak_id AS LKP_claim_occurrence_ak_id,\n\tLKP_Claim_Occurrence.pol_key_ak_id AS pol_key_dim_id,\n\tLKP_Claim_Occurrence.claim_occurrence_type_code,\n\tLKP_Claim_Occurrence.source_claim_occurrence_status_code AS s3p_claim_occurrence_status_code,\n\tLKP_Claim_Occurrence.s3p_claim_created_date,\n\tLKP_Claim_Occurrence.source_claim_rpted_date,\n\tLKP_Claim_Occurrence.s3p_claim_updated_date AS s3p_claim_update_date,\n\tLKP_Claim_Occurrence.rpt_method,\n\tLKP_Claim_Occurrence.how_claim_rpted,\n\tLKP_Claim_Occurrence.loss_loc_addr,\n\tLKP_Claim_Occurrence.loss_loc_city,\n\tLKP_Claim_Occurrence.loss_loc_county,\n\tLKP_Claim_Occurrence.loss_loc_state,\n\tLKP_Claim_Occurrence.loss_loc_zip,\n\tLKP_Claim_Occurrence.claim_loss_date,\n\tLKP_Claim_Occurrence.claim_discovery_date,\n\tLKP_Claim_Occurrence.claim_cat_code,\n\tLKP_Claim_Occurrence.claim_cat_start_date,\n\tLKP_Claim_Occurrence.claim_cat_end_date,\n\tLKP_Claim_Occurrence.s3p_claim_num,\n\tLKP_Claim_Occurrence.reins_notified_date,\n\tLKP_Claim_Occurrence.claim_occurrence_num,\n\tLKP_Claim_Occurrence.claim_voilation_citation_descript,\n\tLKP_Claim_Occurrence.claim_loss_descript,\n\tLKP_Claim_Occurrence.claim_insd_at_fault_code,\n\tLKP_Claim_Occurrence.claim_insd_driver_num AS claim_insd_drvr_num,\n\tLKP_Claim_Occurrence.claim_insd_driver_ind AS claim_insd_drvr_ind,\n\tLKP_Claim_Occurrence.claim_log_note_last_act_date,\n\tLKP_Claim_Occurrence.next_diary_date_rep,\n\tLKP_Claim_Occurrence.next_diary_date,\n\tLKP_Claim_Occurrence.offset_onset_ind,\n\tLKP_Claim_Occurrence.notice_claim_ind AS s3p_not_claim_ind,\n\tLKP_Claim_Occurrence.claim_created_by_key,\n\tLKP_Claim_Occurrence.wc_cat_code,\n\tLKP_Claim_Occurrence.PrimaryWorkGroup,\n\tLKP_Claim_Occurrence.SecondaryWorkGroup,\n\tLKP_Claim_Occurrence.ClaimRelationshipKey,\n\tEXP_Lkp_Values.LOGICAL_FLAG,\n\t1 AS Crrnt_Snpsht_Flag,\n\t-- *INF*: iif(isnull(claim_occurrence_id),'NEW',\r\n\t-- \tiif (\r\n\t-- \t(ltrim(rtrim(CLM_CSR_CLAIM_NBR)) <> ltrim(rtrim(s3p_claim_num))) or\r\n\t-- \t(ltrim(rtrim(CLM_POSTAL_CD)) <> ltrim(rtrim(loss_loc_zip))) or\r\n\t-- \t(CLM_DISCOVERY_DT <> claim_discovery_date ) or\r\n\t-- \t(CLM_LOSS_DT  <> claim_loss_date ) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_CITY)) <> ltrim(rtrim(loss_loc_city))) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_COUNTY)) <> ltrim(rtrim(loss_loc_county) )) or\r\n\t-- \t(ltrim(rtrim(CLM_LOSS_STATE_CD)) <>  ltrim(rtrim(loss_loc_state))) or\r\n\t-- --\r\n\t-- (ltrim(rtrim(clm_wc_cat_code_out)) <> ltrim(rtrim(wc_cat_code))) or\r\n\t-- ---\r\n\t-- \t(ltrim(rtrim(CLM_TYPE_CD)) <> ltrim(rtrim(claim_occurrence_type_code))) or\r\n\t-- \t(CLM_REI_NOTIFY_DT <> reins_notified_date) or\r\n\t-- \t(ltrim(rtrim(CLM_METHOD_RPTD)) <> ltrim(rtrim(rpt_method))) or\r\n\t-- \t(ltrim(rtrim(CLM_HOW_CLM_RPTD)) <> ltrim(rtrim(how_claim_rpted))) or\r\n\t-- \t(ltrim(rtrim(CLM_VIOL_CIT_DESC)) <> ltrim(rtrim(claim_voilation_citation_descript))) or\r\n\t-- \t(ltrim(rtrim(CON_OCCURRENCE_NBR)) <> ltrim(rtrim(claim_occurrence_num))) or\r\n\t-- \t(ltrim(rtrim(CLM_CATASTROPHE_CODE)) <> ltrim(rtrim(claim_cat_code))) or\r\n\t-- \t(ltrim(rtrim(TCC_COMMENT_TXT)) <>  ltrim(rtrim(loss_loc_addr))) or\r\n\t-- \t(COC_START_DT <> claim_cat_start_date) or\r\n\t-- \t(COC_END_DT <> claim_cat_end_date) or\r\n\t-- \t(ltrim(rtrim(CLM_STATUS_CD))  <> ltrim(rtrim(s3p_claim_occurrence_status_code))) or\r\n\t-- \t( CLM_CREATE_TS <> s3p_claim_created_date) or\r\n\t-- \t----(CLM_UPD_TS <> s3p_claim_update_date) or\r\n\t-- \t(ltrim(rtrim( LOSS_DESCRIPTION)) <> ltrim(rtrim(claim_loss_descript))) or\r\n\t-- \t(ltrim(rtrim(CLM_AT_FAULT_CD))  <> ltrim(rtrim(claim_insd_at_fault_code))) or\r\n\t-- \t( CLM_DRIVER_NBR <> claim_insd_drvr_num) or\r\n\t-- \t(ltrim(rtrim( CLM_DRV_SAME_IND)) <> ltrim(rtrim(claim_insd_drvr_ind))) or\r\n\t-- \t(LOG_NOTE_LAST_ACTIVITY_DATE  <> claim_log_note_last_act_date) or\r\n\t-- \t(claim_rep_full_name_out  <> next_diary_date_rep) or\r\n\t-- \t( CLAIM_NEXT_DIARY_DATE <> next_diary_date) or\r\n\t-- \t(ltrim(rtrim(OFFSET_ONSET_INDICATOR))  <> ltrim(rtrim(offset_onset_ind))) or\r\n\t--       (ltrim(rtrim(CLM_NOT_CLAIM_IND))  <> ltrim(rtrim(s3p_not_claim_ind))) or\r\n\t--       CLM_REPORTED_DT <> source_claim_rpted_date or \r\n\t-- \tv_POL_AK_ID <>  pol_key_dim_id or\r\n\t-- \tPrimaryWorkGroup <> clm_primary_loc_code or \r\n\t-- \tSecondaryWorkGroup <> clm_secondary_dept_code or\r\n\t--       ltrim(rtrim(Out_claim_created_by_key)) <> ltrim(rtrim(claim_created_by_key)) or ltrim(rtrim(ClaimRelationshipKey)) <> ltrim(rtrim(RelationshipId)),\r\n\t-- \t'UPDATE',\r\n\t-- \t'NOCHANGE'))\n\tIFF(\n\t    claim_occurrence_id IS NULL, 'NEW',\n\t    IFF(\n\t        (ltrim(rtrim(CLM_CSR_CLAIM_NBR)) <> ltrim(rtrim(s3p_claim_num)))\n\t        or (ltrim(rtrim(CLM_POSTAL_CD)) <> ltrim(rtrim(loss_loc_zip)))\n\t        or (CLM_DISCOVERY_DT <> claim_discovery_date)\n\t        or (CLM_LOSS_DT <> claim_loss_date)\n\t        or (ltrim(rtrim(CLM_LOSS_CITY)) <> ltrim(rtrim(loss_loc_city)))\n\t        or (ltrim(rtrim(CLM_LOSS_COUNTY)) <> ltrim(rtrim(loss_loc_county)))\n\t        or (ltrim(rtrim(CLM_LOSS_STATE_CD)) <> ltrim(rtrim(loss_loc_state)))\n\t        or (ltrim(rtrim(clm_wc_cat_code_out)) <> ltrim(rtrim(wc_cat_code)))\n\t        or (ltrim(rtrim(CLM_TYPE_CD)) <> ltrim(rtrim(claim_occurrence_type_code)))\n\t        or (CLM_REI_NOTIFY_DT <> reins_notified_date)\n\t        or (ltrim(rtrim(CLM_METHOD_RPTD)) <> ltrim(rtrim(rpt_method)))\n\t        or (ltrim(rtrim(CLM_HOW_CLM_RPTD)) <> ltrim(rtrim(how_claim_rpted)))\n\t        or (ltrim(rtrim(CLM_VIOL_CIT_DESC)) <> ltrim(rtrim(claim_voilation_citation_descript)))\n\t        or (ltrim(rtrim(CON_OCCURRENCE_NBR)) <> ltrim(rtrim(claim_occurrence_num)))\n\t        or (ltrim(rtrim(CLM_CATASTROPHE_CODE)) <> ltrim(rtrim(claim_cat_code)))\n\t        or (ltrim(rtrim(TCC_COMMENT_TXT)) <> ltrim(rtrim(loss_loc_addr)))\n\t        or (COC_START_DT <> claim_cat_start_date)\n\t        or (COC_END_DT <> claim_cat_end_date)\n\t        or (ltrim(rtrim(CLM_STATUS_CD)) <> ltrim(rtrim(s3p_claim_occurrence_status_code)))\n\t        or (CLM_CREATE_TS <> s3p_claim_created_date)\n\t        or (ltrim(rtrim(LOSS_DESCRIPTION)) <> ltrim(rtrim(claim_loss_descript)))\n\t        or (ltrim(rtrim(CLM_AT_FAULT_CD)) <> ltrim(rtrim(claim_insd_at_fault_code)))\n\t        or (CLM_DRIVER_NBR <> claim_insd_drvr_num)\n\t        or (ltrim(rtrim(CLM_DRV_SAME_IND)) <> ltrim(rtrim(claim_insd_drvr_ind)))\n\t        or (LOG_NOTE_LAST_ACTIVITY_DATE <> claim_log_note_last_act_date)\n\t        or (claim_rep_full_name_out <> next_diary_date_rep)\n\t        or (CLAIM_NEXT_DIARY_DATE <> next_diary_date)\n\t        or (ltrim(rtrim(OFFSET_ONSET_INDICATOR)) <> ltrim(rtrim(offset_onset_ind)))\n\t        or (ltrim(rtrim(CLM_NOT_CLAIM_IND)) <> ltrim(rtrim(s3p_not_claim_ind)))\n\t        or CLM_REPORTED_DT <> source_claim_rpted_date\n\t        or v_POL_AK_ID <> pol_key_dim_id\n\t        or PrimaryWorkGroup <> clm_primary_loc_code\n\t        or SecondaryWorkGroup <> clm_secondary_dept_code\n\t        or ltrim(rtrim(Out_claim_created_by_key)) <> ltrim(rtrim(claim_created_by_key))\n\t        or ltrim(rtrim(ClaimRelationshipKey)) <> ltrim(rtrim(RelationshipId)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(\n\t    v_Changed_Flag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date,\n\tEXP_Lkp_Values.o_POLICY_KEY AS POLICY_KEY,\n\t0 AS err_flag,\n\tEXP_Lkp_Values.claim_rep_full_name_out,\n\tEXP_Lkp_Values.clm_wc_cat_code_out,\n\tEXP_Lkp_Values.sup_state_id,\n\tLKP_Sup_Claim_Insured_At_Fault_Code.sup_claim_insd_at_fault_code_id AS in_sup_claim_insd_at_fault_code_id,\n\t-- *INF*: IIF(ISNULL(in_sup_claim_insd_at_fault_code_id),-1, in_sup_claim_insd_at_fault_code_id)\n\tIFF(in_sup_claim_insd_at_fault_code_id IS NULL, - 1, in_sup_claim_insd_at_fault_code_id) AS sup_claim_insd_at_fault_code_id,\n\tEXP_Lkp_Values.out_clm_primary_loc_code AS clm_primary_loc_code,\n\tEXP_Lkp_Values.out_clm_secondary_dept_code AS clm_secondary_dept_code,\n\tEXP_Lkp_Values.out_RelationshipId AS RelationshipId\n\tFROM EXP_Lkp_Values\n\tLEFT JOIN LKP_Claim_Occurrence\n\tON LKP_Claim_Occurrence.claim_occurrence_key = EXP_Lkp_Values.CLM_CLAIM_NBR\n\tLEFT JOIN LKP_Sup_Claim_Insured_At_Fault_Code\n\tON LKP_Sup_Claim_Insured_At_Fault_Code.claim_insd_at_fault_code = EXP_Lkp_Values.CLM_AT_FAULT_CD\n\tLEFT JOIN LKP_V2_Policy\n\tON LKP_V2_Policy.pol_key = EXP_Lkp_Values.o_POLICY_KEY\n),\nFIL_Insert AS (\n\tSELECT\n\tLKP_claim_occurrence_ak_id, \n\tCLM_CLAIM_NBR, \n\tCLM_CSR_CLAIM_NBR, \n\tCLM_POSTAL_CD, \n\tCLM_DISCOVERY_DT, \n\tCLM_LOSS_DT, \n\tCLM_LOSS_CITY, \n\tCLM_LOSS_COUNTY, \n\tCLM_LOSS_STATE_CD, \n\tCLM_TYPE_CD, \n\tCLM_REI_NOTIFY_DT, \n\tCLM_METHOD_RPTD, \n\tCLM_HOW_CLM_RPTD, \n\tCLM_VIOL_CIT_DESC, \n\tCON_OCCURRENCE_NBR, \n\tCLM_CATASTROPHE_CODE, \n\tTCC_COMMENT_TXT, \n\tCOC_START_DT, \n\tCOC_END_DT, \n\tPOL_AK_ID, \n\tCLM_STATUS_CD, \n\tCLM_CREATE_TS, \n\tCLM_UPD_TS, \n\tLOSS_DESCRIPTION, \n\tCLM_AT_FAULT_CD, \n\tCLM_DRIVER_NBR, \n\tCLM_DRV_SAME_IND, \n\tLOG_NOTE_LAST_ACTIVITY_DATE, \n\tCLAIM_NEXT_DIARY_DATE, \n\tclaim_rep_full_name_out, \n\tOFFSET_ONSET_INDICATOR, \n\tCLM_NOT_CLAIM_IND, \n\tCLM_REPORTED_DT, \n\tOut_claim_created_by_key, \n\tLOGICAL_FLAG, \n\tCrrnt_Snpsht_Flag, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tChanged_Flag, \n\tSOURCE_SYSTEM_ID, \n\tCreated_Date, \n\tModified_Date, \n\tPOLICY_KEY, \n\terr_flag, \n\tclm_wc_cat_code_out AS wc_cat_code, \n\tsup_state_id, \n\tsup_claim_insd_at_fault_code_id, \n\tclm_primary_loc_code, \n\tclm_secondary_dept_code, \n\tRelationshipId\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_claim_occurrence AS (\n\tCREATE SEQUENCE SEQ_claim_occurrence\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tLKP_claim_occurrence_ak_id,\n\t-- *INF*: IIF(Changed_Flag='NEW', NEXTVAL, LKP_claim_occurrence_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, LKP_claim_occurrence_ak_id) AS Out_claim_occurrence_ak_id,\n\tCLM_CLAIM_NBR,\n\tCLM_CSR_CLAIM_NBR,\n\tCLM_POSTAL_CD,\n\tCLM_DISCOVERY_DT,\n\tCLM_LOSS_DT,\n\tCLM_LOSS_CITY,\n\tCLM_LOSS_COUNTY,\n\tCLM_LOSS_STATE_CD,\n\tCLM_TYPE_CD,\n\tCLM_REI_NOTIFY_DT,\n\tCLM_METHOD_RPTD,\n\tCLM_HOW_CLM_RPTD,\n\tCLM_VIOL_CIT_DESC,\n\tCON_OCCURRENCE_NBR,\n\tCLM_CATASTROPHE_CODE,\n\tTCC_COMMENT_TXT,\n\tCOC_START_DT,\n\tCOC_END_DT,\n\tPOL_AK_ID,\n\tCLM_STATUS_CD,\n\tCLM_CREATE_TS,\n\tCLM_UPD_TS,\n\tLOSS_DESCRIPTION,\n\tCLM_AT_FAULT_CD,\n\tCLM_DRIVER_NBR,\n\tCLM_DRV_SAME_IND,\n\tLOG_NOTE_LAST_ACTIVITY_DATE,\n\tCLAIM_NEXT_DIARY_DATE,\n\tclaim_rep_full_name_out,\n\tOFFSET_ONSET_INDICATOR,\n\tCLM_NOT_CLAIM_IND,\n\tCLM_REPORTED_DT,\n\tOut_claim_created_by_key,\n\tLOGICAL_FLAG,\n\tCrrnt_Snpsht_Flag,\n\tAudit_Id,\n\tEff_From_Date,\n\tEff_To_Date,\n\tChanged_Flag,\n\tSOURCE_SYSTEM_ID,\n\tCreated_Date,\n\tModified_Date,\n\tPOLICY_KEY,\n\terr_flag,\n\tSEQ_claim_occurrence.NEXTVAL,\n\twc_cat_code,\n\tsup_state_id,\n\tsup_claim_insd_at_fault_code_id,\n\tclm_primary_loc_code,\n\tclm_secondary_dept_code,\n\tRelationshipId\n\tFROM FIL_Insert\n),\nClaim_Occurrence_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\n\t(claim_occurrence_ak_id, pol_key_ak_id, pol_key, claim_occurrence_key, claim_occurrence_type_code, source_claim_occurrence_status_code, notice_claim_ind, s3p_claim_created_date, source_claim_rpted_date, s3p_claim_updated_date, rpt_method, how_claim_rpted, loss_loc_addr, loss_loc_city, loss_loc_county, loss_loc_state, loss_loc_zip, claim_loss_date, claim_discovery_date, claim_cat_code, claim_cat_start_date, claim_cat_end_date, s3p_claim_num, reins_notified_date, claim_occurrence_num, claim_voilation_citation_descript, claim_loss_descript, claim_insd_at_fault_code, claim_insd_driver_num, claim_insd_driver_ind, claim_log_note_last_act_date, err_flag_bal_txn, next_diary_date, next_diary_date_rep, offset_onset_ind, err_flag_bal_reins, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_created_by_key, wc_cat_code, SupStateId, SupClaimInsuredAtFaultCodeId, PrimaryWorkGroup, SecondaryWorkGroup, ClaimRelationshipKey)\n\tSELECT \n\tOut_claim_occurrence_ak_id AS CLAIM_OCCURRENCE_AK_ID, \n\tPOL_AK_ID AS POL_KEY_AK_ID, \n\tPOLICY_KEY AS POL_KEY, \n\tCLM_CLAIM_NBR AS CLAIM_OCCURRENCE_KEY, \n\tCLM_TYPE_CD AS CLAIM_OCCURRENCE_TYPE_CODE, \n\tCLM_STATUS_CD AS SOURCE_CLAIM_OCCURRENCE_STATUS_CODE, \n\tCLM_NOT_CLAIM_IND AS NOTICE_CLAIM_IND, \n\tCLM_CREATE_TS AS S3P_CLAIM_CREATED_DATE, \n\tCLM_REPORTED_DT AS SOURCE_CLAIM_RPTED_DATE, \n\tCLM_UPD_TS AS S3P_CLAIM_UPDATED_DATE, \n\tCLM_METHOD_RPTD AS RPT_METHOD, \n\tCLM_HOW_CLM_RPTD AS HOW_CLAIM_RPTED, \n\tTCC_COMMENT_TXT AS LOSS_LOC_ADDR, \n\tCLM_LOSS_CITY AS LOSS_LOC_CITY, \n\tCLM_LOSS_COUNTY AS LOSS_LOC_COUNTY, \n\tCLM_LOSS_STATE_CD AS LOSS_LOC_STATE, \n\tCLM_POSTAL_CD AS LOSS_LOC_ZIP, \n\tCLM_LOSS_DT AS CLAIM_LOSS_DATE, \n\tCLM_DISCOVERY_DT AS CLAIM_DISCOVERY_DATE, \n\tCLM_CATASTROPHE_CODE AS CLAIM_CAT_CODE, \n\tCOC_START_DT AS CLAIM_CAT_START_DATE, \n\tCOC_END_DT AS CLAIM_CAT_END_DATE, \n\tCLM_CSR_CLAIM_NBR AS S3P_CLAIM_NUM, \n\tCLM_REI_NOTIFY_DT AS REINS_NOTIFIED_DATE, \n\tCON_OCCURRENCE_NBR AS CLAIM_OCCURRENCE_NUM, \n\tCLM_VIOL_CIT_DESC AS CLAIM_VOILATION_CITATION_DESCRIPT, \n\tLOSS_DESCRIPTION AS CLAIM_LOSS_DESCRIPT, \n\tCLM_AT_FAULT_CD AS CLAIM_INSD_AT_FAULT_CODE, \n\tCLM_DRIVER_NBR AS CLAIM_INSD_DRIVER_NUM, \n\tCLM_DRV_SAME_IND AS CLAIM_INSD_DRIVER_IND, \n\tLOG_NOTE_LAST_ACTIVITY_DATE AS CLAIM_LOG_NOTE_LAST_ACT_DATE, \n\terr_flag AS ERR_FLAG_BAL_TXN, \n\tCLAIM_NEXT_DIARY_DATE AS NEXT_DIARY_DATE, \n\tclaim_rep_full_name_out AS NEXT_DIARY_DATE_REP, \n\tOFFSET_ONSET_INDICATOR AS OFFSET_ONSET_IND, \n\terr_flag AS ERR_FLAG_BAL_REINS, \n\tLOGICAL_FLAG AS LOGICAL_FLAG, \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tOut_claim_created_by_key AS CLAIM_CREATED_BY_KEY, \n\tWC_CAT_CODE, \n\tsup_state_id AS SUPSTATEID, \n\tsup_claim_insd_at_fault_code_id AS SUPCLAIMINSUREDATFAULTCODEID, \n\tclm_primary_loc_code AS PRIMARYWORKGROUP, \n\tclm_secondary_dept_code AS SECONDARYWORKGROUP, \n\tRelationshipId AS CLAIMRELATIONSHIPKEY\n\tFROM EXP_Determine_AK\n),\nSQ_claim_occurrence_UpdateClaimRelationship AS (\n\tSELECT \r\n\tco.claim_occurrence_ak_id, \r\n\tco.pol_key_ak_id, \r\n\tco.pol_key, \r\n\tco.claim_occurrence_key, \r\n\tco.claim_occurrence_type_code, \r\n\tco.source_claim_occurrence_status_code, \r\n\tco.notice_claim_ind, \r\n\tco.s3p_claim_created_date, \r\n\tco.source_claim_rpted_date, \r\n\tco.s3p_claim_updated_date, \r\n\tco.rpt_method, \r\n\tco.how_claim_rpted, \r\n\tco.loss_loc_addr, \r\n\tco.loss_loc_city, \r\n\tco.loss_loc_county, \r\n\tco.loss_loc_state, \r\n\tco.loss_loc_zip, \r\n\tco.claim_loss_date, \r\n\tco.claim_discovery_date, \r\n\tco.claim_cat_code, \r\n\tco.claim_cat_start_date, \r\n\tco.claim_cat_end_date, \r\n\tco.s3p_claim_num, \r\n\tco.reins_notified_date, \r\n\tco.claim_occurrence_num, \r\n\tco.claim_voilation_citation_descript, \r\n\tco.claim_loss_descript, \r\n\tco.claim_insd_at_fault_code, \r\n\tco.claim_insd_driver_num, \r\n\tco.claim_insd_driver_ind, \r\n\tco.claim_log_note_last_act_date, \r\n\tco.err_flag_bal_txn, \r\n\tco.next_diary_date, \r\n\tco.next_diary_date_rep,\r\n\tco.offset_onset_ind, \r\n\tco.err_flag_bal_reins, \r\n\tco.claim_created_by_key, \r\n\tco.wc_cat_code, \r\n\tco.SupStateId, \r\n\tco.SupClaimInsuredAtFaultCodeId, \r\n\tco.PrimaryWorkGroup, \r\n\tco.SecondaryWorkGroup, \r\n\tISNULL(convert(varchar,crs.RelationshipId),'N/A') as ClaimRelationshipKey\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence co\r\n\tinner hash join @{pipeline().parameters.SOURCE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ClaimRelationshipStage crs\r\n\ton ltrim(rtrim(crs.TchClaimNbr))=ltrim(rtrim(co.claim_occurrence_key))\r\n\tand co.ClaimRelationshipKey<>convert(varchar,crs.RelationshipId)\r\n\tand co.crrnt_snpsht_flag = 1\r\n\tand not exists (select 1 \r\n\t\t\t\t\tfrom @{pipeline().parameters.SOURCE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_TAB_STAGE\r\n\t\t\t\t\twhere CLM_CLAIM_NBR = crs.TchClaimNbr)\r\n\tunion\r\n\tSELECT \r\n\tco.claim_occurrence_ak_id, \r\n\tco.pol_key_ak_id, \r\n\tco.pol_key, \r\n\tco.claim_occurrence_key, \r\n\tco.claim_occurrence_type_code, \r\n\tco.source_claim_occurrence_status_code, \r\n\tco.notice_claim_ind, \r\n\tco.s3p_claim_created_date, \r\n\tco.source_claim_rpted_date, \r\n\tco.s3p_claim_updated_date, \r\n\tco.rpt_method, \r\n\tco.how_claim_rpted, \r\n\tco.loss_loc_addr, \r\n\tco.loss_loc_city, \r\n\tco.loss_loc_county, \r\n\tco.loss_loc_state, \r\n\tco.loss_loc_zip, \r\n\tco.claim_loss_date, \r\n\tco.claim_discovery_date, \r\n\tco.claim_cat_code, \r\n\tco.claim_cat_start_date, \r\n\tco.claim_cat_end_date, \r\n\tco.s3p_claim_num, \r\n\tco.reins_notified_date, \r\n\tco.claim_occurrence_num, \r\n\tco.claim_voilation_citation_descript, \r\n\tco.claim_loss_descript, \r\n\tco.claim_insd_at_fault_code, \r\n\tco.claim_insd_driver_num, \r\n\tco.claim_insd_driver_ind, \r\n\tco.claim_log_note_last_act_date, \r\n\tco.err_flag_bal_txn, \r\n\tco.next_diary_date, \r\n\tco.next_diary_date_rep,\r\n\tco.offset_onset_ind, \r\n\tco.err_flag_bal_reins, \r\n\tco.claim_created_by_key, \r\n\tco.wc_cat_code, \r\n\tco.SupStateId, \r\n\tco.SupClaimInsuredAtFaultCodeId, \r\n\tco.PrimaryWorkGroup, \r\n\tco.SecondaryWorkGroup, \r\n\t'N/A' as ClaimRelationshipKey\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence co\r\n\twhere co.ClaimRelationshipKey <> 'N/A' and co.crrnt_snpsht_flag = 1\r\n\tand not exists (select 1 \r\n\t\t\t\t\tfrom  @{pipeline().parameters.SOURCE_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ClaimRelationshipStage\r\n\t\t\t\t\twhere co.claim_occurrence_key = TchClaimNbr)\n),\nEXP_ClaimRelationship AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tpol_key_ak_id,\n\tpol_key,\n\tclaim_occurrence_key,\n\tclaim_occurrence_type_code,\n\tsource_claim_occurrence_status_code,\n\tnotice_claim_ind,\n\ts3p_claim_created_date,\n\tsource_claim_rpted_date,\n\ts3p_claim_updated_date,\n\trpt_method,\n\thow_claim_rpted,\n\tloss_loc_addr,\n\tloss_loc_city,\n\tloss_loc_county,\n\tloss_loc_state,\n\tloss_loc_zip,\n\tclaim_loss_date,\n\tclaim_discovery_date,\n\tclaim_cat_code,\n\tclaim_cat_start_date,\n\tclaim_cat_end_date,\n\ts3p_claim_num,\n\treins_notified_date,\n\tclaim_occurrence_num,\n\tclaim_voilation_citation_descript,\n\tclaim_loss_descript,\n\tclaim_insd_at_fault_code,\n\tclaim_insd_driver_num,\n\tclaim_insd_driver_ind,\n\tclaim_log_note_last_act_date,\n\terr_flag_bal_txn,\n\tnext_diary_date,\n\tnext_diary_date_rep,\n\toffset_onset_ind,\n\terr_flag_bal_reins,\n\t0 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tSYSDATE AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\tclaim_created_by_key,\n\twc_cat_code,\n\tSupStateId,\n\tSupClaimInsuredAtFaultCodeId,\n\tPrimaryWorkGroup,\n\tSecondaryWorkGroup,\n\tClaimRelationshipKey\n\tFROM SQ_claim_occurrence_UpdateClaimRelationship\n),\nclaim_occurrence_InsertNewClaimRelationship AS (\n\tINSERT INTO claim_occurrence\n\t(claim_occurrence_ak_id, pol_key_ak_id, pol_key, claim_occurrence_key, claim_occurrence_type_code, source_claim_occurrence_status_code, notice_claim_ind, s3p_claim_created_date, source_claim_rpted_date, s3p_claim_updated_date, rpt_method, how_claim_rpted, loss_loc_addr, loss_loc_city, loss_loc_county, loss_loc_state, loss_loc_zip, claim_loss_date, claim_discovery_date, claim_cat_code, claim_cat_start_date, claim_cat_end_date, s3p_claim_num, reins_notified_date, claim_occurrence_num, claim_voilation_citation_descript, claim_loss_descript, claim_insd_at_fault_code, claim_insd_driver_num, claim_insd_driver_ind, claim_log_note_last_act_date, err_flag_bal_txn, next_diary_date, next_diary_date_rep, offset_onset_ind, err_flag_bal_reins, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_created_by_key, wc_cat_code, SupStateId, SupClaimInsuredAtFaultCodeId, PrimaryWorkGroup, SecondaryWorkGroup, ClaimRelationshipKey)\n\tSELECT \n\tCLAIM_OCCURRENCE_AK_ID, \n\tPOL_KEY_AK_ID, \n\tPOL_KEY, \n\tCLAIM_OCCURRENCE_KEY, \n\tCLAIM_OCCURRENCE_TYPE_CODE, \n\tSOURCE_CLAIM_OCCURRENCE_STATUS_CODE, \n\tNOTICE_CLAIM_IND, \n\tS3P_CLAIM_CREATED_DATE, \n\tSOURCE_CLAIM_RPTED_DATE, \n\tS3P_CLAIM_UPDATED_DATE, \n\tRPT_METHOD, \n\tHOW_CLAIM_RPTED, \n\tLOSS_LOC_ADDR, \n\tLOSS_LOC_CITY, \n\tLOSS_LOC_COUNTY, \n\tLOSS_LOC_STATE, \n\tLOSS_LOC_ZIP, \n\tCLAIM_LOSS_DATE, \n\tCLAIM_DISCOVERY_DATE, \n\tCLAIM_CAT_CODE, \n\tCLAIM_CAT_START_DATE, \n\tCLAIM_CAT_END_DATE, \n\tS3P_CLAIM_NUM, \n\tREINS_NOTIFIED_DATE, \n\tCLAIM_OCCURRENCE_NUM, \n\tCLAIM_VOILATION_CITATION_DESCRIPT, \n\tCLAIM_LOSS_DESCRIPT, \n\tCLAIM_INSD_AT_FAULT_CODE, \n\tCLAIM_INSD_DRIVER_NUM, \n\tCLAIM_INSD_DRIVER_IND, \n\tCLAIM_LOG_NOTE_LAST_ACT_DATE, \n\tERR_FLAG_BAL_TXN, \n\tNEXT_DIARY_DATE, \n\tNEXT_DIARY_DATE_REP, \n\tOFFSET_ONSET_IND, \n\tERR_FLAG_BAL_REINS, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tCLAIM_CREATED_BY_KEY, \n\tWC_CAT_CODE, \n\tSUPSTATEID, \n\tSUPCLAIMINSUREDATFAULTCODEID, \n\tPRIMARYWORKGROUP, \n\tSECONDARYWORKGROUP, \n\tCLAIMRELATIONSHIPKEY\n\tFROM EXP_ClaimRelationship\n),\nSQ_Claim_Occurrence AS (\n\tSELECT \r\n\t\ta.claim_occurrence_id, \r\n\t\ta.claim_occurrence_key, \r\n\t\ta.eff_from_date, \r\n\t\ta.eff_to_date \r\n\tFROM\r\n\t \t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND  \r\n\t EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence b\r\n\t\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.claim_occurrence_key = b.claim_occurrence_key\r\n\t\t\tGROUP BY claim_occurrence_key\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY claim_occurrence_key, eff_from_date  DESC\n),\nEXP_Lag_Eff_From_Date AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_key,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_occurrence_key = v_PREV_ROW_occurrence_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    claim_occurrence_key = v_PREV_ROW_occurrence_key, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tclaim_occurrence_key AS v_PREV_ROW_occurrence_key,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_Claim_Occurrence\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tclaim_occurrence_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_Eff_From_Date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_Claim_Occurrence AS (\n\tSELECT\n\tclaim_occurrence_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nClaim_Occurrence_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence AS T\n\tUSING UPD_Claim_Occurrence AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),\nSQ_TaskStage AS (\n\tselect distinct ClaimId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage\r\n\twhere SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\tand (CreatedDate > '@{pipeline().parameters.SELECTION_START_TS}' or ModifiedDate > '@{pipeline().parameters.SELECTION_START_TS}')\r\n\tand not exists (select 1 \r\n\t\t\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_TAB_STAGE\r\n\t\t\t\t\twhere CLM_CLAIM_NBR = ClaimId)\n),\nEXP_Collect AS (\n\tSELECT\n\tClaimId,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS OUT_source_sys_id,\n\t'T' AS OUT_crrnt_snpsht_flag,\n\tSYSDATE AS OUT_modified_date\n\tFROM SQ_TaskStage\n),\nmplt_claim_occurrence_next_diary1 AS (WITH\n\tINPUT AS (\n\t\t\n\t),\n\tLKP_Task_NextDueDiary_ByClaim AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect MIN(T.DueDate) as DueDate, T.ClaimId as ClaimId \r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T \r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tgroup by T.ClaimId\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId ORDER BY DueDate DESC) = 1\n\t),\n\tLKP_Task_DiaryByClaimAndDueDate AS (\n\t\tSELECT\n\t\tDueDate,\n\t\tAssignedUserName,\n\t\tClaimId\n\t\tFROM (\n\t\t\tselect T.DueDate as DueDate, T.AssignedUserName as AssignedUserName, T.ClaimId as ClaimId\r\n\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.TaskStage T\r\n\t\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupTaskStatusStage STS on T.SupTaskStatusId = STS.SupTaskStatusId and STS.Description = 'Open' \r\n\t\t\twhere T.SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimId,DueDate ORDER BY DueDate DESC) = 1\n\t),\n\tOUTPUT AS (\n\t\tSELECT\n\t\tDueDate, \n\t\tAssignedUserName\n\t\tFROM LKP_Task_DiaryByClaimAndDueDate\n\t),\n),\nEXP_Default_Values AS (\n\tSELECT\n\tDueDate AS IN_DueDate,\n\t-- *INF*: IIF(ISNULL(IN_DueDate),\r\n\t-- TO_DATE('1/1/1800','MM/DD/YYYY'),\r\n\t-- IN_DueDate\r\n\t-- )\n\tIFF(IN_DueDate IS NULL, TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'), IN_DueDate) AS OUT_DueDate,\n\tAssignedUserName AS IN_AssignedUserName,\n\t-- *INF*: IIF(ISNULL(IN_AssignedUserName),\r\n\t-- 'N/A',\r\n\t-- IN_AssignedUserName)\n\tIFF(IN_AssignedUserName IS NULL, 'N/A', IN_AssignedUserName) AS OUT_AssignedUserName\n\tFROM mplt_claim_occurrence_next_diary1\n),\nLKP_claim_occurrence_active_record AS (\n\tSELECT\n\tclaim_occurrence_id,\n\tclaim_occurrence_ak_id,\n\tpol_key_ak_id,\n\tpol_key,\n\tclaim_occurrence_key,\n\tclaim_occurrence_type_code,\n\tsource_claim_occurrence_status_code,\n\tnotice_claim_ind,\n\ts3p_claim_created_date,\n\tsource_claim_rpted_date,\n\ts3p_claim_updated_date,\n\trpt_method,\n\thow_claim_rpted,\n\tloss_loc_addr,\n\tloss_loc_city,\n\tloss_loc_county,\n\tloss_loc_state,\n\tloss_loc_zip,\n\tclaim_loss_date,\n\tclaim_discovery_date,\n\tclaim_cat_code,\n\tclaim_cat_start_date,\n\tclaim_cat_end_date,\n\ts3p_claim_num,\n\treins_notified_date,\n\tclaim_occurrence_num,\n\tclaim_voilation_citation_descript,\n\tclaim_loss_descript,\n\tclaim_insd_at_fault_code,\n\tclaim_insd_driver_num,\n\tclaim_insd_driver_ind,\n\tclaim_log_note_last_act_date,\n\terr_flag_bal_txn,\n\tnext_diary_date,\n\tnext_diary_date_rep,\n\toffset_onset_ind,\n\terr_flag_bal_reins,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tclaim_created_by_key,\n\twc_cat_code,\n\tSupStateId,\n\tSupClaimInsuredAtFaultCodeId,\n\tPrimaryWorkGroup,\n\tSecondaryWorkGroup\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_id,\n\t\t\tclaim_occurrence_ak_id,\n\t\t\tpol_key_ak_id,\n\t\t\tpol_key,\n\t\t\tclaim_occurrence_key,\n\t\t\tclaim_occurrence_type_code,\n\t\t\tsource_claim_occurrence_status_code,\n\t\t\tnotice_claim_ind,\n\t\t\ts3p_claim_created_date,\n\t\t\tsource_claim_rpted_date,\n\t\t\ts3p_claim_updated_date,\n\t\t\trpt_method,\n\t\t\thow_claim_rpted,\n\t\t\tloss_loc_addr,\n\t\t\tloss_loc_city,\n\t\t\tloss_loc_county,\n\t\t\tloss_loc_state,\n\t\t\tloss_loc_zip,\n\t\t\tclaim_loss_date,\n\t\t\tclaim_discovery_date,\n\t\t\tclaim_cat_code,\n\t\t\tclaim_cat_start_date,\n\t\t\tclaim_cat_end_date,\n\t\t\ts3p_claim_num,\n\t\t\treins_notified_date,\n\t\t\tclaim_occurrence_num,\n\t\t\tclaim_voilation_citation_descript,\n\t\t\tclaim_loss_descript,\n\t\t\tclaim_insd_at_fault_code,\n\t\t\tclaim_insd_driver_num,\n\t\t\tclaim_insd_driver_ind,\n\t\t\tclaim_log_note_last_act_date,\n\t\t\terr_flag_bal_txn,\n\t\t\tnext_diary_date,\n\t\t\tnext_diary_date_rep,\n\t\t\toffset_onset_ind,\n\t\t\terr_flag_bal_reins,\n\t\t\tlogical_flag,\n\t\t\tcrrnt_snpsht_flag,\n\t\t\taudit_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date,\n\t\t\tsource_sys_id,\n\t\t\tcreated_date,\n\t\t\tmodified_date,\n\t\t\tclaim_created_by_key,\n\t\t\twc_cat_code,\n\t\t\tSupStateId,\n\t\t\tSupClaimInsuredAtFaultCodeId,\n\t\t\tPrimaryWorkGroup,\n\t\t\tSecondaryWorkGroup\n\t\tFROM claim_occurrence\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_key,source_sys_id,crrnt_snpsht_flag ORDER BY claim_occurrence_id) = 1\n),\nUPD_claim_occurrence_diary AS (\n\tSELECT\n\tLKP_claim_occurrence_active_record.claim_occurrence_id, \n\tEXP_Default_Values.OUT_DueDate AS DueDate, \n\tEXP_Default_Values.OUT_AssignedUserName AS AssignedUserName, \n\tEXP_Collect.OUT_modified_date AS modified_date\n\tFROM EXP_Collect\n\t -- Manually join with EXP_Default_Values\n\tLEFT JOIN LKP_claim_occurrence_active_record\n\tON LKP_claim_occurrence_active_record.claim_occurrence_key = EXP_Collect.ClaimId AND LKP_claim_occurrence_active_record.source_sys_id = EXP_Collect.OUT_source_sys_id AND LKP_claim_occurrence_active_record.crrnt_snpsht_flag = EXP_Collect.OUT_crrnt_snpsht_flag\n),\nclaim_occurrence_update_diary AS (\n\tMERGE INTO claim_occurrence AS T\n\tUSING UPD_claim_occurrence_diary AS S\n\tON T.claim_occurrence_id = S.claim_occurrence_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.next_diary_date = S.DueDate, T.next_diary_date_rep = S.AssignedUserName, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}