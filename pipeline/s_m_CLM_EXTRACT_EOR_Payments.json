{
    "name": "s_m_CLM_EXTRACT_EOR_Payments",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_EXTRACT_EOR_Payments",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_medical_bill AS (\n\tSELECT medical_bill.vendor_bill_num,\r\n\t\tmedical_bill.acct_id,\r\n\t\tmedical_bill.bill_review_vendor_code,\r\n\t\tmedical_bill.draft_num,\r\n\t\tmedical_bill.draft_amt,\r\n\t\tmedical_bill.denial_rsn_code,\r\n\t\tCONVERT(VARCHAR(10), medical_bill.draft_paid_date, 111) AS draft_paid_date\r\n\tFROM medical_bill\r\n\tWHERE crrnt_snpsht_flag = 1\r\n\t\tAND (medical_bill.ebill_ind = 'Y'\r\n\t\t\tOR \r\n\t\t\tmedical_bill.bill_review_vendor_code = 'CPIQ')\r\n\t\tAND medical_bill.draft_paid_date >= '@{pipeline().parameters.SELECTION_START_TS}'\r\n\t-- VSTS-US-27369: Send non-ebills for Equian (CPIQ).\n),\nEXP_Source AS (\n\tSELECT\n\tvendor_bill_num,\n\tdraft_paid_date,\n\tdraft_amt,\n\tdraft_num,\n\tdenial_rsn_code,\n\tbill_review_vendor_code,\n\tacct_id\n\tFROM SQ_medical_bill\n),\nExp_Target AS (\n\tSELECT\n\tvendor_bill_num,\n\tdraft_paid_date,\n\t-- *INF*: iif(draft_paid_date = to_date('01/01/1800','mm/dd/yyyy') ,' ' ,to_char(draft_paid_date,'yyyymmdd'))\n\tIFF(\n\t    draft_paid_date = TO_TIMESTAMP('01/01/1800', 'mm/dd/yyyy'), ' ',\n\t    to_char(draft_paid_date, 'yyyymmdd')\n\t) AS draft_paid_date_out,\n\tdraft_amt,\n\t-- *INF*: IIF (draft_amt = ROUND(draft_amt),   \r\n\t-- lpad(draft_amt,7,'0') || '.00',\r\n\t-- lpad(draft_amt,10,'0'))\r\n\t-- \r\n\t-- --IIF(draft_amt=0,'0000000000',\tlpad(draft_amt,10,'0'))\n\tIFF(\n\t    draft_amt = ROUND(draft_amt), lpad(draft_amt, 7, '0') || '.00', lpad(draft_amt, 10, '0')\n\t) AS v_draft_amt,\n\t-- *INF*: IIF(Instr(v_draft_amt,'.')=9, substr(v_draft_amt,2) || '0', v_draft_amt)\n\tIFF(REGEXP_INSTR(v_draft_amt, '.') = 9, substr(v_draft_amt, 2) || '0', v_draft_amt) AS draft_amt_out,\n\tdraft_num,\n\t-- *INF*: REPLACESTR(0, :UDF.DEFAULT_VALUE_TO_BLANKS(draft_num), \r\n\t-- 'EFT', \r\n\t-- '000')\n\tREGEXP_REPLACE(UDF_DEFAULT_VALUE_TO_BLANKS(draft_num),'EFT','000','i') AS v_draft_num,\n\tv_draft_num AS draft_num_out,\n\t-- *INF*: LTRIM(v_draft_num, ' 0')\n\tLTRIM(v_draft_num, ' 0') AS EquianCheckNumber,\n\tdenial_rsn_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_TO_BLANKS(denial_rsn_code)\n\tUDF_DEFAULT_VALUE_TO_BLANKS(denial_rsn_code) AS denial_rsn_code_out,\n\tsysdate AS Curent_date,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tbill_review_vendor_code,\n\tvendor_bill_num AS vendor_bill_num_len30,\n\t-- *INF*: LTRIM(:UDF.RIGHTMOST_N_NONBLANKCHARACTERS(vendor_bill_num_len30, 10), ' 0')\n\tLTRIM(UDF_RIGHTMOST_N_NONBLANKCHARACTERS(vendor_bill_num_len30, 10), ' 0') AS o_EquianControlNumber,\n\tacct_id,\n\t-- *INF*: RTRIM(SUBSTR(acct_id, 0, 10))\n\tRTRIM(SUBSTR(acct_id, 0, 10)) AS o_acct_id,\n\t-- *INF*: LPAD(REPLACECHR(FALSE,\r\n\t--     TO_CHAR(ROUND(draft_amt, 2)),\r\n\t--     '.',\r\n\t--     ''), \r\n\t-- 12, \r\n\t-- '0')\n\tLPAD(REGEXP_REPLACE(TO_CHAR(ROUND(draft_amt, 2)),'.',''), 12, '0') AS o_draft_amt_lpad_nodecimalpoint,\n\t'P' AS EquianPaymentStatus,\n\t-- *INF*: TO_CHAR(SESSSTARTTIME,'yyyymmddHH24MISS')\n\tTO_CHAR(SESSSTARTTIME, 'yyyymmddHH24MISS') AS ProcessTimeStamp,\n\t'' AS EmptyString\n\tFROM EXP_Source\n),\nEXP_rules AS (\n\tSELECT\n\tvendor_bill_num,\n\tdraft_paid_date_out,\n\tdraft_amt_out,\n\tdraft_num_out,\n\tEquianCheckNumber,\n\tdenial_rsn_code_out,\n\tCurent_date,\n\taudit_id,\n\t-- *INF*: IIF(bill_review_vendor_code = 'CPIQ',\r\n\t-- IIF(draft_num_out <> '',0,1),\r\n\t-- DECODE(TRUE,\r\n\t-- IS_SPACES(denial_rsn_code_out),0,\r\n\t-- ISNULL(denial_rsn_code_out),0,\r\n\t-- LENGTH(denial_rsn_code_out)=0,0,\r\n\t-- 1))\n\tIFF(\n\t    bill_review_vendor_code = 'CPIQ', IFF(\n\t        draft_num_out <> '', 0, 1\n\t    ),\n\t    DECODE(\n\t        TRUE,\n\t        LENGTH(denial_rsn_code_out)>0\n\t    and TRIM(denial_rsn_code_out)='', 0,\n\t        denial_rsn_code_out IS NULL, 0,\n\t        LENGTH(denial_rsn_code_out) = 0, 0,\n\t        1\n\t    )\n\t) AS v_apply_filter,\n\tv_apply_filter AS apply_filter,\n\tbill_review_vendor_code,\n\tvendor_bill_num_len30,\n\to_acct_id AS EquianOfficeId,\n\to_EquianControlNumber AS EquianControlNumber,\n\to_draft_amt_lpad_nodecimalpoint AS draft_amt_lpad_nodecimalpoint,\n\tEquianPaymentStatus,\n\tProcessTimeStamp,\n\tEmptyString\n\tFROM Exp_Target\n),\nFIL_check_filter AS (\n\tSELECT\n\tvendor_bill_num, \n\tdraft_paid_date_out, \n\tdraft_amt_out, \n\tdraft_num_out, \n\tEquianCheckNumber, \n\tdenial_rsn_code_out, \n\tCurent_date, \n\taudit_id, \n\tapply_filter, \n\tbill_review_vendor_code, \n\tvendor_bill_num_len30, \n\tEquianOfficeId, \n\tEquianControlNumber, \n\tdraft_amt_lpad_nodecimalpoint, \n\tEquianPaymentStatus, \n\tProcessTimeStamp, \n\tEmptyString\n\tFROM EXP_rules\n\tWHERE apply_filter=0\n),\nRTR_split_by_vendor_code AS (\n\tSELECT\n\tvendor_bill_num,\n\tdraft_paid_date_out,\n\tdraft_amt_out,\n\tdraft_num_out,\n\tEquianCheckNumber,\n\tdenial_rsn_code_out,\n\tCurent_date,\n\taudit_id,\n\tbill_review_vendor_code,\n\tvendor_bill_num_len30,\n\tEquianOfficeId,\n\tEquianControlNumber,\n\tdraft_amt_lpad_nodecimalpoint,\n\tEquianPaymentStatus,\n\tProcessTimeStamp,\n\tEmptyString\n\tFROM FIL_check_filter\n),\nRTR_split_by_vendor_code_RISG AS (SELECT * FROM RTR_split_by_vendor_code WHERE bill_review_vendor_code='RISG'),\nRTR_split_by_vendor_code_MYMX AS (SELECT * FROM RTR_split_by_vendor_code WHERE bill_review_vendor_code='MYMX'),\nRTR_split_by_vendor_code_ALGN AS (SELECT * FROM RTR_split_by_vendor_code WHERE bill_review_vendor_code='ALGN'),\nRTR_split_by_vendor_code_CPIQ AS (SELECT * FROM RTR_split_by_vendor_code WHERE bill_review_vendor_code='CPIQ'),\nRTR_split_by_vendor_code_All AS (SELECT * FROM RTR_split_by_vendor_code WHERE TRUE),\nRTR_split_by_vendor_code_CRVL AS (SELECT * FROM RTR_split_by_vendor_code WHERE bill_review_vendor_code='CRVL'),\nwork_claim_eor_payment_extract AS (\n\tINSERT INTO work_claim_eor_payment_extract\n\t(vendor_bill_num, date_paid, paid_amt, check_num, denial_rsn_code, created_date, modified_date, audit_id, VendorCode)\n\tSELECT \n\tVENDOR_BILL_NUM, \n\tdraft_paid_date_out AS DATE_PAID, \n\tdraft_amt_out AS PAID_AMT, \n\tdraft_num_out AS CHECK_NUM, \n\tdenial_rsn_code_out AS DENIAL_RSN_CODE, \n\tCurent_date AS CREATED_DATE, \n\tCurent_date AS MODIFIED_DATE, \n\tAUDIT_ID, \n\tbill_review_vendor_code AS VENDORCODE\n\tFROM RTR_split_by_vendor_code_All\n),\nEOR_Payments_Extract_CRVL_len30_DCN AS (\n\tINSERT INTO EOR_Payments_Extract_len30_DCN\n\t(DOCUMENT_CONTROL_NUM, DATE_PAID, PAID_AMT, CHECK_NUM, DENIAL_RSN_CODE)\n\tSELECT \n\tvendor_bill_num_len30 AS DOCUMENT_CONTROL_NUM, \n\tdraft_paid_date_out AS DATE_PAID, \n\tdraft_amt_out AS PAID_AMT, \n\tdraft_num_out AS CHECK_NUM, \n\tdenial_rsn_code_out AS DENIAL_RSN_CODE\n\tFROM RTR_split_by_vendor_code_CRVL\n),\nEOR_Payments_Extract_ALGN AS (\n\tINSERT INTO EOR_Payments_Extract\n\t(DOCUMENT_CONTROL_NUM, DATE_PAID, PAID_AMT, CHECK_NUM, DENIAL_RSN_CODE)\n\tSELECT \n\tvendor_bill_num AS DOCUMENT_CONTROL_NUM, \n\tdraft_paid_date_out AS DATE_PAID, \n\tdraft_amt_out AS PAID_AMT, \n\tdraft_num_out AS CHECK_NUM, \n\tdenial_rsn_code_out AS DENIAL_RSN_CODE\n\tFROM RTR_split_by_vendor_code_ALGN\n),\nEOR_Payments_Extract_MYMX AS (\n\tINSERT INTO EOR_Payments_Extract\n\t(DOCUMENT_CONTROL_NUM, DATE_PAID, PAID_AMT, CHECK_NUM, DENIAL_RSN_CODE)\n\tSELECT \n\tvendor_bill_num AS DOCUMENT_CONTROL_NUM, \n\tdraft_paid_date_out AS DATE_PAID, \n\tdraft_amt_out AS PAID_AMT, \n\tdraft_num_out AS CHECK_NUM, \n\tdenial_rsn_code_out AS DENIAL_RSN_CODE\n\tFROM RTR_split_by_vendor_code_MYMX\n),\nEOR_Payments_Extract_RISG AS (\n\tINSERT INTO EOR_Payments_Extract\n\t(DOCUMENT_CONTROL_NUM, DATE_PAID, PAID_AMT, CHECK_NUM, DENIAL_RSN_CODE)\n\tSELECT \n\tvendor_bill_num AS DOCUMENT_CONTROL_NUM, \n\tdraft_paid_date_out AS DATE_PAID, \n\tdraft_amt_out AS PAID_AMT, \n\tdraft_num_out AS CHECK_NUM, \n\tdenial_rsn_code_out AS DENIAL_RSN_CODE\n\tFROM RTR_split_by_vendor_code_RISG\n),\nEOR_Payments_Equian AS (\n\tINSERT INTO EOR_Payments_Equian\n\t(OfficeID, ControlNumber, CheckNumber, CheckDate, AmountPaid, BankAccountNumber, ClientSpecific1, ClientSpecific2, ClientSpecific3, ClientSpecific4, ClientSpecific5, PaymentStatus, ErrorCode, ErrorDescription, ProcessTimeStamp)\n\tSELECT \n\tEquianOfficeId AS OFFICEID, \n\tEquianControlNumber AS CONTROLNUMBER, \n\tEquianCheckNumber AS CHECKNUMBER, \n\tdraft_paid_date_out AS CHECKDATE, \n\tdraft_amt_lpad_nodecimalpoint AS AMOUNTPAID, \n\tEmptyString AS BANKACCOUNTNUMBER, \n\tEmptyString AS CLIENTSPECIFIC1, \n\tEmptyString AS CLIENTSPECIFIC2, \n\tEmptyString AS CLIENTSPECIFIC3, \n\tEmptyString AS CLIENTSPECIFIC4, \n\tEmptyString AS CLIENTSPECIFIC5, \n\tEquianPaymentStatus AS PAYMENTSTATUS, \n\tEmptyString AS ERRORCODE, \n\tEmptyString AS ERRORDESCRIPTION, \n\tPROCESSTIMESTAMP\n\tFROM RTR_split_by_vendor_code_CPIQ\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/ClaimDataServices/"
        },
        "annotations": []
    }
}