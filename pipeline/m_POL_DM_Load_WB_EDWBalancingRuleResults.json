{
    "name": "m_POL_DM_Load_WB_EDWBalancingRuleResults",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_Load_WB_EDWBalancingRuleResults",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_EDWBalancingRuleResults1 AS (\n\tSELECT\n\t\tPolicyNumber,\n\t\tPolicyVersion,\n\t\tHistoryID,\n\t\tDescription,\n\t\tSourceResults,\n\t\tTargetResults,\n\t\tOutOfBalanceAmount,\n\t\tBlackListDate,\n\t\tComparisonType,\n\t\tRuleExecutionDate,\n\t\tPurpose,\n\t\tSessionId\n\tFROM WB_EDWBalancingRuleResults\n),\nEXP_Default_Values AS (\n\tSELECT\n\t@{pipeline().parameters.AUDITID} AS o_AuditId,\n\t@{pipeline().parameters.SOURCESYSTEMID} AS o_SourceSystemId,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\tPolicyNumber AS i_PolicyNumber,\n\tPolicyVersion AS i_PolicyVersion,\n\tHistoryID AS i_HistoryID,\n\tDescription AS i_Description,\n\tSourceResults AS i_SourceResults,\n\tTargetResults AS i_TargetResults,\n\tOutOfBalanceAmount AS i_OutOfBalanceAmount,\n\tBlackListDate,\n\tComparisonType AS i_ComparisonType,\n\tRuleExecutionDate,\n\tPurpose AS i_Purpose,\n\tSessionId AS i_SessionId,\n\t-- *INF*: IIF(NOT ISNULL(i_PolicyNumber), i_PolicyNumber, '0')\n\tIFF(NOT i_PolicyNumber IS NULL, i_PolicyNumber, '0') AS o_PolicyNumber,\n\t-- *INF*: IIF(NOT ISNULL(i_PolicyVersion), i_PolicyVersion, '0')\n\tIFF(NOT i_PolicyVersion IS NULL, i_PolicyVersion, '0') AS o_PolicyVersion,\n\t-- *INF*: IIF(NOT ISNULL(i_HistoryID), i_HistoryID, 0)\n\tIFF(NOT i_HistoryID IS NULL, i_HistoryID, 0) AS o_HistoryID,\n\t-- *INF*: IIF(NOT ISNULL(i_Description), i_Description, '0')\n\tIFF(NOT i_Description IS NULL, i_Description, '0') AS o_Description,\n\t-- *INF*: IIF(NOT ISNULL(i_SourceResults), i_SourceResults, 0)\n\tIFF(NOT i_SourceResults IS NULL, i_SourceResults, 0) AS o_SourceResults,\n\t-- *INF*: IIF(NOT ISNULL(i_TargetResults), i_TargetResults, 0)\n\tIFF(NOT i_TargetResults IS NULL, i_TargetResults, 0) AS o_TargetResults,\n\t-- *INF*: IIF(NOT ISNULL(i_OutOfBalanceAmount), i_OutOfBalanceAmount, 0)\n\tIFF(NOT i_OutOfBalanceAmount IS NULL, i_OutOfBalanceAmount, 0) AS o_OutOfBalanceAmount,\n\t-- *INF*: IIF(NOT ISNULL(i_ComparisonType), i_ComparisonType, '0')\n\tIFF(NOT i_ComparisonType IS NULL, i_ComparisonType, '0') AS o_ComparisonType,\n\t-- *INF*: IIF(NOT ISNULL(i_Purpose), i_Purpose, '0')\n\tIFF(NOT i_Purpose IS NULL, i_Purpose, '0') AS o_Purpose,\n\t-- *INF*: IIF(NOT ISNULL(i_SessionId), i_SessionId, 0)\n\tIFF(NOT i_SessionId IS NULL, i_SessionId, 0) AS o_SessionId\n\tFROM SQ_WB_EDWBalancingRuleResults1\n),\nWBEDWBalancingRuleResults AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBEDWBalancingRuleResults;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBEDWBalancingRuleResults\n\t(AuditId, SourceSystemId, CreatedDate, ModifiedDate, PolicyNumber, PolicyVersion, HistoryID, Description, SourceResults, TargetResults, OutOfBalanceAmount, BlackListDate, ComparisonType, RuleExecutionDate, Purpose, SessionId)\n\tSELECT \n\to_AuditId AS AUDITID, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\to_CreatedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\to_PolicyNumber AS POLICYNUMBER, \n\to_PolicyVersion AS POLICYVERSION, \n\to_HistoryID AS HISTORYID, \n\to_Description AS DESCRIPTION, \n\to_SourceResults AS SOURCERESULTS, \n\to_TargetResults AS TARGETRESULTS, \n\to_OutOfBalanceAmount AS OUTOFBALANCEAMOUNT, \n\tBLACKLISTDATE, \n\to_ComparisonType AS COMPARISONTYPE, \n\tRULEEXECUTIONDATE, \n\to_Purpose AS PURPOSE, \n\to_SessionId AS SESSIONID\n\tFROM EXP_Default_Values\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WBExampleData_BIL"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCESYSTEMID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "AUDITID": {
                "type": "string",
                "defaultValue": "9999"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}