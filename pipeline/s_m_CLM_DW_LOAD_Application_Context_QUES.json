{
    "name": "s_m_CLM_DW_LOAD_Application_Context_QUES",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Application_Context_QUES",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_application_context_stage AS (\n\tSELECT  \r\n\t      a.app_context_guid \r\n\t      ,a.app_guid\r\n\t      ,a.app_context_ent_name\r\n\t      ,    a.display_name\r\n\t      ,    a.source_system_id\r\n\t  FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.application_context_stage a\n),\nEXP_VALIDATE AS (\n\tSELECT\n\tapp_context_guid AS IN_app_context_guid,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_app_context_guid))) OR IS_SPACES(LTRIM(RTRIM(IN_app_context_guid))) OR LENGTH(LTRIM(RTRIM(IN_app_context_guid)))=0,'N/A' ,LTRIM(RTRIM(IN_app_context_guid)))\n\tIFF(LTRIM(RTRIM(IN_app_context_guid)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_app_context_guid))) OR LENGTH(LTRIM(RTRIM(IN_app_context_guid))) = 0, 'N/A', LTRIM(RTRIM(IN_app_context_guid))) AS app_context_guid,\n\tapp_guid AS IN_app_guid,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_app_guid))) OR IS_SPACES(LTRIM(RTRIM(IN_app_guid))) OR LENGTH(LTRIM(RTRIM(IN_app_guid)))=0,'N/A' ,LTRIM(RTRIM(IN_app_guid)))\n\tIFF(LTRIM(RTRIM(IN_app_guid)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_app_guid))) OR LENGTH(LTRIM(RTRIM(IN_app_guid))) = 0, 'N/A', LTRIM(RTRIM(IN_app_guid))) AS app_guid,\n\tapp_context_ent_name AS IN_app_context_ent_name,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_app_context_ent_name))) OR IS_SPACES(LTRIM(RTRIM(IN_app_context_ent_name))) OR LENGTH(LTRIM(RTRIM(IN_app_context_ent_name)))=0,'N/A' ,LTRIM(RTRIM(IN_app_context_ent_name)))\n\tIFF(LTRIM(RTRIM(IN_app_context_ent_name)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_app_context_ent_name))) OR LENGTH(LTRIM(RTRIM(IN_app_context_ent_name))) = 0, 'N/A', LTRIM(RTRIM(IN_app_context_ent_name))) AS app_context_ent_name,\n\tdisplay_name AS IN_display_name,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_display_name))) OR IS_SPACES(LTRIM(RTRIM(IN_display_name))) OR LENGTH(LTRIM(RTRIM(IN_display_name)))=0,'N/A' ,LTRIM(RTRIM(IN_display_name)))\n\tIFF(LTRIM(RTRIM(IN_display_name)) IS NULL OR IS_SPACES(LTRIM(RTRIM(IN_display_name))) OR LENGTH(LTRIM(RTRIM(IN_display_name))) = 0, 'N/A', LTRIM(RTRIM(IN_display_name))) AS display_name,\n\tsource_system_id\n\tFROM SQ_application_context_stage\n),\nLKP_APPLICATION AS (\n\tSELECT\n\tapp_guid,\n\tsource_sys_id,\n\tapp_ak_id,\n\tIN_app_guid,\n\tIN_source_sys_id\n\tFROM (\n\t\tselect       \r\n\t\t       a.app_guid as app_guid,      \r\n\t\t       a.source_sys_id as source_sys_id ,\r\n\t\t       a.app_ak_id as app_ak_id        \r\n\t\t       from application a\r\n\t\t       where a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY app_guid,source_sys_id ORDER BY app_guid DESC) = 1\n),\nLKP_APPLICATION_CONTEXT AS (\n\tSELECT\n\tsource_sys_id,\n\tapp_context_guid,\n\tapp_context_ak_id,\n\tapp_context_id,\n\tapp_ak_id,\n\tapp_context_entity_name,\n\tdisplay_name\n\tFROM (\n\t\tSELECT \r\n\t\t       a.source_sys_id as source_sys_id\r\n\t\t       ,a.app_context_guid as app_context_guid\r\n\t\t      ,a.app_context_ak_id  as app_context_ak_id \r\n\t\t      ,a.app_context_id as app_context_id\r\n\t\t      ,a.app_ak_id as app_ak_id    \r\n\t\t      ,a.app_context_entity_name as app_context_entity_name\r\n\t\t      ,a.display_name as display_name\r\n\t\t  FROM  application_context a\r\n\t\t  where a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY source_sys_id,app_context_guid ORDER BY source_sys_id DESC) = 1\n),\nEXP_DETECT_CHANGES1 AS (\n\tSELECT\n\tLKP_APPLICATION.app_ak_id AS IN_app_ak_id,\n\t-- *INF*: IIF(ISNULL(IN_app_ak_id),-1,IN_app_ak_id)\n\tIFF(IN_app_ak_id IS NULL, - 1, IN_app_ak_id) AS v_app_ak_id,\n\tv_app_ak_id AS app_ak_id,\n\tLKP_APPLICATION_CONTEXT.app_context_guid AS LKP_app_context_guid,\n\tLKP_APPLICATION_CONTEXT.app_context_ak_id AS LKP_app_context_ak_id,\n\tLKP_APPLICATION_CONTEXT.app_context_id AS LKP_app_context_id,\n\tLKP_APPLICATION_CONTEXT.app_ak_id AS LKP_app_ak_id,\n\tLKP_APPLICATION_CONTEXT.app_context_entity_name AS LKP_app_context_entity_name,\n\tLKP_APPLICATION_CONTEXT.display_name AS LKP_display_name,\n\tEXP_VALIDATE.app_context_guid,\n\tEXP_VALIDATE.app_guid,\n\tEXP_VALIDATE.app_context_ent_name AS app_context_entity_name,\n\tEXP_VALIDATE.display_name,\n\t-- *INF*: IIF(ISNULL(LKP_app_context_ak_id),'NEW',\r\n\t--      IIF(LKP_app_ak_id <> v_app_ak_id OR\r\n\t-- \r\n\t-- \r\n\t-- LTRIM(RTRIM( LKP_app_context_guid)) <> LTRIM(RTRIM(app_context_guid)) OR \r\n\t-- \tLTRIM(RTRIM(LKP_display_name)) <> LTRIM(RTRIM(display_name)) OR \r\n\t-- \tLTRIM(RTRIM(LKP_app_context_entity_name)) <> LTRIM(RTRIM(app_context_entity_name))     \r\n\t--      ,\r\n\t-- \t'UPDATE','NOCHANGE'))\r\n\t-- \n\tIFF(LKP_app_context_ak_id IS NULL, 'NEW', IFF(LKP_app_ak_id <> v_app_ak_id OR LTRIM(RTRIM(LKP_app_context_guid)) <> LTRIM(RTRIM(app_context_guid)) OR LTRIM(RTRIM(LKP_display_name)) <> LTRIM(RTRIM(display_name)) OR LTRIM(RTRIM(LKP_app_context_entity_name)) <> LTRIM(RTRIM(app_context_entity_name)), 'UPDATE', 'NOCHANGE')) AS v_changed_flag,\n\tv_changed_flag AS changed_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(v_changed_flag='NEW',TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(v_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM:DD:YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 00:00:00', 'MM:DD:YYYY HH24:MI:SS') AS default_date\n\tFROM EXP_VALIDATE\n\tLEFT JOIN LKP_APPLICATION\n\tON LKP_APPLICATION.app_guid = EXP_VALIDATE.app_guid AND LKP_APPLICATION.source_sys_id = EXP_VALIDATE.source_system_id\n\tLEFT JOIN LKP_APPLICATION_CONTEXT\n\tON LKP_APPLICATION_CONTEXT.source_sys_id = EXP_VALIDATE.source_system_id AND LKP_APPLICATION_CONTEXT.app_context_guid = EXP_VALIDATE.app_context_guid\n),\nFIL_INSERT AS (\n\tSELECT\n\tLKP_app_context_ak_id, \n\tapp_context_guid, \n\tapp_guid, \n\tapp_context_entity_name, \n\tdisplay_name, \n\tchanged_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tdefault_date, \n\tapp_ak_id\n\tFROM EXP_DETECT_CHANGES1\n\tWHERE changed_flag='NEW' OR changed_flag='UPDATE'\n),\nSEQ_APPLICATION_CONTEXT AS (\n\tCREATE SEQUENCE SEQ_APPLICATION_CONTEXT\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK11 AS (\n\tSELECT\n\tLKP_app_context_ak_id,\n\t-- *INF*: IIF(changed_flag ='NEW',NEXTVAL,LKP_app_context_ak_id)\n\tIFF(changed_flag = 'NEW', NEXTVAL, LKP_app_context_ak_id) AS app_context_ak_id,\n\tapp_context_guid,\n\tapp_guid,\n\tapp_context_entity_name,\n\tdisplay_name,\n\tchanged_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tdefault_date,\n\tSEQ_APPLICATION_CONTEXT.NEXTVAL,\n\tapp_ak_id\n\tFROM FIL_INSERT\n),\napplication_context_INS AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.application_context\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, app_context_ak_id, app_ak_id, app_context_guid, app_context_entity_name, display_name)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tAPP_CONTEXT_AK_ID, \n\tAPP_AK_ID, \n\tAPP_CONTEXT_GUID, \n\tAPP_CONTEXT_ENTITY_NAME, \n\tDISPLAY_NAME\n\tFROM EXP_Determine_AK11\n),\nSQ_application_context AS (\n\tSELECT \r\n\ta.app_context_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date ,\r\n\ta.app_context_guid \r\n\tFROM\r\n\t  @{pipeline().parameters.TARGET_TABLE_OWNER}.application_context a \r\n\tWHERE \r\n\ta.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND\r\n\tEXISTS(SELECT 1 \r\n\t                 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.application_context b     \r\n\t                 \r\n\t                 WHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t                 and crrnt_snpsht_flag = 1\r\n\t                 AND a.app_context_guid = b.app_context_guid               \r\n\t \t           GROUP BY b.app_context_guid                       \r\n\t                 HAVING COUNT(*) >1) \r\n\tORDER BY a.app_context_guid , a.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tapp_context_id,\n\tapp_context_guid,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,app_context_guid=v_prev_row_app_context_guid,ADD_TO_DATE(v_prev_row_eff_from_date,'SS',-1),orig_eff_to_date)\n\tDECODE(TRUE,\n\t\tapp_context_guid = v_prev_row_app_context_guid, ADD_TO_DATE(v_prev_row_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tapp_context_guid AS v_prev_row_app_context_guid,\n\teff_from_date AS v_prev_row_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_application_context\n),\nFIL_Firstrow_INAKIDGROUP AS (\n\tSELECT\n\tapp_context_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <>eff_to_date\n),\nUPD_APPLICATION_CONTEXT AS (\n\tSELECT\n\tapp_context_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_Firstrow_INAKIDGROUP\n),\napplication_context_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.application_context AS T\n\tUSING UPD_APPLICATION_CONTEXT AS S\n\tON T.app_context_id = S.app_context_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246501"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905505"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603947"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 00:32:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 00:37:25"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "QUES"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}