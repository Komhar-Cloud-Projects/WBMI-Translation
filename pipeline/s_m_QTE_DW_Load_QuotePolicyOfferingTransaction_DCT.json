{
    "name": "s_m_QTE_DW_Load_QuotePolicyOfferingTransaction_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_QTE_DW_Load_QuotePolicyOfferingTransaction_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DCTWorkTables AS (\n\tSELECT WorkDCTPolicy.PolicyGUId, WorkDCTPolicy.QuoteActionTimeStamp, WorkDCTPolicy.SessionId, WorkDCTPolicy.Division, WorkDCTPolicy.WBProduct, WorkDCTPolicy.WBProductType, WorkDCTInsuranceLine.LineType, WorkDCTPolicy.PolicyNumber, WorkDCTPolicy.PolicyEffectiveDate, WorkDCTPolicy.PolicyExpirationDate \r\n\tFROM\r\n\t WorkDCTPolicy, WorkDCTInsuranceLine \r\n\tWHERE\r\n\t WorkDCTPolicy.PolicyId=WorkDCTInsuranceLine.PolicyId\r\n\tand\r\n\tWorkDCTPolicy.QuoteActionTimeStamp is not null\r\n\tand WorkDCTPolicy.TransactionType='New'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\tOrder By 1,2\n),\nEXP_Source_Fields AS (\n\tSELECT\n\tPolicyGUId,\n\tQuoteActionTimeStamp,\n\tSessionId,\n\tDivision,\n\tWBProduct,\n\tWBProductType,\n\tLineType,\n\tPolicyNumber,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate\n\tFROM SQ_DCTWorkTables\n),\nLKP_HistoryStage AS (\n\tSELECT\n\tWrittenPremium,\n\tPolicyNumber,\n\tPolicyEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tWrittenPremium,\n\t\t\tPolicyNumber,\n\t\t\tPolicyEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM HistoryStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyEffectiveDate,ExpirationDate ORDER BY WrittenPremium) = 1\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tEXP_Source_Fields.CoverageGUID AS i_CoverageGUID,\n\tEXP_Source_Fields.PolicyGUId AS QuoteKey,\n\tEXP_Source_Fields.QuoteActionTimeStamp AS StatusDate,\n\tEXP_Source_Fields.SessionId AS i_SessionId,\n\tEXP_Source_Fields.Division,\n\tEXP_Source_Fields.WBProduct,\n\tEXP_Source_Fields.WBProductType,\n\tEXP_Source_Fields.LineType AS LType,\n\tLKP_HistoryStage.WrittenPremium AS Written\n\tFROM EXP_Source_Fields\n\tLEFT JOIN LKP_HistoryStage\n\tON LKP_HistoryStage.PolicyNumber = EXP_Source_Fields.PolicyNumber AND LKP_HistoryStage.PolicyEffectiveDate = EXP_Source_Fields.PolicyEffectiveDate AND LKP_HistoryStage.ExpirationDate = EXP_Source_Fields.PolicyExpirationDate\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY i_CoverageGUID, QuoteKey, StatusDate ORDER BY NULL) = 1\n),\nEXP_GetValues AS (\n\tSELECT\n\tQuoteKey AS i_QuoteKey,\n\tStatusDate AS i_StatusDate,\n\tDivision AS i_Division,\n\tWBProduct AS i_WBProduct,\n\tWBProductType AS i_WBProductType,\n\tLType AS i_LType,\n\tWritten AS i_Written,\n\t-- *INF*: LTRIM(RTRIM(i_QuoteKey))\n\tLTRIM(RTRIM(i_QuoteKey\n\t\t)\n\t) AS o_QuoteKey,\n\ti_StatusDate AS o_StatusDate,\n\t-- *INF*: IIF(ISNULL(i_Division) OR IS_SPACES(i_Division) OR LENGTH(i_Division)=0, 'N/A', LTRIM(RTRIM(i_Division)))\n\tIFF(i_Division IS NULL \n\t\tOR LENGTH(i_Division)>0 AND TRIM(i_Division)='' \n\t\tOR LENGTH(i_Division\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(i_Division\n\t\t\t)\n\t\t)\n\t) AS o_Division,\n\t-- *INF*: IIF(ISNULL(i_WBProduct) OR IS_SPACES(i_WBProduct) OR LENGTH(i_WBProduct)=0, 'N/A', LTRIM(RTRIM(i_WBProduct)))\n\tIFF(i_WBProduct IS NULL \n\t\tOR LENGTH(i_WBProduct)>0 AND TRIM(i_WBProduct)='' \n\t\tOR LENGTH(i_WBProduct\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(i_WBProduct\n\t\t\t)\n\t\t)\n\t) AS o_WBProduct,\n\t-- *INF*: IIF(ISNULL(i_WBProductType) OR IS_SPACES(i_WBProductType) OR LENGTH(i_WBProductType)=0, 'N/A', LTRIM(RTRIM(i_WBProductType)))\n\tIFF(i_WBProductType IS NULL \n\t\tOR LENGTH(i_WBProductType)>0 AND TRIM(i_WBProductType)='' \n\t\tOR LENGTH(i_WBProductType\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(i_WBProductType\n\t\t\t)\n\t\t)\n\t) AS o_WBProductType,\n\t-- *INF*: IIF(ISNULL(i_LType) OR IS_SPACES(i_LType) OR LENGTH(i_LType)=0, 'N/A', LTRIM(RTRIM(i_LType)))\n\tIFF(i_LType IS NULL \n\t\tOR LENGTH(i_LType)>0 AND TRIM(i_LType)='' \n\t\tOR LENGTH(i_LType\n\t\t) = 0,\n\t\t'N/A',\n\t\tLTRIM(RTRIM(i_LType\n\t\t\t)\n\t\t)\n\t) AS o_LType,\n\t-- *INF*: IIF(ISNULL(i_Written),0,i_Written)\n\tIFF(i_Written IS NULL,\n\t\t0,\n\t\ti_Written\n\t) AS o_WrittenPremium\n\tFROM AGG_RemoveDuplicates\n),\nLKP_Quote AS (\n\tSELECT\n\tQuoteAKId,\n\tQuoteId,\n\tStatusDate,\n\tQuoteKey\n\tFROM (\n\t\tSelect \r\n\t\tb.QuoteAKId as QuoteAKId,\r\n\t\tb.QuoteId as QuoteId,\r\n\t\tb.QuoteKey as QuoteKey,\r\n\t\tb.StatusDate as StatusDate\r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.Quote b\r\n\t\twhere b.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand exists (select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy w\r\n\t\twhere w.PolicyGUId=b.QuoteKey)\r\n\t\torder by b.StatusDate,b.QuoteKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatusDate,QuoteKey ORDER BY QuoteAKId) = 1\n),\nEXP_NewFlag AS (\n\tSELECT\n\tLKP_Quote.QuoteAKId AS i_QuoteAKId,\n\tLKP_Quote.QuoteId AS i_QuoteId,\n\tEXP_GetValues.o_StatusDate AS StatusDate,\n\tEXP_GetValues.o_WrittenPremium AS WrittenPremium,\n\t-- *INF*: IIF(ISNULL(i_QuoteAKId),-1,i_QuoteAKId)\n\tIFF(i_QuoteAKId IS NULL,\n\t\t- 1,\n\t\ti_QuoteAKId\n\t) AS o_QuoteAKId\n\tFROM EXP_GetValues\n\tLEFT JOIN LKP_Quote\n\tON LKP_Quote.StatusDate = EXP_GetValues.o_StatusDate AND LKP_Quote.QuoteKey = EXP_GetValues.o_QuoteKey\n),\nAGG_SumPremium AS (\n\tSELECT\n\tWrittenPremium AS i_WrittenPremium,\n\t-- *INF*: SUM(i_WrittenPremium)\n\tSUM(i_WrittenPremium\n\t) AS WrittenPremium,\n\to_QuoteAKId AS QuoteAKId,\n\tStatusDate,\n\ti_QuoteId\n\tFROM EXP_NewFlag\n\tGROUP BY QuoteAKId, StatusDate, i_QuoteId\n),\nlkp_QuotePolicyOfferingTransaction AS (\n\tSELECT\n\tQuotePolicyOfferingTransactionId,\n\tQuotePolicyOfferingTransactionAKID,\n\tQuoteAKID,\n\tQuoteID\n\tFROM (\n\t\tSELECT \n\t\t\tQuotePolicyOfferingTransactionId,\n\t\t\tQuotePolicyOfferingTransactionAKID,\n\t\t\tQuoteAKID,\n\t\t\tQuoteID\n\t\tFROM QuotePolicyOfferingTransaction\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY QuoteAKID,QuoteID ORDER BY QuotePolicyOfferingTransactionId) = 1\n),\nFIL_NewFlag AS (\n\tSELECT\n\tlkp_QuotePolicyOfferingTransaction.QuotePolicyOfferingTransactionId, \n\tAGG_SumPremium.WrittenPremium, \n\tAGG_SumPremium.QuoteAKId, \n\tAGG_SumPremium.StatusDate, \n\tAGG_SumPremium.i_QuoteId, \n\tlkp_QuotePolicyOfferingTransaction.QuotePolicyOfferingTransactionAKID\n\tFROM AGG_SumPremium\n\tLEFT JOIN lkp_QuotePolicyOfferingTransaction\n\tON lkp_QuotePolicyOfferingTransaction.QuoteAKID = AGG_SumPremium.QuoteAKId AND lkp_QuotePolicyOfferingTransaction.QuoteID = AGG_SumPremium.i_QuoteId\n\tWHERE ISNULL(QuotePolicyOfferingTransactionId)\n),\nSEQ_QuotePolicyOfferingTransactionAKID AS (\n\tCREATE SEQUENCE SEQ_QuotePolicyOfferingTransactionAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_GetSupportIds AS (\n\tSELECT\n\tQuotePolicyOfferingTransactionAKID AS lkp_QuotePolicyOfferingTransactionAKID,\n\tSEQ_QuotePolicyOfferingTransactionAKID.NEXTVAL AS i_NEXTVAL,\n\tWrittenPremium AS i_WrittenPremium,\n\tQuoteAKId AS i_QuoteAKId,\n\tStatusDate AS i_StatusDate,\n\ti_QuoteId,\n\t-- *INF*: IIF(i_QuoteAKId=v_prev_QuoteAKId,v_NEXTVAL,i_NEXTVAL)\n\tIFF(i_QuoteAKId = v_prev_QuoteAKId,\n\t\tv_NEXTVAL,\n\t\ti_NEXTVAL\n\t) AS v_NEXTVAL,\n\ti_QuoteAKId AS v_prev_QuoteAKId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: iif(isnull(lkp_QuotePolicyOfferingTransactionAKID),i_NEXTVAL,lkp_QuotePolicyOfferingTransactionAKID)\n\tIFF(lkp_QuotePolicyOfferingTransactionAKID IS NULL,\n\t\ti_NEXTVAL,\n\t\tlkp_QuotePolicyOfferingTransactionAKID\n\t) AS o_QuotePolicyOfferingTransactionAKID,\n\ti_QuoteId AS o_QuoteId,\n\ti_QuoteAKId AS o_QuoteAKId,\n\ti_WrittenPremium AS o_WrittenPremium\n\tFROM FIL_NewFlag\n),\nUPD_INSERT_QuotepolicyOfferingTransaction AS (\n\tSELECT\n\to_AuditID, \n\to_SourceSystemID, \n\to_CreatedDate, \n\to_ModifiedDate, \n\to_QuotePolicyOfferingTransactionAKID, \n\to_QuoteId, \n\to_QuoteAKId, \n\to_WrittenPremium\n\tFROM EXP_GetSupportIds\n),\nQuotePolicyOfferingTransaction AS (\n\tINSERT INTO QuotePolicyOfferingTransaction\n\t(AuditID, SourceSystemID, CreatedDate, ModifiedDate, QuotePolicyOfferingTransactionAKID, QuoteID, QuoteAKID, QuotePremium)\n\tSELECT \n\to_AuditID AS AUDITID, \n\to_SourceSystemID AS SOURCESYSTEMID, \n\to_CreatedDate AS CREATEDDATE, \n\to_ModifiedDate AS MODIFIEDDATE, \n\to_QuotePolicyOfferingTransactionAKID AS QUOTEPOLICYOFFERINGTRANSACTIONAKID, \n\to_QuoteId AS QUOTEID, \n\to_QuoteAKId AS QUOTEAKID, \n\to_WrittenPremium AS QUOTEPREMIUM\n\tFROM UPD_INSERT_QuotepolicyOfferingTransaction\n),\nSQ_QuotePolicyOfferingTransaction AS (\n\tSELECT QuotePolicyOfferingTransaction.QuotePolicyOfferingTransactionId, QuotePolicyOfferingTransaction.QuoteID, QuotePolicyOfferingTransaction.QuoteAKID, QuotePolicyOfferingTransaction.QuotePremium, Quote.QuoteNumber, Quote.QuoteEffectiveDate, Quote.QuoteExpirationDate \r\n\t FROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.QuotePolicyOfferingTransaction\r\n\t inner join @{pipeline().parameters.TARGET_TABLE_OWNER}.quote on quote.QuoteAKID = QuotePolicyOfferingTransaction.QuoteAKId and quote.CurrentSnapshotFlag =1\n),\nEXP_Source_Columns AS (\n\tSELECT\n\tQuotePolicyOfferingTransactionId,\n\tQuoteID,\n\tQuoteAKID,\n\tQuotePremium,\n\tQuoteNumber,\n\tQuoteEffectiveDate,\n\tQuoteExpirationDate\n\tFROM SQ_QuotePolicyOfferingTransaction\n),\nLKP_HistoryStage_update AS (\n\tSELECT\n\tWrittenPremium,\n\tPolicyNumber,\n\tPolicyEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tWrittenPremium,\n\t\t\tPolicyNumber,\n\t\t\tPolicyEffectiveDate,\n\t\t\tExpirationDate\n\t\tFROM HistoryStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,PolicyEffectiveDate,ExpirationDate ORDER BY WrittenPremium) = 1\n),\nEXP_Default AS (\n\tSELECT\n\tEXP_Source_Columns.QuotePolicyOfferingTransactionId,\n\tEXP_Source_Columns.QuotePremium,\n\tLKP_HistoryStage_update.WrittenPremium,\n\t-- *INF*: IIF(ISNULL(WrittenPremium), 0.0, WrittenPremium)\n\tIFF(WrittenPremium IS NULL,\n\t\t0.0,\n\t\tWrittenPremium\n\t) AS o_WrittenPremium\n\tFROM EXP_Source_Columns\n\tLEFT JOIN LKP_HistoryStage_update\n\tON LKP_HistoryStage_update.PolicyNumber = EXP_Source_Columns.QuoteNumber AND LKP_HistoryStage_update.PolicyEffectiveDate = EXP_Source_Columns.QuoteEffectiveDate AND LKP_HistoryStage_update.ExpirationDate = EXP_Source_Columns.QuoteExpirationDate\n),\nFLTR_Update_records AS (\n\tSELECT\n\tQuotePolicyOfferingTransactionId, \n\tQuotePremium, \n\to_WrittenPremium AS WrittenPremium\n\tFROM EXP_Default\n\tWHERE QuotePremium != WrittenPremium\n),\nUPD_Update_QuotePolicyOfferingTransaction AS (\n\tSELECT\n\tQuotePolicyOfferingTransactionId, \n\tWrittenPremium\n\tFROM FLTR_Update_records\n),\nQuotePolicyOfferingTransaction_Update AS (\n\tMERGE INTO QuotePolicyOfferingTransaction AS T\n\tUSING UPD_Update_QuotePolicyOfferingTransaction AS S\n\tON T.QuotePolicyOfferingTransactionId = S.QuotePolicyOfferingTransactionId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.QuotePremium = S.WrittenPremium\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246494"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905492"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603301"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:45:05"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:49"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "AND WorkDCTPolicy.QuoteActionStatus IS NOT NULL"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            }
        },
        "folder": {
            "name": "Quote DataWarehouse/"
        },
        "annotations": []
    }
}