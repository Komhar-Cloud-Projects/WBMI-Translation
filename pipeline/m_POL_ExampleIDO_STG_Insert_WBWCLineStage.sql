WITH
SQ_WB_WC_Line AS (
	WITH cte_WBWCLine(Sessionid) as
	(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' 
	AND Autoshred<> '1' 
	 UNION 
	 select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')
	SELECT 
	X.WC_LineId, 
	X.WB_WC_LineId, 
	X.SessionId, 
	X.CurrentIteration, 
	X.Space, 
	X.Selected, 
	X.ClaimsInExcessOf, 
	X.RetrieveExperienceModifier, 
	X.OtherStatesInsuranceConditional, 
	X.OtherStatesInsuranceIterator, 
	X.OtherStatesInsuranceCalculation, 
	X.OtherStatesInsuranceSumIterator, 
	X.MinimumPremiumMaximum, 
	X.TotalClaimsIncurred, 
	X.TotalStatePremiumForDividend, 
	X.DividendAmount, 
	X.DividendPrior, 
	X.DividendChange, 
	X.DividendWritten, 
	X.DividendPremium, 
	X.TotalDividendIncurredLossRatio, 
	X.DividendPercentage, 
	X.DividendPercentagePrior, 
	X.DividendAmountFinal, 
	X.DividendProjectedDate, 
	X.DividendPaidDate, 
	X.TotalClaimsAmountPaid, 
	X.TotalClaimsOutstanding, 
	X.TotalClaimsExpense, 
	X.DividendWrittenDuplicatePath, 
	X.ExperienceModMessage, 
	X.ExperienceModIndicator, 
	X.Value, 
	X.RetrieveExperienceMod, 
	X.ExpenseConstantMaximum, 
	X.AddState, 
	X.PriorCountForRetrospectiveCalculation, 
	X.AnyContractorClassCode, 
	X.PreviousFinalCommission, 
	X.DividendCharge, 
	X.ManuallyCalculate, 
	X.OtherPoliciesWC000503, 
	X.InterstateRiskID
	FROM  
	WB_WC_Line X
	inner join
	cte_WBWCLine Y on X.Sessionid = Y.Sessionid
	@{pipeline().parameters.WHERE_CLAUSE}
),
EXP_Metadata AS (
	SELECT
	WC_LineId,
	WB_WC_LineId,
	SessionId,
	CurrentIteration,
	Space,
	Selected,
	-- *INF*: IIF(Selected='T', '1','0')
	IFF(Selected = 'T', '1', '0') AS o_Selected,
	ClaimsInExcessOf,
	RetrieveExperienceModifier,
	OtherStatesInsuranceConditional,
	OtherStatesInsuranceIterator,
	-- *INF*: IIF(OtherStatesInsuranceIterator='T', '1','0')
	IFF(OtherStatesInsuranceIterator = 'T', '1', '0') AS o_OtherStatesInsuranceIterator,
	OtherStatesInsuranceCalculation,
	OtherStatesInsuranceSumIterator,
	MinimumPremiumMaximum,
	TotalClaimsIncurred,
	TotalStatePremiumForDividend,
	DividendAmount,
	DividendPrior,
	DividendChange,
	DividendWritten,
	DividendPremium,
	TotalDividendIncurredLossRatio,
	DividendPercentage,
	DividendPercentagePrior,
	DividendAmountFinal,
	DividendProjectedDate,
	DividendPaidDate,
	TotalClaimsAmountPaid,
	TotalClaimsOutstanding,
	TotalClaimsExpense,
	DividendWrittenDuplicatePath,
	ExperienceModMessage,
	ExperienceModIndicator,
	Value,
	RetrieveExperienceMod,
	ExpenseConstantMaximum,
	AddState,
	PriorCountForRetrospectiveCalculation,
	AnyContractorClassCode,
	-- *INF*: IIF(AnyContractorClassCode='T', '1','0')
	IFF(AnyContractorClassCode = 'T', '1', '0') AS o_AnyContractorClassCode,
	PreviousFinalCommission,
	DividendCharge,
	ManuallyCalculate,
	OtherPoliciesWC000503,
	InterstateRiskID,
	-- *INF*: IIF(ManuallyCalculate='T', '1','0')
	IFF(ManuallyCalculate = 'T', '1', '0') AS o_ManuallyCalculate,
	sysdate AS o_ExtractDate,
	SYSDATE AS o_AsOfDate,
	null AS o_RecordCount,
	@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId
	FROM SQ_WB_WC_Line
),
TGT_WBWCLineStage_Insert AS (
	TRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBWCLineStage;
	INSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBWCLineStage
	(ExtractDate, SourceSystemId, WCLineId, WBWCLineId, SessionId, InterstateRiskID, CurrentIteration, Space, Selected, ClaimsInExcessOf, RetrieveExperienceModifier, AddState, ManuallyCalculate, OtherStatesInsuranceConditional, OtherStatesInsuranceIterator, OtherStatesInsuranceCalculation, OtherStatesInsuranceSumIterator, MinimumPremiumMaximum, ExpenseConstantMaximum, TotalClaimsIncurred, TotalStatePremiumForDividend, DividendAmount, DividendPrior, DividendChange, DividendWritten, DividendPremium, TotalDividendIncurredLossRatio, DividendPercentage, DividendPercentagePrior, DividendAmountFinal, DividendProjectedDate, DividendPaidDate, TotalClaimsAmountPaid, TotalClaimsOutstanding, TotalClaimsExpense, DividendWrittenDuplicatePath, DividendCharge, OtherPoliciesWC000503, PriorCountForRetrospectiveCalculation, AnyContractorClassCode, PreviousFinalCommission, ExperienceModMessage, ExperienceModIndicator, Value, RetrieveExperienceMod)
	SELECT 
	o_ExtractDate AS EXTRACTDATE, 
	o_SourceSystemId AS SOURCESYSTEMID, 
	WC_LineId AS WCLINEID, 
	WB_WC_LineId AS WBWCLINEID, 
	SESSIONID, 
	INTERSTATERISKID, 
	CURRENTITERATION, 
	SPACE, 
	o_Selected AS SELECTED, 
	CLAIMSINEXCESSOF, 
	RETRIEVEEXPERIENCEMODIFIER, 
	ADDSTATE, 
	o_ManuallyCalculate AS MANUALLYCALCULATE, 
	OTHERSTATESINSURANCECONDITIONAL, 
	o_OtherStatesInsuranceIterator AS OTHERSTATESINSURANCEITERATOR, 
	OTHERSTATESINSURANCECALCULATION, 
	OTHERSTATESINSURANCESUMITERATOR, 
	MINIMUMPREMIUMMAXIMUM, 
	EXPENSECONSTANTMAXIMUM, 
	TOTALCLAIMSINCURRED, 
	TOTALSTATEPREMIUMFORDIVIDEND, 
	DIVIDENDAMOUNT, 
	DIVIDENDPRIOR, 
	DIVIDENDCHANGE, 
	DIVIDENDWRITTEN, 
	DIVIDENDPREMIUM, 
	TOTALDIVIDENDINCURREDLOSSRATIO, 
	DIVIDENDPERCENTAGE, 
	DIVIDENDPERCENTAGEPRIOR, 
	DIVIDENDAMOUNTFINAL, 
	DIVIDENDPROJECTEDDATE, 
	DIVIDENDPAIDDATE, 
	TOTALCLAIMSAMOUNTPAID, 
	TOTALCLAIMSOUTSTANDING, 
	TOTALCLAIMSEXPENSE, 
	DIVIDENDWRITTENDUPLICATEPATH, 
	DIVIDENDCHARGE, 
	OTHERPOLICIESWC000503, 
	PRIORCOUNTFORRETROSPECTIVECALCULATION, 
	o_AnyContractorClassCode AS ANYCONTRACTORCLASSCODE, 
	PREVIOUSFINALCOMMISSION, 
	EXPERIENCEMODMESSAGE, 
	EXPERIENCEMODINDICATOR, 
	VALUE, 
	RETRIEVEEXPERIENCEMOD
	FROM EXP_Metadata
),