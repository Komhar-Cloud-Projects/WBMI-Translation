{
    "name": "s_m_CLM_NCCI_Extract_WC_Claims_Subsequent_Report",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_NCCI_Extract_WC_Claims_Subsequent_Report",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Get_State_Code_NCCI AS (\n\tSELECT\n\tstate_abbrev,\n\tstate_code\n\tFROM (\n\t\tSELECT state_sup.state_abbrev as state_abbrev, ltrim(rtrim(state_sup.state_code)) as state_code FROM state_sup\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY state_abbrev) = 1\n),\nSQ_Get_WC_Get_Subsequent_Claims AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t       ncci_extract_tab.edw_claim_occurrence_ak_id,\r\n\t       ncci_extract_tab.edw_claim_party_occurrence_ak_id,\r\n\t       ncci_extract_tab.edw_pol_ak_id,\r\n\t       ncci_extract_tab.pol_num_id,\r\n\t       ncci_extract_tab.pol_eff_date,\r\n\t       ncci_extract_tab.jurisdiction_state,\r\n\t       ncci_extract_tab.reported_to_insr_date,\r\n\t       ncci_extract_tab.claim_status_code,\r\n\t       Ltrim(Rtrim(co.source_claim_occurrence_status_code)),\r\n\t       Ltrim(Rtrim(co.loss_loc_state)),\r\n\t       co.claim_loss_date,\r\n\t       Ltrim(Rtrim(co.claim_num)),\r\n\t       Ltrim(Rtrim(co.wc_cat_code)),\r\n\t       pol.pol_dim_id,\r\n\t\t   ltrim(rtrim(pol.pol_sym)) as pol_sym,\r\n\t       Ltrim(Rtrim(pol.pol_key)),\r\n\t       pol.pol_eff_date,\r\n\t       clmt.claimant_dim_id,\r\n\t       Ltrim(Rtrim(clmt.claimant_status_type)),\r\n\t       clmt.claimant_close_date,\r\n\t       clmt.claimant_closed_after_reopen_date,\r\n\t       Ltrim(Rtrim(clmt.claimant_full_name)),\r\n\t       clmt.claimant_birthdate,\r\n\t       Ltrim(Rtrim(clmt.claimant_gndr)),\r\n\t       Ltrim(Rtrim(clmt.jurisdiction_state_code)),\r\n\t       clmt.hired_date,\r\n\t       clmt.avg_wkly_wage,\r\n\t       Ltrim(Rtrim(clmt.body_part_code)),\r\n\t       Ltrim(Rtrim(clmt.nature_inj_code)),\r\n\t       Ltrim(Rtrim(clmt.cause_inj_code)),\r\n\t       clmt.return_to_work_date,\r\n\t       Ltrim(Rtrim(clmt.controverted_case_code)),\r\n\t       Ltrim(Rtrim(clmt.act_status_code)),\r\n\t       Ltrim(Rtrim(clmt.wc_claimant_num)),\r\n\t       Ltrim(Rtrim(clmt.type_of_loss_code)),\r\n\t       Ltrim(Rtrim(clmt.pre_inj_avg_wkly_wage_code)),\r\n\t       clmt.post_inj_wkly_wage_amt,\r\n\t       clmt.impairment_disability_percentage,\r\n\t       Ltrim(Rtrim(clmt.impairment_disability_percentage_basis_code)),\r\n\t       clmt.max_med_improvement_date,\r\n\t       Ltrim(Rtrim(clmt.med_extinguishment_ind)),\r\n\t       Ltrim(Rtrim(clmt.crrnt_work_status)),\r\n\t       max(ltrim(rtrim(clm_trans_dim.trans_ctgry_code))),\r\n\t       SUM(loss_trans.direct_loss_incurred_excluding_recoveries) AS Incurred_Indemnity_Amount_Total,\r\n\t       SUM(loss_trans.direct_subrogation_incurred)               AS direct_subrogation_incurred,\r\n\t       SUM(loss_trans.direct_other_recovery_loss_incurred)       AS direct_other_recovery_loss_incurred,\r\n\t\t   ltrim(rtrim(COVDET.ClassCode)) as classcode\r\n\tFROM   work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\t       INNER JOIN (SELECT edw_claim_party_occurrence_ak_id,\r\n\t       MAX(work_claim_ncci_rpt_extract_id) AS max_id\r\n\t       FROM   dbo.work_claim_ncci_report_extract\r\n\t       GROUP  BY edw_claim_party_occurrence_ak_id) b\r\n\t       ON ncci_extract_tab.work_claim_ncci_rpt_extract_id = b.max_id\r\n\t       INNER JOIN claim_occurrence_dim co WITH (NOLOCK)\r\n\t       ON ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\t       INNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\t       ON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\t       INNER JOIN policy_dim pol WITH (NOLOCK)\r\n\t       ON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\t       INNER JOIN claim_loss_transaction_fact loss_trans WITH (NOLOCK)\r\n\t       ON co.claim_occurrence_dim_id = loss_trans.claim_occurrence_dim_id\r\n\t       AND clmt.claimant_dim_id = loss_trans.claimant_dim_id\r\n\t       AND pol.pol_dim_id = loss_trans.pol_dim_id\r\n\t       INNER JOIN CoverageDetailDim COVDET WITH (NOLOCK)\r\n\t       ON loss_trans.CoverageDetailDimId = COVDET.CoverageDetailDimId\r\n\t       INNER JOIN claimant_coverage_dim clmt_cov WITH (NOLOCK)\r\n\t       ON loss_trans.claimant_cov_dim_id = clmt_cov.claimant_cov_dim_id\r\n\t       INNER JOIN claim_payment_category_type_dim ctgry_dim WITH (NOLOCK)\r\n\t       ON loss_trans.claim_pay_ctgry_type_dim_id = ctgry_dim.claim_pay_ctgry_type_dim_id\r\n\t       LEFT OUTER JOIN (SELECT *\r\n\tFROM   claim_transaction_type_dim\r\n\tWHERE  trans_ctgry_code = 'SI') clm_trans_dim\r\n\t         ON loss_trans.claim_trans_type_dim_id = clm_trans_dim.claim_trans_type_dim_id\r\n\tWHERE  ( ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+13), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+12), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+25), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+24), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+37), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+36), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+49), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+48), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+61), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+60), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+73), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+72), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+85), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+84), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+97), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+96), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+109), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+108), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+121), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+120), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) ) )\r\n\t       AND clmt.crrnt_snpsht_flag = 1\r\n\t       AND co.crrnt_snpsht_flag = 1\r\n\t       AND pol.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.crrnt_snpsht_flag = 1\r\n\t       AND clmt_cov.MajorPerilCode = '032' -- for WC claims\r\n\t       AND clmt_cov.cause_of_loss = '05'\r\n\t       AND co.claim_num <> 'N/A' --for exceed_claims\r\n\tGROUP  BY ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t          ncci_extract_tab.edw_claim_occurrence_ak_id,\r\n\t          ncci_extract_tab.edw_claim_party_occurrence_ak_id,\r\n\t          ncci_extract_tab.edw_pol_ak_id,\r\n\t          ncci_extract_tab.pol_num_id,\r\n\t          ncci_extract_tab.pol_eff_date,\r\n\t          ncci_extract_tab.jurisdiction_state,\r\n\t          ncci_extract_tab.reported_to_insr_date,\r\n\t          ncci_extract_tab.claim_status_code,\r\n\t          Ltrim(Rtrim(co.source_claim_occurrence_status_code)),\r\n\t          Ltrim(Rtrim(co.loss_loc_state)),\r\n\t          co.claim_loss_date,\r\n\t          Ltrim(Rtrim(co.wc_cat_code)),\r\n\t          Ltrim(Rtrim(co.claim_num)),\r\n\t          pol.pol_dim_id,\r\n\t\t\t  ltrim(rtrim(pol.pol_sym)),\r\n\t          Ltrim(Rtrim(pol.pol_key)),\r\n\t          pol.pol_eff_date,\r\n\t          clmt.claimant_dim_id,\r\n\t          Ltrim(Rtrim(clmt.claimant_status_type)),\r\n\t          clmt.claimant_close_date,\r\n\t          clmt.claimant_closed_after_reopen_date,\r\n\t          Ltrim(Rtrim(clmt.claimant_full_name)),\r\n\t          clmt.claimant_birthdate,\r\n\t          Ltrim(Rtrim(clmt.claimant_gndr)),\r\n\t          Ltrim(Rtrim(clmt.jurisdiction_state_code)),\r\n\t          clmt.hired_date,\r\n\t          clmt.avg_wkly_wage,\r\n\t          Ltrim(Rtrim(clmt.body_part_code)),\r\n\t          Ltrim(Rtrim(clmt.nature_inj_code)),\r\n\t          Ltrim(Rtrim(clmt.cause_inj_code)),\r\n\t          clmt.return_to_work_date,\r\n\t          Ltrim(Rtrim(clmt.controverted_case_code)),\r\n\t          Ltrim(Rtrim(clmt.act_status_code)),\r\n\t          Ltrim(Rtrim(clmt.wc_claimant_num)),\r\n\t          Ltrim(Rtrim(clmt.type_of_loss_code)),\r\n\t          Ltrim(Rtrim(clmt.pre_inj_avg_wkly_wage_code)),\r\n\t          clmt.post_inj_wkly_wage_amt,\r\n\t          clmt.impairment_disability_percentage,\r\n\t          Ltrim(Rtrim(clmt.impairment_disability_percentage_basis_code)),\r\n\t          clmt.max_med_improvement_date,\r\n\t          Ltrim(Rtrim(clmt.med_extinguishment_ind)),\r\n\t          Ltrim(Rtrim(clmt.crrnt_work_status)),\r\n\t\t\t  ltrim(rtrim(COVDET.ClassCode))\n),\nEXP_Convert_Date_Format AS (\n\tSELECT\n\treported_to_insr_date,\n\t-- *INF*: to_date(reported_to_insr_date,'YYYYMMDD')\n\tTO_TIMESTAMP(reported_to_insr_date, 'YYYYMMDD') AS o_reported_to_insr_date\n\tFROM SQ_Get_WC_Get_Subsequent_Claims\n),\nEXP_Calculate_Valuation_Levels AS (\n\tSELECT\n\to_reported_to_insr_date AS Input_Date,\n\t-- *INF*: to_integer(date_diff(sysdate,Input_Date,'mm'),true)\r\n\t-- \r\n\t-- --date_diff function will calculate the differnce upto 2 decimal places. For the purpose of deriving valuation level codes, we don't want decimal places. Part of the fix for DDRR-65\n\tCAST(DATEDIFF(mm,CURRENT_TIMESTAMP,Input_Date) AS INTEGER) AS Difference_Months,\n\t-- *INF*: decode(true,\r\n\t-- Difference_Months <=19,'018',\r\n\t-- Difference_Months <=31,'030',\r\n\t-- Difference_Months <=43,'042',\r\n\t-- Difference_Months <=55,'054',\r\n\t-- Difference_Months <=67,'066',\r\n\t-- Difference_Months <=79,'078',\r\n\t-- Difference_Months <=91,'090',\r\n\t-- Difference_Months <=103,'102',\r\n\t-- Difference_Months <=115,'114',\r\n\t-- Difference_Months <=127,'126',\r\n\t-- Difference_Months <=139,'138',\r\n\t-- '999')\r\n\t-- \r\n\t-- --'999' is dummy coz we don't need to send claims after 138 months (last valuation)\n\tdecode(\n\t    true,\n\t    Difference_Months <= 19, '018',\n\t    Difference_Months <= 31, '030',\n\t    Difference_Months <= 43, '042',\n\t    Difference_Months <= 55, '054',\n\t    Difference_Months <= 67, '066',\n\t    Difference_Months <= 79, '078',\n\t    Difference_Months <= 91, '090',\n\t    Difference_Months <= 103, '102',\n\t    Difference_Months <= 115, '114',\n\t    Difference_Months <= 127, '126',\n\t    Difference_Months <= 139, '138',\n\t    '999'\n\t) AS Valuation_Level_Code\n\tFROM EXP_Convert_Date_Format\n),\nEXP_Get_Source_Data AS (\n\tSELECT\n\tSQ_Get_WC_Get_Subsequent_Claims.work_claim_ncci_rpt_extract_id,\n\tSQ_Get_WC_Get_Subsequent_Claims.edw_claim_occurrence_ak_id1 AS edw_claim_occurrence_ak_id,\n\tSQ_Get_WC_Get_Subsequent_Claims.edw_claim_party_occurrence_ak_id1,\n\tSQ_Get_WC_Get_Subsequent_Claims.edw_pol_ak_id1,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_num_id AS prev_pol_key,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_eff_date1 AS prev_pol_eff_date,\n\tEXP_Convert_Date_Format.reported_to_insr_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.jurisdiction_state AS perv_jurisdiction_state,\n\tSQ_Get_WC_Get_Subsequent_Claims.claim_status_code AS prev_claim_status_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.source_claim_occurrence_status_code,\n\t-- *INF*: to_char(source_claim_rpted_date,'YYYYMMDD')\n\tto_char(source_claim_rpted_date, 'YYYYMMDD') AS o_source_claim_rpted_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.loss_loc_state,\n\t-- *INF*: :LKP.LKP_GET_STATE_CODE_NCCI(loss_loc_state) \n\tLKP_GET_STATE_CODE_NCCI_loss_loc_state.state_abbrev AS o_loss_loc_state,\n\tSQ_Get_WC_Get_Subsequent_Claims.claim_loss_date,\n\t-- *INF*: to_char(claim_loss_date,'YYYYMMDD')\n\tto_char(claim_loss_date, 'YYYYMMDD') AS o_claim_loss_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.claim_num,\n\tSQ_Get_WC_Get_Subsequent_Claims.wc_cat_code,\n\t-- *INF*: iif(wc_cat_code < '11' or wc_cat_code = 'N/A'\r\n\t-- ,'N'\r\n\t-- ,'Y')\r\n\t-- \r\n\t-- --iif(wc_cat_code = 'N/A'\r\n\t-- --,'N'\r\n\t-- --,'Y')\r\n\t-- \r\n\t-- --Changes made by Vikas Sood on 08/04/2011 for DDRR-71. Extraordinary loss indicator will be set to Y only when wc_cat_code >--=11\r\n\t-- \n\tIFF(wc_cat_code < '11' or wc_cat_code = 'N/A', 'N', 'Y') AS o_wc_cat_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_dim_id,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_key,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_eff_date,\n\t-- *INF*: to_char(pol_eff_date,'yyyymmdd')\n\tto_char(pol_eff_date, 'yyyymmdd') AS v_pol_eff_date,\n\tv_pol_eff_date AS o_pol_eff_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_dim_id,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_status_type,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_close_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_closed_after_reopen_date,\n\t-- *INF*: iif(v_claim_status_code = '1'\r\n\t--     ,iif(claimant_closed_after_reopen_date = to_date('18000101','YYYYMMDD')\r\n\t-- \t\t,to_char(claimant_close_date,'YYYYMMDD')\r\n\t--             ,to_char(claimant_closed_after_reopen_date,'YYYYMMDD')\r\n\t-- )\r\n\t--     ,'00000000')\r\n\t-- \r\n\t-- --Report the most recent date as of loss valuation that claim was closed only if Claim Status Code is reported as 1 Closed.\r\n\t-- -- Zero-fill if the Claim Status Code  is 0Open. \n\tIFF(\n\t    v_claim_status_code = '1',\n\t    IFF(\n\t        claimant_closed_after_reopen_date = TO_TIMESTAMP('18000101', 'YYYYMMDD'),\n\t        to_char(claimant_close_date, 'YYYYMMDD'),\n\t        to_char(claimant_closed_after_reopen_date, 'YYYYMMDD')\n\t    ),\n\t    '00000000'\n\t) AS o_claimant_close_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_full_name,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_birthdate,\n\tSQ_Get_WC_Get_Subsequent_Claims.claimant_gndr,\n\tSQ_Get_WC_Get_Subsequent_Claims.jurisdiction_state_code,\n\t-- *INF*: :LKP.LKP_GET_STATE_CODE_NCCI(jurisdiction_state_code) \n\tLKP_GET_STATE_CODE_NCCI_jurisdiction_state_code.state_abbrev AS v_jurisdiction_state_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.hired_date,\n\t-- *INF*: iif(hired_date = to_date('01/01/1800','MM/DD/YYYY')\r\n\t-- ,'00000000'\r\n\t-- ,to_char(hired_date,'YYYYMMDD'))\n\tIFF(\n\t    hired_date = TO_TIMESTAMP('01/01/1800', 'MM/DD/YYYY'), '00000000',\n\t    to_char(hired_date, 'YYYYMMDD')\n\t) AS o_hired_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.avg_wkly_wage,\n\t-- *INF*: iif(isnull(avg_wkly_wage)\r\n\t--      ,'00000'\r\n\t--      ,iif(avg_wkly_wage > 99999\r\n\t--           ,'99999'\r\n\t--         ,lpad(to_char(to_integer(avg_wkly_wage)),5,'0')\r\n\t-- )\r\n\t-- )\n\tIFF(\n\t    avg_wkly_wage IS NULL, '00000',\n\t    IFF(\n\t        avg_wkly_wage > 99999, '99999',\n\t        lpad(to_char(CAST(avg_wkly_wage AS INTEGER)), 5, '0')\n\t    )\n\t) AS o_avg_wkly_wage,\n\tSQ_Get_WC_Get_Subsequent_Claims.body_part_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.nature_inj_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.cause_inj_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.return_to_work_date,\n\t-- *INF*: iif(to_char(return_to_work_date,'YYYYMMDD')  !=  '18000101' AND (v_claim_status_code = '0' or  v_claim_status_code = '1' ) ,to_char(return_to_work_date,'YYYYMMDD')\r\n\t-- ,'00000000')\r\n\t-- \n\tIFF(\n\t    to_char(return_to_work_date, 'YYYYMMDD') != '18000101'\n\t    and (v_claim_status_code = '0'\n\t    or v_claim_status_code = '1'),\n\t    to_char(return_to_work_date, 'YYYYMMDD'),\n\t    '00000000'\n\t) AS o_return_to_work_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.controverted_case_code,\n\t-- *INF*: iif(controverted_case_code = 'N/A'\r\n\t-- ,' '\r\n\t-- ,controverted_case_code)\n\tIFF(controverted_case_code = 'N/A', ' ', controverted_case_code) AS o_controverted_case_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.act_status_code,\n\t-- *INF*: iif(act_status_code = 'FA' \r\n\t-- ,'59'\r\n\t-- ,iif(in(jurisdiction_state_code,'CA', 'DE', 'ND', 'OH', 'WA', 'WY')\r\n\t-- ,' '\r\n\t-- ,v_jurisdiction_state_code)\r\n\t-- )\n\tIFF(\n\t    act_status_code = 'FA', '59',\n\t    IFF(\n\t        jurisdiction_state_code IN ('CA','DE','ND','OH','WA','WY'), ' ',\n\t        v_jurisdiction_state_code\n\t    )\n\t) AS o_jurisdiction_state_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.wc_claimant_num,\n\tSQ_Get_WC_Get_Subsequent_Claims.type_of_loss_code,\n\t-- *INF*: iif(type_of_loss_code = 'N/A'\r\n\t-- ,'00'\r\n\t-- ,type_of_loss_code)\n\tIFF(type_of_loss_code = 'N/A', '00', type_of_loss_code) AS o_type_of_loss_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.pre_inj_avg_wkly_wage_code AS pre_injury_avg_wkly_wage_code,\n\t-- *INF*: iif(pre_injury_avg_wkly_wage_code = 'N/A'\r\n\t-- ,'1'\r\n\t-- ,ltrim(pre_injury_avg_wkly_wage_code,'0'))\n\tIFF(pre_injury_avg_wkly_wage_code = 'N/A', '1', ltrim(pre_injury_avg_wkly_wage_code, '0')) AS o_pre_injury_avg_wkly_wage_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.post_inj_wkly_wage_amt,\n\t-- *INF*: iif(isnull(post_inj_wkly_wage_amt)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(post_inj_wkly_wage_amt,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    post_inj_wkly_wage_amt IS NULL, '000000000',\n\t    lpad(to_char(CAST(post_inj_wkly_wage_amt AS INTEGER)), 9, '0')\n\t) AS o_post_inj_wkly_wage_amt,\n\tSQ_Get_WC_Get_Subsequent_Claims.impairment_disability_percentage,\n\t-- *INF*: iif(isnull(impairment_disability_percentage)\r\n\t-- ,'000'\r\n\t-- ,lpad(to_char(to_integer(impairment_disability_percentage,false)),3,'0')\r\n\t-- )\n\tIFF(\n\t    impairment_disability_percentage IS NULL, '000',\n\t    lpad(to_char(CAST(impairment_disability_percentage AS INTEGER)), 3, '0')\n\t) AS o_impairment_disability_percentage,\n\tSQ_Get_WC_Get_Subsequent_Claims.impairment_disability_percentage_basis_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.max_med_improvement_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.med_extinguishment_ind,\n\t-- *INF*: iif(med_extinguishment_ind = 'N/A'\r\n\t-- ,' '\r\n\t-- ,med_extinguishment_ind)\n\tIFF(med_extinguishment_ind = 'N/A', ' ', med_extinguishment_ind) AS o_med_extinguishment_ind,\n\tSQ_Get_WC_Get_Subsequent_Claims.crrnt_work_status,\n\t-- *INF*: iif(upper(crrnt_work_status) = 'RESTRICTIONS WITHOUT WAGE LOSS' OR upper(crrnt_work_status) = 'FULL DUTY'\r\n\t-- \t,'Y'\r\n\t-- \t,iif(upper(crrnt_work_status) = 'RESTRICTIONS WITH WAGE LOSS' \r\n\t-- \t\t,'N'\r\n\t-- \t\t,iif(upper(crrnt_work_status) = 'TOTALLY DISABLED'\r\n\t-- \t\t\t,' '\r\n\t--     \t\t     )\r\n\t-- \t)\r\n\t-- )\n\tIFF(\n\t    upper(crrnt_work_status) = 'RESTRICTIONS WITHOUT WAGE LOSS'\n\t    or upper(crrnt_work_status) = 'FULL DUTY',\n\t    'Y',\n\t    IFF(\n\t        upper(crrnt_work_status) = 'RESTRICTIONS WITH WAGE LOSS', 'N',\n\t        IFF(\n\t            upper(crrnt_work_status) = 'TOTALLY DISABLED', ' '\n\t        )\n\t    )\n\t) AS ret_to_work_rate_of_pay_ind,\n\t-- *INF*: IIF(ISNULL(max_med_improvement_date) OR to_char(max_med_improvement_date,'YYYYMMDD') = '18000101'\r\n\t-- ,'00000000'\r\n\t-- ,to_char(max_med_improvement_date,'YYYYMMDD')\r\n\t-- )\n\tIFF(\n\t    max_med_improvement_date IS NULL OR to_char(max_med_improvement_date, 'YYYYMMDD') = '18000101',\n\t    '00000000',\n\t    to_char(max_med_improvement_date, 'YYYYMMDD')\n\t) AS o_max_med_improvement_date,\n\tSQ_Get_WC_Get_Subsequent_Claims.trans_ctgry_code,\n\tSQ_Get_WC_Get_Subsequent_Claims.direct_loss_incurred_excluding_recoveries AS Incurred_Indemnity_Amount_Total,\n\t-- *INF*: iif(isnull(Incurred_Indemnity_Amount_Total)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Incurred_Indemnity_Amount_Total)),9,'0')\r\n\t-- )\r\n\t-- \n\tIFF(\n\t    Incurred_Indemnity_Amount_Total IS NULL, '000000000',\n\t    lpad(to_char(CAST(Incurred_Indemnity_Amount_Total AS INTEGER)), 9, '0')\n\t) AS o_Incurred_Indemnity_Amount_Total,\n\tSQ_Get_WC_Get_Subsequent_Claims.direct_subrogation_incurred,\n\tSQ_Get_WC_Get_Subsequent_Claims.direct_other_recovery_loss_incurred,\n\t-- *INF*: iif(source_claim_occurrence_status_code = 'O'\r\n\t--      ,iif(claimant_status_type = 'OPEN' or claimant_status_type = 'REOPEN'\r\n\t-- \t\t,'0'\r\n\t-- \t\t,'1')\r\n\t-- \t,'1')\n\tIFF(\n\t    source_claim_occurrence_status_code = 'O',\n\t    IFF(\n\t        claimant_status_type = 'OPEN' or claimant_status_type = 'REOPEN', '0', '1'\n\t    ),\n\t    '1'\n\t) AS v_claim_status_code,\n\tv_claim_status_code AS o_claim_status_code,\n\t-- *INF*: iif(direct_subrogation_incurred = 0\r\n\t--      ,iif(direct_other_recovery_loss_incurred = 0 \r\n\t--           ,'01'\r\n\t--           ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code = 'SI'\r\n\t--                ,'02'\r\n\t--               ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code <> 'SI'\r\n\t--                     ,'01'\r\n\t--                     ,'01'))\r\n\t--           )\r\n\t--     ,iif(direct_other_recovery_loss_incurred = 0 --and trans_ctgry_code = 'SI'\r\n\t--           ,'03'\r\n\t--         ,iif(direct_other_recovery_loss_incurred < 0 and trans_ctgry_code = 'SI'\r\n\t--           ,'04'\r\n\t--           ,'01')\r\n\t--         )\r\n\t-- )\r\n\t-- \r\n\t-- --if no recovery exists (i.e. no subrogation recovery and no other recovery for second injury fund, populate 01, if no subrogation recovery exists but SI recovery exists, populate 02,populate 03 when subrogation recovery exists but no other type of recovery exists (whether it is SI or not) and populate 04 when subrogation recovery exists as well SI recovery exists.\n\tIFF(\n\t    direct_subrogation_incurred = 0,\n\t    IFF(\n\t        direct_other_recovery_loss_incurred = 0, '01',\n\t        IFF(\n\t            direct_other_recovery_loss_incurred < 0\n\t        and trans_ctgry_code = 'SI', '02',\n\t            IFF(\n\t                direct_other_recovery_loss_incurred < 0\n\t            and trans_ctgry_code <> 'SI',\n\t                '01',\n\t                '01'\n\t            )\n\t        )\n\t    ),\n\t    IFF(\n\t        direct_other_recovery_loss_incurred = 0, '03',\n\t        IFF(\n\t            direct_other_recovery_loss_incurred < 0\n\t        and trans_ctgry_code = 'SI', '04',\n\t            '01'\n\t        )\n\t    )\n\t) AS Loss_Condition_Code,\n\t-- *INF*: decode(true,\r\n\t-- (prev_claim_status_code = '0' and v_claim_status_code = '0' and in(perv_jurisdiction_state ,' ','59') and (in(jurisdiction_state_code,'CA', 'DE', 'ND', 'OH', 'WA', 'WY') or act_status_code = 'FA')),'N',\r\n\t-- (prev_claim_status_code = '0' and v_claim_status_code = '0'), 'Y',\r\n\t-- (prev_claim_status_code = '0' and (v_claim_status_code = '1' or source_claim_occurrence_status_code = 'NO' or act_status_code = 'FA' )), 'O',\r\n\t-- (prev_claim_status_code = '1' and v_claim_status_code = '0'), 'Y',\r\n\t-- (prev_claim_status_code = '5' and v_claim_status_code = '0'), 'Y',\r\n\t-- (prev_claim_status_code = '1' and v_claim_status_code = '1'), 'N','N')\r\n\t-- \r\n\t-- --if a previously reported open claim is still open but it was previously reported as either a NON-DCI claim represented by prev_jurisdiction_state = ' ' or it was previously reported as non-compensible reprenseted by prev_jurisdiction_state = '59' and it still is either Non-DCI or is still non-compensible then don't send it\r\n\t-- \r\n\t-- --if a previously reported open claim stays open, then Y, \r\n\t-- \r\n\t-- --if a previously reported open claim is now closed or has became notice-only or is federal act claim, then send it one time reprenseted by 'O', \r\n\t-- \r\n\t-- --if a previously reported closed claim becomes open now, report 'Y',\r\n\t-- \r\n\t-- --if a previously reported medical only claim (represented by 5) is still open, report 'Y',\r\n\t-- \r\n\t-- -- if a previously reported closed claim is still closed, then 'N'. \r\n\t-- -- For anything else, N\n\tdecode(\n\t    true,\n\t    (prev_claim_status_code = '0' and v_claim_status_code = '0' and perv_jurisdiction_state IN (' ','59') and (jurisdiction_state_code IN ('CA','DE','ND','OH','WA','WY') or act_status_code = 'FA')), 'N',\n\t    (prev_claim_status_code = '0' and v_claim_status_code = '0'), 'Y',\n\t    (prev_claim_status_code = '0' and (v_claim_status_code = '1' or source_claim_occurrence_status_code = 'NO' or act_status_code = 'FA')), 'O',\n\t    (prev_claim_status_code = '1' and v_claim_status_code = '0'), 'Y',\n\t    (prev_claim_status_code = '5' and v_claim_status_code = '0'), 'Y',\n\t    (prev_claim_status_code = '1' and v_claim_status_code = '1'), 'N',\n\t    'N'\n\t) AS Trans_Status,\n\tEXP_Calculate_Valuation_Levels.Valuation_Level_Code AS Valuation_Level,\n\t-- *INF*: iif(prev_pol_key  != pol_key or prev_pol_eff_date != v_pol_eff_date\r\n\t-- ,'R'\r\n\t-- ,' ')\n\tIFF(prev_pol_key != pol_key or prev_pol_eff_date != v_pol_eff_date, 'R', ' ') AS Replacement_Report_Code,\n\tSQ_Get_WC_Get_Subsequent_Claims.pol_sym,\n\tSQ_Get_WC_Get_Subsequent_Claims.ClassCode\n\tFROM EXP_Calculate_Valuation_Levels\n\t -- Manually join with EXP_Convert_Date_Format\n\t -- Manually join with SQ_Get_WC_Get_Subsequent_Claims\n\tLEFT JOIN LKP_GET_STATE_CODE_NCCI LKP_GET_STATE_CODE_NCCI_loss_loc_state\n\tON LKP_GET_STATE_CODE_NCCI_loss_loc_state.state_code = loss_loc_state\n\n\tLEFT JOIN LKP_GET_STATE_CODE_NCCI LKP_GET_STATE_CODE_NCCI_jurisdiction_state_code\n\tON LKP_GET_STATE_CODE_NCCI_jurisdiction_state_code.state_code = jurisdiction_state_code\n\n),\nRtr_Replacement_Record AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tedw_claim_occurrence_ak_id,\n\tedw_claim_party_occurrence_ak_id1,\n\tedw_pol_ak_id1,\n\treported_to_insr_date,\n\to_loss_loc_state AS loss_loc_state,\n\to_claim_loss_date,\n\tclaim_num,\n\to_wc_cat_code,\n\trisk_unit,\n\tpol_dim_id,\n\tpol_key,\n\to_pol_eff_date,\n\tclaimant_dim_id,\n\to_claimant_close_date,\n\tclaimant_full_name,\n\tclaimant_birthdate,\n\tclaimant_gndr,\n\to_hired_date AS hired_date,\n\to_avg_wkly_wage,\n\tbody_part_code,\n\tnature_inj_code,\n\tcause_inj_code,\n\to_return_to_work_date,\n\to_controverted_case_code AS controverted_case_code,\n\to_jurisdiction_state_code,\n\twc_claimant_num,\n\to_type_of_loss_code,\n\to_pre_injury_avg_wkly_wage_code AS pre_injury_avg_wkly_wage_code,\n\to_post_inj_wkly_wage_amt,\n\to_impairment_disability_percentage,\n\timpairment_disability_percentage_basis_code,\n\to_med_extinguishment_ind AS med_extinguishment_ind,\n\tret_to_work_rate_of_pay_ind,\n\to_max_med_improvement_date,\n\to_Incurred_Indemnity_Amount_Total,\n\to_claim_status_code,\n\tLoss_Condition_Code,\n\tTrans_Status,\n\tValuation_Level,\n\tReplacement_Report_Code,\n\tpol_sym,\n\tClassCode\n\tFROM EXP_Get_Source_Data\n),\nRtr_Replacement_Record_Replacement_Record AS (SELECT * FROM Rtr_Replacement_Record WHERE Replacement_Report_Code = 'R'),\nRtr_Replacement_Record_All AS (SELECT * FROM Rtr_Replacement_Record WHERE TRUE),\nEXP_Update_Replacement_Records AS (\n\tSELECT\n\tpol_key AS pol_key1,\n\to_pol_eff_date AS o_pol_eff_date1,\n\twc_claimant_num AS wc_claimant_num1,\n\tReplacement_Report_Code AS Replacement_Report_Code1\n\tFROM Rtr_Replacement_Record_Replacement_Record\n),\nSQL_GetPrevious_Valuations_For_Replacement_Reports AS (-- SQL_GetPrevious_Valuations_For_Replacement_Reports\n\n\t##############################################\n\n\t# TODO: Place holder for Custom transformation\n\n\t##############################################\n),\nEXP_Error AS (\n\tSELECT\n\tSQLError,\n\t-- *INF*: iif (not isnull(SQLError),\r\n\t-- error('SQLError')\r\n\t-- )\r\n\t-- \n\tIFF(SQLError IS NOT NULL, error('SQLError')) AS v_SQLError,\n\twork_claim_ncci_rpt_extract_id,\n\t'O' AS Transm_Status,\n\tReplacement_Report_Code2_output,\n\tpol_key1_output,\n\to_pol_eff_date1_output,\n\tprev_pol_key,\n\tprev_pol_eff_date\n\tFROM SQL_GetPrevious_Valuations_For_Replacement_Reports\n),\nUPD_Replacement_Records AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id, \n\tTransm_Status, \n\tReplacement_Report_Code2_output, \n\tpol_key1_output, \n\to_pol_eff_date1_output, \n\tprev_pol_key, \n\tprev_pol_eff_date\n\tFROM EXP_Error\n),\nwork_claim_ncci_report_extract2 AS (\n\tMERGE INTO work_claim_ncci_report_extract AS T\n\tUSING UPD_Replacement_Records AS S\n\tON T.work_claim_ncci_rpt_extract_id = S.work_claim_ncci_rpt_extract_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.transm_status = S.Transm_Status, T.pol_num_id = S.pol_key1_output, T.pol_eff_date = S.o_pol_eff_date1_output, T.repl_rpt_code = S.Replacement_Report_Code2_output, T.prv_pol_num_id = S.prev_pol_key, T.prv_pol_eff_date = S.prev_pol_eff_date\n),\nSQ_Get_WC_Subsequent_Claim_Medical_Data AS (\n\tSELECT ncci_extract_tab.work_claim_ncci_rpt_extract_id,\r\n\t       SUM(loss_trans.direct_loss_paid_excluding_recoveries)     AS Total_Paid_Medical_Amount,\r\n\t       SUM(loss_trans.direct_loss_incurred_excluding_recoveries) AS Incurred_Medical_Amount_Total\r\n\tFROM   work_claim_ncci_report_extract ncci_extract_tab WITH (NOLOCK)\r\n\t       INNER JOIN (SELECT edw_claim_party_occurrence_ak_id,\r\n\t                          MAX(work_claim_ncci_rpt_extract_id) AS max_id\r\n\t                   FROM   dbo.work_claim_ncci_report_extract\r\n\t                   GROUP  BY edw_claim_party_occurrence_ak_id) b\r\n\t         ON ncci_extract_tab.work_claim_ncci_rpt_extract_id = b.max_id\r\n\t       inner join claim_occurrence_dim co WITH (NOLOCK)\r\n\t       on ncci_extract_tab.edw_claim_occurrence_ak_id = co.edw_claim_occurrence_ak_id\r\n\t       INNER JOIN claimant_dim clmt WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_claim_party_occurrence_ak_id = clmt.edw_claim_party_occurrence_ak_id\r\n\t       INNER JOIN policy_dim pol WITH (NOLOCK)\r\n\t         ON ncci_extract_tab.edw_pol_ak_id = pol.edw_pol_ak_id\r\n\t       INNER JOIN claim_loss_transaction_fact loss_trans WITH (NOLOCK)\r\n\t         ON co.claim_occurrence_dim_id = loss_trans.claim_occurrence_dim_id\r\n\t            AND clmt.claimant_dim_id = loss_trans.claimant_dim_id\r\n\t            AND pol.pol_dim_id = loss_trans.pol_dim_id\r\n\t       INNER JOIN claimant_coverage_dim clmt_cov WITH (NOLOCK)\r\n\t         ON loss_trans.claimant_cov_dim_id = clmt_cov.claimant_cov_dim_id\r\n\t       INNER JOIN claim_payment_category_type_dim ctgry_dim WITH (NOLOCK)\r\n\t         ON loss_trans.claim_pay_ctgry_type_dim_id = ctgry_dim.claim_pay_ctgry_type_dim_id\r\n\tWHERE  ( ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+13), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+12), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+25), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+24), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+37), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+36), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+49), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+48), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+61), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+60), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+73), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+72), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+85), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+84), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+97), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+96), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+109), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+108), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) )\r\n\t          OR ( ncci_extract_tab.reported_to_insr_date >= Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+121), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate())))\r\n\t               AND ncci_extract_tab.reported_to_insr_date < Dateadd(m, -(@{pipeline().parameters.NUMBER_OF_MONTHS}+120), CONVERT(VARCHAR(4), Getdate(), 100) + CONVERT(VARCHAR(4), YEAR(Getdate()))) ) )       AND  clmt.crrnt_snpsht_flag = 1\r\n\t       AND co.crrnt_snpsht_flag = 1\r\n\t       AND pol.crrnt_snpsht_flag = 1\r\n\t      AND clmt_cov.crrnt_snpsht_flag = 1\r\n\t      and clmt_cov.majorperilcode = '032' -- for WC claims\r\n\t       AND clmt_cov.cause_of_loss = '06' -- for medical claims\r\n\tGROUP  BY ncci_extract_tab.work_claim_ncci_rpt_extract_id\n),\nEXP_Get_Source_Data2 AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id,\n\tdirect_loss_paid_excluding_recoveries AS Total_Paid_Medical_Amount,\n\t-- *INF*: iif(isnull(Total_Paid_Medical_Amount)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Total_Paid_Medical_Amount,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    Total_Paid_Medical_Amount IS NULL, '000000000',\n\t    lpad(to_char(CAST(Total_Paid_Medical_Amount AS INTEGER)), 9, '0')\n\t) AS o_Total_Paid_Medical_Amount,\n\tdirect_loss_incurred_excluding_recoveries AS Incurred_Medical_Amount_Total,\n\t-- *INF*: iif(isnull(Incurred_Medical_Amount_Total)\r\n\t-- ,'000000000'\r\n\t-- ,lpad(to_char(to_integer(Incurred_Medical_Amount_Total,false)),9,'0')\r\n\t-- )\n\tIFF(\n\t    Incurred_Medical_Amount_Total IS NULL, '000000000',\n\t    lpad(to_char(CAST(Incurred_Medical_Amount_Total AS INTEGER)), 9, '0')\n\t) AS o_Incurred_Medical_Amount_Total\n\tFROM SQ_Get_WC_Subsequent_Claim_Medical_Data\n),\nEXP_Pass_To_Jnr AS (\n\tSELECT\n\twork_claim_ncci_rpt_extract_id AS work_claim_ncci_rpt_extract_id3,\n\tedw_claim_occurrence_ak_id AS edw_claim_occurrence_ak_id3,\n\tedw_claim_party_occurrence_ak_id1 AS edw_claim_party_occurrence_ak_id13,\n\tedw_pol_ak_id1 AS edw_pol_ak_id13,\n\treported_to_insr_date AS reported_to_insr_date3,\n\tloss_loc_state AS loss_loc_state3,\n\to_claim_loss_date AS o_claim_loss_date3,\n\tclaim_num AS claim_num3,\n\to_wc_cat_code AS o_wc_cat_code3,\n\trisk_unit AS risk_unit3,\n\tpol_dim_id AS pol_dim_id3,\n\tpol_key AS pol_key3,\n\to_pol_eff_date AS o_pol_eff_date3,\n\tclaimant_dim_id AS claimant_dim_id3,\n\to_claimant_close_date AS o_claimant_close_date3,\n\tclaimant_full_name AS claimant_full_name3,\n\tclaimant_birthdate AS claimant_birthdate3,\n\tclaimant_gndr AS claimant_gndr3,\n\thired_date AS hired_date3,\n\to_avg_wkly_wage AS o_avg_wkly_wage3,\n\tbody_part_code AS body_part_code3,\n\tnature_inj_code AS nature_inj_code3,\n\tcause_inj_code AS cause_inj_code3,\n\to_return_to_work_date AS o_return_to_work_date3,\n\tcontroverted_case_code AS controverted_case_code3,\n\to_jurisdiction_state_code AS o_jurisdiction_state_code3,\n\twc_claimant_num AS wc_claimant_num3,\n\to_type_of_loss_code AS o_type_of_loss_code3,\n\tpre_injury_avg_wkly_wage_code AS pre_injury_avg_wkly_wage_code3,\n\to_post_inj_wkly_wage_amt AS o_post_inj_wkly_wage_amt3,\n\to_impairment_disability_percentage AS o_impairment_disability_percentage3,\n\timpairment_disability_percentage_basis_code AS impairment_disability_percentage_basis_code3,\n\tmed_extinguishment_ind AS med_extinguishment_ind3,\n\tret_to_work_rate_of_pay_ind AS ret_to_work_rate_of_pay_ind3,\n\to_max_med_improvement_date AS o_max_med_improvement_date3,\n\to_Incurred_Indemnity_Amount_Total AS o_Incurred_Indemnity_Amount_Total3,\n\to_claim_status_code AS o_claim_status_code3,\n\tLoss_Condition_Code AS Loss_Condition_Code3,\n\tTrans_Status AS Trans_Status3,\n\tValuation_Level AS Valuation_Level3,\n\tpol_sym AS pol_sym3,\n\tClassCode AS ClassCode3\n\tFROM Rtr_Replacement_Record_All\n),\nJNR_Join_Medical_Data_With_Indemnity_Claims AS (SELECT\n\tEXP_Get_Source_Data2.work_claim_ncci_rpt_extract_id, \n\tEXP_Get_Source_Data2.o_Total_Paid_Medical_Amount AS Total_Paid_Medical_Amount, \n\tEXP_Get_Source_Data2.o_Incurred_Medical_Amount_Total AS Incurred_Medical_Amount_Total, \n\tEXP_Pass_To_Jnr.work_claim_ncci_rpt_extract_id3 AS work_claim_ncci_rpt_extract_id1, \n\tEXP_Pass_To_Jnr.edw_claim_occurrence_ak_id3 AS edw_claim_occurrence_ak_id, \n\tEXP_Pass_To_Jnr.edw_claim_party_occurrence_ak_id13 AS edw_claim_party_occurrence_ak_id1, \n\tEXP_Pass_To_Jnr.edw_pol_ak_id13 AS edw_pol_ak_id1, \n\tEXP_Pass_To_Jnr.reported_to_insr_date3 AS reported_to_insr_date, \n\tEXP_Pass_To_Jnr.loss_loc_state3 AS loss_loc_state, \n\tEXP_Pass_To_Jnr.o_claim_loss_date3 AS claim_loss_date, \n\tEXP_Pass_To_Jnr.claim_num3 AS claim_num, \n\tEXP_Pass_To_Jnr.o_wc_cat_code3 AS wc_cat_code, \n\tEXP_Pass_To_Jnr.risk_unit3 AS risk_unit, \n\tEXP_Pass_To_Jnr.pol_dim_id3 AS pol_dim_id1, \n\tEXP_Pass_To_Jnr.pol_key3 AS pol_key, \n\tEXP_Pass_To_Jnr.o_pol_eff_date3 AS pol_eff_date, \n\tEXP_Pass_To_Jnr.claimant_dim_id3 AS claimant_dim_id1, \n\tEXP_Pass_To_Jnr.o_claimant_close_date3 AS claimant_close_date, \n\tEXP_Pass_To_Jnr.claimant_full_name3 AS claimant_full_name, \n\tEXP_Pass_To_Jnr.claimant_birthdate3 AS claimant_birthdate, \n\tEXP_Pass_To_Jnr.claimant_gndr3 AS claimant_gndr, \n\tEXP_Pass_To_Jnr.o_jurisdiction_state_code3 AS jurisdiction_state_code, \n\tEXP_Pass_To_Jnr.hired_date3 AS hired_date, \n\tEXP_Pass_To_Jnr.o_avg_wkly_wage3 AS avg_wkly_wage, \n\tEXP_Pass_To_Jnr.body_part_code3 AS body_part_code, \n\tEXP_Pass_To_Jnr.nature_inj_code3 AS nature_inj_code, \n\tEXP_Pass_To_Jnr.cause_inj_code3 AS cause_inj_code, \n\tEXP_Pass_To_Jnr.o_return_to_work_date3 AS return_to_work_date, \n\tEXP_Pass_To_Jnr.controverted_case_code3 AS controverted_case_code, \n\tEXP_Pass_To_Jnr.wc_claimant_num3 AS wc_claimant_num, \n\tEXP_Pass_To_Jnr.o_type_of_loss_code3 AS type_of_loss_code, \n\tEXP_Pass_To_Jnr.pre_injury_avg_wkly_wage_code3 AS pre_injury_avg_wkly_wage_code, \n\tEXP_Pass_To_Jnr.o_post_inj_wkly_wage_amt3 AS post_inj_wkly_wage_amt, \n\tEXP_Pass_To_Jnr.o_impairment_disability_percentage3 AS impairment_disability_percentage, \n\tEXP_Pass_To_Jnr.impairment_disability_percentage_basis_code3 AS impairment_disability_percentage_basis_code, \n\tEXP_Pass_To_Jnr.med_extinguishment_ind3 AS med_extinguishment_ind, \n\tEXP_Pass_To_Jnr.ret_to_work_rate_of_pay_ind3 AS ret_to_work_rate_of_pay_ind, \n\tEXP_Pass_To_Jnr.o_max_med_improvement_date3 AS max_med_improvement_date, \n\tEXP_Pass_To_Jnr.o_Incurred_Indemnity_Amount_Total3 AS Incurred_Indemnity_Amount_Total, \n\tEXP_Pass_To_Jnr.o_claim_status_code3 AS claim_status_code, \n\tEXP_Pass_To_Jnr.Loss_Condition_Code3 AS Loss_Condition_Code, \n\tEXP_Pass_To_Jnr.Trans_Status3 AS Trans_Status, \n\tEXP_Pass_To_Jnr.Valuation_Level3 AS Valuation_Level, \n\tEXP_Pass_To_Jnr.pol_sym3, \n\tEXP_Pass_To_Jnr.ClassCode3\n\tFROM EXP_Get_Source_Data2\n\tRIGHT OUTER JOIN EXP_Pass_To_Jnr\n\tON EXP_Pass_To_Jnr.work_claim_ncci_rpt_extract_id3 = EXP_Get_Source_Data2.work_claim_ncci_rpt_extract_id\n),\nEXP_Calculations AS (\n\tSELECT\n\tIncurred_Indemnity_Amount_Total,\n\tclaim_status_code,\n\t-- *INF*: iif(Incurred_Indemnity_Amount_Total='000000000'\r\n\t-- ,'5'\r\n\t-- ,claim_status_code)\r\n\t-- \r\n\t-- --medical only claims will have Incurred_Indemnity_Amount_Total set to 0\n\tIFF(Incurred_Indemnity_Amount_Total = '000000000', '5', claim_status_code) AS o_claim_status_code,\n\tTrans_Status,\n\t-- *INF*: iif(Incurred_Indemnity_Amount_Total='000000000' and Trans_Status != 'N'\r\n\t-- ,'O'\r\n\t-- ,Trans_Status)\r\n\t-- \r\n\t-- --If it is a med only claim, mark it for reporting one time only.\r\n\t-- \r\n\t-- \n\tIFF(\n\t    Incurred_Indemnity_Amount_Total = '000000000' and Trans_Status != 'N', 'O', Trans_Status\n\t) AS o_Trans_Status,\n\twork_claim_ncci_rpt_extract_id1,\n\twork_claim_ncci_rpt_extract_id\n\tFROM JNR_Join_Medical_Data_With_Indemnity_Claims\n),\nEXP_NCCI_Target AS (\n\tSELECT\n\t-- *INF*: '1'\r\n\t-- \r\n\t-- --hardcoded as per specs\n\t'1' AS record_type_code,\n\t-- *INF*: '17124'\r\n\t-- --hardcoded as per specs\n\t'17124' AS carrier_code,\n\t-- *INF*: ' '\r\n\t-- --hardcoded as per specs\n\t' ' AS future_use3,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.Valuation_Level AS valuation_level_code,\n\t' ' AS replacement_report_code,\n\t' ' AS future_use9,\n\t' ' AS future_use21,\n\t'01' AS type_of_claim,\n\t' ' AS future_use45,\n\t' ' AS future_use76,\n\t' ' AS future_use78,\n\t' ' AS future_use84,\n\t' ' AS Future_use,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.work_claim_ncci_rpt_extract_id,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.edw_claim_party_occurrence_ak_id1 AS edw_claim_party_occurrence_ak_id,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.edw_pol_ak_id1 AS edw_pol_ak_id,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.edw_claim_occurrence_ak_id,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.pol_key,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.pol_eff_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.claim_num,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.jurisdiction_state_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.loss_loc_state,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.claim_loss_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.reported_to_insr_date AS source_claim_rpted_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.risk_unit,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.type_of_loss_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.claimant_gndr,\n\t-- *INF*: decode(true,\r\n\t-- claimant_gndr = 'M','1',\r\n\t-- claimant_gndr = 'F','2',\r\n\t-- '3')\r\n\t-- \n\tdecode(\n\t    true,\n\t    claimant_gndr = 'M', '1',\n\t    claimant_gndr = 'F', '2',\n\t    '3'\n\t) AS o_claimant_gndr,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.claimant_birthdate,\n\t-- *INF*: iif(TO_CHAR(GET_DATE_PART(claimant_birthdate,'YYYY')) = '9999'\r\n\t-- ,'0000'\r\n\t-- ,TO_CHAR(GET_DATE_PART(claimant_birthdate,'YYYY')))\n\tIFF(\n\t    TO_CHAR(DATE_PART(claimant_birthdate, 'YYYY')) = '9999', '0000',\n\t    TO_CHAR(DATE_PART(claimant_birthdate, 'YYYY'))\n\t) AS birth_yr,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.hired_date,\n\t-- *INF*: SUBSTR(hired_date,1,4)\n\tSUBSTR(hired_date, 1, 4) AS hired_yr,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.avg_wkly_wage,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.pre_injury_avg_wkly_wage_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.body_part_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.nature_inj_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.cause_inj_code,\n\tEXP_Calculations.o_claim_status_code AS claim_status_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.claimant_close_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.Incurred_Indemnity_Amount_Total,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.Total_Paid_Medical_Amount,\n\t-- *INF*: iif(isnull(Total_Paid_Medical_Amount)\r\n\t-- ,'000000000'\r\n\t-- ,Total_Paid_Medical_Amount)\n\tIFF(Total_Paid_Medical_Amount IS NULL, '000000000', Total_Paid_Medical_Amount) AS o_Total_Paid_Medical_Amount,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.Incurred_Medical_Amount_Total,\n\t-- *INF*: iif(isnull(Incurred_Medical_Amount_Total)\r\n\t-- ,'000000000'\r\n\t-- ,Incurred_Medical_Amount_Total)\n\tIFF(Incurred_Medical_Amount_Total IS NULL, '000000000', Incurred_Medical_Amount_Total) AS o_Incurred_Medical_Amount_Total,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.wc_cat_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.return_to_work_date,\n\t-- *INF*: iif(claim_status_code = '5' ,'00000000' ,return_to_work_date)\n\tIFF(claim_status_code = '5', '00000000', return_to_work_date) AS v_return_to_work_date,\n\tv_return_to_work_date AS o_return_to_work_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.controverted_case_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.wc_claimant_num,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.post_inj_wkly_wage_amt,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.impairment_disability_percentage,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.impairment_disability_percentage_basis_code,\n\t-- *INF*: iif(impairment_disability_percentage_basis_code = 'N/A'\r\n\t-- ,'0'\r\n\t-- ,impairment_disability_percentage_basis_code)\n\tIFF(\n\t    impairment_disability_percentage_basis_code = 'N/A', '0',\n\t    impairment_disability_percentage_basis_code\n\t) AS o_impairment_disability_percentage_basis_code,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.med_extinguishment_ind,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.ret_to_work_rate_of_pay_ind,\n\t-- *INF*: iif(v_return_to_work_date = '00000000',\r\n\t-- ' ',ret_to_work_rate_of_pay_ind)\r\n\t-- \r\n\t-- --changes made by VS on 08/22/2011\n\tIFF(v_return_to_work_date = '00000000', ' ', ret_to_work_rate_of_pay_ind) AS o_ret_to_work_rate_of_pay_ind,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.max_med_improvement_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.Loss_Condition_Code,\n\tsysdate AS create_date,\n\tEXP_Calculations.o_Trans_Status AS trans_status,\n\t'00000' AS prev_carrier_code,\n\t'00000000' AS prev_policy_eff_date,\n\t'00000000' AS Prev_reported_to_insurer_date,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.pol_sym3 AS pol_sym,\n\tJNR_Join_Medical_Data_With_Indemnity_Claims.ClassCode3 AS Classcode,\n\t-- *INF*: IIF(pol_sym = '000',Classcode,SUBSTR(LTRIM(RTRIM(Classcode)),1,4))\n\tIFF(pol_sym = '000', Classcode, SUBSTR(LTRIM(RTRIM(Classcode)), 1, 4)) AS V_classcode,\n\tV_classcode AS O_classcode\n\tFROM EXP_Calculations\n\t -- Manually join with JNR_Join_Medical_Data_With_Indemnity_Claims\n),\nwork_claim_ncci_report_extract AS (\n\tINSERT INTO work_claim_ncci_report_extract\n\t(edw_claim_occurrence_ak_id, edw_claim_party_occurrence_ak_id, edw_pol_ak_id, created_date, transm_status, rcrd_type_code, carrier_code, future_use_1, pol_num_id, pol_eff_date, valuation_lvl_code, repl_rpt_code, claim_num_id, future_use_2, jurisdiction_state, acc_state, acc_date, reported_to_insr_date, class_code, type_of_loss, type_of_recovery, type_of_claim, claimant_gndr_code, birth_yr, hire_yr, future_use_3, preinjury_avg_weeky_wage_amt, method_of_determining_preinjury_avg_wkly_wage_code, part_of_body_code, nature_of_inj, cause_of_inj, claim_status_code, closing_date, incurred_indemnity_amt_total, future_use_4, incurred_med_amt_total, total_paid_med_amt, post_inj_wkly_wage_amt, impairment_disability_percentage, impairment_percentage_basis_code, max_med_improvement_date, controverted_disputed_case_ind, med_extinguishment_ind, return_to_work_date, return_to_work_rate_of_pay_ind, extraordinary_loss_event_claim_ind, future_use_5, prv_carrier_code, future_use_6, prv_pol_eff_date, prv_reported_to_insr_date, future_use_7, future_use_8)\n\tSELECT \n\tEDW_CLAIM_OCCURRENCE_AK_ID, \n\tEDW_CLAIM_PARTY_OCCURRENCE_AK_ID, \n\tEDW_POL_AK_ID, \n\tcreate_date AS CREATED_DATE, \n\ttrans_status AS TRANSM_STATUS, \n\trecord_type_code AS RCRD_TYPE_CODE, \n\tCARRIER_CODE, \n\tfuture_use3 AS FUTURE_USE_1, \n\tpol_key AS POL_NUM_ID, \n\tPOL_EFF_DATE, \n\tvaluation_level_code AS VALUATION_LVL_CODE, \n\treplacement_report_code AS REPL_RPT_CODE, \n\twc_claimant_num AS CLAIM_NUM_ID, \n\tfuture_use9 AS FUTURE_USE_2, \n\tjurisdiction_state_code AS JURISDICTION_STATE, \n\tloss_loc_state AS ACC_STATE, \n\tclaim_loss_date AS ACC_DATE, \n\tsource_claim_rpted_date AS REPORTED_TO_INSR_DATE, \n\tO_classcode AS CLASS_CODE, \n\ttype_of_loss_code AS TYPE_OF_LOSS, \n\tLoss_Condition_Code AS TYPE_OF_RECOVERY, \n\tTYPE_OF_CLAIM, \n\to_claimant_gndr AS CLAIMANT_GNDR_CODE, \n\tBIRTH_YR, \n\thired_yr AS HIRE_YR, \n\tfuture_use21 AS FUTURE_USE_3, \n\tavg_wkly_wage AS PREINJURY_AVG_WEEKY_WAGE_AMT, \n\tpre_injury_avg_wkly_wage_code AS METHOD_OF_DETERMINING_PREINJURY_AVG_WKLY_WAGE_CODE, \n\tbody_part_code AS PART_OF_BODY_CODE, \n\tnature_inj_code AS NATURE_OF_INJ, \n\tcause_inj_code AS CAUSE_OF_INJ, \n\tCLAIM_STATUS_CODE, \n\tclaimant_close_date AS CLOSING_DATE, \n\tIncurred_Indemnity_Amount_Total AS INCURRED_INDEMNITY_AMT_TOTAL, \n\tfuture_use45 AS FUTURE_USE_4, \n\to_Incurred_Medical_Amount_Total AS INCURRED_MED_AMT_TOTAL, \n\to_Total_Paid_Medical_Amount AS TOTAL_PAID_MED_AMT, \n\tPOST_INJ_WKLY_WAGE_AMT, \n\tIMPAIRMENT_DISABILITY_PERCENTAGE, \n\to_impairment_disability_percentage_basis_code AS IMPAIRMENT_PERCENTAGE_BASIS_CODE, \n\tMAX_MED_IMPROVEMENT_DATE, \n\tcontroverted_case_code AS CONTROVERTED_DISPUTED_CASE_IND, \n\tMED_EXTINGUISHMENT_IND, \n\to_return_to_work_date AS RETURN_TO_WORK_DATE, \n\to_ret_to_work_rate_of_pay_ind AS RETURN_TO_WORK_RATE_OF_PAY_IND, \n\twc_cat_code AS EXTRAORDINARY_LOSS_EVENT_CLAIM_IND, \n\tfuture_use76 AS FUTURE_USE_5, \n\tprev_carrier_code AS PRV_CARRIER_CODE, \n\tfuture_use78 AS FUTURE_USE_6, \n\tprev_policy_eff_date AS PRV_POL_EFF_DATE, \n\tPrev_reported_to_insurer_date AS PRV_REPORTED_TO_INSR_DATE, \n\tfuture_use84 AS FUTURE_USE_7, \n\tFuture_use AS FUTURE_USE_8\n\tFROM EXP_NCCI_Target\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NUMBER_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/ClaimDataServices/"
        },
        "annotations": []
    }
}