{
    "name": "s_m_POL_DW_LOAD_WorkEarnedPremiumCoverage_Daily",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkEarnedPremiumCoverage_Daily",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_WorkEarnedPremiumCoverage AS (\n\tSELECT\n\tWorkEarnedPremiumCoverageDailyID,\n\tPolicyAKID,\n\tStatisticalCoverageAKID,\n\tRatingCoverageAKID,\n\tRunDate\n\tFROM (\n\t\tSELECT A.WorkEarnedPremiumCoverageDailyID as WorkEarnedPremiumCoverageDailyID, \r\n\t\tA.PolicyAKID as PolicyAKID, \r\n\t\tA.StatisticalCoverageAKID as StatisticalCoverageAKID, \r\n\t\tA.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tA.RunDate as RunDate\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkEarnedPremiumCoverageDaily A\r\n\t\tWHERE A.RunDate>=DATEADD(DD, -@{pipeline().parameters.NO_OF_DAYS}-1, GETDATE()) and A.RunDate<DATEADD(DD, -@{pipeline().parameters.NO_OF_DAYS}+1, GETDATE())\r\n\t\t@{pipeline().parameters.LOOKUP_WORK_CLAUSE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKID,RunDate ORDER BY WorkEarnedPremiumCoverageDailyID) = 1\n),\nLKP_ClassCode_9115 AS (\n\tSELECT\n\tClassCode,\n\tPolicyAkid,\n\tRatingCoverageAKid,\n\tStatisticalCoverageAKID\n\tFROM (\n\t\tselect  SC.ClassCode AS ClassCode,  PC.PolicyAkid AS PolicyAkid,  sc.StatisticalCoverageAKID AS StatisticalCoverageAKID,  -1 AS RatingCoverageAKid\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\t\twhere PC.InsuranceLine='WC'\r\n\t\tUNION\r\n\t\tselect RC.ClassCode as ClassCode,PC.PolicyAkid as PolicyAkid,-1 as StatisticalCoverageAKID,RC.RatingCoverageAKid as RatingCoverageAKid\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\twhere PC.InsuranceLine='WorkersCompensation'\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAkid,StatisticalCoverageAKID,RatingCoverageAKid ORDER BY ClassCode DESC) = 1\n),\nSQ_PremiumTransaction AS (\n\tDECLARE @Date1 AS DATETIME,\r\n\t        @Date2 AS DATETIME,\r\n\t        @Date3 AS INT,\r\n\t        @Date4 AS INT\r\n\t        \r\n\tset @Date1=DATEADD(DD, -@{pipeline().parameters.NO_OF_DAYS}, GETDATE())\r\n\tset @Date2=DATEADD(SS,-1,DATEADD(DD, DATEDIFF(D,0,GETDATE())-(@{pipeline().parameters.NO_OF_DAYS}-1),0))\r\n\tset @Date3=DATEPART(YEAR,DATEADD(DD, -@{pipeline().parameters.NO_OF_DAYS}, GETDATE()))\r\n\tset @Date4=DATEPART(YEAR,DATEADD(DD, -@{pipeline().parameters.NO_OF_DAYS}+365, GETDATE()))\r\n\t\r\n\tSELECT @Date1  AS eff_from_date,\r\n\tPT.PremiumTransactionAKID, \r\n\tPT.ReinsuranceCoverageAKID, \r\n\tPT.PremiumTransactionCode, \r\n\tPT.PremiumTransactionEnteredDate, \r\n\tPT.PremiumTransactionEffectiveDate, \r\n\tPT.PremiumTransactionExpirationDate, \r\n\tcase when B.ChangedCoverageExpirationDate is null then PT.PremiumTransactionExpirationDate else B.ChangedCoverageExpirationDate end ChangedCoverageExpirationDate, \r\n\tPT.PremiumTransactionBookedDate, \r\n\tPT.PremiumTransactionAmount, \r\n\tPT.FullTermPremium, \r\n\tPT.PremiumType, \r\n\tPT.ReasonAmendedCode, \r\n\tPT.RatingCoverageAKId, \r\n\tP.pol_ak_id, \r\n\tP.contract_cust_ak_id,\r\n\tP.agency_ak_id, \r\n\tP.pol_key, \r\n\tRL.RiskLocationAKID, \r\n\tPC.PolicyCoverageAKID, \r\n\tPC.TypeBureauCode,\r\n\tSC.StatisticalCoverageAKID\r\n\tFROM\r\n\t(@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT WITH(nolock)\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC WITH(nolock) \r\n\t       ON PT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC WITH(nolock) \r\n\t       ON SC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL WITH(nolock) \r\n\t       ON PC.RiskLocationAKID = RL.RiskLocationAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.V2.Policy P WITH(nolock)  \r\n\t       ON RL.PolicyAKID = P.Pol_AK_ID)\r\n\tleft outer join \r\n\t (select \r\n\tPb.pol_ak_id AS PolAKID,\r\n\tSCb.StatisticalCoverageAKID as StatCovAKID,\r\n\tMAX(PTb.PremiumTransactionExpirationDate) ChangedCoverageExpirationDate,\r\n\tPTb.PremiumType as PremiumType\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PTb WITH(nolock)\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SCb WITH(nolock) \r\n\t       ON PTb.StatisticalCoverageAKID = SCb.StatisticalCoverageAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PCb WITH(nolock) \r\n\t       ON SCb.PolicyCoverageAKID = PCb.PolicyCoverageAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RLb WITH(nolock) \r\n\t       ON PCb.RiskLocationAKID = RLb.RiskLocationAKID\r\n\t       INNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER2}.Policy Pb WITH(nolock)  \r\n\t       ON RLb.PolicyAKID = Pb.Pol_AK_ID\r\n\twhere PTb.premiumtransactionentereddate<=@Date2 and PTb.PremiumTransactionBookedDate <=@Date2\r\n\tand PTb.PremiumTransactionEffectiveDate <=@Date2\r\n\t       AND PTb.CurrentSnapshotFlag = '1' AND PTb.SourceSystemID = 'PMS'\r\n\t       AND SCb.CurrentSnapshotFlag = '1' AND SCb.SourceSystemID = 'PMS'\r\n\t       AND PCb.CurrentSnapshotFlag = '1' AND PCb.SourceSystemID = 'PMS'\r\n\t       AND RLb.CurrentSnapshotFlag = '1' AND RLb.SourceSystemID = 'PMS'\r\n\t       AND Pb.crrnt_snpsht_flag = '1' AND Pb.source_sys_id = 'PMS'\r\n\t@{pipeline().parameters.REASON_AMENDED_CODE1}\r\n\tgroup by Pb.pol_ak_id,SCb.StatisticalCoverageAKID,PTb.PremiumType\r\n\thaving SUM(FullTermPremium)=0) B\r\n\ton P.pol_ak_id=B.PolAKID\r\n\tand SC.StatisticalCoverageAKID=B.StatCovAKID\r\n\tand PT.PremiumType=B.PremiumType\r\n\tWHERE  PT.FullTermPremium <> 0.0\r\n\tAND case when PT.PremiumTransactionEnteredDate<=PT.PremiumTransactionBookedDate then PT.PremiumTransactionBookedDate else PT.PremiumTransactionEnteredDate end<=@Date2\r\n\tand convert(varchar(6),case when B.ChangedCoverageExpirationDate is null then PT.PremiumTransactionExpirationDate else B.ChangedCoverageExpirationDate end,112)>=convert(varchar(6),@Date2,112)\r\n\tAND PT.CurrentSnapshotFlag = '1' AND PT.SourceSystemID = 'PMS'\r\n\t       AND SC.SourceSystemID = 'PMS'\r\n\t       AND PC.SourceSystemID = 'PMS'\r\n\t       AND RL.SourceSystemID = 'PMS'\r\n\t       AND P.crrnt_snpsht_flag = '1' AND P.source_sys_id = 'PMS'\r\n\t@{pipeline().parameters.REASON_AMENDED_CODE2}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PMS}\r\n\tORDER BY P.pol_ak_id,RL.RiskLocationAKID,PC.PolicyCoverageAKID,SC.StatisticalCoverageAKID,\r\n\tPT.PremiumTransactionEffectiveDate,PT.PremiumTransactionEnteredDate  desc\n),\nEXP_DirectTransactions AS (\n\tSELECT\n\teff_from_date,\n\tAgencyAKID AS agency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tTypeBureauCode,\n\tStatisticalCoverageAKID1 AS StatisticalCoverageAKID,\n\tPremiumTransactionEffectiveDate AS StatisticalCoverageEffectiveDate,\n\tPremiumTransactionExpirationDate AS StatisticalCoverageExpirationDate,\n\tChangedCoverageExpirationDate,\n\tPremiumTransactionAKID,\n\tReinsuranceCoverageAKID,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\tRatingCoverageAKId,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_TIMESTAMP('21001231235959', 'YYYYMMDDHH24MISS') AS RatingCoverageEffectiveDate,\n\t-- *INF*: TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tTO_TIMESTAMP('21001231235959', 'YYYYMMDDHH24MISS') AS RatingCoverageExpirationDate,\n\t-- *INF*: Add_To_Date(eff_from_date, 'MS', -Get_Date_Part(eff_from_date, 'MS'))\r\n\t-- \r\n\t-- --eff_from_date\r\n\t-- \r\n\t-- --- This day is already set to day prior to current day in the source qualifier query.\n\tDATEADD(MS,- DATE_PART(eff_from_date, 'MS'),eff_from_date) AS V_Yesterday,\n\t-- *INF*: SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART( V_Yesterday, 'HH', 23) \r\n\t--                                           ,'MI',59)\r\n\t--                                ,'SS',59)\n\tDATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,V_Yesterday),V_Yesterday)),DATEADD(HOUR,23-DATE_PART(HOUR,V_Yesterday),V_Yesterday))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,V_Yesterday),V_Yesterday)),DATEADD(HOUR,23-DATE_PART(HOUR,V_Yesterday),V_Yesterday))) AS V_RunDate,\n\tV_RunDate AS RunDate,\n\t-- *INF*: Trunc(V_RunDate,'DAY')\n\tCAST(TRUNC(V_RunDate, 'DAY') AS TIMESTAMP_NTZ(0)) AS RunDate_Date,\n\t-- *INF*: ADD_TO_DATE(V_RunDate,'DD',-1)\n\tDATEADD(DAY,- 1,V_RunDate) AS v_DayPriorToRunDate,\n\tv_DayPriorToRunDate AS DayPriorToRunDate,\n\t-- *INF*: Trunc(v_DayPriorToRunDate,'DAY')\n\tCAST(TRUNC(v_DayPriorToRunDate, 'DAY') AS TIMESTAMP_NTZ(0)) AS DayPriorToRunDate_Date,\n\tv_DayPriorToRunDate AS PreviousMonthsRunDate,\n\t-- *INF*: SET_DATE_PART(\r\n\t--                         SET_DATE_PART(\r\n\t--                                       SET_DATE_PART(\r\n\t--                                                 SET_DATE_PART( V_Yesterday, 'DD', 1 )\r\n\t--                                            ,'HH',0),\r\n\t--                           'MI',0),\r\n\t-- 'SS',0)\r\n\t-- \r\n\t-- ---- Changing the RunDate to FirstDay of the Run Month \n\tDATEADD(SECOND,0-DATE_PART(SECOND,DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)),DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday))),DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)),DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)))),DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)),DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday))),DATEADD(HOUR,0-DATE_PART(HOUR,DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)),DATEADD(DAY,1-DATE_PART(DAY,V_Yesterday),V_Yesterday)))) AS v_FirstDayOfRunMonth,\n\tv_FirstDayOfRunMonth AS FirstDayOfRunMonth\n\tFROM SQ_PremiumTransaction\n),\nFIL_SourceRows AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tTypeBureauCode, \n\tStatisticalCoverageAKID, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tChangedCoverageExpirationDate, \n\tAgencyActualCommissionRate, \n\tPremiumTransactionAKID, \n\tReinsuranceCoverageAKID, \n\tPremiumTransactionCode, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tReasonAmendedCode, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRunDate, \n\tDayPriorToRunDate, \n\tFirstDayOfRunMonth, \n\tRunDate_Date, \n\tDayPriorToRunDate_Date\n\tFROM EXP_DirectTransactions\n\tWHERE IIF(PremiumTransactionEnteredDate <= RunDate AND PremiumTransactionBookedDate <=RunDate\r\nAND PremiumTransactionEffectiveDate <= RunDate AND ChangedCoverageExpirationDate >= DayPriorToRunDate_Date,TRUE,FALSE)\r\n\r\n--FirstDayOfRunMonth  may have to be changed to RunDate\n),\nRTR_RunDate_DayPriorRunDate AS (\n\tSELECT\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tagency_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tChangedCoverageExpirationDate,\n\tPremiumTransactionCode,\n\tPremiumTransactionEffectiveDate AS StatisticalCoverageEffectiveDate,\n\tPremiumTransactionExpirationDate AS StatisticalCoverageExpirationDate,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tRunDate,\n\tDayPriorToRunDate,\n\tFirstDayOfRunMonth,\n\tRunDate_Date,\n\tDayPriorToRunDate_Date\n\tFROM FIL_SourceRows\n),\nRTR_RunDate_DayPriorRunDate_RUNDATE AS (SELECT * FROM RTR_RunDate_DayPriorRunDate WHERE IIF(PremiumTransactionEnteredDate <= RunDate AND PremiumTransactionBookedDate <=RunDate\r\nAND PremiumTransactionEffectiveDate <= RunDate AND trunc(ChangedCoverageExpirationDate,'DAY')>= Trunc(RunDate,'DAY'),TRUE,FALSE)\r\n\r\n--FirstDayOfRunMonth  may have to be changed to RunDate),\nRTR_RunDate_DayPriorRunDate_DAYPRIORRUNDATE AS (SELECT * FROM RTR_RunDate_DayPriorRunDate WHERE IIF(PremiumTransactionEnteredDate <= DayPriorToRunDate AND PremiumTransactionBookedDate <=DayPriorToRunDate\r\nAND PremiumTransactionEffectiveDate <= DayPriorToRunDate AND trunc(ChangedCoverageExpirationDate,'DAY')>=trunc( DayPriorToRunDate,'DAY') ,TRUE,FALSE)\r\n\r\n--FirstDayOfRunMonth  may have to be changed to DayPriorToRunDate),\nEXP_GetOrderRunDate AS (\n\tSELECT\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tagency_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionCode,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tRunDate,\n\t-- *INF*: DATE_DIFF(RunDate,IIF(in(PremiumTransactionCode,'14','24'),TO_DATE('1800/01/01','YYYY/MM/DD'),greatest(PremiumTransactionEnteredDate,PremiumTransactionBookedDate)),'DD')\n\tDATEDIFF(DAY,RunDate,\n\t    IFF(\n\t        PremiumTransactionCode IN ('14','24'), TO_TIMESTAMP('1800/01/01', 'YYYY/MM/DD'),\n\t        greatest(PremiumTransactionEnteredDate, PremiumTransactionBookedDate)\n\t    )) AS LatestRecordDate,\n\t-- *INF*: IIF(PremiumTransactionCode='29',1,0)\n\tIFF(PremiumTransactionCode = '29', 1, 0) AS CancellationSubjectedToAuditFlag\n\tFROM RTR_RunDate_DayPriorRunDate_RUNDATE\n),\nSRT_GetOrderRunDate AS (\n\tSELECT\n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tagency_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionCode, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageAKId, \n\tRunDate, \n\tLatestRecordDate, \n\tCancellationSubjectedToAuditFlag\n\tFROM EXP_GetOrderRunDate\n\tORDER BY pol_ak_id ASC, contract_cust_ak_id ASC, agency_ak_id ASC, RiskLocationAKID ASC, PolicyCoverageAKID ASC, StatisticalCoverageAKID ASC, PremiumType ASC, LatestRecordDate DESC, CancellationSubjectedToAuditFlag ASC\n),\nAGG_CoverageCancellationDate_RunDate AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tPremiumTransactionCode,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\t-- *INF*: SUM(PremiumTransactionAmount)\n\tSUM(PremiumTransactionAmount) AS TotalPremiumTransactionAmount,\n\t-- *INF*: SUM(FullTermPremium)\n\tSUM(FullTermPremium) AS TotalFullTermPremium,\n\t-- *INF*: MAX(PremiumTransactionAmount)\n\tMAX(PremiumTransactionAmount) AS Max_Premium,\n\t-- *INF*: MIN(ABS(PremiumTransactionAmount))\n\tMIN(ABS(PremiumTransactionAmount)) AS Min_Premium,\n\t-- *INF*: MAX(PremiumTransactionEffectiveDate)\n\tMAX(PremiumTransactionEffectiveDate) AS StatisticalCoverageCancellationDate,\n\tRunDate,\n\tLatestRecordDate,\n\t-- *INF*: Min(LatestRecordDate)\n\tMin(LatestRecordDate) AS CurrentDateFalg,\n\tCancellationSubjectedToAuditFlag\n\tFROM SRT_GetOrderRunDate\n\tGROUP BY agency_ak_id, pol_ak_id, contract_cust_ak_id, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, PremiumType\n),\nEXP_Values_RunDate AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tTotalPremiumTransactionAmount,\n\tTotalFullTermPremium,\n\tStatisticalCoverageCancellationDate,\n\t-- *INF*: IIF(TotalFullTermPremium = 0.0 , StatisticalCoverageCancellationDate, TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS'))\n\tIFF(\n\t    TotalFullTermPremium = 0.0, StatisticalCoverageCancellationDate,\n\t    TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t) AS v_StatisticalCoverageCancellationDate,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(pol_ak_id,StatisticalCoverageAKID,RatingCoverageAKId,RunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.WorkEarnedPremiumCoverageDailyID AS v_WorkEarnedPremiumCoverageDailyID,\n\tv_StatisticalCoverageCancellationDate AS StatisticalCoverageCancellationDate_Out,\n\t-- *INF*: IIF(v_StatisticalCoverageCancellationDate = TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') OR NOT ISNULL(v_WorkEarnedPremiumCoverageDailyID),'FILTER','NOFILTER')\n\tIFF(\n\t    v_StatisticalCoverageCancellationDate = TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t    or v_WorkEarnedPremiumCoverageDailyID IS NOT NULL,\n\t    'FILTER',\n\t    'NOFILTER'\n\t) AS Flag,\n\tRunDate,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tMax_Premium,\n\tMin_Premium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(pol_ak_id,StatisticalCoverageAKID,-1)\n\tLKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,iif(LKP_ClassCode='9115',1.00,IIF(LatestRecordDate=CurrentDateFalg and CancellationSubjectedToAuditFlag='1',0.0,1.00)))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(isnull(LKP_ClassCode),1.00,iif(LKP_ClassCode='9115',1.00,Min_Premium))   \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIF(ISNULL(:LKP.LKP_POOL_POLICIES(pol_ak_id)) or (not isnull(:LKP.LKP_CLASSCODE_9115(StatisticalCoverageAKID))),1.00,Min_Premium)\n\tIFF(\n\t    LKP_ClassCode IS NULL, 1.00,\n\t    IFF(\n\t        LKP_ClassCode = '9115', 1.00,\n\t        IFF(\n\t            LatestRecordDate = CurrentDateFalg\n\t        and CancellationSubjectedToAuditFlag = '1',\n\t            0.0,\n\t            1.00\n\t        )\n\t    )\n\t) AS O_Min_Premium,\n\t-- *INF*: DATE_DIFF(\r\n\t-- v_StatisticalCoverageCancellationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \r\n\t-- \n\tDATEDIFF(DAY,v_StatisticalCoverageCancellationDate,PremiumTransactionEffectiveDate) AS v_Numerator,\n\t-- *INF*: DATE_DIFF(\r\n\t-- PremiumTransactionExpirationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \n\tDATEDIFF(DAY,PremiumTransactionExpirationDate,PremiumTransactionEffectiveDate) AS v_Denominator,\n\t-- *INF*: IIF((v_Numerator  = 0 AND v_Denominator = 0)  OR v_Denominator =  0, TotalPremiumTransactionAmount,\r\n\t-- ROUND(TotalPremiumTransactionAmount * (v_Numerator/v_Denominator),4)\r\n\t-- )\n\tIFF(\n\t    (v_Numerator = 0 AND v_Denominator = 0) OR v_Denominator = 0, TotalPremiumTransactionAmount,\n\t    ROUND(TotalPremiumTransactionAmount * (v_Numerator / v_Denominator), 4)\n\t) AS v_Earned_Premium,\n\tv_Earned_Premium AS Earned_Premium,\n\tPremiumType,\n\tLatestRecordDate,\n\tCurrentDateFalg,\n\tCancellationSubjectedToAuditFlag\n\tFROM AGG_CoverageCancellationDate_RunDate\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.PolicyAKID = pol_ak_id\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RunDate = RunDate\n\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1\n\tON LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.PolicyAkid = pol_ak_id\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.RatingCoverageAKid = - 1\n\n),\nFIL_Active_RunDate AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tTotalPremiumTransactionAmount, \n\tTotalFullTermPremium, \n\tStatisticalCoverageCancellationDate_Out AS StatisticalCoverageCancellationDate, \n\tFlag, \n\tRunDate, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tSourceSystemID, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tO_Min_Premium AS Min_Premium, \n\tPremiumType\n\tFROM EXP_Values_RunDate\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageDaily_RunDate AS (\n\tINSERT INTO WorkEarnedPremiumCoverageDaily\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tCreatedDate AS MODIFIEDDATE, \n\tpol_key AS POLICYKEY, \n\tagency_ak_id AS AGENCYAKID, \n\tcontract_cust_ak_id AS CONTRACTCUSTOMERAKID, \n\tpol_ak_id AS POLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tTotalPremiumTransactionAmount AS STATISTICALCOVERAGEPREMIUM, \n\tTotalFullTermPremium AS STATISTICALCOVERAGEFULLTERMPREMIUM, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMin_Premium AS MINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active_RunDate\n),\nEXP_GetOrderDayPriorDate AS (\n\tSELECT\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tagency_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionCode,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tDayPriorToRunDate,\n\t-- *INF*: DATE_DIFF(DayPriorToRunDate,IIF(in(PremiumTransactionCode,'14','24'),TO_DATE('1800/01/01','YYYY/MM/DD'),greatest(PremiumTransactionEnteredDate,PremiumTransactionBookedDate)),'DD')\n\tDATEDIFF(DAY,DayPriorToRunDate,\n\t    IFF(\n\t        PremiumTransactionCode IN ('14','24'), TO_TIMESTAMP('1800/01/01', 'YYYY/MM/DD'),\n\t        greatest(PremiumTransactionEnteredDate, PremiumTransactionBookedDate)\n\t    )) AS LatestRecordDate,\n\t-- *INF*: IIF(PremiumTransactionCode='29',1,0)\n\tIFF(PremiumTransactionCode = '29', 1, 0) AS CancellationSubjectedToAuditFlag\n\tFROM RTR_RunDate_DayPriorRunDate_DAYPRIORRUNDATE\n),\nSRT_SortOrderDayPriorDate AS (\n\tSELECT\n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tagency_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionCode, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionBookedDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageAKId, \n\tDayPriorToRunDate, \n\tLatestRecordDate, \n\tCancellationSubjectedToAuditFlag\n\tFROM EXP_GetOrderDayPriorDate\n\tORDER BY pol_ak_id ASC, contract_cust_ak_id ASC, agency_ak_id ASC, RiskLocationAKID ASC, PolicyCoverageAKID ASC, StatisticalCoverageAKID ASC, PremiumType ASC, LatestRecordDate DESC, CancellationSubjectedToAuditFlag ASC\n),\nAGG_CoverageCancellationDate_DayPriorRunDate AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\t-- *INF*: SUM(PremiumTransactionAmount)\n\tSUM(PremiumTransactionAmount) AS TotalPremiumTransactionAmount,\n\t-- *INF*: SUM(FullTermPremium)\n\tSUM(FullTermPremium) AS TotalFullTermPremium,\n\t-- *INF*: MAX(PremiumTransactionAmount)\n\tMAX(PremiumTransactionAmount) AS Max_Premium,\n\t-- *INF*: MIN(ABS(PremiumTransactionAmount))\n\tMIN(ABS(PremiumTransactionAmount)) AS Min_Premium,\n\t-- *INF*: MAX(PremiumTransactionEffectiveDate)\n\tMAX(PremiumTransactionEffectiveDate) AS StatisticalCoverageCancellationDate,\n\tDayPriorToRunDate,\n\tLatestRecordDate,\n\t-- *INF*: Min(LatestRecordDate)\n\tMin(LatestRecordDate) AS CurrentDateFlag,\n\tCancellationSubjectedToAuditFlag\n\tFROM SRT_SortOrderDayPriorDate\n\tGROUP BY agency_ak_id, pol_ak_id, contract_cust_ak_id, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, PremiumType\n),\nEXP_Values_DayPriorRunDate AS (\n\tSELECT\n\tagency_ak_id,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageEffectiveDate,\n\tStatisticalCoverageExpirationDate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tTotalPremiumTransactionAmount,\n\tTotalFullTermPremium,\n\tStatisticalCoverageCancellationDate,\n\t-- *INF*: IIF(TotalFullTermPremium = 0.0 , StatisticalCoverageCancellationDate, TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS'))\n\tIFF(\n\t    TotalFullTermPremium = 0.0, StatisticalCoverageCancellationDate,\n\t    TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t) AS v_StatisticalCoverageCancellationDate,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(pol_ak_id,StatisticalCoverageAKID,RatingCoverageAKId,DayPriorToRunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate.WorkEarnedPremiumCoverageDailyID AS v_WorkEarnedPremiumCoverageDailyID,\n\tv_StatisticalCoverageCancellationDate AS StatisticalCoverageCancellationDate_Out,\n\t-- *INF*: IIF(v_StatisticalCoverageCancellationDate = TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') AND NOT(ISNULL(v_WorkEarnedPremiumCoverageDailyID)),'FILTER','NOFILTER')\n\tIFF(\n\t    v_StatisticalCoverageCancellationDate = TO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\t    and NOT (v_WorkEarnedPremiumCoverageDailyID IS NULL),\n\t    'FILTER',\n\t    'NOFILTER'\n\t) AS Flag,\n\tDayPriorToRunDate,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tMax_Premium,\n\tMin_Premium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(pol_ak_id,StatisticalCoverageAKID,-1)\n\tLKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,iif(LKP_ClassCode='9115',1.00,IIF(LatestRecordDate=CurrentDateFlag and CancellationSubjectedToAuditFlag='1',0.0,1.00)))\r\n\t-- \r\n\t-- --IIF(isnull(LKP_ClassCode),1.00,iif(LKP_ClassCode='9115',1.00,Min_Premium))   \r\n\t-- \r\n\t-- --IIF(ISNULL(:LKP.LKP_POOL_POLICIES(pol_ak_id)) or (not isnull(:LKP.LKP_CLASSCODE_9115(StatisticalCoverageAKID))),1.00,Min_Premium)\n\tIFF(\n\t    LKP_ClassCode IS NULL, 1.00,\n\t    IFF(\n\t        LKP_ClassCode = '9115', 1.00,\n\t        IFF(\n\t            LatestRecordDate = CurrentDateFlag\n\t        and CancellationSubjectedToAuditFlag = '1',\n\t            0.0,\n\t            1.00\n\t        )\n\t    )\n\t) AS O_Min_Premium,\n\t-- *INF*: DATE_DIFF(\r\n\t-- v_StatisticalCoverageCancellationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \r\n\t-- \n\tDATEDIFF(DAY,v_StatisticalCoverageCancellationDate,PremiumTransactionEffectiveDate) AS v_Numerator,\n\t-- *INF*: DATE_DIFF(\r\n\t-- PremiumTransactionExpirationDate,\r\n\t--                             PremiumTransactionEffectiveDate,'DAY')\r\n\t-- \n\tDATEDIFF(DAY,PremiumTransactionExpirationDate,PremiumTransactionEffectiveDate) AS v_Denominator,\n\t-- *INF*: IIF((v_Numerator  = 0 AND v_Denominator = 0)  OR v_Denominator =  0, TotalPremiumTransactionAmount,\r\n\t-- ROUND(TotalPremiumTransactionAmount * (v_Numerator/v_Denominator),4)\r\n\t-- )\n\tIFF(\n\t    (v_Numerator = 0 AND v_Denominator = 0) OR v_Denominator = 0, TotalPremiumTransactionAmount,\n\t    ROUND(TotalPremiumTransactionAmount * (v_Numerator / v_Denominator), 4)\n\t) AS v_Earned_Premium,\n\tv_Earned_Premium AS Earned_Premium,\n\tPremiumType,\n\tLatestRecordDate,\n\tCurrentDateFlag,\n\tCancellationSubjectedToAuditFlag\n\tFROM AGG_CoverageCancellationDate_DayPriorRunDate\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate.PolicyAKID = pol_ak_id\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_pol_ak_id_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorToRunDate.RunDate = DayPriorToRunDate\n\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1\n\tON LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.PolicyAkid = pol_ak_id\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_CLASSCODE_9115_pol_ak_id_StatisticalCoverageAKID_1.RatingCoverageAKid = - 1\n\n),\nFIL_Active_DayPriorRunDate AS (\n\tSELECT\n\tagency_ak_id, \n\tpol_ak_id, \n\tcontract_cust_ak_id, \n\tpol_key, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tStatisticalCoverageEffectiveDate, \n\tStatisticalCoverageExpirationDate, \n\tTotalPremiumTransactionAmount, \n\tTotalFullTermPremium, \n\tStatisticalCoverageCancellationDate_Out AS StatisticalCoverageCancellationDate, \n\tFlag, \n\tDayPriorToRunDate, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tSourceSystemID, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tO_Min_Premium AS Min_Premium, \n\tPremiumType\n\tFROM EXP_Values_DayPriorRunDate\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageDaily_DayPriorRunDate AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkEarnedPremiumCoverageDaily\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tCreatedDate AS MODIFIEDDATE, \n\tpol_key AS POLICYKEY, \n\tagency_ak_id AS AGENCYAKID, \n\tcontract_cust_ak_id AS CONTRACTCUSTOMERAKID, \n\tpol_ak_id AS POLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tTotalPremiumTransactionAmount AS STATISTICALCOVERAGEPREMIUM, \n\tTotalFullTermPremium AS STATISTICALCOVERAGEFULLTERMPREMIUM, \n\tDayPriorToRunDate AS RUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMin_Premium AS MINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active_DayPriorRunDate\n),\nSQ_PremiumTransaction_DCT AS (\n\tDECLARE @PrevDay AS DATETIME,\r\n\t@DayBeforePrevDay AS DATETIME\r\n\t\r\n\tset @PrevDay=DATEADD(SS,-1,DATEADD(DD, DATEDIFF(D,0,GETDATE())-(@{pipeline().parameters.NO_OF_DAYS}-1),0))\r\n\tset @DayBeforePrevDay=DATEADD(D,-1,@PrevDay)\r\n\t\r\n\tSELECT @PrevDay AS RunDate,\r\n\t@DayBeforePrevDay AS DayPriorToRunDate,\r\n\tPT.PremiumTransactionEnteredDate, \r\n\tPT.PremiumTransactionEffectiveDate, \r\n\tPT.PremiumTransactionExpirationDate, \r\n\tPT.PremiumTransactionBookedDate, \r\n\tPT.PremiumTransactionAmount, \r\n\tPT.FullTermPremium, \r\n\tPT.PremiumType,\r\n\tPT.RatingCoverageAKId, \r\n\tP.pol_ak_id, \r\n\tP.contract_cust_ak_id,\r\n\tP.agency_ak_id as AgencyAKID, \r\n\tP.pol_key, \r\n\tRL.RiskLocationAKID, \r\n\tPC.PolicyCoverageAKID, \r\n\t-1 as StatisticalCoverageAKID,\r\n\tRC.RatingCoverageEffectiveDate,\r\n\tRC.RatingCoverageExpirationDate,\r\n\tRC.RatingCoverageCancellationDate\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT WITH(nolock)\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC WITH(nolock) \r\n\tON PT.RatingCoverageAKID = RC.RatingCoverageAKID\r\n\tAND PT.EffectiveDate=RC.EffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC WITH(nolock) \r\n\tON PC.PolicyCoverageAKId=RC.PolicyCoverageAKId\r\n\tAND PC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL WITH(nolock) \r\n\tON RL.RiskLocationAKId=PC.RiskLocationAKId\r\n\tAND RL.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER2}.policy P WITH(nolock) \r\n\tON P.pol_ak_id=RL.PolicyAKId\r\n\tAND P.crrnt_snpsht_flag=1\r\n\tWHERE  PT.CurrentSnapshotFlag = '1' AND PT.SourceSystemID = 'DCT'\r\n\tAND PT.PremiumTransactionEnteredDate <= @PrevDay \r\n\tAND PT.PremiumTransactionBookedDate <=@PrevDay \r\n\tAND PT.PremiumTransactionEffectiveDate <= @PrevDay \r\n\tAND cast(PT.PremiumTransactionExpirationDate as date) >= Cast(@DayBeforePrevDay as Date)\r\n\tAND PT.ReasonAmendedCode not in ('CWO','Claw back')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_DCT}\n),\nEXP_Src_DataCollect_DCT AS (\n\tSELECT\n\tRunDate,\n\t-- *INF*: Trunc(RunDate,'DAY')\n\tCAST(TRUNC(RunDate, 'DAY') AS TIMESTAMP_NTZ(0)) AS RunDate_Date,\n\tDayPriorToRunDate,\n\t-- *INF*: Trunc(DayPriorToRunDate,'DAY')\n\tCAST(TRUNC(DayPriorToRunDate, 'DAY') AS TIMESTAMP_NTZ(0)) AS DayPriorToRunDate_Date,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tAgencyAKID,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate\n\tFROM SQ_PremiumTransaction_DCT\n),\nRTR_RunDate_DayPriorRunDate_DCT AS (\n\tSELECT\n\tpol_ak_id,\n\tcontract_cust_ak_id,\n\tAgencyAKID AS agency_ak_id,\n\tpol_key,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\tRatingCoverageAKId,\n\tRunDate,\n\tDayPriorToRunDate,\n\tRunDate_Date,\n\tDayPriorToRunDate_Date\n\tFROM EXP_Src_DataCollect_DCT\n),\nRTR_RunDate_DayPriorRunDate_DCT_RUNDATE AS (SELECT * FROM RTR_RunDate_DayPriorRunDate_DCT WHERE PremiumTransactionEnteredDate <= RunDate AND PremiumTransactionBookedDate<= RunDate \r\nAND PremiumTransactionEffectiveDate <= RunDate AND Trunc(PremiumTransactionExpirationDate,'DAY')>= Trunc(RunDate,'DAY')),\nRTR_RunDate_DayPriorRunDate_DCT_DAYPRIORRUNDATE AS (SELECT * FROM RTR_RunDate_DayPriorRunDate_DCT WHERE PremiumTransactionEnteredDate <= DayPriorToRunDate and PremiumTransactionBookedDate<= DayPriorToRunDate \r\nAND PremiumTransactionEffectiveDate <= DayPriorToRunDate AND trunc(PremiumTransactionExpirationDate,'DAY')>= Trunc(DayPriorToRunDate,'DAY')),\nSRT_DayPriorRunDate AS (\n\tSELECT\n\tDayPriorToRunDate AS DayPriorRunDate, \n\tpol_key AS PolicyKey, \n\tagency_ak_id AS AgencyAKID, \n\tcontract_cust_ak_id AS ContractCustomerAKID, \n\tpol_ak_id AS PolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tRatingCoverageAKId, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate\n\tFROM RTR_RunDate_DayPriorRunDate_DCT_DAYPRIORRUNDATE\n\tORDER BY PolicyAKID ASC, RatingCoverageAKId ASC, PremiumTransactionEffectiveDate ASC, PremiumTransactionEnteredDate ASC\n),\nAGG_CoverageCancellationDate_DayPriorRunDateDCT AS (\n\tSELECT\n\tDayPriorRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\t-- *INF*: Min(abs(PremiumTransactionAmount))\n\tMin(abs(PremiumTransactionAmount)) AS MinimumPremium\n\tFROM SRT_DayPriorRunDate\n\tGROUP BY PolicyAKID, PremiumType, RatingCoverageAKId\n),\nFIL_NonCancellations_DayPriorRunDate AS (\n\tSELECT\n\tDayPriorRunDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate, \n\tMinimumPremium\n\tFROM AGG_CoverageCancellationDate_DayPriorRunDateDCT\n\tWHERE RatingCoverageCancellationDate<TO_DATE('21001231','YYYYMMDD')\n),\nEXP_Values_DayPriorRunDateDCT AS (\n\tSELECT\n\tDayPriorRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\tMinimumPremium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(PolicyAKID,-1,RatingCoverageAKId)\n\tLKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,MinimumPremium)\n\tIFF(LKP_ClassCode IS NULL, 1.00, MinimumPremium) AS O_MinimumPremium,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId,DayPriorRunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate.WorkEarnedPremiumCoverageDailyID AS v_WorkEarnedPremiumCoverageDailyID,\n\t-- *INF*: IIF(NOT ISNULL(v_WorkEarnedPremiumCoverageDailyID),'FILTER','NOFILTER')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --should use RatingCoverageCancellationDate\n\tIFF(v_WorkEarnedPremiumCoverageDailyID IS NOT NULL, 'FILTER', 'NOFILTER') AS Flag,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t'DCT' AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM FIL_NonCancellations_DayPriorRunDate\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId\n\tON LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.PolicyAkid = PolicyAKID\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.StatisticalCoverageAKID = - 1\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.RatingCoverageAKid = RatingCoverageAKId\n\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate.PolicyAKID = PolicyAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_DayPriorRunDate.RunDate = DayPriorRunDate\n\n),\nFIL_Active_DayPriorRunDateDCT AS (\n\tSELECT\n\tFlag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionEffectiveDate AS StatisticalCoverageEffectiveDate, \n\tPremiumTransactionExpirationDate AS StatisticalCoverageExpirationDate, \n\tRatingCoverageCancellationDate AS StatisticalCoverageCancellationDate, \n\tPremiumTransactionAmount AS StatisticalCoveragePremium, \n\tFullTermPremium AS StatisticalCoverageFullTermPremium, \n\tDayPriorRunDate AS RunDate, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tO_MinimumPremium AS MinimumPremium, \n\tPremiumType\n\tFROM EXP_Values_DayPriorRunDateDCT\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageDaily_DayPriorRunDateDCT AS (\n\tINSERT INTO WorkEarnedPremiumCoverageDaily\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\tAGENCYAKID, \n\tCONTRACTCUSTOMERAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tSTATISTICALCOVERAGEPREMIUM, \n\tSTATISTICALCOVERAGEFULLTERMPREMIUM, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active_DayPriorRunDateDCT\n),\nSRT_RunDate AS (\n\tSELECT\n\tRunDate, \n\tpol_key AS PolicyKey, \n\tagency_ak_id AS AgencyAKID, \n\tcontract_cust_ak_id AS ContractCustomerAKID, \n\tpol_ak_id AS PolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tRatingCoverageAKId, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionEnteredDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate\n\tFROM RTR_RunDate_DayPriorRunDate_DCT_RUNDATE\n\tORDER BY PolicyAKID ASC, RatingCoverageAKId ASC, PremiumTransactionEffectiveDate ASC, PremiumTransactionEnteredDate ASC\n),\nAGG_CoverageCancellationDate_RunDateDCT AS (\n\tSELECT\n\tRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\t-- *INF*: Min(abs(PremiumTransactionAmount))\n\tMin(abs(PremiumTransactionAmount)) AS MinimumPremium\n\tFROM SRT_RunDate\n\tGROUP BY PolicyAKID, PremiumType, RatingCoverageAKId\n),\nFIL_NonCancellations_RunDate AS (\n\tSELECT\n\tRunDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionEffectiveDate, \n\tPremiumTransactionExpirationDate, \n\tPremiumTransactionAmount, \n\tFullTermPremium, \n\tPremiumType, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tRatingCoverageCancellationDate, \n\tMinimumPremium\n\tFROM AGG_CoverageCancellationDate_RunDateDCT\n\tWHERE RatingCoverageCancellationDate<TO_DATE('21001231','YYYYMMDD')\n),\nEXP_Values_RunDateDCT AS (\n\tSELECT\n\tRunDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tRiskLocationAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tRatingCoverageCancellationDate,\n\tMinimumPremium,\n\t-- *INF*: :LKP.LKP_CLASSCODE_9115(PolicyAKID,-1,RatingCoverageAKId)\n\tLKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.ClassCode AS LKP_ClassCode,\n\t-- *INF*: IIF(isnull(LKP_ClassCode),1.00,MinimumPremium)\n\tIFF(LKP_ClassCode IS NULL, 1.00, MinimumPremium) AS O_MinimumPremium,\n\t-- *INF*: :LKP.LKP_WORKEARNEDPREMIUMCOVERAGE(PolicyAKID,StatisticalCoverageAKID,RatingCoverageAKId,RunDate)\n\tLKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.WorkEarnedPremiumCoverageDailyID AS v_WorkEarnedPremiumCoverageDailyID,\n\t-- *INF*: IIF(NOT ISNULL(v_WorkEarnedPremiumCoverageDailyID),'FILTER','NOFILTER')\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --should use RatingCoverageCancellationDate\n\tIFF(v_WorkEarnedPremiumCoverageDailyID IS NOT NULL, 'FILTER', 'NOFILTER') AS Flag,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t'DCT' AS SourceSystemID,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate\n\tFROM FIL_NonCancellations_RunDate\n\tLEFT JOIN LKP_CLASSCODE_9115 LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId\n\tON LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.PolicyAkid = PolicyAKID\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.StatisticalCoverageAKID = - 1\n\tAND LKP_CLASSCODE_9115_PolicyAKID_1_RatingCoverageAKId.RatingCoverageAKid = RatingCoverageAKId\n\n\tLEFT JOIN LKP_WORKEARNEDPREMIUMCOVERAGE LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate\n\tON LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.PolicyAKID = PolicyAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.StatisticalCoverageAKID = StatisticalCoverageAKID\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RatingCoverageAKID = RatingCoverageAKId\n\tAND LKP_WORKEARNEDPREMIUMCOVERAGE_PolicyAKID_StatisticalCoverageAKID_RatingCoverageAKId_RunDate.RunDate = RunDate\n\n),\nFIL_Active_RunDateDCT AS (\n\tSELECT\n\tFlag, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreatedDate, \n\tModifiedDate, \n\tPolicyKey, \n\tAgencyAKID, \n\tContractCustomerAKID, \n\tPolicyAKID, \n\tRiskLocationAKID, \n\tPolicyCoverageAKID, \n\tStatisticalCoverageAKID, \n\tPremiumTransactionEffectiveDate AS StatisticalCoverageEffectiveDate, \n\tPremiumTransactionExpirationDate AS StatisticalCoverageExpirationDate, \n\tRatingCoverageCancellationDate AS StatisticalCoverageCancellationDate, \n\tPremiumTransactionAmount AS StatisticalCoveragePremium, \n\tFullTermPremium AS StatisticalCoverageFullTermPremium, \n\tRunDate, \n\tRatingCoverageAKId, \n\tRatingCoverageEffectiveDate, \n\tRatingCoverageExpirationDate, \n\tO_MinimumPremium AS MinimumPremium, \n\tPremiumType\n\tFROM EXP_Values_RunDateDCT\n\tWHERE Flag='NOFILTER'\n),\nWorkEarnedPremiumCoverageDaily_RunDateDCT AS (\n\tINSERT INTO WorkEarnedPremiumCoverageDaily\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, PolicyKey, AgencyAKID, ContractCustomerAKID, PolicyAKID, RiskLocationAKID, PolicyCoverageAKID, StatisticalCoverageAKID, StatisticalCoverageEffectiveDate, StatisticalCoverageExpirationDate, StatisticalCoverageCancellationDate, StatisticalCoveragePremium, StatisticalCoverageFullTermPremium, RunDate, RatingCoverageAKId, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, MinimumPremium, PremiumType)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\tAGENCYAKID, \n\tCONTRACTCUSTOMERAKID, \n\tPOLICYAKID, \n\tRISKLOCATIONAKID, \n\tPOLICYCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tSTATISTICALCOVERAGEEFFECTIVEDATE, \n\tSTATISTICALCOVERAGEEXPIRATIONDATE, \n\tSTATISTICALCOVERAGECANCELLATIONDATE, \n\tSTATISTICALCOVERAGEPREMIUM, \n\tSTATISTICALCOVERAGEFULLTERMPREMIUM, \n\tRUNDATE, \n\tRATINGCOVERAGEAKID, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tMINIMUMPREMIUM, \n\tPREMIUMTYPE\n\tFROM FIL_Active_RunDateDCT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_DAYS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LOOKUP_WORK_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "REASON_AMENDED_CODE1": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "REASON_AMENDED_CODE2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_PMS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataWarehouse/"
        },
        "annotations": []
    }
}