{
    "name": "s_m_POL_DW_Update_PremiumTransaction_ExpMod_Offset_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_Update_PremiumTransaction_ExpMod_Offset_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction_Offset AS (\n\tSELECT ptToUpdate.PremiumTransactionID,\r\n\t\tptToUpdate.ExperienceModificationFactor,\r\n\t\tptToUpdate.ExperienceModificationEffectiveDate,\r\n\t\tptAttrValues.ExperienceModificationFactor,\r\n\t\tptAttrValues.ExperienceModificationEffectiveDate\r\n\tFROM WorkPremiumTransactionOffsetLineage wptol\r\n\tINNER JOIN PremiumTransaction ptToUpdate ON wptol.PremiumTransactionID = ptToUpdate.PremiumTransactionID\r\n\t\tAND ptToUpdate.OffsetOnsetCode = 'Offset'\r\n\t\tAND ptToUpdate.auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tINNER JOIN PremiumTransaction ptAttrValues ON wptol.PreviousPremiumTransactionID = ptAttrValues.PremiumTransactionID\r\n\tINNER JOIN RatingCoverage RC ON RC.RatingCoverageAKID = ptToUpdate.RatingCoverageAKID\r\n\t\tAND RC.EffectiveDate = ptToUpdate.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\tAND PC.TypeBureauCode IN ('WC', 'WP', 'WorkersCompensation')\r\n\tWHERE wptol.UpdateAttributeFlag = 1 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_offset_PTUpdate_attributes AS (\n\tSELECT\n\tptToUpdate_PremiumTransactionID AS PremiumTransactionID,\n\tptToUpdate_ExperienceModificationFactor,\n\tptToUpdate_ExperienceModificationEffectiveDate,\n\tptAttrValues_ExperienceModificationFactor,\n\tptAttrValues_ExperienceModificationEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \t(ptToUpdate_ExperienceModificationFactor != ptAttrValues_ExperienceModificationFactor or\r\n\t-- \tptToUpdate_ExperienceModificationEffectiveDate != ptAttrValues_ExperienceModificationEffectiveDate),\r\n\t-- \t\t'UPD',\r\n\t-- \t'NOCHANGE')\n\tDECODE(\n\t    TRUE,\n\t    (ptToUpdate_ExperienceModificationFactor != ptAttrValues_ExperienceModificationFactor or ptToUpdate_ExperienceModificationEffectiveDate != ptAttrValues_ExperienceModificationEffectiveDate), 'UPD',\n\t    'NOCHANGE'\n\t) AS v_PTUpdateFlag,\n\tv_PTUpdateFlag AS PTUpdateFlag\n\tFROM SQ_PremiumTransaction_Offset\n),\nFLT_UpdateRecords AS (\n\tSELECT\n\tPremiumTransactionID, \n\tptAttrValues_ExperienceModificationFactor AS ExperienceModificationFactor, \n\tptAttrValues_ExperienceModificationEffectiveDate AS ExperienceModificationEffectiveDate, \n\tPTUpdateFlag\n\tFROM EXP_offset_PTUpdate_attributes\n\tWHERE PTUpdateFlag='UPD'\n),\nUPD_PremiumTransaction AS (\n\tSELECT\n\tPremiumTransactionID, \n\tExperienceModificationFactor, \n\tExperienceModificationEffectiveDate\n\tFROM FLT_UpdateRecords\n),\nPremiumTransaction_upd AS (\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_PremiumTransaction AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ExperienceModificationFactor = S.ExperienceModificationFactor, T.ExperienceModificationEffectiveDate = S.ExperienceModificationEffectiveDate\n),\nSQ_PremiumTransaction_Deprecated AS (\n\tSELECT ptToUpdate.PremiumTransactionID,\r\n\t\tptToUpdate.ExperienceModificationFactor,\r\n\t\tptToUpdate.ExperienceModificationEffectiveDate,\r\n\t\tptAttrValues.ExperienceModificationFactor,\r\n\t\tptAttrValues.ExperienceModificationEffectiveDate\r\n\tFROM WorkPremiumTransactionOffsetLineage wptol\r\n\tINNER JOIN PremiumTransaction ptToUpdate ON wptol.PremiumTransactionID = ptToUpdate.PremiumTransactionID\r\n\t\tAND ptToUpdate.OffsetOnsetCode = 'Deprecated'\r\n\t\tAND ptToUpdate.auditid = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tINNER JOIN PremiumTransaction ptAttrValues ON wptol.PreviousPremiumTransactionID = ptAttrValues.PremiumTransactionID\r\n\tINNER JOIN RatingCoverage RC ON RC.RatingCoverageAKID = ptToUpdate.RatingCoverageAKID\r\n\t\tAND RC.EffectiveDate = ptToUpdate.EffectiveDate\r\n\tINNER JOIN PolicyCoverage PC ON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID\r\n\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\tAND PC.TypeBureauCode IN ('WorkersCompensation')\r\n\tWHERE wptol.UpdateAttributeFlag = 1 \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Deprecated_PTUpdate_attributes AS (\n\tSELECT\n\tptToUpdate_PremiumTransactionID AS PremiumTransactionID,\n\tptToUpdate_ExperienceModificationFactor,\n\tptToUpdate_ExperienceModificationEffectiveDate,\n\tptAttrValues_ExperienceModificationFactor,\n\tptAttrValues_ExperienceModificationEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \t(ptToUpdate_ExperienceModificationFactor != ptAttrValues_ExperienceModificationFactor or\r\n\t-- \tptToUpdate_ExperienceModificationEffectiveDate != ptAttrValues_ExperienceModificationEffectiveDate),\r\n\t-- \t\t'UPD',\r\n\t-- \t'NOCHANGE')\n\tDECODE(\n\t    TRUE,\n\t    (ptToUpdate_ExperienceModificationFactor != ptAttrValues_ExperienceModificationFactor or ptToUpdate_ExperienceModificationEffectiveDate != ptAttrValues_ExperienceModificationEffectiveDate), 'UPD',\n\t    'NOCHANGE'\n\t) AS v_PTUpdateFlag,\n\tv_PTUpdateFlag AS PTUpdateFlag\n\tFROM SQ_PremiumTransaction_Deprecated\n),\nFLT_UpdateRecords_Deprecated AS (\n\tSELECT\n\tPremiumTransactionID, \n\tptAttrValues_ExperienceModificationFactor AS ExperienceModificationFactor, \n\tptAttrValues_ExperienceModificationEffectiveDate AS ExperienceModificationEffectiveDate, \n\tPTUpdateFlag\n\tFROM EXP_Deprecated_PTUpdate_attributes\n\tWHERE PTUpdateFlag='UPD'\n),\nUPD_PremiumTransaction_Deprecated AS (\n\tSELECT\n\tPremiumTransactionID, \n\tExperienceModificationFactor, \n\tExperienceModificationEffectiveDate\n\tFROM FLT_UpdateRecords_Deprecated\n),\nPremiumTransaction_upd_Deprecated AS (\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_PremiumTransaction_Deprecated AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ExperienceModificationFactor = S.ExperienceModificationFactor, T.ExperienceModificationEffectiveDate = S.ExperienceModificationEffectiveDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}