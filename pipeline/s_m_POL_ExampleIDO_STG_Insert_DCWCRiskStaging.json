{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCWCRiskStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCWCRiskStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_WC_Risk AS (\n\tWITH cte_DCWCRisk(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.LineId, \r\n\tX.WC_LocationId, \r\n\tX.WC_RiskId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.TermType, \r\n\tX.Description, \r\n\tX.EffectiveDate, \r\n\tX.Exposure, \r\n\tX.ExposureAudited, \r\n\tX.ExposureBasis, \r\n\tX.ExposureEstimated, \r\n\tX.FirePopulation, \r\n\tX.NumberOfActiveVolunteers, \r\n\tX.NumberOfSalariedFiremen, \r\n\tX.RiskAircraftIndicator, \r\n\tX.TermExposureBasis, \r\n\tX.NCCIDescription, \r\n\tX.WC_LocationXmlId \r\n\tFROM\r\n\tDC_WC_Risk X\r\n\tinner join\r\n\tcte_DCWCRisk Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tLineId,\n\tWC_LocationId,\n\tWC_RiskId,\n\tSessionId,\n\tId,\n\tTermType,\n\tDescription,\n\tEffectiveDate,\n\tExposure,\n\tExposureAudited,\n\tExposureBasis,\n\tExposureEstimated,\n\tFirePopulation,\n\tNumberOfActiveVolunteers,\n\tNumberOfSalariedFiremen,\n\tRiskAircraftIndicator AS i_RiskAircraftIndicator,\n\t-- *INF*: DECODE(i_RiskAircraftIndicator,'T',1,'F',0,NULL)\n\tDECODE(\n\t    i_RiskAircraftIndicator,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_RiskAircraftIndicator,\n\tTermExposureBasis,\n\tNCCIDescription,\n\tWC_LocationXmlId,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_WC_Risk\n),\nDCWCRiskStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCWCRiskStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCWCRiskStaging\n\t(LineId, WC_RiskId, SessionId, WC_LocationId, Id, TermType, Description, EffectiveDate, Exposure, ExposureAudited, ExposureBasis, ExposureEstimated, FirePopulation, NumberOfActiveVolunteers, NumberOfSalariedFiremen, RiskAircraftIndicator, TermExposureBasis, NCCIDescription, WC_LocationXmlId, ExtractDate, SourceSystemId)\n\tSELECT \n\tLINEID, \n\tWC_RISKID, \n\tSESSIONID, \n\tWC_LOCATIONID, \n\tID, \n\tTERMTYPE, \n\tDESCRIPTION, \n\tEFFECTIVEDATE, \n\tEXPOSURE, \n\tEXPOSUREAUDITED, \n\tEXPOSUREBASIS, \n\tEXPOSUREESTIMATED, \n\tFIREPOPULATION, \n\tNUMBEROFACTIVEVOLUNTEERS, \n\tNUMBEROFSALARIEDFIREMEN, \n\to_RiskAircraftIndicator AS RISKAIRCRAFTINDICATOR, \n\tTERMEXPOSUREBASIS, \n\tNCCIDESCRIPTION, \n\tWC_LOCATIONXMLID, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}