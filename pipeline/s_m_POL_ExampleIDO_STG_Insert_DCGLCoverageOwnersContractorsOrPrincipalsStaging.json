{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCGLCoverageOwnersContractorsOrPrincipalsStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCGLCoverageOwnersContra_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_GL_CoverageOwnersContractorsOrPrincipals AS (\n\tWITH cte_DCGLCoverageOwnersContractorsOrPrincipals(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.CoverageId, \r\n\tX.GL_CoverageOwnersContractorsOrPrincipalsId, \r\n\tX.SessionId, \r\n\tX.ApplyARate, \r\n\tX.Auditable, \r\n\tX.DesignatedArchitect, \r\n\tX.DesignatedConstructionManager, \r\n\tX.DesignatedConstructionProject, \r\n\tX.DesignatedOwner, \r\n\tX.TypeOfBusiness, \r\n\tX.UnderwriterOverride, \r\n\tX.Exposure, \r\n\tX.ExposureAudited, \r\n\tX.ExposureEstimated \r\n\tFROM\r\n\tDC_GL_CoverageOwnersContractorsOrPrincipals X\r\n\tinner join\r\n\tcte_DCGLCoverageOwnersContractorsOrPrincipals Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tCoverageId,\n\tGL_CoverageOwnersContractorsOrPrincipalsId,\n\tSessionId,\n\tApplyARate AS i_ApplyARate,\n\t-- *INF*: IIF(i_ApplyARate='T','1','0')\n\tIFF(i_ApplyARate = 'T', '1', '0') AS o_ApplyARate,\n\tAuditable AS i_Auditable,\n\t-- *INF*: IIF(i_Auditable='T','1','0')\n\tIFF(i_Auditable = 'T', '1', '0') AS o_Auditable,\n\tDesignatedArchitect,\n\tDesignatedConstructionManager,\n\tDesignatedConstructionProject,\n\tDesignatedOwner,\n\tTypeOfBusiness,\n\tUnderwriterOverride AS i_UnderwriterOverride,\n\t-- *INF*: IIF(i_UnderwriterOverride='T','1','0')\n\tIFF(i_UnderwriterOverride = 'T', '1', '0') AS o_UnderwriterOverride,\n\tExposure,\n\tExposureAudited,\n\tExposureEstimated,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_GL_CoverageOwnersContractorsOrPrincipals\n),\nDCGLCoverageOwnersContractorsOrPrincipalsStaging AS (\n\tTRUNCATE TABLE DCGLCoverageOwnersContractorsOrPrincipalsStaging;\n\tINSERT INTO DCGLCoverageOwnersContractorsOrPrincipalsStaging\n\t(CoverageId, GL_CoverageOwnersContractorsOrPrincipalsId, SessionId, ApplyARate, Auditable, DesignatedArchitect, DesignatedConstructionManager, DesignatedConstructionProject, DesignatedOwner, TypeOfBusiness, UnderwriterOverride, Exposure, ExposureAudited, ExposureEstimated, ExtractDate, SourceSystemId)\n\tSELECT \n\tCOVERAGEID, \n\tGL_COVERAGEOWNERSCONTRACTORSORPRINCIPALSID, \n\tSESSIONID, \n\to_ApplyARate AS APPLYARATE, \n\to_Auditable AS AUDITABLE, \n\tDESIGNATEDARCHITECT, \n\tDESIGNATEDCONSTRUCTIONMANAGER, \n\tDESIGNATEDCONSTRUCTIONPROJECT, \n\tDESIGNATEDOWNER, \n\tTYPEOFBUSINESS, \n\to_UnderwriterOverride AS UNDERWRITEROVERRIDE, \n\tEXPOSURE, \n\tEXPOSUREAUDITED, \n\tEXPOSUREESTIMATED, \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}