{
    "name": "m_POL_DW_Update_POPFinalAuditCommissionRate",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_Update_POPFinalAuditCommissionRate",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction AS (\n\tselect pt.PremiumTransactionID,pt.PremiumTransactionCode,\r\n\tSUM(case when pt.PremiumTransactionCode in ('FinalAudit','RevisedFinalAudit') then pt.PremiumTransactionAmount else 0 end) over (partition by pol.pol_num) as EDWPremium,\r\n\tSUM(case when pt.PremiumTransactionCode in ('FinalAudit','RevisedFinalAudit') then 0 else PremiumTransactionAmount*AgencyActualCommissionRate end) over (partition by pol.pol_num) as EDWCommission,\r\n\tDCBIL.AuthorizedAmount as BillingCommission\r\n\tfrom PremiumTransaction pt\t\r\n\tinner join RatingCoverage rc on rc.RatingCoverageAKID = pt.RatingCoverageAKId\tand rc.EffectiveDate = pt.EffectiveDate\t\r\n\tinner join PolicyCoverage pc\ton pc.PolicyCoverageAKID = rc.PolicyCoverageAKID\tand pc.CurrentSnapshotFlag = 1\t\r\n\tinner join RiskLocation rl\ton pc.RiskLocationAKID = rl.RiskLocationAKID\tand rl.CurrentSnapshotFlag = 1\t\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\ton pol.pol_ak_id = pc.PolicyAKID\tand pol.crrnt_snpsht_flag = 1\t\r\n\tinner join (select PolicyReference, SUM(AuthorizedAmount) as AuthorizedAmount from @{pipeline().parameters.SOURCE_DATABASE_NAME}..WorkDCBILCommissionUpdate\r\n\twhere updatetype='FinalAudit' group by PolicyReference) DCBIL\r\n\ton DCBIL.PolicyReference=pol.pol_num\r\n\twhere pt.ReasonAmendedCode not in ('CWO','Claw Back')\n),\nEXP_CalcRate AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionCode,\n\tEDWPremium,\n\tEDWCommission,\n\tBillingCommission,\n\tBillingCommission-EDWCommission AS v_CommissionGap,\n\t-- *INF*: IIF(v_CommissionGap=0 or EDWPremium=0, 0, v_CommissionGap/EDWPremium)\n\tIFF(v_CommissionGap = 0 OR EDWPremium = 0, 0, v_CommissionGap / EDWPremium) AS v_CommissionRate,\n\t-- *INF*: IIF(v_CommissionRate < -1 OR v_CommissionRate > 1,0.024,v_CommissionRate)\n\tIFF(v_CommissionRate < - 1 OR v_CommissionRate > 1, 0.024, v_CommissionRate) AS o_CommissionRate\n\tFROM SQ_PremiumTransaction\n),\nFIL_FinalAuditOnly AS (\n\tSELECT\n\tPremiumTransactionID, \n\tPremiumTransactionCode, \n\to_CommissionRate\n\tFROM EXP_CalcRate\n\tWHERE PremiumTransactionCode ='FinalAudit' OR  PremiumTransactionCode = 'RevisedFinalAudit'\n),\nUPD_Update AS (\n\tSELECT\n\tPremiumTransactionID, \n\to_CommissionRate AS CommissionRate\n\tFROM FIL_FinalAuditOnly\n),\nPremiumTransaction AS (\n\tMERGE INTO PremiumTransaction AS T\n\tUSING UPD_Update AS S\n\tON T.PremiumTransactionID = S.PremiumTransactionID\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AgencyActualCommissionRate = S.CommissionRate\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}