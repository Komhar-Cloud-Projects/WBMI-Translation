{
    "name": "m_CLM_DM_LOAD_Claim_Transaction_Type_Dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Claim_Transaction_Type_Dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_sup_claim_transaction_code AS (\n\tSELECT\n\ttrans_descript,\n\ttrans_code\n\tFROM (\n\t\tSELECT sup_claim_transaction_code.trans_descript AS trans_descript,\r\n\t\t       sup_claim_transaction_code.trans_code     AS trans_code\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_claim_transaction_code\r\n\t\tWHERE  sup_claim_transaction_code.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_code ORDER BY trans_descript DESC) = 1\n),\nSQ_claim_reinsurance_transaction AS (\n\tSELECT DISTINCT claim_reinsurance_transaction.type_disability                 ,\r\n\t       claim_reinsurance_transaction.claim_reins_trans_code          ,\r\n\t       'N/A' as s3p_trans_code                 ,\r\n\t       claim_reinsurance_transaction.claim_reins_pms_trans_code      ,\r\n\t       claim_reinsurance_transaction.claim_reins_trans_base_type_code,\r\n\t       claim_reinsurance_transaction.trans_ctgry_code                ,\r\n\t       'N/A' AS trans_rsn,\r\n\t       'C'   AS trans_kind_code,\r\n\t       claim_reinsurance_transaction.offset_onset_ind\r\n\tFROM   claim_reinsurance_transaction\r\n\tWHERE  claim_reinsurance_transaction.modified_date >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nSQ_claim_transaction AS (\n\tSELECT DISTINCT claim_transaction.type_disability     ,\r\n\t                claim_transaction.offset_onset_ind    ,\r\n\t                claim_transaction.s3p_trans_code      ,\r\n\t                claim_transaction.pms_trans_code      ,\r\n\t                claim_transaction.trans_code          ,\r\n\t                claim_transaction.trans_base_type_code,\r\n\t                claim_transaction.trans_ctgry_code    ,\r\n\t                claim_transaction.trans_rsn           ,\r\n\t                'D' AS trans_kind_code\r\n\tFROM            @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction\r\n\tWHERE           claim_transaction.modified_date >='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT DISTINCT claim_transaction.type_disability     ,\r\n\t                claim_transaction.offset_onset_ind    ,\r\n\t                claim_transaction.s3p_trans_code      ,\r\n\t                claim_transaction.pms_trans_code      ,\r\n\t                claim_transaction.trans_code          ,\r\n\t                claim_transaction.trans_base_type_code,\r\n\t                claim_transaction.trans_ctgry_code    ,\r\n\t                claim_transaction.trans_rsn           ,\r\n\t                'C' AS trans_kind_code\r\n\tFROM            @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction\r\n\tWHERE           claim_transaction.modified_date >='@{pipeline().parameters.SELECTION_START_TS}'\n),\nUnion AS (\n\tSELECT type_disability, trans_code, s3p_trans_code, pms_trans_code, trans_base_type_code, trans_ctgry_code, trans_rsn, trans_kind_code, offset_onset_ind\n\tFROM SQ_claim_transaction\n\tUNION\n\tSELECT type_disability, claim_reins_trans_code AS trans_code, s3p_trans_code, claim_reins_pms_trans_code AS pms_trans_code, claim_reins_trans_base_type_code AS trans_base_type_code, trans_ctgry_code, trans_rsn, trans_kind_code, offset_onset_ind\n\tFROM SQ_claim_reinsurance_transaction\n),\nSRT_Remove_Duplicate_Rows AS (\n\tSELECT\n\ttype_disability, \n\ttrans_code, \n\ts3p_trans_code, \n\tpms_trans_code, \n\ttrans_base_type_code, \n\ttrans_ctgry_code, \n\ttrans_rsn, \n\ttrans_kind_code, \n\toffset_onset_ind\n\tFROM Union\n\tORDER BY type_disability ASC, trans_code ASC, s3p_trans_code ASC, pms_trans_code ASC, trans_base_type_code ASC, trans_ctgry_code ASC, trans_rsn ASC, trans_kind_code ASC, offset_onset_ind ASC\n),\nLKP_Claim_transaction_type_dim AS (\n\tSELECT\n\tclaim_trans_type_dim_id,\n\ttrans_ctgry_code,\n\ttrans_code,\n\ts3p_trans_code,\n\tpms_trans_code,\n\ttrans_base_type_code,\n\ttrans_rsn,\n\ttype_disability,\n\ttrans_kind_code,\n\toffset_onset_ind\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_trans_type_dim_id,\n\t\t\ttrans_ctgry_code,\n\t\t\ttrans_code,\n\t\t\ts3p_trans_code,\n\t\t\tpms_trans_code,\n\t\t\ttrans_base_type_code,\n\t\t\ttrans_rsn,\n\t\t\ttype_disability,\n\t\t\ttrans_kind_code,\n\t\t\toffset_onset_ind\n\t\tFROM claim_transaction_type_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_ctgry_code,trans_code,s3p_trans_code,pms_trans_code,trans_base_type_code,trans_rsn,type_disability,trans_kind_code,offset_onset_ind ORDER BY claim_trans_type_dim_id DESC) = 1\n),\nLKP_sup_claim_transaction_category AS (\n\tSELECT\n\ttrans_ctgry_descript,\n\ttrans_ctgry_code\n\tFROM (\n\t\tSELECT sup_claim_transaction_category.trans_ctgry_descript AS trans_ctgry_descript,\r\n\t\t       sup_claim_transaction_category.trans_ctgry_code     AS trans_ctgry_code\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_claim_transaction_category\r\n\t\tWHERE  sup_claim_transaction_category.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_ctgry_code ORDER BY trans_ctgry_descript DESC) = 1\n),\nLKP_sup_claim_type_disability AS (\n\tSELECT\n\ttype_disability_descript,\n\ttype_disability\n\tFROM (\n\t\tSELECT sup_claim_type_disability.type_disability_descript AS type_disability_descript,\r\n\t\t       sup_claim_type_disability.type_disability          AS type_disability\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_claim_type_disability\r\n\t\tWHERE  sup_claim_type_disability.crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_disability ORDER BY type_disability_descript DESC) = 1\n),\nLKP_sup_transaction_reason AS (\n\tSELECT\n\ttrans_rsn_descript,\n\ttrans_rsn_code\n\tFROM (\n\t\tSELECT sup_claim_transaction_reason.trans_rsn_descript AS trans_rsn_descript,\r\n\t\t       sup_claim_transaction_reason.trans_rsn_code     AS trans_rsn_code\r\n\t\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_claim_transaction_reason\r\n\t\tWHERE  sup_claim_transaction_reason.crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY trans_rsn_code ORDER BY trans_rsn_descript DESC) = 1\n),\nEXP_get_values AS (\n\tSELECT\n\tLKP_Claim_transaction_type_dim.claim_trans_type_dim_id,\n\tSRT_Remove_Duplicate_Rows.trans_ctgry_code AS IN_trans_ctgry_code,\n\tLKP_sup_claim_transaction_category.trans_ctgry_descript AS lkp_trans_ctgry_descript_IN,\n\t-- *INF*: IIF(ISNULL(lkp_trans_ctgry_descript_IN), 'N/A', lkp_trans_ctgry_descript_IN)\n\tIFF(lkp_trans_ctgry_descript_IN IS NULL, 'N/A', lkp_trans_ctgry_descript_IN) AS lkp_trans_ctgry_descript_OUT,\n\tSRT_Remove_Duplicate_Rows.trans_code AS IN_trans_code,\n\t-- *INF*: :LKP.LKP_SUP_CLAIM_TRANSACTION_CODE(IN_trans_code)\n\tLKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_code.trans_descript AS lkp_trans_descript_IN,\n\t-- *INF*: IIF(ISNULL(lkp_trans_descript_IN), 'N/A', lkp_trans_descript_IN)\n\tIFF(lkp_trans_descript_IN IS NULL, 'N/A', lkp_trans_descript_IN) AS lkp_trans_code_descript_OUT,\n\tSRT_Remove_Duplicate_Rows.trans_base_type_code AS IN_trans_base_type_code,\n\t-- *INF*: :LKP.LKP_SUP_CLAIM_TRANSACTION_CODE(IN_trans_base_type_code)\n\tLKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_base_type_code.trans_descript AS lkp_trans_base_type_code_descript_IN,\n\t-- *INF*: IIF(ISNULL(lkp_trans_base_type_code_descript_IN), 'N/A', lkp_trans_base_type_code_descript_IN)\n\tIFF(lkp_trans_base_type_code_descript_IN IS NULL, 'N/A', lkp_trans_base_type_code_descript_IN) AS lkp_trans_base_type_code_descript_OUT,\n\tSRT_Remove_Duplicate_Rows.trans_rsn AS IN_trans_rsn,\n\tLKP_sup_transaction_reason.trans_rsn_descript AS lkp_trans_rsn_descript_IN,\n\t-- *INF*: IIF(ISNULL(lkp_trans_rsn_descript_IN), 'N/A', lkp_trans_rsn_descript_IN)\n\tIFF(lkp_trans_rsn_descript_IN IS NULL, 'N/A', lkp_trans_rsn_descript_IN) AS lkp_trans_rsn_descript_OUT,\n\tSRT_Remove_Duplicate_Rows.type_disability AS IN_type_disability_code,\n\tLKP_sup_claim_type_disability.type_disability_descript AS lkp_type_disability_descript_IN,\n\t-- *INF*: iif(isnull(lkp_type_disability_descript_IN),'N/A',lkp_type_disability_descript_IN)\n\tIFF(lkp_type_disability_descript_IN IS NULL, 'N/A', lkp_type_disability_descript_IN) AS lkp_type_disability_descript_OUT,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\tSRT_Remove_Duplicate_Rows.trans_kind_code,\n\t-- *INF*: DECODE(trans_kind_code,\r\n\t-- \t'D', 'Direct',\r\n\t-- \t'C', 'Ceded')\r\n\t-- \n\tDECODE(trans_kind_code,\n\t'D', 'Direct',\n\t'C', 'Ceded') AS trans_kind_desc,\n\tSRT_Remove_Duplicate_Rows.offset_onset_ind,\n\tSRT_Remove_Duplicate_Rows.s3p_trans_code,\n\tSRT_Remove_Duplicate_Rows.pms_trans_code,\n\t-- *INF*: :LKP.LKP_SUP_CLAIM_TRANSACTION_CODE(pms_trans_code)\n\tLKP_SUP_CLAIM_TRANSACTION_CODE_pms_trans_code.trans_descript AS v_pms_trans_code_descript,\n\t-- *INF*: IIF(ISNULL(v_pms_trans_code_descript), 'N/A', v_pms_trans_code_descript)\n\tIFF(v_pms_trans_code_descript IS NULL, 'N/A', v_pms_trans_code_descript) AS pms_trans_code_descript,\n\t'N/A' AS Default_NA\n\tFROM SRT_Remove_Duplicate_Rows\n\tLEFT JOIN LKP_Claim_transaction_type_dim\n\tON LKP_Claim_transaction_type_dim.trans_ctgry_code = SRT_Remove_Duplicate_Rows.trans_ctgry_code AND LKP_Claim_transaction_type_dim.trans_code = SRT_Remove_Duplicate_Rows.trans_code AND LKP_Claim_transaction_type_dim.s3p_trans_code = SRT_Remove_Duplicate_Rows.s3p_trans_code AND LKP_Claim_transaction_type_dim.pms_trans_code = SRT_Remove_Duplicate_Rows.pms_trans_code AND LKP_Claim_transaction_type_dim.trans_base_type_code = SRT_Remove_Duplicate_Rows.trans_base_type_code AND LKP_Claim_transaction_type_dim.trans_rsn = SRT_Remove_Duplicate_Rows.trans_rsn AND LKP_Claim_transaction_type_dim.type_disability = SRT_Remove_Duplicate_Rows.type_disability AND LKP_Claim_transaction_type_dim.trans_kind_code = SRT_Remove_Duplicate_Rows.trans_kind_code AND LKP_Claim_transaction_type_dim.offset_onset_ind = SRT_Remove_Duplicate_Rows.offset_onset_ind\n\tLEFT JOIN LKP_sup_claim_transaction_category\n\tON LKP_sup_claim_transaction_category.trans_ctgry_code = SRT_Remove_Duplicate_Rows.trans_ctgry_code\n\tLEFT JOIN LKP_sup_claim_type_disability\n\tON LKP_sup_claim_type_disability.type_disability = SRT_Remove_Duplicate_Rows.type_disability\n\tLEFT JOIN LKP_sup_transaction_reason\n\tON LKP_sup_transaction_reason.trans_rsn_code = SRT_Remove_Duplicate_Rows.trans_rsn\n\tLEFT JOIN LKP_SUP_CLAIM_TRANSACTION_CODE LKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_code\n\tON LKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_code.trans_code = IN_trans_code\n\n\tLEFT JOIN LKP_SUP_CLAIM_TRANSACTION_CODE LKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_base_type_code\n\tON LKP_SUP_CLAIM_TRANSACTION_CODE_IN_trans_base_type_code.trans_code = IN_trans_base_type_code\n\n\tLEFT JOIN LKP_SUP_CLAIM_TRANSACTION_CODE LKP_SUP_CLAIM_TRANSACTION_CODE_pms_trans_code\n\tON LKP_SUP_CLAIM_TRANSACTION_CODE_pms_trans_code.trans_code = pms_trans_code\n\n),\nFIL_Claim_Transaction_Type_Dim AS (\n\tSELECT\n\tclaim_trans_type_dim_id, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tIN_trans_ctgry_code AS trans_ctgry_code_s, \n\tlkp_trans_ctgry_descript_OUT, \n\tIN_trans_code AS trans_code_s, \n\tlkp_trans_code_descript_OUT, \n\tIN_trans_base_type_code AS trans_base_type_code_s, \n\tlkp_trans_base_type_code_descript_OUT AS lkp_trans_base_type_code_descript_out, \n\ttrans_kind_code, \n\ttrans_kind_desc, \n\tIN_trans_rsn AS trans_rsn_s, \n\tlkp_trans_rsn_descript_OUT AS lkp_trans_rsn_descript_out, \n\tIN_type_disability_code AS type_disability_code, \n\tlkp_type_disability_descript_OUT AS lkp_type_disability_descript_out, \n\toffset_onset_ind, \n\ts3p_trans_code, \n\tDefault_NA AS s3p_trans_code_descript, \n\tpms_trans_code, \n\tpms_trans_code_descript\n\tFROM EXP_get_values\n\tWHERE IIF(ISNULL(claim_trans_type_dim_id),TRUE,FALSE)\n),\nEXP_Default AS (\n\tSELECT\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date,\n\ttrans_ctgry_code_s,\n\tlkp_trans_ctgry_descript_OUT,\n\ttrans_code_s,\n\tlkp_trans_code_descript_OUT AS lkp_trans_code_descript_out,\n\ts3p_trans_code,\n\ts3p_trans_code_descript,\n\tpms_trans_code,\n\tpms_trans_code_descript,\n\ttrans_base_type_code_s,\n\tlkp_trans_base_type_code_descript_out,\n\ttrans_kind_code,\n\ttrans_kind_desc,\n\ttrans_rsn_s,\n\tlkp_trans_rsn_descript_out,\n\ttype_disability_code,\n\tlkp_type_disability_descript_out,\n\toffset_onset_ind\n\tFROM FIL_Claim_Transaction_Type_Dim\n),\nclaim_transaction_type_dim_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_transaction_type_dim\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date, trans_ctgry_code, trans_ctgry_code_descript, trans_code, trans_code_descript, s3p_trans_code, s3p_trans_code_descript, pms_trans_code, pms_trans_code_descript, trans_base_type_code, trans_base_type_code_descript, trans_kind_code, trans_kind_code_descript, trans_rsn, trans_rsn_descript, type_disability, type_disability_descript, offset_onset_ind)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\ttrans_ctgry_code_s AS TRANS_CTGRY_CODE, \n\tlkp_trans_ctgry_descript_OUT AS TRANS_CTGRY_CODE_DESCRIPT, \n\ttrans_code_s AS TRANS_CODE, \n\tlkp_trans_code_descript_out AS TRANS_CODE_DESCRIPT, \n\tS3P_TRANS_CODE, \n\tS3P_TRANS_CODE_DESCRIPT, \n\tPMS_TRANS_CODE, \n\tPMS_TRANS_CODE_DESCRIPT, \n\ttrans_base_type_code_s AS TRANS_BASE_TYPE_CODE, \n\tlkp_trans_base_type_code_descript_out AS TRANS_BASE_TYPE_CODE_DESCRIPT, \n\tTRANS_KIND_CODE, \n\ttrans_kind_desc AS TRANS_KIND_CODE_DESCRIPT, \n\ttrans_rsn_s AS TRANS_RSN, \n\tlkp_trans_rsn_descript_out AS TRANS_RSN_DESCRIPT, \n\ttype_disability_code AS TYPE_DISABILITY, \n\tlkp_type_disability_descript_out AS TYPE_DISABILITY_DESCRIPT, \n\tOFFSET_ONSET_IND\n\tFROM EXP_Default\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246509"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905529"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604483"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:45"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:48"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}