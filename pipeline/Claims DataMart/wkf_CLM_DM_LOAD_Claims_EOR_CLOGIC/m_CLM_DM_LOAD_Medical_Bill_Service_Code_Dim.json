{
    "name": "m_CLM_DM_LOAD_Medical_Bill_Service_Code_Dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_Medical_Bill_Service_Code_Dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_medical_bill_code AS (\n\tSELECT \r\n\tmedical_bill_code.med_bill_code_id, \r\n\tmedical_bill_code.med_bill_code_ak_id, \r\n\tmedical_bill_code.med_bill_serv_ak_id, \r\n\trtrim(medical_bill_code.med_bill_code_type), \r\n\trtrim(medical_bill_code.med_bill_code), \r\n\trtrim(medical_bill_code.med_bill_code_descript), \r\n\tmedical_bill_code.med_bill_date, \r\n\tmedical_bill.med_bill_id \r\n\t\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.medical_bill_code medical_bill_code, \r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.medical_bill medical_bill,\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.medical_bill_service medical_bill_service\r\n\t\r\n\tWHERE\r\n\tmedical_bill_code.med_bill_ak_id = medical_bill.med_bill_ak_id and\r\n\tmedical_bill.crrnt_snpsht_flag = 1 and \r\n\tmedical_bill_code.created_date >= '@{pipeline().parameters.SELECTION_START_TS}' and\r\n\tmedical_bill_code.med_bill_serv_ak_id <> 0 and\r\n\tmedical_bill_code.med_bill_serv_ak_id = medical_bill_service.med_bill_serv_ak_id\n),\nLKP_Med_Bill_Serv_Dim_Id AS (\n\tSELECT\n\tmed_bill_serv_dim_id,\n\tedw_med_bill_serv_ak_id,\n\tedw_med_bill_serv_ak_id1\n\tFROM (\n\t\tSELECT \n\t\t\tmed_bill_serv_dim_id,\n\t\t\tedw_med_bill_serv_ak_id,\n\t\t\tedw_med_bill_serv_ak_id1\n\t\tFROM medical_bill_service_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_med_bill_serv_ak_id ORDER BY med_bill_serv_dim_id) = 1\n),\nEXP_Audit AS (\n\tSELECT\n\tSQ_medical_bill_code.med_bill_id,\n\tSQ_medical_bill_code.med_bill_code_ak_id,\n\tSQ_medical_bill_code.med_bill_code_type,\n\tSQ_medical_bill_code.med_bill_code,\n\tSQ_medical_bill_code.med_bill_code_descript,\n\tSQ_medical_bill_code.med_bill_date,\n\t1 AS crrnt_snpsht_flag,\n\t-- *INF*: to_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\n\tto_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS') AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsysdate AS created_date,\n\tsysdate AS modified_date,\n\tSQ_medical_bill_code.med_bill_code_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tLKP_Med_Bill_Serv_Dim_Id.med_bill_serv_dim_id\n\tFROM SQ_medical_bill_code\n\tLEFT JOIN LKP_Med_Bill_Serv_Dim_Id\n\tON LKP_Med_Bill_Serv_Dim_Id.edw_med_bill_serv_ak_id = SQ_medical_bill_code.med_bill_serv_ak_id\n),\nLKP_Med_Bill_Service_Code_Exists AS (\n\tSELECT\n\tmed_bill_service_code_dim_id,\n\tedw_med_bill_code_pk_id,\n\tedw_med_bill_code_ak_id,\n\tmed_bill_serv_dim_id,\n\tmed_bill_code_type,\n\tmed_bill_code,\n\tmed_bill_code_descript,\n\tmed_bill_date,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date,\n\tmed_bill_code_id,\n\tmed_bill_code_ak_id,\n\tmed_bill_serv_dim_id1,\n\tmed_bill_code_type1,\n\tmed_bill_code1,\n\tmed_bill_code_descript1,\n\tmed_bill_date1\n\tFROM (\n\t\tSELECT \r\n\t\tmedical_bill_service_code_dim.med_bill_serv_code_dim_id as med_bill_service_code_dim_id, medical_bill_service_code_dim.crrnt_snpsht_flag as crrnt_snpsht_flag, medical_bill_service_code_dim.audit_id as audit_id, medical_bill_service_code_dim.eff_from_date as eff_from_date, medical_bill_service_code_dim.eff_to_date as eff_to_date, medical_bill_service_code_dim.created_date as created_date, medical_bill_service_code_dim.modified_date as modified_date, medical_bill_service_code_dim.edw_med_bill_code_pk_id as edw_med_bill_code_pk_id, medical_bill_service_code_dim.edw_med_bill_code_ak_id as edw_med_bill_code_ak_id, medical_bill_service_code_dim.med_bill_serv_dim_id as med_bill_serv_dim_id, RTRIM(medical_bill_service_code_dim.med_bill_serv_code_type) as med_bill_code_type, rtrim(medical_bill_service_code_dim.med_bill_serv_code) as med_bill_code, rtrim(medical_bill_service_code_dim.med_bill_serv_code_descript) as med_bill_code_descript, medical_bill_service_code_dim.med_bill_serv_date as med_bill_date \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill_service_code_dim medical_bill_service_code_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_med_bill_code_pk_id,edw_med_bill_code_ak_id,med_bill_serv_dim_id,med_bill_code_type,med_bill_code,med_bill_code_descript,med_bill_date ORDER BY med_bill_service_code_dim_id) = 1\n),\nRTR_Insert_Update AS (\n\tSELECT\n\tLKP_Med_Bill_Service_Code_Exists.med_bill_service_code_dim_id,\n\tEXP_Audit.med_bill_id,\n\tEXP_Audit.med_bill_code_ak_id,\n\tEXP_Audit.med_bill_code_type,\n\tEXP_Audit.med_bill_code,\n\tEXP_Audit.med_bill_code_descript,\n\tEXP_Audit.med_bill_date,\n\tEXP_Audit.crrnt_snpsht_flag,\n\tEXP_Audit.eff_from_date,\n\tEXP_Audit.eff_to_date,\n\tEXP_Audit.created_date,\n\tEXP_Audit.modified_date,\n\tEXP_Audit.med_bill_code_id,\n\tEXP_Audit.audit_id,\n\tEXP_Audit.med_bill_serv_dim_id\n\tFROM EXP_Audit\n\tLEFT JOIN LKP_Med_Bill_Service_Code_Exists\n\tON LKP_Med_Bill_Service_Code_Exists.edw_med_bill_code_pk_id = EXP_Audit.med_bill_code_id AND LKP_Med_Bill_Service_Code_Exists.edw_med_bill_code_ak_id = EXP_Audit.med_bill_code_ak_id AND LKP_Med_Bill_Service_Code_Exists.med_bill_serv_dim_id = EXP_Audit.med_bill_serv_dim_id AND LKP_Med_Bill_Service_Code_Exists.med_bill_code_type = EXP_Audit.med_bill_code_type AND LKP_Med_Bill_Service_Code_Exists.med_bill_code = EXP_Audit.med_bill_code AND LKP_Med_Bill_Service_Code_Exists.med_bill_code_descript = EXP_Audit.med_bill_code_descript AND LKP_Med_Bill_Service_Code_Exists.med_bill_date = EXP_Audit.med_bill_date\n),\nRTR_Insert_Update_INSERT AS (SELECT * FROM RTR_Insert_Update WHERE ISNULL(med_bill_service_code_dim_id)),\nRTR_Insert_Update_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update WHERE NOT ( (ISNULL(med_bill_service_code_dim_id)) )),\nmedical_bill_service_code_dim_ins AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill_service_code_dim\n\t(edw_med_bill_code_pk_id, edw_med_bill_code_ak_id, med_bill_serv_dim_id, med_bill_serv_code_type, med_bill_serv_code, med_bill_serv_code_descript, med_bill_serv_date, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date)\n\tSELECT \n\tmed_bill_code_id AS EDW_MED_BILL_CODE_PK_ID, \n\tmed_bill_code_ak_id AS EDW_MED_BILL_CODE_AK_ID, \n\tMED_BILL_SERV_DIM_ID, \n\tmed_bill_code_type AS MED_BILL_SERV_CODE_TYPE, \n\tmed_bill_code AS MED_BILL_SERV_CODE, \n\tmed_bill_code_descript AS MED_BILL_SERV_CODE_DESCRIPT, \n\tmed_bill_date AS MED_BILL_SERV_DATE, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM RTR_Insert_Update_INSERT\n),\nUPD_MED_BILL_CODE_DIM AS (\n\tSELECT\n\tmed_bill_service_code_dim_id AS med_bill_code_dim_id2, \n\tmed_bill_code_id AS med_bill_code_id2, \n\tmed_bill_code_ak_id AS med_bill_code_ak_id2, \n\tmed_bill_code_type AS med_bill_code_type2, \n\tmed_bill_code AS med_bill_code2, \n\tmed_bill_code_descript AS med_bill_code_descript2, \n\tmed_bill_date AS med_bill_date2, \n\taudit_id AS audit_id2, \n\tmodified_date AS modified_date2, \n\tmed_bill_serv_dim_id AS med_bill_serv_dim_id2\n\tFROM RTR_Insert_Update_DEFAULT1\n),\nmedical_bill_service_code_dim_upd AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill_service_code_dim AS T\n\tUSING UPD_MED_BILL_CODE_DIM AS S\n\tON T.med_bill_serv_code_dim_id = S.med_bill_code_dim_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.edw_med_bill_code_pk_id = S.med_bill_code_id2, T.edw_med_bill_code_ak_id = S.med_bill_code_ak_id2, T.med_bill_serv_dim_id = S.med_bill_serv_dim_id2, T.med_bill_serv_code_type = S.med_bill_code_type2, T.med_bill_serv_code = S.med_bill_code2, T.med_bill_serv_code_descript = S.med_bill_code_descript2, T.med_bill_serv_date = S.med_bill_date2, T.audit_id = S.audit_id2, T.modified_date = S.modified_date2\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246513"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905536"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604581"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 03:42:18"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 04:16:08"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}