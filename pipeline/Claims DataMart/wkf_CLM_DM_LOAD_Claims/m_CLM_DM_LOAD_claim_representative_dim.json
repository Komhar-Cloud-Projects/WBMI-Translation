{
    "name": "m_CLM_DM_LOAD_claim_representative_dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_claim_representative_dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_CLAIM_REP AS (\n\tSELECT\n\tclaim_rep_id,\n\tclaim_rep_wbconnect_user_id\n\tFROM (\n\t\tSELECT claim_representative.claim_rep_id as claim_rep_id, claim_representative.claim_rep_wbconnect_user_id as claim_rep_wbconnect_user_id, claim_representative.source_sys_id as source_sys_id FROM claim_representative\r\n\t\twhere claim_representative.crrnt_snpsht_flag='1'\r\n\t\tAND claim_representative.source_sys_id='EXCEED'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_rep_wbconnect_user_id ORDER BY claim_rep_id) = 1\n),\nSQ_claim_representative AS (\n\tSELECT claim_representative.claim_rep_id, claim_representative.claim_rep_ak_id, claim_representative.claim_rep_key, claim_representative.claim_rep_full_name, claim_representative.claim_rep_first_name, claim_representative.claim_rep_last_name, claim_representative.claim_rep_mid_name, claim_representative.claim_rep_name_prfx, claim_representative.claim_rep_name_sfx, claim_representative.co_descript, claim_representative.dvsn_code, claim_representative.dvsn_descript, claim_representative.dvsn_mgr, claim_representative.dept_descript, claim_representative.dept_name, claim_representative.dept_mgr, claim_representative.handling_office_code, claim_representative.handling_office_descript, claim_representative.handling_office_mgr, claim_representative.claim_rep_wbconnect_user_id, claim_representative.crrnt_snpsht_flag, claim_representative.audit_id, claim_representative.eff_from_date, claim_representative.eff_to_date, claim_representative.source_sys_id, claim_representative.created_date, claim_representative.modified_date, claim_representative.claim_rep_email, claim_representative.handling_office_mgr_email, claim_representative.claim_rep_direct_automatic_pay_lmt, claim_representative.claim_rep_direct_automatic_reserve_lmt, claim_representative.handling_office_mgr_direct_automatic_pay_lmt, claim_representative.handling_office_mgr_direct_automatic_reserve_lmt,\r\n\tclaim_representative.cost_center,\r\n\tclaim_representative.claim_rep_branch_num,\r\n\tclaim_representative.claim_rep_num,\r\n\tclaim_representative.ExceedAuthorityFlag,\r\n\tclaim_representative.ClaimsDesktopAuthorityType\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_representative\r\n\tWHERE\r\n\tCREATED_DATE >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_claim_rep_DM AS (\n\tSELECT\n\tclaim_rep_id,\n\tclaim_rep_ak_id,\n\tclaim_rep_key,\n\tclaim_rep_full_name,\n\tclaim_rep_first_name,\n\tclaim_rep_last_name,\n\tclaim_rep_mid_name,\n\tclaim_rep_name_prfx,\n\tclaim_rep_name_sfx,\n\tco_descript,\n\tdvsn_code,\n\tdvsn_descript,\n\tdvsn_mgr,\n\tdept_descript,\n\tdept_name,\n\tdept_mgr,\n\thandling_office_code,\n\thandling_office_descript,\n\thandling_office_mgr,\n\tclaim_rep_wbconnect_user_id AS old_claim_rep_wbconnect_user_id,\n\t-- *INF*: IIF(old_claim_rep_wbconnect_user_id='N/A',claim_rep_key,old_claim_rep_wbconnect_user_id)\r\n\t-- \r\n\t-- -- For certain PMS records, the wbconnect_user_id is N/A. For these records, we use rep_key which is the three letter adjuster code\n\tIFF(old_claim_rep_wbconnect_user_id = 'N/A', claim_rep_key, old_claim_rep_wbconnect_user_id) AS claim_rep_wbconnect_user_id_op,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tclaim_rep_email,\n\thandling_office_mgr_email,\n\tclaim_rep_direct_automatic_pay_lmt,\n\tclaim_rep_direct_automatic_reserve_lmt,\n\thandling_office_mgr_direct_automatic_pay_lmt,\n\thandling_office_mgr_direct_automatic_reserve_lmt,\n\tcost_center,\n\tclaim_rep_branch_num,\n\tclaim_rep_num,\n\tExceedAuthorityFlag,\n\t-- *INF*: DECODE (true,\r\n\t-- RTRIM(LTRIM(ExceedAuthorityFlag)) ='T','Yes',\r\n\t-- RTRIM(LTRIM(ExceedAuthorityFlag)) ='Y','Yes',\r\n\t-- TO_INTEGER(ExceedAuthorityFlag)=1, 'Yes',\r\n\t-- 'No'\r\n\t-- )\r\n\t-- \r\n\t-- -- Bit types are inconsistantly handled in Informatica as integers and strings.  I'm forcing an integer check to  just in case the type needs to change..\n\tDECODE(true,\n\tRTRIM(LTRIM(ExceedAuthorityFlag)) = 'T', 'Yes',\n\tRTRIM(LTRIM(ExceedAuthorityFlag)) = 'Y', 'Yes',\n\tTO_INTEGER(ExceedAuthorityFlag) = 1, 'Yes',\n\t'No') AS ExceedAuthorityFlag_out,\n\tClaimsDesktopAuthorityType\n\tFROM SQ_claim_representative\n),\nFIL_Claim_rep_DM AS (\n\tSELECT\n\tclaim_rep_id, \n\tclaim_rep_ak_id, \n\tclaim_rep_key, \n\tclaim_rep_full_name, \n\tclaim_rep_first_name, \n\tclaim_rep_last_name, \n\tclaim_rep_mid_name, \n\tclaim_rep_name_prfx, \n\tclaim_rep_name_sfx, \n\tco_descript, \n\tdvsn_code, \n\tdvsn_descript, \n\tdvsn_mgr, \n\tdept_descript, \n\tdept_name, \n\tdept_mgr, \n\thandling_office_code, \n\thandling_office_descript, \n\thandling_office_mgr, \n\told_claim_rep_wbconnect_user_id, \n\tclaim_rep_wbconnect_user_id_op AS claim_rep_wbconnect_user_id, \n\tsource_sys_id, \n\teff_from_date, \n\tclaim_rep_email, \n\thandling_office_mgr_email, \n\tclaim_rep_direct_automatic_pay_lmt, \n\tclaim_rep_direct_automatic_reserve_lmt, \n\thandling_office_mgr_direct_automatic_pay_lmt, \n\thandling_office_mgr_direct_automatic_reserve_lmt, \n\tcost_center, \n\tclaim_rep_branch_num, \n\tclaim_rep_num, \n\tExceedAuthorityFlag_out AS ExceedAuthorityFlag, \n\tClaimsDesktopAuthorityType\n\tFROM EXP_claim_rep_DM\n\tWHERE IIF(source_sys_id='EXCEED' OR old_claim_rep_wbconnect_user_id='N/A' , 1, IIF(NOT ISNULL(:LKP.LKP_CLAIM_REP(old_claim_rep_wbconnect_user_id)),0,1))\r\n\r\n-- This has been done because we could have the same person come in from Exceed as well PMS. In that case, EXCEED records always take precedence. The lookup is getting us those PMS rep that also exist as EXCEED reps in claim_representative table. All these reps would be filtered out.\n),\nLKP_CLAIM_REP_DIM AS (\n\tSELECT\n\tclaim_rep_dim_id,\n\teff_from_date,\n\tin_eff_from_date,\n\tedw_claim_rep_ak_id,\n\tin_edw_claim_rep_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_rep_dim_id,\n\t\t\teff_from_date,\n\t\t\tin_eff_from_date,\n\t\t\tedw_claim_rep_ak_id,\n\t\t\tin_edw_claim_rep_ak_id\n\t\tFROM claim_representative_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_rep_ak_id,eff_from_date ORDER BY claim_rep_dim_id) = 1\n),\nEXP_claim_representative_dim_detect_changes AS (\n\tSELECT\n\tFIL_Claim_rep_DM.claim_rep_id,\n\tFIL_Claim_rep_DM.claim_rep_ak_id,\n\tFIL_Claim_rep_DM.claim_rep_key,\n\tFIL_Claim_rep_DM.claim_rep_full_name,\n\tFIL_Claim_rep_DM.claim_rep_first_name,\n\tFIL_Claim_rep_DM.claim_rep_last_name,\n\tFIL_Claim_rep_DM.claim_rep_mid_name,\n\tFIL_Claim_rep_DM.claim_rep_name_prfx,\n\tFIL_Claim_rep_DM.claim_rep_name_sfx,\n\tFIL_Claim_rep_DM.co_descript,\n\tFIL_Claim_rep_DM.dvsn_code,\n\tFIL_Claim_rep_DM.dvsn_descript,\n\tFIL_Claim_rep_DM.dvsn_mgr,\n\tFIL_Claim_rep_DM.dept_descript,\n\tFIL_Claim_rep_DM.dept_name,\n\tFIL_Claim_rep_DM.dept_mgr,\n\tFIL_Claim_rep_DM.handling_office_code,\n\tFIL_Claim_rep_DM.handling_office_descript,\n\tFIL_Claim_rep_DM.handling_office_mgr,\n\tFIL_Claim_rep_DM.claim_rep_wbconnect_user_id,\n\t'1' AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\tFIL_Claim_rep_DM.eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tFIL_Claim_rep_DM.source_sys_id,\n\tsysdate AS created_date,\n\tsysdate AS modified_date,\n\tLKP_CLAIM_REP_DIM.claim_rep_dim_id,\n\tFIL_Claim_rep_DM.claim_rep_email,\n\tFIL_Claim_rep_DM.handling_office_mgr_email,\n\tFIL_Claim_rep_DM.claim_rep_direct_automatic_pay_lmt,\n\tFIL_Claim_rep_DM.claim_rep_direct_automatic_reserve_lmt,\n\tFIL_Claim_rep_DM.handling_office_mgr_direct_automatic_pay_lmt,\n\tFIL_Claim_rep_DM.handling_office_mgr_direct_automatic_reserve_lmt,\n\tFIL_Claim_rep_DM.cost_center,\n\tFIL_Claim_rep_DM.claim_rep_branch_num,\n\tFIL_Claim_rep_DM.claim_rep_num,\n\tFIL_Claim_rep_DM.ExceedAuthorityFlag,\n\tFIL_Claim_rep_DM.ClaimsDesktopAuthorityType\n\tFROM FIL_Claim_rep_DM\n\tLEFT JOIN LKP_CLAIM_REP_DIM\n\tON LKP_CLAIM_REP_DIM.edw_claim_rep_ak_id = FIL_Claim_rep_DM.claim_rep_ak_id AND LKP_CLAIM_REP_DIM.eff_from_date = FIL_Claim_rep_DM.eff_from_date\n),\nRTR_INS_UPD AS (\n\tSELECT\n\tclaim_rep_dim_id,\n\tclaim_rep_id,\n\tclaim_rep_ak_id,\n\tclaim_rep_key,\n\tclaim_rep_full_name,\n\tclaim_rep_first_name,\n\tclaim_rep_last_name,\n\tclaim_rep_mid_name,\n\tclaim_rep_name_prfx,\n\tclaim_rep_name_sfx,\n\tco_descript,\n\tdvsn_code,\n\tdvsn_descript,\n\tdvsn_mgr,\n\tdept_descript,\n\tdept_name,\n\tdept_mgr,\n\thandling_office_code,\n\thandling_office_descript,\n\thandling_office_mgr,\n\tclaim_rep_wbconnect_user_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tclaim_rep_email,\n\thandling_office_mgr_email,\n\tclaim_rep_direct_automatic_pay_lmt,\n\tclaim_rep_direct_automatic_reserve_lmt,\n\thandling_office_mgr_direct_automatic_pay_lmt,\n\thandling_office_mgr_direct_automatic_reserve_lmt,\n\tcost_center,\n\tclaim_rep_branch_num,\n\tclaim_rep_num,\n\tExceedAuthorityFlag,\n\tClaimsDesktopAuthorityType\n\tFROM EXP_claim_representative_dim_detect_changes\n),\nRTR_INS_UPD_INSERT AS (SELECT * FROM RTR_INS_UPD WHERE ISNULL(claim_rep_dim_id)),\nRTR_INS_UPD_DEFAULT1 AS (SELECT * FROM RTR_INS_UPD WHERE NOT ( (ISNULL(claim_rep_dim_id)) )),\nUPD_CLAIM_REP AS (\n\tSELECT\n\tclaim_rep_dim_id AS claim_rep_dim_id2, \n\tclaim_rep_id AS claim_rep_id2, \n\tclaim_rep_ak_id AS claim_rep_ak_id2, \n\tclaim_rep_key AS claim_rep_key2, \n\tclaim_rep_full_name AS claim_rep_full_name2, \n\tclaim_rep_first_name AS claim_rep_first_name2, \n\tclaim_rep_last_name AS claim_rep_last_name2, \n\tclaim_rep_mid_name AS claim_rep_mid_name2, \n\tclaim_rep_name_prfx AS claim_rep_name_prfx2, \n\tclaim_rep_name_sfx AS claim_rep_name_sfx2, \n\tco_descript AS co_descript2, \n\tdvsn_code AS dvsn_code2, \n\tdvsn_descript AS dvsn_descript2, \n\tdvsn_mgr AS dvsn_mgr2, \n\tdept_descript AS dept_descript2, \n\tdept_name AS dept_name2, \n\tdept_mgr AS dept_mgr2, \n\thandling_office_code AS handling_office_code2, \n\thandling_office_descript AS handling_office_descript2, \n\thandling_office_mgr AS handling_office_mgr2, \n\tclaim_rep_wbconnect_user_id AS claim_rep_wbconnect_user_id2, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag2, \n\taudit_id AS audit_id2, \n\teff_from_date AS eff_from_date2, \n\teff_to_date AS eff_to_date2, \n\tsource_sys_id AS source_sys_id2, \n\tmodified_date AS modified_date2, \n\tclaim_rep_email AS claim_rep_email2, \n\thandling_office_mgr_email AS handling_office_mgr_email2, \n\tclaim_rep_direct_automatic_pay_lmt AS claim_rep_direct_automatic_pay_lmt2, \n\tclaim_rep_direct_automatic_reserve_lmt AS claim_rep_direct_automatic_reserve_lmt2, \n\thandling_office_mgr_direct_automatic_pay_lmt AS handling_office_mgr_direct_automatic_pay_lmt2, \n\thandling_office_mgr_direct_automatic_reserve_lmt AS handling_office_mgr_direct_automatic_reserve_lmt2, \n\tcost_center AS cost_center2, \n\tclaim_rep_branch_num AS claim_rep_branch_num2, \n\tclaim_rep_num AS claim_rep_num2, \n\tExceedAuthorityFlag AS ExceedAuthorityFlag2, \n\tClaimsDesktopAuthorityType AS ClaimsDesktopAuthorityType2\n\tFROM RTR_INS_UPD_DEFAULT1\n),\nclaim_representative_dim_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_representative_dim AS T\n\tUSING UPD_CLAIM_REP AS S\n\tON T.claim_rep_dim_id = S.claim_rep_dim_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.edw_claim_rep_pk_id = S.claim_rep_id2, T.edw_claim_rep_ak_id = S.claim_rep_ak_id2, T.co_descript = S.co_descript2, T.dvsn_code = S.dvsn_code2, T.dvsn_descript = S.dvsn_descript2, T.dvsn_mgr = S.dvsn_mgr2, T.dept_descript = S.dept_descript2, T.dept_name = S.dept_name2, T.dept_mgr = S.dept_mgr2, T.handling_office_code = S.handling_office_code2, T.handling_office_descript = S.handling_office_descript2, T.handling_office_mgr = S.handling_office_mgr2, T.claim_rep_key = S.claim_rep_key2, T.claim_rep_full_name = S.claim_rep_full_name2, T.claim_rep_first_name = S.claim_rep_first_name2, T.claim_rep_last_name = S.claim_rep_last_name2, T.claim_rep_mid_name = S.claim_rep_mid_name2, T.claim_rep_name_prfx = S.claim_rep_name_prfx2, T.claim_rep_name_sfx = S.claim_rep_name_sfx2, T.claim_rep_wbconnect_user_id = S.claim_rep_wbconnect_user_id2, T.crrnt_snpsht_flag = S.crrnt_snpsht_flag2, T.audit_id = S.audit_id2, T.eff_from_date = S.eff_from_date2, T.eff_to_date = S.eff_to_date2, T.modified_date = S.modified_date2, T.claim_rep_email = S.claim_rep_email2, T.claim_rep_direct_automatic_pay_lmt = S.claim_rep_direct_automatic_pay_lmt2, T.claim_rep_direct_automatic_reserve_lmt = S.claim_rep_direct_automatic_reserve_lmt2, T.handling_office_mgr_email = S.handling_office_mgr_email2, T.handling_office_mgr_direct_automatic_pay_lmt = S.handling_office_mgr_direct_automatic_pay_lmt2, T.handling_office_mgr_direct_automatic_reserve_lmt = S.handling_office_mgr_direct_automatic_reserve_lmt2, T.claim_rep_branch_num = S.claim_rep_branch_num2, T.cost_center = S.cost_center2, T.claim_rep_num = S.claim_rep_num2, T.ExceedAuthorityFlag = S.ExceedAuthorityFlag2, T.ClaimsDesktopAuthorityType = S.ClaimsDesktopAuthorityType2\n),\nclaim_representative_dim_insert AS (\n\tINSERT INTO claim_representative_dim\n\t(edw_claim_rep_pk_id, edw_claim_rep_ak_id, co_descript, dvsn_code, dvsn_descript, dvsn_mgr, dept_descript, dept_name, dept_mgr, handling_office_code, handling_office_descript, handling_office_mgr, claim_rep_key, claim_rep_full_name, claim_rep_first_name, claim_rep_last_name, claim_rep_mid_name, claim_rep_name_prfx, claim_rep_name_sfx, claim_rep_wbconnect_user_id, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date, claim_rep_email, claim_rep_direct_automatic_pay_lmt, claim_rep_direct_automatic_reserve_lmt, handling_office_mgr_email, handling_office_mgr_direct_automatic_pay_lmt, handling_office_mgr_direct_automatic_reserve_lmt, claim_rep_branch_num, cost_center, claim_rep_num, ExceedAuthorityFlag, ClaimsDesktopAuthorityType)\n\tSELECT \n\tclaim_rep_id AS EDW_CLAIM_REP_PK_ID, \n\tclaim_rep_ak_id AS EDW_CLAIM_REP_AK_ID, \n\tCO_DESCRIPT, \n\tDVSN_CODE, \n\tDVSN_DESCRIPT, \n\tDVSN_MGR, \n\tDEPT_DESCRIPT, \n\tDEPT_NAME, \n\tDEPT_MGR, \n\tHANDLING_OFFICE_CODE, \n\tHANDLING_OFFICE_DESCRIPT, \n\tHANDLING_OFFICE_MGR, \n\tCLAIM_REP_KEY, \n\tCLAIM_REP_FULL_NAME, \n\tCLAIM_REP_FIRST_NAME, \n\tCLAIM_REP_LAST_NAME, \n\tCLAIM_REP_MID_NAME, \n\tCLAIM_REP_NAME_PRFX, \n\tCLAIM_REP_NAME_SFX, \n\tCLAIM_REP_WBCONNECT_USER_ID, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tCLAIM_REP_EMAIL, \n\tCLAIM_REP_DIRECT_AUTOMATIC_PAY_LMT, \n\tCLAIM_REP_DIRECT_AUTOMATIC_RESERVE_LMT, \n\tHANDLING_OFFICE_MGR_EMAIL, \n\tHANDLING_OFFICE_MGR_DIRECT_AUTOMATIC_PAY_LMT, \n\tHANDLING_OFFICE_MGR_DIRECT_AUTOMATIC_RESERVE_LMT, \n\tCLAIM_REP_BRANCH_NUM, \n\tCOST_CENTER, \n\tCLAIM_REP_NUM, \n\tEXCEEDAUTHORITYFLAG, \n\tCLAIMSDESKTOPAUTHORITYTYPE\n\tFROM RTR_INS_UPD_INSERT\n),\nSQ_claim_representative_dim AS (\n\tSELECT \r\n\tCLAIM_REPRESENTATIVE_DIM.CLAIM_REP_DIM_ID, \r\n\tCLAIM_REPRESENTATIVE_DIM.EFF_FROM_DATE, \r\n\tCLAIM_REPRESENTATIVE_DIM.EFF_TO_DATE, \r\n\tCLAIM_REPRESENTATIVE_DIM.EDW_CLAIM_REP_AK_ID \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.CLAIM_REPRESENTATIVE_DIM CLAIM_REPRESENTATIVE_DIM\r\n\tWHERE EXISTS\r\n\t(\r\n\tSELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CLAIM_REPRESENTATIVE_DIM CLAIM_REPRESENTATIVE_DIM2\r\n\tWHERE CRRNT_SNPSHT_FLAG = 1 AND CLAIM_REPRESENTATIVE_DIM.EDW_CLAIM_REP_AK_ID = CLAIM_REPRESENTATIVE_DIM2.EDW_CLAIM_REP_AK_ID\r\n\tGROUP BY CLAIM_REPRESENTATIVE_DIM2.EDW_CLAIM_REP_AK_ID HAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY CLAIM_REPRESENTATIVE_DIM.EDW_CLAIM_REP_AK_ID , CLAIM_REPRESENTATIVE_DIM.EFF_FROM_DATE DESC\n),\nEXP_Lag_eff_from_date111 AS (\n\tSELECT\n\tclaim_rep_dim_id,\n\tedw_claim_rep_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tedw_claim_rep_ak_id = v_PREV_ROW_occurrence_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tedw_claim_rep_ak_id = v_PREV_ROW_occurrence_key, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tedw_claim_rep_ak_id AS v_PREV_ROW_occurrence_key,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_claim_representative_dim\n),\nFIL_claim_representative_dim_update AS (\n\tSELECT\n\tclaim_rep_dim_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_eff_from_date111\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_claim_representative_dim AS (\n\tSELECT\n\tclaim_rep_dim_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_claim_representative_dim_update\n),\nclaim_representative_dim_expire AS (\n\tMERGE INTO claim_representative_dim AS T\n\tUSING UPD_claim_representative_dim AS S\n\tON T.claim_rep_dim_id = S.claim_rep_dim_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246509"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905529"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604482"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:30:45"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:35:48"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": ""
        },
        "annotations": []
    }
}