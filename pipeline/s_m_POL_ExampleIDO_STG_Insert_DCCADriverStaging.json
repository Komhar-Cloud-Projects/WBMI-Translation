{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCADriverStaging",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCADriverStaging",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_CA_Driver AS (\n\tWITH cte_DCCADriver(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.LineId, \r\n\tX.CA_DriverId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.BroadenNoFault, \r\n\tX.DateOfHire, \r\n\tX.DriversLicenseNumber, \r\n\tX.JobTitle, \r\n\tX.PercentageOfUse, \r\n\tX.StateLicensed, \r\n\tX.UseVehicleNumber, \r\n\tX.YearsExperience, \r\n\tX.YearLicensed \r\n\tFROM\r\n\tDC_CA_Driver X\r\n\tinner join\r\n\tcte_DCCADriver Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tLineId,\n\tCA_DriverId,\n\tSessionId,\n\tId,\n\tBroadenNoFault,\n\tDateOfHire,\n\tDriversLicenseNumber,\n\t-- *INF*: IIF(SUBSTR(DriversLicenseNumber, -1, 1) = '?', SUBSTR(DriversLicenseNumber, 1, LENGTH(DriversLicenseNumber)-1) , DriversLicenseNumber)\n\tIFF(\n\t    SUBSTR(DriversLicenseNumber, - 1, 1) = '?',\n\t    SUBSTR(DriversLicenseNumber, 1, LENGTH(DriversLicenseNumber) - 1),\n\t    DriversLicenseNumber\n\t) AS o_DriversLicenseNumber,\n\tJobTitle,\n\tPercentageOfUse,\n\tStateLicensed,\n\tUseVehicleNumber,\n\tYearsExperience,\n\tYearLicensed,\n\t-- *INF*: DECODE(BroadenNoFault, 'T', 1, 'F', 0, NULL)\n\tDECODE(\n\t    BroadenNoFault,\n\t    'T', 1,\n\t    'F', 0,\n\t    NULL\n\t) AS o_BroadenNoFault,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_CA_Driver\n),\nDCCADriverStaging AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCADriverStaging;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCADriverStaging\n\t(ExtractDate, SourceSystemId, LineId, CA_DriverId, SessionId, Id, BroadenNoFault, DateOfHire, DriversLicenseNumber, JobTitle, PercentageOfUse, StateLicensed, UseVehicleNumber, YearsExperience, YearLicensed)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tLINEID, \n\tCA_DRIVERID, \n\tSESSIONID, \n\tID, \n\to_BroadenNoFault AS BROADENNOFAULT, \n\tDATEOFHIRE, \n\to_DriversLicenseNumber AS DRIVERSLICENSENUMBER, \n\tJOBTITLE, \n\tPERCENTAGEOFUSE, \n\tSTATELICENSED, \n\tUSEVEHICLENUMBER, \n\tYEARSEXPERIENCE, \n\tYEARLICENSED\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}