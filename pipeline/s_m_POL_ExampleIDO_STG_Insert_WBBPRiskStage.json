{
    "name": "s_m_POL_ExampleIDO_STG_Insert_WBBPRiskStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_WBBPRiskStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_BP_Risk AS (\n\tWITH cte_WBBPRisk(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT \r\n\tX.BP_RiskId, \r\n\tX.WB_BP_RiskId, \r\n\tX.SessionId, \r\n\tX.FunctionalValuationReason, \r\n\tX.DescribeOther, \r\n\tX.VacantBuilding, \r\n\tX.BlanketBuildingIneligible, \r\n\tX.BlanketPersonalPropertyGroupID, \r\n\tX.Message1, \r\n\tX.Message2, \r\n\tX.Message3, \r\n\tX.SumOfLimits, \r\n\tX.LocationID, \r\n\tX.BuildingID, \r\n\tX.BuildingNumber, \r\n\tX.ProtectionClassOverride, \r\n\tX.IncludesEarthquakeBuilding, \r\n\tX.IncludesEarthquakePersonalProperty, \r\n\tX.BlanketType \r\n\tFROM\r\n\tWB_BP_Risk X\r\n\tinner join\r\n\tcte_WBBPRisk Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXPTRANS AS (\n\tSELECT\n\tBP_RiskId,\n\tWB_BP_RiskId,\n\tSessionId,\n\tFunctionalValuationReason,\n\tDescribeOther,\n\tVacantBuilding,\n\t-- *INF*: DECODE(i_FineArtsCoverageForBreakage,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_FineArtsCoverageForBreakage,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_FineArtsCoverageForBreakage,\n\tBlanketBuildingIneligible,\n\tBlanketPersonalPropertyGroupID,\n\tMessage1,\n\tMessage2,\n\tMessage3,\n\tSumOfLimits,\n\tLocationID,\n\tBuildingID,\n\tBuildingNumber,\n\tProtectionClassOverride,\n\tIncludesEarthquakeBuilding AS i_IncludesEarthquakeBuilding,\n\t-- *INF*: DECODE(i_IncludesEarthquakeBuilding,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_IncludesEarthquakeBuilding,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_IncludesEarthquakeBuilding,\n\tIncludesEarthquakePersonalProperty AS i_IncludesEarthquakePersonalProperty,\n\t-- *INF*: DECODE(i_IncludesEarthquakePersonalProperty,'T','1','F','0',NULL)\n\tDECODE(\n\t    i_IncludesEarthquakePersonalProperty,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_IncludesEarthquakePersonalProperty,\n\tBlanketType,\n\tSYSDATE AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_WB_BP_Risk\n),\nWBBPRiskStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.WBBPRiskStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WBBPRiskStage\n\t(ExtractDate, SourceSystemId, BP_RiskId, WB_BP_RiskId, SessionId, FunctionalValuationReason, DescribeOther, VacantBuilding, BlanketBuildingIneligible, BlanketPersonalPropertyGroupID, IncludesEarthquakeBuilding, IncludesEarthquakePersonalProperty, BlanketType, Message1, Message2, Message3, SumOfLimits, LocationID, BuildingID, BuildingNumber, ProtectionClassOverride)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tBP_RISKID, \n\tWB_BP_RISKID, \n\tSESSIONID, \n\tFUNCTIONALVALUATIONREASON, \n\tDESCRIBEOTHER, \n\tVACANTBUILDING, \n\tBLANKETBUILDINGINELIGIBLE, \n\tBLANKETPERSONALPROPERTYGROUPID, \n\to_IncludesEarthquakeBuilding AS INCLUDESEARTHQUAKEBUILDING, \n\to_IncludesEarthquakePersonalProperty AS INCLUDESEARTHQUAKEPERSONALPROPERTY, \n\tBLANKETTYPE, \n\tMESSAGE1, \n\tMESSAGE2, \n\tMESSAGE3, \n\tSUMOFLIMITS, \n\tLOCATIONID, \n\tBUILDINGID, \n\tBUILDINGNUMBER, \n\tPROTECTIONCLASSOVERRIDE\n\tFROM EXPTRANS\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}