{
    "name": "s_m_POL_DW_LOAD_WorkBlanketPremiumBreakOut",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkBlanketPremiumBreakOut",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WorkBlanketPremiumBreakOut AS (\n\twith t_CF as (\r\n\tselect p.SessionId,\r\n\trsk.CF_RiskId,\r\n\tp.CF_PropertyId,\r\n\tc.CoverageId BlanketCoverageId,\r\n\tpt.PremiumTransactionAKID BlanketPremiumTransactionAKId,\r\n\tpm.PremiumTransactionAKId,\r\n\tpm.EffectiveDate,\r\n\tpm.RatingCoverageAKId,\r\n\tcov.CoverageId,\r\n\trsk.RiskType SourceRiskType,\r\n\tcov.type SourceCoverageType,\r\n\tconvert(varchar(255),frm.Value) BlanketType,\r\n\tcase when ce.Prem is not null then ce.Prem when cov.Type='BG1' then p.BG1PremRatingGroup\r\n\twhen cov.Type='BG2' then p.BG2PremRatingGroup when cov.Type='OtherPerils' then p.OtherPremRatingGroup end BreakOutNumerator,\r\n\tpt.PremiumTransactionAmount as TotalBlanketWrittenPremium\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFPropertyStaging p\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFRiskStaging rsk\r\n\ton rsk.CF_RiskId = p.CF_RiskId\r\n\tand not rsk.RiskType='EETOOLS'\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging cov\r\n\ton cov.ObjectId=rsk.CF_RiskId\r\n\tand cov.ObjectName='DC_CF_Risk'\r\n\tand cov.Type in ('BG1','BG2','OtherPerils','EarthQuakeRisk')\r\n\tand (not exists (\r\n\tselect 1 from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging c\r\n\twhere c.ObjectId=cov.Objectid\r\n\tand c.ObjectName='DC_CF_Risk'\r\n\tand c.Type in ('BG1','BG2','OtherPerils')\r\n\tand c.Premium<>0)\r\n\tor cov.Type='EarthQuakeRisk')\r\n\tleft hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFCoverageEarthquakeRiskStage ce\r\n\ton ce.CoverageId=cov.CoverageId\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCFRatingGroupStaging rg\r\n\ton rg.CF_RiskId = rsk.CF_RiskId\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCFormStaging frm\r\n\ton frm.ObjectId = rg.CF_RatingGroupId\r\n\tand frm.ObjectName = 'DC_CF_RatingGroup'\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging c on p.SessionId = c.SessionId and c.ObjectName = 'DC_Line' and c.Type = 'RatingGroup'\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction w\r\n\ton w.PremiumTransactionStageId=c.CoverageId\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction pt\r\n\ton pt.PremiumTransactionAKID=w.PremiumTransactionAKId\r\n\tand pt.SourceSystemID='DCT'\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction wp\r\n\ton wp.PremiumTransactionStageId=cov.CoverageId\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction pm\r\n\ton pm.PremiumTransactionAKID=wp.PremiumTransactionAKId\r\n\tand pm.SourceSystemID='DCT'\r\n\tand pm.OffsetOnsetCode<>'Offset'),\r\n\t\r\n\tt_BO as (\r\n\tselect rsk.SessionId,\r\n\trsk.BPRiskId,\r\n\tcov.CoverageId,\r\n\tpt.PremiumTransactionAKID BlanketPremiumTransactionAKID,\r\n\tpm.PremiumTransactionAKID,\r\n\tpm.EffectiveDate,\r\n\tpm.RatingCoverageAKId,\r\n\tcov.type SourceCoverageType,\r\n\tpt.PremiumTransactionAmount TotalBlanketWrittenPremium,\r\n\tCOALESCE(cb.BlanketPremium,cp.BlanketPremium,ISNULL(ce.BlanketBuildingPremium,0)+ISNULL(ce.BlanketPersonalPropertyPremium,0)) BreakOutNumerator\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPRiskStage rsk\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging c on c.SessionId = rsk.SessionId and c.Type = 'Blanket' and c.ObjectName = 'DC_Line'\r\n\tand exists (\r\n\tselect 1 from DCBPBlanketGroupStage bg\r\n\twhere bg.BP_RiskId=rsk.BPRiskId)\r\n\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCoverageStaging cov\r\n\ton rsk.BPRiskId=cov.ObjectId\r\n\tand cov.ObjectName='DC_BP_Risk' \r\n\tand cov.Type in ('Building','PersonalProperty','EarthQuake') \r\n\tand (ISNULL(cov.Premium,0)=0\r\n\tor cov.Type='EarthQuake')\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction w\r\n\ton w.PremiumTransactionStageId=c.CoverageId\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction pt\r\n\ton pt.PremiumTransactionAKID=w.PremiumTransactionAKId\r\n\tand pt.SourceSystemID='DCT'\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction wp\r\n\ton wp.PremiumTransactionStageId=cov.CoverageId\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction pm\r\n\ton pm.PremiumTransactionAKID=wp.PremiumTransactionAKId\r\n\tand pm.SourceSystemID='DCT'\r\n\tand pm.OffsetOnsetCode<>'Offset'\r\n\tleft hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoverageBuildingStage cb\r\n\ton cb.CoverageId=cov.CoverageId\r\n\tleft hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoveragePersonalPropertyStage cp\r\n\ton cp.CoverageId=cov.CoverageId\r\n\tleft hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCBPCoverageEarthQuakeStage ce\r\n\ton ce.CoverageId=cov.CoverageId\r\n\twhere COALESCE(cb.BlanketPremium,cp.BlanketPremium,ISNULL(ce.BlanketPersonalPropertyPremium,0)+ISNULL(ce.BlanketBuildingPremium,0),0)<>0)\r\n\t\r\n\tselect t_CF.BlanketPremiumTransactionAKId, t_CF.PremiumTransactionAKId, t_cf.SourceCoverageType, t_cf.BreakOutNumerator, t_cf.TotalBlanketWrittenPremium,a.BreakOutDenominator,\r\n\tRC.AnnualStatementLineId\r\n\t from t_CF\r\n\tinner hash join\r\n\t(select BlanketPremiumTransactionAKId,sum(BreakOutNumerator) BreakOutDenominator from \r\n\t(select distinct BlanketPremiumTransactionAKId,CoverageId,BreakOutNumerator from t_CF) a\r\n\tgroup by BlanketPremiumTransactionAKId\r\n\thaving sum(BreakOutNumerator)<>0) a\r\n\ton t_CF.BlanketPremiumTransactionAKId=a.BlanketPremiumTransactionAKId\r\n\tand t_CF.BreakOutNumerator is not null\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC \r\n\ton t_CF.RatingCoverageAKId = RC.RatingCoverageAKID and t_CF.EffectiveDate =RC.EffectiveDate\r\n\tUNION ALL\r\n\t\r\n\tselect t_BO.BlanketPremiumTransactionAKID, t_BO.PremiumTransactionAKID, t_BO.SourceCoverageType, t_BO.BreakOutNumerator, T_BO.TotalBlanketWrittenPremium,a.BreakOutDenominator,\r\n\tRC.AnnualStatementLineId\r\n\tfrom t_BO\r\n\tinner hash join \r\n\t(select BlanketPremiumTransactionAKId,sum(BreakOutNumerator) BreakOutDenominator  from \r\n\t(select distinct BlanketPremiumTransactionAKId,CoverageId,BreakOutNumerator from t_BO) a\r\n\tgroup by BlanketPremiumTransactionAKId\r\n\thaving sum(BreakOutNumerator)<>0) a\r\n\ton t_BO.BlanketPremiumTransactionAKID=a.BlanketPremiumTransactionAKID\r\n\tinner hash join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC \r\n\ton t_BO.RatingCoverageAKId = RC.RatingCoverageAKID and t_BO.EffectiveDate =RC.EffectiveDate\n),\nEXP_Values AS (\n\tSELECT\n\tBlanketPremiumTransactionAKId,\n\tPremiumTransactionAKId,\n\tSourceCoverageType,\n\tBreakOutNumerator,\n\tTotalBlanketWrittenPremium,\n\tBreakOutDenominator,\n\tAnnualStatementLineId,\n\t-- *INF*: ROUND(TotalBlanketWrittenPremium*BreakOutNumerator/BreakOutDenominator,4)\n\tROUND(TotalBlanketWrittenPremium * BreakOutNumerator / BreakOutDenominator, 4) AS o_BreakOutPremium,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tSYSDATE AS o_CreatedDate\n\tFROM SQ_WorkBlanketPremiumBreakOut\n),\nLKP_Exist AS (\n\tSELECT\n\tWorkBlanketPremiumBreakOutId,\n\tBlanketPremiumTransactionAKID,\n\tPremiumTransactionAKId\n\tFROM (\n\t\tSELECT \n\t\t\tWorkBlanketPremiumBreakOutId,\n\t\t\tBlanketPremiumTransactionAKID,\n\t\t\tPremiumTransactionAKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkBlanketPremiumBreakOut\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BlanketPremiumTransactionAKID,PremiumTransactionAKId ORDER BY WorkBlanketPremiumBreakOutId) = 1\n),\nRTR_InsertUpdate AS (\n\tSELECT\n\tLKP_Exist.WorkBlanketPremiumBreakOutId,\n\tEXP_Values.BlanketPremiumTransactionAKId,\n\tEXP_Values.PremiumTransactionAKId,\n\tEXP_Values.SourceCoverageType,\n\tEXP_Values.BreakOutNumerator,\n\tEXP_Values.TotalBlanketWrittenPremium,\n\tEXP_Values.BreakOutDenominator,\n\tEXP_Values.AnnualStatementLineId,\n\tEXP_Values.o_BreakOutPremium AS BreakOutPremium,\n\tEXP_Values.o_AuditID AS AuditID,\n\tEXP_Values.o_CreatedDate AS CreatedDate\n\tFROM EXP_Values\n\tLEFT JOIN LKP_Exist\n\tON LKP_Exist.BlanketPremiumTransactionAKID = EXP_Values.BlanketPremiumTransactionAKId AND LKP_Exist.PremiumTransactionAKId = EXP_Values.PremiumTransactionAKId\n),\nRTR_InsertUpdate_INSERT AS (SELECT * FROM RTR_InsertUpdate WHERE ISNULL(WorkBlanketPremiumBreakOutId)),\nWorkBlanketPremiumBreakOut_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkBlanketPremiumBreakOut\n\t(AuditId, CreatedDate, BlanketPremiumTransactionAKID, PremiumTransactionAKId, AnnualStatementLineId, SourceCoverageType, TotalBlanketPremium, BreakOutNumerator, BreakOutDenominator, BreakOutPremium)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tBlanketPremiumTransactionAKId AS BLANKETPREMIUMTRANSACTIONAKID, \n\tPREMIUMTRANSACTIONAKID, \n\tANNUALSTATEMENTLINEID, \n\tSOURCECOVERAGETYPE, \n\tTotalBlanketWrittenPremium AS TOTALBLANKETPREMIUM, \n\tBREAKOUTNUMERATOR, \n\tBREAKOUTDENOMINATOR, \n\tBREAKOUTPREMIUM\n\tFROM RTR_InsertUpdate_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}