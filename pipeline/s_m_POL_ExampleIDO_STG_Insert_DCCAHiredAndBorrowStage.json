{
    "name": "s_m_POL_ExampleIDO_STG_Insert_DCCAHiredAndBorrowStage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_ExampleIDO_STG_Insert_DCCAHiredAndBorrowStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_CA_HiredAndBorrow AS (\n\tWITH cte_DCCAHiredAndBorrow(Sessionid) as\r\n\t(select sessionid from @{pipeline().parameters.SOURCE_DATABASE_WB}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWIncrementalDataQualitySessions where ModifiedDate between '@{pipeline().parameters.SELECTION_START_TS}' and '@{pipeline().parameters.SELECTION_END_TS}' \r\n\tAND Autoshred<> '1' \r\n\t UNION \r\n\t select distinct A.sessionid from @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session A Inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction B on A.SessionID=B.SessionID where B.State<> 'committed' and A.CreateDateTime>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\tSELECT X.LineId, \r\n\tX.CA_StateId, \r\n\tX.CA_HiredAndBorrowId, \r\n\tX.SessionId, \r\n\tX.Id, \r\n\tX.Auditable, \r\n\tX.ExtendedAddlInsured, \r\n\tX.HoldHarmlessAgreement, \r\n\tX.InsuranceRequired, \r\n\tX.PermittedCarrier, \r\n\tX.StatedAmountAudit, \r\n\tX.StatedAmountEstimate, \r\n\tX.Type \r\n\tFROM\r\n\tDC_CA_HiredAndBorrow X\r\n\tinner join\r\n\tcte_DCCAHiredAndBorrow Y on X.Sessionid = Y.Sessionid\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Metadata AS (\n\tSELECT\n\tLineId,\n\tCA_StateId,\n\tCA_HiredAndBorrowId,\n\tSessionId,\n\tId,\n\tAuditable AS i_Auditable,\n\tExtendedAddlInsured AS i_ExtendedAddlInsured,\n\tHoldHarmlessAgreement AS i_HoldHarmlessAgreement,\n\tInsuranceRequired AS i_InsuranceRequired,\n\tPermittedCarrier AS i_PermittedCarrier,\n\t-- *INF*: DECODE(i_Auditable, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_Auditable,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_Auditable,\n\t-- *INF*: DECODE(i_ExtendedAddlInsured, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_ExtendedAddlInsured,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_ExtendedAddlInsured,\n\t-- *INF*: DECODE(i_HoldHarmlessAgreement, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_HoldHarmlessAgreement,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_HoldHarmlessAgreement,\n\t-- *INF*: DECODE(i_InsuranceRequired, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_InsuranceRequired,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_InsuranceRequired,\n\t-- *INF*: DECODE(i_PermittedCarrier, 'T', '1', 'F', '0', NULL)\n\tDECODE(\n\t    i_PermittedCarrier,\n\t    'T', '1',\n\t    'F', '0',\n\t    NULL\n\t) AS o_PermittedCarrier,\n\tStatedAmountAudit,\n\tStatedAmountEstimate,\n\tType,\n\tsysdate AS o_ExtractDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemId\n\tFROM SQ_DC_CA_HiredAndBorrow\n),\nDCCAHiredAndBorrowStage AS (\n\tTRUNCATE TABLE @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCAHiredAndBorrowStage;\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.DCCAHiredAndBorrowStage\n\t(ExtractDate, SourceSystemId, LineId, CA_StateId, CA_HiredAndBorrowId, SessionId, Id, Auditable, ExtendedAddlInsured, HoldHarmlessAgreement, InsuranceRequired, PermittedCarrier, StatedAmountAudit, StatedAmountEstimate, Type)\n\tSELECT \n\to_ExtractDate AS EXTRACTDATE, \n\to_SourceSystemId AS SOURCESYSTEMID, \n\tLINEID, \n\tCA_STATEID, \n\tCA_HIREDANDBORROWID, \n\tSESSIONID, \n\tID, \n\to_Auditable AS AUDITABLE, \n\to_ExtendedAddlInsured AS EXTENDEDADDLINSURED, \n\to_HoldHarmlessAgreement AS HOLDHARMLESSAGREEMENT, \n\to_InsuranceRequired AS INSURANCEREQUIRED, \n\to_PermittedCarrier AS PERMITTEDCARRIER, \n\tSTATEDAMOUNTAUDIT, \n\tSTATEDAMOUNTESTIMATE, \n\tTYPE\n\tFROM EXP_Metadata\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_DATABASE_WB": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Staging/PolicyStaging/"
        },
        "annotations": []
    }
}