{
    "name": "s_m_CMN_DW_Load_CoverageSummary",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_DW_Load_CoverageSummary",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CoverageSummary AS (\n\tSELECT\n\t\tCoverageSummaryId,\n\t\tCoverageSummaryCode,\n\t\tCoverageSummaryDescription\n\tFROM CoverageSummary\n\tWHERE CoverageSummaryCode IS NOT NULL\n),\nEXP_Values AS (\n\tSELECT\n\tCoverageSummaryId AS i_CoverageSummaryId,\n\tCoverageSummaryCode AS i_CoverageSummaryCode,\n\tCoverageSummaryDescription AS i_CoverageSummaryDescription,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: IIF(ISNULL(i_CoverageSummaryId) OR LENGTH(i_CoverageSummaryId)=0, Error('Coverage Summary is missing an ID'), i_CoverageSummaryId)\n\tIFF(\n\t    i_CoverageSummaryId IS NULL OR LENGTH(i_CoverageSummaryId) = 0,\n\t    Error('Coverage Summary is missing an ID'),\n\t    i_CoverageSummaryId\n\t) AS o_CoverageSummaryId,\n\t-- *INF*: IIF(ISNULL(i_CoverageSummaryCode) OR LENGTH(i_CoverageSummaryCode)=0 OR IS_SPACES(i_CoverageSummaryCode), 'N/A', LTRIM(RTRIM(i_CoverageSummaryCode)))\n\tIFF(\n\t    i_CoverageSummaryCode IS NULL\n\t    or LENGTH(i_CoverageSummaryCode) = 0\n\t    or LENGTH(i_CoverageSummaryCode)>0\n\t    and TRIM(i_CoverageSummaryCode)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(i_CoverageSummaryCode))\n\t) AS o_CoverageSummaryCode,\n\t-- *INF*: IIF(ISNULL(i_CoverageSummaryDescription) OR LENGTH(i_CoverageSummaryDescription)=0 OR IS_SPACES(i_CoverageSummaryDescription), 'N/A', LTRIM(RTRIM(i_CoverageSummaryDescription)))\n\tIFF(\n\t    i_CoverageSummaryDescription IS NULL\n\t    or LENGTH(i_CoverageSummaryDescription) = 0\n\t    or LENGTH(i_CoverageSummaryDescription)>0\n\t    and TRIM(i_CoverageSummaryDescription)='',\n\t    'N/A',\n\t    LTRIM(RTRIM(i_CoverageSummaryDescription))\n\t) AS o_CoverageSummaryDescription\n\tFROM SQ_CoverageSummary\n),\nLKP_CoverageSummary AS (\n\tSELECT\n\tCoverageSummaryId,\n\tCoverageSummaryCode,\n\tCoverageSummaryDescription\n\tFROM (\n\t\tSELECT \n\t\t\tCoverageSummaryId,\n\t\t\tCoverageSummaryCode,\n\t\t\tCoverageSummaryDescription\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageSummaryId ORDER BY CoverageSummaryId) = 1\n),\nEXP_ChangeFlag AS (\n\tSELECT\n\tLKP_CoverageSummary.CoverageSummaryId AS lkp_CoverageSummaryId,\n\tLKP_CoverageSummary.CoverageSummaryCode AS lkp_CoverageSummaryCode,\n\tLKP_CoverageSummary.CoverageSummaryDescription AS lkp_CoverageSummaryDescription,\n\tEXP_Values.o_CoverageSummaryId AS CoverageSummaryId,\n\tEXP_Values.o_CoverageSummaryCode AS CoverageSummaryCode,\n\tEXP_Values.o_CoverageSummaryDescription AS CoverageSummaryDescription,\n\tEXP_Values.o_CreatedDate AS CreatedDate,\n\tEXP_Values.o_ModifiedDate AS ModifiedDate,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- ISNULL(lkp_CoverageSummaryId), 1,\r\n\t-- lkp_CoverageSummaryDescription<>CoverageSummaryDescription, 2, \r\n\t-- lkp_CoverageSummaryCode <> CoverageSummaryCode, 2,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    lkp_CoverageSummaryId IS NULL, 1,\n\t    lkp_CoverageSummaryDescription <> CoverageSummaryDescription, 2,\n\t    lkp_CoverageSummaryCode <> CoverageSummaryCode, 2,\n\t    0\n\t) AS o_ChangeFlag\n\tFROM EXP_Values\n\tLEFT JOIN LKP_CoverageSummary\n\tON LKP_CoverageSummary.CoverageSummaryId = EXP_Values.o_CoverageSummaryId\n),\nRTR_Insert_Update_Groups AS (\n\tSELECT\n\tCoverageSummaryId,\n\tCreatedDate,\n\tModifiedDate,\n\tCoverageSummaryCode,\n\tCoverageSummaryDescription,\n\to_ChangeFlag AS ChangeFlag\n\tFROM EXP_ChangeFlag\n),\nRTR_Insert_Update_Groups_INSERT AS (SELECT * FROM RTR_Insert_Update_Groups WHERE ChangeFlag=1),\nRTR_Insert_Update_Groups_UPDATE AS (SELECT * FROM RTR_Insert_Update_Groups WHERE ChangeFlag=2),\nCoverageSummary_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary\n\t(CoverageSummaryId, CreatedDate, ModifiedDate, CoverageSummaryCode, CoverageSummaryDescription)\n\tSELECT \n\tCOVERAGESUMMARYID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGESUMMARYCODE, \n\tCOVERAGESUMMARYDESCRIPTION\n\tFROM RTR_Insert_Update_Groups_INSERT\n),\nUPD_CoverageSummary AS (\n\tSELECT\n\tCoverageSummaryId, \n\tModifiedDate, \n\tCoverageSummaryCode, \n\tCoverageSummaryDescription\n\tFROM RTR_Insert_Update_Groups_UPDATE\n),\nCoverageSummary_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageSummary AS T\n\tUSING UPD_CoverageSummary AS S\n\tON T.CoverageSummaryId = S.CoverageSummaryId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CoverageSummaryCode = S.CoverageSummaryCode, T.CoverageSummaryDescription = S.CoverageSummaryDescription\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "CommonDataWarehouse/"
        },
        "annotations": []
    }
}