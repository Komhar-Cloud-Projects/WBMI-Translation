{
    "name": "m_CLM_DM_LOAD_EOR_autopay_exclude_reason_dim",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DM_LOAD_EOR_autopay_exclude_reason_dim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_eor_autopay_exclude_reason AS (\n\tSELECT \r\n\tCPO.eor_autopay_excl_rsn_id, \r\n\tCPO.eor_autopay_excl_rsn_ak_id, \r\n\tCPO.med_bill_ak_id, \r\n\tCPO.autopay_excl_rsn_code,\r\n\tCPO.eff_from_date \r\n\tFROM  \r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.eor_autopay_exclude_reason CPO \r\n\tWHERE created_date >= '@{pipeline().parameters.SELECTION_START_TS}'\n),\nEXP_default AS (\n\tSELECT\n\tmed_bill_ak_id,\n\tautopay_excl_rsn_code,\n\t-- *INF*: LTRIM(RTRIM(autopay_excl_rsn_code))\r\n\t-- \r\n\t-- \n\tLTRIM(RTRIM(autopay_excl_rsn_code)) AS v_autopay_excl_rsn_code,\n\tv_autopay_excl_rsn_code AS autopay_excl_rsn_code_out,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\teff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59' , 'MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\teor_autopay_excl_rsn_id,\n\teor_autopay_excl_rsn_ak_id\n\tFROM SQ_eor_autopay_exclude_reason\n),\nLKP_Med_Bill_Dim_Id AS (\n\tSELECT\n\tmed_bill_dim_id,\n\tedw_med_bill_ak_id\n\tFROM (\n\t\tSELECT A.med_bill_dim_id as med_bill_dim_id, A.edw_med_bill_ak_id as edw_med_bill_ak_id \r\n\t\t FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.medical_bill_dim A\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_med_bill_ak_id ORDER BY med_bill_dim_id DESC) = 1\n),\nLKP_sup_autopay_exclude_reason AS (\n\tSELECT\n\tautopay_excl_rsn_code,\n\tautopay_excl_rsn_descript,\n\texcl_from_manualpay\n\tFROM (\n\t\tSELECT  B.autopay_excl_rsn_code AS autopay_excl_rsn_code,\r\n\t\t                     B.autopay_excl_rsn_descript AS autopay_excl_rsn_descript ,\r\n\t\t                   B.excl_from_manualpay  AS excl_from_manualpay\r\n\t\t                   \r\n\t\tFROM (\r\n\t\tSELECT  A.autopay_excl_rsn_descript AS autopay_excl_rsn_descript,  \r\n\t\t                   A. excl_from_manualpay   AS excl_from_manualpay,  \r\n\t\t                   LTRIM(RTRIM(A.autopay_excl_rsn_code) )AS autopay_excl_rsn_code \r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_eor_autopay_exclude_reason A\r\n\t\tWHERE crrnt_snpsht_flag =1  \r\n\t\t --- ORDER BY autopay_excl_rsn_code,autopay_excl_rsn_descript,excl_from_manualpay in transform LKP_sup_autopay_exclude_reason\r\n\t\t) B\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY autopay_excl_rsn_code ORDER BY autopay_excl_rsn_code DESC) = 1\n),\nEXP_LKP AS (\n\tSELECT\n\tEXP_default.crrnt_snpsht_flag,\n\tEXP_default.audit_id,\n\tEXP_default.eff_from_date,\n\tEXP_default.eff_to_date,\n\tEXP_default.created_date,\n\tEXP_default.modified_date,\n\tEXP_default.eor_autopay_excl_rsn_id AS edw_eor_autopay_excl_rsn_id,\n\tEXP_default.eor_autopay_excl_rsn_ak_id AS edw_eor_autopay_excl_rsn_ak_id,\n\tEXP_default.med_bill_ak_id AS edw_med_bill_ak_id,\n\tLKP_sup_autopay_exclude_reason.autopay_excl_rsn_code,\n\tLKP_sup_autopay_exclude_reason.autopay_excl_rsn_descript,\n\tLKP_sup_autopay_exclude_reason.excl_from_manualpay,\n\tLKP_Med_Bill_Dim_Id.med_bill_dim_id\n\tFROM EXP_default\n\tLEFT JOIN LKP_Med_Bill_Dim_Id\n\tON LKP_Med_Bill_Dim_Id.edw_med_bill_ak_id = EXP_default.med_bill_ak_id\n\tLEFT JOIN LKP_sup_autopay_exclude_reason\n\tON LKP_sup_autopay_exclude_reason.autopay_excl_rsn_code = EXP_default.autopay_excl_rsn_code_out\n),\nLKP_eor_autopay_exclude_reason_dim AS (\n\tSELECT\n\teor_autopay_excl_rsn_dim_id,\n\tedw_eor_autopay_excl_rsn_ak_id\n\tFROM (\n\t\tSELECT \r\n\t\tA.eor_autopay_excl_rsn_dim_id as eor_autopay_excl_rsn_dim_id, \r\n\t\tA.edw_eor_autopay_excl_rsn_ak_id as edw_eor_autopay_excl_rsn_ak_id\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim A\r\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_eor_autopay_excl_rsn_ak_id ORDER BY eor_autopay_excl_rsn_dim_id DESC) = 1\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tLKP_eor_autopay_exclude_reason_dim.eor_autopay_excl_rsn_dim_id,\n\tEXP_LKP.crrnt_snpsht_flag,\n\tEXP_LKP.audit_id,\n\tEXP_LKP.eff_from_date,\n\tEXP_LKP.eff_to_date,\n\tEXP_LKP.created_date,\n\tEXP_LKP.modified_date,\n\tEXP_LKP.edw_eor_autopay_excl_rsn_id AS eor_autopay_excl_rsn_pk_id,\n\tEXP_LKP.edw_eor_autopay_excl_rsn_ak_id,\n\tLKP_Med_Bill_Dim_Id.med_bill_dim_id,\n\tEXP_LKP.autopay_excl_rsn_code,\n\tEXP_LKP.autopay_excl_rsn_descript,\n\tEXP_LKP.excl_from_manualpay\n\tFROM EXP_LKP\n\tLEFT JOIN LKP_Med_Bill_Dim_Id\n\tON LKP_Med_Bill_Dim_Id.edw_med_bill_ak_id = EXP_default.med_bill_ak_id\n\tLEFT JOIN LKP_eor_autopay_exclude_reason_dim\n\tON LKP_eor_autopay_exclude_reason_dim.edw_eor_autopay_excl_rsn_ak_id = EXP_LKP.edw_eor_autopay_excl_rsn_ak_id\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE IIF(ISNULL(eor_autopay_excl_rsn_dim_id),TRUE,FALSE)),\nRTR_INSERT_UPDATE_DEFAULT1 AS (SELECT * FROM RTR_INSERT_UPDATE WHERE NOT ( (IIF(ISNULL(eor_autopay_excl_rsn_dim_id),TRUE,FALSE)) )),\nUPD_update AS (\n\tSELECT\n\teor_autopay_excl_rsn_dim_id AS eor_autopay_excl_rsn_dim_id2, \n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag2, \n\taudit_id AS audit_id2, \n\teff_from_date AS eff_from_date2, \n\teff_to_date AS eff_to_date2, \n\tcreated_date AS created_date2, \n\tmodified_date AS modified_date2, \n\teor_autopay_excl_rsn_pk_id AS eor_autopay_excl_rsn_pk_id2, \n\tedw_eor_autopay_excl_rsn_ak_id AS edw_eor_autopay_excl_rsn_ak_id2, \n\tmed_bill_dim_id AS med_bill_dim_id2, \n\tautopay_excl_rsn_code AS autopay_excl_rsn_code2, \n\tautopay_excl_rsn_descript AS autopay_excl_rsn_descript2, \n\texcl_from_manualpay AS excl_from_manualpay2\n\tFROM RTR_INSERT_UPDATE_DEFAULT1\n),\neor_autopay_exclude_reason_dim_UPD2 AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim AS T\n\tUSING UPD_update AS S\n\tON T.eor_autopay_excl_rsn_dim_id = S.eor_autopay_excl_rsn_dim_id2\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag2, T.audit_id = S.audit_id2, T.eff_from_date = S.eff_from_date2, T.eff_to_date = S.eff_to_date2, T.created_date = S.created_date2, T.modified_date = S.modified_date2, T.edw_eor_autopay_excl_rsn_pk_id = S.eor_autopay_excl_rsn_pk_id2, T.edw_eor_autopay_excl_rsn_ak_id = S.edw_eor_autopay_excl_rsn_ak_id2, T.med_bill_dim_id = S.med_bill_dim_id2, T.autopay_excl_rsn_code = S.autopay_excl_rsn_code2, T.autopay_excl_rsn_descript = S.autopay_excl_rsn_descript2, T.excl_from_manualpay = S.excl_from_manualpay2\n),\nUPD_Insert AS (\n\tSELECT\n\tcrrnt_snpsht_flag AS crrnt_snpsht_flag1, \n\taudit_id AS audit_id1, \n\teff_from_date AS eff_from_date1, \n\teff_to_date AS eff_to_date1, \n\tcreated_date AS created_date1, \n\tmodified_date AS modified_date1, \n\teor_autopay_excl_rsn_pk_id AS eor_autopay_excl_rsn_pk_id1, \n\tedw_eor_autopay_excl_rsn_ak_id AS edw_eor_autopay_excl_rsn_ak_id1, \n\tmed_bill_dim_id AS med_bill_dim_id1, \n\tautopay_excl_rsn_code AS autopay_excl_rsn_code1, \n\tautopay_excl_rsn_descript AS autopay_excl_rsn_descript1, \n\texcl_from_manualpay AS excl_from_manualpay1\n\tFROM RTR_INSERT_UPDATE_INSERT\n),\neor_autopay_exclude_reason_dim_INS AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, created_date, modified_date, edw_eor_autopay_excl_rsn_pk_id, edw_eor_autopay_excl_rsn_ak_id, med_bill_dim_id, autopay_excl_rsn_code, autopay_excl_rsn_descript, excl_from_manualpay)\n\tSELECT \n\tcrrnt_snpsht_flag1 AS CRRNT_SNPSHT_FLAG, \n\taudit_id1 AS AUDIT_ID, \n\teff_from_date1 AS EFF_FROM_DATE, \n\teff_to_date1 AS EFF_TO_DATE, \n\tcreated_date1 AS CREATED_DATE, \n\tmodified_date1 AS MODIFIED_DATE, \n\teor_autopay_excl_rsn_pk_id1 AS EDW_EOR_AUTOPAY_EXCL_RSN_PK_ID, \n\tedw_eor_autopay_excl_rsn_ak_id1 AS EDW_EOR_AUTOPAY_EXCL_RSN_AK_ID, \n\tmed_bill_dim_id1 AS MED_BILL_DIM_ID, \n\tautopay_excl_rsn_code1 AS AUTOPAY_EXCL_RSN_CODE, \n\tautopay_excl_rsn_descript1 AS AUTOPAY_EXCL_RSN_DESCRIPT, \n\texcl_from_manualpay1 AS EXCL_FROM_MANUALPAY\n\tFROM UPD_Insert\n),\nSQ_eor_autopay_exclude_reason_dim AS (\n\tSELECT A.eor_autopay_excl_rsn_dim_id, \r\n\t                          A.eff_from_date, \r\n\t               A.eff_to_date ,\r\n\t        A.edw_eor_autopay_excl_rsn_ak_id\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim A  \r\n\tWHERE \r\n\tEXISTS\r\n\t(\r\n\tSELECT  1 FROM \r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim B \r\n\tWHERE CRRNT_SNPSHT_FLAG = 1 AND  \r\n\tA.edw_eor_autopay_excl_rsn_ak_id = B.edw_eor_autopay_excl_rsn_ak_id\r\n\tGROUP BY   B.edw_eor_autopay_excl_rsn_ak_id\r\n\tHAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY   A.edw_eor_autopay_excl_rsn_ak_id,\r\n\t  A.eff_from_date DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\teor_autopay_excl_rsn_dim_id,\n\tedw_eor_autopay_excl_rsn_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\t\r\n\t--       edw_eor_autopay_excl_rsn_ak_id = v_PREV_ROW_edw_eor_autopay_excl_rsn_ak_id    \r\n\t--        , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\tedw_eor_autopay_excl_rsn_ak_id = v_PREV_ROW_edw_eor_autopay_excl_rsn_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tedw_eor_autopay_excl_rsn_ak_id AS v_PREV_ROW_edw_eor_autopay_excl_rsn_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_eor_autopay_exclude_reason_dim\n),\nFILTRANS AS (\n\tSELECT\n\teor_autopay_excl_rsn_dim_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\n),\nUPD_EFF_TO_DATE AS (\n\tSELECT\n\teor_autopay_excl_rsn_dim_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FILTRANS\n),\neor_autopay_exclude_reason_dim_UPD1 AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.eor_autopay_exclude_reason_dim AS T\n\tUSING UPD_EFF_TO_DATE AS S\n\tON T.eor_autopay_excl_rsn_dim_id = S.eor_autopay_excl_rsn_dim_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246513"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905536"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604587"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 03:42:18"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 04:16:08"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "folder": {
            "name": "Claims DataMart/"
        },
        "annotations": []
    }
}