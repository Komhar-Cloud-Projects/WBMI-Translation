{
    "name": "s_m_CLM_DW_LOAD_Claimant_Cov_Dtl_Reserve_Calc",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claimant_Cov_Dtl_Reserve_Calc",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Claimant_cov_dtl_rsrv_calc_open_closed AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tIN_claimant_cov_det_ak_id,\n\tIN_financial_type_code,\n\tIN_reserve_date_type,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date_type\n\tFROM (\n\t\tSELECT \n\t\t\tclaimant_cov_det_reserve_calculation_id,\n\t\t\tIN_claimant_cov_det_ak_id,\n\t\t\tIN_financial_type_code,\n\t\t\tIN_reserve_date_type,\n\t\t\tclaimant_cov_det_ak_id,\n\t\t\tfinancial_type_code,\n\t\t\treserve_date_type\n\t\tFROM claimant_coverage_detail_reserve_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,financial_type_code,reserve_date_type ORDER BY claimant_cov_det_reserve_calculation_id) = 1\n),\nLKP_claimant_cov_dtl_rsrv_calc AS (\n\tSELECT\n\tclaimant_cov_det_reserve_calculation_id,\n\tIN_claimant_cov_det_ak_id,\n\tIN_financial_type_code,\n\tIN_reserve_date,\n\tIN_reserve_date_type,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type\n\tFROM (\n\t\tSELECT \n\t\t\tclaimant_cov_det_reserve_calculation_id,\n\t\t\tIN_claimant_cov_det_ak_id,\n\t\t\tIN_financial_type_code,\n\t\t\tIN_reserve_date,\n\t\t\tIN_reserve_date_type,\n\t\t\tclaimant_cov_det_ak_id,\n\t\t\tfinancial_type_code,\n\t\t\treserve_date,\n\t\t\treserve_date_type\n\t\tFROM claimant_coverage_detail_reserve_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,financial_type_code,reserve_date,reserve_date_type ORDER BY claimant_cov_det_reserve_calculation_id) = 1\n),\nSQ_claim_transaction AS (\n\tSELECT claim_transaction.claimant_cov_det_ak_id, claim_transaction.cause_of_loss, claim_transaction.reserve_ctgry, claim_transaction.financial_type_code, claim_transaction.trans_date, claim_transaction.trans_code, claim_transaction.source_sys_id \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction claim_transaction \r\n\tWHERE claim_transaction.modified_date > = '@{pipeline().parameters.SELECTION_START_TS}'\r\n\tAND claim_transaction.trans_offset_onset_ind  in ('N','N/A')\r\n\tORDER BY\r\n\t claim_transaction.claimant_cov_det_ak_id, claim_transaction.cause_of_loss, claim_transaction.reserve_ctgry, claim_transaction.financial_type_code, claim_transaction.trans_date\n),\nRTR_Grp_Fin_Typ_Cds AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttrans_code,\n\ttrans_date,\n\tsource_sys_id\n\tFROM SQ_claim_transaction\n),\nRTR_Grp_Fin_Typ_Cds_Grp_Open AS (SELECT * FROM RTR_Grp_Fin_Typ_Cds WHERE IN(trans_code, '90','91','92','23','20','33','30','22','40', '66')),\nRTR_Grp_Fin_Typ_Cds_Grp_Reopen AS (SELECT * FROM RTR_Grp_Fin_Typ_Cds WHERE (\r\n(source_sys_id = 'PMS' AND financial_type_code = 'D' AND IN(trans_code, '66', '23') ) OR \r\n(source_sys_id = 'PMS' AND IN(financial_type_code, 'E', 'S', 'B', 'R') AND \r\ntrans_code = '92') OR \r\n(source_sys_id = 'EXCEED' AND IN(financial_type_code, 'D', 'E', 'S', 'B', 'R') \r\nAND trans_code = '66')\r\n)),\nRTR_Grp_Fin_Typ_Cds_Grp_NoticeOnly AS (SELECT * FROM RTR_Grp_Fin_Typ_Cds WHERE trans_code = '43'),\nRTR_Grp_Fin_Typ_Cds_Grp_Closed AS (SELECT * FROM RTR_Grp_Fin_Typ_Cds WHERE IN(trans_code, '22','23','40','41','42','32','33','30', '20')),\nRTR_Grp_Fin_Typ_Cds_Grp_Reclosed AS (SELECT * FROM RTR_Grp_Fin_Typ_Cds WHERE (\r\n(source_sys_id = 'PMS' AND financial_type_code = 'D' AND IN(trans_code, '22', '40','41', '42', '23') ) OR \r\n(source_sys_id = 'PMS' AND financial_type_code = 'E' AND IN(trans_code, '22', '40','41', '42')) OR \r\n(source_sys_id = 'PMS' AND IN(financial_type_code, 'S', 'B', 'R') AND IN(trans_code, '32', '40', '41', '42', '30'))\r\nOR(source_sys_id = 'EXCEED' AND IN(financial_type_code, 'D', 'E') AND IN(trans_code, '22', '40','41', '42'))\r\nOR (source_sys_id = 'EXCEED' AND IN(financial_type_code, 'S', 'B', 'R') AND IN(trans_code, '32', '40', '41', '42', '30'))\r\n)\r\n\r\n\r\n\r\n--IN(trans_code, '22', '40', '41', '42', '32', '30')),\nEXP_Set_values_reopen AS (\n\tSELECT\n\ttrans_date AS reserve_date,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\t'4REOPEN' AS reserve_date_type,\n\treserve_ctgry,\n\tsource_sys_id,\n\t'O' AS financial_type_status_code,\n\ttrans_code,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id,  financial_type_code, reserve_date, '4REOPEN')\n\tLKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN.claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id,\n\t1 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM RTR_Grp_Fin_Typ_Cds_Grp_Reopen\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_RSRV_CALC LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN\n\tON LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN.reserve_date = reserve_date\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_reserve_date_4REOPEN.reserve_date_type = '4REOPEN'\n\n),\nFIL_Remove_existing_Reopens AS (\n\tSELECT\n\treserve_date, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\tcause_of_loss, \n\treserve_date_type, \n\treserve_ctgry, \n\tsource_sys_id, \n\ttrans_code3_reopen, \n\tfinancial_type_status_code, \n\ttrans_code, \n\tlkp_claimant_cov_det_reserve_calculation_id, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_Set_values_reopen\n\tWHERE IIF(ISNULL(lkp_claimant_cov_det_reserve_calculation_id), TRUE, FALSE)\n),\nAGG_remove_duplicates_reopen AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tcause_of_loss, \n\tfinancial_type_code, \n\treserve_date, \n\treserve_ctgry, \n\treserve_date_type, \n\tsource_sys_id, \n\ttrans_code3_reopen, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date\n\tFROM FIL_Remove_existing_Reopens\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id, financial_type_code, reserve_date ORDER BY NULL) = 1\n),\nSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclmt_cov_dtl_rsrv_calc_reopen AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\tRESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM AGG_remove_duplicates_reopen\n),\nEXP_Set_values_Reclosed AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\ttrans_code,\n\ttrans_date,\n\treserve_ctgry,\n\tsource_sys_id,\n\t'5CLOSEDAFTERREOPEN' AS reserve_date_type,\n\t'C' AS financial_type_status_code,\n\t-- *INF*: IIF(IN(trans_code, '40', '30'), 100, 1)\n\tIFF(IN(trans_code, '40', '30'), 100, 1) AS logical_flag,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id,  financial_type_code, trans_date, '5CLOSEDAFTERREOPEN')\n\tLKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN.claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\ttrans_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM RTR_Grp_Fin_Typ_Cds_Grp_Reclosed\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_RSRV_CALC LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN\n\tON LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN.reserve_date = trans_date\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_5CLOSEDAFTERREOPEN.reserve_date_type = '5CLOSEDAFTERREOPEN'\n\n),\nFIL_Remove_existing_reclosed AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\tcause_of_loss, \n\ttrans_code, \n\ttrans_date, \n\treserve_ctgry, \n\tsource_sys_id, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tlkp_claimant_cov_det_reserve_calculation_id, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_Set_values_Reclosed\n\tWHERE IIF(ISNULL(lkp_claimant_cov_det_reserve_calculation_id), TRUE, FALSE)\n),\nAGG_remove_duplicates_reclosed AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tcause_of_loss, \n\tfinancial_type_code, \n\ttrans_date, \n\treserve_ctgry, \n\ttrans_code, \n\tsource_sys_id, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date\n\tFROM FIL_Remove_existing_reclosed\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id, financial_type_code, trans_date ORDER BY NULL) = 1\n),\nclmt_cov_dtl_rsrv_calc_reclosed AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\ttrans_date AS RESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM AGG_remove_duplicates_reclosed\n),\nEXP_set_values_notice_only AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttrans_code,\n\ttrans_date,\n\tsource_sys_id,\n\t'1NOTICEONLY' AS reserve_date_type,\n\t'N' AS financial_type_status_code,\n\t1 AS logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\ttrans_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM RTR_Grp_Fin_Typ_Cds_Grp_NoticeOnly\n),\nLKP_claim_transaction AS (\n\tSELECT\n\tIN_claimant_cov_det_ak_id,\n\tIN_financial_type_code,\n\tIN_trans_date,\n\tclaim_trans_id,\n\tclaim_trans_ak_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\ttrans_code,\n\ttrans_date\n\tFROM (\n\t\tSELECT \n\t\t\tIN_claimant_cov_det_ak_id,\n\t\t\tIN_financial_type_code,\n\t\t\tIN_trans_date,\n\t\t\tclaim_trans_id,\n\t\t\tclaim_trans_ak_id,\n\t\t\tclaimant_cov_det_ak_id,\n\t\t\tfinancial_type_code,\n\t\t\ttrans_code,\n\t\t\ttrans_date\n\t\tFROM claim_transaction\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_cov_det_ak_id,financial_type_code,trans_date ORDER BY IN_claimant_cov_det_ak_id) = 1\n),\nFIL_Non_notice_only AS (\n\tSELECT\n\tLKP_claim_transaction.claim_trans_id, \n\tEXP_set_values_notice_only.claimant_cov_det_ak_id, \n\tEXP_set_values_notice_only.financial_type_code, \n\tEXP_set_values_notice_only.cause_of_loss, \n\tEXP_set_values_notice_only.reserve_ctgry, \n\tEXP_set_values_notice_only.trans_code, \n\tEXP_set_values_notice_only.trans_date, \n\tEXP_set_values_notice_only.source_sys_id, \n\tEXP_set_values_notice_only.reserve_date_type, \n\tEXP_set_values_notice_only.financial_type_status_code, \n\tEXP_set_values_notice_only.logical_flag, \n\tEXP_set_values_notice_only.crrnt_snpsht_flag, \n\tEXP_set_values_notice_only.audit_id, \n\tEXP_set_values_notice_only.eff_from_date, \n\tEXP_set_values_notice_only.eff_to_date, \n\tEXP_set_values_notice_only.created_date, \n\tEXP_set_values_notice_only.modified_date\n\tFROM EXP_set_values_notice_only\n\tLEFT JOIN LKP_claim_transaction\n\tON LKP_claim_transaction.claimant_cov_det_ak_id = EXP_set_values_notice_only.claimant_cov_det_ak_id AND LKP_claim_transaction.financial_type_code = EXP_set_values_notice_only.financial_type_code AND LKP_claim_transaction.trans_date < EXP_set_values_notice_only.trans_date\n\tWHERE ISNULL(claim_trans_id)\n),\nEXP_find_existing_notice_only AS (\n\tSELECT\n\tclaim_trans_id,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttrans_code,\n\ttrans_date,\n\tsource_sys_id,\n\treserve_date_type,\n\tfinancial_type_status_code,\n\tlogical_flag,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_RSRV_CALC(claimant_cov_det_ak_id,  financial_type_code, trans_date, '1NOTICEONLY')\n\tLKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY.claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date\n\tFROM FIL_Non_notice_only\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_RSRV_CALC LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY\n\tON LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY.reserve_date = trans_date\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_claimant_cov_det_ak_id_financial_type_code_trans_date_1NOTICEONLY.reserve_date_type = '1NOTICEONLY'\n\n),\nFIL_remove_existing_notice_only AS (\n\tSELECT\n\tclaim_trans_id, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\tcause_of_loss, \n\treserve_ctgry, \n\ttrans_code, \n\ttrans_date, \n\tsource_sys_id, \n\treserve_date_type, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tlkp_claimant_cov_det_reserve_calculation_id, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date\n\tFROM EXP_find_existing_notice_only\n\tWHERE IIF(ISNULL(lkp_claimant_cov_det_reserve_calculation_id), TRUE, FALSE)\n),\nclmt_cov_dtl_rsrv_calc_notice_only AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\ttrans_date AS RESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM FIL_remove_existing_notice_only\n),\nAGG_Cov_Fin_Txn_Cd_closed AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tcause_of_loss, \n\treserve_ctgry, \n\tfinancial_type_code, \n\ttrans_code, \n\ttrans_date, \n\tMIN(trans_date, trans_code = '22') AS trans_date_op_22, \n\tMIN(trans_date, trans_code = '23') AS trans_date_op_23, \n\tMIN(trans_date, trans_code = '41') AS trans_date_op_41, \n\tMIN(trans_date, trans_code = '42') AS trans_date_op_42, \n\tMIN(trans_date, trans_code = '32') AS trans_date_op_32, \n\tMIN(trans_date, trans_code = '33') AS trans_date_op_33, \n\tMIN(trans_date, trans_code = '30') AS trans_date_op_30, \n\tMIN(trans_date, NOT IN(trans_code, '20', '30', '40')) AS trans_date_op, \n\tMAX(trans_date, IN(trans_code, '20', '30', '40')) AS trans_date_op_20_40, \n\tsource_sys_id\n\tFROM RTR_Grp_Fin_Typ_Cds_Grp_Closed\n\tGROUP BY claimant_cov_det_ak_id, financial_type_code\n),\nEXP_Concat_Dates_Closed AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttrans_code,\n\ttrans_date_op_22 AS trans_date_22_op,\n\ttrans_date_op_23 AS trans_date_23_op,\n\ttrans_date_op_41 AS trans_date_41_op,\n\ttrans_date_op_42 AS trans_date_42_op,\n\ttrans_date_op_32 AS trans_date_32_op,\n\ttrans_date_op_33 AS trans_date_33_op,\n\ttrans_date_op_30 AS trans_date_30_op,\n\t-- *INF*: IIF(NOT ISNULL(trans_date_23_op), trans_date_23_op, IIF(NOT ISNULL(trans_date_22_op), trans_date_22_op, IIF(NOT ISNULL(trans_date_41_op), trans_date_41_op, IIF(NOT ISNULL(trans_date_42_op), trans_date_42_op, IIF(NOT ISNULL(trans_date_20_40_op), trans_date_20_40_op)))))\r\n\t-- \r\n\t-- \n\tIFF(NOT trans_date_23_op IS NULL, trans_date_23_op, IFF(NOT trans_date_22_op IS NULL, trans_date_22_op, IFF(NOT trans_date_41_op IS NULL, trans_date_41_op, IFF(NOT trans_date_42_op IS NULL, trans_date_42_op, IFF(NOT trans_date_20_40_op IS NULL, trans_date_20_40_op))))) AS close_dt_d_e,\n\t-- *INF*: IIF(NOT ISNULL(trans_date_23_op), trans_date_23_op, IIF(NOT ISNULL(trans_date_32_op), trans_date_32_op, IIF(NOT ISNULL(trans_date_33_op), trans_date_33_op, IIF(NOT ISNULL(trans_date_20_40_op), trans_date_20_40_op, IIF(NOT ISNULL(trans_date_41_op), trans_date_41_op, IIF(NOT ISNULL(trans_date_42_op), trans_date_42_op, IIF(NOT ISNULL(trans_date_30_op), trans_date_30_op, IIF(NOT ISNULL(trans_date_22_op), trans_date_22_op))))))))\r\n\t-- \r\n\t-- --IIF(NOT ISNULL(trans_date_32_op),trans_date_32_op,IIF(NOT ISNULL(trans_date_33_op),trans_date_33_op,IIF(NOT ISNULL(trans_date_20_40_op),trans_date_20_40_op,IIF(NOT ISNULL(trans_date_41_op),trans_date_41_op,IIF(NOT ISNULL(trans_date_42_op),trans_date_42_op,IIF(NOT ISNULL(trans_date_30_op),trans_date_30_op, IIF(NOT ISNULL(trans_date_23_op), trans_date_23_op, IIF(NOT ISNULL(trans_date_22_op), trans_date_22_op))))))))\n\tIFF(NOT trans_date_23_op IS NULL, trans_date_23_op, IFF(NOT trans_date_32_op IS NULL, trans_date_32_op, IFF(NOT trans_date_33_op IS NULL, trans_date_33_op, IFF(NOT trans_date_20_40_op IS NULL, trans_date_20_40_op, IFF(NOT trans_date_41_op IS NULL, trans_date_41_op, IFF(NOT trans_date_42_op IS NULL, trans_date_42_op, IFF(NOT trans_date_30_op IS NULL, trans_date_30_op, IFF(NOT trans_date_22_op IS NULL, trans_date_22_op)))))))) AS close_dt_s_b_r,\n\ttrans_date_op,\n\ttrans_date_op_20_40 AS trans_date_20_40_op,\n\t-- *INF*: IIF(NOT ISNULL(trans_date_op), trans_date_op, trans_date_20_40_op)\n\tIFF(NOT trans_date_op IS NULL, trans_date_op, trans_date_20_40_op) AS close_dt,\n\tsource_sys_id\n\tFROM AGG_Cov_Fin_Txn_Cd_closed\n),\nEXP_set_default_values_closed AS (\n\tSELECT\n\t'3CLOSED' AS reserve_date_type,\n\tclose_dt AS reserve_date,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\treserve_ctgry,\n\ttrans_code,\n\tcause_of_loss,\n\tsource_sys_id,\n\t1 AS Crrnt_SnapSht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsysdate AS created_date,\n\tsysdate AS modified_date,\n\t'C' AS financial_type_status_code,\n\t1 AS logical_flag,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED(claimant_cov_det_ak_id,  financial_type_code, '3CLOSED')\r\n\t-- \r\n\t-- --:LKP.LKP_CLAM_COV_DTL_RSRV_CALC_OPEN_CLOSED(claimant_cov_det_ak_id, cause_of_loss, financial_type_code, 'CLOSED')\n\tLKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_3CLOSED.claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id\n\tFROM EXP_Concat_Dates_Closed\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_3CLOSED\n\tON LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_3CLOSED.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_3CLOSED.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_3CLOSED.reserve_date_type = '3CLOSED'\n\n),\nRTR_existing_closed AS (\n\tSELECT\n\treserve_date_type,\n\treserve_date,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\ttrans_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\tsource_sys_id,\n\tCrrnt_SnapSht_Flag,\n\tAUDIT_ID,\n\teff_from_date,\n\teff_to_date,\n\tcreated_date,\n\tmodified_date,\n\tfinancial_type_status_code,\n\tlogical_flag,\n\tlkp_claimant_cov_det_reserve_calculation_id\n\tFROM EXP_set_default_values_closed\n),\nRTR_existing_closed_INSERT AS (SELECT * FROM RTR_existing_closed WHERE ISNULL(lkp_claimant_cov_det_reserve_calculation_id)),\nRTR_existing_closed_UPDATE AS (SELECT * FROM RTR_existing_closed WHERE FALSE\r\n\r\n--NOT ISNULL(lkp_claimant_cov_det_reserve_calculation_id) AND IN(trans_code, '20','30', '40')),\nUPD_clmnt_cov_detl_rsrv_clac_closed_insert AS (\n\tSELECT\n\treserve_date_type, \n\treserve_date, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\ttrans_code, \n\tcause_of_loss, \n\treserve_ctgry, \n\tsource_sys_id, \n\tCrrnt_SnapSht_Flag, \n\tAUDIT_ID, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tlkp_claimant_cov_det_reserve_calculation_id\n\tFROM RTR_existing_closed_INSERT\n),\nclmt_cov_dtl_rsrv_calc_closed_insert AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\tRESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM UPD_clmnt_cov_detl_rsrv_clac_closed_insert\n),\nUPD_clmnt_cov_detl_rsrv_clac_closed_update AS (\n\tSELECT\n\treserve_date_type AS reserve_date_type3, \n\treserve_date AS reserve_date3, \n\tclaimant_cov_det_ak_id AS claimant_cov_det_ak_id3, \n\tfinancial_type_code AS financial_type_code3, \n\ttrans_code AS trans_code3, \n\tcause_of_loss AS cause_of_loss3, \n\tsource_sys_id AS source_sys_id3, \n\tCrrnt_SnapSht_Flag AS Crrnt_SnapSht_Flag3, \n\tAUDIT_ID AS AUDIT_ID3, \n\teff_from_date AS eff_from_date3, \n\teff_to_date AS eff_to_date3, \n\tcreated_date AS created_date3, \n\tmodified_date AS modified_date3, \n\tfinancial_type_status_code AS stat_fin_typ_cd_op3, \n\tlogical_flag AS logical_flag3, \n\tlkp_claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id3\n\tFROM RTR_existing_closed_UPDATE\n),\nclmt_cov_dtl_rsrv_calc_closed_update AS (\n\tMERGE INTO claimant_coverage_detail_reserve_calculation AS T\n\tUSING UPD_clmnt_cov_detl_rsrv_clac_closed_update AS S\n\tON T.claimant_cov_det_reserve_calculation_id = S.lkp_claimant_cov_det_reserve_calculation_id3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.reserve_date = S.reserve_date3, T.modified_date = S.modified_date3\n),\nAGG_Cov_Fin_Txn_Cd_open AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tcause_of_loss, \n\treserve_ctgry, \n\tfinancial_type_code, \n\ttrans_code, \n\ttrans_date, \n\tMIN(trans_date, trans_code = '90') AS trans_date_op_90, \n\tMIN(trans_date, trans_code = '91') AS trans_date_op_91, \n\tMIN(trans_date, trans_code = '92') AS trans_date_op_92, \n\tMIN(trans_date, trans_code = '23') AS trans_date_op_23, \n\tMIN(trans_date, in(trans_code, '20', '40')) AS trans_date_op_20_40, \n\tMIN(trans_date, trans_code = '33') AS trans_date_op_33, \n\tMIN(trans_date, trans_code = '30') AS trans_date_op_30, \n\tMIN(trans_date, trans_code = '22') AS trans_date_op_22, \n\tMIN(trans_date, trans_code = '66') AS trans_date_op_66, \n\tMIN(trans_date) AS trans_date_op, \n\tsource_sys_id\n\tFROM RTR_Grp_Fin_Typ_Cds_Grp_Open\n\tGROUP BY claimant_cov_det_ak_id, financial_type_code\n),\nEXP_Concat_Dates_Open AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\ttrans_date_op_90 AS trans_date_90_op,\n\ttrans_date_op_91 AS trans_date_91_op,\n\ttrans_date_op_92 AS trans_date_92_op,\n\ttrans_date_op_23 AS trans_date_23_op,\n\ttrans_date_op_20_40 AS trans_date_20_40_op,\n\ttrans_date_op_66,\n\ttrans_date_op_33 AS trans_date_33_op,\n\ttrans_date_op_30 AS trans_date_30_op,\n\ttrans_date_op_22 AS trans_date_22_op,\n\ttrans_date_op,\n\t-- *INF*: IIF(NOT ISNULL(trans_date_23_op),trans_date_23_op,IIF(NOT ISNULL(trans_date_90_op),trans_date_90_op,IIF(NOT ISNULL(trans_date_91_op),trans_date_91_op,IIF(NOT ISNULL(trans_date_92_op),trans_date_92_op,IIF(NOT ISNULL(trans_date_20_40_op),trans_date_20_40_op, IIF(NOT ISNULL(trans_date_op_66), trans_date_op_66, IIF(NOT ISNULL(trans_date_22_op), trans_date_22_op)))))))\n\tIFF(NOT trans_date_23_op IS NULL, trans_date_23_op, IFF(NOT trans_date_90_op IS NULL, trans_date_90_op, IFF(NOT trans_date_91_op IS NULL, trans_date_91_op, IFF(NOT trans_date_92_op IS NULL, trans_date_92_op, IFF(NOT trans_date_20_40_op IS NULL, trans_date_20_40_op, IFF(NOT trans_date_op_66 IS NULL, trans_date_op_66, IFF(NOT trans_date_22_op IS NULL, trans_date_22_op))))))) AS open_dt_d_e,\n\t-- *INF*: IIF(NOT ISNULL(trans_date_90_op),trans_date_90_op,IIF(NOT ISNULL(trans_date_91_op),trans_date_91_op,IIF(NOT ISNULL(trans_date_92_op),trans_date_92_op,IIF(NOT ISNULL(trans_date_33_op),trans_date_33_op,IIF(NOT ISNULL(trans_date_30_op),trans_date_30_op, IIF(NOT ISNULL(trans_date_20_40_op), trans_date_20_40_op, IIF(NOT ISNULL(trans_date_op_66), trans_date_op_66, IIF(NOT ISNULL(trans_date_22_op), trans_date_22_op, IIF(NOT ISNULL(trans_date_23_op), trans_date_23_op)))))))))\n\tIFF(NOT trans_date_90_op IS NULL, trans_date_90_op, IFF(NOT trans_date_91_op IS NULL, trans_date_91_op, IFF(NOT trans_date_92_op IS NULL, trans_date_92_op, IFF(NOT trans_date_33_op IS NULL, trans_date_33_op, IFF(NOT trans_date_30_op IS NULL, trans_date_30_op, IFF(NOT trans_date_20_40_op IS NULL, trans_date_20_40_op, IFF(NOT trans_date_op_66 IS NULL, trans_date_op_66, IFF(NOT trans_date_22_op IS NULL, trans_date_22_op, IFF(NOT trans_date_23_op IS NULL, trans_date_23_op))))))))) AS open_dt_s_b_r,\n\t-- *INF*: IIF( IN(financial_type_code, 'S','B','R'), open_dt_s_b_r, open_dt_d_e)\n\tIFF(IN(financial_type_code, 'S', 'B', 'R'), open_dt_s_b_r, open_dt_d_e) AS open_dt,\n\tsource_sys_id\n\tFROM AGG_Cov_Fin_Txn_Cd_open\n),\nEXP_set_default_values_open AS (\n\tSELECT\n\t'2OPEN' AS reserve_date_type,\n\ttrans_date_op AS reserve_date,\n\tclaimant_cov_det_ak_id,\n\tfinancial_type_code,\n\tcause_of_loss,\n\treserve_ctgry,\n\tsource_sys_id,\n\t1 AS Crrnt_SnapSht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsysdate AS created_date,\n\tsysdate AS modified_date,\n\t'O' AS financial_type_status_code,\n\t1 AS logical_flag,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED(claimant_cov_det_ak_id,  financial_type_code, '2OPEN')\r\n\t-- \r\n\t-- --:LKP.LKP_CLAM_COV_DTL_RSRV_CALC_OPEN_CLOSED(claimant_cov_det_ak_id,cause_of_loss,financial_type_code,'OPEN')\n\tLKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_2OPEN.claimant_cov_det_reserve_calculation_id AS lkp_claimant_cov_det_reserve_calculation_id\n\tFROM EXP_Concat_Dates_Open\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_2OPEN\n\tON LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_2OPEN.claimant_cov_det_ak_id = claimant_cov_det_ak_id\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_2OPEN.financial_type_code = financial_type_code\n\tAND LKP_CLAIMANT_COV_DTL_RSRV_CALC_OPEN_CLOSED_claimant_cov_det_ak_id_financial_type_code_2OPEN.reserve_date_type = '2OPEN'\n\n),\nFIL_existing_opens AS (\n\tSELECT\n\treserve_date_type, \n\treserve_date, \n\tclaimant_cov_det_ak_id, \n\tfinancial_type_code, \n\tcause_of_loss, \n\treserve_ctgry, \n\tsource_sys_id, \n\tCrrnt_SnapSht_Flag, \n\tAUDIT_ID, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tfinancial_type_status_code, \n\tlogical_flag, \n\tlkp_claimant_cov_det_reserve_calculation_id\n\tFROM EXP_set_default_values_open\n\tWHERE IIF(ISNULL(lkp_claimant_cov_det_reserve_calculation_id), TRUE, FALSE)\n),\nclmt_cov_dtl_rsrv_calc_open AS (\n\tINSERT INTO claimant_coverage_detail_reserve_calculation\n\t(claimant_cov_det_reserve_calculation_ak_id, claimant_cov_det_ak_id, financial_type_code, reserve_date, reserve_date_type, financial_type_status_code, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Clmt_Cov_Dtl_Rsrv_Calc_Open_Close_AK_ID.NEXTVAL AS CLAIMANT_COV_DET_RESERVE_CALCULATION_AK_ID, \n\tCLAIMANT_COV_DET_AK_ID, \n\tFINANCIAL_TYPE_CODE, \n\tRESERVE_DATE, \n\tRESERVE_DATE_TYPE, \n\tFINANCIAL_TYPE_STATUS_CODE, \n\tLOGICAL_FLAG, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM FIL_existing_opens\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246506"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905523"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604392"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:25"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:03"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}