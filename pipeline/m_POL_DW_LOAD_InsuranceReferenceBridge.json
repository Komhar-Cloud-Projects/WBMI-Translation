{
    "name": "m_POL_DW_LOAD_InsuranceReferenceBridge",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_InsuranceReferenceBridge",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_InsuranceReferenceBridge AS (\n\tSELECT\n\t\tInsuranceReferenceBridgeId,\n\t\tModifiedUserId,\n\t\tModifiedDate,\n\t\tEffectiveDate,\n\t\tExpirationDate,\n\t\tStrategicProfitCenterId,\n\t\tInsuranceSegmentId,\n\t\tPolicyOfferingId,\n\t\tLineOfBusinessId,\n\t\tProductId\n\tFROM InsuranceReferenceBridge\n),\nEXP_DateValues AS (\n\tSELECT\n\tModifiedDate AS i_ModifiedDate,\n\tEffectiveDate AS i_EffectiveDate,\n\tExpirationDate AS i_ExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_ModifiedDate),TO_DATE('21001231235959','YYYYMMDDHH24MISS'),i_ModifiedDate)\n\tIFF(i_ModifiedDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_ModifiedDate) AS o_ModifiedDate,\n\t-- *INF*: IIF(ISNULL(i_EffectiveDate),TO_DATE('21001231235959','YYYYMMDDHH24MISS'),i_EffectiveDate)\n\tIFF(i_EffectiveDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_EffectiveDate) AS o_EffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_ExpirationDate),TO_DATE('21001231235959','YYYYMMDDHH24MISS'),i_ExpirationDate)\n\tIFF(i_ExpirationDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_ExpirationDate) AS o_ExpirationDate\n\tFROM SQ_InsuranceReferenceBridge\n),\nEXP_NumericValues AS (\n\tSELECT\n\tInsuranceReferenceBridgeId AS i_InsuranceReferenceBridgeId,\n\tStrategicProfitCenterId AS i_StrategicProfitCenterId,\n\tInsuranceSegmentId AS i_InsuranceSegmentId,\n\tPolicyOfferingId AS i_PolicyOfferingId,\n\tLineOfBusinessId AS i_LineOfBusinessId,\n\tProductId AS i_ProductId,\n\tModifiedUserId,\n\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceBridgeId),-1,i_InsuranceReferenceBridgeId)\n\tIFF(i_InsuranceReferenceBridgeId IS NULL, - 1, i_InsuranceReferenceBridgeId) AS o_InsuranceReferenceBridgeId,\n\t-- *INF*: IIF(ISNULL(i_StrategicProfitCenterId),-1,i_StrategicProfitCenterId)\n\tIFF(i_StrategicProfitCenterId IS NULL, - 1, i_StrategicProfitCenterId) AS o_StrategicProfitCenterId,\n\t-- *INF*: IIF(ISNULL(i_InsuranceSegmentId),-1,i_InsuranceSegmentId)\n\tIFF(i_InsuranceSegmentId IS NULL, - 1, i_InsuranceSegmentId) AS o_InsuranceSegmentId,\n\t-- *INF*: IIF(ISNULL(i_PolicyOfferingId),-1,i_PolicyOfferingId)\n\tIFF(i_PolicyOfferingId IS NULL, - 1, i_PolicyOfferingId) AS o_PolicyOfferingId,\n\t-- *INF*: IIF(ISNULL(i_LineOfBusinessId),-1,i_LineOfBusinessId)\n\tIFF(i_LineOfBusinessId IS NULL, - 1, i_LineOfBusinessId) AS o_LineOfBusinessId,\n\t-- *INF*: IIF(ISNULL(i_ProductId),-1,i_ProductId)\n\tIFF(i_ProductId IS NULL, - 1, i_ProductId) AS o_ProductId\n\tFROM SQ_InsuranceReferenceBridge\n),\nTGT_InsuranceReferenceBridge_UpdateElseInsert AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceBridge AS T\n\tUSING EXP_NumericValues AS S\n\tON T.InsuranceReferenceBridgeId = S.o_InsuranceReferenceBridgeId\n\tWHEN MATCHED THEN\n\tUPDATE SET T.ModifiedUserId = S.ModifiedUserId, T.ModifiedDate = S.o_ModifiedDate, T.EffectiveDate = S.o_EffectiveDate, T.ExpirationDate = S.o_ExpirationDate, T.StrategicProfitCenterId = S.o_StrategicProfitCenterId, T.InsuranceSegmentId = S.o_InsuranceSegmentId, T.PolicyOfferingId = S.o_PolicyOfferingId, T.InsuranceReferenceLineOfBusinessId = S.o_LineOfBusinessId, T.ProductId = S.o_ProductId\n\tWHEN NOT MATCHED THEN\n\tINSERT (InsuranceReferenceBridgeId, ModifiedUserId, ModifiedDate, EffectiveDate, ExpirationDate, StrategicProfitCenterId, InsuranceSegmentId, PolicyOfferingId, InsuranceReferenceLineOfBusinessId, ProductId)\n\tVALUES (\n\tEXP_NumericValues.o_InsuranceReferenceBridgeId AS INSURANCEREFERENCEBRIDGEID, \n\tEXP_NumericValues.MODIFIEDUSERID, \n\tEXP_DateValues.o_ModifiedDate AS MODIFIEDDATE, \n\tEXP_DateValues.o_EffectiveDate AS EFFECTIVEDATE, \n\tEXP_DateValues.o_ExpirationDate AS EXPIRATIONDATE, \n\tEXP_NumericValues.o_StrategicProfitCenterId AS STRATEGICPROFITCENTERID, \n\tEXP_NumericValues.o_InsuranceSegmentId AS INSURANCESEGMENTID, \n\tEXP_NumericValues.o_PolicyOfferingId AS POLICYOFFERINGID, \n\tEXP_NumericValues.o_LineOfBusinessId AS INSURANCEREFERENCELINEOFBUSINESSID, \n\tEXP_NumericValues.o_ProductId AS PRODUCTID)\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905450"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7602732"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:00:17"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 22:00:17"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_InsuranceReference_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "InsRef"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}