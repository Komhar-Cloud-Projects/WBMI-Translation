{
    "name": "s_m_CMN_DM_Load_CoverageDetailUnderlyingPolicyDim",
    "properties": {
        "activities": [
            {
                "name": "m_CMN_DM_Load_CoverageDetailUnderlyingPolicyDim",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CoverageDetailUnderlyingPolicy AS (\n\tselect CDD.EffectiveDate,\r\n\tCDD.ExpirationDate,\r\n\tCDD.CoverageDetailDimId, \r\n\tCDD.CoverageGuid, \r\n\tCDUP.UnderlyingInsuranceCompanyName, \r\n\tCDUP.UnderlyingPolicyKey, \r\n\tCDUP.UnderlyingPolicyType,\r\n\tUnderlyingPolicyLimit,\r\n\tUnderlyingPolicyLimitType\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailUnderlyingPolicy CDUP with (nolock)\r\n\tjoin @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD \r\n\ton CDUP.PremiumTransactionId=CDD.EDWPremiumTransactionPKId\r\n\twhere (CDUP.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}' OR CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_GetValues AS (\n\tSELECT\n\tEffectiveDate,\n\tExpirationDate,\n\tCoverageDetailDimId,\n\tCoverageGuid,\n\tUnderlyingInsuranceCompanyName,\n\tUnderlyingPolicyKey,\n\tUnderlyingPolicyType,\n\tUnderlyingPolicyLimit,\n\tUnderlyingPolicyLimitType\n\tFROM SQ_CoverageDetailUnderlyingPolicy\n),\nAGG_UnderlyingPolicy AS (\n\tSELECT\n\tEffectiveDate, \n\tExpirationDate, \n\tCoverageDetailDimId, \n\tCoverageGuid, \n\tUnderlyingInsuranceCompanyName, \n\tUnderlyingPolicyKey, \n\tUnderlyingPolicyType, \n\tUnderlyingPolicyLimit AS i_UnderlyingPolicyLimit, \n\tUnderlyingPolicyLimitType AS i_UnderlyingPolicyLimitType, \n\tDECODE(UnderlyingPolicyType,\n\t'GeneralLiability', 'Underlying-GeneralLiability EACH OCCURRENCE LIMIT',\n\t'EmployersLiability', 'Underlying-EmployersLiability BODILY INJURY BY ACCIDENT:  EACH ACCIDENT',\n\t'CommercialAutoLiability', 'Underlying-CommercialAutoLiability PROPERTY DAMAGE - EACH ACCIDENT',\n\t'GarageLiability', 'Underlying-GarageLiability EACH ACCIDENT - GARAGE OPERATIONS AUTO ONLY',\n\t'BusinessownersLiability', 'Underlying-BusinessownersLiability EACH OCCURRENCE LIMIT',\n\t'LiquorLiability', 'Underlying-LiquorLiability EACH OCCURRENCE LIMIT',\n\t'SMARTbusinessLiability', 'Underlying-SMARTbusinessLiability EACH OCCURRENCE LIMIT',\n\t'SBOPGeneralLiability', 'Underlying-SBOPGeneralLiability EACH OCCURRENCE LIMIT',\n\t'CBOPGeneralLiability', 'Underlying-CBOPGeneralLiability EACH OCCURRENCE LIMIT',\n\t'CPPProfessionalLiability', 'Underlying-CPPProfessionalLiability EACH OCCURRENCE LIMIT',\n\t'SBOPProfessionalLiability', 'Underlying-SBOPProfessionalLiability EACH OCCURRENCE LIMIT',\n\t'SMARTProfessionalLiability', 'Underlying-SMARTProfessionalLiability EACH OCCURRENCE LIMIT',\n\t'GLOhioStopGapEmployersLiability', 'Underlying-GLOhioStopGapEmployersLiability-BodilyInjuryByAccident-EachAccident',\n\t'AutoOhioStopGapEmployersLiability', 'Underlying-AutoOhioStopGapEmployersLiability-BodilyInjuryByAccident-EachAccident',\n\t'SMARTOhioStopGapEmployersLiability', 'Underlying-SMARTOhioStopGapEmployersLiability-BodilyInjuryByAccident-EachAccident',\n\t'SBOPOhioStopGapEmployersLiability', 'Underlying-SBOPOhioStopGapEmployersLiability BODILY INJURY BY ACCIDENT:  EACH ACCIDENT',\n\t'SMARTEmployeeBenefitsLiability', 'Underlying-SMARTEmployeeBenefitsLiabilityEachEmployee',\n\t'CommercialAutoEmployeeBenefitsLiability', 'Underlying-CommAutoEmployeeBenefitsLiabilityEachEmployee',\n\t'BOPEmployeeBenefitsLiability', 'Underlying-BOPEmployeeBenefitsLiabilityEachEmployee',\n\t'SBOPEmployeeBenefitsLiability', 'Underlying-SBOPEmployeeBenefitsLiabilityEachEmployee',\n\t'CPPEmployeeBenefitsLiability', 'Underlying-CPPEmployeeBenefitsLiabilityEachEmployee',\n\t'N/A') AS v_UnderlyingPolicyLimitType1, \n\tDECODE(UnderlyingPolicyType,\n\t'GeneralLiability', 'Underlying-GeneralLiability AGGREGATE LIMIT',\n\t'EmployersLiability', 'Underlying-EmployersLiability BODILY INJURY BY DISEASE:   EACH EMPLOYEE',\n\t'GarageLiability', 'Underlying-GarageLiability EACH ACCIDENT - GARAGE OPERATIONS OTHER THAN AUTO ONLY',\n\t'BusinessownersLiability', 'Underlying-BusinessownersLiability AGGREGATE LIMIT',\n\t'LiquorLiability', 'Underlying-LiquorLiability AGGREGATE LIMIT',\n\t'SMARTbusinessLiability', 'Underlying-SMARTbusinessLiability AGGREGATE LIMIT',\n\t'SBOPGeneralLiability', 'Underlying-SBOPGeneralLiability AGGREGATE LIMIT',\n\t'CBOPGeneralLiability', 'Underlying-CBOPGeneralLiability AGGREGATE LIMIT',\n\t'CPPProfessionalLiability', 'Underlying-CPPProfessionalLiability AGGREGATE LIMIT',\n\t'SBOPProfessionalLiability', 'Underlying-SBOPProfessionalLiability AGGREGATE LIMIT',\n\t'SMARTProfessionalLiability', 'Underlying-SMARTProfessionalLiability AGGREGATE LIMIT',\n\t'GLOhioStopGapEmployersLiability', 'Underlying-GLOhioStopGapEmployersLiability-BodilyInjuryByDisease-EachEmployee',\n\t'AutoOhioStopGapEmployersLiability', 'Underlying-AutoOhioStopGapEmployersLiability-BodilyInjuryByDisease-EachEmployee',\n\t'SMARTOhioStopGapEmployersLiability', 'Underlying-SMARTOhioStopGapEmployersLiability-BodilyInjuryByDisease-EachEmployee',\n\t'SBOPOhioStopGapEmployersLiability', 'Underlying-SBOPOhioStopGapEmployersLiability BODILY INJURY BY DISEASE:   EACH EMPLOYEE',\n\t'SMARTEmployeeBenefitsLiability', 'Underlying-SMARTEmployeeBenefitsLiabilityAggregate',\n\t'CommercialAutoEmployeeBenefitsLiability', 'Underlying-CommAutoEmployeeBenefitsLiabilityAggregate',\n\t'BOPEmployeeBenefitsLiability', 'Underlying-BOPEmployeeBenefitsLiabilityAggregrate',\n\t'SBOPEmployeeBenefitsLiability', 'Underlying-SBOPEmployeeBenefitsLiabilityAggregrate',\n\t'CPPEmployeeBenefitsLiability', 'Underlying-CPPEmployeeBenefitsLiabilityAggregrate',\n\t'N/A') AS v_UnderlyingPolicyLimitType2, \n\tDECODE(UnderlyingPolicyType,\n\t'GeneralLiability', 'Underlying-GeneralLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'EmployersLiability', 'Underlying-EmployersLiability BODILY INJURY BY DISEASE:   POLICY LIMIT',\n\t'GarageLiability', 'Underlying-GarageLiability AGGREGATE - GARAGE OPERATIONS OTHER THAN AUTO ONLY',\n\t'BusinessownersLiability', 'Underlying-BusinessownersLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'LiquorLiability', 'Underlying-LiquorLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'SMARTbusinessLiability', 'Underlying-SMARTbusinessLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'SBOPGeneralLiability', 'Underlying-SBOPGeneralLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'CBOPGeneralLiability', 'Underlying-CBOPGeneralLiability PRODUCTS-COMPLETED OPERATIONS AGGREGATE LIMIT',\n\t'GLOhioStopGapEmployersLiability', 'Underlying-GLOhioStopGapEmployersLiability-BodilyInjuryByDisease-Aggregate',\n\t'AutoOhioStopGapEmployersLiability', 'Underlying-AutoOhioStopGapEmployersLiability-BodilyInjuryByDisease-Aggregate',\n\t'SMARTOhioStopGapEmployersLiability', 'Underlying-SMARTOhioStopGapEmployersLiability-BodilyInjuryByDisease-Aggregate',\n\t'SBOPOhioStopGapEmployersLiability', 'Underlying-SBOPOhioStopGapEmployersLiability BODILY INJURY BY DISEASE:   POLICY LIMIT',\n\t'N/A') AS v_UnderlyingPolicyLimitType3, \n\tDECODE(UnderlyingPolicyType,\n\t'GeneralLiability', 'Underlying-GeneralLiability PERSONAL INJURY AND ADVERTISING INJURY LIMIT',\n\t'BusinessownersLiability', 'Underlying-BusinessownersLiability PERSONAL INJURY AND ADVERTISING INJURY LIMIT',\n\t'LiquorLiability', 'Underlying-LiquorLiability EACH COMMON CAUSE LIMIT',\n\t'SMARTbusinessLiability', 'Underlying-SMARTbusinessLiability PERSONAL INJURY AND ADVERTISING INJURY LIMIT',\n\t'SBOPGeneralLiability', 'Underlying-SBOPGeneralLiability PERSONAL INJURY AND ADVERTISING INJURY LIMIT',\n\t'CBOPGeneralLiability', 'Underlying-CBOPGeneralLiability PERSONAL INJURY AND ADVERTISING INJURY LIMIT',\n\t'N/A') AS v_UnderlyingPolicyLimitType4, \n\tv_UnderlyingPolicyLimitType1 AS o_UnderlyingPolicyLimitType1, \n\tv_UnderlyingPolicyLimitType2 AS o_UnderlyingPolicyLimitType2, \n\tv_UnderlyingPolicyLimitType3 AS o_UnderlyingPolicyLimitType3, \n\tv_UnderlyingPolicyLimitType4 AS o_UnderlyingPolicyLimitType4, \n\tFIRST(i_UnderlyingPolicyLimit, i_UnderlyingPolicyLimitType = v_UnderlyingPolicyLimitType1) AS o_UnderlyingPolicyLimit1, \n\tFIRST(i_UnderlyingPolicyLimit, i_UnderlyingPolicyLimitType = v_UnderlyingPolicyLimitType2) AS o_UnderlyingPolicyLimit2, \n\tFIRST(i_UnderlyingPolicyLimit, i_UnderlyingPolicyLimitType = v_UnderlyingPolicyLimitType3) AS o_UnderlyingPolicyLimit3, \n\tFIRST(i_UnderlyingPolicyLimit, i_UnderlyingPolicyLimitType = v_UnderlyingPolicyLimitType4) AS o_UnderlyingPolicyLimit4\n\tFROM EXP_GetValues\n\tGROUP BY CoverageDetailDimId, UnderlyingInsuranceCompanyName, UnderlyingPolicyKey, UnderlyingPolicyType\n),\nEXP_Metadata AS (\n\tSELECT\n\to_UnderlyingPolicyLimit1 AS i_UnderlyingPolicyLimit1,\n\to_UnderlyingPolicyLimit2 AS i_UnderlyingPolicyLimit2,\n\to_UnderlyingPolicyLimit3 AS i_UnderlyingPolicyLimit3,\n\to_UnderlyingPolicyLimit4 AS i_UnderlyingPolicyLimit4,\n\tEffectiveDate,\n\tExpirationDate,\n\tCoverageDetailDimId,\n\tCoverageGuid,\n\tUnderlyingInsuranceCompanyName,\n\tUnderlyingPolicyKey,\n\tUnderlyingPolicyType,\n\to_UnderlyingPolicyLimitType1 AS UnderlyingPolicyLimitType1,\n\to_UnderlyingPolicyLimitType2 AS UnderlyingPolicyLimitType2,\n\to_UnderlyingPolicyLimitType3 AS UnderlyingPolicyLimitType3,\n\to_UnderlyingPolicyLimitType4 AS UnderlyingPolicyLimitType4,\n\t-- *INF*: IIF(ISNULL(i_UnderlyingPolicyLimit1), 'N/A', i_UnderlyingPolicyLimit1)\n\tIFF(i_UnderlyingPolicyLimit1 IS NULL, 'N/A', i_UnderlyingPolicyLimit1) AS o_UnderlyingPolicyLimit1,\n\t-- *INF*: IIF(ISNULL(i_UnderlyingPolicyLimit2), 'N/A', i_UnderlyingPolicyLimit2)\n\tIFF(i_UnderlyingPolicyLimit2 IS NULL, 'N/A', i_UnderlyingPolicyLimit2) AS o_UnderlyingPolicyLimit2,\n\t-- *INF*: IIF(ISNULL(i_UnderlyingPolicyLimit3), 'N/A', i_UnderlyingPolicyLimit3)\n\tIFF(i_UnderlyingPolicyLimit3 IS NULL, 'N/A', i_UnderlyingPolicyLimit3) AS o_UnderlyingPolicyLimit3,\n\t-- *INF*: IIF(ISNULL(i_UnderlyingPolicyLimit4), 'N/A', i_UnderlyingPolicyLimit4)\n\tIFF(i_UnderlyingPolicyLimit4 IS NULL, 'N/A', i_UnderlyingPolicyLimit4) AS o_UnderlyingPolicyLimit4,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tCURRENT_TIMESTAMP AS o_CreateDate,\n\tCURRENT_TIMESTAMP AS o_ModifiedDate\n\tFROM AGG_UnderlyingPolicy\n),\nLKP_CoverageDetailUnderlyingPolicyDim AS (\n\tSELECT\n\tCoverageDetailUnderlyingPolicyDimId,\n\tEffectiveDate,\n\tExpirationDate,\n\tUnderlyingPolicyLimit1,\n\tUnderlyingPolicyLimitType1,\n\tUnderlyingPolicyLimit2,\n\tUnderlyingPolicyLimitType2,\n\tUnderlyingPolicyLimit3,\n\tUnderlyingPolicyLimitType3,\n\tUnderlyingPolicyLimit4,\n\tUnderlyingPolicyLimitType4,\n\tCoverageDetailDimId,\n\tUnderlyingInsuranceCompanyName,\n\tUnderlyingPolicyKey,\n\tUnderlyingPolicyType\n\tFROM (\n\t\tSELECT CDUPD.CoverageDetailUnderlyingPolicyDimId as CoverageDetailUnderlyingPolicyDimId, \r\n\t\tCDUPD.EffectiveDate as EffectiveDate,\r\n\t\tCDUPD.ExpirationDate as ExpirationDate,\r\n\t\tCDUPD.UnderlyingPolicyLimit1 as UnderlyingPolicyLimit1, \r\n\t\tCDUPD.UnderlyingPolicyLimitType1 as UnderlyingPolicyLimitType1, \r\n\t\tCDUPD.UnderlyingPolicyLimit2 as UnderlyingPolicyLimit2, \r\n\t\tCDUPD.UnderlyingPolicyLimitType2 as UnderlyingPolicyLimitType2, \r\n\t\tCDUPD.UnderlyingPolicyLimit3 as UnderlyingPolicyLimit3, \r\n\t\tCDUPD.UnderlyingPolicyLimitType3 as UnderlyingPolicyLimitType3, \r\n\t\tCDUPD.UnderlyingPolicyLimit4 as UnderlyingPolicyLimit4, \r\n\t\tCDUPD.UnderlyingPolicyLimitType4 as UnderlyingPolicyLimitType4, \r\n\t\tCDUPD.CoverageDetailDimId as CoverageDetailDimId, \r\n\t\tCDUPD.UnderlyingInsuranceCompanyName as UnderlyingInsuranceCompanyName, \r\n\t\tCDUPD.UnderlyingPolicyKey as UnderlyingPolicyKey, \r\n\t\tCDUPD.UnderlyingPolicyType as UnderlyingPolicyType \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailUnderlyingPolicyDim CDUPD\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD on CDD.coveragedetaildimid = CDUPD.CoverageDetailDimId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailUnderlyingPolicy CDUP\r\n\t\ton CDUP.PremiumTransactionId=CDD.EDWPremiumTransactionPKId\r\n\t\tWHERE (CDUP.ModifiedDate>='@{pipeline().parameters.SELECTION_START_TS}' OR CDD.ModifedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageDetailDimId,UnderlyingInsuranceCompanyName,UnderlyingPolicyKey,UnderlyingPolicyType ORDER BY CoverageDetailUnderlyingPolicyDimId) = 1\n),\nEXP_Update AS (\n\tSELECT\n\tLKP_CoverageDetailUnderlyingPolicyDim.CoverageDetailUnderlyingPolicyDimId AS lkp_CoverageDetailUnderlyingPolicyDimId,\n\tLKP_CoverageDetailUnderlyingPolicyDim.EffectiveDate AS lkp_EffectiveDate,\n\tLKP_CoverageDetailUnderlyingPolicyDim.ExpirationDate AS lkp_ExpirationDate,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimit1 AS lkp_UnderlyingPolicyLimit1,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimitType1 AS lkp_UnderlyingPolicyLimitType1,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimit2 AS lkp_UnderlyingPolicyLimit2,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimitType2 AS lkp_UnderlyingPolicyLimitType2,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimit3 AS lkp_UnderlyingPolicyLimit3,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimitType3 AS lkp_UnderlyingPolicyLimitType3,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimit4 AS lkp_UnderlyingPolicyLimit4,\n\tLKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyLimitType4 AS lkp_UnderlyingPolicyLimitType4,\n\t1 AS o_CurrentSnapshotFlag,\n\tEXP_Metadata.o_AuditId AS AuditId,\n\tEXP_Metadata.EffectiveDate,\n\tEXP_Metadata.ExpirationDate,\n\tEXP_Metadata.o_CreateDate AS CreateDate,\n\tEXP_Metadata.o_ModifiedDate AS ModifiedDate,\n\tEXP_Metadata.CoverageDetailDimId,\n\tEXP_Metadata.CoverageGuid,\n\tEXP_Metadata.UnderlyingInsuranceCompanyName,\n\tEXP_Metadata.UnderlyingPolicyKey,\n\tEXP_Metadata.UnderlyingPolicyType,\n\tEXP_Metadata.o_UnderlyingPolicyLimit1 AS UnderlyingPolicyLimit1,\n\tEXP_Metadata.UnderlyingPolicyLimitType1,\n\tEXP_Metadata.o_UnderlyingPolicyLimit2 AS UnderlyingPolicyLimit2,\n\tEXP_Metadata.UnderlyingPolicyLimitType2,\n\tEXP_Metadata.o_UnderlyingPolicyLimit3 AS UnderlyingPolicyLimit3,\n\tEXP_Metadata.UnderlyingPolicyLimitType3,\n\tEXP_Metadata.o_UnderlyingPolicyLimit4 AS UnderlyingPolicyLimit4,\n\tEXP_Metadata.UnderlyingPolicyLimitType4,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_CoverageDetailUnderlyingPolicyDimId), 'NEW',\r\n\t-- lkp_EffectiveDate != EffectiveDate OR lkp_ExpirationDate != ExpirationDate OR \r\n\t-- lkp_UnderlyingPolicyLimitType1 != UnderlyingPolicyLimitType1 OR \r\n\t-- lkp_UnderlyingPolicyLimit1 != UnderlyingPolicyLimit1 OR lkp_UnderlyingPolicyLimitType2 != UnderlyingPolicyLimitType2 OR \r\n\t-- lkp_UnderlyingPolicyLimit2 != UnderlyingPolicyLimit2 OR \r\n\t-- lkp_UnderlyingPolicyLimitType3 != UnderlyingPolicyLimitType3 OR \r\n\t-- lkp_UnderlyingPolicyLimit3 != UnderlyingPolicyLimit3 OR \r\n\t-- lkp_UnderlyingPolicyLimitType4 != UnderlyingPolicyLimitType4 OR \r\n\t-- lkp_UnderlyingPolicyLimit4 != UnderlyingPolicyLimit4,\r\n\t-- 'UPDATE',\r\n\t-- 'NOCHANGE')\n\tDECODE(TRUE,\n\tlkp_CoverageDetailUnderlyingPolicyDimId IS NULL, 'NEW',\n\tlkp_EffectiveDate != EffectiveDate OR lkp_ExpirationDate != ExpirationDate OR lkp_UnderlyingPolicyLimitType1 != UnderlyingPolicyLimitType1 OR lkp_UnderlyingPolicyLimit1 != UnderlyingPolicyLimit1 OR lkp_UnderlyingPolicyLimitType2 != UnderlyingPolicyLimitType2 OR lkp_UnderlyingPolicyLimit2 != UnderlyingPolicyLimit2 OR lkp_UnderlyingPolicyLimitType3 != UnderlyingPolicyLimitType3 OR lkp_UnderlyingPolicyLimit3 != UnderlyingPolicyLimit3 OR lkp_UnderlyingPolicyLimitType4 != UnderlyingPolicyLimitType4 OR lkp_UnderlyingPolicyLimit4 != UnderlyingPolicyLimit4, 'UPDATE',\n\t'NOCHANGE') AS o_ChangeFlag\n\tFROM EXP_Metadata\n\tLEFT JOIN LKP_CoverageDetailUnderlyingPolicyDim\n\tON LKP_CoverageDetailUnderlyingPolicyDim.CoverageDetailDimId = EXP_Metadata.CoverageDetailDimId AND LKP_CoverageDetailUnderlyingPolicyDim.UnderlyingInsuranceCompanyName = EXP_Metadata.UnderlyingInsuranceCompanyName AND LKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyKey = EXP_Metadata.UnderlyingPolicyKey AND LKP_CoverageDetailUnderlyingPolicyDim.UnderlyingPolicyType = EXP_Metadata.UnderlyingPolicyType\n),\nRTR_InsertUpdate AS (\n\tSELECT\n\tlkp_CoverageDetailUnderlyingPolicyDimId,\n\to_CurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreateDate,\n\tModifiedDate,\n\tCoverageDetailDimId,\n\tCoverageGuid,\n\tUnderlyingInsuranceCompanyName,\n\tUnderlyingPolicyKey,\n\tUnderlyingPolicyType,\n\tUnderlyingPolicyLimit1,\n\tUnderlyingPolicyLimitType1,\n\tUnderlyingPolicyLimit2,\n\tUnderlyingPolicyLimitType2,\n\tUnderlyingPolicyLimit3,\n\tUnderlyingPolicyLimitType3,\n\tUnderlyingPolicyLimit4,\n\tUnderlyingPolicyLimitType4,\n\to_ChangeFlag AS ChangeFlag\n\tFROM EXP_Update\n),\nRTR_InsertUpdate_Insert AS (SELECT * FROM RTR_InsertUpdate WHERE ChangeFlag='NEW'),\nRTR_InsertUpdate_Update AS (SELECT * FROM RTR_InsertUpdate WHERE ChangeFlag='UPDATE'),\nUPD_Update AS (\n\tSELECT\n\tlkp_CoverageDetailUnderlyingPolicyDimId, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tModifiedDate, \n\tUnderlyingPolicyLimit1, \n\tUnderlyingPolicyLimitType1, \n\tUnderlyingPolicyLimit2, \n\tUnderlyingPolicyLimitType2, \n\tUnderlyingPolicyLimit AS UnderlyingPolicyLimit3, \n\tUnderlyingPolicyLimitType AS UnderlyingPolicyLimitType3, \n\tUnderlyingPolicyLimit4, \n\tUnderlyingPolicyLimitType4\n\tFROM RTR_InsertUpdate_Update\n),\nTGT_CoverageDetailUnderlyingPolicyDim_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailUnderlyingPolicyDim AS T\n\tUSING UPD_Update AS S\n\tON T.CoverageDetailUnderlyingPolicyDimId = S.lkp_CoverageDetailUnderlyingPolicyDimId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditID = S.AuditId, T.EffectiveDate = S.EffectiveDate, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate, T.UnderlyingPolicyLimit1 = S.UnderlyingPolicyLimit1, T.UnderlyingPolicyLimitType1 = S.UnderlyingPolicyLimitType1, T.UnderlyingPolicyLimit2 = S.UnderlyingPolicyLimit2, T.UnderlyingPolicyLimitType2 = S.UnderlyingPolicyLimitType2, T.UnderlyingPolicyLimit3 = S.UnderlyingPolicyLimit3, T.UnderlyingPolicyLimitType3 = S.UnderlyingPolicyLimitType3, T.UnderlyingPolicyLimit4 = S.UnderlyingPolicyLimit4, T.UnderlyingPolicyLimitType4 = S.UnderlyingPolicyLimitType4\n),\nTGT_CoverageDetailUnderlyingPolicyDim_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailUnderlyingPolicyDim\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, CreatedDate, ModifiedDate, CoverageDetailDimId, UnderlyingInsuranceCompanyName, UnderlyingPolicyKey, UnderlyingPolicyType, UnderlyingPolicyLimit1, UnderlyingPolicyLimitType1, UnderlyingPolicyLimit2, UnderlyingPolicyLimitType2, UnderlyingPolicyLimit3, UnderlyingPolicyLimitType3, UnderlyingPolicyLimit4, UnderlyingPolicyLimitType4)\n\tSELECT \n\to_CurrentSnapshotFlag AS CURRENTSNAPSHOTFLAG, \n\tAuditId AS AUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tCreateDate AS CREATEDDATE, \n\tMODIFIEDDATE, \n\tCOVERAGEDETAILDIMID, \n\tUNDERLYINGINSURANCECOMPANYNAME, \n\tUNDERLYINGPOLICYKEY, \n\tUNDERLYINGPOLICYTYPE, \n\tUnderlyingPolicyLimit AS UNDERLYINGPOLICYLIMIT1, \n\tUnderlyingPolicyLimitType AS UNDERLYINGPOLICYLIMITTYPE1, \n\tUNDERLYINGPOLICYLIMIT2, \n\tUNDERLYINGPOLICYLIMITTYPE2, \n\tUNDERLYINGPOLICYLIMIT3, \n\tUNDERLYINGPOLICYLIMITTYPE3, \n\tUNDERLYINGPOLICYLIMIT4, \n\tUNDERLYINGPOLICYLIMITTYPE4\n\tFROM RTR_InsertUpdate_Insert\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246503"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905513"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604111"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:14:33"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:30:27"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_DATA_MART_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_DATA_MART"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "folder": {
            "name": "Common DataMart/"
        },
        "annotations": []
    }
}