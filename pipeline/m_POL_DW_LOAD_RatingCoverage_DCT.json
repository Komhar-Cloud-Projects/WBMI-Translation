{
    "name": "m_POL_DW_LOAD_RatingCoverage_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_RatingCoverage_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_DCClassCodeStaging_WC AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId,\n\t\t\tSessionId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging\n\t\tWHERE ObjectName='DC_WC_Risk'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCStatCodeStaging_CA AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId,\n\t\t\tSessionId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging\n\t\tWHERE ObjectName='DC_Coverage' and Type='Class' and Value <> '9999'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCClassCodeStaging_CA_Risk AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tselect CLS.ObjectId as ObjectId, \r\n\t\tCLS.SessionId as SessionId, \r\n\t\tCLS.Value as Value\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging CLS\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCARiskStaging RSK\r\n\t\ton RSK.CA_RiskId = CLS.ObjectId\r\n\t\tand CLS.ObjectName = 'DC_CA_Risk'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCClassCodeStaging_CA_HiredAndBorrow AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tselect ST.CA_StateId as ObjectId,\r\n\t\tCLS.SessionId as SessionId,\r\n\t\tCLS.Value as Value\r\n\t\tfrom  @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging CLS\r\n\t\tinner join  @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAHiredAndBorrowStage HB\r\n\t\ton CLS.ObjectId = HB.CA_HiredAndBorrowId \r\n\t\tand CLS.ObjectName = 'DC_CA_HiredAndBorrow'\r\n\t\tinner join  @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging ST\r\n\t\ton ST.CA_StateId = HB.CA_StateId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCClassCodeStaging_CA_DriveOtherCar AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tselect ST.CA_StateId as ObjectId,\r\n\t\tCLS.SessionId as SessionId,\r\n\t\tCLS.Value as Value\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging CLS\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCADriveOtherCarStage DOC\r\n\t\ton CLS.ObjectId = DOC.CA_DriveOtherCarId \r\n\t\tand CLS.ObjectName = 'DC_CA_DriveOtherCar'\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging ST\r\n\t\ton ST.CA_StateId = DOC.CA_StateId\r\n\t\tand ST.DriveOtherCarCoverage = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCClassCodeStaging_CA_NonOwned AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tselect L.LineId as ObjectId,\r\n\t\tCLS.SessionId as SessionId,\r\n\t\tCLS.Value as Value\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging CLS\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCANonOwnedStage CNO\r\n\t\ton CLS.ObjectId = CNO.CA_NonOwnedId \r\n\t\tand CLS.ObjectName = 'DC_CA_NonOwned'\r\n\t\tand CLS.Type='Risk'\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCLineStaging L\r\n\t\ton L.LineId = CNO.LineId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCStatCodeStaging AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId,\n\tType\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId,\n\t\t\tSessionId,\n\t\t\tType\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging\n\t\tWHERE ObjectName='DC_Coverage' and Type in ('Class', 'Subline','AnnualStatementLOBCode')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId,Type ORDER BY Value) = 1\n),\nLKP_DCClassCodeStaging_CA_MotorJunkLicense AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tselect ST.CA_StateId as ObjectId,\r\n\t\tCLS.SessionId as SessionId, \r\n\t\tCLS.Value as Value\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCClassCodeStaging CLS\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAMotorJunkLicenseStage MJL\r\n\t\ton CLS.ObjectId = MJL.CA_MotorJunkLicenseId\r\n\t\tand CLS.ObjectName = 'DC_CA_MotorJunkLicense'\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCCAStateStaging ST\r\n\t\ton ST.CA_StateId = MJL.CA_StateId\r\n\t\tand ST.DriveOtherCarCoverage = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCStatCodeStaging_WC AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tSessionId\n\tFROM (\n\t\tSELECT \n\t\t\tValue,\n\t\t\tObjectId,\n\t\t\tSessionId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCStatCodeStaging\n\t\tWHERE ObjectName='DC_Coverage' and Type in ('AdmiraltyBalanceToMinimumCharge',\r\n\t\t'AircraftSeatSurcharge',\r\n\t\t'AlcoholDrugFreeWorkplace',\r\n\t\t'AlcoholOrDrugFreeWorkplaceCoalMinePremiumCredit',\r\n\t\t'AlcoholOrDrugFreeWorkplacePremiumCredit',\r\n\t\t'AlcoholOrDrugFreeWorkplaceSubjectPremiumCredit',\r\n\t\t'AtomicEnergyRadiationExposureCharge',\r\n\t\t'BalancetoMinimum',\r\n\t\t'CertifiedRiskManagement',\r\n\t\t'Class',\r\n\t\t'CompulsoryWorkplace',\r\n\t\t'ContractorsCredit',\r\n\t\t'DTEC',\r\n\t\t'EmployeeLeasingStatCode',\r\n\t\t'EmployersLiabilityIncreasedBalanceToMinimumCharge',\r\n\t\t'EmployersLiabilityIncreasedLimits',\r\n\t\t'ExpenseConstant',\r\n\t\t'ExperienceModification',\r\n\t\t'FELAIncreasedLimitsPremium',\r\n\t\t'ForeignVoluntaryCompensationFlatFeeStatCode',\r\n\t\t'ManagedCareFactor',\r\n\t\t'MeritRatingCreditPremium',\r\n\t\t'MeritRatingDebitPremium',\r\n\t\t'MeritRatingStatCode',\r\n\t\t'PremiumDiscount',\r\n\t\t'PremiumDiscountTypeA',\r\n\t\t'PremiumIncentiveForSmallEmployees',\r\n\t\t'PreviouslyInjuredEmployee',\r\n\t\t'Repatriation',\r\n\t\t'SafetyCertificationCreditProgram',\r\n\t\t'ScheduledCreditModification',\r\n\t\t'ScheduledModification',\r\n\t\t'SmallDeductibleCredit',\r\n\t\t'StrikeDutySurcharge',\r\n\t\t'TabularAdjustmentCreditProgram',\r\n\t\t'TabularAdjustmentDebitProgram',\r\n\t\t'TerrorismRiskInsuranceProgramReauthorizationAct',\r\n\t\t'TRIA',\r\n\t\t'VoluntaryCompensationFlatFee',\r\n\t\t'VoluntaryCompensationFlatFeeStatCode',\r\n\t\t'VolunteerAmbulance',\r\n\t\t'VolunteerFirefighter',\r\n\t\t'WaiverOfSubrogation',\r\n\t\t'WorkplaceSafetyIncentiveProgramSubject',\r\n\t\t'AdmiraltyIncreasedLimits',\r\n\t\t'FELAIncreasedLimits',\r\n\t\t'StudentWorkStudy',\r\n\t\t'StudentWorkStudy9447',\r\n\t\t'Aircraft',\r\n\t\t'AtomicEnergyRadiation',\r\n\t\t'EmployersLiabilityIncreasedLimitsBalanceToMinimum',\r\n\t\t'FlexibleRatingAdjustment',\r\n\t\t'MeritRating',\r\n\t\t'NonRatableElements',\r\n\t\t'BalanceToMinimum',\r\n\t\t'NE',\r\n\t\t'AuditNoncomplianceCharge')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ObjectId,SessionId ORDER BY Value) = 1\n),\nLKP_DCStatCode_SupDCTStatCode AS (\n\tSELECT\n\tValue,\n\tObjectId,\n\tLineOfBusiness,\n\tObjectKey,\n\tObjectValue,\n\tSessionId,\n\tObjectName\n\tFROM (\n\t\tSELECT \r\n\t\tB.Value as Value,\r\n\t\tB.ObjectId as objectId,\r\n\t\tA.LineOfBusiness as LineOfBusiness,\r\n\t\tA.ObjectKey as ObjectKey,\r\n\t\tA.ObjectValue as ObjectValue,\r\n\t\tB.SessionId as SessionId,\r\n\t\tB.ObjectName as ObjectName\r\n\t\tFROM \r\n\t\tSupDCTStatCode A \r\n\t\tINNER JOIN \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.dbo.DCStatCodeStaging B on A.ObjectValue = B.[Type]\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineOfBusiness,SessionId,ObjectId,ObjectName,ObjectKey ORDER BY Value) = 1\n),\nSEQ_RatingCoverageAKID AS (\n\tCREATE SEQUENCE SEQ_RatingCoverageAKID\n\tSTART = 1\n\tINCREMENT = 1;\n),\nSQ_RatingCoverage_SRC AS (\n\tSELECT\n\t\tWorkDCTCoverageTransaction.CoverageGUID,\n\t\tWorkDCTPolicy.TransactionCreatedDate,\n\t\tWorkDCTInsuranceLine.SessionId,\n\t\tWorkDCTCoverageTransaction.CoverageId,\n\t\tWorkDCTInsuranceLine.LineId,\n\t\tWorkDCTCoverageTransaction.CoverageType,\n\t\tWorkDCTCoverageTransaction.Premium,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageRiskType,\n\t\tWorkDCTCoverageTransaction.SubCoverageType,\n\t\tWorkDCTCoverageTransaction.Change,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageForm,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.RiskId,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.RiskType,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.Exposure,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CommissionPercentage,\n\t\tWorkDCTInsuranceLine.LineType,\n\t\tWorkDCTPolicy.PolicyGUId,\n\t\tWorkDCTPolicy.PolicyEffectiveDate,\n\t\tWorkDCTPolicy.PolicyExpirationDate,\n\t\tWorkDCTPolicy.LineOfBusiness,\n\t\tWorkDCTPolicy.TransactionType,\n\t\tWorkDCTPolicy.PolicyStatus,\n\t\tWorkDCTPolicy.TransactionEffectiveDate,\n\t\tWorkDCTPolicy.TransactionExpirationDate,\n\t\tWorkDCTPolicy.TransactionCancellationDate,\n\t\tWorkDCTLocation.LocationNumber,\n\t\tWorkDCTLocation.LocationXmlId,\n\t\tWorkDCTLocation.Territory,\n\t\tWorkDCTPolicy.PolicyVersion,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.CoverageVersion,\n\t\tWorkDCTPolicy.WBProduct,\n\t\tWorkDCTPolicy.WBProductType,\n\t\tWorkDCTPolicy.Division,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.SpecialClassLevel1,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.BuildingNumber,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.PolicyCoverage,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.PerilGroup,\n\t\tWorkDCTCoverageTransaction.CoverageDeleteFlag,\n\t\tWorkDCTCoverageTransaction.ParentCoverageObjectId,\n\t\tWorkDCTCoverageTransaction.ParentCoverageObjectName,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.OccupancyClassDescription,\n\t\tWorkDCTTransactionInsuranceLineLocationBridge.ActiveBuildingFlag,\n\t\tWorkDCTPolicy.PolicyNumber,\n\t\tWorkDCTLocation.StateProvince\n\tFROM WorkDCTInsuranceLine\n\tINNER JOIN WorkDCTLocation\n\tINNER JOIN WorkDCTPolicy\n\tINNER JOIN WorkDCTCoverageTransaction\n\tINNER JOIN WorkDCTTransactionInsuranceLineLocationBridge\n\tON WorkDCTCoverageTransaction.CoverageId=WorkDCTTransactionInsuranceLineLocationBridge.CoverageId\r\n\tand\r\n\tWorkDCTTransactionInsuranceLineLocationBridge.LocationAssociationId=WorkDCTLocation.LocationAssociationId\r\n\tand\r\n\tWorkDCTInsuranceLine.LineId=WorkDCTTransactionInsuranceLineLocationBridge.LineId\r\n\tand\r\n\tWorkDCTInsuranceLine.PolicyId=WorkDCTPolicy.PolicyId\r\n\tand\r\n\tWorkDCTPolicy.PolicyStatus<>'Quote'\r\n\tand\r\n\tWorkDCTPolicy.TransactionState='committed'\r\n\tand\r\n\tWorkDCTPolicy.TransactionType @{pipeline().parameters.EXCLUDE_TTYPE}\n),\nEXP_PolicyKey AS (\n\tSELECT\n\tPolicyNumber AS i_PolicyNumber,\n\tPolicyVersion AS i_PolicyVersion,\n\tLocationNumber AS i_LocationNumber,\n\tTerritory AS i_Territory,\n\tLocationXmlId AS i_LocationXmlId,\n\tLineType AS i_LineType,\n\tPolicyEffectiveDate AS i_PolicyEffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_PolicyNumber) or IS_SPACES(i_PolicyNumber) or LENGTH(i_PolicyNumber)=0, 'N/A', LTRIM(RTRIM(i_PolicyNumber)))\n\tIFF(i_PolicyNumber IS NULL OR IS_SPACES(i_PolicyNumber) OR LENGTH(i_PolicyNumber) = 0, 'N/A', LTRIM(RTRIM(i_PolicyNumber))) AS v_PolicyNumber,\n\t-- *INF*: IIF(ISNULL(i_PolicyVersion),'00',LPAD(TO_CHAR(i_PolicyVersion),2,'0'))\n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS v_PolicyVersion,\n\t-- *INF*: IIF(ISNULL(i_LocationNumber) OR IS_SPACES(i_LocationNumber) OR LENGTH(i_LocationNumber)=0,'0000',LPAD(LTRIM(RTRIM(i_LocationNumber)),4,'0'))\n\tIFF(i_LocationNumber IS NULL OR IS_SPACES(i_LocationNumber) OR LENGTH(i_LocationNumber) = 0, '0000', LPAD(LTRIM(RTRIM(i_LocationNumber)), 4, '0')) AS v_LocationNumber,\n\t-- *INF*: IIF(ISNULL(i_Territory) OR IS_SPACES(i_Territory) OR LENGTH(i_Territory)=0,'N/A',LTRIM(RTRIM(i_Territory)))\n\tIFF(i_Territory IS NULL OR IS_SPACES(i_Territory) OR LENGTH(i_Territory) = 0, 'N/A', LTRIM(RTRIM(i_Territory))) AS v_Territory,\n\t-- *INF*: IIF(ISNULL(i_LocationXmlId) OR IS_SPACES(i_LocationXmlId) OR LENGTH(i_LocationXmlId)=0,'N/A',LTRIM(RTRIM(i_LocationXmlId)))\n\tIFF(i_LocationXmlId IS NULL OR IS_SPACES(i_LocationXmlId) OR LENGTH(i_LocationXmlId) = 0, 'N/A', LTRIM(RTRIM(i_LocationXmlId))) AS v_LocationXmlId,\n\t-- *INF*: rtrim(ltrim(v_PolicyNumber))||rtrim(ltrim(v_PolicyVersion))\n\trtrim(ltrim(v_PolicyNumber)) || rtrim(ltrim(v_PolicyVersion)) AS o_PolicyKey,\n\tv_LocationNumber AS o_LocationNumber,\n\tv_Territory AS o_Territory,\n\tv_LocationXmlId AS o_LocationXmlId,\n\t-- *INF*: IIF(ISNULL(i_LineType) OR IS_SPACES(i_LineType) OR LENGTH(i_LineType)=0,'N/A',LTRIM(RTRIM(i_LineType)))\n\tIFF(i_LineType IS NULL OR IS_SPACES(i_LineType) OR LENGTH(i_LineType) = 0, 'N/A', LTRIM(RTRIM(i_LineType))) AS o_LineType,\n\t-- *INF*: IIF(ISNULL(i_PolicyEffectiveDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_PolicyEffectiveDate)\n\tIFF(i_PolicyEffectiveDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_PolicyEffectiveDate) AS o_PEffectiveDate,\n\tCoverageGUID,\n\tTransactionCreatedDate\n\tFROM SQ_RatingCoverage_SRC\n),\nLKP_Pol_AK_Id AS (\n\tSELECT\n\tpol_ak_id,\n\tPol_Key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tPol_Key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' and exists ( select 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT where WCT.PolicyNumber=pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol_mod)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Pol_Key ORDER BY pol_ak_id) = 1\n),\nmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1 AS (WITH\n\tInput_Policy AS (\n\t\t\n\t),\n\tEXP_Get_Value AS (\n\t\tSELECT\n\t\tPolicyAKID,\n\t\tCoverageGuid,\n\t\tTransactionCreatedDate,\n\t\t-- *INF*: IIF(ISNULL(PolicyAKID),-1,PolicyAKID)\n\t\tIFF(PolicyAKID IS NULL, - 1, PolicyAKID) AS o_PolicyAKID\n\t\tFROM Input_Policy\n\t),\n\tLKP_Policy_Heirarchy_With_Date AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tPolicyCoverageAKID,\n\t\tPolicyAKID,\n\t\tCoverageGUID,\n\t\tEffectiveDate,\n\t\tLocationUnitNumber,\n\t\tRatingCoverageCancellationDate,\n\t\tRatingCoverageAKID,\n\t\tRatingCoverageKey,\n\t\tRatingCoverageHashKey,\n\t\tRatingCoverageId,\n\t\tRatingCoverageEffectivedate,\n\t\tRatingCoverageExpirationdate,\n\t\tClassCode,\n\t\tCoverageType,\n\t\tProductAbbreviation\n\t\tFROM (\n\t\t\tSELECT R.RiskLocationAKID AS RiskLocationAKID,\r\n\t\t\t\tPC.PolicyCoverageAKID AS PolicyCoverageAKID,\r\n\t\t\t\tR.PolicyAKID AS PolicyAKID,\r\n\t\t\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\t\t\tRC.EffectiveDate AS EffectiveDate,\r\n\t\t\t\tR.LocationUnitNumber AS LocationUnitNumber,\r\n\t\t\t\tRC.RatingCoverageCancellationDate AS RatingCoverageCancellationDate,\r\n\t\t\t\tRC.RatingCoverageAKID AS RatingCoverageAKID,\r\n\t\t\t\tRC.RatingCoverageKey AS RatingCoverageKey,\r\n\t\t\t\tRC.RatingCoverageHashKey AS RatingCoverageHashKey,\r\n\t\t\t\tRC.RatingCoverageid AS RatingCoverageid,\r\n\t\t\t\tRC.RatingCoverageEffectivedate AS RatingCoverageEffectivedate,\r\n\t\t\t\tRC.RatingCoverageExpirationdate AS RatingCoverageExpirationdate ,\r\n\t\t\t\tRC.ClassCode AS ClassCode,\r\n\t\t\t\tRC.coveragetype as coveragetype,\r\n\t\t\t\tPR.ProductAbbreviation as ProductAbbreviation\r\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\t\t\t\tON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\t\t\t\tAND RC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation R\r\n\t\t\t\tON R.RiskLocationAKID = PC.RiskLocationAKID\r\n\t\t\t\t\t\tAND PC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\t\t\t\tAND R.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\t\tAND R.CurrentSnapshotFlag = 1\r\n\t\t\t LEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}. product PR on\r\n\t\t\t\tPR.productakid=RC.productakid and PR.CurrentSnapshotFlag=1\r\n\t\t\t\t\twhere EXISTS (\r\n\t\t\t\t\t\tSELECT 1\r\n\t\t\t\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\r\n\t\t\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\t\t\t\t\t\tON WCT.PolicyNumber = pol.pol_num\r\n\t\t\t\t\t\t\t\tAND ISNULL(RIGHT('00' + convert(VARCHAR(3), WCT.PolicyVersion), 2), '00') = pol.pol_mod\r\n\t\t\t\t\t\t\t\tAND pol.crrnt_snpsht_flag = 1\r\n\t\t\t\t\t\t\t\tAND R.PolicyAKId = pol.pol_ak_id\r\n\t\t\t\t\t\t)\r\n\t\t\tORDER BY PC.Policyakid,RC.Coverageguid,RC.Createddate,RC.effectivedate--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,CoverageGUID,EffectiveDate ORDER BY RiskLocationAKID DESC) = 1\n\t),\n\tLKP_Policy_Heirarchy_Without_Date AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tPolicyCoverageAKID,\n\t\tPolicyAKID,\n\t\tCoverageGUID,\n\t\tLocationUnitNumber,\n\t\tRatingCoverageCancellationDate,\n\t\tRatingCoverageAKID,\n\t\tRatingCoverageKey,\n\t\tRatingCoverageHashKey,\n\t\tRatingCoverageId,\n\t\tRatingCoverageEffectivedate,\n\t\tRatingCoverageExpirationdate,\n\t\tCoverageType,\n\t\tProductAbbreviation\n\t\tFROM (\n\t\t\tSELECT R.RiskLocationAKID AS RiskLocationAKID,\r\n\t\t\t\tPC.PolicyCoverageAKID AS PolicyCoverageAKID,\r\n\t\t\t\tR.PolicyAKID AS PolicyAKID,\r\n\t\t\t\tRC.CoverageGUID AS CoverageGUID,\r\n\t\t\t\tRC.EffectiveDate AS EffectiveDate,\r\n\t\t\t\tR.LocationUnitNumber AS LocationUnitNumber,\r\n\t\t\t\tRC.RatingCoverageCancellationDate AS RatingCoverageCancellationDate,\r\n\t\t\t\tRC.RatingCoverageAKID AS RatingCoverageAKID,\r\n\t\t\t\tRC.RatingCoverageKey AS RatingCoverageKey,\r\n\t\t\t\tRC.RatingCoverageHashKey AS RatingCoverageHashKey,\r\n\t\t\t\tRC.RatingCoverageid AS RatingCoverageid,\r\n\t\t\t\tRC.RatingCoverageEffectivedate AS RatingCoverageEffectivedate,\r\n\t\t\t\tRC.RatingCoverageExpirationdate AS RatingCoverageExpirationdate ,\r\n\t\t\t\t\tRC.coveragetype as coveragetype,\r\n\t\t\t\tPR.ProductAbbreviation as ProductAbbreviation\r\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\t\t\t\tON RC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\t\t\t\t\tAND RC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation R\r\n\t\t\t\tON R.RiskLocationAKID = PC.RiskLocationAKID\r\n\t\t\t\t\t\tAND PC.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\t\t\t\tAND R.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\t\tAND R.CurrentSnapshotFlag = 1\r\n\t\t\tLEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}. product PR on\r\n\t\t\t\tPR.productakid=RC.productakid and PR.CurrentSnapshotFlag=1\r\n\t\t\t\t\twhere EXISTS (\r\n\t\t\t\t\t\tSELECT 1\r\n\t\t\t\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol\r\n\t\t\t\t\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\t\t\t\t\t\tON WCT.PolicyNumber = pol.pol_num\r\n\t\t\t\t\t\t\t\tAND ISNULL(RIGHT('00' + convert(VARCHAR(3), WCT.PolicyVersion), 2), '00') = pol.pol_mod\r\n\t\t\t\t\t\t\t\tAND pol.crrnt_snpsht_flag = 1\r\n\t\t\t\t\t\t\t\tAND R.PolicyAKId = pol.pol_ak_id\r\n\t\t\t\t\t\t)\r\n\t\t\tORDER BY PC.Policyakid,RC.Coverageguid,RC.Createddate,RC.effectivedate--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,CoverageGUID ORDER BY RiskLocationAKID DESC) = 1\n\t),\n\tEXP_Calculate_PremiumtransactionKey AS (\n\t\tSELECT\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageAKID AS RatingCoverageAKID_WithDate,\n\t\t-- *INF*: IIF(isnull(RatingCoverageAKID_WithDate),0,1)\n\t\tIFF(RatingCoverageAKID_WithDate IS NULL, 0, 1) AS Flag,\n\t\tLKP_Policy_Heirarchy_With_Date.RiskLocationAKID AS RiskLocationAKID_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.PolicyCoverageAKID AS PolicyCoverageAKID_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.PolicyAKID AS PolicyAKID_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.CoverageGUID AS CoverageGUID_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.LocationUnitNumber AS LocationUnitNumber_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageCancellationDate AS RatingCoverageCancellationDate_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageKey AS RatingCoverageKey_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageHashKey AS RatingCoverageHashKey_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageId AS RatingCoverageId_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageEffectivedate AS RatingCoverageEffectivedate_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.RatingCoverageExpirationdate AS RatingCoverageExpirationdate_Date,\n\t\tLKP_Policy_Heirarchy_Without_Date.PolicyAKID,\n\t\tLKP_Policy_Heirarchy_Without_Date.RiskLocationAKID,\n\t\tLKP_Policy_Heirarchy_Without_Date.PolicyCoverageAKID,\n\t\tLKP_Policy_Heirarchy_Without_Date.CoverageGUID,\n\t\tLKP_Policy_Heirarchy_Without_Date.LocationUnitNumber,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageCancellationDate,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageAKID,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageKey,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageHashKey,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageId,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageEffectivedate,\n\t\tLKP_Policy_Heirarchy_Without_Date.RatingCoverageExpirationdate,\n\t\t-- *INF*: iif(Flag=1,PolicyAKID_Date,PolicyAKID)\n\t\tIFF(Flag = 1, PolicyAKID_Date, PolicyAKID) AS v_PolicyAKID,\n\t\t-- *INF*: IIF(Flag=1,RiskLocationAKID_Date,RiskLocationAKID)\n\t\tIFF(Flag = 1, RiskLocationAKID_Date, RiskLocationAKID) AS v_RiskLocationAKID,\n\t\t-- *INF*: iif(Flag=1,PolicyCoverageAKID_Date,PolicyCoverageAKID)\n\t\tIFF(Flag = 1, PolicyCoverageAKID_Date, PolicyCoverageAKID) AS v_PolicyCoverageAKID,\n\t\t-- *INF*: iif(Flag=1,CoverageGUID_Date,CoverageGUID)\n\t\tIFF(Flag = 1, CoverageGUID_Date, CoverageGUID) AS v_CoverageGUID,\n\t\tv_CoverageGUID AS o_CoverageGUID,\n\t\t-- *INF*: iif(Flag=1,LocationUnitNumber_Date,LocationUnitNumber)\n\t\tIFF(Flag = 1, LocationUnitNumber_Date, LocationUnitNumber) AS v_LocationUnitNumber,\n\t\tv_RiskLocationAKID AS o_RiskLocationAKID,\n\t\t-- *INF*: iif(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,RatingCoverageCancellationDate_Date)\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, RatingCoverageCancellationDate_Date) AS o_RatingCoverageCancellationDate,\n\t\t-- *INF*: iif(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,iif(Flag=1,RatingCoverageAKID_WithDate,RatingCoverageAKID))\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, IFF(Flag = 1, RatingCoverageAKID_WithDate, RatingCoverageAKID)) AS o_RatingCoverageAKID,\n\t\tv_PolicyCoverageAKID AS o_PolicyCoverageAKID,\n\t\t-- *INF*: TO_CHAR(v_PolicyAKID) || '~'  || TO_CHAR(v_RiskLocationAKID)  || '~' || TO_CHAR( v_PolicyCoverageAKID)  || '~' || v_CoverageGUID  || '~'  || v_LocationUnitNumber\n\t\tTO_CHAR(v_PolicyAKID) || '~' || TO_CHAR(v_RiskLocationAKID) || '~' || TO_CHAR(v_PolicyCoverageAKID) || '~' || v_CoverageGUID || '~' || v_LocationUnitNumber AS o_PremiumTransactionKey,\n\t\t-- *INF*: iif(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,RatingCoverageKey_Date)\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, RatingCoverageKey_Date) AS o_RatingCoverageKey,\n\t\t-- *INF*: iif(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,RatingCoverageHashKey_Date)\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, RatingCoverageHashKey_Date) AS o_RatingCoverageHashKey,\n\t\t-- *INF*: iif(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,RatingCoverageId_Date)\r\n\t\t-- \r\n\t\t-- --IIF(Flag=1,RatingCoverageId_Date,RatingCoverageId)\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- \n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, RatingCoverageId_Date) AS o_RatingCoverageId,\n\t\tLKP_Policy_Heirarchy_With_Date.ClassCode,\n\t\tLKP_Policy_Heirarchy_With_Date.CoverageType AS i_CoverageType_Date,\n\t\tLKP_Policy_Heirarchy_With_Date.ProductAbbreviation AS i_ProductAbbreviation_Date,\n\t\tLKP_Policy_Heirarchy_Without_Date.CoverageType AS i_CoverageType,\n\t\tLKP_Policy_Heirarchy_Without_Date.ProductAbbreviation AS i_ProductAbbreviation,\n\t\t-- *INF*: IIF(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,\r\n\t\t-- IIF(Flag=1,RatingCoverageEffectivedate_Date,RatingCoverageEffectivedate))\r\n\t\t-- \r\n\t\t-- ---IIF(Flag=1,RatingCoverageEffectivedate_Date,RatingCoverageEffectivedate)\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, IFF(Flag = 1, RatingCoverageEffectivedate_Date, RatingCoverageEffectivedate)) AS o_RatingCoverageEffectivedate,\n\t\t-- *INF*: IIF(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,\r\n\t\t-- IIF(Flag=1,RatingCoverageExpirationdate_Date,RatingCoverageExpirationdate))\r\n\t\t-- \r\n\t\t-- \r\n\t\t-- --IIF(Flag=1,RatingCoverageExpirationdate_Date,RatingCoverageExpirationdate)\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, IFF(Flag = 1, RatingCoverageExpirationdate_Date, RatingCoverageExpirationdate)) AS o_RatingCoverageExpirationdate,\n\t\t-- *INF*: IIF(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,\r\n\t\t-- IIF(Flag=1,i_CoverageType_Date,i_CoverageType))\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, IFF(Flag = 1, i_CoverageType_Date, i_CoverageType)) AS o_CoverageType,\n\t\t-- *INF*: IIF(@{pipeline().parameters.PMSESSIONNAME}='s_m_POL_DW_LOAD_RatingCoverage_Restate_DCT',NULL,\r\n\t\t-- IIF(Flag=1,i_ProductAbbreviation_Date,i_ProductAbbreviation))\n\t\tIFF(@{pipeline().parameters.PMSESSIONNAME} = 's_m_POL_DW_LOAD_RatingCoverage_Restate_DCT', NULL, IFF(Flag = 1, i_ProductAbbreviation_Date, i_ProductAbbreviation)) AS o_ProductAbbreviation\n\t\tFROM \n\t\tLEFT JOIN LKP_Policy_Heirarchy_With_Date\n\t\tON LKP_Policy_Heirarchy_With_Date.PolicyAKID = EXP_Get_Value.o_PolicyAKID AND LKP_Policy_Heirarchy_With_Date.CoverageGUID = EXP_Get_Value.CoverageGuid AND LKP_Policy_Heirarchy_With_Date.EffectiveDate = EXP_Get_Value.TransactionCreatedDate\n\t\tLEFT JOIN LKP_Policy_Heirarchy_Without_Date\n\t\tON LKP_Policy_Heirarchy_Without_Date.PolicyAKID = EXP_Get_Value.o_PolicyAKID AND LKP_Policy_Heirarchy_Without_Date.CoverageGUID = EXP_Get_Value.CoverageGuid\n\t),\n\tOutput_Policy AS (\n\t\tSELECT\n\t\to_CoverageGUID AS CoverageGUID, \n\t\to_RiskLocationAKID AS RiskLocationAKID, \n\t\to_RatingCoverageCancellationDate AS RatingCoverageCancellationDate, \n\t\to_RatingCoverageAKID AS RatingCoverageAKID, \n\t\to_PremiumTransactionKey AS PremiumTransactionKey, \n\t\to_RatingCoverageKey AS RatingCoverageKey, \n\t\to_RatingCoverageHashKey AS RatingCoverageHashKey, \n\t\to_RatingCoverageId AS RatingCoverageId, \n\t\to_PolicyCoverageAKID AS PolicyCoverageAKID, \n\t\to_RatingCoverageEffectivedate AS RatingCoverageEffectivedate, \n\t\to_RatingCoverageExpirationdate AS RatingCoverageExpirationdate, \n\t\tClassCode, \n\t\to_CoverageType AS CoverageType, \n\t\to_ProductAbbreviation AS ProductAbbreviation\n\t\tFROM EXP_Calculate_PremiumtransactionKey\n\t),\n),\nEXP_RiskLocationKey AS (\n\tSELECT\n\tLKP_Pol_AK_Id.pol_ak_id AS i_pol_ak_id,\n\tEXP_PolicyKey.o_LocationNumber AS LocationNumber,\n\tEXP_PolicyKey.o_Territory AS Territory,\n\tEXP_PolicyKey.o_LocationXmlId AS i_LocationXmlId,\n\tEXP_PolicyKey.o_LineType AS i_LineType,\n\tSQ_RatingCoverage_SRC.StateProvince AS i_StateProvince,\n\tSQ_RatingCoverage_SRC.ParentCoverageObjectName AS i_ParentCoverageObjectName,\n\tSQ_RatingCoverage_SRC.TransactionCreatedDate AS i_TransactionCreatedDate,\n\tEXP_PolicyKey.CoverageGUID,\n\t-- *INF*: IIF(ISNULL(i_LineType) or IS_SPACES(i_LineType) or LENGTH(i_LineType)=0,'N/A',LTRIM(RTRIM(i_LineType)))\n\tIFF(i_LineType IS NULL OR IS_SPACES(i_LineType) OR LENGTH(i_LineType) = 0, 'N/A', LTRIM(RTRIM(i_LineType))) AS v_LineType,\n\t-- *INF*: IIF(ISNULL(i_pol_ak_id),-1,i_pol_ak_id)\n\tIFF(i_pol_ak_id IS NULL, - 1, i_pol_ak_id) AS v_Pol_AK_ID,\n\tv_Pol_AK_ID AS o_Pol_AK_ID,\n\t-- *INF*: DECODE (TRUE,\r\n\t-- in (i_ParentCoverageObjectName,  'DC_BP_Location','DC_BP_Risk','DC_CA_Risk','DC_CF_Risk','DC_GL_Risk','DC_IM_Risk','DC_WC_Risk','DCBPLocation','WB_GOC_Risk','WB_HIO_Risk','WB_EC_Risk')=1,\r\n\t-- v_Pol_AK_ID||'~'||i_LocationXmlId,\r\n\t-- IN(i_ParentCoverageObjectName,'DC_CA_State','DC_WC_StateTerm','WB_GOC_State','WB_HIO_State','WB_IM_State','WB_EC_State','DC_WC_State')=1,\r\n\t-- v_Pol_AK_ID||'~'||'PrimaryLocation'||'~'||i_StateProvince||'~'||v_LineType ,\r\n\t-- IN(i_ParentCoverageObjectName,'DC_CR_Endorsement','DC_CR_Risk','DC_CR_RiskCrime','DC_Line','DC_CU_UmbrellaEmployersLiability','DC_IM_CoverageForm','WB_CU_PremiumDetail','DC_CA_BusinessInterruptionOption')=1,\r\n\t-- v_Pol_AK_ID||'~'||'PrimaryLocation'||'~'||v_LineType\r\n\t-- )\n\tDECODE(TRUE,\n\tin(i_ParentCoverageObjectName, 'DC_BP_Location', 'DC_BP_Risk', 'DC_CA_Risk', 'DC_CF_Risk', 'DC_GL_Risk', 'DC_IM_Risk', 'DC_WC_Risk', 'DCBPLocation', 'WB_GOC_Risk', 'WB_HIO_Risk', 'WB_EC_Risk') = 1, v_Pol_AK_ID || '~' || i_LocationXmlId,\n\tIN(i_ParentCoverageObjectName, 'DC_CA_State', 'DC_WC_StateTerm', 'WB_GOC_State', 'WB_HIO_State', 'WB_IM_State', 'WB_EC_State', 'DC_WC_State') = 1, v_Pol_AK_ID || '~' || 'PrimaryLocation' || '~' || i_StateProvince || '~' || v_LineType,\n\tIN(i_ParentCoverageObjectName, 'DC_CR_Endorsement', 'DC_CR_Risk', 'DC_CR_RiskCrime', 'DC_Line', 'DC_CU_UmbrellaEmployersLiability', 'DC_IM_CoverageForm', 'WB_CU_PremiumDetail', 'DC_CA_BusinessInterruptionOption') = 1, v_Pol_AK_ID || '~' || 'PrimaryLocation' || '~' || v_LineType) AS o_RiskLocationKey,\n\tRiskLocationAKID AS o_RatingCoverage_RiskLocationAKID,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RiskLocationAKID,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RatingCoverageAKID,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RatingCoverageHashKey,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RatingCoverageId,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.PolicyCoverageAKID,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RatingCoverageEffectivedate,\n\tmplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1.RatingCoverageExpirationdate\n\tFROM EXP_PolicyKey\n\t -- Manually join with SQ_RatingCoverage_SRC\n\t -- Manually join with mplt_get_RiskLocation_PolicyCoverage_RatingCoverage_Akids_Hierarchy1\n\tLEFT JOIN LKP_Pol_AK_Id\n\tON LKP_Pol_AK_Id.Pol_Key = EXP_PolicyKey.o_PolicyKey\n),\nMplt_RiskLocationAKID_Population AS (WITH\n\tLKP_RiskLocation_RiskLocationKey AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey ORDER BY RiskLocationAKID) = 1\n\t),\n\tLKP_RiskLocation_RiskLocationKey_LocNum_Territory AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey,\n\t\tLocationUnitNumber,\n\t\tRiskTerritory\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey,\n\t\t\t\tLocationUnitNumber,\n\t\t\t\tRiskTerritory\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey,LocationUnitNumber,RiskTerritory ORDER BY RiskLocationAKID) = 1\n\t),\n\tLKP_RiskLocation_RiskLocationKey_LocNum AS (\n\t\tSELECT\n\t\tRiskLocationAKID,\n\t\tRiskLocationKey,\n\t\tLocationUnitNumber\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tRiskLocationAKID,\n\t\t\t\tRiskLocationKey,\n\t\t\t\tLocationUnitNumber\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation\n\t\t\tWHERE CurrentSnapshotFlag = 1 and SourceSystemId = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and \r\n\t\t\texists\r\n\t\t\t ( select 1 from @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy pol inner join  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT \r\n\t\t\t on WCT.PolicyNumber=pol.pol_num and ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00')=pol.pol_mod and pol.crrnt_snpsht_flag=1 and PolicyAKID=pol.Pol_AK_ID ) Order By EffectiveDate DESC,CreatedDate DESC,RiskLocationAKID desc--\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationKey,LocationUnitNumber ORDER BY RiskLocationAKID) = 1\n\t),\n\tSource_Input AS (\n\t\t\n\t),\n\tExp_RiskLocationAKID_population AS (\n\t\tSELECT\n\t\tRatingCoverage_RiskLocationAKID AS i_RatingCoverage_RiskLocationAKID,\n\t\tRiskLocationKey AS i_RiskLocationKey,\n\t\tLocationNumber AS i_LocationNumber,\n\t\tTerritory AS i_Territory,\n\t\t-- *INF*: IIF(ISNULL(i_RatingCoverage_RiskLocationAKID),:LKP.LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY(i_RiskLocationKey,i_LocationNumber,i_Territory),i_RatingCoverage_RiskLocationAKID)\n\t\tIFF(i_RatingCoverage_RiskLocationAKID IS NULL, LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_i_RiskLocationKey_i_LocationNumber_i_Territory.RiskLocationAKID, i_RatingCoverage_RiskLocationAKID) AS v_RiskLocationAKID_RiskKey_Location_Territory,\n\t\t-- *INF*: IIF(ISNULL(v_RiskLocationAKID_RiskKey_Location_Territory),:LKP.LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM(i_RiskLocationKey,i_LocationNumber),v_RiskLocationAKID_RiskKey_Location_Territory)\n\t\tIFF(v_RiskLocationAKID_RiskKey_Location_Territory IS NULL, LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_i_RiskLocationKey_i_LocationNumber.RiskLocationAKID, v_RiskLocationAKID_RiskKey_Location_Territory) AS v_RiskLocationAKID_RiskKey_Location,\n\t\t-- *INF*: IIF(ISNULL(v_RiskLocationAKID_RiskKey_Location),:LKP.LKP_RISKLOCATION_RISKLOCATIONKEY(i_RiskLocationKey),v_RiskLocationAKID_RiskKey_Location)\n\t\tIFF(v_RiskLocationAKID_RiskKey_Location IS NULL, LKP_RISKLOCATION_RISKLOCATIONKEY_i_RiskLocationKey.RiskLocationAKID, v_RiskLocationAKID_RiskKey_Location) AS v_RiskLocationAKID_RiskKey,\n\t\t-- *INF*: iif(isnull(v_RiskLocationAKID_RiskKey),-1,v_RiskLocationAKID_RiskKey)\n\t\tIFF(v_RiskLocationAKID_RiskKey IS NULL, - 1, v_RiskLocationAKID_RiskKey) AS o_RiskLocationAKID\n\t\tFROM Source_Input\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_i_RiskLocationKey_i_LocationNumber_i_Territory\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_i_RiskLocationKey_i_LocationNumber_i_Territory.RiskLocationKey = i_RiskLocationKey\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_i_RiskLocationKey_i_LocationNumber_i_Territory.LocationUnitNumber = i_LocationNumber\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_TERRITORY_i_RiskLocationKey_i_LocationNumber_i_Territory.RiskTerritory = i_Territory\n\t\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_i_RiskLocationKey_i_LocationNumber\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_i_RiskLocationKey_i_LocationNumber.RiskLocationKey = i_RiskLocationKey\n\t\tAND LKP_RISKLOCATION_RISKLOCATIONKEY_LOCNUM_i_RiskLocationKey_i_LocationNumber.LocationUnitNumber = i_LocationNumber\n\t\n\t\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONKEY LKP_RISKLOCATION_RISKLOCATIONKEY_i_RiskLocationKey\n\t\tON LKP_RISKLOCATION_RISKLOCATIONKEY_i_RiskLocationKey.RiskLocationKey = i_RiskLocationKey\n\t\n\t),\n\tRiskLocationAKID AS (\n\t\tSELECT\n\t\to_RiskLocationAKID\n\t\tFROM Exp_RiskLocationAKID_population\n\t),\n),\nEXP_PolicyCoverageAKID AS (\n\tSELECT\n\tEXP_PolicyKey.o_LineType AS i_LineType,\n\tEXP_PolicyKey.o_PEffectiveDate AS i_PEffectiveDate,\n\tEXP_RiskLocationKey.o_Pol_AK_ID AS pol_ak_id,\n\tMplt_RiskLocationAKID_Population.o_RiskLocationAKID AS RiskLocationAKID,\n\t-- *INF*: IIF(ISNULL(RiskLocationAKID),-1,RiskLocationAKID)\n\tIFF(RiskLocationAKID IS NULL, - 1, RiskLocationAKID) AS v_RiskLocationAKID,\n\t-- *INF*: MD5(TO_CHAR(pol_ak_id) || \r\n\t-- TO_CHAR(v_RiskLocationAKID) || \r\n\t-- i_LineType || TO_CHAR(\r\n\t-- i_PEffectiveDate))\n\tMD5(TO_CHAR(pol_ak_id) || TO_CHAR(v_RiskLocationAKID) || i_LineType || TO_CHAR(i_PEffectiveDate)) AS o_PolicyCoverageHashKey\n\tFROM EXP_PolicyKey\n\t -- Manually join with EXP_RiskLocationKey\n\t -- Manually join with Mplt_RiskLocationAKID_Population\n),\nLKP_DCWCStateTermStaging AS (\n\tSELECT\n\tPeriodStartDate,\n\tPeriodEndDate,\n\tWC_StateTermId,\n\tObjectName\n\tFROM (\n\t\tSELECT PeriodStartDate as PeriodStartDate, \r\n\t\tPeriodEndDate as PeriodEndDate, \r\n\t\tWC_StateTermId as WC_StateTermId,\r\n\t\t'DC_WC_StateTerm' as ObjectName\r\n\t\tFROM DCWCStateTermStaging\r\n\t\torder by WC_StateTermId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WC_StateTermId,ObjectName ORDER BY PeriodStartDate) = 1\n),\nLKP_PolicyCoverageAKID AS (\n\tSELECT\n\tPolicyCoverageAKID,\n\tPolicyCoverageHashKey\n\tFROM (\n\t\tSELECT a.PolicyCoverageAKID as PolicyCoverageAKID, a.PolicyCoverageHashKey as PolicyCoverageHashKey FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage a\r\n\t\tINNER JOIN \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy b\r\n\t\ton b.pol_ak_id=a.PolicyAKId\r\n\t\tand b.crrnt_snpsht_flag=1\r\n\t\tINNER JOIN \r\n\t\t(select distinct WCT.PolicyNumber,ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00') as PolicyVersionFormatted from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT) WCT\r\n\t\ton WCT.PolicyNumber=b.pol_num\r\n\t\tand PolicyVersionFormatted=b.pol_mod\r\n\t\twhere a.CurrentSnapshotFlag=1 and a.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\torder by a.PolicyCoverageHashKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyCoverageHashKey ORDER BY PolicyCoverageAKID) = 1\n),\nLKP_WBWCCoverageTermStage AS (\n\tSELECT\n\tPeriodStartDate,\n\tPeriodEndDate,\n\tCoverageId\n\tFROM (\n\t\tSELECT CT.PeriodStartDate as PeriodStartDate, \r\n\t\tCT.PeriodEndDate as PeriodEndDate, \r\n\t\tWBC.CoverageId as CoverageId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBWCCoverageTermStage CT\r\n\t\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCoverageStage WBC\r\n\t\tON CT.WB_CoverageId=WBC.WBCoverageId\r\n\t\tORDER BY WBC.CoverageId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageId ORDER BY PeriodStartDate) = 1\n),\nEXP_GetValues AS (\n\tSELECT\n\tLKP_WBWCCoverageTermStage.PeriodStartDate AS lkp_PeriodStartDate,\n\tLKP_WBWCCoverageTermStage.PeriodEndDate AS lkp_PeriodEndDate,\n\tLKP_DCWCStateTermStaging.PeriodStartDate AS i_PeriodStartDate,\n\tLKP_DCWCStateTermStaging.PeriodEndDate AS i_PeriodEndDate,\n\tSQ_RatingCoverage_SRC.SessionId AS i_SessionId,\n\tSQ_RatingCoverage_SRC.CoverageId AS i_CoverageId,\n\tSQ_RatingCoverage_SRC.LineId AS i_LineId,\n\tSQ_RatingCoverage_SRC.CoverageGUID AS i_CoverageGUID,\n\tSQ_RatingCoverage_SRC.CoverageType AS i_CoverageType,\n\tSQ_RatingCoverage_SRC.Premium AS i_Premium,\n\tSQ_RatingCoverage_SRC.CoverageRiskType AS i_ParentCoverageType,\n\tSQ_RatingCoverage_SRC.SubCoverageType AS i_SubCoverageType,\n\tSQ_RatingCoverage_SRC.Change AS i_Change,\n\tSQ_RatingCoverage_SRC.CoverageForm AS i_CoverageForm,\n\tSQ_RatingCoverage_SRC.RiskType AS i_RiskType,\n\tSQ_RatingCoverage_SRC.Exposure AS i_Exposure,\n\tSQ_RatingCoverage_SRC.CommissionPercentage AS i_CommissionPercentage,\n\tSQ_RatingCoverage_SRC.LineType AS i_LineType,\n\tSQ_RatingCoverage_SRC.PolicyGUId AS i_Id,\n\tSQ_RatingCoverage_SRC.PolicyEffectiveDate AS i_PEffectiveDate,\n\tSQ_RatingCoverage_SRC.PolicyExpirationDate AS i_PExpirationDate,\n\tSQ_RatingCoverage_SRC.LineOfBusiness AS i_LineOfBusiness,\n\tSQ_RatingCoverage_SRC.TransactionType AS i_TType,\n\tSQ_RatingCoverage_SRC.PolicyStatus,\n\tSQ_RatingCoverage_SRC.TransactionCreatedDate AS i_TCreatedDate,\n\tSQ_RatingCoverage_SRC.TransactionEffectiveDate AS i_TEffectiveDate,\n\tSQ_RatingCoverage_SRC.TransactionExpirationDate AS i_TExpirationDate,\n\tSQ_RatingCoverage_SRC.TransactionCancellationDate AS i_TCancellationDate,\n\tSQ_RatingCoverage_SRC.LocationNumber AS i_LocationNumber,\n\tSQ_RatingCoverage_SRC.CoverageVersion AS i_CoverageVersion,\n\tSQ_RatingCoverage_SRC.WBProduct AS i_WBProduct,\n\tSQ_RatingCoverage_SRC.WBProductType AS i_WBProductType,\n\tSQ_RatingCoverage_SRC.Division AS i_Division,\n\tSQ_RatingCoverage_SRC.SpecialClassLevel1 AS i_SpecialClassLevel1,\n\tSQ_RatingCoverage_SRC.BuildingNumber AS i_BuildingNumber,\n\tSQ_RatingCoverage_SRC.PolicyCoverage AS i_PolicyCoverage,\n\tSQ_RatingCoverage_SRC.PerilGroup AS i_PerilGroup,\n\tSQ_RatingCoverage_SRC.RiskId AS i_RiskId,\n\tSQ_RatingCoverage_SRC.Territory AS i_Territory,\n\tSQ_RatingCoverage_SRC.LocationXmlId AS i_LocationXmlId,\n\tSQ_RatingCoverage_SRC.CoverageDeleteFlag AS i_CoverageDeleteFlag,\n\tSQ_RatingCoverage_SRC.ParentCoverageObjectId AS i_ParentCoverageObjectId,\n\tSQ_RatingCoverage_SRC.ParentCoverageObjectName AS i_ParentCoverageObjectName,\n\tSQ_RatingCoverage_SRC.OccupancyClassDescription AS i_OccupancyClassDescription,\n\tLKP_PolicyCoverageAKID.PolicyCoverageAKID AS i_PolicyCoverageAKID,\n\tSQ_RatingCoverage_SRC.ActiveBuildingFlag AS i_ActiveBuildingFlag,\n\t-- *INF*: IIF(ISNULL(i_CoverageType) OR IS_SPACES(i_CoverageType) OR LENGTH(i_CoverageType)=0,'N/A',LTRIM(RTRIM(i_CoverageType)))\n\tIFF(i_CoverageType IS NULL OR IS_SPACES(i_CoverageType) OR LENGTH(i_CoverageType) = 0, 'N/A', LTRIM(RTRIM(i_CoverageType))) AS v_CoverageType,\n\t-- *INF*: IIF(ISNULL(i_PolicyCoverageAKID), -1, i_PolicyCoverageAKID)\n\tIFF(i_PolicyCoverageAKID IS NULL, - 1, i_PolicyCoverageAKID) AS v_PolicyCoverageAKID,\n\t-- *INF*: IIF(ISNULL(i_Id) or IS_SPACES(i_Id) or LENGTH(i_Id)=0,'N/A',LTRIM(RTRIM(i_Id)))\n\tIFF(i_Id IS NULL OR IS_SPACES(i_Id) OR LENGTH(i_Id) = 0, 'N/A', LTRIM(RTRIM(i_Id))) AS v_Id,\n\t-- *INF*: IIF(ISNULL(i_PEffectiveDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_PEffectiveDate)\n\tIFF(i_PEffectiveDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_PEffectiveDate) AS v_PEffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_PExpirationDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_PExpirationDate)\n\tIFF(i_PExpirationDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_PExpirationDate) AS v_PExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_LineOfBusiness) OR IS_SPACES(i_LineOfBusiness) OR LENGTH(i_LineOfBusiness)=0,'N/A',LTRIM(RTRIM(i_LineOfBusiness)))\n\tIFF(i_LineOfBusiness IS NULL OR IS_SPACES(i_LineOfBusiness) OR LENGTH(i_LineOfBusiness) = 0, 'N/A', LTRIM(RTRIM(i_LineOfBusiness))) AS v_LineOfBusiness,\n\t-- *INF*: IIF(ISNULL(i_LineType) OR IS_SPACES(i_LineType) OR LENGTH(i_LineType)=0,'N/A',LTRIM(RTRIM(i_LineType)))\n\tIFF(i_LineType IS NULL OR IS_SPACES(i_LineType) OR LENGTH(i_LineType) = 0, 'N/A', LTRIM(RTRIM(i_LineType))) AS v_LineType,\n\t-- *INF*: IIF(ISNULL(i_LocationNumber) OR IS_SPACES(i_LocationNumber) OR LENGTH(i_LocationNumber)=0,'0000',LPAD(LTRIM(RTRIM(i_LocationNumber)),4,'0'))\n\tIFF(i_LocationNumber IS NULL OR IS_SPACES(i_LocationNumber) OR LENGTH(i_LocationNumber) = 0, '0000', LPAD(LTRIM(RTRIM(i_LocationNumber)), 4, '0')) AS v_LocationNumber,\n\t-- *INF*: IIF(ISNULL(i_LocationXmlId) OR IS_SPACES(i_LocationXmlId) OR LENGTH(i_LocationXmlId)=0,'N/A',LTRIM(RTRIM(i_LocationXmlId)))\n\tIFF(i_LocationXmlId IS NULL OR IS_SPACES(i_LocationXmlId) OR LENGTH(i_LocationXmlId) = 0, 'N/A', LTRIM(RTRIM(i_LocationXmlId))) AS v_LocationXmlId,\n\t-- *INF*: IIF(ISNULL(i_TType) OR IS_SPACES(i_TType) OR LENGTH(i_TType)=0,'N/A',LTRIM(RTRIM(i_TType)))\n\tIFF(i_TType IS NULL OR IS_SPACES(i_TType) OR LENGTH(i_TType) = 0, 'N/A', LTRIM(RTRIM(i_TType))) AS v_TType,\n\t-- *INF*: IIF(ISNULL(i_TEffectiveDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_TEffectiveDate)\n\tIFF(i_TEffectiveDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_TEffectiveDate) AS v_TEffectiveDate,\n\t-- *INF*: IIF(ISNULL(i_TCreatedDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_TCreatedDate)\n\tIFF(i_TCreatedDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_TCreatedDate) AS v_TCreatedDate,\n\t-- *INF*: IIF(ISNULL(i_TExpirationDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_TExpirationDate)\r\n\t-- \n\tIFF(i_TExpirationDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_TExpirationDate) AS v_TExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_TCancellationDate),TO_DATE('21001231235959' , 'YYYYMMDDHH24MISS'),i_TCancellationDate)\n\tIFF(i_TCancellationDate IS NULL, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS'), i_TCancellationDate) AS v_TCancellationDate,\n\t-- *INF*: IIF(ISNULL(i_CommissionPercentage),-1,i_CommissionPercentage)\n\tIFF(i_CommissionPercentage IS NULL, - 1, i_CommissionPercentage) AS v_CommissionPercentage,\n\t-- *INF*: IIF(ISNULL(i_CoverageForm) or IS_SPACES(i_CoverageForm) or LENGTH(i_CoverageForm)=0,'N/A',i_CoverageForm)\n\tIFF(i_CoverageForm IS NULL OR IS_SPACES(i_CoverageForm) OR LENGTH(i_CoverageForm) = 0, 'N/A', i_CoverageForm) AS v_CoverageForm,\n\t-- *INF*: IIF(ISNULL(i_RiskType) OR IS_SPACES(i_RiskType) OR LENGTH(i_RiskType)=0,'N/A',LTRIM(RTRIM(i_RiskType)))\n\tIFF(i_RiskType IS NULL OR IS_SPACES(i_RiskType) OR LENGTH(i_RiskType) = 0, 'N/A', LTRIM(RTRIM(i_RiskType))) AS v_RiskType,\n\t-- *INF*: IIF(ISNULL(i_Exposure),0,i_Exposure)\n\tIFF(i_Exposure IS NULL, 0, i_Exposure) AS v_Exposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- IN(i_LineType,'GeneralLiability','SBOPGeneralLiability'),SUBSTR(:LKP.LKP_DCSTATCODESTAGING(i_CoverageId,i_SessionId,'Class'),1,5),\r\n\t-- \r\n\t-- i_LineType='WorkersCompensation' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_WC_Risk',:LKP.LKP_DCCLASSCODESTAGING_WC(i_ParentCoverageObjectId,i_SessionId),\r\n\t-- \r\n\t-- i_LineType='WorkersCompensation',:LKP.LKP_DCSTATCODE_SUPDCTSTATCODE('WorkersCompensation','Type',i_CoverageId,'DC_Coverage',i_SessionId),\r\n\t-- \r\n\t-- --i_LineType='WorkersCompensation',:LKP.LKP_DCSTATCODESTAGING_WC(i_CoverageId,i_SessionId),\r\n\t-- \r\n\t-- --------------------------------------------------------------------\r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_CA_Risk', :LKP.LKP_DCCLASSCODESTAGING_CA_Risk(i_ParentCoverageObjectId,i_SessionId),\r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_CA_State' and Instr(i_CoverageType,'HiredAndBorrowed',1,1)>0, '6625',\r\n\t-- \r\n\t-- --:LKP.LKP_DCCLASSCODESTAGING_CA_HiredAndBorrow(i_ParentCoverageObjectId,i_SessionId,'Primary'),\r\n\t-- \r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_CA_State' and Instr(i_CoverageType,'DriveOtherCar',1,1)>0, :LKP.LKP_DCCLASSCODESTAGING_CA_DriveOtherCar(i_ParentCoverageObjectId,i_SessionId),\r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_Line' and Instr(i_CoverageType,'NonOwned',1,1)>0, :LKP.LKP_DCCLASSCODESTAGING_CA_NonOwned(i_ParentCoverageObjectId,i_SessionId),\r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_Line', :LKP.LKP_DCSTATCODESTAGING_CA(i_CoverageId,i_SessionId),\r\n\t-- i_LineType='CommercialAuto' and LTRIM(RTRIM(i_ParentCoverageObjectName))='DC_CA_State' and Instr(i_CoverageType,'MotorJunkLicense',1,1)>0, :LKP.LKP_DCCLASSCODESTAGING_CA_MotorJunkLicense(i_ParentCoverageObjectId,i_SessionId),\r\n\t-- --------------------------------------------------------------------\r\n\t-- :LKP.LKP_DCSTATCODESTAGING(i_CoverageId,i_SessionId,'Class'))\n\tDECODE(TRUE,\n\tIN(i_LineType, 'GeneralLiability', 'SBOPGeneralLiability'), SUBSTR(LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class.Value, 1, 5),\n\ti_LineType = 'WorkersCompensation' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_WC_Risk', LKP_DCCLASSCODESTAGING_WC_i_ParentCoverageObjectId_i_SessionId.Value,\n\ti_LineType = 'WorkersCompensation', LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.Value,\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_CA_Risk', LKP_DCCLASSCODESTAGING_CA_RISK_i_ParentCoverageObjectId_i_SessionId.Value,\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_CA_State' AND Instr(i_CoverageType, 'HiredAndBorrowed', 1, 1) > 0, '6625',\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_CA_State' AND Instr(i_CoverageType, 'DriveOtherCar', 1, 1) > 0, LKP_DCCLASSCODESTAGING_CA_DRIVEOTHERCAR_i_ParentCoverageObjectId_i_SessionId.Value,\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_Line' AND Instr(i_CoverageType, 'NonOwned', 1, 1) > 0, LKP_DCCLASSCODESTAGING_CA_NONOWNED_i_ParentCoverageObjectId_i_SessionId.Value,\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_Line', LKP_DCSTATCODESTAGING_CA_i_CoverageId_i_SessionId.Value,\n\ti_LineType = 'CommercialAuto' AND LTRIM(RTRIM(i_ParentCoverageObjectName)) = 'DC_CA_State' AND Instr(i_CoverageType, 'MotorJunkLicense', 1, 1) > 0, LKP_DCCLASSCODESTAGING_CA_MOTORJUNKLICENSE_i_ParentCoverageObjectId_i_SessionId.Value,\n\tLKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class.Value) AS v_ClassCode_lkp,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(v_ClassCode_lkp),'N/A',\r\n\t-- IS_SPACES(v_ClassCode_lkp),'N/A',\r\n\t-- LENGTH(v_ClassCode_lkp)=0,'N/A',\r\n\t-- INSTR(i_CoverageType, 'NonOwned',1,1) > 0 AND INSTR(v_ClassCode_lkp,',',1,1)>0,\r\n\t-- SUBSTR(v_ClassCode_lkp,INSTR(v_ClassCode_lkp,',',1,1)+1),\r\n\t-- NOT INSTR(i_CoverageType,'NonOwned',1,1) > 0 AND INSTR(v_ClassCode_lkp,',',1,1)>0, \r\n\t-- SUBSTR(v_ClassCode_lkp,1,INSTR(v_ClassCode_lkp,',',1,1)-1),\r\n\t-- v_ClassCode_lkp)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- -- 4/15/2015 SM#548627, PROD-9266 : Code change to get only one class code value when we get multiple classcode from Source system.\n\tDECODE(TRUE,\n\tv_ClassCode_lkp IS NULL, 'N/A',\n\tIS_SPACES(v_ClassCode_lkp), 'N/A',\n\tLENGTH(v_ClassCode_lkp) = 0, 'N/A',\n\tINSTR(i_CoverageType, 'NonOwned', 1, 1) > 0 AND INSTR(v_ClassCode_lkp, ',', 1, 1) > 0, SUBSTR(v_ClassCode_lkp, INSTR(v_ClassCode_lkp, ',', 1, 1) + 1),\n\tNOT INSTR(i_CoverageType, 'NonOwned', 1, 1) > 0 AND INSTR(v_ClassCode_lkp, ',', 1, 1) > 0, SUBSTR(v_ClassCode_lkp, 1, INSTR(v_ClassCode_lkp, ',', 1, 1) - 1),\n\tv_ClassCode_lkp) AS v_ClassCode,\n\t-- *INF*: :LKP.LKP_DCSTATCODESTAGING(i_CoverageId,i_SessionId,'Subline')\n\tLKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Subline.Value AS v_SubLineCode_lkp,\n\t-- *INF*: IIF(ISNULL(v_SubLineCode_lkp) OR IS_SPACES(v_SubLineCode_lkp) OR LENGTH(v_SubLineCode_lkp)=0,'N/A',LTRIM(RTRIM(v_SubLineCode_lkp)))\n\tIFF(v_SubLineCode_lkp IS NULL OR IS_SPACES(v_SubLineCode_lkp) OR LENGTH(v_SubLineCode_lkp) = 0, 'N/A', LTRIM(RTRIM(v_SubLineCode_lkp))) AS v_SubLineCode,\n\t-- *INF*: IIF(ISNULL(i_Territory) OR IS_SPACES(i_Territory) OR LENGTH(i_Territory)=0,'N/A',LTRIM(RTRIM(i_Territory)))\n\tIFF(i_Territory IS NULL OR IS_SPACES(i_Territory) OR LENGTH(i_Territory) = 0, 'N/A', LTRIM(RTRIM(i_Territory))) AS v_Territory,\n\t-- *INF*: IIF(ISNULL(i_Premium),0,i_Premium)\n\tIFF(i_Premium IS NULL, 0, i_Premium) AS v_Premium,\n\t-- *INF*: IIF(ISNULL(i_ParentCoverageType) OR LENGTH(LTRIM(RTRIM(i_ParentCoverageType)))=0,'N/A',LTRIM(RTRIM(i_ParentCoverageType)))\n\tIFF(i_ParentCoverageType IS NULL OR LENGTH(LTRIM(RTRIM(i_ParentCoverageType))) = 0, 'N/A', LTRIM(RTRIM(i_ParentCoverageType))) AS v_PType,\n\t-- *INF*: IIF(ISNULL(i_Change),0,i_Change)\n\tIFF(i_Change IS NULL, 0, i_Change) AS v_Change,\n\t-- *INF*: IIF(\r\n\t--   v_Change=0,\r\n\t--   0,\r\n\t--   1\r\n\t-- )\n\tIFF(v_Change = 0, 0, 1) AS v_PremiumBearingIndicator,\n\tEXP_PolicyCoverageAKID.pol_ak_id,\n\tEXP_PolicyCoverageAKID.RiskLocationAKID,\n\tv_LineOfBusiness AS o_LineOfBusiness,\n\tv_CommissionPercentage AS o_CommissionPercentage,\n\tv_LineType AS o_LineType,\n\tv_PEffectiveDate AS o_PEffectiveDate,\n\tv_PExpirationDate AS o_PExpirationDate,\n\tv_Change AS o_Change,\n\ti_TType AS o_TType,\n\t-- *INF*: IIF(ISNULL(i_CoverageGUID) OR IS_SPACES(i_CoverageGUID) OR LENGTH(i_CoverageGUID)=0, 'N/A', LTRIM(RTRIM(i_CoverageGUID)))\n\tIFF(i_CoverageGUID IS NULL OR IS_SPACES(i_CoverageGUID) OR LENGTH(i_CoverageGUID) = 0, 'N/A', LTRIM(RTRIM(i_CoverageGUID))) AS o_CoverageGUID,\n\ti_LineId AS o_LineId,\n\t-- *INF*: pol_ak_id||'~'||RiskLocationAKID||'~'||v_PolicyCoverageAKID||'~'||TO_CHAR(v_TCreatedDate)||'~'||i_CoverageGUID\n\tpol_ak_id || '~' || RiskLocationAKID || '~' || v_PolicyCoverageAKID || '~' || TO_CHAR(v_TCreatedDate) || '~' || i_CoverageGUID AS o_RatingCoverageKey,\n\tv_CoverageForm AS o_CoverageForm,\n\tv_RiskType AS o_RiskType,\n\tv_CoverageType AS o_CoverageType,\n\t-- *INF*: IIF(i_LineType='WorkersCompensation' AND ltrim(rtrim(v_ClassCode)) !='N/A',LPAD(LTRIM(RTRIM(v_ClassCode)),4,'0'),LTRIM(RTRIM(v_ClassCode)))\r\n\t-- \n\tIFF(i_LineType = 'WorkersCompensation' AND ltrim(rtrim(v_ClassCode)) != 'N/A', LPAD(LTRIM(RTRIM(v_ClassCode)), 4, '0'), LTRIM(RTRIM(v_ClassCode))) AS o_ClassCode,\n\tv_Exposure AS o_Exposure,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_PeriodStartDate) AND ISNULL(lkp_PeriodStartDate),v_TEffectiveDate,\r\n\t-- NOT ISNULL(lkp_PeriodStartDate),GREATEST(lkp_PeriodStartDate,v_TEffectiveDate),\r\n\t-- GREATEST(i_PeriodStartDate,v_TEffectiveDate))\n\tDECODE(TRUE,\n\ti_PeriodStartDate IS NULL AND lkp_PeriodStartDate IS NULL, v_TEffectiveDate,\n\tNOT lkp_PeriodStartDate IS NULL, GREATEST(lkp_PeriodStartDate, v_TEffectiveDate),\n\tGREATEST(i_PeriodStartDate, v_TEffectiveDate)) AS o_TEffectiveDate,\n\tv_TCreatedDate AS o_TCreatedDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_PeriodEndDate) AND ISNULL(lkp_PeriodEndDate),v_TExpirationDate,\r\n\t-- NOT ISNULL(lkp_PeriodEndDate),LEAST(lkp_PeriodEndDate,v_TExpirationDate),\r\n\t-- LEAST(i_PeriodEndDate,v_TExpirationDate))\n\tDECODE(TRUE,\n\ti_PeriodEndDate IS NULL AND lkp_PeriodEndDate IS NULL, v_TExpirationDate,\n\tNOT lkp_PeriodEndDate IS NULL, LEAST(lkp_PeriodEndDate, v_TExpirationDate),\n\tLEAST(i_PeriodEndDate, v_TExpirationDate)) AS o_TExpirationDate,\n\t-- *INF*: IIF(v_TType='Cancel', v_TCancellationDate, TO_DATE('21001231235959','YYYYMMDDHH24MISS'))\n\tIFF(v_TType = 'Cancel', v_TCancellationDate, TO_DATE('21001231235959', 'YYYYMMDDHH24MISS')) AS o_TCancellationDate,\n\t-- *INF*: IIF(ISNULL(i_CoverageVersion) OR IS_SPACES(i_CoverageVersion) OR LENGTH(i_CoverageVersion)=0, 'N/A', i_CoverageVersion)\n\tIFF(i_CoverageVersion IS NULL OR IS_SPACES(i_CoverageVersion) OR LENGTH(i_CoverageVersion) = 0, 'N/A', i_CoverageVersion) AS o_CoverageVersion,\n\tv_SubLineCode AS o_SubLineCode,\n\tv_PremiumBearingIndicator AS o_PremiumBearingIndicator,\n\t-- *INF*: IIF(ISNULL(i_WBProduct) OR IS_SPACES(i_WBProduct) OR LENGTH(i_WBProduct)=0, 'N/A', i_WBProduct)\n\tIFF(i_WBProduct IS NULL OR IS_SPACES(i_WBProduct) OR LENGTH(i_WBProduct) = 0, 'N/A', i_WBProduct) AS o_WBProduct,\n\t-- *INF*: IIF(ISNULL(i_WBProductType) OR IS_SPACES(i_WBProductType) OR LENGTH(i_WBProductType)=0, 'N/A', i_WBProductType)\n\tIFF(i_WBProductType IS NULL OR IS_SPACES(i_WBProductType) OR LENGTH(i_WBProductType) = 0, 'N/A', i_WBProductType) AS o_WBProductType,\n\t-- *INF*: IIF(ISNULL(i_Division) OR IS_SPACES(i_Division) OR LENGTH(i_Division)=0, 'N/A', i_Division)\n\tIFF(i_Division IS NULL OR IS_SPACES(i_Division) OR LENGTH(i_Division) = 0, 'N/A', i_Division) AS o_Division,\n\t-- *INF*: IIF(ISNULL(i_SpecialClassLevel1) OR IS_SPACES(i_SpecialClassLevel1) OR LENGTH(i_SpecialClassLevel1)=0,'N/A',LTRIM(RTRIM(i_SpecialClassLevel1)))\n\tIFF(i_SpecialClassLevel1 IS NULL OR IS_SPACES(i_SpecialClassLevel1) OR LENGTH(i_SpecialClassLevel1) = 0, 'N/A', LTRIM(RTRIM(i_SpecialClassLevel1))) AS o_SpecialClassLevel1,\n\t-- *INF*: IIF( (IN(LOWER(i_LineType),'property','sbopproperty')  OR  LTRIM(RTRIM(i_WBProduct))='SMARTbusiness') AND  NOT ISNULL(i_BuildingNumber), LPAD(i_BuildingNumber, 3, '0'), '000')\n\tIFF(( IN(LOWER(i_LineType), 'property', 'sbopproperty') OR LTRIM(RTRIM(i_WBProduct)) = 'SMARTbusiness' ) AND NOT i_BuildingNumber IS NULL, LPAD(i_BuildingNumber, 3, '0'), '000') AS o_SubLocationUnitNumber,\n\t-- *INF*: IIF(ISNULL(i_PolicyCoverage) OR IS_SPACES(i_PolicyCoverage) OR LENGTH(i_PolicyCoverage)=0,'N/A',LTRIM(RTRIM(i_PolicyCoverage)))\n\tIFF(i_PolicyCoverage IS NULL OR IS_SPACES(i_PolicyCoverage) OR LENGTH(i_PolicyCoverage) = 0, 'N/A', LTRIM(RTRIM(i_PolicyCoverage))) AS o_PolicyCoverage,\n\t-- *INF*: IIF(ISNULL(i_PerilGroup) OR IS_SPACES(i_PerilGroup) OR LENGTH(i_PerilGroup)=0, 'N/A', LTRIM(RTRIM(i_PerilGroup)))\n\tIFF(i_PerilGroup IS NULL OR IS_SPACES(i_PerilGroup) OR LENGTH(i_PerilGroup) = 0, 'N/A', LTRIM(RTRIM(i_PerilGroup))) AS o_PerilGroup,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_LineType = 'BusinessOwners' and LTRIM(RTRIM(i_WBProduct))='SMARTbusiness' and LTRIM(RTRIM(i_Division))='CommercialLines' and INSTR(v_PType,'Spoilage')>0,'Spoilage',\r\n\t-- (i_WBProduct = 'SMARTbusiness' and v_LineType = 'BusinessOwners') Or (IN (v_PType,'EquipmentBreakdown','MineSubsidence','DataCompromise','CyberComputerAttack','CyberExtendedReportingPeriod','CyberExtortionExpenses','CyberNetworkSecurity', 'CyberSuite','EmploymentPracticesLiability', 'WB516', 'WB516CA','WB516CANC', 'WB516GL', 'NS0279', 'NS0313','ActsErrorsOmissionsLiabilityCoverages', 'WB1429', 'WB2086', 'WB1144', 'WB1430', 'WB1146', 'NS0320', 'WB2525','WB2525NC', 'WB2499', 'WB2216', 'WB1372','NS0453','NS0453NC', 'NS0321', 'CA2562', 'CA2564', 'CA2565')),v_PType,\r\n\t--  'N/A')\n\tDECODE(TRUE,\n\tv_LineType = 'BusinessOwners' AND LTRIM(RTRIM(i_WBProduct)) = 'SMARTbusiness' AND LTRIM(RTRIM(i_Division)) = 'CommercialLines' AND INSTR(v_PType, 'Spoilage') > 0, 'Spoilage',\n\t( i_WBProduct = 'SMARTbusiness' AND v_LineType = 'BusinessOwners' ) OR ( IN(v_PType, 'EquipmentBreakdown', 'MineSubsidence', 'DataCompromise', 'CyberComputerAttack', 'CyberExtendedReportingPeriod', 'CyberExtortionExpenses', 'CyberNetworkSecurity', 'CyberSuite', 'EmploymentPracticesLiability', 'WB516', 'WB516CA', 'WB516CANC', 'WB516GL', 'NS0279', 'NS0313', 'ActsErrorsOmissionsLiabilityCoverages', 'WB1429', 'WB2086', 'WB1144', 'WB1430', 'WB1146', 'NS0320', 'WB2525', 'WB2525NC', 'WB2499', 'WB2216', 'WB1372', 'NS0453', 'NS0453NC', 'NS0321', 'CA2562', 'CA2564', 'CA2565') ), v_PType,\n\t'N/A') AS lkp_InsRefParentCoverageType,\n\tv_PType AS o_ParentCoverageType,\n\t-- *INF*: IIF(NOT ISNULL(i_SubCoverageType) AND NOT LENGTH(i_SubCoverageType)=0 AND NOT IS_SPACES(i_SubCoverageType),i_SubCoverageType,'N/A')\n\tIFF(NOT i_SubCoverageType IS NULL AND NOT LENGTH(i_SubCoverageType) = 0 AND NOT IS_SPACES(i_SubCoverageType), i_SubCoverageType, 'N/A') AS o_SubCoverageType,\n\t-- *INF*: IIF(NOT ISNULL(i_CoverageDeleteFlag),i_CoverageDeleteFlag,'0')\n\tIFF(NOT i_CoverageDeleteFlag IS NULL, i_CoverageDeleteFlag, '0') AS o_CoverageDeleteFlag,\n\t-- *INF*: IIF(ISNULL(i_OccupancyClassDescription) OR IS_SPACES(i_OccupancyClassDescription) OR LENGTH(i_OccupancyClassDescription)=0,'N/A',LTRIM(RTRIM(i_OccupancyClassDescription)))\n\tIFF(i_OccupancyClassDescription IS NULL OR IS_SPACES(i_OccupancyClassDescription) OR LENGTH(i_OccupancyClassDescription) = 0, 'N/A', LTRIM(RTRIM(i_OccupancyClassDescription))) AS OccupancyClassDescription,\n\t-- *INF*: DECODE(i_ActiveBuildingFlag,'T','1','F','0','1')\n\tDECODE(i_ActiveBuildingFlag,\n\t'T', '1',\n\t'F', '0',\n\t'1') AS ActiveBuildingFlag,\n\tEXP_PolicyKey.o_PolicyKey,\n\tEXP_RiskLocationKey.RatingCoverageAKID,\n\tEXP_RiskLocationKey.RatingCoverageHashKey,\n\tEXP_RiskLocationKey.RatingCoverageId,\n\tEXP_RiskLocationKey.PolicyCoverageAKID,\n\tEXP_RiskLocationKey.RatingCoverageEffectivedate,\n\tEXP_RiskLocationKey.RatingCoverageExpirationdate\n\tFROM EXP_PolicyCoverageAKID\n\t -- Manually join with EXP_PolicyKey\n\t -- Manually join with EXP_RiskLocationKey\n\t -- Manually join with SQ_RatingCoverage_SRC\n\tLEFT JOIN LKP_DCWCStateTermStaging\n\tON LKP_DCWCStateTermStaging.WC_StateTermId = SQ_RatingCoverage_SRC.ParentCoverageObjectId AND LKP_DCWCStateTermStaging.ObjectName = SQ_RatingCoverage_SRC.ParentCoverageObjectName\n\tLEFT JOIN LKP_PolicyCoverageAKID\n\tON LKP_PolicyCoverageAKID.PolicyCoverageHashKey = EXP_PolicyCoverageAKID.o_PolicyCoverageHashKey\n\tLEFT JOIN LKP_WBWCCoverageTermStage\n\tON LKP_WBWCCoverageTermStage.CoverageId = SQ_RatingCoverage_SRC.CoverageId\n\tLEFT JOIN LKP_DCSTATCODESTAGING LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class\n\tON LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class.ObjectId = i_CoverageId\n\tAND LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class.SessionId = i_SessionId\n\tAND LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Class.Type = 'Class'\n\n\tLEFT JOIN LKP_DCCLASSCODESTAGING_WC LKP_DCCLASSCODESTAGING_WC_i_ParentCoverageObjectId_i_SessionId\n\tON LKP_DCCLASSCODESTAGING_WC_i_ParentCoverageObjectId_i_SessionId.ObjectId = i_ParentCoverageObjectId\n\tAND LKP_DCCLASSCODESTAGING_WC_i_ParentCoverageObjectId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCSTATCODE_SUPDCTSTATCODE LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId\n\tON LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.LineOfBusiness = 'WorkersCompensation'\n\tAND LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.SessionId = 'Type'\n\tAND LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.ObjectId = i_CoverageId\n\tAND LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.ObjectName = 'DC_Coverage'\n\tAND LKP_DCSTATCODE_SUPDCTSTATCODE__WorkersCompensation_Type_i_CoverageId_DC_Coverage_i_SessionId.ObjectKey = i_SessionId\n\n\tLEFT JOIN LKP_DCCLASSCODESTAGING_CA_RISK LKP_DCCLASSCODESTAGING_CA_RISK_i_ParentCoverageObjectId_i_SessionId\n\tON LKP_DCCLASSCODESTAGING_CA_RISK_i_ParentCoverageObjectId_i_SessionId.ObjectId = i_ParentCoverageObjectId\n\tAND LKP_DCCLASSCODESTAGING_CA_RISK_i_ParentCoverageObjectId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCCLASSCODESTAGING_CA_DRIVEOTHERCAR LKP_DCCLASSCODESTAGING_CA_DRIVEOTHERCAR_i_ParentCoverageObjectId_i_SessionId\n\tON LKP_DCCLASSCODESTAGING_CA_DRIVEOTHERCAR_i_ParentCoverageObjectId_i_SessionId.ObjectId = i_ParentCoverageObjectId\n\tAND LKP_DCCLASSCODESTAGING_CA_DRIVEOTHERCAR_i_ParentCoverageObjectId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCCLASSCODESTAGING_CA_NONOWNED LKP_DCCLASSCODESTAGING_CA_NONOWNED_i_ParentCoverageObjectId_i_SessionId\n\tON LKP_DCCLASSCODESTAGING_CA_NONOWNED_i_ParentCoverageObjectId_i_SessionId.ObjectId = i_ParentCoverageObjectId\n\tAND LKP_DCCLASSCODESTAGING_CA_NONOWNED_i_ParentCoverageObjectId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCSTATCODESTAGING_CA LKP_DCSTATCODESTAGING_CA_i_CoverageId_i_SessionId\n\tON LKP_DCSTATCODESTAGING_CA_i_CoverageId_i_SessionId.ObjectId = i_CoverageId\n\tAND LKP_DCSTATCODESTAGING_CA_i_CoverageId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCCLASSCODESTAGING_CA_MOTORJUNKLICENSE LKP_DCCLASSCODESTAGING_CA_MOTORJUNKLICENSE_i_ParentCoverageObjectId_i_SessionId\n\tON LKP_DCCLASSCODESTAGING_CA_MOTORJUNKLICENSE_i_ParentCoverageObjectId_i_SessionId.ObjectId = i_ParentCoverageObjectId\n\tAND LKP_DCCLASSCODESTAGING_CA_MOTORJUNKLICENSE_i_ParentCoverageObjectId_i_SessionId.SessionId = i_SessionId\n\n\tLEFT JOIN LKP_DCSTATCODESTAGING LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Subline\n\tON LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Subline.ObjectId = i_CoverageId\n\tAND LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Subline.SessionId = i_SessionId\n\tAND LKP_DCSTATCODESTAGING_i_CoverageId_i_SessionId_Subline.Type = 'Subline'\n\n),\nLKP_RiskLocation_GetStateProvinceCode AS (\n\tSELECT\n\tstate_code,\n\tRiskLocationAKID\n\tFROM (\n\t\tSELECT \r\n\t\tRiskLocation.CurrentSnapshotFlag as CurrentSnapshotFlag, \r\n\t\tst.state_code as state_code, \r\n\t\tRiskLocation.RiskLocationAKID as RiskLocationAKID \r\n\t\tFROM \r\n\t\tRiskLocation RiskLocation\r\n\t\tinner join\r\n\t\tsup_state St on ST.state_abbrev=RiskLocation.StateProvinceCode\r\n\t\tInner Join\r\n\t\tV2.policy b\r\n\t\ton b.pol_ak_id=RiskLocation.PolicyAKID\r\n\t\tand b.crrnt_snpsht_flag=1\r\n\t\tINNER JOIN \r\n\t\t(select distinct WCT.PolicyNumber,ISNULL(RIGHT('00'+convert(varchar(3),WCT.PolicyVersion),2),'00') as PolicyVersionFormatted from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT) WCT\r\n\t\ton WCT.PolicyNumber=b.pol_num\r\n\t\tand PolicyVersionFormatted=b.pol_mod\r\n\t\tWHERE \r\n\t\tRiskLocation.CurrentSnapshotFlag=1 and \r\n\t\tRiskLocation.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationAKID ORDER BY state_code) = 1\n),\nEXP_ApplyTemplateChangeRules AS (\n\tSELECT\n\tEXP_GetValues.o_CoverageType AS i_CoverageType,\n\tEXP_GetValues.o_ClassCode AS i_ClassCode,\n\tLKP_RiskLocation_GetStateProvinceCode.state_code AS i_state_code,\n\tEXP_GetValues.o_LineType AS i_LineType,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_LineType != 'WorkersCompensation', i_ClassCode,\r\n\t-- i_state_code='MN' and i_CoverageType='SecondInjuryFund', '0174',\r\n\t-- i_state_code='IN' and i_CoverageType='SecondInjuryFund', '0935',\r\n\t-- i_state_code='MN' and i_CoverageType='OtherTaxesAndAssessments1', '0988',\r\n\t-- i_state_code='MT' and i_CoverageType='SecondInjuryFund', '0935',\r\n\t-- i_state_code='MT' and i_CoverageType='AdministrationFund', '0939',\r\n\t-- i_state_code='MT' and i_CoverageType='SafetyEducationAndTrainingFund', '9616',\r\n\t-- i_state_code='MT' and i_CoverageType='OtherTaxesAndAssessments1', '0934',\r\n\t-- i_state_code='NJ' and i_CoverageType='SecondInjuryFund', '0935',\r\n\t-- i_state_code='NJ' and i_CoverageType='UninsuredEmployersFund', '0936',\r\n\t-- i_state_code='NY' and i_CoverageType='StateAssessment', '0932',\r\n\t-- i_state_code='NY' and i_CoverageType='SecurityFundCharge', '9749',\r\n\t-- i_state_code='PA' and i_CoverageType='EmployerAssessment', '0938',\r\n\t-- \r\n\t-- i_ClassCode\r\n\t-- )\n\tDECODE(TRUE,\n\ti_LineType != 'WorkersCompensation', i_ClassCode,\n\ti_state_code = 'MN' AND i_CoverageType = 'SecondInjuryFund', '0174',\n\ti_state_code = 'IN' AND i_CoverageType = 'SecondInjuryFund', '0935',\n\ti_state_code = 'MN' AND i_CoverageType = 'OtherTaxesAndAssessments1', '0988',\n\ti_state_code = 'MT' AND i_CoverageType = 'SecondInjuryFund', '0935',\n\ti_state_code = 'MT' AND i_CoverageType = 'AdministrationFund', '0939',\n\ti_state_code = 'MT' AND i_CoverageType = 'SafetyEducationAndTrainingFund', '9616',\n\ti_state_code = 'MT' AND i_CoverageType = 'OtherTaxesAndAssessments1', '0934',\n\ti_state_code = 'NJ' AND i_CoverageType = 'SecondInjuryFund', '0935',\n\ti_state_code = 'NJ' AND i_CoverageType = 'UninsuredEmployersFund', '0936',\n\ti_state_code = 'NY' AND i_CoverageType = 'StateAssessment', '0932',\n\ti_state_code = 'NY' AND i_CoverageType = 'SecurityFundCharge', '9749',\n\ti_state_code = 'PA' AND i_CoverageType = 'EmployerAssessment', '0938',\n\ti_ClassCode) AS v_MN_IN_ClassCode_Override,\n\tv_MN_IN_ClassCode_Override AS o_ClassCode\n\tFROM EXP_GetValues\n\tLEFT JOIN LKP_RiskLocation_GetStateProvinceCode\n\tON LKP_RiskLocation_GetStateProvinceCode.RiskLocationAKID = Mplt_RiskLocationAKID_Population.o_RiskLocationAKID\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tEXP_GetValues.PolicyStatus, \n\tEXP_GetValues.o_LineOfBusiness AS i_LineOfBusiness, \n\tEXP_GetValues.o_CommissionPercentage AS i_CommissionPercentage, \n\tEXP_GetValues.o_LineType AS LineType, \n\tEXP_GetValues.o_PEffectiveDate AS PEffectiveDate, \n\tEXP_GetValues.o_PExpirationDate AS PExpirationDate, \n\tEXP_GetValues.o_Change AS Change, \n\tEXP_GetValues.o_TType AS TType, \n\tEXP_GetValues.o_LineId AS LineId, \n\tEXP_GetValues.o_RatingCoverageKey AS RatingCoverageKey, \n\tEXP_GetValues.o_CoverageForm AS CoverageForm, \n\tEXP_GetValues.o_RiskType AS RiskType, \n\tEXP_GetValues.o_CoverageType AS CoverageType, \n\tEXP_ApplyTemplateChangeRules.o_ClassCode AS ClassCode, \n\tEXP_GetValues.o_Exposure AS Exposure, \n\tEXP_GetValues.o_TEffectiveDate AS TEffectiveDate, \n\tEXP_GetValues.pol_ak_id, \n\tEXP_GetValues.o_CoverageGUID AS CoverageGUID, \n\tEXP_GetValues.o_TCreatedDate AS TCreatedDate, \n\tEXP_GetValues.i_PolicyCoverageAKID AS PolicyCoverageAKID, \n\tEXP_GetValues.o_TExpirationDate AS TExpirationDate, \n\tEXP_GetValues.o_TCancellationDate AS TCancellationDate, \n\tEXP_GetValues.o_CoverageVersion AS CoverageVersion, \n\tEXP_GetValues.o_SubLineCode AS SubLineCode, \n\tEXP_GetValues.o_PremiumBearingIndicator AS PremiumBearingIndicator, \n\tEXP_GetValues.o_WBProduct AS WBProduct, \n\tEXP_GetValues.o_WBProductType AS WBProductType, \n\tEXP_GetValues.o_Division AS Division, \n\tEXP_GetValues.o_SpecialClassLevel1 AS SpecialClassLevel1, \n\tEXP_GetValues.o_SubLocationUnitNumber AS SubLocationUnitNumber, \n\tEXP_GetValues.o_PolicyCoverage AS PolicyCoverage, \n\tEXP_GetValues.o_PerilGroup AS PerilGroup, \n\tEXP_GetValues.lkp_InsRefParentCoverageType, \n\tEXP_GetValues.o_ParentCoverageType AS ParentCoverageType, \n\tEXP_GetValues.o_SubCoverageType AS SubCoverageType, \n\tEXP_GetValues.o_CoverageDeleteFlag AS CoverageDeleteFlag, \n\tEXP_GetValues.OccupancyClassDescription, \n\tEXP_GetValues.ActiveBuildingFlag, \n\tEXP_GetValues.RiskLocationAKID, \n\tEXP_GetValues.o_PolicyKey AS PolicyKey, \n\tEXP_GetValues.RatingCoverageAKID, \n\tEXP_GetValues.RatingCoverageHashKey, \n\tEXP_GetValues.RatingCoverageId, \n\tEXP_GetValues.PolicyCoverageAKID AS RatingCoverage_PolicyCoverageAKID, \n\tEXP_GetValues.RatingCoverageEffectivedate, \n\tEXP_GetValues.RatingCoverageExpirationdate\n\tFROM EXP_GetValues\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id, CoverageGUID, TCreatedDate ORDER BY NULL) = 1\n),\nLKP_SupDCTPolicyOfferingLineOfBusinessProductRules AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessCode,\n\tProductCode,\n\tDCTProductCode,\n\tDCTProductType,\n\tDCTPolicyDivision,\n\tDCTLineOfBusinessCode,\n\tDCTCoverageType\n\tFROM (\n\t\tSELECT \r\n\t\tInsuranceReferenceLineOfBusinessCode as InsuranceReferenceLineOfBusinessCode, \r\n\t\tProductCode as ProductCode,\r\n\t\tDCTProductCode as DCTProductCode, \r\n\t\tDCTProductType as DCTProductType, \r\n\t\tDCTPolicyDivision as DCTPolicyDivision, \r\n\t\tREPLACE(DCTLineOfBusinessCode,' ','') as DCTLineOfBusinessCode,\r\n\t\tDCTCoverageType as DCTCoverageType \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTPolicyOfferingLineOfBusinessProductRules\r\n\t\twhere getdate() between effectivedate and expirationdate\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DCTProductCode,DCTProductType,DCTPolicyDivision,DCTLineOfBusinessCode,DCTCoverageType ORDER BY InsuranceReferenceLineOfBusinessCode) = 1\n),\nLKP_SupSpecialClassGroup AS (\n\tSELECT\n\tStandardSpecialClassGroupCode,\n\tSpecialClassGroupCode\n\tFROM (\n\t\tSELECT \n\t\t\tStandardSpecialClassGroupCode,\n\t\t\tSpecialClassGroupCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupSpecialClassGroup\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SpecialClassGroupCode ORDER BY StandardSpecialClassGroupCode) = 1\n),\nLKP_sup_insurance_line AS (\n\tSELECT\n\tStandardInsuranceLineCode,\n\tins_line_code\n\tFROM (\n\t\tSELECT \n\t\t\tStandardInsuranceLineCode,\n\t\t\tins_line_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line\n\t\tWHERE crrnt_snpsht_flag=1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_code ORDER BY StandardInsuranceLineCode) = 1\n),\nEXP_CalPolicyCoverageHashKey AS (\n\tSELECT\n\tAGG_RemoveDuplicates.pol_ak_id AS i_pol_ak_id,\n\tAGG_RemoveDuplicates.RiskLocationAKID AS i_RiskLocationAKID,\n\tAGG_RemoveDuplicates.PolicyCoverageAKID AS i_PolicyCoverageAKID,\n\tAGG_RemoveDuplicates.LineType AS i_LineType,\n\tAGG_RemoveDuplicates.PEffectiveDate,\n\tAGG_RemoveDuplicates.PExpirationDate,\n\tAGG_RemoveDuplicates.PolicyCoverage AS i_PolicyCoverage,\n\tLKP_SupSpecialClassGroup.StandardSpecialClassGroupCode AS i_StandardSpecialClassGroupCode,\n\tLKP_sup_insurance_line.StandardInsuranceLineCode,\n\tAGG_RemoveDuplicates.PolicyStatus,\n\tAGG_RemoveDuplicates.Change,\n\tAGG_RemoveDuplicates.TType,\n\tAGG_RemoveDuplicates.CoverageGUID,\n\tAGG_RemoveDuplicates.LineId,\n\tAGG_RemoveDuplicates.RatingCoverageKey,\n\tAGG_RemoveDuplicates.CoverageForm,\n\tAGG_RemoveDuplicates.RiskType,\n\tAGG_RemoveDuplicates.CoverageType,\n\tAGG_RemoveDuplicates.ClassCode,\n\tAGG_RemoveDuplicates.Exposure,\n\tAGG_RemoveDuplicates.TEffectiveDate,\n\tAGG_RemoveDuplicates.TCreatedDate,\n\tAGG_RemoveDuplicates.TExpirationDate,\n\tAGG_RemoveDuplicates.TCancellationDate,\n\tAGG_RemoveDuplicates.CoverageVersion,\n\tAGG_RemoveDuplicates.SubLineCode,\n\tAGG_RemoveDuplicates.PremiumBearingIndicator,\n\tAGG_RemoveDuplicates.SubLocationUnitNumber,\n\tAGG_RemoveDuplicates.PerilGroup,\n\tAGG_RemoveDuplicates.ParentCoverageType,\n\tAGG_RemoveDuplicates.SubCoverageType,\n\tAGG_RemoveDuplicates.CoverageDeleteFlag,\n\tAGG_RemoveDuplicates.OccupancyClassDescription,\n\tAGG_RemoveDuplicates.ActiveBuildingFlag,\n\tLKP_SupDCTPolicyOfferingLineOfBusinessProductRules.InsuranceReferenceLineOfBusinessCode,\n\tLKP_SupDCTPolicyOfferingLineOfBusinessProductRules.ProductCode,\n\t-- *INF*: IIF(ISNULL(i_StandardSpecialClassGroupCode), 'N/A', LTRIM(RTRIM(i_StandardSpecialClassGroupCode)))\n\tIFF(i_StandardSpecialClassGroupCode IS NULL, 'N/A', LTRIM(RTRIM(i_StandardSpecialClassGroupCode))) AS o_SpecialClassGroupCode,\n\ti_PolicyCoverageAKID AS o_PolicyCoverageAKID,\n\tAGG_RemoveDuplicates.PolicyKey,\n\ti_pol_ak_id AS o_PolicyAKID,\n\tAGG_RemoveDuplicates.RatingCoverageAKID,\n\tAGG_RemoveDuplicates.RatingCoverageHashKey,\n\tAGG_RemoveDuplicates.RatingCoverageId,\n\tAGG_RemoveDuplicates.RatingCoverage_PolicyCoverageAKID,\n\tAGG_RemoveDuplicates.RatingCoverageEffectivedate,\n\tAGG_RemoveDuplicates.RatingCoverageExpirationdate\n\tFROM AGG_RemoveDuplicates\n\tLEFT JOIN LKP_SupDCTPolicyOfferingLineOfBusinessProductRules\n\tON LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductCode = AGG_RemoveDuplicates.WBProduct AND LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.DCTProductType = AGG_RemoveDuplicates.WBProductType AND LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.DCTPolicyDivision = AGG_RemoveDuplicates.Division AND LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.DCTLineOfBusinessCode = AGG_RemoveDuplicates.LineType AND LKP_SupDCTPolicyOfferingLineOfBusinessProductRules.DCTCoverageType = AGG_RemoveDuplicates.lkp_InsRefParentCoverageType\n\tLEFT JOIN LKP_SupSpecialClassGroup\n\tON LKP_SupSpecialClassGroup.SpecialClassGroupCode = AGG_RemoveDuplicates.SpecialClassLevel1\n\tLEFT JOIN LKP_sup_insurance_line\n\tON LKP_sup_insurance_line.ins_line_code = AGG_RemoveDuplicates.LineType\n),\nLKP_ASL AS (\n\tSELECT\n\tAnnualStatementLineId,\n\tSchedulePNumber,\n\tAnnualStatementLineNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tInsuranceLineCode,\n\tDctRiskTypeCode,\n\tDctCoverageTypeCode,\n\tDctPerilGroup,\n\tDctSubCoverageTypeCode,\n\tDctCoverageVersion\n\tFROM (\n\t\tSELECT DISTINCT ASLRule.AnnualStatementLineId as AnnualStatementLineId, \r\n\t\tASL.SchedulePNumber as SchedulePNumber, \r\n\t\tASL.AnnualStatementLineNumber as AnnualStatementLineNumber, \r\n\t\tASL.AnnualStatementLineCode as AnnualStatementLineCode, \r\n\t\tASL.SubAnnualStatementLineNumber as SubAnnualStatementLineNumber, \r\n\t\tASL.SubAnnualStatementLineCode as SubAnnualStatementLineCode, \r\n\t\tASL.SubNonAnnualStatementLineCode as SubNonAnnualStatementLineCode, \r\n\t\tSC.InsuranceLineCode as InsuranceLineCode, \r\n\t\tSC.DctRiskTypeCode as DctRiskTypeCode, \r\n\t\tSC.DctCoverageTypeCode as DctCoverageTypeCode, \r\n\t\tSC.DctPerilGroup as DctPerilGroup, \r\n\t\tSC.DctSubCoverageTypeCode as DctSubCoverageTypeCode, \r\n\t\tSC.DctCoverageVersion as DctCoverageVersion \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupDCTAnnualStatementLineRule ASLRule\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.AnnualStatementLine ASL\r\n\t\ton ASLRule.AnnualStatementLineId=ASL.AnnualStatementLineId\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.SystemCoverage SC\r\n\t\ton ASLRule.SystemCoverageId=SC.SystemCoverageId\r\n\t\tWHERE SC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,DctRiskTypeCode,DctCoverageTypeCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY AnnualStatementLineId) = 1\n),\nLKP_ClassificationReference AS (\n\tSELECT\n\tOriginatingOrganizationCode,\n\tInsuranceLineCode,\n\tClassCode\n\tFROM (\n\t\tSELECT DISTINCT ltrim(rtrim(OriginatingOrganizationCode)) as OriginatingOrganizationCode, \r\n\t\tltrim(rtrim(InsuranceLineCode)) as InsuranceLineCode, \r\n\t\tltrim(rtrim(ClassCode)) as ClassCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ClassificationReference\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,ClassCode ORDER BY OriginatingOrganizationCode) = 1\n),\nLKP_ConformedCoverage AS (\n\tSELECT\n\tCoverageSummaryDescription,\n\tDctCoverageTypeCode,\n\tDctCoverageVersion,\n\tDctPerilGroup,\n\tDctRiskTypeCode,\n\tDctSubCoverageTypeCode,\n\tInsuranceLineCode\n\tFROM (\n\t\tSELECT DISTINCT\r\n\t\tCS.CoverageSummaryDescription as CoverageSummaryDescription,\r\n\t\tLTRIM(RTRIM(SC.DctCoverageTypeCode)) as DctCoverageTypeCode,\r\n\t\tLTRIM(RTRIM(SC.DctCoverageVersion)) as DctCoverageVersion,\r\n\t\tLTRIM(RTRIM(SC.DctPerilGroup)) as DctPerilGroup,\r\n\t\tLTRIM(RTRIM(SC.DctRiskTypeCode)) as DctRiskTypeCode,\r\n\t\tLTRIM(RTRIM(SC.DctSubCoverageTypeCode)) as DctSubCoverageTypeCode,\r\n\t\tLTRIM(RTRIM(SC.InsuranceLineCode)) as InsuranceLineCode\r\n\t\tFROM SystemCoverage SC \r\n\t\tINNER JOIN ConformedCoverage CC ON SC.ConformedCoverageId=CC.ConformedCoverageId\r\n\t\tINNER JOIN CoverageGroup CG ON CC.CoverageGroupId=CG.CoverageGroupId\r\n\t\tINNER JOIN CoverageSummary CS ON CG.CoverageSummaryId=CS.CoverageSummaryId\r\n\t\tWHERE LTRIM(RTRIM(CS.CoverageSummaryDescription)) in \r\n\t\t('Garage Liability','Garage Physical Damage','Garagekeepers - Dealers','Garage Other')\r\n\t\tAND SC.SourceSystemId='DCT'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DctCoverageTypeCode,DctCoverageVersion,DctPerilGroup,DctRiskTypeCode,DctSubCoverageTypeCode,InsuranceLineCode ORDER BY CoverageSummaryDescription) = 1\n),\nEXP_RatingCoverageHashKey AS (\n\tSELECT\n\tEXP_CalPolicyCoverageHashKey.o_PolicyCoverageAKID AS i_PolicyCoverageAKID,\n\tLKP_ClassificationReference.OriginatingOrganizationCode AS i_OriginatingOrganizationCode,\n\tEXP_CalPolicyCoverageHashKey.StandardInsuranceLineCode,\n\tEXP_CalPolicyCoverageHashKey.PolicyStatus,\n\tEXP_CalPolicyCoverageHashKey.Change,\n\tEXP_CalPolicyCoverageHashKey.TType,\n\tEXP_CalPolicyCoverageHashKey.CoverageGUID,\n\tEXP_CalPolicyCoverageHashKey.LineId,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageKey,\n\tEXP_CalPolicyCoverageHashKey.CoverageForm,\n\tEXP_CalPolicyCoverageHashKey.RiskType,\n\tEXP_CalPolicyCoverageHashKey.CoverageType,\n\tEXP_CalPolicyCoverageHashKey.ClassCode,\n\tEXP_CalPolicyCoverageHashKey.Exposure,\n\tEXP_CalPolicyCoverageHashKey.TEffectiveDate,\n\tEXP_CalPolicyCoverageHashKey.TCreatedDate,\n\tEXP_CalPolicyCoverageHashKey.TExpirationDate,\n\tEXP_CalPolicyCoverageHashKey.TCancellationDate,\n\tEXP_CalPolicyCoverageHashKey.CoverageVersion,\n\tEXP_CalPolicyCoverageHashKey.SubLineCode,\n\tLKP_ASL.AnnualStatementLineNumber,\n\tEXP_CalPolicyCoverageHashKey.PremiumBearingIndicator,\n\tEXP_CalPolicyCoverageHashKey.SubLocationUnitNumber,\n\tEXP_CalPolicyCoverageHashKey.o_SpecialClassGroupCode AS SpecialClassGroupCode,\n\tEXP_CalPolicyCoverageHashKey.PerilGroup,\n\t-- *INF*: IIF(StandardInsuranceLineCode='WC', 'NCCI','ISO')\r\n\t-- \r\n\t-- ---IIF(ISNULL(i_OriginatingOrganizationCode), 'N/A', i_OriginatingOrganizationCode)\n\tIFF(StandardInsuranceLineCode = 'WC', 'NCCI', 'ISO') AS o_ClassCodeOrganizationCode,\n\t-- *INF*: iif(isnull(i_PolicyCoverageAKID),-1,i_PolicyCoverageAKID)\n\tIFF(i_PolicyCoverageAKID IS NULL, - 1, i_PolicyCoverageAKID) AS o_PolicyCoverageAKID,\n\t-1 AS o_StatisticalCoverageAKID,\n\tLKP_ASL.AnnualStatementLineId,\n\tLKP_ASL.SchedulePNumber,\n\tLKP_ASL.AnnualStatementLineCode,\n\tLKP_ASL.SubAnnualStatementLineNumber,\n\tLKP_ASL.SubAnnualStatementLineCode,\n\tLKP_ASL.SubNonAnnualStatementLineCode,\n\tEXP_CalPolicyCoverageHashKey.ParentCoverageType,\n\tEXP_CalPolicyCoverageHashKey.SubCoverageType,\n\tEXP_CalPolicyCoverageHashKey.CoverageDeleteFlag,\n\tEXP_CalPolicyCoverageHashKey.OccupancyClassDescription,\n\tEXP_CalPolicyCoverageHashKey.ActiveBuildingFlag,\n\tEXP_CalPolicyCoverageHashKey.PolicyKey,\n\tLKP_ConformedCoverage.CoverageSummaryDescription AS i_CoverageSummaryDescription,\n\tEXP_CalPolicyCoverageHashKey.InsuranceReferenceLineOfBusinessCode AS i_InsuranceReferenceLineOfBusinessCode,\n\t-- *INF*: --IIF(i_InsuranceReferenceLineOfBusinessCode='200' AND i_ProductCode='200' AND NOT ISNULL(i_CoverageSummaryDescription), '340',i_InsuranceReferenceLineOfBusinessCode)\r\n\t-- \r\n\t-- DECODE(TRUE,\r\n\t-- CoverageForm = 'AutoDealers' AND i_InsuranceReferenceLineOfBusinessCode='330' AND i_ProductCode='200',  '330',\r\n\t-- CoverageForm = 'AutoDealers' AND i_InsuranceReferenceLineOfBusinessCode='360' AND i_ProductCode='200',  '360',\r\n\t-- CoverageForm = 'AutoDealers', '341',\r\n\t-- i_InsuranceReferenceLineOfBusinessCode='200' AND i_ProductCode='200' AND NOT ISNULL(i_CoverageSummaryDescription), '340',\r\n\t-- i_InsuranceReferenceLineOfBusinessCode)\n\tDECODE(TRUE,\n\tCoverageForm = 'AutoDealers' AND i_InsuranceReferenceLineOfBusinessCode = '330' AND i_ProductCode = '200', '330',\n\tCoverageForm = 'AutoDealers' AND i_InsuranceReferenceLineOfBusinessCode = '360' AND i_ProductCode = '200', '360',\n\tCoverageForm = 'AutoDealers', '341',\n\ti_InsuranceReferenceLineOfBusinessCode = '200' AND i_ProductCode = '200' AND NOT i_CoverageSummaryDescription IS NULL, '340',\n\ti_InsuranceReferenceLineOfBusinessCode) AS o_InsuranceReferenceLineOfBusinessCode,\n\tEXP_CalPolicyCoverageHashKey.ProductCode AS i_ProductCode,\n\t-- *INF*: --IIF(i_ProductCode='200' AND NOT ISNULL(i_CoverageSummaryDescription), '340', i_ProductCode)\r\n\t-- \r\n\t-- DECODE(TRUE,\r\n\t-- CoverageForm = 'AutoDealers', '341',\r\n\t-- i_ProductCode='200' AND NOT ISNULL(i_CoverageSummaryDescription), '340',\r\n\t--  i_ProductCode)\n\tDECODE(TRUE,\n\tCoverageForm = 'AutoDealers', '341',\n\ti_ProductCode = '200' AND NOT i_CoverageSummaryDescription IS NULL, '340',\n\ti_ProductCode) AS o_ProductCode,\n\tEXP_CalPolicyCoverageHashKey.o_PolicyAKID,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageAKID,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageHashKey,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageId,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverage_PolicyCoverageAKID,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageEffectivedate,\n\tEXP_CalPolicyCoverageHashKey.RatingCoverageExpirationdate,\n\tEXP_CalPolicyCoverageHashKey.PEffectiveDate,\n\tEXP_CalPolicyCoverageHashKey.PExpirationDate\n\tFROM EXP_CalPolicyCoverageHashKey\n\tLEFT JOIN LKP_ASL\n\tON LKP_ASL.InsuranceLineCode = EXP_CalPolicyCoverageHashKey.StandardInsuranceLineCode AND LKP_ASL.DctRiskTypeCode = EXP_CalPolicyCoverageHashKey.RiskType AND LKP_ASL.DctCoverageTypeCode = EXP_CalPolicyCoverageHashKey.ParentCoverageType AND LKP_ASL.DctPerilGroup = EXP_CalPolicyCoverageHashKey.PerilGroup AND LKP_ASL.DctSubCoverageTypeCode = EXP_CalPolicyCoverageHashKey.SubCoverageType AND LKP_ASL.DctCoverageVersion = EXP_CalPolicyCoverageHashKey.CoverageVersion\n\tLEFT JOIN LKP_ClassificationReference\n\tON LKP_ClassificationReference.InsuranceLineCode = EXP_CalPolicyCoverageHashKey.StandardInsuranceLineCode AND LKP_ClassificationReference.ClassCode = EXP_CalPolicyCoverageHashKey.ClassCode\n\tLEFT JOIN LKP_ConformedCoverage\n\tON LKP_ConformedCoverage.DctCoverageTypeCode = EXP_CalPolicyCoverageHashKey.ParentCoverageType AND LKP_ConformedCoverage.DctCoverageVersion = EXP_CalPolicyCoverageHashKey.CoverageVersion AND LKP_ConformedCoverage.DctPerilGroup = EXP_CalPolicyCoverageHashKey.PerilGroup AND LKP_ConformedCoverage.DctRiskTypeCode = EXP_CalPolicyCoverageHashKey.RiskType AND LKP_ConformedCoverage.DctSubCoverageTypeCode = EXP_CalPolicyCoverageHashKey.SubCoverageType AND LKP_ConformedCoverage.InsuranceLineCode = EXP_CalPolicyCoverageHashKey.StandardInsuranceLineCode\n),\nLKP_DCCoverageStaging AS (\n\tSELECT\n\tCoverageDeleteFlag,\n\tType,\n\ti_PolicyKey,\n\tPol_Key,\n\tCoverageGUID,\n\tEffectiveDate,\n\tCreatedDate,\n\tOffsetCreatedDate\n\tFROM (\n\t\tSELECT\r\n\t\t T.PolicyNumber+case when len(T.policyversion)=1 then '0'+CONVERT(varchar(1),T.policyversion) \r\n\t\t else CONVERT(varchar(2),T.policyversion) end  as Pol_Key,A.CoverageGUID AS CoverageGUID, \r\n\t\tCASE WHEN CT.PeriodStartDate>T.TransactionEffectiveDate THEN CT.PeriodStartDate\r\n\t\t WHEN ST.PeriodStartDate>T.TransactionEffectiveDate THEN ST.PeriodStartDate\r\n\t\t ELSE T.TransactionEffectiveDate END AS EffectiveDate, \r\n\t\tT.TransactionCreatedDate AS CreatedDate, \r\n\t\tISNULL(F.OffsetCreatedDate, '2100-12-31 23:59:59') AS OffsetCreatedDate,\r\n\t\tA.CoverageDeleteFlag AS CoverageDeleteFlag,\r\n\t\tT.TransactionType AS Type,\r\n\t\tA.CoverageId AS CoverageId\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTCoverageTransaction A\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy T\r\n\t\tON A.SessionId=T.SessionId\r\n\t\tAND T.TransactionState='committed'\r\n\t\tAND T.PolicyStatus<>'Quote'\r\n\t\tAND T.TransactionPurpose<>'Offset'\r\n\t\tAND T.TransactionType @{pipeline().parameters.EXCLUDE_TTYPE}\r\n\t\tLEFT JOIN \r\n\t\t(SELECT F.PolicyNumber,F.PolicyVersion,F.TransactionCreatedDate,\r\n\t\tMIN(ISNULL(O.TransactionCreatedDate,O1.TransactionCreatedDate)) OffsetCreatedDate\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy F\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy O\r\n\t\tON O.PolicyNumber=F.PolicyNumber\r\n\t\tAND ISNULL(O.PolicyVersion,0)=ISNULL(F.PolicyVersion,0)\r\n\t\tAND O.TransactionCreatedDate>F.TransactionCreatedDate\r\n\t\tAND O.TransactionEffectiveDate<F.TransactionEffectiveDate\r\n\t\tAND O.TransactionState='committed'\r\n\t\tAND O.PolicyStatus<>'Quote'\r\n\t\tAND O.TransactionPurpose<>'Offset'\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy O1\r\n\t\tON O1.PolicyNumber=F.PolicyNumber\r\n\t\tAND ISNULL(O1.PolicyVersion,0)=ISNULL(F.PolicyVersion,0)\r\n\t\tAND O1.TransactionCreatedDate>F.TransactionCreatedDate\r\n\t\tAND O1.TransactionEffectiveDate<=F.TransactionEffectiveDate\r\n\t\tAND O1.TransactionState='committed'\r\n\t\tAND O1.PolicyStatus<>'Quote'\r\n\t\tAND O1.TransactionPurpose<>'Offset'\r\n\t\tWHERE F.TransactionState='committed'\r\n\t\tAND F.PolicyStatus<>'Quote'\r\n\t\tAND F.TransactionPurpose='Offset'\r\n\t\tGROUP BY F.PolicyNumber,F.PolicyVersion,F.TransactionCreatedDate) F\r\n\t\tON T.PolicyNumber=F.PolicyNumber\r\n\t\tAND ISNULL(T.PolicyVersion,0)=ISNULL(F.PolicyVersion,0)\r\n\t\tAND F.TransactionCreatedDate=T.TransactionCreatedDate\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBCoverageStage WBC\r\n\t\tON WBC.CoverageId=A.CoverageId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBWCCoverageTermStage CT\r\n\t\tON CT.WB_CoverageId=WBC.WBCoverageId\r\n\t\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCWCStateTermStaging ST\r\n\t\tON ST.WC_StateTermId=A.ParentCoverageObjectId\r\n\t\tAND A.ParentCoverageObjectName='DC_WC_StateTerm'\r\n\t\tORDER BY T.PolicyNumber+case when len(T.policyversion)=1 then '0'+convert(varchar(1),T.policyversion) else convert(varchar(2),T.policyversion) end \r\n\t\t,A.CoverageGUID,CASE WHEN CT.PeriodStartDate>T.TransactionEffectiveDate THEN CT.PeriodStartDate WHEN ST.PeriodStartDate>T.TransactionEffectiveDate THEN ST.PeriodStartDate ELSE T.TransactionEffectiveDate END, T.TransactionCreatedDate, ISNULL(F.OffsetCreatedDate, '2100-12-31 23:59:59'), A.CoverageId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Pol_Key,CoverageGUID,EffectiveDate,CreatedDate,OffsetCreatedDate ORDER BY CoverageDeleteFlag DESC) = 1\n),\nLKP_InsuranceReferenceLineOfBusiness AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessAKId,\n\tInsuranceReferenceLineOfBusinessCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceLineOfBusinessAKId,\n\t\t\tInsuranceReferenceLineOfBusinessCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceLineOfBusiness\n\t\tWHERE CurrentSnapshotFlag='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceReferenceLineOfBusinessCode ORDER BY InsuranceReferenceLineOfBusinessAKId) = 1\n),\nLKP_Product AS (\n\tSELECT\n\tProductAKId,\n\tProductCode\n\tFROM (\n\t\tSELECT \n\t\t\tProductAKId,\n\t\t\tProductCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.Product\n\t\tWHERE CurrentSnapshotFlag='1'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProductCode ORDER BY ProductAKId) = 1\n),\nLKP_RatingCoverage AS (\n\tSELECT\n\tRatingCoverageCancellationDate,\n\tPremiumTransactionCode,\n\tCoverageGUID,\n\tPolicyAKID,\n\tTEffectiveDate,\n\tTCreatedDate,\n\tOffsetCreatedDate\n\tFROM (\n\t\tSELECT DISTINCT a.RatingCoverageCancellationDate as RatingCoverageCancellationDate,\r\n\t\ta.CoverageGUID as CoverageGUID,\r\n\t\tb.PremiumTransactionCode as PremiumTransactionCode,\r\n\t\tb.PremiumTransactionEffectiveDate as TEffectiveDate,\r\n\t\tb.PremiumTransactionEnteredDate as TCreatedDate,\r\n\t\tISNULL(c.PremiumTransactionEnteredDate,'2100-12-31 23:59:59') as OffsetCreatedDate,\r\n\t\tPC.PolicyAKID as PolicyAKID\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage a on PC.PolicyCoverageAKID=a.PolicyCoverageAKID\r\n\t\tAND PC.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND pc.CurrentSnapshotFlag=1\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction b on a.RatingCoverageAKId=b.RatingCoverageAKid\r\n\t\tAND b.EffectiveDate=a.EffectiveDate AND b.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND not b.OffsetOnsetCode in ('Offset','Deprecated')\r\n\t\tLEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction c on c.RatingCoverageAKId=b.RatingCoverageAKid AND c.EffectiveDate=a.EffectiveDate\r\n\t\tAND c.SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND c.OffsetOnsetCode='Deprecated'\r\n\t\tINNER JOIN (\r\n\t\tselect DISTINCT WCT.CoverageGUId from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTCoverageTransaction WCT) WCT\r\n\t\ton WCT.CoverageGUID=a.CoverageGUID\r\n\t\torder by PC.PolicyAKID,a.CoverageGUID,b.PremiumTransactionEffectiveDate,\r\n\t\tb.PremiumTransactionEnteredDate,ISNULL(c.PremiumTransactionEnteredDate,'2100-12-31 23:59:59')\r\n\t\t\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CoverageGUID,PolicyAKID,TEffectiveDate,TCreatedDate,OffsetCreatedDate ORDER BY RatingCoverageCancellationDate DESC) = 1\n),\nEXP_CoverageCancellationDate AS (\n\tSELECT\n\tLKP_DCCoverageStaging.CoverageDeleteFlag AS lkp_StageCoverageDeleteFlag,\n\tLKP_DCCoverageStaging.Type AS lkp_StageTransactionType,\n\tLKP_RatingCoverage.RatingCoverageCancellationDate AS lkp_RatingCoverageCancellationDate,\n\tLKP_RatingCoverage.PremiumTransactionCode AS lkp_PremiumTransactionCode,\n\tEXP_RatingCoverageHashKey.PolicyStatus,\n\tEXP_RatingCoverageHashKey.Change,\n\tEXP_RatingCoverageHashKey.TType,\n\tEXP_RatingCoverageHashKey.CoverageGUID,\n\tEXP_RatingCoverageHashKey.LineId,\n\tEXP_RatingCoverageHashKey.RatingCoverageKey,\n\tEXP_RatingCoverageHashKey.CoverageForm,\n\tEXP_RatingCoverageHashKey.RiskType,\n\tEXP_RatingCoverageHashKey.CoverageType,\n\tEXP_RatingCoverageHashKey.ClassCode,\n\tEXP_RatingCoverageHashKey.Exposure,\n\tEXP_RatingCoverageHashKey.TEffectiveDate,\n\tEXP_RatingCoverageHashKey.TCreatedDate,\n\tEXP_RatingCoverageHashKey.TExpirationDate,\n\tEXP_RatingCoverageHashKey.TCancellationDate AS i_TCancellationDate,\n\tEXP_RatingCoverageHashKey.CoverageVersion,\n\tEXP_RatingCoverageHashKey.SubLineCode,\n\tEXP_RatingCoverageHashKey.AnnualStatementLineNumber,\n\tEXP_RatingCoverageHashKey.PremiumBearingIndicator,\n\tLKP_Product.ProductAKId,\n\tLKP_InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessAKId,\n\tEXP_RatingCoverageHashKey.SubLocationUnitNumber,\n\tEXP_RatingCoverageHashKey.SpecialClassGroupCode,\n\tEXP_RatingCoverageHashKey.PerilGroup,\n\tEXP_RatingCoverageHashKey.o_ClassCodeOrganizationCode,\n\tEXP_RatingCoverageHashKey.o_PolicyCoverageAKID,\n\tEXP_RatingCoverageHashKey.o_StatisticalCoverageAKID,\n\tEXP_RatingCoverageHashKey.AnnualStatementLineId,\n\tEXP_RatingCoverageHashKey.SchedulePNumber,\n\tEXP_RatingCoverageHashKey.AnnualStatementLineCode,\n\tEXP_RatingCoverageHashKey.SubAnnualStatementLineNumber,\n\tEXP_RatingCoverageHashKey.SubAnnualStatementLineCode,\n\tEXP_RatingCoverageHashKey.SubNonAnnualStatementLineCode,\n\tEXP_RatingCoverageHashKey.ParentCoverageType,\n\tEXP_RatingCoverageHashKey.SubCoverageType,\n\tEXP_RatingCoverageHashKey.CoverageDeleteFlag,\n\tEXP_RatingCoverageHashKey.OccupancyClassDescription,\n\tEXP_RatingCoverageHashKey.ActiveBuildingFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CoverageDeleteFlag='1',1,\r\n\t-- PolicyStatus='Cancelled',1,\r\n\t-- 0)\n\tDECODE(TRUE,\n\tCoverageDeleteFlag = '1', 1,\n\tPolicyStatus = 'Cancelled', 1,\n\t0) AS v_RatingCoverageCancellationFlag,\n\t-- *INF*: IIF(v_RatingCoverageCancellationFlag=1,LEAST(TEffectiveDate,i_TCancellationDate),TO_DATE('21001231235959','YYYYMMDDHH24MISS'))\n\tIFF(v_RatingCoverageCancellationFlag = 1, LEAST(TEffectiveDate, i_TCancellationDate), TO_DATE('21001231235959', 'YYYYMMDDHH24MISS')) AS o_RatingCoverageCancellationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CoverageDeleteFlag='0',1,\r\n\t-- CoverageDeleteFlag='1' AND lkp_StageCoverageDeleteFlag='0',1,\r\n\t-- CoverageDeleteFlag='1' AND lkp_RatingCoverageCancellationDate>=TO_DATE('21001231','YYYYMMDD'),1,\r\n\t-- Change<>0,1,\r\n\t-- 0)\n\tDECODE(TRUE,\n\tCoverageDeleteFlag = '0', 1,\n\tCoverageDeleteFlag = '1' AND lkp_StageCoverageDeleteFlag = '0', 1,\n\tCoverageDeleteFlag = '1' AND lkp_RatingCoverageCancellationDate >= TO_DATE('21001231', 'YYYYMMDD'), 1,\n\tChange <> 0, 1,\n\t0) AS o_FilterFlag,\n\tEXP_RatingCoverageHashKey.o_PolicyAKID,\n\tEXP_RatingCoverageHashKey.RatingCoverageAKID,\n\tEXP_RatingCoverageHashKey.RatingCoverageHashKey,\n\tEXP_RatingCoverageHashKey.RatingCoverageId,\n\tEXP_RatingCoverageHashKey.RatingCoverage_PolicyCoverageAKID,\n\tEXP_RatingCoverageHashKey.RatingCoverageEffectivedate,\n\tEXP_RatingCoverageHashKey.RatingCoverageExpirationdate,\n\tEXP_RatingCoverageHashKey.PEffectiveDate,\n\tEXP_RatingCoverageHashKey.PExpirationDate\n\tFROM EXP_RatingCoverageHashKey\n\tLEFT JOIN LKP_DCCoverageStaging\n\tON LKP_DCCoverageStaging.Pol_Key = EXP_RatingCoverageHashKey.PolicyKey AND LKP_DCCoverageStaging.CoverageGUID = EXP_RatingCoverageHashKey.CoverageGUID AND LKP_DCCoverageStaging.EffectiveDate <= EXP_RatingCoverageHashKey.TEffectiveDate AND LKP_DCCoverageStaging.CreatedDate < EXP_RatingCoverageHashKey.TCreatedDate AND LKP_DCCoverageStaging.OffsetCreatedDate > EXP_RatingCoverageHashKey.TCreatedDate\n\tLEFT JOIN LKP_InsuranceReferenceLineOfBusiness\n\tON LKP_InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessCode = EXP_RatingCoverageHashKey.o_InsuranceReferenceLineOfBusinessCode\n\tLEFT JOIN LKP_Product\n\tON LKP_Product.ProductCode = EXP_RatingCoverageHashKey.o_ProductCode\n\tLEFT JOIN LKP_RatingCoverage\n\tON LKP_RatingCoverage.CoverageGUID = EXP_RatingCoverageHashKey.CoverageGUID AND LKP_RatingCoverage.PolicyAKID = EXP_RatingCoverageHashKey.o_PolicyAKID AND LKP_RatingCoverage.TEffectiveDate <= EXP_RatingCoverageHashKey.TEffectiveDate AND LKP_RatingCoverage.TCreatedDate < EXP_RatingCoverageHashKey.TCreatedDate AND LKP_RatingCoverage.OffsetCreatedDate > EXP_RatingCoverageHashKey.TCreatedDate\n),\nFIL_DefaultCoveragesAndPastTransactions AS (\n\tSELECT\n\tTType, \n\tCoverageGUID, \n\tLineId, \n\tRatingCoverageKey, \n\tCoverageForm, \n\tRiskType, \n\tCoverageType, \n\tClassCode, \n\tExposure, \n\tTEffectiveDate, \n\tTCreatedDate, \n\tTExpirationDate, \n\tCoverageVersion, \n\tSubLineCode, \n\tAnnualStatementLineNumber, \n\tPremiumBearingIndicator, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tSubLocationUnitNumber, \n\tSpecialClassGroupCode, \n\tPerilGroup, \n\to_ClassCodeOrganizationCode, \n\to_PolicyCoverageAKID, \n\to_StatisticalCoverageAKID, \n\tAnnualStatementLineId, \n\tSchedulePNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineNumber, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tParentCoverageType, \n\tSubCoverageType, \n\tCoverageDeleteFlag, \n\tOccupancyClassDescription, \n\tActiveBuildingFlag, \n\to_RatingCoverageCancellationDate AS RatingCoverageCancellationDate, \n\to_FilterFlag AS FilterFlag, \n\to_PolicyAKID, \n\tRatingCoverageAKID, \n\tRatingCoverageHashKey, \n\tRatingCoverageId, \n\tRatingCoverage_PolicyCoverageAKID, \n\tRatingCoverageEffectivedate, \n\tRatingCoverageExpirationdate, \n\tPEffectiveDate, \n\tPExpirationDate\n\tFROM EXP_CoverageCancellationDate\n\tWHERE FilterFlag=1\n),\nSRT_CoverageGUID_SessionID AS (\n\tSELECT\n\tTType, \n\tLineId, \n\tRatingCoverageKey, \n\tCoverageForm, \n\tRiskType, \n\tCoverageType, \n\tClassCode, \n\tExposure, \n\tTEffectiveDate, \n\to_PolicyAKID AS PolicyAKID, \n\tCoverageGUID, \n\tTCreatedDate, \n\to_PolicyCoverageAKID AS PolicyCoverageAKID, \n\tTExpirationDate, \n\tCoverageVersion, \n\tSubLineCode, \n\tAnnualStatementLineNumber, \n\tPremiumBearingIndicator, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tSubLocationUnitNumber, \n\tSpecialClassGroupCode, \n\to_ClassCodeOrganizationCode AS ClassCodeOrganizationCode, \n\to_StatisticalCoverageAKID AS StatisticalCoverageAKID, \n\tAnnualStatementLineId, \n\tPerilGroup, \n\tSchedulePNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineNumber, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tParentCoverageType, \n\tSubCoverageType, \n\tCoverageDeleteFlag, \n\tOccupancyClassDescription, \n\tActiveBuildingFlag, \n\tRatingCoverageCancellationDate, \n\tRatingCoverageAKID, \n\tRatingCoverageHashKey, \n\tRatingCoverageId, \n\tRatingCoverage_PolicyCoverageAKID, \n\tRatingCoverageEffectivedate, \n\tRatingCoverageExpirationdate, \n\tPEffectiveDate, \n\tPExpirationDate\n\tFROM FIL_DefaultCoveragesAndPastTransactions\n\tORDER BY PolicyAKID ASC, CoverageGUID ASC, TCreatedDate ASC\n),\nEXP_CalValues AS (\n\tSELECT\n\tRatingCoverage_PolicyCoverageAKID AS lkp_PolicyCoverageAKID,\n\tSEQ_RatingCoverageAKID.NEXTVAL AS i_NEXTVAL,\n\tRatingCoverageId AS lkp_RatingCoverageId,\n\tRatingCoverageAKID AS lkp_RatingCoverageAKID,\n\tRatingCoverageHashKey AS lkp_RatingCoverageHashKey,\n\tTType AS i_TType,\n\tCoverageGUID AS i_CoverageGUID,\n\tTEffectiveDate AS i_TEffectiveDate,\n\tLineId AS i_LineId,\n\tRatingCoverageKey AS i_RatingCoverageKey,\n\tCoverageForm AS i_CoverageForm,\n\tRiskType AS i_RiskType,\n\tCoverageType AS i_CoverageType,\n\tClassCode AS i_ClassCode,\n\tExposure AS i_Exposure,\n\tTCreatedDate AS i_TCreatedDate,\n\tTExpirationDate AS i_TExpirationDate,\n\tCoverageVersion AS i_CoverageVersion,\n\tSubLineCode AS i_SubLineCode,\n\tAnnualStatementLineNumber AS i_AnnualStatementLineNumber,\n\tPremiumBearingIndicator AS i_PremiumBearingIndicator,\n\tProductAKId AS i_ProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tSubLocationUnitNumber AS i_SubLocationUnitNumber,\n\tSpecialClassGroupCode AS i_SpecialClassGroupCode,\n\tClassCodeOrganizationCode AS i_ClassCodeOrganizationCode,\n\tPolicyCoverageAKID AS i_PolicyCoverageAKID,\n\tStatisticalCoverageAKID AS i_StatisticalCoverageAKID,\n\tAnnualStatementLineId AS i_AnnualStatementLineId,\n\tPerilGroup AS i_PerilGroup,\n\tPolicyAKID,\n\t-- *INF*: MD5(i_ClassCode\r\n\t-- ||i_RiskType\r\n\t-- ||TO_CHAR(i_Exposure)\r\n\t-- ||TO_CHAR(RatingCoverageCancellationDate)\r\n\t-- ||i_SubLineCode\r\n\t-- ||i_AnnualStatementLineNumber\r\n\t-- ||TO_CHAR(i_PremiumBearingIndicator)\r\n\t-- --||TO_CHAR(i_AnnualStatementLineId)\r\n\t-- ||i_SubLocationUnitNumber\r\n\t-- ||i_SpecialClassGroupCode\r\n\t-- ||i_ClassCodeOrganizationCode\r\n\t-- ||i_PerilGroup\r\n\t-- ||OccupancyClassDescription\r\n\t-- ||ActiveBuildingFlag)\n\tMD5(i_ClassCode || i_RiskType || TO_CHAR(i_Exposure) || TO_CHAR(RatingCoverageCancellationDate) || i_SubLineCode || i_AnnualStatementLineNumber || TO_CHAR(i_PremiumBearingIndicator) || i_SubLocationUnitNumber || i_SpecialClassGroupCode || i_ClassCodeOrganizationCode || i_PerilGroup || OccupancyClassDescription || ActiveBuildingFlag) AS v_RatingCoverageHashKey,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_RatingCoverageId) ,'New', \r\n\t-- lkp_RatingCoverageHashKey!=v_RatingCoverageHashKey,'Change',\r\n\t-- 'NoChange')\n\tDECODE(TRUE,\n\tlkp_RatingCoverageId IS NULL, 'New',\n\tlkp_RatingCoverageHashKey != v_RatingCoverageHashKey, 'Change',\n\t'NoChange') AS v_ChangeFlag,\n\t-- *INF*: IIF(PolicyAKID=v_prev_PolicyAKID and i_CoverageGUID=v_prev_CoverageGUID, v_prev_NEXTVAL, i_NEXTVAL)\n\tIFF(PolicyAKID = v_prev_PolicyAKID AND i_CoverageGUID = v_prev_CoverageGUID, v_prev_NEXTVAL, i_NEXTVAL) AS v_NEXTVAL,\n\t-- *INF*: IIF(PolicyAKID=v_prev_PolicyAKID and i_CoverageGUID=v_prev_CoverageGUID, v_Seq+1, 1)\n\tIFF(PolicyAKID = v_prev_PolicyAKID AND i_CoverageGUID = v_prev_CoverageGUID, v_Seq + 1, 1) AS v_Seq,\n\tv_NEXTVAL AS v_prev_NEXTVAL,\n\ti_CoverageGUID AS v_prev_CoverageGUID,\n\ti_PolicyCoverageAKID AS v_prev_PolicyCoverageAKID,\n\tPolicyAKID AS v_prev_PolicyAKID,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t'1' AS o_CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\ti_TCreatedDate AS o_EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t0 AS o_LogicalIndicator,\n\tv_RatingCoverageHashKey AS o_RatingCoverageHashKey,\n\t-- *INF*: IIF(v_ChangeFlag='New' AND ISNULL(lkp_RatingCoverageAKID),v_NEXTVAL,lkp_RatingCoverageAKID)\n\tIFF(v_ChangeFlag = 'New' AND lkp_RatingCoverageAKID IS NULL, v_NEXTVAL, lkp_RatingCoverageAKID) AS o_RatingCoverageAKID,\n\ti_StatisticalCoverageAKID AS o_StatisticalCoverageAKID,\n\t-- *INF*: iif(isnull(lkp_PolicyCoverageAKID),i_PolicyCoverageAKID,lkp_PolicyCoverageAKID)\n\tIFF(lkp_PolicyCoverageAKID IS NULL, i_PolicyCoverageAKID, lkp_PolicyCoverageAKID) AS o_PolicyCoverageAKID,\n\ti_RatingCoverageKey AS o_RatingCoverageKey,\n\ti_CoverageForm AS o_CoverageForm,\n\ti_ClassCode AS o_ClassCode,\n\ti_RiskType AS o_RiskType,\n\tParentCoverageType,\n\ti_Exposure AS o_Exposure,\n\ti_CoverageVersion AS o_CoverageVersion,\n\ti_CoverageGUID AS o_CoverageGUID,\n\tRatingCoverageCancellationDate,\n\ti_SubLineCode AS o_SubLineCode,\n\ti_AnnualStatementLineNumber AS o_AnnualStatementLineNumber,\n\ti_PremiumBearingIndicator AS o_PremiumBearingIndicator,\n\ti_ProductAKId AS o_ProductAKId,\n\ti_InsuranceReferenceLineOfBusinessAKId AS o_InsuranceReferenceLineOfBusinessAKId,\n\ti_SubLocationUnitNumber AS o_SubLocationUnitNumber,\n\ti_SpecialClassGroupCode AS o_SpecialClassGroupCode,\n\ti_AnnualStatementLineId AS o_AnnualStatementLineId,\n\ti_ClassCodeOrganizationCode AS o_ClassCodeOrganizationCode,\n\ti_PerilGroup AS o_PerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageType AS SubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag,\n\tPEffectiveDate AS i_PEffectiveDate,\n\tPExpirationDate AS i_PExpirationDate,\n\tRatingCoverageEffectivedate AS lkp_RatingCoverageEffectivedate,\n\tRatingCoverageExpirationdate AS lkp_RatingCoverageExpirationdate,\n\t-- *INF*: DECODE(TRUE,v_Seq=1 AND not isnull(lkp_RatingCoverageAKID),lkp_RatingCoverageEffectivedate,\r\n\t--                        v_Seq=1 AND  isnull(lkp_RatingCoverageAKID),i_TEffectiveDate,v_RatingCoverageEffectiveDate)\r\n\t-- --TO_DATE('18000101','YYYYMMDD')\n\tDECODE(TRUE,\n\tv_Seq = 1 AND NOT lkp_RatingCoverageAKID IS NULL, lkp_RatingCoverageEffectivedate,\n\tv_Seq = 1 AND lkp_RatingCoverageAKID IS NULL, i_TEffectiveDate,\n\tv_RatingCoverageEffectiveDate) AS v_RatingCoverageEffectiveDate,\n\t-- *INF*: DECODE(TRUE,v_Seq=1 AND not isnull(lkp_RatingCoverageAKID),lkp_RatingCoverageExpirationdate,\r\n\t--                        v_Seq=1 AND  isnull(lkp_RatingCoverageAKID),i_TExpirationDate,v_RatingCoverageExpirationDate)\r\n\t-- \r\n\t-- --TO_DATE('21001231235959','YYYYMMDDHH24MISS')\n\tDECODE(TRUE,\n\tv_Seq = 1 AND NOT lkp_RatingCoverageAKID IS NULL, lkp_RatingCoverageExpirationdate,\n\tv_Seq = 1 AND lkp_RatingCoverageAKID IS NULL, i_TExpirationDate,\n\tv_RatingCoverageExpirationDate) AS v_RatingCoverageExpirationDate,\n\t-- *INF*: IIF(ISNULL(v_RatingCoverageEffectiveDate),i_PEffectiveDate,v_RatingCoverageEffectiveDate)\r\n\t-- --IIF(ISNULL(v_RatingCoverageEffectiveDate),TO_DATE('18000101','YYYYMMDD'),v_RatingCoverageEffectiveDate)\n\tIFF(v_RatingCoverageEffectiveDate IS NULL, i_PEffectiveDate, v_RatingCoverageEffectiveDate) AS o_RatingCoverageEffectiveDate,\n\t-- *INF*: IIF(ISNULL(v_RatingCoverageExpirationDate), i_PExpirationDate,v_RatingCoverageExpirationDate)\r\n\t-- --IIF(ISNULL(v_RatingCoverageExpirationDate), TO_DATE('21001231235959','YYYYMMDDHH24MISS'),v_RatingCoverageExpirationDate)\r\n\t-- \n\tIFF(v_RatingCoverageExpirationDate IS NULL, i_PExpirationDate, v_RatingCoverageExpirationDate) AS o_RatingCoverageExpirationDate\n\tFROM SRT_CoverageGUID_SessionID\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tlkp_RatingCoverageId,\n\to_ChangeFlag AS i_ChangeFlag,\n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag,\n\to_AuditID AS AuditID,\n\to_EffectiveDate AS EffectiveDate,\n\to_ExpirationDate AS ExpirationDate,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_LogicalIndicator AS LogicalIndicator,\n\to_RatingCoverageHashKey AS RatingCoverageHashKey,\n\to_RatingCoverageAKID AS RatingCoverageAKID,\n\to_StatisticalCoverageAKID AS StatisticalCoverageAKID,\n\to_PolicyCoverageAKID AS PolicyCoverageAKID,\n\to_RatingCoverageKey AS RatingCoverageKey,\n\to_CoverageForm AS CoverageForm,\n\to_ClassCode AS ClassCode,\n\to_RiskType AS RiskType,\n\tParentCoverageType AS CoverageType,\n\to_Exposure AS Exposure,\n\to_RatingCoverageEffectiveDate AS RatingCoverageEffectiveDate,\n\to_RatingCoverageExpirationDate AS RatingCoverageExpirationDate,\n\to_CoverageVersion AS CoverageVersion,\n\to_CoverageGUID AS CoverageGUID,\n\tRatingCoverageCancellationDate,\n\to_SubLineCode AS SubLineCode,\n\to_AnnualStatementLineNumber AS ASLNum,\n\to_PremiumBearingIndicator AS PremiumBearingIndicator,\n\to_ProductAKId AS ProductAKId,\n\to_InsuranceReferenceLineOfBusinessAKId AS InsuranceReferenceLineOfBusinessAKId,\n\to_SubLocationUnitNumber AS SubLocationUnitNumber,\n\to_SpecialClassGroupCode AS SpecialClassGroupCode,\n\to_AnnualStatementLineId AS AnnualStatementLineId,\n\to_ClassCodeOrganizationCode AS ClassCodeOrganizationCode,\n\to_PerilGroup AS PerilGroup,\n\tSchedulePNumber,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineNumber,\n\tSubAnnualStatementLineCode,\n\tSubNonAnnualStatementLineCode,\n\tSubCoverageTypeCode,\n\tOccupancyClassDescription,\n\tActiveBuildingFlag\n\tFROM EXP_CalValues\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE i_ChangeFlag='New'),\nRTR_INSERT_UPDATE_UPDATE AS (SELECT * FROM RTR_INSERT_UPDATE WHERE i_ChangeFlag='Change'),\nUPD_DueToCodeChange AS (\n\tSELECT\n\tlkp_RatingCoverageId, \n\tModifiedDate, \n\tLogicalIndicator, \n\tRatingCoverageHashKey, \n\tCoverageForm, \n\tClassCode, \n\tRiskType, \n\tCoverageType, \n\tExposure, \n\tCoverageVersion, \n\tRatingCoverageCancellationDate AS RatingCoverageCancellationDate3, \n\tSubLineCode, \n\tASLNum, \n\tPremiumBearingIndicator, \n\tProductAKId, \n\tInsuranceReferenceLineOfBusinessAKId, \n\tSubLocationUnitNumber, \n\tSpecialClassGroupCode, \n\tAnnualStatementLineId, \n\tClassCodeOrganizationCode, \n\tPerilGroup, \n\tSchedulePNumber, \n\tAnnualStatementLineCode, \n\tSubAnnualStatementLineNumber, \n\tSubAnnualStatementLineCode, \n\tSubNonAnnualStatementLineCode, \n\tSubCoverageTypeCode, \n\tOccupancyClassDescription, \n\tActiveBuildingFlag\n\tFROM RTR_INSERT_UPDATE_UPDATE\n),\nTGT_RatingCoverage_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage AS T\n\tUSING UPD_DueToCodeChange AS S\n\tON T.RatingCoverageId = S.lkp_RatingCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.LogicalIndicator = S.LogicalIndicator, T.RatingCoverageHashKey = S.RatingCoverageHashKey, T.CoverageForm = S.CoverageForm, T.ClassCode = S.ClassCode, T.RiskType = S.RiskType, T.CoverageType = S.CoverageType, T.Exposure = S.Exposure, T.CoverageVersion = S.CoverageVersion, T.SublineCode = S.SubLineCode, T.AnnualStatementLineNumber = S.ASLNum, T.PremiumBearingIndicator = S.PremiumBearingIndicator, T.ProductAKId = S.ProductAKId, T.InsuranceReferenceLineOfBusinessAKId = S.InsuranceReferenceLineOfBusinessAKId, T.SubLocationUnitNumber = S.SubLocationUnitNumber, T.SpecialClassGroupCode = S.SpecialClassGroupCode, T.AnnualStatementLineId = S.AnnualStatementLineId, T.ClassCodeOrganizationCode = S.ClassCodeOrganizationCode, T.PerilGroup = S.PerilGroup, T.SchedulePNumber = S.SchedulePNumber, T.AnnualStatementLineCode = S.AnnualStatementLineCode, T.SubAnnualStatementLineNumber = S.SubAnnualStatementLineNumber, T.SubAnnualStatementLineCode = S.SubAnnualStatementLineCode, T.SubNonAnnualStatementLineCode = S.SubNonAnnualStatementLineCode, T.SubCoverageTypeCode = S.SubCoverageTypeCode, T.OccupancyClassDescription = S.OccupancyClassDescription, T.ActiveBuildingFlag = S.ActiveBuildingFlag\n),\nTGT_RatingCoverage_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, RatingCoverageHashKey, RatingCoverageAKID, StatisticalCoverageAKID, PolicyCoverageAKID, RatingCoverageKey, CoverageForm, ClassCode, RiskType, CoverageType, Exposure, RatingCoverageEffectiveDate, RatingCoverageExpirationDate, CoverageVersion, CoverageGUID, RatingCoverageCancellationDate, SublineCode, AnnualStatementLineNumber, PremiumBearingIndicator, ProductAKId, InsuranceReferenceLineOfBusinessAKId, SubLocationUnitNumber, SpecialClassGroupCode, AnnualStatementLineId, ClassCodeOrganizationCode, PerilGroup, SchedulePNumber, AnnualStatementLineCode, SubAnnualStatementLineNumber, SubAnnualStatementLineCode, SubNonAnnualStatementLineCode, SubCoverageTypeCode, OccupancyClassDescription, ActiveBuildingFlag)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tLOGICALINDICATOR, \n\tRATINGCOVERAGEHASHKEY, \n\tRATINGCOVERAGEAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tPOLICYCOVERAGEAKID, \n\tRATINGCOVERAGEKEY, \n\tCOVERAGEFORM, \n\tCLASSCODE, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tEXPOSURE, \n\tRATINGCOVERAGEEFFECTIVEDATE, \n\tRATINGCOVERAGEEXPIRATIONDATE, \n\tCOVERAGEVERSION, \n\tCOVERAGEGUID, \n\tRATINGCOVERAGECANCELLATIONDATE, \n\tSubLineCode AS SUBLINECODE, \n\tASLNum AS ANNUALSTATEMENTLINENUMBER, \n\tPREMIUMBEARINGINDICATOR, \n\tPRODUCTAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tSUBLOCATIONUNITNUMBER, \n\tSPECIALCLASSGROUPCODE, \n\tANNUALSTATEMENTLINEID, \n\tCLASSCODEORGANIZATIONCODE, \n\tPERILGROUP, \n\tSCHEDULEPNUMBER, \n\tANNUALSTATEMENTLINECODE, \n\tSUBANNUALSTATEMENTLINENUMBER, \n\tSUBANNUALSTATEMENTLINECODE, \n\tSUBNONANNUALSTATEMENTLINECODE, \n\tSUBCOVERAGETYPECODE, \n\tOCCUPANCYCLASSDESCRIPTION, \n\tACTIVEBUILDINGFLAG\n\tFROM RTR_INSERT_UPDATE_INSERT\n),\nSQ_RatingCoverage_UPDATE AS (\n\tSELECT RC.RatingCoverageId, RC.EffectiveDate, RC.ExpirationDate, RC.RatingCoverageAKID,PC.Policyakid \r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC\r\n\t inner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tWHERE EXISTS (SELECT RC1.RatingCoverageAKID\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC1 \r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC1\r\n\ton PC1.PolicyCoverageAKID=RC1.PolicyCoverageAKID\r\n\tand PC1.SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand PC1.CurrentSnapshotFlag=1\r\n\tWHERE RC1.CurrentSnapshotFlag = 1 AND RC1.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND RC1.RatingCoverageAKID=RC.RatingCoverageAKID and PC1.PolicyAKID=PC.PolicyAKID\r\n\tGROUP BY PC1.PolicyAKID,RC1.RatingCoverageAKID HAVING COUNT(*)>1)\r\n\tORDER BY PC.PolicyAKID,RatingCoverageAKID, EffectiveDate DESC\n),\nEXP_GetDates AS (\n\tSELECT\n\tRatingCoverageId AS i_RatingCoverageId,\n\tEffectiveDate AS i_EffectiveDate,\n\tExpirationDate AS i_ExpirationDate,\n\tRatingCoverageAKID AS i_RatingCoverageAKID,\n\tPolicyAKID AS i_PolicyAKID,\n\t-- *INF*: IIF(i_PolicyAKID=v_Prev_PolicyAKID and i_RatingCoverageAKID = v_Prev_RatingCoverageAKID,ADD_TO_DATE(v_Prev_EffectiveDate,'SS',-1),i_ExpirationDate)\n\tIFF(i_PolicyAKID = v_Prev_PolicyAKID AND i_RatingCoverageAKID = v_Prev_RatingCoverageAKID, ADD_TO_DATE(v_Prev_EffectiveDate, 'SS', - 1), i_ExpirationDate) AS v_ExpirationDate,\n\ti_PolicyAKID AS v_Prev_PolicyAKID,\n\ti_RatingCoverageAKID AS v_Prev_RatingCoverageAKID,\n\ti_EffectiveDate AS v_Prev_EffectiveDate,\n\ti_ExpirationDate AS o_Orig_ExpirationDate,\n\ti_RatingCoverageId AS o_RatingCoverageId,\n\t'0' AS o_CurrentSnapshotFlag,\n\tv_ExpirationDate AS o_ExpirationDate,\n\tSYSDATE AS o_ModifiedDate\n\tFROM SQ_RatingCoverage_UPDATE\n),\nFIL_FirstRowInAKIDGroup AS (\n\tSELECT\n\to_Orig_ExpirationDate AS i_Orig_ExpirationDate, \n\to_RatingCoverageId AS RatingCoverageId, \n\to_CurrentSnapshotFlag AS CurrentSnapshotFlag, \n\to_ExpirationDate AS ExpirationDate, \n\to_ModifiedDate AS ModifiedDate\n\tFROM EXP_GetDates\n\tWHERE i_Orig_ExpirationDate  !=  ExpirationDate\n),\nUPD_ExpiratedRecords AS (\n\tSELECT\n\tRatingCoverageId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowInAKIDGroup\n),\nTGT_RatingCoverage_Expire AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage AS T\n\tUSING UPD_ExpiratedRecords AS S\n\tON T.RatingCoverageId = S.RatingCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),\nSQ_RatingCoverage_MissingCoverageAttributesPipeline AS (\n\twith _CTE as (\r\n\tselect RatingCoverageId, RatingCoverageAKID from RatingCoverage \r\n\twhere CoverageType='N/A' and RiskType='N/A' and PerilGroup='N/A' and SubCoverageTypeCode='N/A' and CoverageVersion='N/A'\r\n\t)\r\n\t\r\n\tselect A.CTE_RatingCoverageId, A.RC_RatingCoverageId, A.RatingCoverageAKID, A.CoverageType from (\r\n\tselect \r\n\t_CTE.RatingCoverageId as CTE_RatingCoverageId,\r\n\tRC.RatingCoverageId as RC_RatingCoverageId, \r\n\t_CTE.RatingCoverageAKID as RatingCoverageAKID, \r\n\tRC.CoverageType, \r\n\tROW_NUMBER() over (partition by RC.RatingCoverageAKID order by RC.ratingcoverageId desc) as rn \r\n\tfrom RatingCoverage RC \r\n\tinner join _CTE on _CTE.RatingCoverageAKID=RC.RatingCoverageAKID and _CTE.RatingCoverageId != RC.RatingCoverageId\r\n\twhere RC.CoverageType !='N/A'\r\n\t) A \r\n\twhere rn=1\r\n\torder by 1\n),\nEXP_Input_MissingCoverageAttributesPipeline AS (\n\tSELECT\n\tCTE_RatingCoverageId,\n\tRC_RatingCoverageId,\n\tRatingCoverageAKID,\n\tCoverageType\n\tFROM SQ_RatingCoverage_MissingCoverageAttributesPipeline\n),\nUPD_MissingCoverageAttributePipeline AS (\n\tSELECT\n\tCTE_RatingCoverageId, \n\tCoverageType\n\tFROM EXP_Input_MissingCoverageAttributesPipeline\n),\nTGT_RatingCoverage_MissingCoverageAttributesPipeline AS (\n\tMERGE INTO RatingCoverage AS T\n\tUSING UPD_MissingCoverageAttributePipeline AS S\n\tON T.RatingCoverageId = S.CTE_RatingCoverageId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CoverageType = S.CoverageType\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603274"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "EXCLUDE_TTYPE": {
                "type": "string",
                "defaultValue": "NOT IN ('RescindNonRenew','Reporting','VoidReporting','Information','Dividend','RevisedDividend','VoidDividend','NonRenew','RescindCancelPending','CancelPending')"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            },
            "PMSESSIONNAME": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}