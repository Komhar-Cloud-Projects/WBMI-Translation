{
    "name": "s_m_POL_DW_LOAD_PassThroughChargeTransaction_BureauStatisticalCode",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_PassThroughChargeTransaction_BureauSta_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_RiskLocation_RiskLocationAKID AS (\n\tSELECT\n\tRiskLocationAKID,\n\tRiskLocationID,\n\tCurrentSnapshotFlag,\n\tPolicyAKID,\n\tLocationUnitNumber,\n\tRiskTerritory,\n\tStateProvinceCode,\n\tZipPostalCode,\n\tTaxLocation\n\tFROM (\n\t\tSELECT RiskLocationAKID   AS RiskLocationAKID,\r\n\t\t       PolicyAKID         AS PolicyAKID,\r\n\t\tLOC.RiskLocationID as RiskLocationID,\r\n\t\tLOC.CurrentSnapshotFlag AS CurrentSnapshotFlag,\r\n\t\t       LTRIM(RTRIM(LocationUnitNumber)) AS LocationUnitNumber,\r\n\t\t       LTRIM(RTRIM(RiskTerritory))      AS RiskTerritory,\r\n\t\t       LTRIM(RTRIM(StateProvinceCode))  AS StateProvinceCode,\r\n\t\t       LTRIM(RTRIM(ZipPostalCode))      AS ZipPostalCode,\r\n\t\t       LTRIM(RTRIM(TaxLocation))        AS TaxLocation\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC\r\n\t\tINNER JOIN  @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL\r\n\t\tON\tLOC.PolicyAKID = POL.pol_ak_id\r\n\t\tWHERE POL.crrnt_snpsht_flag = 1 AND LOC.CurrentSnapshotFlag =1\r\n\t\t       AND POL.SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t       AND  EXISTS  (SELECT DISTINCT PolicyKey FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPolicyKeyList\r\n\t\t\t\t\t\t\t\t\tWHERE POL.pol_key = PolicyKey AND @{pipeline().parameters.WHERE_CLAUSE_EDW})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,LocationUnitNumber,RiskTerritory,StateProvinceCode,ZipPostalCode,TaxLocation ORDER BY RiskLocationAKID DESC) = 1\n),\nLKP_PolicyCoverage_PolicyCoverageAKID AS (\n\tSELECT\n\tPolicyCoverageAKID,\n\tPolicyCoverageHashKey\n\tFROM (\n\t\tSELECT PolicyCoverageAKID    AS PolicyCoverageAKID,\r\n\t\t       \t      PolicyCoverageHashKey AS PolicyCoverageHashKey\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC \r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL\r\n\t\t         ON LOC.PolicyAKID = POL.pol_ak_id \r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage POLCOV\r\n\t\tON LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\tWHERE  POL.crrnt_snpsht_flag = 1\r\n\t\t       AND LOC.CurrentSnapshotFlag = 1\r\n\t\t       AND POLCOV.CurrentSnapshotFlag = 1 \r\n\t\t       AND POL.SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t       AND  EXISTS  (SELECT DISTINCT PolicyKey FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPolicyKeyList\r\n\t\t\t\t\t\t\t\t\tWHERE POL.pol_key = PolicyKey AND @{pipeline().parameters.WHERE_CLAUSE_EDW})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyCoverageHashKey ORDER BY PolicyCoverageAKID DESC) = 1\n),\nLKP_StatisticalCoverage_StatisticalCoverageAKID AS (\n\tSELECT\n\tStatisticalCoverageAKID,\n\tStatisticalCoverageHashKey\n\tFROM (\n\t\tSELECT StatisticalCoverageAKID AS StatisticalCoverageAKID,\r\n\t\t       StatisticalCoverageHashKey AS StatisticalCoverageHashKey\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC\r\n\t\tINNER JOIN  @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL\r\n\t\tON LOC.PolicyAKID = POL.pol_ak_id\r\n\t\tINNER JOIN \t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage POLCOV\r\n\t\tON LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\tINNER JOIN \t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage STATCOV\r\n\t\tON POLCOV.PolicyCoverageAKID = STATCOV.PolicyCoverageAKID\r\n\t\tWHERE\tPOL.crrnt_snpsht_flag = 1 AND LOC.CurrentSnapshotFlag =1\r\n\t\t\t\tAND STATCOV.CurrentSnapshotFlag =1\r\n\t\t\t\tAND POLCOV.CurrentSnapshotFlag =1\r\n\t\t        \tAND POL.SOURCE_SYS_ID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t        \tAND  EXISTS  (SELECT DISTINCT PolicyKey FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPolicyKeyList\r\n\t\t\t\t\t\t\t\t\tWHERE POL.pol_key = PolicyKey AND @{pipeline().parameters.WHERE_CLAUSE_EDW})\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatisticalCoverageHashKey ORDER BY StatisticalCoverageAKID DESC) = 1\n),\nSQ_pif_4514_stage AS (\n\tSELECT pif_4514_stage_id,\r\n\t\tRTRIM(pif_symbol),\r\n\t       pif_policy_number,\r\n\t       pif_module,\r\n\t       sar_id,\r\n\t       LTRIM(RTRIM(sar_insurance_line)) as sar_insurance_line,\r\n\t       CASE LEN(sar_location_x) WHEN '0' THEN LTRIM(RTRIM(sar_unit)) ELSE LTRIM(RTRIM(sar_location_x)) END as sar_location_x,\r\n\t       LTRIM(RTRIM(sar_sub_location_x)) as sar_sub_location_x,\r\n\t       LTRIM(RTRIM(sar_risk_unit_group)) as sar_risk_unit_group,\r\n\t       LTRIM(RTRIM(sar_class_code_grp_x + sar_class_code_mem_x)) as sar_class_code_grp_x,\r\n\t       LTRIM(RTRIM(sar_unit + sar_risk_unit_continued))      AS sar_unit,\r\n\t       CASE LEN(LTRIM(RTRIM(COALESCE(sar_seq_rsk_unt_a, ''))))\r\n\t            WHEN '0' THEN 'N/A'\r\n\t                      ELSE LTRIM(RTRIM(sar_seq_rsk_unt_a))\r\n\t             END                                         AS sar_seq_rsk_unt_a,\r\n\t\t\tLTRIM(RTRIM(sar_type_exposure)) as sar_type_exposure,\r\n\t        LTRIM(RTRIM(sar_major_peril)) as sar_major_peril,\r\n\t        LTRIM(RTRIM(sar_seq_no)) as sar_seq_no,\r\n\t       sar_cov_eff_year,\r\n\t       sar_cov_eff_month,\r\n\t       sar_cov_eff_day,\r\n\t       sar_part_code,\r\n\t       sar_trans_eff_year,\r\n\t       sar_trans_eff_month,\r\n\t       sar_trans_eff_day,\r\n\t       LTRIM(RTRIM(sar_reinsurance_company_no)),\r\n\t       sar_entrd_date,\r\n\t       sar_exp_year,\r\n\t       sar_exp_month,\r\n\t       sar_exp_day,\r\n\t       sar_transaction,\r\n\t       sar_premium,\r\n\t       sar_subpay_amt,\r\n\t       sar_original_prem,\r\n\t       sar_agents_comm_rate,\r\n\t       sar_acct_entrd_date,\r\n\t       sar_annual_state_line,\r\n\t       LTRIM(RTRIM(sar_state)) as sar_state,\r\n\t       LTRIM(RTRIM(sar_loc_prov_territory)) as sar_loc_prov_territory,\r\n\t       CASE WHEN LEN(LTRIM(RTRIM(sar_county_first_two)) + LTRIM(RTRIM(sar_county_last_one)) + LTRIM(RTRIM(sar_city))) < 6 THEN '000000' ELSE \r\n\t       LTRIM(RTRIM(sar_county_first_two)) + LTRIM(RTRIM(sar_county_last_one)) + LTRIM(RTRIM(sar_city)) END as sar_city,\r\n\t       sar_rsn_amend_one,\r\n\t       sar_rsn_amend_two,\r\n\t       sar_rsn_amend_three,       \r\n\t       sar_special_use,\t\t\t\t\t\t\r\n\t       sar_stat_breakdown_line,\t\t\t\t\r\n\t       sar_user_line,\t\t\t\t\t\t\r\n\t       LTRIM(RTRIM(sar_section)) as sar_section,\r\n\t\tsar_rating_date_ind,\t\t\t\t\t\r\n\t       LTRIM(RTRIM(sar_type_bureau)) as sar_type_bureau,\r\n\t       LTRIM(RTRIM(sar_class_1_4 + sar_class_5_6))  AS sar_class_1_4,\r\n\t       CASE sar_exposure WHEN 10000000 THEN 0 ELSE \r\n\t\t\t   CASE sar_exposure WHEN -9999999999 THEN 0 ELSE \r\n\t\t\t\t\tCASE sar_exposure WHEN 9999999999 THEN 0 ELSE sar_exposure END END END AS sar_exposure,\r\n\t       LTRIM(RTRIM(sar_sub_line)) as sar_sub_line,\r\n\t      sar_code_1,\r\n\t      sar_code_2,\r\n\t      sar_code_3,\r\n\t      sar_code_4,\r\n\t      sar_code_5,\r\n\t      sar_code_6,\r\n\t      sar_code_7,\r\n\t      sar_code_8,\r\n\t      sar_code_9,\r\n\t      sar_code_10,\r\n\t      sar_code_11,\r\n\t      sar_code_12,\r\n\t      sar_code_13,\r\n\t      sar_code_14,\r\n\t      sar_code_15,\r\n\t       LTRIM(RTRIM(sar_zip_postal_code)) as sar_zip_postal_code,\r\n\t       sar_audit_reinst_ind,\r\n\t       sar_ky_tax_percentage,\r\n\t       logical_flag\r\n\tFROM  \r\n\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_4514} A \r\n\t@{pipeline().parameters.JOIN_CONDITION}\r\n\t(SELECT DISTINCT Policykey FROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.work_policytransactionstatus \r\n\tWHERE AuditID = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AND PolicyStatus <> 'NOCHANGE')  B\r\n\tON  A.policykey = B.policykey\r\n\tWHERE A.sar_major_peril IN ('078', '088', '089', '183', '255', '499', '256', '257', '258', '259', '898', '899') \r\n\tAND A.logical_flag IN ('0','1','2','3')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Default AS (\n\tSELECT\n\tpif_4514_stage_id,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpif_symbol  ||  pif_policy_number  || pif_module AS Policy_Key,\n\tsar_id,\n\tsar_insurance_line,\n\tsar_location_x,\n\tsar_sub_location_x,\n\tsar_risk_unit_group,\n\tsar_class_code_grp_x,\n\tsar_unit,\n\tsar_seq_rsk_unt_a,\n\tsar_type_exposure,\n\tsar_major_peril,\n\tsar_seq_no,\n\tsar_cov_eff_year,\n\tsar_cov_eff_month,\n\tsar_cov_eff_day,\n\tsar_part_code,\n\tsar_trans_eff_year,\n\tsar_trans_eff_month,\n\tsar_trans_eff_day,\n\tsar_reinsurance_company_no,\n\tsar_entrd_date,\n\tsar_exp_year,\n\tsar_exp_month,\n\tsar_exp_day,\n\tsar_transaction,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(sar_transaction) OR LENGTH(LTRIM(RTRIM(sar_transaction)))=0,\r\n\t--   'N/A',\r\n\t--   LTRIM(RTRIM(sar_transaction))\r\n\t-- )\n\tIFF(\n\t    sar_transaction IS NULL OR LENGTH(LTRIM(RTRIM(sar_transaction))) = 0, 'N/A',\n\t    LTRIM(RTRIM(sar_transaction))\n\t) AS o_sar_transaction,\n\tsar_premium,\n\tsar_subpay_amt,\n\tsar_original_prem,\n\tsar_agents_comm_rate,\n\tsar_acct_entrd_date,\n\tsar_state,\n\tsar_loc_prov_territory,\n\tsar_city,\n\tsar_rsn_amend_one,\n\tsar_rsn_amend_two,\n\tsar_rsn_amend_three,\n\tsar_section,\n\tsar_type_bureau,\n\tsar_class_1_4,\n\tsar_exposure,\n\tsar_sub_line,\n\tsar_zip_postal_code,\n\tsar_ky_tax_percentage,\n\t-- *INF*: IIF(ISNULL(sar_ky_tax_percentage),0.000,sar_ky_tax_percentage)\n\tIFF(sar_ky_tax_percentage IS NULL, 0.000, sar_ky_tax_percentage) AS sar_ky_tax_percentage_out,\n\tlogical_flag,\n\tsar_special_use,\n\tsar_stat_breakdown_line,\n\tsar_user_line,\n\tsar_rating_date_ind,\n\tsar_code_1,\n\tsar_code_2,\n\tsar_code_3,\n\tsar_code_4,\n\tsar_code_5,\n\tsar_code_6,\n\tsar_code_7,\n\tsar_code_8,\n\tsar_code_9,\n\tsar_code_10,\n\tsar_code_11,\n\tsar_code_12,\n\tsar_code_13,\n\tsar_code_14,\n\tsar_code_15,\n\tsar_audit_reinst_ind,\n\tsar_annual_state_line\n\tFROM SQ_pif_4514_stage\n),\nLKP_Policy_PolicyAKID_by_Key AS (\n\tSELECT\n\tpol_ak_id,\n\tSupSurchargeExemptID,\n\tpol_key\n\tFROM (\n\t\tSELECT\r\n\t\tpolicy.pol_ak_id as pol_ak_id,\r\n\t\tpolicy.SupSurchargeExemptID as SupSurchargeExemptID,\r\n\t\tltrim(rtrim(policy.pol_key)) as pol_key\r\n\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\r\n\t\tWHERE crrnt_snpsht_flag =1 AND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_Policy_PolicyAKID_by_Key.pol_ak_id,\n\tLKP_Policy_PolicyAKID_by_Key.SupSurchargeExemptID,\n\tEXP_Default.Policy_Key,\n\tEXP_Default.sar_location_x,\n\t-- *INF*: LTRIM(RTRIM(sar_location_x))\n\tLTRIM(RTRIM(sar_location_x)) AS v_RiskLocation_Unit,\n\tEXP_Default.sar_state,\n\t-- *INF*: LTRIM(RTRIM(sar_state))\n\tLTRIM(RTRIM(sar_state)) AS v_sar_state,\n\tEXP_Default.sar_loc_prov_territory,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_loc_prov_territory)\r\n\t-- \r\n\t-- --IIF(ISNULL(sar_loc_prov_territory) OR IS_SPACES(sar_loc_prov_territory) OR LENGTH(sar_loc_prov_territory) = 0, 'N/A',\r\n\t-- -- LTRIM(RTRIM(sar_loc_prov_territory)))\r\n\t-- \r\n\t-- \r\n\t-- \n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_loc_prov_territory) AS v_sar_loc_prov_territory,\n\tEXP_Default.sar_city,\n\t-- *INF*: LTRIM(RTRIM(sar_city))\r\n\t-- \r\n\t-- --IIF(IS_SPACES(LTRIM(RTRIM(sar_city)))  OR ISNULL(LTRIM(RTRIM(sar_city))) OR LENGTH(LTRIM(RTRIM(sar_city))) < 3, '000', LTRIM(RTRIM(sar_city)))\r\n\t-- \r\n\t-- \n\tLTRIM(RTRIM(sar_city)) AS v_sar_city,\n\t-- *INF*: IIF(REG_MATCH(:UDF.DEFAULT_VALUE_FOR_STRINGS(sar_city) ,'(\\d{6})')\r\n\t-- ,:UDF.DEFAULT_VALUE_FOR_STRINGS(sar_city)\r\n\t-- ,'000000')\r\n\t-- \r\n\t-- --v_sar_county_first_two  ||  v_sar_county_last_one  ||  v_sar_city\r\n\t-- \r\n\t-- --IIF(ISNULL(Tax_Location)  OR IS_SPACES(Tax_Location)  OR LENGTH(Tax_Location) = 0 , '000000', Tax_Location)\n\tIFF(\n\t    REGEXP_LIKE(UDF_DEFAULT_VALUE_FOR_STRINGS(sar_city), '(\\d{6})'),\n\t    UDF_DEFAULT_VALUE_FOR_STRINGS(sar_city),\n\t    '000000'\n\t) AS v_Tax_Location,\n\tEXP_Default.sar_zip_postal_code,\n\t-- *INF*: IIF(ISNULL(sar_zip_postal_code)  OR IS_SPACES(sar_zip_postal_code)  OR LENGTH(sar_zip_postal_code) = 0 , 'N/A', LTRIM(RTRIM(sar_zip_postal_code)))\n\tIFF(\n\t    sar_zip_postal_code IS NULL\n\t    or LENGTH(sar_zip_postal_code)>0\n\t    and TRIM(sar_zip_postal_code)=''\n\t    or LENGTH(sar_zip_postal_code) = 0,\n\t    'N/A',\n\t    LTRIM(RTRIM(sar_zip_postal_code))\n\t) AS v_sar_zip_postal_code,\n\t-- *INF*: :LKP.LKP_RISKLOCATION_RISKLOCATIONAKID(pol_ak_id, v_RiskLocation_Unit, v_sar_loc_prov_territory, v_sar_state, v_sar_zip_postal_code, v_Tax_Location)\n\tLKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.RiskLocationAKID AS v_RiskLocationAKID,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(v_RiskLocationAKID),\r\n\t--   -1,\r\n\t--   v_RiskLocationAKID\r\n\t-- )\n\tIFF(v_RiskLocationAKID IS NULL, - 1, v_RiskLocationAKID) AS o_RiskLocationAKID,\n\tEXP_Default.sar_insurance_line,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_insurance_line)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_insurance_line) AS v_sar_insurance_line,\n\tv_sar_insurance_line AS o_sar_insurance_line,\n\tEXP_Default.sar_type_bureau,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_type_bureau)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_type_bureau) AS v_sar_type_bureau,\n\tEXP_Default.sar_sub_location_x,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_sub_location_x)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_sub_location_x) AS v_sar_sub_location_x,\n\tEXP_Default.sar_risk_unit_group,\n\t-- *INF*: IIF(REG_MATCH(:UDF.DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group) ,'(\\d{3})')\r\n\t-- ,:UDF.DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group)\r\n\t-- ,'N/A')\n\tIFF(\n\t    REGEXP_LIKE(UDF_DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group), '(\\d{3})'),\n\t    UDF_DEFAULT_VALUE_FOR_STRINGS(sar_risk_unit_group),\n\t    'N/A'\n\t) AS v_sar_risk_unit_group,\n\tEXP_Default.sar_class_code_grp_x,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_class_code_grp_x)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_class_code_grp_x) AS v_sar_class_code_grp_x,\n\tEXP_Default.sar_unit,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_unit)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_unit) AS v_sar_unit,\n\tEXP_Default.sar_seq_rsk_unt_a,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_seq_rsk_unt_a)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_seq_rsk_unt_a) AS v_sar_seq_rsk_unt_a,\n\tEXP_Default.sar_type_exposure,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_type_exposure)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_type_exposure) AS v_sar_type_exposure,\n\tEXP_Default.sar_major_peril,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_major_peril)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_major_peril) AS v_sar_major_peril,\n\tEXP_Default.sar_seq_no,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_seq_no)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_seq_no) AS v_sar_seq_no,\n\tEXP_Default.sar_cov_eff_year,\n\t-- *INF*: TO_CHAR(sar_cov_eff_year)\n\tTO_CHAR(sar_cov_eff_year) AS v_sar_cov_eff_year,\n\tEXP_Default.sar_cov_eff_month,\n\t-- *INF*: TO_CHAR(sar_cov_eff_month)\n\tTO_CHAR(sar_cov_eff_month) AS v_sar_cov_eff_month,\n\tEXP_Default.sar_cov_eff_day,\n\t-- *INF*: TO_CHAR(sar_cov_eff_day)\n\tTO_CHAR(sar_cov_eff_day) AS v_sar_cov_eff_day,\n\t-- *INF*: TO_DATE(v_sar_cov_eff_month || '/' || v_sar_cov_eff_day || '/'|| v_sar_cov_eff_year ,'MM/DD/YYYY')\n\tTO_TIMESTAMP(v_sar_cov_eff_month || '/' || v_sar_cov_eff_day || '/' || v_sar_cov_eff_year, 'MM/DD/YYYY') AS v_sar_cov_eff_date,\n\tEXP_Default.sar_agents_comm_rate,\n\t-- *INF*: IIF(ISNULL(sar_agents_comm_rate) , 0.00000 , sar_agents_comm_rate)\n\tIFF(sar_agents_comm_rate IS NULL, 0.00000, sar_agents_comm_rate) AS v_sar_agents_comm_rate,\n\t-- *INF*: MD5(TO_CHAR(pol_ak_id)  || \r\n\t--  TO_CHAR(v_RiskLocationAKID)  || \r\n\t--  TO_CHAR(v_sar_insurance_line)  || \r\n\t--  TO_CHAR(v_sar_type_bureau)\r\n\t-- )\n\tMD5(TO_CHAR(pol_ak_id) || TO_CHAR(v_RiskLocationAKID) || TO_CHAR(v_sar_insurance_line) || TO_CHAR(v_sar_type_bureau)) AS v_PolicyCoverageHashKey,\n\t-- *INF*: :LKP.LKP_POLICYCOVERAGE_POLICYCOVERAGEAKID(v_PolicyCoverageHashKey)\n\tLKP_POLICYCOVERAGE_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey.PolicyCoverageAKID AS v_PolicyCoverageAKID,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(v_PolicyCoverageAKID),\r\n\t--   -1,\r\n\t--   v_PolicyCoverageAKID\r\n\t-- )\n\tIFF(v_PolicyCoverageAKID IS NULL, - 1, v_PolicyCoverageAKID) AS o_PolicyCoverageAKID,\n\tEXP_Default.sar_section,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_section)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_section) AS v_sar_section,\n\tEXP_Default.sar_class_1_4 AS sar_class_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_class_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_class_code) AS v_sar_class_code,\n\tEXP_Default.sar_exposure,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_exposure)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_exposure) AS v_sar_exposure,\n\tEXP_Default.sar_sub_line,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_sub_line)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_sub_line) AS v_sar_sub_line,\n\t-- *INF*: MD5(\r\n\t-- TO_CHAR(v_PolicyCoverageAKID)   || \r\n\t-- v_sar_sub_location_x   || \r\n\t-- v_sar_risk_unit_group   || \r\n\t-- v_sar_class_code_grp_x   || \r\n\t-- v_sar_unit   || \r\n\t-- v_sar_seq_rsk_unt_a   || \r\n\t-- v_sar_major_peril   || \r\n\t-- v_sar_seq_no   || \r\n\t-- v_sar_sub_line   || \r\n\t-- v_sar_type_exposure   || \r\n\t-- v_sar_class_code   || \r\n\t-- v_sar_section\r\n\t-- )\n\tMD5(TO_CHAR(v_PolicyCoverageAKID) || v_sar_sub_location_x || v_sar_risk_unit_group || v_sar_class_code_grp_x || v_sar_unit || v_sar_seq_rsk_unt_a || v_sar_major_peril || v_sar_seq_no || v_sar_sub_line || v_sar_type_exposure || v_sar_class_code || v_sar_section) AS v_StatisticalCoverageHashKey,\n\t-- *INF*: :LKP.LKP_STATISTICALCOVERAGE_STATISTICALCOVERAGEAKID(v_StatisticalCoverageHashKey)\n\tLKP_STATISTICALCOVERAGE_STATISTICALCOVERAGEAKID_v_StatisticalCoverageHashKey.StatisticalCoverageAKID AS v_StatisticalCoverageAKID,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(v_StatisticalCoverageAKID),\r\n\t--   -1,\r\n\t--   v_StatisticalCoverageAKID\r\n\t-- )\n\tIFF(v_StatisticalCoverageAKID IS NULL, - 1, v_StatisticalCoverageAKID) AS StatisticalCoverageAKID,\n\tEXP_Default.sar_id,\n\tEXP_Default.sar_part_code,\n\tEXP_Default.sar_trans_eff_year,\n\t-- *INF*: TO_CHAR(sar_trans_eff_year)\n\tTO_CHAR(sar_trans_eff_year) AS v_sar_trans_eff_year,\n\tEXP_Default.sar_trans_eff_month,\n\t-- *INF*: IIF(TO_CHAR(sar_trans_eff_month) = '0','1',TO_CHAR(sar_trans_eff_month)\r\n\t-- )\n\tIFF(TO_CHAR(sar_trans_eff_month) = '0', '1', TO_CHAR(sar_trans_eff_month)) AS v_sar_trans_eff_month,\n\tEXP_Default.sar_trans_eff_day,\n\t-- *INF*: IIF(TO_CHAR(sar_trans_eff_day) ='0','1',TO_CHAR(sar_trans_eff_day))\n\tIFF(TO_CHAR(sar_trans_eff_day) = '0', '1', TO_CHAR(sar_trans_eff_day)) AS v_sar_trans_eff_day,\n\t-- *INF*: TO_DATE(v_sar_trans_eff_month || '/' || v_sar_trans_eff_day || '/'|| v_sar_trans_eff_year ,'MM/DD/YYYY')\n\tTO_TIMESTAMP(v_sar_trans_eff_month || '/' || v_sar_trans_eff_day || '/' || v_sar_trans_eff_year, 'MM/DD/YYYY') AS v_sar_trans_eff_date,\n\tv_sar_trans_eff_date AS Trans_eff_date,\n\tEXP_Default.sar_reinsurance_company_no,\n\tEXP_Default.sar_entrd_date,\n\t-- *INF*: TO_DATE(sar_entrd_date,'YYYYMMDD')\n\tTO_TIMESTAMP(sar_entrd_date, 'YYYYMMDD') AS v_sar_entrd_date,\n\tv_sar_entrd_date AS Trans_entered_date,\n\tEXP_Default.sar_exp_year,\n\t-- *INF*: TO_CHAR(sar_exp_year)\n\tTO_CHAR(sar_exp_year) AS v_sar_exp_year,\n\tEXP_Default.sar_exp_month,\n\t-- *INF*: TO_CHAR(sar_exp_month)\n\tTO_CHAR(sar_exp_month) AS v_sar_exp_month,\n\tEXP_Default.sar_exp_day,\n\t-- *INF*: TO_CHAR(sar_exp_day)\n\tTO_CHAR(sar_exp_day) AS v_sar_exp_day,\n\t-- *INF*: TO_DATE(v_sar_exp_month || '/' || v_sar_exp_day || '/'|| v_sar_exp_year ,'MM/DD/YYYY')\n\tTO_TIMESTAMP(v_sar_exp_month || '/' || v_sar_exp_day || '/' || v_sar_exp_year, 'MM/DD/YYYY') AS v_sar_exp_date,\n\tv_sar_exp_date AS Trans_expiration_date,\n\tEXP_Default.o_sar_transaction AS sar_transaction,\n\tEXP_Default.sar_premium,\n\tEXP_Default.sar_subpay_amt,\n\tEXP_Default.sar_original_prem,\n\tEXP_Default.sar_acct_entrd_date,\n\t-- *INF*: TO_DATE('01'  || sar_acct_entrd_date, 'DDYYYYMM')\n\tTO_TIMESTAMP('01' || sar_acct_entrd_date, 'DDYYYYMM') AS v_sar_acct_entrd_date,\n\t-- *INF*: SET_DATE_PART(\r\n\t--     SET_DATE_PART(\r\n\t--          SET_DATE_PART(\r\n\t--                      SET_DATE_PART(\r\n\t--                              LAST_DAY(v_sar_acct_entrd_date)\r\n\t--                    , 'HH', 23) \r\n\t--            ,'MI',59)\r\n\t--     ,'SS',59)\r\n\t-- ,'MS', 000)\n\tDATEADD(,000-DATE_PART(,DATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))),DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date)))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))),DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))))),DATEADD(SECOND,59-DATE_PART(SECOND,DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))),DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date)))),DATEADD(MINUTE,59-DATE_PART(MINUTE,DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))),DATEADD(HOUR,23-DATE_PART(HOUR,LAST_DAY(v_sar_acct_entrd_date)),LAST_DAY(v_sar_acct_entrd_date))))) AS Trans_Booked_date,\n\tEXP_Default.sar_rsn_amend_one,\n\tEXP_Default.sar_rsn_amend_two,\n\tEXP_Default.sar_rsn_amend_three,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(sar_rsn_amend_one  ||  sar_rsn_amend_two || sar_rsn_amend_three)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(sar_rsn_amend_one || sar_rsn_amend_two || sar_rsn_amend_three) AS v_sar_rsn_amend_code,\n\tv_sar_rsn_amend_code AS Reason_amend_code,\n\t-- *INF*: Policy_Key  ||  TO_CHAR(v_PolicyCoverageAKID)\n\tPolicy_Key || TO_CHAR(v_PolicyCoverageAKID) AS v_CoverageKey,\n\t-- *INF*: Policy_Key  ||  TO_CHAR(v_PolicyCoverageAKID)\n\tPolicy_Key || TO_CHAR(v_PolicyCoverageAKID) AS CoverageKey,\n\t-- *INF*: MD5(\r\n\t-- TO_CHAR(v_StatisticalCoverageAKID)  ||  \r\n\t-- TO_CHAR(sar_transaction)  ||  \r\n\t-- TO_CHAR(v_sar_entrd_date)  ||  \r\n\t-- TO_CHAR(v_sar_trans_eff_date)  ||  \r\n\t-- TO_CHAR(v_sar_exp_date)  ||  \r\n\t-- TO_CHAR(v_sar_acct_entrd_date)  ||  \r\n\t-- TO_CHAR(sar_premium)  ||  \r\n\t-- TO_CHAR(sar_original_prem)  ||\r\n\t-- TO_CHAR(sar_subpay_amt)  ||  \r\n\t-- TO_CHAR(sar_ky_tax_percentage)  ||  \r\n\t-- TO_CHAR(v_sar_rsn_amend_code) \r\n\t-- )\n\tMD5(TO_CHAR(v_StatisticalCoverageAKID) || TO_CHAR(sar_transaction) || TO_CHAR(v_sar_entrd_date) || TO_CHAR(v_sar_trans_eff_date) || TO_CHAR(v_sar_exp_date) || TO_CHAR(v_sar_acct_entrd_date) || TO_CHAR(sar_premium) || TO_CHAR(sar_original_prem) || TO_CHAR(sar_subpay_amt) || TO_CHAR(sar_ky_tax_percentage) || TO_CHAR(v_sar_rsn_amend_code)) AS v_PassThroughChargeTransactionHashKey,\n\tv_PassThroughChargeTransactionHashKey AS PassThroughChargeTransactionHashKey,\n\t-- *INF*: IIF(Policy_Key = v_prev_row_Pol_Key, v_prev_row_Premium_Sequence + 1,1)\n\tIFF(Policy_Key = v_prev_row_Pol_Key, v_prev_row_Premium_Sequence + 1, 1) AS v_premium_sequence,\n\tv_premium_sequence AS PremiumLoadSequence,\n\tv_premium_sequence AS v_prev_row_Premium_Sequence,\n\tPolicy_Key AS v_prev_row_Pol_Key,\n\t-- *INF*: IIF(v_prev_row_Statistical_Coverage_AK_ID = v_StatisticalCoverageAKID AND \r\n\t-- v_prev_row_trans_eff_date = v_sar_trans_eff_date AND \r\n\t-- v_prev_row_trans_entered_date = v_sar_entrd_date AND \r\n\t-- v_prev_row_trans_exp_date = v_sar_exp_date AND \r\n\t-- v_prev_row_trans_booked_date = v_sar_acct_entrd_date AND \r\n\t-- v_prev_row_sar_transaction  = sar_transaction AND \r\n\t-- v_prev_row_sar_premium = sar_premium AND \r\n\t-- v_prev_row_sar_subpay_amt = sar_subpay_amt AND \r\n\t-- v_prev_row_sar_original_prem = sar_original_prem AND \r\n\t-- v_prev_row_Reason_amend_code = v_sar_rsn_amend_code, v_prev_row_Duplicate_Sequence + 1,1)\n\tIFF(\n\t    v_prev_row_Statistical_Coverage_AK_ID = v_StatisticalCoverageAKID\n\t    and v_prev_row_trans_eff_date = v_sar_trans_eff_date\n\t    and v_prev_row_trans_entered_date = v_sar_entrd_date\n\t    and v_prev_row_trans_exp_date = v_sar_exp_date\n\t    and v_prev_row_trans_booked_date = v_sar_acct_entrd_date\n\t    and v_prev_row_sar_transaction = sar_transaction\n\t    and v_prev_row_sar_premium = sar_premium\n\t    and v_prev_row_sar_subpay_amt = sar_subpay_amt\n\t    and v_prev_row_sar_original_prem = sar_original_prem\n\t    and v_prev_row_Reason_amend_code = v_sar_rsn_amend_code,\n\t    v_prev_row_Duplicate_Sequence + 1,\n\t    1\n\t) AS v_Duplicate_Sequence,\n\tv_Duplicate_Sequence AS Duplicate_Sequence,\n\tv_StatisticalCoverageAKID AS v_prev_row_Statistical_Coverage_AK_ID,\n\tv_sar_trans_eff_date AS v_prev_row_trans_eff_date,\n\tv_sar_entrd_date AS v_prev_row_trans_entered_date,\n\tv_sar_exp_date AS v_prev_row_trans_exp_date,\n\tv_sar_acct_entrd_date AS v_prev_row_trans_booked_date,\n\tsar_transaction AS v_prev_row_sar_transaction,\n\tsar_premium AS v_prev_row_sar_premium,\n\tsar_subpay_amt AS v_prev_row_sar_subpay_amt,\n\tsar_original_prem AS v_prev_row_sar_original_prem,\n\tv_sar_rsn_amend_code AS v_prev_row_Reason_amend_code,\n\tv_Duplicate_Sequence AS v_prev_row_Duplicate_Sequence,\n\t-1 AS o_RatingCoverageAKId,\n\tEXP_Default.logical_flag,\n\tEXP_Default.sar_ky_tax_percentage_out AS sar_ky_tax_percentage,\n\tEXP_Default.sar_special_use,\n\tEXP_Default.sar_stat_breakdown_line,\n\tEXP_Default.sar_user_line,\n\tEXP_Default.sar_rating_date_ind,\n\tEXP_Default.sar_code_1,\n\tEXP_Default.sar_code_2,\n\tEXP_Default.sar_code_3,\n\tEXP_Default.sar_code_4,\n\tEXP_Default.sar_code_5,\n\tEXP_Default.sar_code_6,\n\tEXP_Default.sar_code_7,\n\tEXP_Default.sar_code_8,\n\tEXP_Default.sar_code_9,\n\tEXP_Default.sar_code_10,\n\tEXP_Default.sar_code_11,\n\tEXP_Default.sar_code_12,\n\tEXP_Default.sar_code_13,\n\tEXP_Default.sar_code_14,\n\tEXP_Default.sar_code_15,\n\tEXP_Default.sar_audit_reinst_ind,\n\tEXP_Default.sar_annual_state_line\n\tFROM EXP_Default\n\tLEFT JOIN LKP_Policy_PolicyAKID_by_Key\n\tON LKP_Policy_PolicyAKID_by_Key.pol_key = EXP_Default.Policy_Key\n\tLEFT JOIN LKP_RISKLOCATION_RISKLOCATIONAKID LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location\n\tON LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.PolicyAKID = pol_ak_id\n\tAND LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.LocationUnitNumber = v_RiskLocation_Unit\n\tAND LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.RiskTerritory = v_sar_loc_prov_territory\n\tAND LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.StateProvinceCode = v_sar_state\n\tAND LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.ZipPostalCode = v_sar_zip_postal_code\n\tAND LKP_RISKLOCATION_RISKLOCATIONAKID_pol_ak_id_v_RiskLocation_Unit_v_sar_loc_prov_territory_v_sar_state_v_sar_zip_postal_code_v_Tax_Location.TaxLocation = v_Tax_Location\n\n\tLEFT JOIN LKP_POLICYCOVERAGE_POLICYCOVERAGEAKID LKP_POLICYCOVERAGE_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey\n\tON LKP_POLICYCOVERAGE_POLICYCOVERAGEAKID_v_PolicyCoverageHashKey.PolicyCoverageHashKey = v_PolicyCoverageHashKey\n\n\tLEFT JOIN LKP_STATISTICALCOVERAGE_STATISTICALCOVERAGEAKID LKP_STATISTICALCOVERAGE_STATISTICALCOVERAGEAKID_v_StatisticalCoverageHashKey\n\tON LKP_STATISTICALCOVERAGE_STATISTICALCOVERAGEAKID_v_StatisticalCoverageHashKey.StatisticalCoverageHashKey = v_StatisticalCoverageHashKey\n\n),\nLKP_PassThroughChargeTransaction AS (\n\tSELECT\n\tPassThroughChargeTransactionAKID,\n\tPassThroughChargeTransactionHashKey,\n\tDuplicateSequence\n\tFROM (\n\t\tSELECT PassThroughChargetransactionAKID as PassThroughChargetransactionAKID,\r\n\t\t                  PassThroughChargetransactionHashKey as PassThroughChargetransactionHashKey,\r\n\t\t\t\t\tDuplicateSequence as DuplicateSequence\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC, \r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL,\r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage POLCOV,\r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage COVDET,\r\n\t\t                   @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PassThroughChargetransaction PTPREM\r\n\t\tWHERE\tLOC.PolicyAKID = POL.pol_ak_id\r\n\t\t\t\tAND LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\t\t\tAND POLCOV.PolicyCoverageAKID = COVDET.PolicyCoverageAKID\r\n\t\t             AND COVDET.StatisticalCoverageAKID = PTPREM.StatisticalCoverageAKID\r\n\t\t\t\tAND POL.crrnt_snpsht_flag = 1 AND LOC.CurrentSnapshotFlag =1\r\n\t\t\t\tAND COVDET.CurrentSnapshotFlag =1 \r\n\t\t\t\tAND POLCOV.CurrentSnapshotFlag =1 \r\n\t\t\t\tAND PTPREM.CurrentSnapshotFlag =1 \r\n\t\t            AND PTPREM.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\tAND POL.pol_key  IN (SELECT DISTINCT RTRIM(pif_symbol) + pif_policy_number + pif_module FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_4514}\r\n\t\t\t\t\t\t\t\t\tWHERE logical_flag IN ('0','1','2','3') \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.WHERE_CLAUSE} )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PassThroughChargeTransactionHashKey,DuplicateSequence ORDER BY PassThroughChargeTransactionAKID DESC) = 1\n),\nLKP_SupLGTLineOfInsurance AS (\n\tSELECT\n\tSupLGTLineOfInsuranceId,\n\tLGTLineOfInsuranceCode\n\tFROM (\n\t\tSELECT \n\t\t\tSupLGTLineOfInsuranceId,\n\t\t\tLGTLineOfInsuranceCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupLGTLineOfInsurance\n\t\tWHERE SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}' and CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LGTLineOfInsuranceCode ORDER BY SupLGTLineOfInsuranceId) = 1\n),\nLKP_StatisticalCoverage_MajorPerilCode AS (\n\tSELECT\n\tMajorPerilCode,\n\tStatisticalCoverageAKID\n\tFROM (\n\t\tSELECT StatisticalCoverageAKID AS StatisticalCoverageAKID,\r\n\t\tLTRIM(RTRIM(MajorPerilCode)) AS MajorPerilCode\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage\r\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatisticalCoverageAKID ORDER BY MajorPerilCode) = 1\n),\nLKP_SupPassThroughChargeType AS (\n\tSELECT\n\tSupPassThroughChargeTypeID,\n\tMajorPerilCode\n\tFROM (\n\t\tSELECT \n\t\t\tSupPassThroughChargeTypeID,\n\t\t\tMajorPerilCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupPassThroughChargeType\n\t\tWHERE CurrentSnapshotFlag=1 AND SourceSystemID='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY MajorPerilCode ORDER BY SupPassThroughChargeTypeID) = 1\n),\nLKP_sup_premium_transaction_code AS (\n\tSELECT\n\tsup_prem_trans_code_id,\n\tprem_trans_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_prem_trans_code_id,\n\t\t\tprem_trans_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_premium_transaction_code\n\t\tWHERE source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY prem_trans_code ORDER BY sup_prem_trans_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_PassThroughChargeTransaction.PassThroughChargeTransactionAKID,\n\tEXP_Values.sar_exposure AS TotalAnnualPremiumSubjectToTax,\n\tEXP_Values.StatisticalCoverageAKID,\n\t0 AS logicalIndicator,\n\tEXP_Values.PassThroughChargeTransactionHashKey,\n\tEXP_Values.CoverageKey,\n\t'1' AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\t-- *INF*: TO_DATE('01/01/1800 00:00:00','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('01/01/1800 00:00:00', 'MM/DD/YYYY HH24:MI:SS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemID,\n\tSYSDATE AS CreateDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Values.Trans_eff_date,\n\tEXP_Values.Trans_entered_date,\n\tEXP_Values.Trans_expiration_date,\n\tEXP_Values.sar_transaction,\n\tEXP_Values.sar_premium,\n\tEXP_Values.sar_original_prem,\n\tEXP_Values.sar_subpay_amt,\n\tEXP_Values.Trans_Booked_date,\n\tEXP_Values.Reason_amend_code,\n\tEXP_Values.PremiumLoadSequence,\n\tEXP_Values.Duplicate_Sequence,\n\tEXP_Values.logical_flag,\n\t-- *INF*: TO_INTEGER(logical_flag)\n\tCAST(logical_flag AS INTEGER) AS logical_flag_out,\n\tEXP_Values.sar_ky_tax_percentage,\n\tLKP_sup_premium_transaction_code.sup_prem_trans_code_id,\n\tEXP_Values.o_RiskLocationAKID AS RiskLocationAKID,\n\tEXP_Values.pol_ak_id,\n\tLKP_SupLGTLineOfInsurance.SupLGTLineOfInsuranceId,\n\tEXP_Values.o_PolicyCoverageAKID AS PolicyCoverageAKID,\n\tLKP_Policy_PolicyAKID_by_Key.SupSurchargeExemptID,\n\tLKP_SupPassThroughChargeType.SupPassThroughChargeTypeID,\n\tEXP_Values.o_RatingCoverageAKId AS RatingCoverageAKId,\n\tEXP_Values.sar_special_use,\n\tEXP_Values.sar_stat_breakdown_line,\n\tEXP_Values.sar_user_line,\n\tEXP_Values.sar_rating_date_ind,\n\tEXP_Values.sar_code_1,\n\tEXP_Values.sar_code_2,\n\tEXP_Values.sar_code_3,\n\tEXP_Values.sar_code_4,\n\tEXP_Values.sar_code_5,\n\tEXP_Values.sar_code_6,\n\tEXP_Values.sar_code_7,\n\tEXP_Values.sar_code_8,\n\tEXP_Values.sar_code_9,\n\tEXP_Values.sar_code_10,\n\tEXP_Values.sar_code_11,\n\tEXP_Values.sar_code_12,\n\tEXP_Values.sar_code_13,\n\tEXP_Values.sar_code_14,\n\tEXP_Values.sar_code_15,\n\tEXP_Values.sar_audit_reinst_ind,\n\tEXP_Values.sar_annual_state_line\n\tFROM EXP_Values\n\tLEFT JOIN LKP_PassThroughChargeTransaction\n\tON LKP_PassThroughChargeTransaction.PassThroughChargeTransactionHashKey = EXP_Values.PassThroughChargeTransactionHashKey AND LKP_PassThroughChargeTransaction.DuplicateSequence = EXP_Values.Duplicate_Sequence\n\tLEFT JOIN LKP_Policy_PolicyAKID_by_Key\n\tON LKP_Policy_PolicyAKID_by_Key.pol_key = EXP_Default.Policy_Key\n\tLEFT JOIN LKP_SupLGTLineOfInsurance\n\tON LKP_SupLGTLineOfInsurance.LGTLineOfInsuranceCode = EXP_Values.o_sar_insurance_line\n\tLEFT JOIN LKP_SupPassThroughChargeType\n\tON LKP_SupPassThroughChargeType.MajorPerilCode = LKP_StatisticalCoverage_MajorPerilCode.MajorPerilCode\n\tLEFT JOIN LKP_sup_premium_transaction_code\n\tON LKP_sup_premium_transaction_code.prem_trans_code = EXP_Values.sar_transaction\n),\nFIL_Insert_rows AS (\n\tSELECT\n\tPassThroughChargeTransactionAKID, \n\tTotalAnnualPremiumSubjectToTax, \n\tStatisticalCoverageAKID, \n\tlogical_flag_out AS logicalIndicator, \n\tPassThroughChargeTransactionHashKey, \n\tCoverageKey, \n\tCurrentSnapshotFlag, \n\tAuditID, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemID, \n\tCreateDate, \n\tModifiedDate, \n\tTrans_eff_date, \n\tTrans_entered_date, \n\tTrans_expiration_date, \n\tsar_transaction, \n\tsar_premium, \n\tsar_original_prem, \n\tsar_subpay_amt, \n\tTrans_Booked_date, \n\tReason_amend_code, \n\tPremiumLoadSequence, \n\tDuplicate_Sequence, \n\tsar_ky_tax_percentage, \n\tsup_prem_trans_code_id, \n\tRiskLocationAKID, \n\tpol_ak_id, \n\tSupLGTLineOfInsuranceId, \n\tPolicyCoverageAKID, \n\tSupSurchargeExemptID, \n\tSupPassThroughChargeTypeID, \n\tRatingCoverageAKId, \n\tsar_special_use, \n\tsar_stat_breakdown_line, \n\tsar_user_line, \n\tsar_rating_date_ind, \n\tsar_code_1, \n\tsar_code_2, \n\tsar_code_3, \n\tsar_code_4, \n\tsar_code_5, \n\tsar_code_6, \n\tsar_code_7, \n\tsar_code_8, \n\tsar_code_9, \n\tsar_code_10, \n\tsar_code_11, \n\tsar_code_12, \n\tsar_code_13, \n\tsar_code_14, \n\tsar_code_15, \n\tsar_audit_reinst_ind, \n\tsar_annual_state_line\n\tFROM EXP_Detect_Changes\n\tWHERE IIF(ISNULL(PassThroughChargeTransactionAKID), TRUE, FALSE)\n),\nSEQ_PassThroughChargeTransactionAKID AS (\n\tCREATE SEQUENCE SEQ_PassThroughChargeTransactionAKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Detemine_AK_ID AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreateDate,\n\tModifiedDate,\n\tlogicalIndicator,\n\t1 AS LogicalDeleteFlag,\n\tPassThroughChargeTransactionAKID,\n\tSEQ_PassThroughChargeTransactionAKID.NEXTVAL,\n\tPassThroughChargeTransactionHashKey,\n\tPremiumLoadSequence,\n\tDuplicate_Sequence,\n\t-- *INF*: IIF(ISNULL(PassThroughChargeTransactionAKID), NEXTVAL, PassThroughChargeTransactionAKID)\n\tIFF(PassThroughChargeTransactionAKID IS NULL, NEXTVAL, PassThroughChargeTransactionAKID) AS PassThroughChargeTransactionAKID_Out,\n\tStatisticalCoverageAKID,\n\tCoverageKey,\n\tsar_transaction,\n\tTrans_entered_date,\n\tTrans_eff_date,\n\tTrans_expiration_date,\n\tTrans_Booked_date,\n\tsar_premium,\n\tsar_original_prem,\n\tsar_subpay_amt,\n\tsar_ky_tax_percentage,\n\tReason_amend_code,\n\tsup_prem_trans_code_id,\n\tRiskLocationAKID,\n\tpol_ak_id,\n\tSupLGTLineOfInsuranceId,\n\tPolicyCoverageAKID,\n\tSupSurchargeExemptID,\n\tSupPassThroughChargeTypeID,\n\tTotalAnnualPremiumSubjectToTax,\n\t'N/A' AS DCTTaxCode,\n\t'N/A' AS OffsetOnsetCode,\n\t1 AS LoadSequence,\n\t'N/A' AS NegateRestateCode,\n\tRatingCoverageAKId,\n\tsar_special_use,\n\tsar_stat_breakdown_line,\n\tsar_user_line,\n\tsar_rating_date_ind,\n\tsar_code_1,\n\tsar_code_2,\n\tsar_code_3,\n\tsar_code_4,\n\tsar_code_5,\n\tsar_code_6,\n\tsar_code_7,\n\tsar_code_8,\n\tsar_code_9,\n\tsar_code_10,\n\tsar_code_11,\n\tsar_code_12,\n\tsar_code_13,\n\tsar_code_14,\n\tsar_code_15,\n\tsar_audit_reinst_ind,\n\tsar_annual_state_line\n\tFROM FIL_Insert_rows\n),\nEXP_Pre_BureauCodeLkp AS (\n\tSELECT\n\tPassThroughChargeTransactionAKID_Out AS PassThroughChargeTransactionAKID,\n\tlogicalIndicator,\n\tCoverageKey,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\t-1 AS v_PremiumTransactionAKID,\n\tv_PremiumTransactionAKID AS PremiumTransactionAKID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreateDate,\n\tModifiedDate,\n\tsar_stat_breakdown_line,\n\tsar_user_line,\n\tsar_code_1 AS BureauCode1,\n\tsar_code_2 AS BureauCode2,\n\tsar_code_3 AS BureauCode3,\n\tsar_code_4 AS BureauCode4,\n\tsar_code_5 AS BureauCode5,\n\tsar_code_6 AS BureauCode6,\n\tsar_code_7 AS BureauCode7,\n\tsar_code_8 AS BureauCode8,\n\tsar_code_9 AS BureauCode9,\n\tsar_code_10 AS BureauCode10,\n\tsar_code_11 AS BureauCode11,\n\tsar_code_12 AS BureauCode12,\n\tsar_code_13 AS BureauCode13,\n\tsar_code_14 AS BureauCode14,\n\tsar_code_15 AS BureauCode15,\n\tsar_special_use AS BureauSpecialUseCode,\n\tsar_annual_state_line AS PMSAnnualStatementLine,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(PMSAnnualStatementLine)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(PMSAnnualStatementLine) AS v_PMSAnnualStatementLine,\n\tv_PMSAnnualStatementLine AS PMSAnnualStatementLine_out,\n\tsar_rating_date_ind AS RatingDateIndicator,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(RatingDateIndicator)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(RatingDateIndicator) AS v_RatingDateIndicator,\n\tv_RatingDateIndicator AS RatingDateIndicator_out,\n\tsar_stat_breakdown_line || sar_user_line AS v_BureauStatisticalUserLine,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_BureauStatisticalUserLine)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(v_BureauStatisticalUserLine) AS BureauStatisticalUserLine,\n\tsar_audit_reinst_ind AS AuditReinstatementIndicator,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(AuditReinstatementIndicator)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(AuditReinstatementIndicator) AS v_AuditReinstatementIndicator,\n\tv_AuditReinstatementIndicator AS AuditReinstatementIndicator_out,\n\t-- *INF*: MD5(\r\n\t-- TO_CHAR(v_PremiumTransactionAKID) || \r\n\t-- TO_CHAR(PassThroughChargeTransactionAKID)  ||  \r\n\t-- BureauCode1  ||  \r\n\t-- BureauCode2  ||  \r\n\t-- BureauCode3  ||  \r\n\t-- BureauCode4  ||  \r\n\t-- BureauCode5  ||  \r\n\t-- BureauCode6  ||  \r\n\t-- BureauCode7  ||  \r\n\t-- BureauCode8  ||  \r\n\t-- BureauCode9  ||  \r\n\t-- BureauCode10  ||  \r\n\t-- BureauCode11  ||  \r\n\t-- BureauCode12  ||  \r\n\t-- BureauCode13  ||  \r\n\t-- BureauCode14  ||  \r\n\t-- BureauCode15  ||  \r\n\t-- BureauSpecialUseCode  ||  \r\n\t-- PMSAnnualStatementLine  ||  \r\n\t-- RatingDateIndicator  ||  \r\n\t-- v_BureauStatisticalUserLine  ||\r\n\t-- AuditReinstatementIndicator )\r\n\t-- \n\tMD5(TO_CHAR(v_PremiumTransactionAKID) || TO_CHAR(PassThroughChargeTransactionAKID) || BureauCode1 || BureauCode2 || BureauCode3 || BureauCode4 || BureauCode5 || BureauCode6 || BureauCode7 || BureauCode8 || BureauCode9 || BureauCode10 || BureauCode11 || BureauCode12 || BureauCode13 || BureauCode14 || BureauCode15 || BureauSpecialUseCode || PMSAnnualStatementLine || RatingDateIndicator || v_BureauStatisticalUserLine || AuditReinstatementIndicator) AS v_BureauStatisticalCodeHashKey,\n\tv_BureauStatisticalCodeHashKey AS BureauStatisticalCodeHashKey\n\tFROM EXP_Detemine_AK_ID\n),\nLKP_BureauStatisticalCode AS (\n\tSELECT\n\tBureauStatisticalCodeAKID,\n\tBureauStatisticalCodeHashKey\n\tFROM (\n\t\tSELECT BureauStatisticalCodeAKID as BureauStatisticalCodeAKID,\r\n\t\t                  BureauStatisticalCodeHashKey as BureauStatisticalCodeHashKey\r\n\t\tFROM\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation LOC, \r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER_V2}.Policy POL,\r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage POLCOV,\r\n\t\t\t\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage STATCOV,\r\n\t\t                   @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PassThroughChargeTransaction PT,\r\n\t\t                   @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.BureauStatisticalCode STATCD\r\n\t\tWHERE\tLOC.PolicyAKID = POL.pol_ak_id\r\n\t\t\t\tAND LOC.RiskLocationAKID = POLCOV.RiskLocationAKID\r\n\t\t\t\tAND POLCOV.PolicyCoverageAKID = STATCOV.PolicyCoverageAKID\r\n\t\t             AND STATCOV.StatisticalCoverageAKID = PT.StatisticalCoverageAKID\r\n\t\t             AND PT.PassThroughChargeTransactionAKID = STATCD.PassThroughChargeTransactionAKID\r\n\t\t\t\tAND POL.crrnt_snpsht_flag = 1 AND LOC.CurrentSnapshotFlag =1\r\n\t\t\t\tAND STATCOV.CurrentSnapshotFlag =1 \r\n\t\t\t\tAND POLCOV.CurrentSnapshotFlag =1 \r\n\t\t\t\tAND PT.CurrentSnapshotFlag =1 \r\n\t\t             AND STATCD.CurrentSnapshotFlag =1 \r\n\t\t            AND STATCD.PassThroughChargeTransactionAKID <> -1\r\n\t\t            AND STATCD.SourceSystemID = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t\t\tAND POL.pol_key  IN (SELECT DISTINCT RTRIM(pif_symbol) + pif_policy_number + pif_module FROM  \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.@{pipeline().parameters.SOURCE_TABLE_NAME_4514}\r\n\t\t\t\t\t\t\t\t\tWHERE logical_flag IN ('0','1','2','3') \r\n\t\t\t\t\t\t\t\t\t@{pipeline().parameters.WHERE_CLAUSE} )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY BureauStatisticalCodeHashKey ORDER BY BureauStatisticalCodeAKID DESC) = 1\n),\nFIL_Insert_BureauStatisticalCode_Rows AS (\n\tSELECT\n\tEXP_Pre_BureauCodeLkp.PremiumTransactionAKID, \n\tLKP_BureauStatisticalCode.BureauStatisticalCodeAKID, \n\tEXP_Pre_BureauCodeLkp.CurrentSnapshotFlag, \n\tEXP_Pre_BureauCodeLkp.AuditID, \n\tEXP_Pre_BureauCodeLkp.EffectiveDate, \n\tEXP_Pre_BureauCodeLkp.ExpirationDate, \n\tEXP_Pre_BureauCodeLkp.SourceSystemID, \n\tEXP_Pre_BureauCodeLkp.CreateDate, \n\tEXP_Pre_BureauCodeLkp.ModifiedDate, \n\tEXP_Pre_BureauCodeLkp.logicalIndicator, \n\tEXP_Pre_BureauCodeLkp.BureauStatisticalCodeHashKey, \n\tEXP_Pre_BureauCodeLkp.PassThroughChargeTransactionAKID, \n\tEXP_Pre_BureauCodeLkp.BureauCode1, \n\tEXP_Pre_BureauCodeLkp.BureauCode2, \n\tEXP_Pre_BureauCodeLkp.BureauCode3, \n\tEXP_Pre_BureauCodeLkp.BureauCode4, \n\tEXP_Pre_BureauCodeLkp.BureauCode5, \n\tEXP_Pre_BureauCodeLkp.BureauCode6, \n\tEXP_Pre_BureauCodeLkp.BureauCode7, \n\tEXP_Pre_BureauCodeLkp.BureauCode8, \n\tEXP_Pre_BureauCodeLkp.BureauCode9, \n\tEXP_Pre_BureauCodeLkp.BureauCode10, \n\tEXP_Pre_BureauCodeLkp.BureauCode11, \n\tEXP_Pre_BureauCodeLkp.BureauCode12, \n\tEXP_Pre_BureauCodeLkp.BureauCode13, \n\tEXP_Pre_BureauCodeLkp.BureauCode14, \n\tEXP_Pre_BureauCodeLkp.BureauCode15, \n\tEXP_Pre_BureauCodeLkp.BureauSpecialUseCode, \n\tEXP_Pre_BureauCodeLkp.PMSAnnualStatementLine_out AS PMSAnnualStatementLine, \n\tEXP_Pre_BureauCodeLkp.RatingDateIndicator_out AS RatingDateIndicator, \n\tEXP_Pre_BureauCodeLkp.BureauStatisticalUserLine, \n\tEXP_Pre_BureauCodeLkp.AuditReinstatementIndicator_out AS AuditReinstatementIndicator\n\tFROM EXP_Pre_BureauCodeLkp\n\tLEFT JOIN LKP_BureauStatisticalCode\n\tON LKP_BureauStatisticalCode.BureauStatisticalCodeHashKey = EXP_Pre_BureauCodeLkp.BureauStatisticalCodeHashKey\n\tWHERE IIF(ISNULL(BureauStatisticalCodeAKID), TRUE, FALSE)\n),\nSEQ_BureauStatisticalCode_AKID AS (\n\tCREATE SEQUENCE SEQ_BureauStatisticalCode_AKID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_BureauCode_AKID AS (\n\tSELECT\n\tBureauStatisticalCodeAKID,\n\tSEQ_BureauStatisticalCode_AKID.NEXTVAL,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreateDate,\n\tModifiedDate,\n\tlogicalIndicator,\n\t1 AS LogicalDeleteFlag,\n\tBureauStatisticalCodeHashKey,\n\t-- *INF*: IIF(ISNULL(BureauStatisticalCodeAKID), NEXTVAL, BureauStatisticalCodeAKID)\n\tIFF(BureauStatisticalCodeAKID IS NULL, NEXTVAL, BureauStatisticalCodeAKID) AS BureauStatisticalCodeAKID_Out,\n\tPremiumTransactionAKID,\n\tPassThroughChargeTransactionAKID,\n\tBureauCode1,\n\tBureauCode2,\n\tBureauCode3,\n\tBureauCode4,\n\tBureauCode5,\n\tBureauCode6,\n\tBureauCode7,\n\tBureauCode8,\n\tBureauCode9,\n\tBureauCode10,\n\tBureauCode11,\n\tBureauCode12,\n\tBureauCode13,\n\tBureauCode14,\n\tBureauCode15,\n\tBureauSpecialUseCode,\n\tPMSAnnualStatementLine,\n\tRatingDateIndicator,\n\tBureauStatisticalUserLine,\n\tAuditReinstatementIndicator\n\tFROM FIL_Insert_BureauStatisticalCode_Rows\n),\nTGT_BureauStatisticalCode AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.BureauStatisticalCode\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, LogicalDeleteFlag, BureauStatisticalCodeHashKey, BureauStatisticalCodeAKID, PremiumTransactionAKID, PassThroughChargeTransactionAKID, BureauCode1, BureauCode2, BureauCode3, BureauCode4, BureauCode5, BureauCode6, BureauCode7, BureauCode8, BureauCode9, BureauCode10, BureauCode11, BureauCode12, BureauCode13, BureauCode14, BureauCode15, BureauSpecialUseCode, PMSAnnualStatementLine, RatingDateIndicator, BureauStatisticalUserLine, AuditReinstatementIndicator)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCreateDate AS CREATEDDATE, \n\tMODIFIEDDATE, \n\tlogicalIndicator AS LOGICALINDICATOR, \n\tLOGICALDELETEFLAG, \n\tBUREAUSTATISTICALCODEHASHKEY, \n\tBureauStatisticalCodeAKID_Out AS BUREAUSTATISTICALCODEAKID, \n\tPREMIUMTRANSACTIONAKID, \n\tPASSTHROUGHCHARGETRANSACTIONAKID, \n\tBUREAUCODE1, \n\tBUREAUCODE2, \n\tBUREAUCODE3, \n\tBUREAUCODE4, \n\tBUREAUCODE5, \n\tBUREAUCODE6, \n\tBUREAUCODE7, \n\tBUREAUCODE8, \n\tBUREAUCODE9, \n\tBUREAUCODE10, \n\tBUREAUCODE11, \n\tBUREAUCODE12, \n\tBUREAUCODE13, \n\tBUREAUCODE14, \n\tBUREAUCODE15, \n\tBUREAUSPECIALUSECODE, \n\tPMSANNUALSTATEMENTLINE, \n\tRATINGDATEINDICATOR, \n\tBUREAUSTATISTICALUSERLINE, \n\tAUDITREINSTATEMENTINDICATOR\n\tFROM EXP_Determine_BureauCode_AKID\n),\nTGT_PassThroughChargeTransaction AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.PassThroughChargeTransaction\n\t(CurrentSnapshotFlag, AuditID, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, LogicalIndicator, LogicalDeleteFlag, DuplicateSequence, PassThroughChargeTransactionHashKey, PassThroughChargeTransactionAKID, StatisticalCoverageAKID, PassThroughChargeTransactionCode, PassThroughChargeTransactionEnteredDate, PassThroughChargeTransactionEffectiveDate, PassThroughChargeTransactionExpirationDate, PassThroughChargeTransactionBookedDate, PassThroughChargeTransactionAmount, FullTermPremium, FullTaxAmount, TaxPercentageRate, ReasonAmendedCode, PassThroughChargeTransactionCodeId, RiskLocationAKID, PolicyAKID, SupLGTLineOfInsuranceID, PolicyCoverageAKID, SupSurchargeExemptID, SupPassThroughChargeTypeID, TotalAnnualPremiumSubjectToTax, DCTTaxCode, OffsetOnsetCode, LoadSequence, NegateRestateCode)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCreateDate AS CREATEDDATE, \n\tMODIFIEDDATE, \n\tlogicalIndicator AS LOGICALINDICATOR, \n\tLOGICALDELETEFLAG, \n\tDuplicate_Sequence AS DUPLICATESEQUENCE, \n\tPASSTHROUGHCHARGETRANSACTIONHASHKEY, \n\tPassThroughChargeTransactionAKID_Out AS PASSTHROUGHCHARGETRANSACTIONAKID, \n\tSTATISTICALCOVERAGEAKID, \n\tsar_transaction AS PASSTHROUGHCHARGETRANSACTIONCODE, \n\tTrans_entered_date AS PASSTHROUGHCHARGETRANSACTIONENTEREDDATE, \n\tTrans_eff_date AS PASSTHROUGHCHARGETRANSACTIONEFFECTIVEDATE, \n\tTrans_expiration_date AS PASSTHROUGHCHARGETRANSACTIONEXPIRATIONDATE, \n\tTrans_Booked_date AS PASSTHROUGHCHARGETRANSACTIONBOOKEDDATE, \n\tsar_premium AS PASSTHROUGHCHARGETRANSACTIONAMOUNT, \n\tsar_original_prem AS FULLTERMPREMIUM, \n\tsar_subpay_amt AS FULLTAXAMOUNT, \n\tsar_ky_tax_percentage AS TAXPERCENTAGERATE, \n\tReason_amend_code AS REASONAMENDEDCODE, \n\tsup_prem_trans_code_id AS PASSTHROUGHCHARGETRANSACTIONCODEID, \n\tRISKLOCATIONAKID, \n\tpol_ak_id AS POLICYAKID, \n\tSupLGTLineOfInsuranceId AS SUPLGTLINEOFINSURANCEID, \n\tPOLICYCOVERAGEAKID, \n\tSUPSURCHARGEEXEMPTID, \n\tSUPPASSTHROUGHCHARGETYPEID, \n\tTOTALANNUALPREMIUMSUBJECTTOTAX, \n\tDCTTAXCODE, \n\tOFFSETONSETCODE, \n\tLOADSEQUENCE, \n\tNEGATERESTATECODE\n\tFROM EXP_Detemine_AK_ID\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_EDW": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_NAME_4514": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "JOIN_CONDITION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataWarehouse/"
        },
        "annotations": []
    }
}