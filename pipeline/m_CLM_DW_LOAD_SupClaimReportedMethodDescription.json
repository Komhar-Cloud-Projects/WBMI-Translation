{
    "name": "m_CLM_DW_LOAD_SupClaimReportedMethodDescription",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_SupClaimReportedMethodDescription",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_SUPPORT_01_STAGE AS (\n\tSELECT RTRIM(CS.CS01_CODE) AS CS01_CODE, RTRIM(CS.CS01_CODE_DES) AS CS01_CODE_DES, CS.SOURCE_SYSTEM_ID \r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_SUPPORT_01_STAGE CS\r\n\tWHERE CS.CS01_TABLE_ID = 'W033'\n),\nEXP_Source AS (\n\tSELECT\n\tCS01_CODE,\n\tCS01_CODE_DES,\n\tSOURCE_SYSTEM_ID\n\tFROM SQ_CLAIM_SUPPORT_01_STAGE\n),\nLKP_SupClaimReportedMethodDescription AS (\n\tSELECT\n\tSupClaimReportedMethodDescriptionId,\n\tClaimReportedMethodCode,\n\tClaimReportedMethodDescription\n\tFROM (\n\t\tselect SupClaimReportedMethodDescriptionId as SupClaimReportedMethodDescriptionId, \r\n\t\t\tClaimReportedMethodCode as ClaimReportedMethodCode, \r\n\t\t\tClaimReportedMethodDescription as ClaimReportedMethodDescription\r\n\t\tfrom RPT_EDM.dbo.SupClaimReportedMethodDescription\r\n\t\twhere CurrentSnapshotFlag = 1 \r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimReportedMethodCode ORDER BY SupClaimReportedMethodDescriptionId) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Source.CS01_CODE,\n\tEXP_Source.CS01_CODE_DES,\n\tEXP_Source.SOURCE_SYSTEM_ID,\n\tLKP_SupClaimReportedMethodDescription.SupClaimReportedMethodDescriptionId AS lkp_SupClaimReportedMethodDescriptionId,\n\tLKP_SupClaimReportedMethodDescription.ClaimReportedMethodCode AS lkp_ClaimReportedMethodCode,\n\tLKP_SupClaimReportedMethodDescription.ClaimReportedMethodDescription AS lkp_ClaimReportedMethodDescription,\n\t-- *INF*: iif(isnull(lkp_SupClaimReportedMethodDescriptionId),\r\n\t--     'NEW',\r\n\t--     iif(LTRIM(RTRIM(CS01_CODE)) != LTRIM(RTRIM(lkp_ClaimReportedMethodCode)) \r\n\t--         OR\r\n\t--     LTRIM(RTRIM(CS01_CODE_DES)) != LTRIM(RTRIM(lkp_ClaimReportedMethodDescription)),\r\n\t--         'UPDATE', \r\n\t-- 'NOCHANGE'))\n\tIFF(lkp_SupClaimReportedMethodDescriptionId IS NULL, 'NEW', IFF(LTRIM(RTRIM(CS01_CODE)) != LTRIM(RTRIM(lkp_ClaimReportedMethodCode)) OR LTRIM(RTRIM(CS01_CODE_DES)) != LTRIM(RTRIM(lkp_ClaimReportedMethodDescription)), 'UPDATE', 'NOCHANGE')) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangeFlag,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t--     sysdate)\n\tIFF(v_ChangedFlag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CurrentDate,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId\n\tFROM EXP_Source\n\tLEFT JOIN LKP_SupClaimReportedMethodDescription\n\tON LKP_SupClaimReportedMethodDescription.ClaimReportedMethodCode = EXP_Source.CS01_CODE\n),\nFIL_NewOrChanged AS (\n\tSELECT\n\tCS01_CODE, \n\tCS01_CODE_DES, \n\tSOURCE_SYSTEM_ID, \n\tChangeFlag, \n\tEffectiveDate, \n\tExpirationDate, \n\tCurrentDate, \n\tCurrentSnapshotFlag, \n\tAuditId\n\tFROM EXP_Detect_Changes\n\tWHERE ChangeFlag = 'NEW' or ChangeFlag = 'UPDATE'\n),\nSupClaimReportedMethodDescription_Insert AS (\n\tINSERT INTO SupClaimReportedMethodDescription\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, ClaimReportedMethodCode, ClaimReportedMethodDescription)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCE_SYSTEM_ID AS SOURCESYSTEMID, \n\tCurrentDate AS CREATEDDATE, \n\tCurrentDate AS MODIFIEDDATE, \n\tCS01_CODE AS CLAIMREPORTEDMETHODCODE, \n\tCS01_CODE_DES AS CLAIMREPORTEDMETHODDESCRIPTION\n\tFROM FIL_NewOrChanged\n),\nSQ_SupClaimReportedMethodDescription_Type2 AS (\n\tSELECT a.SupClaimReportedMethodDescriptionId,\r\n\t\ta.ClaimReportedMethodCode,\r\n\t\ta.EffectiveDate,\r\n\t\ta.ExpirationDate\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClaimReportedMethodDescription a\r\n\tWHERE EXISTS (\r\n\t\t\tSELECT 1\r\n\t\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupClaimReportedMethodDescription b\r\n\t\t\tWHERE CurrentSnapshotFlag = 1\r\n\t\t\t\tAND a.ClaimReportedMethodCode = b.ClaimReportedMethodCode\r\n\t\t\tGROUP BY b.ClaimReportedMethodCode\r\n\t\t\tHAVING COUNT(1) > 1\r\n\t\t\t)\r\n\tORDER BY a.ClaimReportedMethodCode,\r\n\t\ta.EffectiveDate DESC\n),\nEXPTRANS AS (\n\tSELECT\n\tSupClaimReportedMethodDescriptionId,\n\tClaimReportedMethodCode,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tClaimReportedMethodCode = v_PREV_ROW_ClaimReportedMethodCode, \r\n\t-- \t\tADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1), \r\n\t-- \torig_ExpirationDate)\n\tDECODE(TRUE,\n\tClaimReportedMethodCode = v_PREV_ROW_ClaimReportedMethodCode, ADD_TO_DATE(v_PREV_ROW_EffectiveDate, 'SS', - 1),\n\torig_ExpirationDate) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tClaimReportedMethodCode AS v_PREV_ROW_ClaimReportedMethodCode,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\t0 AS CurrentSnapshotFlag,\n\tSYSDATE AS CurrentDate\n\tFROM SQ_SupClaimReportedMethodDescription_Type2\n),\nFIL_First_Row_In_AK_Group AS (\n\tSELECT\n\tSupClaimReportedMethodDescriptionId, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tCurrentSnapshotFlag, \n\tCurrentDate\n\tFROM EXPTRANS\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_EffectiveDate AS (\n\tSELECT\n\tSupClaimReportedMethodDescriptionId, \n\tExpirationDate, \n\tCurrentSnapshotFlag, \n\tCurrentDate\n\tFROM FIL_First_Row_In_AK_Group\n),\nSupClaimReportedMethodDescription_Update AS (\n\tMERGE INTO SupClaimReportedMethodDescription AS T\n\tUSING UPD_EffectiveDate AS S\n\tON T.SupClaimReportedMethodDescriptionId = S.SupClaimReportedMethodDescriptionId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.CurrentDate\n),"
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246507"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905524"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604435"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:26"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}