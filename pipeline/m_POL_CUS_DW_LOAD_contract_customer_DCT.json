{
    "name": "s_m_POL_CUS_DW_LOAD_contract_customer_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CUS_DW_LOAD_contract_customer_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DCPartyStaging AS (\n\tSELECT WorkDCTPolicy.SessionId, WorkDCTPolicy.PartyId, WorkDCTPolicy.PolicyGUId, WorkDCTPolicy.PolicyVersion, WorkDCTPolicy.Name, WorkDCTPolicy.FirstName, WorkDCTPolicy.LastName, WorkDCTPolicy.MiddleName, WorkDCTPolicy.EntityType, WorkDCTPolicy.FederalEmployeeIDNumber, WorkDCTPolicy.SICCode, WorkDCTPolicy.NAICSCode, WorkDCTPolicy.PolicyStatus, WorkDCTPolicy.CustomerNum, WorkDCTPolicy.Program, WorkDCTPolicy.Association ,WorkDCTPolicy.PolicyNumber \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTLocation \r\n\ton\r\n\tWorkDCTLocation.SessionId=WorkDCTPolicy.SessionId\r\n\tand\r\n\tWorkDCTLocation.LocationAssociationType='Account' \r\n\tWHERE\r\n\tWorkDCTPolicy.PolicyStatus<>'Quote'\r\n\tand\r\n\tWorkDCTPolicy.TransactionState='committed' \r\n\tORDER BY\r\n\tWorkDCTPolicy.SessionId,WorkDCTLocation.LocationId DESC\n),\nAGG_RemoveDuplicates AS (\n\tSELECT\n\tPolicyGUId AS i_Id, \n\tPolicyVersion AS i_PolicyVersion, \n\tPolicyNumber AS i_PolicyNumber, \n\tCustomerNum, \n\tSessionId, \n\tPartyId, \n\tName, \n\tFirstName, \n\tLastName, \n\tMiddleName, \n\tEntityType, \n\tFederalEmployeeIDNumber, \n\tSICCode, \n\tNAICSCode, \n\tPolicyStatus AS Status, \n\tProgram, \n\tAssociation, \n\tIFF(CustomerNum IS NULL OR IS_SPACES(CustomerNum) OR LENGTH(CustomerNum) = 0, 'N/A', LTRIM(RTRIM(CustomerNum))) AS o_CustomerNumber, \n\tIFF(i_Id IS NULL OR IS_SPACES(i_Id) OR LENGTH(i_Id) = 0, 'N/A', LTRIM(RTRIM(i_Id))) AS o_Id, \n\tIFF(i_PolicyVersion IS NULL, '00', LPAD(TO_CHAR(i_PolicyVersion), 2, '0')) AS o_PolicyVersion, \n\t'Email' AS o_Email, \n\tIFF(i_PolicyNumber IS NULL OR IS_SPACES(i_PolicyNumber) OR LENGTH(i_PolicyNumber) = 0, 'N/A', LTRIM(RTRIM(i_PolicyNumber))) AS o_PolicyNumber\n\tFROM SQ_DCPartyStaging\n\tGROUP BY o_PolicyVersion, o_PolicyNumber\n),\nLKP_DCContactStaging AS (\n\tSELECT\n\tPhoneNumber,\n\tPhoneExtension,\n\tSessionId,\n\tPartyId\n\tFROM (\n\t\tSELECT \n\t\t\tPhoneNumber,\n\t\t\tPhoneExtension,\n\t\t\tSessionId,\n\t\t\tPartyId\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCContactStaging\n\t\tWHERE DCContactStaging.Type='Primary'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SessionId,PartyId ORDER BY PhoneNumber) = 1\n),\nLKP_WBPartyStaging AS (\n\tSELECT\n\tDoingBusinessAs,\n\tlkp_SessionId\n\tFROM (\n\t\tselect distinct wbps.DoingBusinessAs AS DoingBusinessAs ,\r\n\t\tdcpas.SessionId AS lkp_SessionId\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPartyStaging dcps with (nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DCPartyAssociationStaging dcpas with (nolock)\r\n\t\ton dcpas.partyid = dcps.partyid \r\n\t\tand dcpas.PartyAssociationType = 'Account'\r\n\t\tand dcpas.SessionId = dcps.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WBPartyStaging wbps with (nolock)\r\n\t\ton wbps.partyid = dcps.partyid\r\n\t\tand wbps.SessionId = dcps.SessionId\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY lkp_SessionId ORDER BY DoingBusinessAs) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_DCContactStaging.PhoneNumber AS i_PhoneNumber,\n\tLKP_DCContactStaging.PhoneExtension AS i_PhoneExtension,\n\tLKP_WBPartyStaging.DoingBusinessAs AS i_DoingBusinessAs,\n\tAGG_RemoveDuplicates.Name AS i_Name,\n\tAGG_RemoveDuplicates.FirstName AS i_FirstName,\n\tAGG_RemoveDuplicates.LastName AS i_LastName,\n\tAGG_RemoveDuplicates.MiddleName AS i_MiddleName,\n\tAGG_RemoveDuplicates.EntityType AS i_EntityType,\n\tAGG_RemoveDuplicates.FederalEmployeeIDNumber AS i_FederalEmployeeIDNumber,\n\tAGG_RemoveDuplicates.SICCode AS i_SICCode,\n\tAGG_RemoveDuplicates.NAICSCode AS i_NAICSCode,\n\tAGG_RemoveDuplicates.Status AS i_Status,\n\tAGG_RemoveDuplicates.Program AS i_Program,\n\tAGG_RemoveDuplicates.Association AS i_Association,\n\tAGG_RemoveDuplicates.o_CustomerNumber AS i_CustomerNumber,\n\tAGG_RemoveDuplicates.o_Id AS i_Id,\n\tAGG_RemoveDuplicates.o_PolicyNumber AS i_PolicyNumber,\n\tAGG_RemoveDuplicates.o_PolicyVersion AS i_PolicyVersion,\n\tAGG_RemoveDuplicates.o_Email AS i_Email,\n\t-- *INF*: LTRIM(RTRIM(i_PhoneNumber))\n\tLTRIM(RTRIM(i_PhoneNumber)) AS v_ph_num_full_trim,\n\t-- *INF*: IIF(SUBSTR(v_ph_num_full_trim,1,1)='+','+','')\n\tIFF(SUBSTR(v_ph_num_full_trim, 1, 1) = '+', '+', '') AS v_ph_num_full_first,\n\t-- *INF*: IIF(ISNULL(i_PhoneNumber) or IS_SPACES(i_PhoneNumber)  or LENGTH(i_PhoneNumber)=0,'N/A',REG_REPLACE(v_ph_num_full_trim,'\\D',''))\n\tIFF(i_PhoneNumber IS NULL OR IS_SPACES(i_PhoneNumber) OR LENGTH(i_PhoneNumber) = 0, 'N/A', REG_REPLACE(v_ph_num_full_trim, '\\D', '')) AS v_ph_num_full,\n\t-- *INF*: IIF(ISNULL(i_FirstName) or IS_SPACES(i_FirstName)  or LENGTH(i_FirstName)=0,'N/A',LTRIM(RTRIM(i_FirstName)))\n\tIFF(i_FirstName IS NULL OR IS_SPACES(i_FirstName) OR LENGTH(i_FirstName) = 0, 'N/A', LTRIM(RTRIM(i_FirstName))) AS v_FirstName,\n\t-- *INF*: IIF(ISNULL(i_LastName) or IS_SPACES(i_LastName)  or LENGTH(i_LastName)=0,'N/A',LTRIM(RTRIM(i_LastName)))\n\tIFF(i_LastName IS NULL OR IS_SPACES(i_LastName) OR LENGTH(i_LastName) = 0, 'N/A', LTRIM(RTRIM(i_LastName))) AS v_LastName,\n\t-- *INF*: IIF(ISNULL(i_MiddleName) or IS_SPACES(i_MiddleName)  or LENGTH(i_MiddleName)=0,'N/A',LTRIM(RTRIM(i_MiddleName)))\n\tIFF(i_MiddleName IS NULL OR IS_SPACES(i_MiddleName) OR LENGTH(i_MiddleName) = 0, 'N/A', LTRIM(RTRIM(i_MiddleName))) AS v_MiddleName,\n\t-- *INF*: i_PolicyNumber||i_PolicyVersion\r\n\t-- \r\n\t-- --i_Id||i_PolicyVersion\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --i_CustomerNumber||i_PolicyNumber||i_PolicyVersion\n\ti_PolicyNumber || i_PolicyVersion AS o_contract_key,\n\t'INSURED' AS o_cust_role,\n\ti_CustomerNumber AS o_customer_number,\n\t-- *INF*: IIF(ISNULL(i_Name) or IS_SPACES(i_Name)  or LENGTH(i_Name)=0,'N/A',LTRIM(RTRIM(i_Name)))\n\tIFF(i_Name IS NULL OR IS_SPACES(i_Name) OR LENGTH(i_Name) = 0, 'N/A', LTRIM(RTRIM(i_Name))) AS o_name,\n\t-- *INF*: IIF(ISNULL(i_FederalEmployeeIDNumber) or IS_SPACES(i_FederalEmployeeIDNumber)  or LENGTH(i_FederalEmployeeIDNumber)=0,'N/A',LTRIM(RTRIM(i_FederalEmployeeIDNumber)))\n\tIFF(i_FederalEmployeeIDNumber IS NULL OR IS_SPACES(i_FederalEmployeeIDNumber) OR LENGTH(i_FederalEmployeeIDNumber) = 0, 'N/A', LTRIM(RTRIM(i_FederalEmployeeIDNumber))) AS o_fed_tax_id,\n\t-- *INF*: IIF(ISNULL(i_DoingBusinessAs) or IS_SPACES(i_DoingBusinessAs)  or LENGTH(i_DoingBusinessAs)=0,'N/A',LTRIM(RTRIM(i_DoingBusinessAs)))\n\tIFF(i_DoingBusinessAs IS NULL OR IS_SPACES(i_DoingBusinessAs) OR LENGTH(i_DoingBusinessAs) = 0, 'N/A', LTRIM(RTRIM(i_DoingBusinessAs))) AS o_doing_bus_as,\n\t-- *INF*: IIF(ISNULL(i_SICCode) or IS_SPACES(i_SICCode)  or LENGTH(i_SICCode)=0,'N/A',LTRIM(RTRIM(i_SICCode)))\n\tIFF(i_SICCode IS NULL OR IS_SPACES(i_SICCode) OR LENGTH(i_SICCode) = 0, 'N/A', LTRIM(RTRIM(i_SICCode))) AS o_sic_code,\n\t-- *INF*: IIF(ISNULL(i_NAICSCode) or IS_SPACES(i_NAICSCode)  or LENGTH(i_NAICSCode)=0,'N/A',LTRIM(RTRIM(i_NAICSCode)))\n\tIFF(i_NAICSCode IS NULL OR IS_SPACES(i_NAICSCode) OR LENGTH(i_NAICSCode) = 0, 'N/A', LTRIM(RTRIM(i_NAICSCode))) AS o_naics_code,\n\t-- *INF*: IIF(ISNULL(i_EntityType) or IS_SPACES(i_EntityType)  or LENGTH(i_EntityType)=0,'N/A',LTRIM(RTRIM(i_EntityType)))\n\tIFF(i_EntityType IS NULL OR IS_SPACES(i_EntityType) OR LENGTH(i_EntityType) = 0, 'N/A', LTRIM(RTRIM(i_EntityType))) AS o_lgl_ent_code,\n\t-1 AS o_yr_in_bus,\n\tv_ph_num_full_first || v_ph_num_full AS o_ph_num_full,\n\t-- *INF*: IIF(v_ph_num_full='N/A' or LENGTH(v_ph_num_full)  !=  10,'N/A',v_ph_num_full_first || SUBSTR(v_ph_num_full,1,3))\n\tIFF(v_ph_num_full = 'N/A' OR LENGTH(v_ph_num_full) != 10, 'N/A', v_ph_num_full_first || SUBSTR(v_ph_num_full, 1, 3)) AS o_ph_area_code,\n\t-- *INF*: IIF(v_ph_num_full='N/A' or LENGTH(v_ph_num_full)  !=  10,'N/A',SUBSTR(v_ph_num_full,4,3))\n\tIFF(v_ph_num_full = 'N/A' OR LENGTH(v_ph_num_full) != 10, 'N/A', SUBSTR(v_ph_num_full, 4, 3)) AS o_ph_exchange,\n\t-- *INF*: IIF(v_ph_num_full='N/A' or LENGTH(v_ph_num_full) != 10,'N/A',SUBSTR(v_ph_num_full,7,4))\n\tIFF(v_ph_num_full = 'N/A' OR LENGTH(v_ph_num_full) != 10, 'N/A', SUBSTR(v_ph_num_full, 7, 4)) AS o_ph_num,\n\t-- *INF*: IIF(ISNULL(i_PhoneExtension) or IS_SPACES(i_PhoneExtension)  or LENGTH(i_PhoneExtension)=0,'N/A',LTRIM(RTRIM(i_PhoneExtension)))\n\tIFF(i_PhoneExtension IS NULL OR IS_SPACES(i_PhoneExtension) OR LENGTH(i_PhoneExtension) = 0, 'N/A', LTRIM(RTRIM(i_PhoneExtension))) AS o_ph_extension,\n\t-- *INF*: IIF(ISNULL(i_Email) or IS_SPACES(i_Email)  or LENGTH(i_Email)=0,'N/A',LTRIM(RTRIM(i_Email)))\n\tIFF(i_Email IS NULL OR IS_SPACES(i_Email) OR LENGTH(i_Email) = 0, 'N/A', LTRIM(RTRIM(i_Email))) AS o_bus_email_addr,\n\t-- *INF*: IIF(v_LastName='N/A' or ISNULL(SUBSTR(v_LastName,1,4)),'N/A',SUBSTR(v_LastName,1,4))\n\tIFF(v_LastName = 'N/A' OR SUBSTR(v_LastName, 1, 4) IS NULL, 'N/A', SUBSTR(v_LastName, 1, 4)) AS o_sort_name,\n\tv_FirstName AS o_FirstName,\n\tv_LastName AS o_LastName,\n\tv_MiddleName AS o_MiddleName\n\tFROM AGG_RemoveDuplicates\n\tLEFT JOIN LKP_DCContactStaging\n\tON LKP_DCContactStaging.SessionId = AGG_RemoveDuplicates.SessionId AND LKP_DCContactStaging.PartyId = AGG_RemoveDuplicates.PartyId\n\tLEFT JOIN LKP_WBPartyStaging\n\tON LKP_WBPartyStaging.lkp_SessionId = AGG_RemoveDuplicates.SessionId\n),\nLKP_contract_customer AS (\n\tSELECT\n\tcontract_cust_id,\n\tcontract_cust_ak_id,\n\tcust_num,\n\tname,\n\tfed_tax_id,\n\tdoing_bus_as,\n\tsic_code,\n\tnaics_code,\n\tlgl_ent_code,\n\tyr_in_bus,\n\tph_num_full,\n\tph_area_code,\n\tph_exchange,\n\tph_num,\n\tph_extension,\n\tbus_email_addr,\n\tsort_name,\n\tsup_lgl_ent_code_id,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tcontract_key,\n\tcust_role\n\tFROM (\n\t\tSELECT \n\t\t\tcontract_cust_id,\n\t\t\tcontract_cust_ak_id,\n\t\t\tcust_num,\n\t\t\tname,\n\t\t\tfed_tax_id,\n\t\t\tdoing_bus_as,\n\t\t\tsic_code,\n\t\t\tnaics_code,\n\t\t\tlgl_ent_code,\n\t\t\tyr_in_bus,\n\t\t\tph_num_full,\n\t\t\tph_area_code,\n\t\t\tph_exchange,\n\t\t\tph_num,\n\t\t\tph_extension,\n\t\t\tbus_email_addr,\n\t\t\tsort_name,\n\t\t\tsup_lgl_ent_code_id,\n\t\t\tFirstName,\n\t\t\tLastName,\n\t\t\tMiddleName,\n\t\t\tcontract_key,\n\t\t\tcust_role\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer\n\t\tWHERE crrnt_snpsht_flag=1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\torder by contract_key,eff_from_date,created_date Desc\r\n\t\t--EDWP 4568\r\n\t\t/*and exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkDCTPolicy WCT\r\n\t\twhere WCT.PolicyGUId+ISNULL(WCT.PolicyVersionFormatted,'00')=contract_key)*/--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY contract_key,cust_role ORDER BY contract_cust_id) = 1\n),\nLKP_sup_legal_entity_code AS (\n\tSELECT\n\tsup_lgl_ent_code_id,\n\tlgl_ent_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_lgl_ent_code_id,\n\t\t\tlgl_ent_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_legal_entity_code\n\t\tWHERE crrnt_snpsht_flag=1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY lgl_ent_code ORDER BY sup_lgl_ent_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_contract_customer.contract_cust_id AS lkp_cust_id,\n\tLKP_contract_customer.contract_cust_ak_id AS lkp_cust_ak_id,\n\tLKP_contract_customer.cust_num AS lkp_cust_num,\n\tLKP_contract_customer.name AS lkp_name,\n\tLKP_contract_customer.fed_tax_id AS lkp_fed_tax_id,\n\tLKP_contract_customer.doing_bus_as AS lkp_doing_bus_as,\n\tLKP_contract_customer.sic_code AS lkp_sic_code,\n\tLKP_contract_customer.naics_code AS lkp_naics_code,\n\tLKP_contract_customer.lgl_ent_code AS lkp_lgl_ent_code,\n\tLKP_contract_customer.yr_in_bus AS lkp_yr_in_bus,\n\tLKP_contract_customer.ph_num_full AS lkp_ph_num_full,\n\tLKP_contract_customer.ph_area_code AS lkp_ph_area_code,\n\tLKP_contract_customer.ph_exchange AS lkp_ph_exchange,\n\tLKP_contract_customer.ph_num AS lkp_ph_num,\n\tLKP_contract_customer.ph_extension AS lkp_ph_extension,\n\tLKP_contract_customer.bus_email_addr AS lkp_bus_email_addr,\n\tLKP_contract_customer.sort_name AS lkp_sort_name,\n\tLKP_contract_customer.sup_lgl_ent_code_id AS lkp_sup_lgl_ent_code_id,\n\tLKP_contract_customer.FirstName AS lkp_FirstName,\n\tLKP_contract_customer.LastName AS lkp_LastName,\n\tLKP_contract_customer.MiddleName AS lkp_MiddleName,\n\tLKP_sup_legal_entity_code.sup_lgl_ent_code_id AS i_sup_lgl_ent_code_id,\n\tEXP_Values.o_contract_key AS contract_key,\n\tEXP_Values.o_cust_role AS cust_role,\n\tEXP_Values.o_customer_number AS customer_number,\n\tEXP_Values.o_name AS name,\n\tEXP_Values.o_fed_tax_id AS fed_tax_id,\n\tEXP_Values.o_doing_bus_as AS doing_bus_as,\n\tEXP_Values.o_sic_code AS sic_code,\n\tEXP_Values.o_naics_code AS naics_code,\n\tEXP_Values.o_lgl_ent_code AS lgl_ent_code,\n\tEXP_Values.o_yr_in_bus AS yr_in_bus,\n\tEXP_Values.o_ph_num_full AS ph_num_full,\n\tEXP_Values.o_ph_area_code AS ph_area_code,\n\tEXP_Values.o_ph_exchange AS ph_exchange,\n\tEXP_Values.o_ph_num AS ph_num,\n\tEXP_Values.o_ph_extension AS ph_extension,\n\tEXP_Values.o_bus_email_addr AS bus_email_addr,\n\tEXP_Values.o_sort_name AS sort_name,\n\t-- *INF*: IIF(\r\n\t--   ISNULL(i_sup_lgl_ent_code_id),\r\n\t--   -1,\r\n\t--   i_sup_lgl_ent_code_id\r\n\t-- )\n\tIFF(i_sup_lgl_ent_code_id IS NULL, - 1, i_sup_lgl_ent_code_id) AS v_lgl_ent_code_id,\n\t-- *INF*: IIF(ISNULL(lkp_cust_ak_id), 'NEW', IIF(\r\n\t-- lkp_name != name OR\r\n\t-- lkp_fed_tax_id != fed_tax_id OR\r\n\t-- lkp_doing_bus_as != doing_bus_as  OR\r\n\t-- lkp_sic_code != sic_code  OR\r\n\t-- lkp_naics_code != naics_code  OR\r\n\t-- lkp_lgl_ent_code != lgl_ent_code  OR\r\n\t-- lkp_yr_in_bus != yr_in_bus OR\r\n\t-- lkp_ph_num_full != ph_num_full OR\r\n\t-- lkp_ph_area_code != ph_area_code OR \r\n\t-- lkp_ph_exchange != ph_exchange OR\r\n\t-- lkp_ph_num != ph_num OR\r\n\t-- lkp_ph_extension != ph_extension OR\r\n\t-- lkp_bus_email_addr != bus_email_addr OR\r\n\t-- LTRIM(RTRIM(lkp_sort_name)) != sort_name OR\r\n\t-- lkp_sup_lgl_ent_code_id!=v_lgl_ent_code_id OR\r\n\t-- lkp_FirstName != FirstName OR\r\n\t-- lkp_LastName != LastName OR\r\n\t-- lkp_MiddleName != MiddleName,\r\n\t-- 'UPDATE', 'NOCHANGE'))\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- --IIFNewLookupRow=1,'NEW',IIFNewLookupRow=2,'UPDATE','NOCHANGE'\n\tIFF(lkp_cust_ak_id IS NULL, 'NEW', IFF(lkp_name != name OR lkp_fed_tax_id != fed_tax_id OR lkp_doing_bus_as != doing_bus_as OR lkp_sic_code != sic_code OR lkp_naics_code != naics_code OR lkp_lgl_ent_code != lgl_ent_code OR lkp_yr_in_bus != yr_in_bus OR lkp_ph_num_full != ph_num_full OR lkp_ph_area_code != ph_area_code OR lkp_ph_exchange != ph_exchange OR lkp_ph_num != ph_num OR lkp_ph_extension != ph_extension OR lkp_bus_email_addr != bus_email_addr OR LTRIM(RTRIM(lkp_sort_name)) != sort_name OR lkp_sup_lgl_ent_code_id != v_lgl_ent_code_id OR lkp_FirstName != FirstName OR lkp_LastName != LastName OR lkp_MiddleName != MiddleName, 'UPDATE', 'NOCHANGE')) AS o_changed_flag,\n\tv_lgl_ent_code_id AS o_lgl_ent_code_id,\n\tEXP_Values.o_FirstName AS FirstName,\n\tEXP_Values.o_LastName AS LastName,\n\tEXP_Values.o_MiddleName AS MiddleName\n\tFROM EXP_Values\n\tLEFT JOIN LKP_contract_customer\n\tON LKP_contract_customer.contract_key = EXP_Values.o_contract_key AND LKP_contract_customer.cust_role = EXP_Values.o_cust_role\n\tLEFT JOIN LKP_sup_legal_entity_code\n\tON LKP_sup_legal_entity_code.lgl_ent_code = EXP_Values.o_lgl_ent_code\n),\nFIL_insert AS (\n\tSELECT\n\tlkp_cust_ak_id AS cust_ak_id, \n\tcontract_key, \n\tcust_role, \n\tcustomer_number, \n\tname, \n\tfed_tax_id, \n\tdoing_bus_as, \n\tsic_code, \n\tnaics_code, \n\tlgl_ent_code, \n\tyr_in_bus, \n\tph_num_full, \n\tph_area_code, \n\tph_exchange, \n\tph_num, \n\tph_extension, \n\tbus_email_addr, \n\tsort_name AS pif_sort_name, \n\to_changed_flag AS changed_flag, \n\to_lgl_ent_code_id, \n\tFirstName, \n\tLastName, \n\tMiddleName\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW'  OR changed_flag='UPDATE'\n),\nSEQ_customer AS (\n\tCREATE SEQUENCE SEQ_customer\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_customer_ak_id AS (\n\tSELECT\n\tSEQ_customer.NEXTVAL AS i_NEXTVAL,\n\tcust_ak_id AS i_cust_ak_id,\n\tcontract_key,\n\tcust_role,\n\tcustomer_number,\n\tname,\n\tfed_tax_id,\n\tdoing_bus_as,\n\tsic_code,\n\tnaics_code,\n\tlgl_ent_code,\n\tyr_in_bus,\n\tph_num_full,\n\tph_area_code,\n\tph_exchange,\n\tph_num,\n\tph_extension,\n\tbus_email_addr,\n\tpif_sort_name,\n\tchanged_flag AS i_changed_flag,\n\to_lgl_ent_code_id AS lgl_ent_code_id,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\t1 AS o_crrnt_snpsht_flag,\n\t-- *INF*: IIF(ISNULL(i_cust_ak_id),i_NEXTVAL,i_cust_ak_id)\n\tIFF(i_cust_ak_id IS NULL, i_NEXTVAL, i_cust_ak_id) AS o_cust_ak_id,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_audit_id,\n\t-- *INF*: IIF(i_changed_flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),SYSDATE)\n\tIFF(i_changed_flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS o_eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS o_eff_to_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_source_sys_id,\n\tSYSDATE AS o_created_date,\n\tSYSDATE AS o_modified_date\n\tFROM FIL_insert\n),\nTGT_contract_customer_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, contract_cust_ak_id, cust_num, contract_key, cust_role, name, fed_tax_id, doing_bus_as, sic_code, naics_code, lgl_ent_code, yr_in_bus, ph_num_full, ph_area_code, ph_exchange, ph_num, ph_extension, bus_email_addr, sort_name, sup_lgl_ent_code_id, FirstName, LastName, MiddleName)\n\tSELECT \n\to_crrnt_snpsht_flag AS CRRNT_SNPSHT_FLAG, \n\to_audit_id AS AUDIT_ID, \n\to_eff_from_date AS EFF_FROM_DATE, \n\to_eff_to_date AS EFF_TO_DATE, \n\to_source_sys_id AS SOURCE_SYS_ID, \n\to_created_date AS CREATED_DATE, \n\to_modified_date AS MODIFIED_DATE, \n\to_cust_ak_id AS CONTRACT_CUST_AK_ID, \n\tcustomer_number AS CUST_NUM, \n\tCONTRACT_KEY, \n\tCUST_ROLE, \n\tNAME, \n\tFED_TAX_ID, \n\tDOING_BUS_AS, \n\tSIC_CODE, \n\tNAICS_CODE, \n\tLGL_ENT_CODE, \n\tYR_IN_BUS, \n\tPH_NUM_FULL, \n\tPH_AREA_CODE, \n\tPH_EXCHANGE, \n\tPH_NUM, \n\tPH_EXTENSION, \n\tBUS_EMAIL_ADDR, \n\tpif_sort_name AS SORT_NAME, \n\tlgl_ent_code_id AS SUP_LGL_ENT_CODE_ID, \n\tFIRSTNAME, \n\tLASTNAME, \n\tMIDDLENAME\n\tFROM EXP_customer_ak_id\n),\nSQ_contract_customer AS (\n\tSELECT \r\n\t\tcontract_cust_id,\r\n\t\teff_from_date,\r\n\t\teff_to_date,\r\n\t\tcontract_cust_ak_id \r\n\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer a\r\n\tWHERE  exists \r\n\t\t   (SELECT 1 FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer b\r\n\t           WHERE crrnt_snpsht_flag = 1 AND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND a.contract_cust_ak_id=b.contract_cust_ak_id GROUP BY contract_cust_ak_id  HAVING count(*) > 1)\r\n\tAND source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tORDER BY  contract_cust_ak_id , eff_from_date  DESC\r\n\t\r\n\t--IN Subquery exists to pick AK ID column values that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag \r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tcontract_cust_id AS i_cust_id,\n\teff_from_date AS i_eff_from_date,\n\teff_to_date AS i_orig_eff_to_date,\n\tcontract_cust_ak_id AS i_cust_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_cust_ak_id = v_prev_cust_ak_id  ,\r\n\t-- ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),i_orig_eff_to_date)\n\tDECODE(TRUE,\n\ti_cust_ak_id = v_prev_cust_ak_id, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\ti_orig_eff_to_date) AS v_eff_to_date,\n\ti_cust_ak_id AS v_prev_cust_ak_id,\n\ti_eff_from_date AS v_prev_eff_from_date,\n\ti_orig_eff_to_date AS o_orig_eff_to_date,\n\ti_cust_id AS o_cust_id,\n\t0 AS o_crrnt_snpsht_flag,\n\tv_eff_to_date AS o_eff_to_date,\n\tSYSDATE AS o_modified_date\n\tFROM SQ_contract_customer\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\to_orig_eff_to_date AS i_orig_eff_to_date, \n\to_cust_id AS cust_id, \n\to_crrnt_snpsht_flag AS crrnt_snpsht_flag, \n\to_eff_to_date AS eff_to_date, \n\to_modified_date AS modified_date\n\tFROM EXP_Lag_eff_from_date\n\tWHERE i_orig_eff_to_date != eff_to_date\n),\nUPD_customer AS (\n\tSELECT\n\tcust_id, \n\tcrrnt_snpsht_flag, \n\teff_to_date, \n\tmodified_date\n\tFROM FIL_FirstRowInAKGroup\n),\nTGT_contract_customer_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.contract_customer AS T\n\tUSING UPD_customer AS S\n\tON T.contract_cust_id = S.cust_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905491"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7603267"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/29/2023 22:44:58"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 23:03:38"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "DCT"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Stage"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}