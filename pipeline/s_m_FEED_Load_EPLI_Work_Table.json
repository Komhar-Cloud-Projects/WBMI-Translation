{
    "name": "s_m_FEED_Load_EPLI_Work_Table",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_EPLI_Work_Table",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_EPLI_WorkTable_DCT AS (\n\tDECLARE @Pol_Inforce_Date datetime, @Pol_Cancelled_date_start datetime, @Pol_Cancelled_date_end datetime \r\n\t\r\n\t\r\n\tSET @Pol_Inforce_Date =DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE()) + @{pipeline().parameters.NO_OF_MONTHS},0))\r\n\tSET @Pol_Cancelled_date_start = DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2 + @{pipeline().parameters.NO_OF_MONTHS}, 0)\r\n\tSET @Pol_Cancelled_date_end = DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-1 + @{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\r\n\t\r\n\tSELECT DISTINCT rc.ClassCode\r\n\t\t,rc.coveragetype\r\n\t\t,CASE \r\n\t\t\tWHEN rc.RatingCoverageCancellationDate BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\tTHEN 'C'\r\n\t\t\tWHEN rc.RatingCoverageCancellationDate < @Pol_Cancelled_date_start\r\n\t\t\t\tAND rc.EffectiveDate < =@Pol_Inforce_Date\r\n\t\t\t\tAND rc.EffectiveDate > @Pol_Cancelled_date_end\r\n\t\t\t\tTHEN 'C'\r\n\t\t\tELSE pol.policystatuscode\r\n\t\t\tEND \r\n\t\t,CASE \r\n\t\t\tWHEN rc.RatingCoverageCancellationDate BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\tTHEN 'Cancelled'\r\n\t\t\tWHEN rc.RatingCoverageCancellationDate < @Pol_Cancelled_date_start\r\n\t\t\t\tAND rc.EffectiveDate <= @Pol_Inforce_Date\r\n\t\t\t\tAND rc.EffectiveDate > @Pol_Cancelled_date_end\r\n\t\t\t\tTHEN 'Cancelled'\r\n\t\t\tELSE pol.PolicyStatusDescription\r\n\t\t\tEND\r\n\t\t,cc.cust_num\r\n\t\t,pol.pol_key\r\n\t\t,cc.NAME\r\n\t\t,cc.doing_bus_as\r\n\t\t,pt.PremiumTransactionEffectiveDate\r\n\t\t,pt.PremiumTransactionExpirationDate\r\n\t\t,pol.pol_cancellation_date\r\n\t\t,pol.renl_code\r\n\t\t,pol.pol_num\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer cc\r\n\tJOIN (\r\n\t\tSELECT *\r\n\t\tFROM (\r\n\t\t\tSELECT pol_mod\r\n\t\t\t\t,eff_from_date\r\n\t\t\t\t,eff_to_date\r\n\t\t\t\t,pol_num\r\n\t\t\t\t,pol_key\r\n\t\t\t\t,SUBSTRING(pcsd.policystatusdescription, 0, 2) policystatuscode\r\n\t\t\t\t,pcsd.PolicyStatusDescription\r\n\t\t\t\t,pol_eff_date\r\n\t\t\t\t,prior_pol_key\r\n\t\t\t\t,pol_exp_date\r\n\t\t\t\t,pol_cancellation_date\r\n\t\t\t\t,pol.renl_code\r\n\t\t\t\t,pol.contract_cust_ak_id\r\n\t\t\t\t,crrnt_snpsht_flag\r\n\t\t\t\t,pol_ak_id\r\n\t\t\t\t,source_sys_id\r\n\t\t\t\t,rank() OVER (\r\n\t\t\t\t\tPARTITION BY pol.pol_key ORDER BY pcsd.rundate DESC\r\n\t\t\t\t\t) rnk\r\n\t\t\tFROM v2.policy pol\r\n\t\t\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCurrentStatusDim pcsd ON pcsd.EDWPolicyAKId = pol.pol_ak_id --and pol.pol_num in ('0054088')\r\n\t\t\tWHERE pol.crrnt_snpsht_flag = 1\r\n\t\t\t\tAND pol_eff_date != pol_cancellation_date\r\n\t\t\t\tAND pcsd.PolicyStatusDescription IN (\r\n\t\t\t\t\t'Inforce'\r\n\t\t\t\t\t,'Not Inforce'\r\n\t\t\t\t\t,'Cancelled'\r\n\t\t\t\t\t)\r\n\t\t\t\tAND (\r\n\t\t\t\t\t@Pol_Inforce_Date BETWEEN pol_eff_date AND pol_exp_date\r\n\t\t\t\t\tAND pol_cancellation_date > @Pol_Inforce_Date\r\n\t\t\t\t\tOR (\r\n\t\t\t\t\t\tpol_exp_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\t\tAND pol_cancellation_date > @Pol_Inforce_Date\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tOR (pol_cancellation_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end)\r\n\t\t\t\t\tOR (\r\n\t\t\t\t\t\tpol_cancellation_date < @Pol_Cancelled_date_start\r\n\t\t\t\t\t\tAND eff_from_date <= @Pol_Inforce_Date\r\n\t\t\t\t\t\tAND eff_from_date > @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t) \r\n\t\t\t\t\t)\r\n\t\t\t) poli\r\n\t\tWHERE poli.rnk = 1\r\n\t\t) pol ON pol.contract_cust_ak_id = cc.contract_cust_ak_id\r\n\t\tAND cc.crrnt_snpsht_flag = 1\r\n\t\tAND pol.crrnt_snpsht_flag = 1\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.Risklocation rl ON rl.policyAKId = pol.pol_ak_id\r\n\t\tAND rl.CurrentSnapshotFlag = 1\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage pc ON pc.RiskLocationAKID = rl.RiskLocationAKID\r\n\t\tAND pc.CurrentSnapshotFlag = 1\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc ON rc.PolicyCoverageAKID = pc.PolicyCoverageAKID\r\n\t\tAND rc.CurrentSnapshotFlag = 1\r\n\tJOIN PremiumTransaction pt ON pt.RatingCoverageAKID = rc.RatingCoverageAKID\r\n\t\tAND pt.EffectiveDate = rc.EffectiveDate\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness ir ON rc.InsuranceReferenceLineOfBusinessAKID = ir.InsuranceReferenceLineOfBusinessAKID\r\n\tWHERE (\r\n\t\t\t(\r\n\t\t\t\tpc.InsuranceLine = 'EmploymentPracticesLiab'\r\n\t\t\t\tAND rc.coveragetype = 'EmploymentPracticesLiability'\r\n\t\t\t\t)\r\n\t\t\tOR (\r\n\t\t\t\t(\r\n\t\t\t\t\trc.coveragetype LIKE 'WB516%'\r\n\t\t\t\t\tOR rc.coveragetype = 'NS0279'\r\n\t\t\t\t\tOR rc.coveragetype = 'NS0313'\r\n\t\t\t\t\t)\r\n\t\t\t\tAND (\r\n\t\t\t\t\trc.ClassCode = '04033'\r\n\t\t\t\t\tOR rc.ClassCode = '7070'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\tOR (\r\n\t\t\t\tpc.InsuranceLine = 'Businessowners'\r\n\t\t\t\tAND rc.CoverageType = 'EmploymentPracticesLiability'\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\tAND (\r\n\t\t\t(\r\n\t\t\t\tpol.PolicyStatusDescription = 'Inforce'\r\n\t\t\t\tAND rc.RatingCoverageEffectiveDate != rc.RatingCoverageCancellationDate\r\n\t\t\t\tAND (\r\n\t\t\t\t\trc.RatingCoverageCancellationDate BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\tOR (rc.RatingCoverageCancellationDate < @Pol_Cancelled_date_start\r\n\t\t\t\t\tAND rc.EffectiveDate <= @Pol_Inforce_Date\r\n\t\t\t\t\tAND rc.EffectiveDate > @Pol_Cancelled_date_end)\r\n\t\t\t\t\tOR rc.RatingCoverageCancellationDate > @Pol_Inforce_Date\r\n\t\t\t\t\t)\r\n\t\t\t\t--AND pt.PremiumTransactionEffectiveDate <= @Pol_Inforce_Date permanent comment\r\n\t\t\t\t)\r\n\t\t\tOR (\r\n\t\t\t\tpol.PolicyStatusDescription = 'Not Inforce'\r\n\t\t\t\tAND pol.pol_exp_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t             AND rc.RatingCoverageCancellationDate >= @Pol_Cancelled_date_start\r\n\t\t\t\t)\r\n\t\t\tOR (\r\n\t\t\t\tpol.PolicyStatusDescription = 'Cancelled'\r\n\t\t\t\tAND pt.PremiumTransactionEffectiveDate <= @Pol_Inforce_Date\r\n\t\t\t\tAND pol.pol_cancellation_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t                   AND rc.RatingCoverageCancellationDate >= @Pol_Cancelled_date_start\r\n\t\t\t\t)\r\n\t\t\tOR (\r\n\t\t\t\tpol.PolicyStatusDescription = 'Cancelled'\r\n\t\t\t\tAND pol.eff_from_date > @Pol_Cancelled_date_end\r\n\t\t\t\tAND pol.eff_from_date <= @Pol_Inforce_Date\r\n\t\t\t\tAND pol.pol_cancellation_date < @Pol_Cancelled_date_start\r\n\t\t\t\t)\r\n\t\t\t)\r\n\tORDER BY 6,4\n),\nEXP_GetValues AS (\n\tSELECT\n\tClassCode,\n\t-- *INF*: SUBSTR(ClassCode,1,3)\n\tSUBSTR(ClassCode, 1, 3) AS o_ClassCode,\n\tInsuranceLine,\n\tStandardPolicyStatusCode,\n\tStandardPolicyStatusCodeDescription,\n\tcust_num,\n\tpol_key,\n\tname,\n\tdoing_bus_as,\n\tEffectiveDate,\n\tExpirationDate,\n\t-- *INF*: -- TRUNC(@{pipeline().parameters.EXTRACTDATE},'D')\r\n\t-- \r\n\t-- LAST_DAY(Add_to_date(@{pipeline().parameters.EXTRACTDATE}, 'MONTH' , -1))\n\tLAST_DAY(DATEADD(MONTH,- 1,@{pipeline().parameters.EXTRACTDATE})) AS o_EXTRACT_DATE,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SOURCE_SYSTEM_ID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AUDIT_ID,\n\tpol_cancellation_date AS Pol_Cancellation_date,\n\trenl_code AS Renl_code,\n\tpol_num\n\tFROM SQ_EPLI_WorkTable_DCT\n),\nAGG_KeyFeilds AS (\n\tSELECT\n\to_ClassCode,\n\tInsuranceLine,\n\tStandardPolicyStatusCode,\n\tStandardPolicyStatusCodeDescription,\n\tcust_num,\n\tpol_num,\n\tpol_key,\n\tname,\n\tdoing_bus_as,\n\tEffectiveDate,\n\tExpirationDate,\n\to_EXTRACT_DATE,\n\to_SOURCE_SYSTEM_ID,\n\to_AUDIT_ID,\n\tPol_Cancellation_date,\n\tRenl_code\n\tFROM EXP_GetValues\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLine, cust_num, pol_num ORDER BY NULL) = 1\n),\nlkp_Prior_Rewrite_pol_check AS (\n\tSELECT\n\tPrior_pol_key,\n\tpol_key,\n\tpol_key_in\n\tFROM (\n\t\tDECLARE @Pol_Inforce_Date datetime, @Pol_Cancelled_date_start datetime, @Pol_Cancelled_date_end datetime \r\n\t\t\r\n\t\t\r\n\t\tSET @Pol_Inforce_Date =DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE()) + @{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\tSET @Pol_Cancelled_date_start = DATEADD(month, DATEDIFF(month, 0, GETDATE()) -2 + @{pipeline().parameters.NO_OF_MONTHS}, 0)\r\n\t\tSET @Pol_Cancelled_date_end = DATEADD(s,-1,DATEADD(mm, DATEDIFF(m,0,GETDATE())-1 + @{pipeline().parameters.NO_OF_MONTHS},0))\r\n\t\t\r\n\t\tSELECT A.Prior_Pol_key AS Prior_pol_key\r\n\t\t\t,A.pol_key AS pol_key\r\n\t\tFROM (\r\n\t\t\tSELECT DISTINCT P.Pol_key Prior_Pol_key\r\n\t\t\t\t,A.pol_key\r\n\t\t\t\t,PriorExpirationDate\r\n\t\t\t\t,Row_number() OVER (\r\n\t\t\t\t\tPARTITION BY RC.CoverageGUID ORDER BY RC.EffectiveDate\r\n\t\t\t\t\t) Record_Count\r\n\t\t\t\t,A.Rewrite_Record_Count\r\n\t\t\tFROM v2.policy P\r\n\t\t\tINNER JOIN RiskLocation R ON P.pol_ak_id = R.PolicyAKID\r\n\t\t\t\tAND P.source_sys_id = 'DCT'\r\n\t\t\t\tAND R.SourceSystemID = 'DCT'\r\n\t\t\t\tAND P.crrnt_snpsht_flag = 1\r\n\t\t\t\tAND R.CurrentSnapshotFlag = 1\r\n\t\t\tINNER JOIN Policycoverage PC ON R.RiskLocationAKID = PC.RiskLocationAKID\r\n\t\t\t\tAND PC.SourceSystemID = 'DCT'\r\n\t\t\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\t\tINNER JOIN RatingCoverage RC ON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID\r\n\t\t\tINNER JOIN PremiumTransaction PT ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\t\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\t\t\t\tAND PT.SourceSystemID = 'DCT'\r\n\t\t\tINNER JOIN (\r\n\t\t\t\tSELECT DISTINCT P.Pol_key\r\n\t\t\t\t\t,P.pol_ak_id\r\n\t\t\t\t\t,RC.EffectiveDate\r\n\t\t\t\t\t,dateadd(S, - 1, RC.EffectiveDate) PriorExpirationDate\r\n\t\t\t\t\t,RC.CoverageGUID\r\n\t\t\t\t\t,PT.PremiumTransactionCode\r\n\t\t\t\t\t,Row_number() OVER (\r\n\t\t\t\t\t\tPARTITION BY RC.CoverageGUID ORDER BY RC.EffectiveDate\r\n\t\t\t\t\t\t) Rewrite_Record_Count\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT *\r\n\t\t\t\t\tFROM (\r\n\t\t\t\t\t\tSELECT pol_mod\r\n\t\t\t\t\t\t\t,eff_from_date\r\n\t\t\t\t\t\t\t,eff_to_date\r\n\t\t\t\t\t\t\t,pol_num\r\n\t\t\t\t\t\t\t,pol_key\r\n\t\t\t\t\t\t\t,SUBSTRING(pcsd.policystatusdescription, 0, 2) policystatuscode\r\n\t\t\t\t\t\t\t,pcsd.PolicyStatusDescription\r\n\t\t\t\t\t\t\t,pol_eff_date\r\n\t\t\t\t\t\t\t,prior_pol_key\r\n\t\t\t\t\t\t\t,pol_exp_date\r\n\t\t\t\t\t\t\t,pol_cancellation_date\r\n\t\t\t\t\t\t\t,pol.renl_code\r\n\t\t\t\t\t\t\t,pol.contract_cust_ak_id\r\n\t\t\t\t\t\t\t,crrnt_snpsht_flag\r\n\t\t\t\t\t\t\t,pol_ak_id\r\n\t\t\t\t\t\t\t,source_sys_id\r\n\t\t\t\t\t\t\t,rank() OVER (\r\n\t\t\t\t\t\t\t\tPARTITION BY pol.pol_key ORDER BY pcsd.rundate DESC\r\n\t\t\t\t\t\t\t\t) rnk\r\n\t\t\t\t\t\tFROM v2.policy pol\r\n\t\t\t\t\t\tJOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCurrentStatusDim pcsd ON pcsd.EDWPolicyAKId = pol.pol_ak_id\r\n\t\t\t\t\t\tWHERE pol.crrnt_snpsht_flag = 1\r\n\t\t\t\t\t\t\tAND pol_eff_date != pol_cancellation_date\r\n\t\t\t\t\t\t\tAND pcsd.PolicyStatusDescription IN (\r\n\t\t\t\t\t\t\t\t'Inforce'\r\n\t\t\t\t\t\t\t\t,'Not Inforce'\r\n\t\t\t\t\t\t\t\t,'Cancelled'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\t\t@Pol_Inforce_Date BETWEEN pol_eff_date AND pol_exp_date\r\n\t\t\t\t\t\t\t\tAND pol_cancellation_date > @Pol_Inforce_Date\r\n\t\t\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\t\t\tpol_exp_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t\t\tAND pol_cancellation_date > @Pol_Inforce_Date\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tOR (pol_cancellation_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end)\r\n\t\t\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\t\t\tpol_cancellation_date < @Pol_Cancelled_date_start\r\n\t\t\t\t\t\t\t\t\tAND pol_eff_date < = @Pol_Inforce_Date\r\n\t\t\t\t\t\t\t\t\tAND pol_eff_date > @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) poli\r\n\t\t\t\t\tWHERE poli.rnk = 1\r\n\t\t\t\t\t) P\r\n\t\t\t\tINNER JOIN RiskLocation R ON P.pol_ak_id = R.PolicyAKID\r\n\t\t\t\t\tAND P.source_sys_id = 'DCT'\r\n\t\t\t\t\tAND R.SourceSystemID = 'DCT'\r\n\t\t\t\t\tAND P.crrnt_snpsht_flag = 1\r\n\t\t\t\t\tAND R.CurrentSnapshotFlag = 1\r\n\t\t\t\tINNER JOIN Policycoverage PC ON R.RiskLocationAKID = PC.RiskLocationAKID\r\n\t\t\t\t\tAND PC.SourceSystemID = 'DCT'\r\n\t\t\t\t\tAND PC.CurrentSnapshotFlag = 1\r\n\t\t\t\tINNER JOIN RatingCoverage RC ON PC.PolicyCoverageAKID = RC.PolicyCoverageAKID\r\n\t\t\t\t\tAND RC.CurrentSnapshotFlag = 1\r\n\t\t\t\tINNER JOIN PremiumTransaction PT ON RC.RatingCoverageAKID = PT.RatingCoverageAKId\r\n\t\t\t\t\tAND RC.EffectiveDate = PT.EffectiveDate\r\n\t\t\t\t\tAND PT.SourceSystemID = 'DCT'\r\n\t\t\t\tWHERE PT.OffsetOnsetCode = 'N/A'\r\n\t\t\t\t\tAND (\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tpc.InsuranceLine = 'EmploymentPracticesLiab'\r\n\t\t\t\t\t\t\tAND rc.coveragetype = 'EmploymentPracticesLiability'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\trc.coveragetype LIKE 'WB516%'\r\n\t\t\t\t\t\t\t\tOR rc.coveragetype = 'NS0279'\r\n\t\t\t\t\t\t\t\tOR rc.coveragetype = 'NS0313'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\t\trc.ClassCode = '04033'\r\n\t\t\t\t\t\t\t\tOR rc.ClassCode = '7070'\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\tpc.InsuranceLine = 'Businessowners'\r\n\t\t\t\t\t\t\tAND rc.CoverageType = 'EmploymentPracticesLiability'\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\tAND (\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\tp.PolicyStatusDescription = 'Inforce'\r\n\t\t\t\t\t\t\tAND RC.RatingCoverageEffectiveDate != RC.RatingCoverageCancellationDate\r\n\t\t\t\t\t\t\tAND (\r\n\t\t\t\t\t\t\t\trc.RatingCoverageCancellationDate BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\t\t\trc.RatingCoverageCancellationDate < @Pol_Cancelled_date_start\r\n\t\t\t\t\t\t\t\t\tAND rc.EffectiveDate <= @Pol_Inforce_Date\r\n\t\t\t\t\t\t\t\t\tAND rc.EffectiveDate > @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tOR rc.RatingCoverageCancellationDate > @Pol_Inforce_Date\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\tp.PolicyStatusDescription = 'Not Inforce'\r\n\t\t\t\t\t\t\tAND p.pol_exp_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\tp.PolicyStatusDescription = 'Cancelled'\r\n\t\t\t\t\t\t\tAND pt.PremiumTransactionEffectiveDate < = @Pol_Inforce_Date\r\n\t\t\t\t\t\t\tAND p.pol_cancellation_date BETWEEN @Pol_Cancelled_date_start AND @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\tOR (\r\n\t\t\t\t\t\t\tp.PolicyStatusDescription = 'Cancelled'\r\n\t\t\t\t\t\t\tAND p.eff_from_date > @Pol_Cancelled_date_end\r\n\t\t\t\t\t\t\tAND p.eff_from_date <= @Pol_Inforce_Date\r\n\t\t\t\t\t\t\tAND p.pol_cancellation_date < @Pol_Cancelled_date_start\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t) A ON RC.CoverageGUID = A.CoverageGUID\r\n\t\t\t--and RC.ExpirationDate=PriorExpirationDate\r\n\t\t\tWHERE A.PremiumTransactionCode = 'Rewrite'\r\n\t\t\t) A\r\n\t\tWHERE Rewrite_Record_Count - 1 = Record_Count--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Prior_pol_key ORDER BY Prior_pol_key) = 1\n),\nFIL_ExcessRecords AS (\n\tSELECT\n\tAGG_KeyFeilds.o_ClassCode AS ClassCode, \n\tAGG_KeyFeilds.InsuranceLine, \n\tAGG_KeyFeilds.StandardPolicyStatusCode, \n\tAGG_KeyFeilds.StandardPolicyStatusCodeDescription, \n\tAGG_KeyFeilds.cust_num, \n\tAGG_KeyFeilds.pol_key, \n\tAGG_KeyFeilds.name, \n\tAGG_KeyFeilds.doing_bus_as, \n\tAGG_KeyFeilds.EffectiveDate, \n\tAGG_KeyFeilds.ExpirationDate, \n\tAGG_KeyFeilds.FullTermPremium, \n\tAGG_KeyFeilds.o_EXTRACT_DATE AS EXTRACT_DATE, \n\tAGG_KeyFeilds.o_SOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID, \n\tAGG_KeyFeilds.o_AUDIT_ID AS AUDIT_ID, \n\tAGG_KeyFeilds.Pol_Cancellation_date, \n\tAGG_KeyFeilds.Renl_code, \n\tlkp_Prior_Rewrite_pol_check.Prior_pol_key\n\tFROM AGG_KeyFeilds\n\tLEFT JOIN lkp_Prior_Rewrite_pol_check\n\tON lkp_Prior_Rewrite_pol_check.Prior_pol_key = AGG_KeyFeilds.pol_key\n\tWHERE IIF(Prior_pol_key!=pol_key,true,false)\n),\nEXP_Changes AS (\n\tSELECT\n\tClassCode,\n\tInsuranceLine,\n\tStandardPolicyStatusCode AS i_StandardPolicyStatusCode,\n\tStandardPolicyStatusCodeDescription AS i_StandardPolicyStatusCodeDescription,\n\tcust_num,\n\tpol_key,\n\tname,\n\tdoing_bus_as,\n\tEffectiveDate,\n\tExpirationDate,\n\tEXTRACT_DATE,\n\tSOURCE_SYSTEM_ID,\n\tAUDIT_ID,\n\tPol_Cancellation_date,\n\tRenl_code\n\tFROM FIL_ExcessRecords\n),\nTGT_WorkIn2vateEPLI_Insert AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkIn2vateEPLI\n\t(ClassCode, InsuranceLineCode, PolStatusCode, PolStatusDescription, CustomerNumber, PolicyKey, Name, DoingBusinessAs, PremiumTransactionEffectiveDate, PremiumTransactionExpirationDate, ExtractDate, SourceSystemId, AuditID)\n\tSELECT \n\tCLASSCODE, \n\tInsuranceLine AS INSURANCELINECODE, \n\ti_StandardPolicyStatusCode AS POLSTATUSCODE, \n\ti_StandardPolicyStatusCodeDescription AS POLSTATUSDESCRIPTION, \n\tcust_num AS CUSTOMERNUMBER, \n\tpol_key AS POLICYKEY, \n\tname AS NAME, \n\tdoing_bus_as AS DOINGBUSINESSAS, \n\tEffectiveDate AS PREMIUMTRANSACTIONEFFECTIVEDATE, \n\tExpirationDate AS PREMIUMTRANSACTIONEXPIRATIONDATE, \n\tEXTRACT_DATE AS EXTRACTDATE, \n\tSOURCE_SYSTEM_ID AS SOURCESYSTEMID, \n\tAUDIT_ID AS AUDITID\n\tFROM EXP_Changes\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "NO_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "EXTRACTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}