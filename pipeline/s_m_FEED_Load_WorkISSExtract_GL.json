{
    "name": "s_m_FEED_Load_WorkISSExtract_GL",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WorkISSExtract_GL",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupPackageModificationAdjustmentGroup AS (\n\tSELECT\n\tPackageModificationAdjustmentGroupDescription,\n\tSourceSystemId,\n\tPackageModificationAdjustmentGroupCode\n\tFROM (\n\t\tSELECT \n\t\t\tPackageModificationAdjustmentGroupDescription,\n\t\t\tSourceSystemId,\n\t\t\tPackageModificationAdjustmentGroupCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupPackageModificationAdjustmentGroup\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SourceSystemId,PackageModificationAdjustmentGroupCode ORDER BY PackageModificationAdjustmentGroupDescription) = 1\n),\nLKP_Premium_RetroactiveDate_Policy AS (\n\tSELECT\n\tRetroactiveDate,\n\tPolicyKey\n\tFROM (\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\t--PMS\r\n\t\t\r\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\tSelect POL.POL_KEY AS PolicyKey ,MAX(T.RetroactiveDate) as RetroactiveDate\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC\r\n\t\ton PMF.EDWPremiumMasterCalculationPKID=PMC.PremiumMasterCalculationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\t\ton POL.pol_ak_id=RL.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\t\tand ISG.CurrentSnapshotFlag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\t\ton IRC.InsuranceReferenceCoverageDimId=PMF.InsuranceReferenceCoverageDimId\r\n\t\tINNER JOIN\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\r\n\t\twhere \r\n\t\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PMC.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\t\tAND (PMC.PremiumMasterTypeBureauCode IN ('GL') or (PMC.PremiumMasterTypeBureauCode = 'AL' AND IRC.CoverageCode = 'EPLI') \r\n\t\tor (PMC.PremiumMasterTypeBureauCode = 'BE' AND IRC.CoverageCode = 'EPLI'))\r\n\t\tAND PT.SourceSystemID='PMS'\r\n\t\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48') (Line removed - RFC 126190)\r\n\t\tAND PMC.PremiumMasterPremium <>0\r\n\t\tAND PMC.PremiumMasterPremiumType='D'\r\n\t\tAND PMC.PremiumMasterTransactionCode IN ('10','11','12','13','14','15','18','19','20','21','22','23','24','25','28','29','57','67') \r\n\t\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ('COL' , 'CWO')\r\n\t\tGROUP BY \r\n\t\tPOL.Pol_Key\r\n\t\t)CTE\r\n\t\t\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\t---DCT\r\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\tSelect POL.POL_KEY AS PolicyKey ,MAX(T.RetroactiveDate) as RetroactiveDate\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC\r\n\t\ton PMF.EDWPremiumMasterCalculationPKID=PMC.PremiumMasterCalculationId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\t\tand PMC.CurrentSnapshotFlag=1\r\n\t\tand PT.CurrentSnapshotFlag=1\r\n\t\tinner join  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton PT.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\tand PC.CurrentSnapshotFlag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tand RL.CurrentSnapshotFlag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\t\ton POL.pol_ak_id=RL.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\t\tand ISG.CurrentSnapshotFlag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\t\ton IRC.InsuranceReferenceCoverageDimId=PMF.InsuranceReferenceCoverageDimId\r\n\t\tINNER JOIN\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\r\n\t\twhere \r\n\t\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PMC.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\t\tAND \r\n\t\t(\r\n\t\t  ( PC.TypeBureauCode IN \r\n\t\t     (select type_bureau_code from sup_type_bureau_code where StandardTypeBureauCode = 'GL' AND crrnt_snpsht_flag=1) \r\n\t\t    and PMC.PremiumMasterSubLine !='317'  \r\n\t\t  ) \r\n\t\t or (PMC.PremiumMasterSubLine ='317') \r\n\t\t or PC.InsuranceLine in ('CommercialUmbrella','DirectorsAndOffsCondos','EmploymentPracticesLiab','ExcessLiability','SBOPGeneralLiability')\r\n\t\t or (PC.InsuranceLine='CommercialAuto' and RC.CoverageType='WB516CA')\r\n\t\t or (PC.InsuranceLine='BusinessOwners' and RC.CoverageType='EmploymentPracticesLiability')\r\n\t\t)\r\n\t\tAND PT.SourceSystemID='DCT'\r\n\t\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48') (Line removed - RFC 126190)\r\n\t\tAND PMC.PremiumMasterPremium <>0\r\n\t\tAND PMC.PremiumMasterPremiumType='D'\r\n\t\tAND PMC.PremiumMasterTransactionCode IN ('10','11','12','13','14','15','18','19','20','21','22','23','24','25','28','29','30','31','57','67') \r\n\t\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ('CWO', 'CWB')\r\n\t\tGROUP BY \r\n\t\tPOL.Pol_Key\r\n\t\t)CTE\r\n\t\t)CTE ---\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY RetroactiveDate) = 1\n),\nLKP_Loss_RetroactiveDate_Policy AS (\n\tSELECT\n\tRetroactiveDate,\n\tPolicyKey\n\tFROM (\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\t--PMS\r\n\t\t\r\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\tSelect POL.POL_KEY AS PolicyKey ,MAX(T.RetroactiveDate) as RetroactiveDate\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\t\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\t\tand LMC.crrnt_snpsht_flag=1\r\n\t\tand CT.crrnt_snpsht_flag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\t\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id\r\n\t\tAND CCD.crrnt_snpsht_flag = 1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton SC.StatisticalCoverageAKID=CCD.StatisticalCoverageAKID\r\n\t\tand SC.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\t\ton POL.pol_ak_id=PC.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1 AND PC.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\t\tand ISG.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\ton SC.StatisticalCoverageAKID = PT.StatisticalCoverageAKID\r\n\t\tINNER JOIN\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\r\n\t\twhere CCD.pms_type_bureau_code='GL'\r\n\t\tAND LMC.trans_kind_code='D'\r\n\t\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t\tAND (DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1) =DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\t\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48') (Line removed - RFC 126190)\r\n\t\tGROUP BY \r\n\t\tPOL.POL_KEY\r\n\t\t)CTE\r\n\t\t\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\t---DCT\r\n\t\t\r\n\t\tSELECT CTE.RetroactiveDate AS RetroactiveDate,CTE.PolicyKey as PolicyKey\r\n\t\tFROM\r\n\t\t(\r\n\t\tSelect POL.POL_KEY AS PolicyKey ,MAX(T.RetroactiveDate) as RetroactiveDate\r\n\t\tFROM \r\n\t\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\t\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\t\tand LMC.crrnt_snpsht_flag=1\r\n\t\tand CT.crrnt_snpsht_flag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\t\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id\r\n\t\tAND CCD.crrnt_snpsht_flag = 1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton CCD.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\t\tand (case when LMC.trans_offset_onset_ind='O' \r\n\t\tthen LMC.pms_acct_entered_date\r\n\t\telse DATEADD(D,1,LMC.loss_master_run_date)  end) between RC.EffectiveDate and RC.ExpirationDate \r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\t\tand PC.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\t\tON POL.pol_ak_id=PC.PolicyAKID\r\n\t\tand POL.crrnt_snpsht_flag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\t\tand RL.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\t\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\t\tand ISG.CurrentSnapshotFlag=1\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\ton RC.RatingCoverageAKID = PT.RatingCoverageAKID\r\n\t\tand RC.EffectiveDate=PT.EffectiveDate\r\n\t\tINNER JOIN\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\r\n\t\twhere \r\n\t\t(\r\n\t\t(CCD.pms_type_bureau_code IN ( select type_bureau_code from sup_type_bureau_code where StandardTypeBureauCode = 'GL'  AND crrnt_snpsht_flag=1) and LMC.sub_line_code !='317')\r\n\t\tor \r\n\t\t(LMC.sub_line_code='317')\r\n\t\tor PC.InsuranceLine in ('CommercialUmbrella','DirectorsAndOffsCondos','EmploymentPracticesLiab','ExcessLiability','SBOPGeneralLiability')\r\n\t\tor (PC.InsuranceLine='CommercialAuto' and RC.CoverageType='WB516CA')\r\n\t\tor (PC.InsuranceLine='BusinessOwners' and RC.CoverageType='EmploymentPracticesLiability')\r\n\t\t)\r\n\t\tAND LMC.trans_kind_code='D'\r\n\t\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\t\tAND (DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\t\t--AND RL.StateProvinceCode IN ('12','13','14','15','16','21','22','24','34','48') (Line removed - RFC 126190)\r\n\t\tGROUP BY \r\n\t\tPOL.POL_KEY\r\n\t\t)CTE\r\n\t\t)CTE---\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY RetroactiveDate) = 1\n),\nLKP_archGLDCOccpancyType AS (\n\tSELECT\n\tOccupancyType,\n\tPolicyNumber\n\tFROM (\n\t\tselect distinct dr.PolicyNumber as PolicyNumber,dcgl.OccupancyTypeMonoline as  OccupancyType\r\n\t\t from archDCGLOccupancyStaging dcgl \r\n\t\tinner join \r\n\t\t(Select distinct dp.PolicyNumber+PolicyVersionFormatted as PolicyNumber, dr.GL_RiskId,dr.SessionId,dl.type\r\n\t\t From  VWArchWorkDCTPolicy dp inner join   archDCLineStaging dl\r\n\t\t on\r\n\t\t dp.PolicyId=dl.PolicyId and\r\n\t\t  dp.SessionId=dl.SessionId \r\n\t\t inner join  archDCGLRiskStaging dr\r\n\t\t on dr.LineId=dl.LineId and\r\n\t\t dr.SessionId=dl.SessionId \r\n\t\t )  dr\r\n\t\t on dcgl.GL_RiskId=dr.GL_RiskId and\r\n\t\t dcgl.SessionId=dr.SessionId \r\n\t\t where dr.type='GeneralLiability' and dcgl.OccupancyTypeMonoline is not null\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber ORDER BY OccupancyType) = 1\n),\nLKP_archCFDCOccpancyType AS (\n\tSELECT\n\tOccupancyType,\n\tPolicyNumber\n\tFROM (\n\t\tselect distinct db.PolicyNumber as PolicyNumber,do.OccupancyType as OccupancyType From  ArchDCCFlocationStaging dloc \r\n\t\tinner join\r\n\t\t(SELECT distinct dp.PolicyNumber+PolicyVersionFormatted as PolicyNumber,db.CFlocationid as CFlocationid,\r\n\t\tdb.Sessionid as sessionid,db.CFBuildingId,dl.type as type,db.description as description\r\n\t\tFrom VWArchWorkDCTPolicy dp inner join \r\n\t\tdbo.archDCLineStaging dl\r\n\t\ton\r\n\t\tdp.PolicyId=dl.PolicyId \r\n\t\tand dp.Sessionid=dl.Sessionid\r\n\t\t inner join  dbo.ArchDCCFBuildingStage db\r\n\t\ton dl.LineId=db.LineId\r\n\t\tand dl.Sessionid=db.Sessionid\r\n\t\t) db\r\n\t\ton dloc.CF_locationid = db.CFlocationid AND  dloc.Sessionid=db.Sessionid\r\n\t\tINNER JOIN dbo.archDCCFRiskStaging dr\r\n\t\ton dr.CF_BuildingId=db.CFBuildingId\r\n\t\tand dr.Sessionid=db.Sessionid\r\n\t\t inner join dbo.archDCCFOccupancyStaging do\r\n\t\ton do.CF_RiskId=dr.CF_RiskId \r\n\t\tand do.Sessionid=dr.Sessionid  \r\n\t\twhere  db.Type in('CommercialAuto','CommercialUmbrella','Property')\r\n\t\tand dloc.description='Primary Location'\r\n\t\tand db.description like 'Building #1%' \r\n\t\tand do.OccupancyType is not null\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber ORDER BY OccupancyType) = 1\n),\nLKP_Policy_GL_PR AS (\n\tSELECT\n\tpol_key\n\tFROM (\n\t\tselect distinct a.pol_key  as pol_key from\r\n\t\t(\r\n\t\tselect   p.pol_key as pol_key , pc.policyakid  as PolicyAKID\r\n\t\tFrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tON\r\n\t\tp.pol_ak_id=pc.policyakid\r\n\t\tand \r\n\t\tPC.sourcesystemid='DCT'  and p.crrnt_snpsht_flag =1 and pc.currentsnapshotflag =1\r\n\t\tand \r\n\t\tPC.InsuranceLine ='GeneralLiability') a \r\n\t\tinner join\r\n\t\t(\r\n\t\tselect   p.pol_key as pol_key , pc.policyakid  as PolicyAKID\r\n\t\tFrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tON\r\n\t\tp.pol_ak_id=pc.policyakid and  PC.sourcesystemid='DCT'  and p.crrnt_snpsht_flag =1 and PC.currentsnapshotflag =1\r\n\t\tand PC.InsuranceLine ='Property') b \r\n\t\tON  a.PolicyAKID=b.PolicyAKID\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_key) = 1\n),\nLKP_Policy_SBOP AS (\n\tSELECT\n\tProgramAKId,\n\tpol_key\n\tFROM (\n\t\tselect distinct a.pol_key as pol_key,a.ProgramAKId  as ProgramAKId from\r\n\t\t(\r\n\t\tselect   p.pol_key as pol_key , pc.policyakid  as PolicyAKID,P.ProgramAKId as ProgramAKId\r\n\t\tFrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tON\r\n\t\tp.pol_ak_id=pc.policyakid\r\n\t\tand  p.crrnt_snpsht_flag =1 and pc.currentsnapshotflag =1 and PC.sourcesystemid='DCT' and \r\n\t\tPC.InsuranceLine ='SBOPGeneralLiability') a \r\n\t\t inner join\r\n\t\t(\r\n\t\tselect   p.pol_key as pol_key , pc.policyakid  as PolicyAKID,P.ProgramAKId as ProgramAKId\r\n\t\tFrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tON\r\n\t\tp.pol_ak_id=pc.policyakid\r\n\t\tand p.crrnt_snpsht_flag =1 and PC.currentsnapshotflag =1 and PC.sourcesystemid='DCT' \r\n\t\tand PC.InsuranceLine ='SBOPProperty') b \r\n\t\tON  a.PolicyAKID=b.PolicyAKID\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY ProgramAKId) = 1\n),\nLKP_Policy AS (\n\tSELECT\n\tpol_key\n\tFROM (\n\t\tselect p.pol_key as Pol_Key \r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy p inner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage pc\r\n\t\ton\r\n\t\tp.pol_ak_id=pc.PolicyAKID and p.crrnt_snpsht_flag =1 and pc.currentsnapshotflag =1\r\n\t\twhere pc.InsuranceLine like 'SBOP%'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_key) = 1\n),\nLKP_SupClassiFicationGeneralLiability AS (\n\tSELECT\n\tRatingBasis,\n\tClassCode,\n\tRatingStateCode\n\tFROM (\n\t\tSELECT \n\t\t\tRatingBasis,\n\t\t\tClassCode,\n\t\t\tRatingStateCode\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.SupClassificationGeneralLiability\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClassCode,RatingStateCode ORDER BY RatingBasis) = 1\n),\nSQ_Premium AS (\n\t--PMS\r\n\tSELECT distinct\r\n\tPMC.PremiumMasterCalculationID,\r\n\tPMC.PremiumMasterRunDate,\r\n\tPOL.pol_key,\r\n\tPOL.prim_bus_class_code,\r\n\tRL.StateProvinceCode,\r\n\tPT.PremiumTransactionBookedDate,\r\n\tPMC.PremiumMasterSubLine,\r\n\tCASE WHEN SC.ClassCode='000000' then '44444' else SC.ClassCode end as classcode, \r\n\t'N/A' as RiskTerritory,\r\n\tPOL.pol_eff_date,\r\n\tPMC.PremiumMasterPremium,\r\n\tPMC.PremiumMasterTypeBureauCode,\r\n\tSC.RiskUnitGroup,\r\n\tPT.SourceSystemID,\r\n\tPMC.PremiumMasterTransactionCode,\r\n\tPMC.PremiumMasterReasonAmendedCode,\r\n\t'N/A' AS RiskType,\r\n\tCASE WHEN PC.TypeBureauCode='GL' THEN bsc.BureauCode3 ELSE PT.ConstructionCode END as ConstructionCode,\r\n\t'N/A' as IsoFireProtectionCode,\r\n\tPT.PackageModificationAdjustmentGroupCode,\r\n\tbsc.BureauCode1,\r\n\t'N/A' AS BureauCode2,\r\n\t'N/A' AS BureauCode4,\r\n\tPOL.pol_exp_date,\r\n\tASL.asl_num,\r\n\tISG.InsuranceSegmentCode,\r\n\tPremiumMasterExposure,\r\n\tIRC.CoverageCode,\r\n\tRL.ZipPostalCode,\r\n\tISNULL(CDGL.RetroactiveDate,'1800-01-01') as RetroactiveDate,\r\n\tcase when CDGL.LiabilityFormCode is null and SC.SublineCode in ('641', '313') then '3' else CDGL.LiabilityFormCode end as LiabilityFormCode,\r\n\tPT.PremiumTransactionEffectiveDate,\r\n\tSC.SublineCode,\r\n\t'N/A' as CoverageType,\r\n\tPC.InsuranceLine,\r\n\t'N/A' as CoverageVersion,\r\n\tPT.NumberOfEmployee,\r\n\tPT.PremiumTransactionId,\r\n\t'N/A' as SubCoverageTypeCode,\r\n\tnull as RatingCoverageAKID,\r\n\tRL.LocationUnitNumber\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton PMF.AnnualStatementLineDimId=ASL.asl_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC\r\n\ton PMF.EDWPremiumMasterCalculationPKID=PMC.PremiumMasterCalculationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton SC.StatisticalCoverageAKID=PT.StatisticalCoverageAKID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\ton POL.pol_ak_id=RL.PolicyAKID\r\n\tand POL.crrnt_snpsht_flag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability CDGL\r\n\ton CDGL.PremiumTransactionId=PT.PremiumTransactionId\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode bsc\r\n\ton bsc.PremiumTransactionAKID = PT.PremiumTransactionAKID \r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\ton IRC.InsuranceReferenceCoverageDimId=PMF.InsuranceReferenceCoverageDimId\r\n\twhere \r\n\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PMC.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\tAND (PMC.PremiumMasterTypeBureauCode IN ('GL') or (PMC.PremiumMasterTypeBureauCode = 'AL' AND IRC.CoverageCode = 'EPLI') \r\n\tor (PMC.PremiumMasterTypeBureauCode = 'BE' AND IRC.CoverageCode = 'EPLI'))\r\n\tAND PT.SourceSystemID='PMS'\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\tAND PMC.PremiumMasterPremium <>0\r\n\tAND PMC.PremiumMasterPremiumType='D'\r\n\tAND PMC.PremiumMasterTransactionCode IN ('10','11','12','13','14','15','18','19','20','21','22','23','24','25','28','29','57','67') \r\n\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ('COL' , 'CWO') @{pipeline().parameters.WHERE_CLAUSE_1}\r\n\t\r\n\tUNION ALL\r\n\t--DCT\r\n\tSELECT distinct\r\n\tPMC.PremiumMasterCalculationID,\r\n\tPMC.PremiumMasterRunDate,\r\n\tPOL.pol_key,\r\n\tPOL.prim_bus_class_code,\r\n\tRL.StateProvinceCode,\r\n\tPT.PremiumTransactionBookedDate,\r\n\tPMC.PremiumMasterSubLine,\r\n\tRC.ClassCode,\r\n\tISNULL(PTRR.RatingTerritoryCode,'N/A') as RiskTerritory,\r\n\tPOL.pol_eff_date,\r\n\tPMC.PremiumMasterPremium,\r\n\tCASE WHEN PMC.PremiumMasterSubLine='317' THEN 'GL' ELSE PMC.PremiumMasterTypeBureauCode END as PremiumMasterTypeBureauCode ,\r\n\t'N/A' AS RiskUnitGroup,\r\n\tPT.SourceSystemID,\r\n\tPMC.PremiumMasterTransactionCode,\r\n\tPMC.PremiumMasterReasonAmendedCode,\r\n\tRC.RiskType,\r\n\tPT.ConstructionCode,\r\n\t'N/A' as IsoFireProtectionCode,\r\n\tPT.PackageModificationAdjustmentGroupCode,\r\n\t'N/A' AS BureauCode1,\r\n\t'N/A' AS BureauCode2,\r\n\t'N/A' AS BureauCode4,\r\n\tPOL.pol_exp_date,\r\n\tASL.asl_num,\r\n\tISG.InsuranceSegmentCode,\r\n\tPremiumMasterExposure,\r\n\tIRC.CoverageCode,\r\n\tRL.ZipPostalCode,\r\n\tISNULL(CDGL.RetroactiveDate,'1800-01-01') as RetroactiveDate,\r\n\tcase when PC.InsuranceLine in ('CommercialUmbrella') then '3' else CDGL.LiabilityFormCode end as LiabilityFormCode,\r\n\tPT.PremiumTransactionEffectiveDate,\r\n\tRC.SublineCode,\r\n\tRC.CoverageType,\r\n\tPC.InsuranceLine,\r\n\tRC.CoverageVersion,\r\n\tPT.NumberOfEmployee,\r\n\tPT.PremiumTransactionId,\r\n\tRC.SubCoverageTypeCode,\r\n\tRC.RatingCoverageAKID,\r\n\tRL.LocationUnitNumber\r\n\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterFact PMF\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton PMF.AnnualStatementLineDimId=ASL.asl_dim_id\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation PMC\r\n\ton PMF.EDWPremiumMasterCalculationPKID=PMC.PremiumMasterCalculationId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\ton PT.PremiumTransactionAKID=PMC.PremiumTransactionAKID\r\n\tand PMC.CurrentSnapshotFlag=1\r\n\tand PT.CurrentSnapshotFlag=1\r\n\tinner join  @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton PT.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\tand RC.EffectiveDate=PT.EffectiveDate \r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tand RL.CurrentSnapshotFlag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL\r\n\ton POL.pol_ak_id=RL.PolicyAKID\r\n\tand POL.crrnt_snpsht_flag=1\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability CDGL\r\n\ton CDGL.PremiumTransactionId=PT.PremiumTransactionId\r\n\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\ton IRC.InsuranceReferenceCoverageDimId=PMF.InsuranceReferenceCoverageDimId\r\n\tleft join PremiumTransactionRatingRisk PTRR  with (nolock) \r\n\ton PTRR.PremiumTransactionAKID=PT.PremiumTransactionAKID\r\n\twhere \r\n\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PMC.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\tAND \r\n\t(\r\n\t  ( PC.TypeBureauCode IN \r\n\t     (select type_bureau_code from sup_type_bureau_code where StandardTypeBureauCode = 'GL' AND crrnt_snpsht_flag=1) \r\n\t    and PMC.PremiumMasterSubLine !='317'  \r\n\t  ) \r\n\t or (PMC.PremiumMasterSubLine ='317') \r\n\t or PC.InsuranceLine in ('CommercialUmbrella','DirectorsAndOffsCondos','EmploymentPracticesLiab','ExcessLiability','SBOPGeneralLiability')\r\n\t or (PC.InsuranceLine='CommercialAuto' and RC.CoverageType in  ('WB516CA','WB516CANC'))\r\n\t or (PC.InsuranceLine='BusinessOwners' and RC.CoverageType='EmploymentPracticesLiability')\r\n\t)\r\n\tAND PT.SourceSystemID='DCT'\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\tAND PMC.PremiumMasterPremium <>0\r\n\tAND PMC.PremiumMasterPremiumType='D'\r\n\tAND PMC.PremiumMasterTransactionCode IN ('10','11','12','13','14','15','18','19','20','21','22','23','24','25','28','29','30','31','57','67') \r\n\tAND PMC.PremiumMasterReasonAmendedCode NOT IN ('CWO', 'CWB')  @{pipeline().parameters.WHERE_CLAUSE_1}\n),\nLKP_RetroactiveDate AS (\n\tSELECT\n\tRetroactiveDate,\n\ti_PremiumTransactionID,\n\tPremiumTransactionID\n\tFROM (\n\t\tselect t.PremiumTransactionID as PremiumTransactionID\r\n\t\t, t.RetroactiveDate as RetroactiveDate \r\n\t\tfrom\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT \r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY RetroactiveDate) = 1\n),\nLKP_TargetTable_Premium AS (\n\tSELECT\n\tEDWPremiumMasterCalculationPKId\n\tFROM (\n\t\tSELECT\r\n\t\tGL.EDWPremiumMasterCalculationPKId as EDWPremiumMasterCalculationPKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSGeneralLiabilityExtract GL\r\n\t\tWHERE DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GL.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1)\r\n\t\tAND GL.EDWPremiumMasterCalculationPKId<>-1\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT\r\n\t\tPL.EDWPremiumMasterCalculationPKId as EDWPremiumMasterCalculationPKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSProfessionalLiabilityExtract PL\r\n\t\tWHERE DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PL.PremiumMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1)\r\n\t\tAND PL.EDWPremiumMasterCalculationPKId<>-1\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPremiumMasterCalculationPKId ORDER BY EDWPremiumMasterCalculationPKId) = 1\n),\nFIL_Exists_Premium AS (\n\tSELECT\n\tLKP_TargetTable_Premium.EDWPremiumMasterCalculationPKId AS LKP_PremiumMasterCalculationID, \n\tSQ_Premium.PremiumMasterCalculationID, \n\tSQ_Premium.PremiumMasterRunDate, \n\tSQ_Premium.pol_key, \n\tSQ_Premium.prim_bus_class_code, \n\tSQ_Premium.StateProvinceCode, \n\tSQ_Premium.PremiumTransactionBookedDate, \n\tSQ_Premium.PremiumMasterSubLine, \n\tSQ_Premium.ClassCode, \n\tSQ_Premium.RiskTerritory, \n\tSQ_Premium.pol_eff_date, \n\tSQ_Premium.PremiumMasterPremium, \n\tSQ_Premium.TypeBureauCode, \n\tSQ_Premium.RiskUnitGroup, \n\tSQ_Premium.SourceSystemID, \n\tSQ_Premium.PremiumMasterTransactionCode, \n\tSQ_Premium.PremiumMasterReasonAmendedCode, \n\tSQ_Premium.RiskType, \n\tSQ_Premium.ConstructionCode, \n\tSQ_Premium.IsoFireProtectionCode, \n\tSQ_Premium.PackageModificationAdjustmentGroupCode, \n\tSQ_Premium.BureauCode1, \n\tSQ_Premium.BureauCode2, \n\tSQ_Premium.BureauCode4, \n\tSQ_Premium.pol_exp_date, \n\tSQ_Premium.asl_num, \n\tSQ_Premium.InsuranceSegmentCode, \n\tSQ_Premium.PremiumMasterExposure, \n\tSQ_Premium.CoverageCode, \n\tSQ_Premium.ZipPostalCode, \n\tSQ_Premium.RetroactiveDate, \n\tSQ_Premium.LiabilityFormCode, \n\tSQ_Premium.PremiumTransactionEffectiveDate, \n\tSQ_Premium.SublineCode, \n\tSQ_Premium.CoverageType, \n\tSQ_Premium.InsuranceLine, \n\tSQ_Premium.CoverageVersion, \n\tSQ_Premium.NumberOfEmployee, \n\tLKP_RetroactiveDate.RetroactiveDate AS lkp_RetroactiveDate, \n\tSQ_Premium.SubCoverageTypeCode, \n\tSQ_Premium.RatingCoverageAKID, \n\tSQ_Premium.LocationUnitNumber\n\tFROM SQ_Premium\n\tLEFT JOIN LKP_RetroactiveDate\n\tON LKP_RetroactiveDate.PremiumTransactionID = SQ_Premium.PremiumTransactionID\n\tLEFT JOIN LKP_TargetTable_Premium\n\tON LKP_TargetTable_Premium.EDWPremiumMasterCalculationPKId = SQ_Premium.PremiumMasterCalculationID\n\tWHERE ISNULL(LKP_PremiumMasterCalculationID)\r\n-------------------Filter Premium is 0-------------------------\r\nAND \r\nROUND(PremiumMasterPremium,2)<>0\r\n-----------------------------------------------------------------------\n),\nEXP_Cleansing_Premium AS (\n\tSELECT\n\tPremiumMasterCalculationID AS i_PremiumMasterCalculationID,\n\tPremiumMasterRunDate AS i_PremiumMasterRunDate,\n\tpol_key AS i_pol_key,\n\tprim_bus_class_code AS i_prim_bus_class_code,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tPremiumTransactionBookedDate AS i_PremiumTransactionBookedDate,\n\tPremiumMasterSubLine AS i_PremiumMasterSubLine,\n\tClassCode AS i_ClassCode,\n\tRiskTerritory AS i_RiskTerritory,\n\tpol_eff_date AS i_pol_eff_date,\n\tPremiumMasterPremium AS i_PremiumMasterPremium,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tSourceSystemID AS i_SourceSystemID,\n\tPremiumMasterTransactionCode AS i_PremiumMasterTransactionCode,\n\tPremiumMasterReasonAmendedCode AS i_PremiumMasterReasonAmendedCode,\n\tRiskType AS i_RiskType,\n\tConstructionCode AS i_ConstructionCode,\n\tIsoFireProtectionCode AS i_IsoFireProtectionCode,\n\tPackageModificationAdjustmentGroupCode AS i_PackageModificationAdjustmentGroupCode,\n\tBureauCode1 AS i_BureauCode1,\n\tpol_exp_date AS i_pol_exp_date,\n\tasl_num AS i_asl_num,\n\ti_PremiumMasterCalculationID AS o_PremiumMasterCalculationID,\n\ti_PremiumMasterRunDate AS o_PremiumMasterRunDate,\n\t-- *INF*: RTRIM(LTRIM(i_pol_key))\n\tRTRIM(LTRIM(i_pol_key)) AS o_pol_key,\n\t-- *INF*: RTRIM(LTRIM(i_prim_bus_class_code))\n\tRTRIM(LTRIM(i_prim_bus_class_code)) AS o_prim_bus_class_code,\n\t-- *INF*: RTRIM(LTRIM(i_StateProvinceCode))\n\tRTRIM(LTRIM(i_StateProvinceCode)) AS o_StateProvinceCode,\n\ti_PremiumTransactionBookedDate AS o_PremiumTransactionBookedDate,\n\t-- *INF*: RTRIM(LTRIM(i_PremiumMasterSubLine))\n\tRTRIM(LTRIM(i_PremiumMasterSubLine)) AS o_PremiumMasterSubLine,\n\t-- *INF*: RTRIM(LTRIM(i_ClassCode))\n\tRTRIM(LTRIM(i_ClassCode)) AS o_ClassCode,\n\t-- *INF*: RTRIM(LTRIM(i_RiskTerritory))\n\tRTRIM(LTRIM(i_RiskTerritory)) AS o_RiskTerritory,\n\ti_pol_eff_date AS o_pol_eff_date,\n\t-- *INF*: i_PremiumMasterPremium\r\n\t-- \r\n\t-- \r\n\t-- --IIF( IN(i_PremiumMasterTransactionCode, '10','11','12','13','14','15','18','19','20','21','22','23','24','25','28','29','57','67') AND  NOT IN(i_PremiumMasterReasonAmendedCode, 'COL' , 'CWO'), i_PremiumMasterPremium, 0)\n\ti_PremiumMasterPremium AS o_PremiumMasterPremium,\n\t-- *INF*: RTRIM(LTRIM(i_TypeBureauCode))\n\tRTRIM(LTRIM(i_TypeBureauCode)) AS o_TypeBureauCode,\n\t-- *INF*: RTRIM(LTRIM(i_RiskUnitGroup))\n\tRTRIM(LTRIM(i_RiskUnitGroup)) AS o_RiskUnitGroup,\n\t-- *INF*: LTRIM(RTRIM(i_SourceSystemID))\n\tLTRIM(RTRIM(i_SourceSystemID)) AS o_SourceSystemID,\n\t-- *INF*: LTRIM(RTRIM(i_RiskType))\n\tLTRIM(RTRIM(i_RiskType)) AS o_RiskType,\n\t-- *INF*: RTRIM(LTRIM(i_ConstructionCode))\n\tRTRIM(LTRIM(i_ConstructionCode)) AS o_ConstructionCode,\n\t-- *INF*: RTRIM(LTRIM(i_IsoFireProtectionCode))\n\tRTRIM(LTRIM(i_IsoFireProtectionCode)) AS o_IsoFireProtectionCode,\n\t-- *INF*: LTRIM(RTRIM(i_PackageModificationAdjustmentGroupCode))\n\tLTRIM(RTRIM(i_PackageModificationAdjustmentGroupCode)) AS o_PackageModificationAdjustmentGroupCode,\n\t-- *INF*: RTRIM(LTRIM(i_BureauCode1))\n\tRTRIM(LTRIM(i_BureauCode1)) AS o_BureauCode1,\n\tBureauCode2,\n\tBureauCode4,\n\ti_pol_exp_date AS o_pol_exp_date,\n\ti_asl_num AS o_AnnualStatementLineNumber,\n\tInsuranceSegmentCode,\n\tPremiumMasterExposure,\n\tCoverageCode,\n\tZipPostalCode AS i_ZipPostalCode,\n\tLiabilityFormCode AS i_LiabilityFormCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ZipPostalCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_ZipPostalCode) AS o_ZipPostalCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_LiabilityFormCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_LiabilityFormCode) AS o_LiabilityFormCode,\n\tPremiumTransactionEffectiveDate,\n\tSublineCode,\n\tCoverageType,\n\tInsuranceLine,\n\tCoverageVersion,\n\tNumberOfEmployee,\n\tlkp_RetroactiveDate,\n\t-- *INF*: IIF(SublineCode='345',:LKP.Lkp_Premium_RetroactiveDate_Policy(LTRIM(RTRIM(i_pol_key))),lkp_RetroactiveDate)\r\n\t-- \r\n\t-- --- This variable is being used to get the Retroactive date at Policy level for Condo D& O Policies\n\tIFF(\n\t    SublineCode = '345',\n\t    LKP_PREMIUM_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_i_pol_key.RetroactiveDate,\n\t    lkp_RetroactiveDate\n\t) AS v_RetroactiveDate,\n\t-- *INF*: IIF(ISNULL(v_RetroactiveDate),TO_DATE('18000101000000' , 'YYYYMMDDHH24MISS') , v_RetroactiveDate)\n\tIFF(\n\t    v_RetroactiveDate IS NULL, TO_TIMESTAMP('18000101000000', 'YYYYMMDDHH24MISS'),\n\t    v_RetroactiveDate\n\t) AS RetroactiveDate,\n\tSubCoverageTypeCode,\n\tRatingCoverageAKID,\n\tLocationUnitNumber,\n\t-- *INF*: LTRIM(RTRIM(LocationUnitNumber))\n\tLTRIM(RTRIM(LocationUnitNumber)) AS o_LocationUnitNumber\n\tFROM FIL_Exists_Premium\n\tLEFT JOIN LKP_PREMIUM_RETROACTIVEDATE_POLICY LKP_PREMIUM_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_i_pol_key\n\tON LKP_PREMIUM_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_i_pol_key.PolicyKey = LTRIM(RTRIM(i_pol_key))\n\n),\nEXP_Logic_Premium AS (\n\tSELECT\n\t-1 AS LossMasterCalculationId,\n\to_PremiumMasterCalculationID AS PremiumMasterCalculationID,\n\to_PremiumMasterRunDate AS PremiumMasterRunDate,\n\t-- *INF*: TO_DATE('1800-01-01','YYYY/MM/DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY/MM/DD') AS loss_master_run_date,\n\to_pol_key AS pol_key,\n\to_prim_bus_class_code AS prim_bus_class_code,\n\to_StateProvinceCode AS StateProvinceCode,\n\to_PremiumTransactionBookedDate AS PremiumTransactionBookedDate,\n\to_PremiumMasterSubLine AS PremiumMasterSubLine,\n\t-- *INF*: DECODE(TRUE,PremiumMasterSubLine='025','027',PremiumMasterSubLine)\n\tDECODE(\n\t    TRUE,\n\t    PremiumMasterSubLine = '025', '027',\n\t    PremiumMasterSubLine\n\t) AS sub_line_code_out,\n\to_ClassCode AS ClassCode,\n\t-- *INF*: IIF(ISNULL(ClassCode) OR IS_SPACES(ClassCode) OR LENGTH(ClassCode)=0\r\n\t-- OR IN(ClassCode, 'N/A','TBD'),\r\n\t-- '44444',\r\n\t-- ClassCode\r\n\t-- )\r\n\t-- \r\n\t-- --IIF(ISNULL(ClassCode) OR LENGTH(ClassCode)=0,'N/A',ClassCode)\n\tIFF(\n\t    ClassCode IS NULL\n\t    or LENGTH(ClassCode)>0\n\t    and TRIM(ClassCode)=''\n\t    or LENGTH(ClassCode) = 0\n\t    or ClassCode IN ('N/A','TBD'),\n\t    '44444',\n\t    ClassCode\n\t) AS PremiumMasterClassCode,\n\t'N/A' AS LossMasterClassCode,\n\t'N/A' AS Cause_of_Loss,\n\to_RiskTerritory AS RiskTerritory,\n\t-- *INF*: RiskTerritory\r\n\t-- \r\n\t-- --SUBSTR(RiskTerritory,2,2)\n\tRiskTerritory AS TerritoryCode,\n\to_pol_eff_date AS pol_eff_date,\n\t'N/A' AS ClaimNum,\n\t'N/A' AS ClaimantNum,\n\to_PremiumMasterPremium AS PremiumMasterPremium,\n\t-- *INF*: ROUND(PremiumMasterPremium,2)\n\tROUND(PremiumMasterPremium, 2) AS PremiumMasterPremium_out,\n\t0.00 AS PaidLossAmt,\n\t0.00 AS OutstandingAmt,\n\to_TypeBureauCode AS TypeBureauCode,\n\to_RiskUnitGroup AS RiskUnitGroup,\n\to_SourceSystemID AS SourceSystemID,\n\to_RiskType AS RiskType,\n\to_BureauCode1 AS BureauCode1,\n\tBureauCode2,\n\tBureauCode4,\n\to_ConstructionCode AS ConstructionCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(ConstructionCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(ConstructionCode) AS ConstructionCode_out,\n\to_IsoFireProtectionCode AS IsoFireProtectionCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(IsoFireProtectionCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(IsoFireProtectionCode) AS IsoFireProtectionCode_out,\n\to_PackageModificationAdjustmentGroupCode AS i_PackageModificationAdjustmentGroupCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_PackageModificationAdjustmentGroupCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_PackageModificationAdjustmentGroupCode) AS PackageModificationAdjustmentGroupCode_out,\n\to_pol_exp_date AS pol_exp_date,\n\to_AnnualStatementLineNumber AS AnnualStatementLineNumber,\n\tInsuranceSegmentCode,\n\tPremiumMasterExposure,\n\tCoverageCode AS i_CoverageCode,\n\ti_CoverageCode AS CoverageCode,\n\to_LiabilityFormCode AS i_LiabilityFormCode,\n\tSublineCode AS i_SublineCode,\n\tCoverageType,\n\tInsuranceLine,\n\tCoverageVersion AS i_CoverageVersion,\n\tRetroactiveDate AS i_RetroactiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(i_LiabilityFormCode))='6','3',\r\n\t-- (InsuranceLine='GeneralLiability' AND CoverageType='WB516GL') OR (InsuranceLine='CommercialAuto' AND IN(CoverageType,'WB516CA','WB516CANC')) OR \r\n\t-- (InsuranceLine='SBOPGeneralLiability' AND IN(CoverageType,'NS0279','NS0313')) OR \r\n\t-- CoverageType='EmploymentPracticesLiability' OR i_CoverageCode = 'EPLI' OR InsuranceLine='DirectorsAndOffsCondos',\r\n\t-- DECODE(TRUE,\r\n\t-- TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))<>'1800','1',\r\n\t-- TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))='1800','4',\r\n\t-- i_LiabilityFormCode\r\n\t-- ),\r\n\t-- i_LiabilityFormCode)\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(i_LiabilityFormCode)) = '6', '3',\n\t    (InsuranceLine = 'GeneralLiability' AND CoverageType = 'WB516GL') OR (InsuranceLine = 'CommercialAuto' AND CoverageType IN ('WB516CA','WB516CANC')) OR (InsuranceLine = 'SBOPGeneralLiability' AND CoverageType IN ('NS0279','NS0313')) OR CoverageType = 'EmploymentPracticesLiability' OR i_CoverageCode = 'EPLI' OR InsuranceLine = 'DirectorsAndOffsCondos', DECODE(\n\t        TRUE,\n\t        TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) <> '1800', '1',\n\t        TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) = '1800', '4',\n\t        i_LiabilityFormCode\n\t    ),\n\t    i_LiabilityFormCode\n\t) AS v_TypeofPolicycontract,\n\tv_TypeofPolicycontract AS o_TypeofPolicycontract,\n\t-- *INF*: TO_DATE('1800-01-01' , 'YYYY-MM-DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY-MM-DD') AS claim_loss_date,\n\t-- *INF*: IIF(ISNULL(i_RetroactiveDate) OR TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))='1800' OR IN(ltrim(rtrim(v_TypeofPolicycontract)),'3','4','5'), 'N/A', TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY')))\n\tIFF(\n\t    i_RetroactiveDate IS NULL\n\t    or TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) = '1800'\n\t    or ltrim(rtrim(v_TypeofPolicycontract)) IN ('3','4','5'),\n\t    'N/A',\n\t    TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY'))\n\t) AS v_ClaimsEntryYear,\n\t-- *INF*: v_ClaimsEntryYear\r\n\t-- \r\n\t-- --'N/A'\n\tv_ClaimsEntryYear AS ClaimsEntryYear,\n\t0 AS PaidAllocatedlossAdjustmentExpenseAmount,\n\t0 AS OutstandingAllocatedLossAdjustmentExpenseAmount1,\n\to_ZipPostalCode AS ZipPostalCode,\n\tPremiumTransactionEffectiveDate,\n\tNumberOfEmployee,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_SublineCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_SublineCode) AS o_SublineCode,\n\tSubCoverageTypeCode AS i_SubCoverageTypeCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_SubCoverageTypeCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_SubCoverageTypeCode) AS o_SubCoverageTypeCode,\n\tRatingCoverageAKID,\n\to_LocationUnitNumber\n\tFROM EXP_Cleansing_Premium\n),\nEXP_Exposure AS (\n\tSELECT\n\tSourceSystemID AS i_SourceSystemID,\n\tPremiumMasterExposure AS i_PremiumMasterExposure,\n\tCoverageType AS i_CoverageType,\n\tInsuranceLine AS i_InsuranceLine,\n\tNumberOfEmployee AS i_NumberOfEmployee,\n\to_SublineCode AS i_SublineCode,\n\to_SubCoverageTypeCode AS i_SubCoverageTypeCode,\n\tPremiumMasterClassCode AS i_ClassCode,\n\tStateProvinceCode AS i_StateProvinceCode,\n\t-- *INF*: IIF(NOT ISNULL(:LKP.LKP_SUPCLASSIFICATIONGENERALLIABILITY(i_ClassCode,i_StateProvinceCode)),\r\n\t-- :LKP.LKP_SUPCLASSIFICATIONGENERALLIABILITY(i_ClassCode,i_StateProvinceCode), :LKP.LKP_SUPCLASSIFICATIONGENERALLIABILITY(i_ClassCode,'99'))\n\tIFF(\n\t    LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_StateProvinceCode.RatingBasis IS NOT NULL,\n\t    LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_StateProvinceCode.RatingBasis,\n\t    LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_99.RatingBasis\n\t) AS v_lkp_RatingBasis,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_lkp_RatingBasis)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(v_lkp_RatingBasis) AS v_RatingBasis,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SubCoverageTypeCode='TerrorismPremium',0,\r\n\t-- (i_InsuranceLine='GeneralLiability' AND i_CoverageType='WB516GL') OR (i_InsuranceLine='CommercialAuto' AND IN(i_CoverageType,'WB516CA','WB516CANC')) OR (i_InsuranceLine='SBOPGeneralLiability' AND IN(i_CoverageType,'NS0279','NS0313')) OR i_CoverageType='EmploymentPracticesLiability',i_NumberOfEmployee,\r\n\t-- i_SourceSystemID='DCT' AND v_lkp_RatingBasis='M',i_PremiumMasterExposure/1000,\r\n\t-- i_SourceSystemID='DCT' AND v_lkp_RatingBasis='C',i_PremiumMasterExposure/100,\r\n\t-- i_PremiumMasterExposure)\n\tDECODE(\n\t    TRUE,\n\t    i_SubCoverageTypeCode = 'TerrorismPremium', 0,\n\t    (i_InsuranceLine = 'GeneralLiability' AND i_CoverageType = 'WB516GL') OR (i_InsuranceLine = 'CommercialAuto' AND i_CoverageType IN ('WB516CA','WB516CANC')) OR (i_InsuranceLine = 'SBOPGeneralLiability' AND i_CoverageType IN ('NS0279','NS0313')) OR i_CoverageType = 'EmploymentPracticesLiability', i_NumberOfEmployee,\n\t    i_SourceSystemID = 'DCT' AND v_lkp_RatingBasis = 'M', i_PremiumMasterExposure / 1000,\n\t    i_SourceSystemID = 'DCT' AND v_lkp_RatingBasis = 'C', i_PremiumMasterExposure / 100,\n\t    i_PremiumMasterExposure\n\t) AS o_PremiumMasterExposure\n\tFROM EXP_Logic_Premium\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_StateProvinceCode\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_StateProvinceCode.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_i_StateProvinceCode.RatingStateCode = i_StateProvinceCode\n\n\tLEFT JOIN LKP_SUPCLASSIFICATIONGENERALLIABILITY LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_99\n\tON LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_99.ClassCode = i_ClassCode\n\tAND LKP_SUPCLASSIFICATIONGENERALLIABILITY_i_ClassCode_99.RatingStateCode = '99'\n\n),\nSQ_Loss AS (\n\tSELECT distinct\r\n\tLMC.loss_master_calculation_id,\r\n\tLMC.loss_master_run_date as loss_master_run_date,\r\n\tPOL.prim_bus_class_code,\r\n\tRL.StateProvinceCode,\r\n\tOCC.claim_loss_date,\r\n\tLMC.sub_line_code,\r\n\tLMC.class_code,\r\n\tCT.cause_of_loss,\r\n\t'N/A' as RiskTerritory ,\r\n\tPOL.pol_eff_date,\r\n\tPOL.pol_key,\r\n\tOCC.claim_occurrence_num,\r\n\tCPO.claimant_num,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMC.paid_loss_amt else 0 end) as paid_loss_amt,\r\n\t(case when LMC.financialtypecode = 'D' and LMC.trans_kind_code = 'D' Then LMC.outstanding_amt Else 0 End ) as outstanding_amt,\r\n\tCCD.pms_type_bureau_code,\r\n\tSC.RiskUnitGroup,\r\n\tCCD.PolicySourceID,\r\n\t'N/A' AS RiskType,\r\n\tSC.StatisticalCoverageAKID as CoverageAKID,\r\n\tPOL.pol_exp_date,\r\n\tOCC.s3p_claim_num,\r\n\tCT.claim_trans_id,\r\n\tCCD.claimant_cov_det_ak_id,\r\n\tASL.asl_num,\r\n\tPC.InsuranceLine,\r\n\tPOL.pol_num,\r\n\tLMC.statistical_code1,\r\n\tISG.InsuranceSegmentCode,\r\n\tIRC.CoverageCode,\r\n\t(case when LMC.financialtypecode = 'E' and LMC.trans_kind_code = 'D' then LMF.eom_unpaid_loss_adjust_exp else 0 End) as DirectALAEOutstandingER,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMF.paid_exp_amt else 0 end) as DirectALAEPaidIR,\r\n\tSC.MajorPerilCode,\r\n\tRL.ZipPostalCode,\r\n\tPOL.pms_pol_lob_code,\r\n\tPremiumTransaction.PackageModificationAdjustmentGroupCode as PackageModificationAdjustmentGroupCode, \r\n\tPremiumTransaction.ConstructionCode as ConstructionCode, \r\n\tCoverageDetailCommercialProperty.IsoFireProtectionCode as IsoFireProtectionCode, \r\n\tLTRIM(RTRIM(BureauCode1)) as BureauCode1,\r\n\tLTRIM(RTRIM(BureauCode2)) as BureauCode2,\r\n\tLTRIM(RTRIM(BureauCode4)) as BureauCode4,\r\n\tcase when CoverageDetailGeneralLiability.LiabilityFormCode is null and SC.SublineCode in ('641', '313') then '3' else CoverageDetailGeneralLiability.LiabilityFormCode end as LiabilityFormCode,\r\n\tISNULL(CoverageDetailGeneralLiability.RetroactiveDate,'1800-01-01') as RetroactiveDate,\r\n\tCASE WHEN CT.trans_date<DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},0) THEN LMC.loss_master_run_date ELSE CT.trans_date END AS trans_date,\r\n\tSC.SublineCode,\r\n\t'N/A' as CoverageType,\r\n\t'N/A' as CoverageVersion,\r\n\tPremiumTransaction.PremiumTransactionID\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_fact LMF\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton LMF.asl_dim_id=ASL.asl_dim_id\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\ton LMF.loss_master_run_date_id=CD.clndr_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\ton LMC.loss_master_calculation_id=LMF.edw_loss_master_calculation_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\tand LMC.crrnt_snpsht_flag=1\r\n\tand CT.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id\r\n\tAND CCD.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO\r\n\tON CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id\r\n\tAND CPO.Crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence OCC\r\n\tON CPO.claim_occurrence_ak_id= OCC.claim_occurrence_ak_id\r\n\tAND  OCC.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim PD with(nolock)\r\n\ton LMF.pol_dim_id=PD.pol_dim_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\ton POL.pol_id=PD.edw_pol_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\ton SC.StatisticalCoverageAKID=CCD.StatisticalCoverageAKID\r\n\tand SC.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=SC.PolicyCoverageAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\ton IRC.InsuranceReferenceCoverageDimId=LMF.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}. PremiumTransaction\r\n\ton SC.StatisticalCoverageAKID = PremiumTransaction.StatisticalCoverageAKID\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode\r\n\ton BureauStatisticalCode.PremiumTransactionAKID = PremiumTransaction.PremiumTransactionAKID\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\ton CoverageDetailCommercialProperty.PremiumTransactionID=PremiumTransaction.PremiumTransactionID\r\n\tand CoverageDetailCommercialProperty.CurrentSnapshotFlag=1\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability\r\n\ton CoverageDetailGeneralLiability.PremiumTransactionID=PremiumTransaction.PremiumTransactionID\r\n\tand CoverageDetailGeneralLiability.CurrentSnapshotFlag=1\r\n\twhere \r\n\t(CCD.pms_type_bureau_code IN ('GL') or (CCD.pms_type_bureau_code = 'AL' AND IRC.CoverageCode = 'EPLI') \r\n\tor (CCD.pms_type_bureau_code = 'BE' AND IRC.CoverageCode = 'EPLI'))\r\n\tAND LMC.trans_kind_code='D'\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\tAND (DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1) =DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\tAND (LMC.paid_loss_amt<>0 or LMC.outstanding_amt<>0 or LMF.eom_unpaid_loss_adjust_exp <>0 or LMF.paid_exp_amt<>0) \r\n\tAND LMF.audit_id<>-9  @{pipeline().parameters.WHERE_CLAUSE_2}\r\n\t\r\n\t\r\n\t--DCT\r\n\tunion all\r\n\tSELECT distinct\r\n\tLMC.loss_master_calculation_id,\r\n\tLMC.loss_master_run_date as loss_master_run_date,\r\n\tPOL.prim_bus_class_code,\r\n\tRL.StateProvinceCode,\r\n\tOCC.claim_loss_date,\r\n\tLMC.sub_line_code,\r\n\tLMC.class_code,\r\n\tCT.cause_of_loss,\r\n\tISNULL(PTRR.RatingTerritoryCode,'N/A') as RiskTerritory,\r\n\tPOL.pol_eff_date,\r\n\tPOL.pol_key,\r\n\tOCC.claim_occurrence_num,\r\n\tCPO.claimant_num,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMC.paid_loss_amt else 0 end) as paid_loss_amt,\r\n\t(Case when LMC.financialtypecode  = 'D' and LMC.trans_kind_code = 'D' Then LMC.outstanding_amt Else 0 End) as outstanding_amt,\r\n\tCase when LMC.sub_line_code='317' Then 'GeneralLiability' Else CCD.pms_type_bureau_code End pms_type_bureau_code,\r\n\t'N/A' AS RiskUnitGroup,\r\n\tCCD.PolicySourceID,\r\n\tLTRIM(RTRIM(RC.RiskType)) AS RiskType,\r\n\tRC.RatingCoverageAKID as CoverageAKID,\r\n\tPOL.pol_exp_date,\r\n\tOCC.s3p_claim_num,\r\n\tCT.claim_trans_id,\r\n\tCCD.claimant_cov_det_ak_id,\r\n\tASL.asl_num,\r\n\tPC.InsuranceLine,\r\n\tPOL.pol_num,\r\n\tLMC.statistical_code1,\r\n\tISG.InsuranceSegmentCode,\r\n\tIRC.CoverageCode,\r\n\t(case when LMC.financialtypecode = 'E' and LMC.trans_kind_code = 'D' then LMF.eom_unpaid_loss_adjust_exp else 0 End) as DirectALAEOutstandingER,\r\n\t(case when LMC.trans_kind_code = 'D' then  LMF.paid_exp_amt else 0 end) as DirectALAEPaidIR,\r\n\tCCD.major_peril_code MajorPerilCode,\r\n\tRL.ZipPostalCode,\r\n\tPOL.pms_pol_lob_code,\r\n\tnull as PackageModificationAdjustmentGroupCode, \r\n\t'N/A' as ConstructionCode, \r\n\t'N/A' as IsoFireProtectionCode, \r\n\tnull as BureauCode1,\r\n\tnull as BureauCode2,\r\n\tnull as BureauCode4,\r\n\tnull as LiabilityFormCode,\r\n\tnull as RetroactiveDate,\r\n\tCASE WHEN CT.trans_date < DATEADD(qq,DATEDIFF(qq,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},0) THEN LMC.loss_master_run_date ELSE CT.trans_date END AS trans_date,\r\n\tRC.SublineCode,\r\n\tRC.CoverageType,\r\n\tRC.CoverageVersion,\r\n\tnull as PremiumTransactionID\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_fact LMF\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim ASL\r\n\ton LMF.asl_dim_id=ASL.asl_dim_id\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\ton LMF.loss_master_run_date_id=CD.clndr_id\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim IRC\r\n\ton IRC.InsuranceReferenceCoverageDimId=LMF.InsuranceReferenceCoverageDimId\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC\r\n\ton LMC.loss_master_calculation_id=LMF.edw_loss_master_calculation_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction CT\r\n\ton LMC.claim_trans_ak_id=CT.claim_trans_ak_id\r\n\tand LMC.crrnt_snpsht_flag=1\r\n\tand CT.crrnt_snpsht_flag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD\r\n\tON CT.claimant_cov_det_ak_id= CCD.claimant_cov_det_ak_id\r\n\tAND CCD.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO\r\n\tON CPO.claim_party_occurrence_ak_id=CCD.claim_party_occurrence_ak_id\r\n\tAND CPO.Crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence OCC\r\n\tON CPO.claim_occurrence_ak_id= OCC.claim_occurrence_ak_id\r\n\tAND  OCC.crrnt_snpsht_flag = 1\r\n\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim PD with(nolock)\r\n\ton LMF.pol_dim_id=PD.pol_dim_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy POL with (nolock)\r\n\ton POL.pol_id=PD.edw_pol_pk_id\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISG\r\n\ton POL.InsuranceSegmentAKId=ISG.InsuranceSegmentAKId\r\n\tand ISG.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\ton CCD.RatingCoverageAKID=RC.RatingCoverageAKID\r\n\tand (case when LMC.trans_offset_onset_ind='O' and LMC.pms_acct_entered_date != '1800-01-01 01:00:00.000' \r\n\tthen LMC.pms_acct_entered_date\r\n\telse DATEADD(D,1,LMC.loss_master_run_date)  end) between RC.EffectiveDate and RC.ExpirationDate \r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\ton PC.PolicyCoverageAKID=RC.PolicyCoverageAKID\r\n\tand PC.CurrentSnapshotFlag=1\r\n\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\ton PC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tand RL.CurrentSnapshotFlag=1 \r\n\tleft join PremiumTransactionRatingRisk PTRR with (nolock) on PTRR.PremiumTransactionAKID=LMC.PremiumTransactionAKID\r\n\twhere \r\n\t(\r\n\t(CCD.pms_type_bureau_code IN ( select type_bureau_code from sup_type_bureau_code where StandardTypeBureauCode = 'GL'  AND crrnt_snpsht_flag=1) and LMC.sub_line_code !='317')\r\n\tor \r\n\t(LMC.sub_line_code='317')\r\n\tor PC.InsuranceLine in ('CommercialUmbrella','DirectorsAndOffsCondos','EmploymentPracticesLiab','ExcessLiability','SBOPGeneralLiability')\r\n\tor (PC.InsuranceLine='CommercialAuto' and RC.CoverageType in  ('WB516CA','WB516CANC'))\r\n\tor (PC.InsuranceLine='BusinessOwners' and RC.CoverageType='EmploymentPracticesLiability')\r\n\t)\r\n\tAND LMC.trans_kind_code='D'\r\n\tAND ISG.InsuranceSegmentCode IN ('1','2')\r\n\tAND (DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1))\r\n\tAND (LMC.paid_loss_amt<>0 or LMC.outstanding_amt<>0 or LMF.eom_unpaid_loss_adjust_exp <>0 or LMF.paid_exp_amt<>0) \r\n\tAND LMF.audit_id<>-9   @{pipeline().parameters.WHERE_CLAUSE_2}\n),\nAGG_RemoveDuplicate AS (\n\tSELECT\n\tloss_master_calculation_id,\n\tloss_master_run_date,\n\tprim_bus_class_code,\n\tStateProvinceCode,\n\tclaim_loss_date,\n\tsub_line_code,\n\tclass_code,\n\tcause_of_loss,\n\tRiskTerritory,\n\tpol_eff_date,\n\tpol_key,\n\tclaim_occurrence_num,\n\tclaimant_num,\n\tpaid_loss_amt,\n\toutstanding_amt,\n\tpms_type_bureau_code,\n\tRiskUnitGroup,\n\tPolicySourceID,\n\tRiskType,\n\tCoverageAKID,\n\tpol_exp_date,\n\ts3p_claim_num,\n\tclaim_trans_id,\n\tclaim_coverage_detail_ak_id,\n\tasl_num,\n\tInsuranceLine,\n\tpol_num,\n\tstatistical_code1,\n\tInsuranceSegmentCode,\n\tCoverageCode,\n\tDirectALAEOutstandingER,\n\tDirectALAEPaidIR,\n\tMajorPerilCode,\n\tZipPostalCode,\n\tpms_pol_lob_code,\n\tPackageModificationAdjustmentGroupCode,\n\tConstructionCode,\n\tIsoFireProtectionCode,\n\tBureauCode1,\n\tBureauCode2,\n\tBureauCode4,\n\tLiabilityFormCode,\n\tRetroactiveDate,\n\ttrans_date,\n\tSublineCode,\n\tCoverageType,\n\tCoverageVersion,\n\tPremiumTransactionID\n\tFROM SQ_Loss\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY loss_master_calculation_id ORDER BY NULL) = 1\n),\nLKP_PremiumTransactionAttibutes AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPackageModificationAdjustmentGroupCode,\n\tLiabilityFormCode,\n\tRetroactiveDate,\n\tRatingCoverageAKID\n\tFROM (\n\t\tSELECT \r\n\t\tPT.PremiumTransactionID as PremiumTransactionID,\r\n\t\tPT.PackageModificationAdjustmentGroupCode as PackageModificationAdjustmentGroupCode,\r\n\t\tCASE when PC.InsuranceLine in ('CommercialUmbrella') then '3' else CDGL.LiabilityFormCode end as LiabilityFormCode,\r\n\t\tISNULL(CDGL.RetroactiveDate,'1800-01-01') as RetroactiveDate,\r\n\t\tPT.RatingCoverageAKID as RatingCoverageAKID\r\n\t\tfrom \r\n\t\tDBO.PremiumTransaction PT\r\n\t\tINNER JOIN dbo.RatingCoverage RC ON PT.RatingCoverageAKID = RC.RatingCoverageAKID AND RC.EffectiveDate=PT.EffectiveDate\r\n\t\tINNER JOIN dbo.PolicyCoverage PC ON PC.PolicyCoverageAKID=RC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\t\tINNER JOIN dbo.RiskLocation RL ON PC.RiskLocationAKID=RL.RiskLocationAKID and RL.CurrentSnapshotFlag=1 \r\n\t\tINNER JOIN V2.policy P on P.pol_ak_id = RL.Policyakid and P.crrnt_snpsht_flag = 1\r\n\t\tleft outer join DBO.CoverageDetailCommercialProperty CDCP on CDCP.PremiumTransactionID=PT.PremiumTransactionID and CDCP.CurrentSnapshotFlag=1 \r\n\t\tleft outer join DBO.CoverageDetailGeneralLiability CDGL on CDGL.PremiumTransactionID=PT.PremiumTransactionID and CDGL.CurrentSnapshotFlag=1\r\n\t\tWHERE PT.sourcesystemid = 'DCT' AND RC.sourcesystemid = 'DCT'\r\n\t\tAND p.pol_ak_id IN  (SELECT distinct LMC.pol_ak_id from DBO.loss_master_calculation LMC WHERE \r\n\t\t(DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,LMC.loss_master_run_date),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1)))\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingCoverageAKID ORDER BY PremiumTransactionID) = 1\n),\nLKP_TargetTable_Loss AS (\n\tSELECT\n\tEDWLossMasterCalculationPKId\n\tFROM (\n\t\tSELECT\r\n\t\tGL.EDWLossMasterCalculationPKId as EDWLossMasterCalculationPKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSGeneralLiabilityExtract GL\r\n\t\tWHERE DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GL.LossMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1)\r\n\t\tAND GL.EDWLossMasterCalculationPKId<>-1\r\n\t\t\r\n\t\tUNION ALL\r\n\t\t\r\n\t\tSELECT\r\n\t\tPL.EDWLossMasterCalculationPKId as EDWLossMasterCalculationPKId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSProfessionalLiabilityExtract PL\r\n\t\tWHERE DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,PL.LossMasterRunDate),-1)=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS},-1)\r\n\t\tAND PL.EDWLossMasterCalculationPKId<>-1\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWLossMasterCalculationPKId ORDER BY EDWLossMasterCalculationPKId) = 1\n),\nEXP_Calculate_ClaimNumber AS (\n\tSELECT\n\tAGG_RemoveDuplicate.pol_key,\n\tAGG_RemoveDuplicate.claim_coverage_detail_ak_id,\n\tAGG_RemoveDuplicate.loss_master_run_date,\n\t-- *INF*: TO_CHAR(loss_master_run_date, 'YYYYMMDD')\n\tTO_CHAR(loss_master_run_date, 'YYYYMMDD') AS loss_master_run_datekey,\n\tAGG_RemoveDuplicate.loss_master_calculation_id,\n\tAGG_RemoveDuplicate.prim_bus_class_code,\n\tAGG_RemoveDuplicate.StateProvinceCode,\n\tAGG_RemoveDuplicate.claim_loss_date,\n\tAGG_RemoveDuplicate.sub_line_code,\n\tAGG_RemoveDuplicate.class_code,\n\tAGG_RemoveDuplicate.cause_of_loss,\n\tAGG_RemoveDuplicate.RiskTerritory,\n\tAGG_RemoveDuplicate.pol_eff_date,\n\tAGG_RemoveDuplicate.claim_occurrence_num,\n\tAGG_RemoveDuplicate.claimant_num,\n\tAGG_RemoveDuplicate.paid_loss_amt,\n\tAGG_RemoveDuplicate.outstanding_amt,\n\tAGG_RemoveDuplicate.pms_type_bureau_code,\n\tAGG_RemoveDuplicate.RiskUnitGroup,\n\tAGG_RemoveDuplicate.PolicySourceID,\n\tAGG_RemoveDuplicate.RiskType,\n\tAGG_RemoveDuplicate.CoverageAKID,\n\tAGG_RemoveDuplicate.pol_exp_date,\n\tAGG_RemoveDuplicate.s3p_claim_num,\n\tAGG_RemoveDuplicate.claim_trans_id,\n\tLKP_TargetTable_Loss.EDWLossMasterCalculationPKId,\n\tAGG_RemoveDuplicate.asl_num,\n\tAGG_RemoveDuplicate.InsuranceLine,\n\tAGG_RemoveDuplicate.pol_num,\n\tAGG_RemoveDuplicate.statistical_code1,\n\tAGG_RemoveDuplicate.InsuranceSegmentCode,\n\tAGG_RemoveDuplicate.CoverageCode,\n\tAGG_RemoveDuplicate.DirectALAEOutstandingER,\n\tAGG_RemoveDuplicate.DirectALAEPaidIR,\n\tAGG_RemoveDuplicate.MajorPerilCode,\n\tAGG_RemoveDuplicate.ZipPostalCode,\n\t-- *INF*: IIF(ISNULL(claim_occurrence_num) OR IS_SPACES(claim_occurrence_num) OR LENGTH(claim_occurrence_num)=0 OR claim_occurrence_num='N/A' OR IS_NUMBER(claim_occurrence_num)=0, 0, TO_INTEGER(claim_occurrence_num))\n\tIFF(\n\t    claim_occurrence_num IS NULL\n\t    or LENGTH(claim_occurrence_num)>0\n\t    and TRIM(claim_occurrence_num)=''\n\t    or LENGTH(claim_occurrence_num) = 0\n\t    or claim_occurrence_num = 'N/A'\n\t    or REGEXP_LIKE(claim_occurrence_num, '^[0-9]+$') = 0,\n\t    0,\n\t    CAST(claim_occurrence_num AS INTEGER)\n\t) AS v_claim_occurrence_num,\n\t-- *INF*: LTRIM(RTRIM(pol_num))||TO_CHAR(claim_loss_date,'YYMMDD') ||SUBSTR(claim_occurrence_num,2,2)\n\tLTRIM(RTRIM(pol_num)) || TO_CHAR(claim_loss_date, 'YYMMDD') || SUBSTR(claim_occurrence_num, 2, 2) AS o_ClaimNum,\n\tAGG_RemoveDuplicate.pms_pol_lob_code,\n\tAGG_RemoveDuplicate.PackageModificationAdjustmentGroupCode,\n\tAGG_RemoveDuplicate.ConstructionCode,\n\tAGG_RemoveDuplicate.IsoFireProtectionCode,\n\tAGG_RemoveDuplicate.BureauCode1,\n\tAGG_RemoveDuplicate.BureauCode2,\n\tAGG_RemoveDuplicate.BureauCode4,\n\tAGG_RemoveDuplicate.LiabilityFormCode,\n\tAGG_RemoveDuplicate.RetroactiveDate,\n\tAGG_RemoveDuplicate.trans_date,\n\tAGG_RemoveDuplicate.SublineCode,\n\tAGG_RemoveDuplicate.CoverageType,\n\tAGG_RemoveDuplicate.CoverageVersion,\n\tAGG_RemoveDuplicate.PremiumTransactionID,\n\tLKP_PremiumTransactionAttibutes.PremiumTransactionID AS lkp_PremiumTransactionID,\n\t-- *INF*: IIF(IN(PolicySourceID,'DCT','DUC'),lkp_PremiumTransactionID, PremiumTransactionID)\n\tIFF(PolicySourceID IN ('DCT','DUC'), lkp_PremiumTransactionID, PremiumTransactionID) AS o_PremiumTransactionID,\n\tLKP_PremiumTransactionAttibutes.PackageModificationAdjustmentGroupCode AS lkp_PackageModificationAdjustmentGroupCode,\n\t-- *INF*: IIF(IN(PolicySourceID,'DCT','DUC'),lkp_PackageModificationAdjustmentGroupCode, PackageModificationAdjustmentGroupCode)\n\tIFF(\n\t    PolicySourceID IN ('DCT','DUC'), lkp_PackageModificationAdjustmentGroupCode,\n\t    PackageModificationAdjustmentGroupCode\n\t) AS o_PackageModificationAdjustmentGroupCode,\n\tLKP_PremiumTransactionAttibutes.LiabilityFormCode AS lkp_LiabilityFormCode,\n\t-- *INF*: IIF(IN(PolicySourceID,'DCT','DUC'), lkp_LiabilityFormCode, LiabilityFormCode)\n\tIFF(PolicySourceID IN ('DCT','DUC'), lkp_LiabilityFormCode, LiabilityFormCode) AS o_LiabilityFormCode,\n\tLKP_PremiumTransactionAttibutes.RetroactiveDate AS lkp_RetroactiveDate_DCT,\n\t-- *INF*: IIF(IN(PolicySourceID,'DCT','DUC'),lkp_RetroactiveDate_DCT, RetroactiveDate)\n\tIFF(PolicySourceID IN ('DCT','DUC'), lkp_RetroactiveDate_DCT, RetroactiveDate) AS o_RetroactiveDate\n\tFROM AGG_RemoveDuplicate\n\tLEFT JOIN LKP_PremiumTransactionAttibutes\n\tON LKP_PremiumTransactionAttibutes.RatingCoverageAKID = AGG_RemoveDuplicate.CoverageAKID\n\tLEFT JOIN LKP_TargetTable_Loss\n\tON LKP_TargetTable_Loss.EDWLossMasterCalculationPKId = AGG_RemoveDuplicate.loss_master_calculation_id\n),\nLKP_RetroactiveDate_Loss AS (\n\tSELECT\n\tRetroactiveDate,\n\ti_PremiumTransactionID,\n\tPremiumTransactionID\n\tFROM (\n\t\tselect t.PremiumTransactionID as PremiumTransactionID\r\n\t\t, t.RetroactiveDate as RetroactiveDate \r\n\t\tfrom\r\n\t\t(\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialAuto\r\n\t\tUnion all\r\n\t\t select PremiumTransactionID, RetroactiveDate from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailGeneralLiability \r\n\t\tunion all\r\n\t\tselect PremiumTransactionID, RetroactiveDate  from @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialProperty\r\n\t\tunion all\r\n\t\tselect  PremiumTransactionID, RetroactiveDate  from  @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailCommercialUmbrella \r\n\t\t) T\r\n\t\tinner hash join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT \r\n\t\ton T.PremiumTransactionID = PT.PremiumTransactionID\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY RetroactiveDate) = 1\n),\nEXP_Default AS (\n\tSELECT\n\tEXP_Calculate_ClaimNumber.pol_key,\n\tEXP_Calculate_ClaimNumber.claim_coverage_detail_ak_id,\n\tEXP_Calculate_ClaimNumber.loss_master_run_date,\n\tEXP_Calculate_ClaimNumber.loss_master_run_datekey,\n\tEXP_Calculate_ClaimNumber.loss_master_calculation_id,\n\tEXP_Calculate_ClaimNumber.prim_bus_class_code,\n\tEXP_Calculate_ClaimNumber.StateProvinceCode,\n\tEXP_Calculate_ClaimNumber.claim_loss_date,\n\tEXP_Calculate_ClaimNumber.sub_line_code,\n\tEXP_Calculate_ClaimNumber.class_code,\n\tEXP_Calculate_ClaimNumber.cause_of_loss,\n\tEXP_Calculate_ClaimNumber.RiskTerritory,\n\tEXP_Calculate_ClaimNumber.pol_eff_date,\n\tEXP_Calculate_ClaimNumber.claim_occurrence_num,\n\tEXP_Calculate_ClaimNumber.claimant_num,\n\tEXP_Calculate_ClaimNumber.paid_loss_amt,\n\tEXP_Calculate_ClaimNumber.outstanding_amt,\n\tEXP_Calculate_ClaimNumber.pms_type_bureau_code,\n\tEXP_Calculate_ClaimNumber.RiskUnitGroup,\n\tEXP_Calculate_ClaimNumber.PolicySourceID,\n\tEXP_Calculate_ClaimNumber.RiskType,\n\tEXP_Calculate_ClaimNumber.CoverageAKID,\n\tEXP_Calculate_ClaimNumber.pol_exp_date,\n\tEXP_Calculate_ClaimNumber.s3p_claim_num,\n\tEXP_Calculate_ClaimNumber.claim_trans_id,\n\tEXP_Calculate_ClaimNumber.EDWLossMasterCalculationPKId,\n\tEXP_Calculate_ClaimNumber.asl_num,\n\tEXP_Calculate_ClaimNumber.InsuranceLine,\n\tEXP_Calculate_ClaimNumber.pol_num,\n\tEXP_Calculate_ClaimNumber.statistical_code1,\n\tEXP_Calculate_ClaimNumber.InsuranceSegmentCode,\n\tEXP_Calculate_ClaimNumber.CoverageCode,\n\tEXP_Calculate_ClaimNumber.DirectALAEOutstandingER,\n\tEXP_Calculate_ClaimNumber.DirectALAEPaidIR,\n\tEXP_Calculate_ClaimNumber.MajorPerilCode,\n\tEXP_Calculate_ClaimNumber.ZipPostalCode,\n\tEXP_Calculate_ClaimNumber.o_ClaimNum,\n\tEXP_Calculate_ClaimNumber.pms_pol_lob_code,\n\tEXP_Calculate_ClaimNumber.o_PackageModificationAdjustmentGroupCode AS PackageModificationAdjustmentGroupCode,\n\tEXP_Calculate_ClaimNumber.ConstructionCode,\n\tEXP_Calculate_ClaimNumber.IsoFireProtectionCode,\n\tEXP_Calculate_ClaimNumber.BureauCode1,\n\tEXP_Calculate_ClaimNumber.BureauCode2,\n\tEXP_Calculate_ClaimNumber.BureauCode4,\n\tEXP_Calculate_ClaimNumber.o_LiabilityFormCode AS LiabilityFormCode,\n\tEXP_Calculate_ClaimNumber.o_RetroactiveDate AS RetroactiveDate,\n\tLKP_RetroactiveDate_Loss.RetroactiveDate AS lkp_RetroactiveDate,\n\t-- *INF*: IIF(sub_line_code='345',:LKP.LKP_LOSS_RETROACTIVEDATE_POLICY(LTRIM(RTRIM(pol_key))),lkp_RetroactiveDate)\n\tIFF(\n\t    sub_line_code = '345', LKP_LOSS_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_pol_key.RetroactiveDate,\n\t    lkp_RetroactiveDate\n\t) AS v_RetroactiveDate,\n\t-- *INF*: IIF(ISNULL(v_RetroactiveDate),TO_DATE('18000101000000' , 'YYYYMMDDHH24MISS') , v_RetroactiveDate)\n\tIFF(\n\t    v_RetroactiveDate IS NULL, TO_TIMESTAMP('18000101000000', 'YYYYMMDDHH24MISS'),\n\t    v_RetroactiveDate\n\t) AS o_RetroactiveDate,\n\tEXP_Calculate_ClaimNumber.trans_date,\n\tEXP_Calculate_ClaimNumber.SublineCode,\n\tEXP_Calculate_ClaimNumber.CoverageType,\n\tEXP_Calculate_ClaimNumber.CoverageVersion\n\tFROM EXP_Calculate_ClaimNumber\n\tLEFT JOIN LKP_RetroactiveDate_Loss\n\tON LKP_RetroactiveDate_Loss.PremiumTransactionID = EXP_Calculate_ClaimNumber.o_PremiumTransactionID\n\tLEFT JOIN LKP_LOSS_RETROACTIVEDATE_POLICY LKP_LOSS_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_pol_key\n\tON LKP_LOSS_RETROACTIVEDATE_POLICY_LTRIM_RTRIM_pol_key.PolicyKey = LTRIM(RTRIM(pol_key))\n\n),\nSRT_Sort_data AS (\n\tSELECT\n\tpol_key, \n\to_ClaimNum AS ClaimNum, \n\tloss_master_run_date, \n\tloss_master_run_datekey, \n\tclaim_coverage_detail_ak_id, \n\tloss_master_calculation_id, \n\tprim_bus_class_code, \n\tStateProvinceCode, \n\tclaim_loss_date, \n\tsub_line_code, \n\tclass_code, \n\tcause_of_loss, \n\tRiskTerritory, \n\tpol_eff_date, \n\tclaim_occurrence_num, \n\tclaimant_num, \n\tpaid_loss_amt, \n\toutstanding_amt, \n\tpms_type_bureau_code, \n\tRiskUnitGroup, \n\tPolicySourceID, \n\tRiskType, \n\tCoverageAKID, \n\tpol_exp_date, \n\ts3p_claim_num, \n\tclaim_trans_id, \n\tEDWLossMasterCalculationPKId, \n\tasl_num, \n\tInsuranceLine, \n\tpol_num, \n\tstatistical_code1, \n\tInsuranceSegmentCode, \n\tCoverageCode, \n\tDirectALAEOutstandingER, \n\tDirectALAEPaidIR, \n\tMajorPerilCode, \n\tZipPostalCode, \n\tpms_pol_lob_code, \n\tPackageModificationAdjustmentGroupCode, \n\tConstructionCode, \n\tIsoFireProtectionCode, \n\tBureauCode1, \n\tBureauCode2, \n\tBureauCode4, \n\tLiabilityFormCode, \n\to_RetroactiveDate AS RetroactiveDate, \n\ttrans_date, \n\tSublineCode, \n\tCoverageType, \n\tCoverageVersion\n\tFROM EXP_Default\n\tORDER BY pol_key ASC, ClaimNum ASC, loss_master_run_date ASC, claim_coverage_detail_ak_id ASC\n),\nLKP_InceptionToDatePaidLossAmount AS (\n\tSELECT\n\tInceptionToDatePaidLossAmount,\n\tpol_key,\n\tedw_claimant_cov_det_ak_id,\n\ttrans_date,\n\tloss_master_calculation_id\n\tFROM (\n\t\tSELECT DISTINCT\r\n\t\tCASE WHEN InceptionToDatePaidLossAmount=0 and PaidLossAmount=0 THEN SUM(PaidLossAmount) OVER (partition by pol_key,edw_claimant_cov_det_ak_id,claim_num order by loss_master_run_date)\r\n\t\tELSE InceptionToDatePaidLossAmount END AS InceptionToDatePaidLossAmount,\r\n\t\tpol_key AS pol_key,\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\ttrans_date AS trans_date\r\n\t\t,loss_master_calculation_id AS loss_master_calculation_id\r\n\t\tFROM\r\n\t\t(\r\n\t\tSELECT DISTINCT SUM(InceptionToDatePaidLossAmount) over (partition by pol_key,edw_claimant_cov_det_ak_id,claim_num order by edw_claimant_cov_det_ak_id,trans_date,claim_trans_pk_id) AS InceptionToDatePaidLossAmount,\r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\ttrans_date AS trans_date,\r\n\t\tInceptionToDatePaidLossAmount AS PaidLossAmount,\r\n\t\tpol_key\r\n\t\t,loss_master_calculation_id\r\n\t\t,loss_master_run_date\r\n\t\t,claim_num\r\n\t\tFROM (\r\n\t\tSELECT  f.direct_loss_paid_including_recoveries AS InceptionToDatePaidLossAmount,  \r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\tct.trans_date,\r\n\t\tp.pol_key AS pol_key,\r\n\t\to.claim_num AS claim_num,\r\n\t\tlmc.loss_master_calculation_id,\r\n\t\tlmc.loss_master_run_date,\r\n\t\tlmc.claim_trans_pk_id\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact f\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim d\r\n\t\ton f.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vw_claim_transaction ct\r\n\t\ton f.edw_claim_trans_pk_id=ct.claim_trans_id\r\n\t\tand ct.trans_date<'2001-01-01'\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p\r\n\t\ton f.pol_dim_id=p.pol_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim O \r\n\t\ton F.claim_occurrence_dim_id=o.claim_occurrence_dim_id\r\n\t\tleft join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact lmf\r\n\t\ton lmf.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation lmc\r\n\t\ton lmc.loss_master_calculation_id = lmf.edw_loss_master_calculation_pk_id\r\n\t\tUNION ALL\r\n\t\tSELECT f.DirectLossPaidIR AS InceptionToDatePaidLossAmount,  \r\n\t\tedw_claimant_cov_det_ak_id AS edw_claimant_cov_det_ak_id,\r\n\t\tct.trans_date,\r\n\t\tp.pol_key AS pol_key,\r\n\t\to.claim_num AS claim_num,\r\n\t\tlmc.loss_master_calculation_id,\r\n\t\tlmc.loss_master_run_date,\r\n\t\tlmc.claim_trans_pk_id\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact f\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim d\r\n\t\ton f.claimant_cov_dim_id = d.claimant_cov_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.vw_claim_transaction ct\r\n\t\ton f.edw_claim_trans_pk_id=ct.claim_trans_id\r\n\t\tand ct.trans_date>='2001-01-01'\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim p\r\n\t\ton f.pol_dim_id=p.pol_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME_DATAMART}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim O \r\n\t\ton F.claim_occurrence_dim_id=o.claim_occurrence_dim_id\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation lmc\r\n\t\ton lmc.loss_master_calculation_id = f.edw_loss_master_calculation_pk_id\r\n\t\t) T\r\n\t\t) T\r\n\t\tWHERE cast(trans_date as date)<=DATEADD(QUARTER,1+DATEDIFF(QUARTER,0,GETDATE())+@{pipeline().parameters.NO_OF_QUARTERS} ,-1) \r\n\t\tORDER BY pol_key,edw_claimant_cov_det_ak_id,trans_date\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key,edw_claimant_cov_det_ak_id,trans_date,loss_master_calculation_id ORDER BY InceptionToDatePaidLossAmount DESC) = 1\n),\nFIL_Exists_Loss AS (\n\tSELECT\n\tSRT_Sort_data.EDWLossMasterCalculationPKId AS LKP_LossMasterCalculationId, \n\tSRT_Sort_data.pol_key, \n\tSRT_Sort_data.ClaimNum, \n\tSRT_Sort_data.loss_master_run_date, \n\tSRT_Sort_data.loss_master_calculation_id, \n\tSRT_Sort_data.prim_bus_class_code, \n\tSRT_Sort_data.StateProvinceCode, \n\tSRT_Sort_data.claim_loss_date, \n\tSRT_Sort_data.sub_line_code, \n\tSRT_Sort_data.class_code AS ClassCode, \n\tSRT_Sort_data.cause_of_loss, \n\tSRT_Sort_data.RiskTerritory, \n\tSRT_Sort_data.pol_eff_date, \n\tSRT_Sort_data.claim_occurrence_num, \n\tSRT_Sort_data.claimant_num, \n\tSRT_Sort_data.paid_loss_amt, \n\tSRT_Sort_data.outstanding_amt, \n\tSRT_Sort_data.pms_type_bureau_code AS TypeBureauCode, \n\tSRT_Sort_data.RiskUnitGroup, \n\tSRT_Sort_data.PolicySourceID, \n\tSRT_Sort_data.RiskType, \n\tSRT_Sort_data.CoverageAKID, \n\tSRT_Sort_data.pol_exp_date, \n\tSRT_Sort_data.s3p_claim_num, \n\tSRT_Sort_data.claim_trans_id, \n\tSRT_Sort_data.claim_coverage_detail_ak_id, \n\tLKP_InceptionToDatePaidLossAmount.InceptionToDatePaidLossAmount AS out_CumulativeInceptiontoDatePaidLoss, \n\tSRT_Sort_data.asl_num, \n\tSRT_Sort_data.InsuranceLine, \n\tSRT_Sort_data.pol_num, \n\tSRT_Sort_data.statistical_code1, \n\tSRT_Sort_data.InsuranceSegmentCode, \n\tSRT_Sort_data.CoverageCode, \n\tSRT_Sort_data.DirectALAEOutstandingER, \n\tSRT_Sort_data.DirectALAEPaidIR, \n\tSRT_Sort_data.MajorPerilCode, \n\tSRT_Sort_data.ZipPostalCode, \n\tSRT_Sort_data.pms_pol_lob_code, \n\tSRT_Sort_data.PackageModificationAdjustmentGroupCode, \n\tSRT_Sort_data.ConstructionCode, \n\tSRT_Sort_data.IsoFireProtectionCode, \n\tSRT_Sort_data.BureauCode1, \n\tSRT_Sort_data.BureauCode2, \n\tSRT_Sort_data.BureauCode4, \n\tSRT_Sort_data.LiabilityFormCode, \n\tSRT_Sort_data.RetroactiveDate, \n\tSRT_Sort_data.SublineCode, \n\tSRT_Sort_data.CoverageType, \n\tSRT_Sort_data.CoverageVersion\n\tFROM SRT_Sort_data\n\tLEFT JOIN LKP_InceptionToDatePaidLossAmount\n\tON LKP_InceptionToDatePaidLossAmount.pol_key = SRT_Sort_data.pol_key AND LKP_InceptionToDatePaidLossAmount.edw_claimant_cov_det_ak_id = SRT_Sort_data.claim_coverage_detail_ak_id AND LKP_InceptionToDatePaidLossAmount.trans_date <= SRT_Sort_data.trans_date AND LKP_InceptionToDatePaidLossAmount.loss_master_calculation_id = SRT_Sort_data.loss_master_calculation_id\n\tWHERE ISNULL(LKP_LossMasterCalculationId) AND  \r\n(paid_loss_amt != 0 or outstanding_amt!=0 or DirectALAEPaidIR!=0  or DirectALAEOutstandingER !=0)\r\nand TO_CHAR(loss_master_run_date, 'YYYY') ||TO_CHAR(loss_master_run_date, 'QQ')=\r\nTO_CHAR( ADD_TO_DATE(sysdate, 'MM', 3*@{pipeline().parameters.NO_OF_QUARTERS}), 'YYYY') ||TO_CHAR( ADD_TO_DATE(sysdate, 'MM', 3*@{pipeline().parameters.NO_OF_QUARTERS}), 'QQ')\n),\nEXP_Cleansing_Loss AS (\n\tSELECT\n\tpol_key AS i_pol_key,\n\tClaimNum AS i_ClaimNum,\n\tloss_master_run_date AS i_loss_master_run_date,\n\tloss_master_calculation_id AS i_loss_master_calculation_id,\n\tprim_bus_class_code AS i_prim_bus_class_code,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tclaim_loss_date AS i_claim_loss_date,\n\tsub_line_code AS i_sub_line_code,\n\tClassCode AS i_ClassCode,\n\tcause_of_loss AS i_cause_of_loss,\n\tRiskTerritory AS i_RiskTerritory,\n\tpol_eff_date AS i_pol_eff_date,\n\tclaim_occurrence_num AS i_claim_occurrence_num,\n\tclaimant_num AS i_claimant_num,\n\tpaid_loss_amt AS i_paid_loss_amt,\n\toutstanding_amt AS i_outstanding_amt,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tPolicySourceID AS i_PolicySourceID,\n\tRiskType AS i_RiskType,\n\tCoverageAKID AS i_CoverageAKID,\n\tpol_exp_date AS i_pol_exp_date,\n\ts3p_claim_num,\n\tout_CumulativeInceptiontoDatePaidLoss AS i_CumulativeInceptiontoDatePaidLoss,\n\tasl_num AS i_asl_num,\n\tclaim_coverage_detail_ak_id,\n\ti_loss_master_calculation_id AS o_loss_master_calculation_id,\n\ti_loss_master_run_date AS o_loss_master_run_date,\n\t-- *INF*: RTRIM(LTRIM(i_pol_key))\n\tRTRIM(LTRIM(i_pol_key)) AS o_pol_key,\n\t-- *INF*: RTRIM(LTRIM(i_prim_bus_class_code))\n\tRTRIM(LTRIM(i_prim_bus_class_code)) AS o_prim_bus_class_code,\n\t-- *INF*: RTRIM(LTRIM(i_StateProvinceCode))\n\tRTRIM(LTRIM(i_StateProvinceCode)) AS o_StateProvinceCode,\n\ti_claim_loss_date AS o_claim_loss_date,\n\t-- *INF*: RTRIM(LTRIM(i_sub_line_code))\n\tRTRIM(LTRIM(i_sub_line_code)) AS o_sub_line_code,\n\t-- *INF*: RTRIM(LTRIM(i_ClassCode))\n\tRTRIM(LTRIM(i_ClassCode)) AS o_ClassCode,\n\t-- *INF*: RTRIM(LTRIM(i_cause_of_loss))\n\tRTRIM(LTRIM(i_cause_of_loss)) AS o_cause_of_loss,\n\t-- *INF*: RTRIM(LTRIM(i_RiskTerritory))\n\tRTRIM(LTRIM(i_RiskTerritory)) AS o_RiskTerritory,\n\ti_pol_eff_date AS o_pol_eff_date,\n\t-- *INF*: RTRIM(LTRIM(i_claim_occurrence_num))\n\tRTRIM(LTRIM(i_claim_occurrence_num)) AS o_claim_occurrence_num,\n\t-- *INF*: RTRIM(LTRIM(i_claimant_num))\n\tRTRIM(LTRIM(i_claimant_num)) AS o_claimant_num,\n\t-- *INF*: IIF(ISNULL(i_paid_loss_amt), 0, i_paid_loss_amt)\r\n\t-- \r\n\t-- ---i_paid_loss_amt\n\tIFF(i_paid_loss_amt IS NULL, 0, i_paid_loss_amt) AS o_PaidLossAmount,\n\t-- *INF*: IIF(ISNULL(i_outstanding_amt), 0, i_outstanding_amt)\r\n\t-- \r\n\t-- --i_outstanding_amt\n\tIFF(i_outstanding_amt IS NULL, 0, i_outstanding_amt) AS o_OutstandingLossAmount,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_TypeBureauCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_TypeBureauCode) AS o_TypeBureauCode,\n\t-- *INF*: RTRIM(LTRIM(i_RiskUnitGroup))\n\tRTRIM(LTRIM(i_RiskUnitGroup)) AS o_RiskUnitGroup,\n\t-- *INF*: LTRIM(RTRIM(i_PolicySourceID))\n\tLTRIM(RTRIM(i_PolicySourceID)) AS o_PolicySourceID,\n\t-- *INF*: LTRIM(RTRIM(i_RiskType))\n\tLTRIM(RTRIM(i_RiskType)) AS o_RiskType,\n\ti_CoverageAKID AS o_StatisticalCoverageAKID,\n\ti_pol_exp_date AS o_pol_exp_date,\n\t-- *INF*: RTRIM(LTRIM(s3p_claim_num))\n\tRTRIM(LTRIM(s3p_claim_num)) AS o_s3p_claim_num,\n\ti_CumulativeInceptiontoDatePaidLoss AS o_CumulativeInceptiontoDatePaidLoss,\n\ti_asl_num AS o_AnnualStatementLineNumber,\n\tInsuranceLine AS i_InsuranceLine,\n\t-- *INF*: LTRIM(RTRIM(i_InsuranceLine))\n\tLTRIM(RTRIM(i_InsuranceLine)) AS o_InsuranceLine,\n\tpol_num,\n\ti_ClaimNum AS o_ClaimNum,\n\tstatistical_code1 AS i_statistical_code1,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- isnull(i_statistical_code1),'N/A',\r\n\t-- ltrim(rtrim(i_statistical_code1))='','N/A',\r\n\t-- length(rtrim(ltrim(i_statistical_code1))) < 5,'N/A',\r\n\t-- i_statistical_code1)\n\tDECODE(\n\t    TRUE,\n\t    i_statistical_code1 IS NULL, 'N/A',\n\t    ltrim(rtrim(i_statistical_code1)) = '', 'N/A',\n\t    length(rtrim(ltrim(i_statistical_code1))) < 5, 'N/A',\n\t    i_statistical_code1\n\t) AS v_statistical_code1,\n\t-- *INF*: IIF(v_statistical_code1 != 'N/A',substr(v_statistical_code1,3,1),'N/A')\n\tIFF(v_statistical_code1 != 'N/A', substr(v_statistical_code1, 3, 1), 'N/A') AS o_pms_const_code,\n\t-- *INF*: IIF(v_statistical_code1 != 'N/A',substr(v_statistical_code1,4,2),'N/A')\n\tIFF(v_statistical_code1 != 'N/A', substr(v_statistical_code1, 4, 2), 'N/A') AS o_pms_iso_ppc_code,\n\tInsuranceSegmentCode,\n\tDirectALAEPaidIR AS direct_alae_paid_including_recoveries1,\n\tDirectALAEOutstandingER AS direct_alae_outstanding_excluding_recoveries,\n\tCoverageCode,\n\tRetroactiveDate,\n\tLiabilityFormCode,\n\tZipPostalCode AS i_ZipPostalCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ZipPostalCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_ZipPostalCode) AS o_ZipPostalCode,\n\tMajorPerilCode,\n\tpms_pol_lob_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(pms_pol_lob_code)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(pms_pol_lob_code) AS v_pms_pol_lob_code,\n\t-- *INF*: IIF(v_pms_pol_lob_code  != 'N/A' , v_pms_pol_lob_code  , \r\n\t-- decode(i_InsuranceLine, 'BusinessOwners' , 'BOP',\r\n\t-- 'CommercialAuto' , 'CPP',\r\n\t-- 'CommercialUmbrella' , 'CPP',\r\n\t-- 'Crime' , 'CPP',\r\n\t-- 'DirectorsAndOfficersNFP' , 'CPP',\r\n\t-- 'DirectorsAndOffsCondos' , 'CPP',\r\n\t-- 'EmploymentPracticesLiab' , 'CPP',\r\n\t-- 'ExcessLiability' , 'CPP',\r\n\t-- 'GamesOfChance' , 'CPP',\r\n\t-- 'GeneralLiability' , 'CPP',\r\n\t-- 'HoleInOne' , 'CPP',\r\n\t-- 'InlandMarine' , 'CPP',\r\n\t-- 'Property' , 'CPP',\r\n\t-- 'SBOPGeneralLiability' , 'CPP',\r\n\t-- 'SBOPProperty' , 'CPP',\r\n\t-- i_InsuranceLine))\n\tIFF(\n\t    v_pms_pol_lob_code != 'N/A', v_pms_pol_lob_code,\n\t    decode(\n\t        i_InsuranceLine,\n\t        'BusinessOwners', 'BOP',\n\t        'CommercialAuto', 'CPP',\n\t        'CommercialUmbrella', 'CPP',\n\t        'Crime', 'CPP',\n\t        'DirectorsAndOfficersNFP', 'CPP',\n\t        'DirectorsAndOffsCondos', 'CPP',\n\t        'EmploymentPracticesLiab', 'CPP',\n\t        'ExcessLiability', 'CPP',\n\t        'GamesOfChance', 'CPP',\n\t        'GeneralLiability', 'CPP',\n\t        'HoleInOne', 'CPP',\n\t        'InlandMarine', 'CPP',\n\t        'Property', 'CPP',\n\t        'SBOPGeneralLiability', 'CPP',\n\t        'SBOPProperty', 'CPP',\n\t        i_InsuranceLine\n\t    )\n\t) AS o_pms_pol_lob_code,\n\ti_CoverageAKID AS o_RatingCoverageAKID\n\tFROM FIL_Exists_Loss\n),\nEXP_Transform_Prior_to_lookup AS (\n\tSELECT\n\tPackageModificationAdjustmentGroupCode,\n\tPolicySourceID AS in_PolicySourceID,\n\t-- *INF*: IIF(in_PolicySourceID='DUC','DCT','PMS')\r\n\t-- \r\n\t-- \r\n\t-- --IIF(in_StatisticalCoverageAKID=-1,'DCT','PMS')\n\tIFF(in_PolicySourceID = 'DUC', 'DCT', 'PMS') AS out_SourceSystem\n\tFROM FIL_Exists_Loss\n),\nEXP_Reset_Pms_ConstCode_IsoPPC AS (\n\tSELECT\n\tEXP_Cleansing_Loss.o_TypeBureauCode AS i_TypeBureauCode,\n\tEXP_Cleansing_Loss.o_pms_const_code AS i_pms_const_code,\n\tEXP_Cleansing_Loss.o_pms_iso_ppc_code AS i_pms_iso_ppc_code,\n\tEXP_Transform_Prior_to_lookup.out_SourceSystem AS i_SourceSystem,\n\tFIL_Exists_Loss.ConstructionCode AS lkp_ConstructionCode,\n\tFIL_Exists_Loss.IsoFireProtectionCode AS lkp_IsoFireProtectionCode,\n\t-- *INF*: IIF(i_SourceSystem='PMS' and i_pms_const_code != 'N/A' and ltrim(rtrim(i_TypeBureauCode))='CF',i_pms_const_code,lkp_ConstructionCode)\n\tIFF(\n\t    i_SourceSystem = 'PMS' and i_pms_const_code != 'N/A' and ltrim(rtrim(i_TypeBureauCode)) = 'CF',\n\t    i_pms_const_code,\n\t    lkp_ConstructionCode\n\t) AS v_const_code,\n\t-- *INF*: IIF(i_SourceSystem='PMS' and i_pms_iso_ppc_code != 'N/A' and ltrim(rtrim(i_TypeBureauCode))='CF',i_pms_iso_ppc_code,lkp_IsoFireProtectionCode)\n\tIFF(\n\t    i_SourceSystem = 'PMS'\n\t    and i_pms_iso_ppc_code != 'N/A'\n\t    and ltrim(rtrim(i_TypeBureauCode)) = 'CF',\n\t    i_pms_iso_ppc_code,\n\t    lkp_IsoFireProtectionCode\n\t) AS v_iso_code,\n\tv_const_code AS o_ConsturctionCode,\n\tv_iso_code AS o_IsoFireProtectionCode\n\tFROM EXP_Cleansing_Loss\n\t -- Manually join with EXP_Transform_Prior_to_lookup\n\t -- Manually join with FIL_Exists_Loss\n),\nLKP_CauseOfLoss AS (\n\tSELECT\n\tBureauCauseOfLoss,\n\tCauseOfLoss,\n\tLineOfBusiness,\n\tMajorPeril\n\tFROM (\n\t\tSELECT \n\t\t\tBureauCauseOfLoss,\n\t\t\tCauseOfLoss,\n\t\t\tLineOfBusiness,\n\t\t\tMajorPeril\n\t\tFROM sup_CauseOfLoss\n\t\tWHERE CurrentSnapshotFlag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CauseOfLoss,LineOfBusiness,MajorPeril ORDER BY BureauCauseOfLoss) = 1\n),\nEXP_Logic_Loss AS (\n\tSELECT\n\tEXP_Cleansing_Loss.o_loss_master_calculation_id AS loss_master_calculation_id,\n\tEXP_Cleansing_Loss.claim_coverage_detail_ak_id,\n\t-1 AS PremiumMasterCalculationID,\n\t-- *INF*: TO_DATE('1800-01-01','YYYY/MM/DD')\n\tTO_TIMESTAMP('1800-01-01', 'YYYY/MM/DD') AS PremiumMasterRunDate,\n\tEXP_Cleansing_Loss.o_loss_master_run_date AS loss_master_run_date,\n\tEXP_Cleansing_Loss.o_pol_key AS pol_key,\n\tEXP_Cleansing_Loss.o_prim_bus_class_code AS prim_bus_class_code,\n\tEXP_Cleansing_Loss.o_StateProvinceCode AS StateProvinceCode,\n\tEXP_Cleansing_Loss.o_claim_loss_date AS claim_loss_date,\n\tEXP_Cleansing_Loss.o_sub_line_code AS sub_line_code,\n\t-- *INF*: DECODE(TRUE,sub_line_code='025','027',sub_line_code)\n\tDECODE(\n\t    TRUE,\n\t    sub_line_code = '025', '027',\n\t    sub_line_code\n\t) AS sub_line_code_out,\n\tEXP_Cleansing_Loss.o_ClassCode AS ClassCode,\n\t'N/A' AS PremiumMasterClassCode_out,\n\t-- *INF*: IIF(ISNULL(ClassCode) OR IS_SPACES(ClassCode) OR LENGTH(ClassCode)=0\r\n\t-- OR IN(ClassCode, 'N/A','TBD'),\r\n\t-- '44444',\r\n\t-- ClassCode\r\n\t-- )\r\n\t-- \r\n\t-- --ClassCode\n\tIFF(\n\t    ClassCode IS NULL\n\t    or LENGTH(ClassCode)>0\n\t    and TRIM(ClassCode)=''\n\t    or LENGTH(ClassCode) = 0\n\t    or ClassCode IN ('N/A','TBD'),\n\t    '44444',\n\t    ClassCode\n\t) AS LossMasterClassCode_out,\n\tLKP_CauseOfLoss.BureauCauseOfLoss AS cause_of_loss,\n\t-- *INF*: IIF(ISNULL(cause_of_loss) OR LENGTH(cause_of_loss)=0,'N/A',cause_of_loss)\n\tIFF(cause_of_loss IS NULL OR LENGTH(cause_of_loss) = 0, 'N/A', cause_of_loss) AS cause_of_loss_out,\n\tEXP_Cleansing_Loss.o_RiskTerritory AS RiskTerritory,\n\t-- *INF*: RiskTerritory\r\n\t-- \r\n\t-- --SUBSTR(RiskTerritory,2,2)\n\tRiskTerritory AS TerritoryCode_out,\n\tEXP_Cleansing_Loss.o_pol_eff_date AS pol_eff_date,\n\tEXP_Cleansing_Loss.o_claim_occurrence_num AS i_claim_occurrence_num,\n\tEXP_Cleansing_Loss.o_s3p_claim_num AS i_s3p_claim_num,\n\tEXP_Cleansing_Loss.o_InsuranceLine AS i_InsuranceLine,\n\tEXP_Cleansing_Loss.pol_num AS i_pol_num,\n\tEXP_Cleansing_Loss.o_claimant_num AS claimant_num,\n\t-- *INF*: IIF(ISNULL(i_claim_occurrence_num) OR IS_SPACES(i_claim_occurrence_num) OR LENGTH(i_claim_occurrence_num)=0 OR i_claim_occurrence_num='N/A' OR IS_NUMBER(i_claim_occurrence_num)=0, 0, TO_INTEGER(i_claim_occurrence_num))\n\tIFF(\n\t    i_claim_occurrence_num IS NULL\n\t    or LENGTH(i_claim_occurrence_num)>0\n\t    and TRIM(i_claim_occurrence_num)=''\n\t    or LENGTH(i_claim_occurrence_num) = 0\n\t    or i_claim_occurrence_num = 'N/A'\n\t    or REGEXP_LIKE(i_claim_occurrence_num, '^[0-9]+$') = 0,\n\t    0,\n\t    CAST(i_claim_occurrence_num AS INTEGER)\n\t) AS v_claim_occurrence_num,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_InsuranceLine='CF',\r\n\t-- IIF(TRUNC(pol_eff_date, 'MM')  <= TO_DATE('2003-10', 'YYYY-MM'), TO_CHAR(ADD_TO_DATE(claim_loss_date, 'DD', v_claim_occurrence_num), 'YYYYMMDD'), i_s3p_claim_num),\r\n\t-- i_InsuranceLine='CR',\r\n\t-- i_pol_num || TO_CHAR(claim_loss_date,'YYMMDD') || SUBSTR(i_claim_occurrence_num,2,2),\r\n\t-- --i_InsuranceLine='GL',\r\n\t-- i_s3p_claim_num\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_InsuranceLine = 'CF', IFF(\n\t        CAST(TRUNC(pol_eff_date, 'MONTH') AS TIMESTAMP_NTZ(0)) <= TO_TIMESTAMP('2003-10', 'YYYY-MM'),\n\t        TO_CHAR(DATEADD(DAY,v_claim_occurrence_num,claim_loss_date), 'YYYYMMDD'),\n\t        i_s3p_claim_num\n\t    ),\n\t    i_InsuranceLine = 'CR', i_pol_num || TO_CHAR(claim_loss_date, 'YYMMDD') || SUBSTR(i_claim_occurrence_num, 2, 2),\n\t    i_s3p_claim_num\n\t) AS v_ClaimNumber,\n\tEXP_Cleansing_Loss.o_ClaimNum AS i_ClaimNum,\n\ti_ClaimNum AS ClaimNum,\n\t0.00 AS PremiumMasterPremium,\n\tEXP_Cleansing_Loss.o_PaidLossAmount AS PaidLossAmount,\n\tEXP_Cleansing_Loss.o_OutstandingLossAmount AS OutstandingLossAmount,\n\tEXP_Cleansing_Loss.o_TypeBureauCode AS TypeBureauCode,\n\tEXP_Cleansing_Loss.o_RiskUnitGroup AS RiskUnitGroup,\n\tEXP_Cleansing_Loss.o_PolicySourceID AS PolicySourceID,\n\tEXP_Cleansing_Loss.o_RiskType AS RiskType,\n\tFIL_Exists_Loss.BureauCode1,\n\tFIL_Exists_Loss.BureauCode2,\n\tFIL_Exists_Loss.BureauCode4,\n\tEXP_Reset_Pms_ConstCode_IsoPPC.o_ConsturctionCode AS i_ConstructionCode,\n\tEXP_Reset_Pms_ConstCode_IsoPPC.o_IsoFireProtectionCode AS i_IsoFireProtectionCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ConstructionCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_ConstructionCode) AS ConstructionCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_IsoFireProtectionCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_IsoFireProtectionCode) AS IsoFireProtectionCode,\n\tEXP_Transform_Prior_to_lookup.PackageModificationAdjustmentGroupCode AS i_PackageModificationAdjustmentGroupCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_PackageModificationAdjustmentGroupCode)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(i_PackageModificationAdjustmentGroupCode) AS PackageModificationAdjustmentGroupCode,\n\tEXP_Cleansing_Loss.o_pol_exp_date AS pol_exp_date,\n\tEXP_Cleansing_Loss.o_CumulativeInceptiontoDatePaidLoss AS CumulativeInceptiontoDatePaidLoss,\n\tEXP_Cleansing_Loss.o_AnnualStatementLineNumber AS AnnualStatementLineNumber,\n\tEXP_Cleansing_Loss.InsuranceSegmentCode,\n\tEXP_Cleansing_Loss.RetroactiveDate AS i_RetroactiveDate,\n\tFIL_Exists_Loss.SublineCode AS i_SublineCode,\n\tFIL_Exists_Loss.CoverageType AS i_CoverageType,\n\tFIL_Exists_Loss.CoverageVersion AS i_CoverageVersion,\n\tEXP_Cleansing_Loss.LiabilityFormCode AS i_LiabilityFormCode,\n\t-- *INF*: in_CoverageCode\r\n\t-- \r\n\t-- --DECODE(TRUE,PolicySourceID='PMS',IIF(ISNULL(BureauCode1) OR LENGTH(BureauCode1)=0 OR(TypeBureauCode  != 'CR' and TypeBureauCode  !='BT' and --TypeBureauCode != 'FT' and TypeBureauCode != 'CF'),'N/A',BureauCode1) ,DECODE(TRUE,RiskType='BLDG','01',RiskType='PP','02','N/A'))\r\n\t-- \r\n\t-- \r\n\t-- --IIF(PolicySourceID='PMS',iif(isnull(lkp_BureauCode1),'N/A',lkp_BureauCode1),DECODE(TRUE,RiskType='BLDG','01',RiskType='PP','02','N/A'))\n\tin_CoverageCode AS CoverageCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(i_LiabilityFormCode))='6','3',\r\n\t-- (i_InsuranceLine='GeneralLiability' AND i_CoverageType='WB516GL') OR (i_InsuranceLine='CommercialAuto' AND IN(i_CoverageType,'WB516CA','WB516CANC')) OR i_CoverageType='EmploymentPracticesLiability' OR in_CoverageCode = 'EPLI' OR i_InsuranceLine='DirectorsAndOffsCondos'\r\n\t-- ,DECODE(TRUE,\r\n\t-- TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))<>'1800','1',\r\n\t-- TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))='1800','4',\r\n\t-- i_LiabilityFormCode\r\n\t-- ),\r\n\t-- i_LiabilityFormCode)\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(i_LiabilityFormCode)) = '6', '3',\n\t    (i_InsuranceLine = 'GeneralLiability' AND i_CoverageType = 'WB516GL') OR (i_InsuranceLine = 'CommercialAuto' AND i_CoverageType IN ('WB516CA','WB516CANC')) OR i_CoverageType = 'EmploymentPracticesLiability' OR in_CoverageCode = 'EPLI' OR i_InsuranceLine = 'DirectorsAndOffsCondos', DECODE(\n\t        TRUE,\n\t        TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) <> '1800', '1',\n\t        TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) = '1800', '4',\n\t        i_LiabilityFormCode\n\t    ),\n\t    i_LiabilityFormCode\n\t) AS v_TypeofPolicycontract,\n\t-- *INF*: IIF(ISNULL(i_RetroactiveDate) OR TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY'))='1800' OR IN(ltrim(rtrim(v_TypeofPolicycontract)),'3','4','5'), 'N/A', TO_CHAR(GET_DATE_PART(i_RetroactiveDate, 'YYYY')))\n\tIFF(\n\t    i_RetroactiveDate IS NULL\n\t    or TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY')) = '1800'\n\t    or ltrim(rtrim(v_TypeofPolicycontract)) IN ('3','4','5'),\n\t    'N/A',\n\t    TO_CHAR(DATE_PART(i_RetroactiveDate, 'YYYY'))\n\t) AS v_ClaimsEntryYear,\n\t-- *INF*: v_ClaimsEntryYear\r\n\t-- \r\n\t-- --'N/A'\n\tv_ClaimsEntryYear AS o_ClaimsEntryYear,\n\tEXP_Cleansing_Loss.direct_alae_paid_including_recoveries1 AS direct_alae_paid_including_recoveries,\n\tEXP_Cleansing_Loss.direct_alae_outstanding_excluding_recoveries,\n\tEXP_Cleansing_Loss.CoverageCode AS in_CoverageCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_TypeofPolicycontract)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(v_TypeofPolicycontract) AS o_TypeofPolicycontract,\n\tEXP_Cleansing_Loss.o_ZipPostalCode AS ZipPostalCode,\n\tEXP_Cleansing_Loss.o_RatingCoverageAKID AS RatingCoverageAKID,\n\t'N/A' AS LocationUnitNumber\n\tFROM EXP_Cleansing_Loss\n\t -- Manually join with EXP_Reset_Pms_ConstCode_IsoPPC\n\t -- Manually join with EXP_Transform_Prior_to_lookup\n\t -- Manually join with FIL_Exists_Loss\n\tLEFT JOIN LKP_CauseOfLoss\n\tON LKP_CauseOfLoss.CauseOfLoss = EXP_Cleansing_Loss.o_cause_of_loss AND LKP_CauseOfLoss.LineOfBusiness = EXP_Cleansing_Loss.o_pms_pol_lob_code AND LKP_CauseOfLoss.MajorPeril = EXP_Cleansing_Loss.MajorPerilCode\n),\nUnion AS (\n\tSELECT LossMasterCalculationId, PremiumMasterCalculationID, PremiumMasterRunDate, loss_master_run_date, pol_key, prim_bus_class_code, StateProvinceCode, sub_line_code_out AS sub_line_code, PremiumMasterClassCode, LossMasterClassCode, Cause_of_Loss, TerritoryCode, pol_eff_date, ClaimNum, ClaimantNum, PremiumMasterPremium_out AS PremiumMasterPremium, PaidLossAmt, OutstandingAmt, TypeBureauCode, RiskUnitGroup, SourceSystemID, RiskType, CoverageCode, ConstructionCode_out AS ConstructionCode, IsoFireProtectionCode_out AS IsoFireProtectionCode, PackageModificationAdjustmentGroupCode_out AS PackageModificationAdjustmentGroupCode, pol_exp_date AS PolicyExpirationDate, AnnualStatementLineNumber, BureauCode1, BureauCode2, BureauCode4, InsuranceSegmentCode, o_PremiumMasterExposure AS PremiumMasterExposure, claim_loss_date, o_TypeofPolicycontract AS TypeofPolicycontract, ClaimsEntryYear, PaidAllocatedlossAdjustmentExpenseAmount, OutstandingAllocatedLossAdjustmentExpenseAmount1 AS OutstandingAllocatedLossAdjustmentExpenseAmount, ZipPostalCode, PremiumTransactionEffectiveDate, RatingCoverageAKID, o_LocationUnitNumber AS LocationUnitNumber\n\tFROM EXP_Exposure\n\t-- Manually join with EXP_Logic_Premium\n\tUNION\n\tSELECT loss_master_calculation_id AS LossMasterCalculationId, PremiumMasterCalculationID, PremiumMasterRunDate, loss_master_run_date, pol_key, prim_bus_class_code, StateProvinceCode, sub_line_code_out AS sub_line_code, PremiumMasterClassCode_out AS PremiumMasterClassCode, LossMasterClassCode_out AS LossMasterClassCode, cause_of_loss_out AS Cause_of_Loss, TerritoryCode_out AS TerritoryCode, pol_eff_date, ClaimNum, claimant_num AS ClaimantNum, PremiumMasterPremium, PaidLossAmount AS PaidLossAmt, OutstandingLossAmount AS OutstandingAmt, TypeBureauCode, RiskUnitGroup, PolicySourceID AS SourceSystemID, RiskType, CoverageCode, ConstructionCode, IsoFireProtectionCode, PackageModificationAdjustmentGroupCode, pol_exp_date AS PolicyExpirationDate, CumulativeInceptiontoDatePaidLoss AS InceptionToDatePaidLossAmount, claim_coverage_detail_ak_id AS ClaimCoverageID, AnnualStatementLineNumber, BureauCode1, BureauCode2, BureauCode4, claim_loss_date, o_TypeofPolicycontract AS TypeofPolicycontract, o_ClaimsEntryYear AS ClaimsEntryYear, direct_alae_paid_including_recoveries AS PaidAllocatedlossAdjustmentExpenseAmount, direct_alae_outstanding_excluding_recoveries AS OutstandingAllocatedLossAdjustmentExpenseAmount, ZipPostalCode, RatingCoverageAKID, LocationUnitNumber\n\tFROM EXP_Logic_Loss\n),\nEXP_ConstCode_IsoPC_Rules AS (\n\tSELECT\n\tsub_line_code AS i_sub_line_code,\n\tConstructionCode AS i_ConstructionCode,\n\tIsoFireProtectionCode AS i_IsoFireProtectionCode,\n\t-- *INF*: DECODE\r\n\t-- (TRUE,\r\n\t-- in(i_ConstructionCode,'N/A',null),'00',\r\n\t-- i_ConstructionCode='B','2',\r\n\t-- i_ConstructionCode\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_ConstructionCode IN ('N/A',null), '00',\n\t    i_ConstructionCode = 'B', '2',\n\t    i_ConstructionCode\n\t) AS v_ConstructionCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_IsoFireProtectionCode='N/A' and in(i_sub_line_code,'010','015','016','017','018'),'10',\r\n\t-- i_IsoFireProtectionCode='N/A', '00',\r\n\t-- i_IsoFireProtectionCode='1', '01',\r\n\t-- in (i_IsoFireProtectionCode,'2','20'),'02',\r\n\t-- in (i_IsoFireProtectionCode,'3','13','30'),'03',\r\n\t-- i_IsoFireProtectionCode='4','04',\r\n\t-- i_IsoFireProtectionCode='5','05',\r\n\t-- i_IsoFireProtectionCode='6','06',\r\n\t-- i_IsoFireProtectionCode='7','07',\r\n\t-- i_IsoFireProtectionCode='8','08',\r\n\t-- in(i_IsoFireProtectionCode,'9','92','97'),'09',\r\n\t-- i_IsoFireProtectionCode='12','10',\r\n\t-- in(i_IsoFireProtectionCode,'OR','O4'),'04',\r\n\t-- i_IsoFireProtectionCode='8B','19',\r\n\t-- i_IsoFireProtectionCode='96','06',\r\n\t-- i_IsoFireProtectionCode\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_IsoFireProtectionCode = 'N/A' and i_sub_line_code IN ('010','015','016','017','018'), '10',\n\t    i_IsoFireProtectionCode = 'N/A', '00',\n\t    i_IsoFireProtectionCode = '1', '01',\n\t    i_IsoFireProtectionCode IN ('2','20'), '02',\n\t    i_IsoFireProtectionCode IN ('3','13','30'), '03',\n\t    i_IsoFireProtectionCode = '4', '04',\n\t    i_IsoFireProtectionCode = '5', '05',\n\t    i_IsoFireProtectionCode = '6', '06',\n\t    i_IsoFireProtectionCode = '7', '07',\n\t    i_IsoFireProtectionCode = '8', '08',\n\t    i_IsoFireProtectionCode IN ('9','92','97'), '09',\n\t    i_IsoFireProtectionCode = '12', '10',\n\t    i_IsoFireProtectionCode IN ('OR','O4'), '04',\n\t    i_IsoFireProtectionCode = '8B', '19',\n\t    i_IsoFireProtectionCode = '96', '06',\n\t    i_IsoFireProtectionCode\n\t) AS v_IsoFireProtectionCode,\n\tv_ConstructionCode AS o_ConstructionCode,\n\tv_IsoFireProtectionCode AS o_IsoFireProtectionCode\n\tFROM Union\n),\nLKP_RatingCoverage AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tSublineCode,\n\ti_RatingCoverageAKID\n\tFROM (\n\t\tSELECT distinct RatingCoverage.SublineCode as SublineCode, RatingCoverage.RatingCoverageAKID as RatingCoverageAKID FROM RatingCoverage\r\n\t\twhere Sublinecode not in ('N/A', '0')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RatingCoverageAKID ORDER BY RatingCoverageAKID) = 1\n),\nLKP_RiskTerritory AS (\n\tSELECT\n\tLocationUnitNumber,\n\tRiskTerritory,\n\tPolicyKey\n\tFROM (\n\t\tSELECT DISTINCT RL.LocationUnitNumber as LocationUnitNumber,\r\n\t\tRL.RiskTerritory as RiskTerritory,\r\n\t\tPOL.pol_key as PolicyKey \r\n\t\tFROM dbo.RiskLocation RL \r\n\t\tinner join V2.policy POL  on POL.pol_ak_id=RL.PolicyAKID and POL.crrnt_snpsht_flag=1 and RL.CurrentSnapshotFlag=1\r\n\t\tinner join dbo.PolicyCoverage PC on RL.RiskLocationAKID = PC.RiskLocationAKID and PC.CurrentSnapshotFlag=1  \r\n\t\tWHERE RL.LocationUnitNumber not in ( '0000', '000') and RL.RiskTerritory <> 'N/A'\r\n\t\tAND (PC.TypeBureauCode = 'GL' or PC.InsuranceLine = 'GeneralLiability')\r\n\t\tORDER BY PolicyKey , LocationUnitNumber\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY LocationUnitNumber) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tUnion.LossMasterCalculationId AS i_LossMasterCalculationId,\n\tUnion.PremiumMasterCalculationID AS i_PremiumMasterCalculationID,\n\tUnion.PremiumMasterRunDate AS i_PremiumMasterRunDate,\n\tUnion.loss_master_run_date AS i_LossMasterRunDate,\n\tUnion.pol_key AS i_pol_key,\n\tUnion.prim_bus_class_code AS i_prim_bus_class_code,\n\tUnion.StateProvinceCode AS i_StateProvinceCode,\n\tUnion.sub_line_code AS i_sub_line_code,\n\tUnion.PremiumMasterClassCode AS i_PremiumMasterClassCode,\n\tUnion.LossMasterClassCode AS i_LossMasterClassCode,\n\tUnion.Cause_of_Loss AS i_Cause_of_Loss,\n\tLKP_RiskTerritory.LocationUnitNumber AS i_LocationUnitNumber,\n\tUnion.TerritoryCode AS i_src_TerritoryCode,\n\tLKP_RiskTerritory.RiskTerritory AS i_TerritoryCode,\n\tUnion.pol_eff_date AS i_pol_eff_date,\n\tUnion.ClaimNum AS i_ClaimNum,\n\tUnion.ClaimantNum AS i_ClaimantNum,\n\tUnion.PremiumMasterPremium AS i_PremiumMasterPremium,\n\tUnion.PaidLossAmt AS i_PaidLossAmt,\n\tUnion.OutstandingAmt AS i_OutstandingAmt,\n\tUnion.TypeBureauCode AS i_TypeBureauCode,\n\tUnion.SourceSystemID AS i_SourceSystemID,\n\tUnion.RiskType AS i_RiskType,\n\tUnion.CoverageCode AS i_CoverageCode,\n\tEXP_ConstCode_IsoPC_Rules.o_ConstructionCode AS i_ConstructionCode,\n\tEXP_ConstCode_IsoPC_Rules.o_IsoFireProtectionCode AS i_IsoFireProtectionCode,\n\tUnion.PackageModificationAdjustmentGroupCode AS i_PackageModificationAdjustmentGroupCode,\n\tUnion.PolicyExpirationDate AS i_PolicyExpirationDate,\n\tUnion.InceptionToDatePaidLossAmount AS i_InceptionToDatePaidLossAmount,\n\tUnion.ClaimCoverageID AS i_ClaimCoverageID,\n\tUnion.AnnualStatementLineNumber AS i_AnnualStatementLineNumber,\n\tUnion.BureauCode1 AS i_BureauCode1,\n\tUnion.BureauCode2 AS i_BureauCode2,\n\tUnion.BureauCode4 AS i_BureauCode4,\n\tUnion.InsuranceSegmentCode AS i_InsuranceSegmentCode,\n\tUnion.PremiumMasterExposure AS i_PremiumMasterExposure,\n\tUnion.claim_loss_date AS i_claim_loss_date,\n\tUnion.TypeofPolicycontract AS i_TypeofPolicycontract,\n\tUnion.ClaimsEntryYear AS i_ClaimsEntryYear,\n\tUnion.PaidAllocatedlossAdjustmentExpenseAmount AS i_PaidAllocatedlossAdjustmentExpenseAmount,\n\tUnion.OutstandingAllocatedLossAdjustmentExpenseAmount AS i_OutstandingAllocatedLossAdjustmentExpenseAmount,\n\tUnion.ZipPostalCode AS i_ZipPostalCode,\n\tUnion.PremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tLKP_RatingCoverage.SublineCode AS i_SublineCode_lkp,\n\tUnion.LocationUnitNumber AS i_LocationNumber,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\tSYSDATE AS o_CreatedDate,\n\ti_PremiumMasterCalculationID AS o_PremiumMasterCalculationID,\n\ti_LossMasterCalculationId AS o_LossMasterCalculationId,\n\ti_TypeBureauCode AS o_TypeBureauCode,\n\t-- *INF*: -- Setting ProfessionalLiability to 27 and GeneralLiability to 26\r\n\t-- IIF(v_SublineCode='317', '27', '26')\n\tIFF(v_SublineCode = '317', '27', '26') AS o_BureauLineOfInsurance,\n\t'0731' AS o_BureauCompanyNumber,\n\ti_StateProvinceCode AS o_StateProvinceCode,\n\ti_PremiumMasterRunDate AS o_PremiumMasterRunDate,\n\ti_LossMasterRunDate AS o_LossMasterRunDate,\n\ti_pol_key AS o_pol_key,\n\ti_PremiumMasterClassCode AS o_PremiumMasterClassCode,\n\ti_LossMasterClassCode AS o_LossMasterClassCode,\n\ti_ClaimNum AS o_ClaimNum,\n\ti_ClaimantNum AS o_ClaimantNum,\n\t-- *INF*: IIF(length(i_pol_key)=12,RTRIM(LTRIM(i_TerritoryCode)),i_src_TerritoryCode)\r\n\t-- -- if PMS then use the lookup, else use the Duck value from the SQ\n\tIFF(length(i_pol_key) = 12, RTRIM(LTRIM(i_TerritoryCode)), i_src_TerritoryCode) AS o_RiskTerritoryCode,\n\ti_pol_eff_date AS o_PolicyEffectiveDate,\n\t-- *INF*: IIF(LTRIM(RTRIM(i_sub_line_code))='N/A',\r\n\t-- :UDF.DEFAULT_VALUE_FOR_STRINGS(i_SublineCode_lkp),\r\n\t-- LTRIM(RTRIM(i_sub_line_code)))\n\tIFF(\n\t    LTRIM(RTRIM(i_sub_line_code)) = 'N/A', UDF_DEFAULT_VALUE_FOR_STRINGS(i_SublineCode_lkp),\n\t    LTRIM(RTRIM(i_sub_line_code))\n\t) AS v_SublineCode,\n\t-- *INF*: IIF(in(i_sub_line_code ,'332','334','335') and in (i_Cause_of_Loss,'11','12'),'16',\r\n\t-- IIF(in(i_sub_line_code ,'332','334','335') and in (i_Cause_of_Loss,'21','22'),'26',\r\n\t-- IIF(in(i_sub_line_code ,'325','345'),'90', \r\n\t-- IIF(i_sub_line_code ='336' and in (i_Cause_of_Loss,'20','16'),'12',\r\n\t-- IIF(i_sub_line_code ='336' and i_Cause_of_Loss = '26','22',\r\n\t-- i_Cause_of_Loss)))))\r\n\t-- --i_Cause_of_Loss\r\n\t-- --DECODE(TRUE,IN(i_Cause_of_Loss,'11','21','31','41','51','61','71','81','91'),'01',\r\n\t-- --IN(i_Cause_of_Loss,'12','22','32','42','52','62','72','82','92','97'),'02',\r\n\t-- --IN(i_Cause_of_Loss,'05','15','25','35','45','55','65','75','85','95'),'03',\r\n\t-- --IN(i_Cause_of_Loss,'14','24','34','44','54','64','74','84','94'),'04',\r\n\t-- --IN(i_Cause_of_Loss,'08','18','28','38','48','58','68','88','98'),'05',\r\n\t-- --IN(i_Cause_of_Loss,'16','26','36','46','56','66','76','86','96'),'06',\r\n\t-- --IN(i_Cause_of_Loss,'17','27','37','47','57','67','87'),'07',\r\n\t-- --IN(i_Cause_of_Loss,'03','13','23','33','43','53','63','73','83','93'),'08',\r\n\t-- --IN(i_Cause_of_Loss,'19','29','39','49','59','69','77','79','89','99'),'09',i_Cause_of_Loss)\n\tIFF(\n\t    i_sub_line_code IN ('332','334','335') and i_Cause_of_Loss IN ('11','12'), '16',\n\t    IFF(\n\t        i_sub_line_code IN ('332','334','335')\n\t    and i_Cause_of_Loss IN ('21','22'), '26',\n\t        IFF(\n\t            i_sub_line_code IN ('325','345'), '90',\n\t            IFF(\n\t                i_sub_line_code = '336'\n\t            and i_Cause_of_Loss IN ('20','16'), '12',\n\t                IFF(\n\t                    i_sub_line_code = '336'\n\t                and i_Cause_of_Loss = '26', '22',\n\t                    i_Cause_of_Loss\n\t                )\n\t            )\n\t        )\n\t    )\n\t) AS v_CauseOfLoss_LOSS,\n\t-- *INF*: --PROD-7566 Added output port to pass 'N/A' values for premium records\r\n\t-- IIF(i_PremiumMasterCalculationID<>-1,'N/A',v_CauseOfLoss_LOSS)\n\tIFF(i_PremiumMasterCalculationID <> - 1, 'N/A', v_CauseOfLoss_LOSS) AS o_CauseOfLoss,\n\tv_SublineCode AS o_SublineCode,\n\ti_CoverageCode AS o_CoverageCode,\n\t-- *INF*: 'N/A'\r\n\t-- --i_ConstructionCode\n\t'N/A' AS o_ConstructionCode,\n\t-- *INF*: 'N/A'\r\n\t-- --i_IsoFireProtectionCode\n\t'N/A' AS o_ISOFireProtectionCode,\n\t-- *INF*: 'N/A'\r\n\t-- --DECODE(TRUE,\r\n\t-- --i_TypeBureauCode='Property',\r\n\t-- --DECODE(TRUE,\r\n\t-- --i_RiskType='BLDG','01',\r\n\t-- --i_RiskType='PP','02',\r\n\t-- --'N/A'\r\n\t-- --),\r\n\t-- \r\n\t-- --i_TypeBureauCode='Crime',\r\n\t-- --DECODE(TRUE,\r\n\t-- --i_RiskType='ClientsProperty','200',\r\n\t-- --i_RiskType='ClientsProperty_ETF','400',\r\n\t-- --i_RiskType='ComputerFraud','200',\r\n\t-- --i_RiskType='ComputerFraud_G','300',\r\n\t-- --i_RiskType='EmployeeTheft','200',\r\n\t-- --i_RiskType='EmployeeTheft_ETF','400',\r\n\t-- --i_RiskType='EmployeeTheftNameOrPosition','200',\r\n\t-- --i_RiskType='EmployeeTheftNameOrPosition_ETF','400',\r\n\t-- --i_RiskType='EmployeeTheftNameOrPosition_G','300',\r\n\t-- --i_RiskType='EmployeeTheftNameOrPosition_GETF','400',\r\n\t-- --i_RiskType='EmployeeTheftPerEmployee','300',\r\n\t-- --i_RiskType='EmployeeTheftPerEmployee_GETF','400',\r\n\t-- --i_RiskType='EmployeeTheftPerLoss','300',\r\n\t-- --i_RiskType='EmployeeTheftPerLoss_GETF','400',\r\n\t-- --i_RiskType='ForgeryAndAlteration','200',\r\n\t-- --i_RiskType='ForgeryAndAlteration_ETF','400',\r\n\t-- --i_RiskType='ForgeryAndAlteration_G','300',\r\n\t-- --i_RiskType='ForgeryAndAlteration_GETF','400',\r\n\t-- --i_RiskType='FundsTransfer','200',\r\n\t-- --i_RiskType='FundsTransfer_G','300',\r\n\t-- --i_RiskType='GuestPropertyInsidePremises','200',\r\n\t-- --i_RiskType='GuestPropertySafeDeposit','200',\r\n\t-- --i_RiskType='InsideRobbery','200',\r\n\t-- --i_RiskType='InsideRobbery_G','300',\r\n\t-- --i_RiskType='InsideRobberyOther','200',\r\n\t-- --i_RiskType='InsideRobberyOther_G','300',\r\n\t-- --i_RiskType='InsideRobberySecurities','200',\r\n\t-- --i_RiskType='InsideRobberySecurities_G','300',\r\n\t-- --i_RiskType='InsideTheftMoney','200',\r\n\t-- --i_RiskType='InsideTheftMoney_G','300',\r\n\t-- --i_RiskType='InsideTheftProperty','200',\r\n\t-- --i_RiskType='InsideTheftProperty_G','300',\r\n\t-- --i_RiskType='MoneyOrders','200',\r\n\t-- --i_RiskType='OutsidePremises','200',\r\n\t-- --i_RiskType='OutsidePremises_G','300',\r\n\t-- --'N/A'\r\n\t-- --),\r\n\t-- --'N/A')\n\t'N/A' AS v_PolicyForm_DCT,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_TypeBureauCode = 'CR',\r\n\t-- DECODE(TRUE,\r\n\t-- IN(i_BureauCode4,'01','02','03'),'200',\r\n\t-- IN(i_BureauCode4,'11','12','13'),'300',\r\n\t-- IN(i_BureauCode4,'21','22','23','27','28'),'400',\r\n\t-- '200'),\r\n\t-- \r\n\t-- i_TypeBureauCode = 'BT',\r\n\t-- DECODE(TRUE,\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'01','02','03','04','05','06','09'),'120',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'07','08'),'190',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'10','20','26'),'170',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'11','12','13','14','15','16','17','18','19','21','22','23','24','25','29','50'),'110',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'31','32','39'),'130',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'42','43','44','45'),'140',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'45'),'111',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'47'),'121',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'48'),'131',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'49','41','42','43','44'),'140',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'51','59'),'150',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'52','53'),'141',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'54','55'),'151',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'56'),'161',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'57'),'171',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'58'),'181',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'60'),'191',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'61'),'160',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'62','63'),'192',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'64'),'112',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'67','68'),'142',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'69'),'152',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'70','71','72'),'180',\r\n\t-- IN(i_BureauCode1||i_BureauCode2,'73'),'122',\r\n\t-- '199'\r\n\t-- ),\r\n\t-- i_TypeBureauCode = 'FT','199',\r\n\t-- 'N/A')\n\tDECODE(\n\t    TRUE,\n\t    i_TypeBureauCode = 'CR', DECODE(\n\t        TRUE,\n\t        i_BureauCode4 IN ('01','02','03'), '200',\n\t        i_BureauCode4 IN ('11','12','13'), '300',\n\t        i_BureauCode4 IN ('21','22','23','27','28'), '400',\n\t        '200'\n\t    ),\n\t    i_TypeBureauCode = 'BT', DECODE(\n\t        TRUE,\n\t        i_BureauCode1 || i_BureauCode2 IN ('01','02','03','04','05','06','09'), '120',\n\t        i_BureauCode1 || i_BureauCode2 IN ('07','08'), '190',\n\t        i_BureauCode1 || i_BureauCode2 IN ('10','20','26'), '170',\n\t        i_BureauCode1 || i_BureauCode2 IN ('11','12','13','14','15','16','17','18','19','21','22','23','24','25','29','50'), '110',\n\t        i_BureauCode1 || i_BureauCode2 IN ('31','32','39'), '130',\n\t        i_BureauCode1 || i_BureauCode2 IN ('42','43','44','45'), '140',\n\t        i_BureauCode1 || i_BureauCode2 IN ('45'), '111',\n\t        i_BureauCode1 || i_BureauCode2 IN ('47'), '121',\n\t        i_BureauCode1 || i_BureauCode2 IN ('48'), '131',\n\t        i_BureauCode1 || i_BureauCode2 IN ('49','41','42','43','44'), '140',\n\t        i_BureauCode1 || i_BureauCode2 IN ('51','59'), '150',\n\t        i_BureauCode1 || i_BureauCode2 IN ('52','53'), '141',\n\t        i_BureauCode1 || i_BureauCode2 IN ('54','55'), '151',\n\t        i_BureauCode1 || i_BureauCode2 IN ('56'), '161',\n\t        i_BureauCode1 || i_BureauCode2 IN ('57'), '171',\n\t        i_BureauCode1 || i_BureauCode2 IN ('58'), '181',\n\t        i_BureauCode1 || i_BureauCode2 IN ('60'), '191',\n\t        i_BureauCode1 || i_BureauCode2 IN ('61'), '160',\n\t        i_BureauCode1 || i_BureauCode2 IN ('62','63'), '192',\n\t        i_BureauCode1 || i_BureauCode2 IN ('64'), '112',\n\t        i_BureauCode1 || i_BureauCode2 IN ('67','68'), '142',\n\t        i_BureauCode1 || i_BureauCode2 IN ('69'), '152',\n\t        i_BureauCode1 || i_BureauCode2 IN ('70','71','72'), '180',\n\t        i_BureauCode1 || i_BureauCode2 IN ('73'), '122',\n\t        '199'\n\t    ),\n\t    i_TypeBureauCode = 'FT', '199',\n\t    'N/A'\n\t) AS v_PolicyForm_PMS,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_SourceSystemID='PMS',v_PolicyForm_PMS,\r\n\t-- IN(i_SourceSystemID,'DCT','DUC'),v_PolicyForm_DCT\r\n\t-- )\n\tDECODE(\n\t    TRUE,\n\t    i_SourceSystemID = 'PMS', v_PolicyForm_PMS,\n\t    i_SourceSystemID IN ('DCT','DUC'), v_PolicyForm_DCT\n\t) AS v_PolicyForm,\n\t-- *INF*: 'N/A'\r\n\t-- --:UDF.DEFAULT_VALUE_FOR_STRINGS(v_PolicyForm)\n\t'N/A' AS o_PolicyForm,\n\ti_PremiumMasterPremium AS o_PremiumMasterDirectWrittenPremiumAmount,\n\ti_PaidLossAmt AS o_PaidLossAmount,\n\ti_OutstandingAmt AS o_OutstandingLossAmount,\n\ti_PolicyExpirationDate AS o_PolicyExpirationDate,\n\t-- *INF*: IIF(ISNULL(i_InceptionToDatePaidLossAmount), 0, i_InceptionToDatePaidLossAmount)\r\n\t-- \n\tIFF(i_InceptionToDatePaidLossAmount IS NULL, 0, i_InceptionToDatePaidLossAmount) AS v_InceptionToDatePaidLossAmount,\n\t-- *INF*: DECODE(True,\r\n\t-- i_PaidAllocatedlossAdjustmentExpenseAmount<>0, 0,\r\n\t-- i_OutstandingAllocatedLossAdjustmentExpenseAmount<>0,0,\r\n\t-- v_InceptionToDatePaidLossAmount\r\n\t-- )\n\tDECODE(\n\t    True,\n\t    i_PaidAllocatedlossAdjustmentExpenseAmount <> 0, 0,\n\t    i_OutstandingAllocatedLossAdjustmentExpenseAmount <> 0, 0,\n\t    v_InceptionToDatePaidLossAmount\n\t) AS o_InceptionToDatePaidLossAmount,\n\t-- *INF*: IIF(ISNULL(i_ClaimCoverageID), -1, i_ClaimCoverageID)\n\tIFF(i_ClaimCoverageID IS NULL, - 1, i_ClaimCoverageID) AS o_ClaimCoverageID,\n\ti_AnnualStatementLineNumber AS o_AnnualStatementLineNumber,\n\t-- *INF*: IIF(ISNULL(i_PremiumMasterExposure), 0,i_PremiumMasterExposure )\r\n\t-- \n\tIFF(i_PremiumMasterExposure IS NULL, 0, i_PremiumMasterExposure) AS v_PremiumMasterExposure,\n\t-- *INF*: IIF(v_PremiumMasterExposure > 0 AND i_PremiumMasterPremium < 0, (v_PremiumMasterExposure * -1), v_PremiumMasterExposure)\n\tIFF(\n\t    v_PremiumMasterExposure > 0 AND i_PremiumMasterPremium < 0, (v_PremiumMasterExposure * - 1),\n\t    v_PremiumMasterExposure\n\t) AS o_PremiumMasterExposure,\n\t-- *INF*: IIF(ISNULL(i_OutstandingAllocatedLossAdjustmentExpenseAmount), 0, i_OutstandingAllocatedLossAdjustmentExpenseAmount)\n\tIFF(\n\t    i_OutstandingAllocatedLossAdjustmentExpenseAmount IS NULL, 0,\n\t    i_OutstandingAllocatedLossAdjustmentExpenseAmount\n\t) AS o_OutstandingAllocatedLossAdjustmentExpenseAmount,\n\ti_claim_loss_date AS o_claim_loss_date,\n\ti_TypeofPolicycontract AS o_TypeofPolicycontract,\n\ti_ClaimsEntryYear AS o_ClaimsEntryYear,\n\ti_PaidAllocatedlossAdjustmentExpenseAmount AS o_PaidAllocatedlossAdjustmentExpenseAmount,\n\ti_ZipPostalCode AS o_ZipPostalCode,\n\t-- *INF*: IIF(ISNULL(i_PremiumTransactionEffectiveDate),TO_DATE('18000101','YYYYMMDD'),i_PremiumTransactionEffectiveDate)\n\tIFF(\n\t    i_PremiumTransactionEffectiveDate IS NULL, TO_TIMESTAMP('18000101', 'YYYYMMDD'),\n\t    i_PremiumTransactionEffectiveDate\n\t) AS o_PremiumTransactionEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\t\r\n\t-- i_SourceSystemID='DUC','DCT',\r\n\t-- i_SourceSystemID='DCT','DCT',\r\n\t-- 'PMS')\n\tDECODE(\n\t    TRUE,\n\t    i_SourceSystemID = 'DUC', 'DCT',\n\t    i_SourceSystemID = 'DCT', 'DCT',\n\t    'PMS'\n\t) AS v_DCT_SRC_ID,\n\t-- *INF*: IIF(v_DCT_SRC_ID='DCT',:LKP.LKP_Policy(ltrim(rtrim(i_pol_key))),'B')\n\tIFF(v_DCT_SRC_ID = 'DCT', LKP_POLICY_ltrim_rtrim_i_pol_key.pol_key, 'B') AS v_Policy_SBOP,\n\t-- *INF*: IIF(v_Policy_SBOP<>'B' and v_DCT_SRC_ID='DCT',\r\n\t-- to_char(:LKP.LKP_Policy_SBOP(i_pol_key)))\n\tIFF(\n\t    v_Policy_SBOP <> 'B' and v_DCT_SRC_ID = 'DCT',\n\t    to_char(LKP_POLICY_SBOP_i_pol_key.ProgramAKId)\n\t) AS v_SBOP_GL_PR,\n\t-- *INF*: decode(true,\r\n\t-- v_SBOP_GL_PR='38','Institutional',\r\n\t-- v_SBOP_GL_PR='39','Service',\r\n\t-- v_SBOP_GL_PR='81','Service',\r\n\t-- isnull(v_SBOP_GL_PR),'N/A')\r\n\t-- \r\n\t-- -- For Programid 38 Description is Childcare\r\n\t-- -- For Programid 39 Description is  Personal apperance\r\n\t-- -- For Programid 81 Description is Circuit Workout\r\n\t-- -- Other than Program Code 38,39 and 81, we are making as N/A\n\tdecode(\n\t    true,\n\t    v_SBOP_GL_PR = '38', 'Institutional',\n\t    v_SBOP_GL_PR = '39', 'Service',\n\t    v_SBOP_GL_PR = '81', 'Service',\n\t    v_SBOP_GL_PR IS NULL, 'N/A'\n\t) AS v_Program_Desc_SBOP,\n\t-- *INF*: IIF(v_DCT_SRC_ID='DCT' and v_Program_Desc_SBOP='N/A',\r\n\t-- :lkp.LKP_Policy_GL_PR(i_pol_key))\n\tIFF(v_DCT_SRC_ID = 'DCT' and v_Program_Desc_SBOP = 'N/A',) AS v_Non_SBOP_GL_PR,\n\t-- *INF*: :LKP.LKP_archCFDCOccpancyType(ltrim(rtrim(i_pol_key)))\n\tLKP_ARCHCFDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key.OccupancyType AS v_CF_Occupancy_Type,\n\t-- *INF*: IIF(ISNULL(v_CF_Occupancy_Type),:LKP.LKP_archGLDCOccpancyType(ltrim(rtrim(i_pol_key))),v_CF_Occupancy_Type)\n\tIFF(\n\t    v_CF_Occupancy_Type IS NULL, LKP_ARCHGLDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key.OccupancyType,\n\t    v_CF_Occupancy_Type\n\t) AS v_GL_OCcupancy_Type,\n\t-- *INF*: IIF(v_DCT_SRC_ID='DCT' and not isnull(v_Non_SBOP_GL_PR),\r\n\t-- v_GL_OCcupancy_Type,'N/A')\n\tIFF(v_DCT_SRC_ID = 'DCT' and v_Non_SBOP_GL_PR IS NOT NULL, v_GL_OCcupancy_Type, 'N/A') AS Non_SBOP_OccupancyType,\n\t-- *INF*: IIF(v_DCT_SRC_ID='DCT' and NOT isnull(v_SBOP_GL_PR),v_Program_Desc_SBOP,\r\n\t-- IIF (v_DCT_SRC_ID='DCT' and NOT isnull(v_Non_SBOP_GL_PR),:LKP.LKP_SupPackageModificationAdjustmentGroup(v_DCT_SRC_ID,Non_SBOP_OccupancyType),\r\n\t-- IIF (v_DCT_SRC_ID='PMS',:LKP.LKP_SupPackageModificationAdjustmentGroup(v_DCT_SRC_ID,i_PackageModificationAdjustmentGroupCode),'N/A')))\n\tIFF(\n\t    v_DCT_SRC_ID = 'DCT' and v_SBOP_GL_PR IS NOT NULL, v_Program_Desc_SBOP,\n\t    IFF(\n\t        v_DCT_SRC_ID = 'DCT'\n\t    and v_Non_SBOP_GL_PR IS NOT NULL,\n\t        LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_Non_SBOP_OccupancyType.PackageModificationAdjustmentGroupDescription,\n\t        IFF(\n\t                v_DCT_SRC_ID = 'PMS',\n\t                LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_i_PackageModificationAdjustmentGroupCode.PackageModificationAdjustmentGroupDescription,\n\t                'N/A'\n\t            )\n\t    )\n\t) AS v_Occupancy_Desc,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_Occupancy_Desc)\n\tUDF_DEFAULT_VALUE_FOR_STRINGS(v_Occupancy_Desc) AS PackageModificationAdjustmentGroupDescription,\n\t-- *INF*: ltrim(rtrim(i_LocationNumber))\n\tltrim(rtrim(i_LocationNumber)) AS o_LocationNumber\n\tFROM EXP_ConstCode_IsoPC_Rules\n\t -- Manually join with Union\n\tLEFT JOIN LKP_RatingCoverage\n\tON LKP_RatingCoverage.RatingCoverageAKID = Union.RatingCoverageAKID\n\tLEFT JOIN LKP_RiskTerritory\n\tON LKP_RiskTerritory.PolicyKey = Union.pol_key\n\tLEFT JOIN LKP_POLICY LKP_POLICY_ltrim_rtrim_i_pol_key\n\tON LKP_POLICY_ltrim_rtrim_i_pol_key.pol_key = ltrim(rtrim(i_pol_key))\n\n\tLEFT JOIN LKP_POLICY_SBOP LKP_POLICY_SBOP_i_pol_key\n\tON LKP_POLICY_SBOP_i_pol_key.pol_key = i_pol_key\n\n\tLEFT JOIN LKP_POLICY_GL_PR LKP_POLICY_GL_PR_i_pol_key\n\tON LKP_POLICY_GL_PR_i_pol_key. = i_pol_key\n\n\tLEFT JOIN LKP_ARCHCFDCOCCPANCYTYPE LKP_ARCHCFDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key\n\tON LKP_ARCHCFDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key.PolicyNumber = ltrim(rtrim(i_pol_key))\n\n\tLEFT JOIN LKP_ARCHGLDCOCCPANCYTYPE LKP_ARCHGLDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key\n\tON LKP_ARCHGLDCOCCPANCYTYPE_ltrim_rtrim_i_pol_key.PolicyNumber = ltrim(rtrim(i_pol_key))\n\n\tLEFT JOIN LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_Non_SBOP_OccupancyType\n\tON LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_Non_SBOP_OccupancyType.SourceSystemId = v_DCT_SRC_ID\n\tAND LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_Non_SBOP_OccupancyType.PackageModificationAdjustmentGroupCode = Non_SBOP_OccupancyType\n\n\tLEFT JOIN LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_i_PackageModificationAdjustmentGroupCode\n\tON LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_i_PackageModificationAdjustmentGroupCode.SourceSystemId = v_DCT_SRC_ID\n\tAND LKP_SUPPACKAGEMODIFICATIONADJUSTMENTGROUP_v_DCT_SRC_ID_i_PackageModificationAdjustmentGroupCode.PackageModificationAdjustmentGroupCode = i_PackageModificationAdjustmentGroupCode\n\n),\nFIL_GL_PL AS (\n\tSELECT\n\to_AuditID AS AuditID, \n\to_CreatedDate AS CreatedDate, \n\to_PremiumMasterCalculationID AS PremiumMasterCalculationID, \n\to_LossMasterCalculationId AS LossMasterCalculationId, \n\to_TypeBureauCode AS TypeBureauCode, \n\to_BureauLineOfInsurance AS BureauLineOfInsurance, \n\to_BureauCompanyNumber AS BureauCompanyNumber, \n\to_StateProvinceCode AS StateProvinceCode, \n\to_PremiumMasterRunDate AS PremiumMasterRunDate, \n\to_LossMasterRunDate AS LossMasterRunDate, \n\to_pol_key AS pol_key, \n\to_PremiumMasterClassCode AS PremiumMasterClassCode, \n\to_LossMasterClassCode AS LossMasterClassCode, \n\to_ClaimNum AS ClaimNum, \n\to_ClaimantNum AS ClaimantNum, \n\to_RiskTerritoryCode AS RiskTerritoryCode, \n\to_PolicyEffectiveDate AS PolicyEffectiveDate, \n\to_CauseOfLoss AS CauseOfLoss, \n\to_SublineCode AS SublineCode, \n\to_CoverageCode AS CoverageCode, \n\to_ConstructionCode AS ConstructionCode, \n\to_ISOFireProtectionCode AS ISOFireProtectionCode, \n\tPackageModificationAdjustmentGroupDescription, \n\to_PolicyForm AS PolicyForm, \n\to_PremiumMasterDirectWrittenPremiumAmount AS PremiumMasterDirectWrittenPremiumAmount, \n\to_PaidLossAmount AS PaidLossAmount, \n\to_OutstandingLossAmount AS OutstandingLossAmount, \n\to_PolicyExpirationDate AS PolicyExpirationDate, \n\to_InceptionToDatePaidLossAmount AS InceptionToDatePaidLossAmount, \n\to_ClaimCoverageID AS ClaimCoverageID, \n\to_AnnualStatementLineNumber AS AnnualStatementLineNumber, \n\to_PremiumMasterExposure AS PremiumMasterExposure, \n\to_OutstandingAllocatedLossAdjustmentExpenseAmount AS OutstandingAllocatedLossAdjustmentExpenseAmount, \n\to_claim_loss_date AS claim_loss_date, \n\to_TypeofPolicycontract AS TypeofPolicycontract, \n\to_ClaimsEntryYear AS ClaimsEntryYear, \n\to_PaidAllocatedlossAdjustmentExpenseAmount AS PaidAllocatedlossAdjustmentExpenseAmount, \n\to_ZipPostalCode AS ZipPostalCode, \n\to_PremiumTransactionEffectiveDate AS PremiumTransactionEffectiveDate, \n\to_LocationNumber\n\tFROM EXP_Values\n\tWHERE SUBSTR(pol_key,1,2) <>'HH'\n),\nRTR_GL_PL AS (\n\tSELECT\n\tAuditID,\n\tCreatedDate,\n\tPremiumMasterCalculationID,\n\tLossMasterCalculationId,\n\tTypeBureauCode,\n\tBureauLineOfInsurance,\n\tBureauCompanyNumber,\n\tStateProvinceCode,\n\tPremiumMasterRunDate,\n\tLossMasterRunDate,\n\tpol_key,\n\tPremiumMasterClassCode,\n\tLossMasterClassCode,\n\tClaimNum,\n\tClaimantNum,\n\tRiskTerritoryCode,\n\tPolicyEffectiveDate,\n\tCauseOfLoss,\n\tSublineCode,\n\tCoverageCode,\n\tConstructionCode,\n\tISOFireProtectionCode,\n\tPackageModificationAdjustmentGroupDescription,\n\tPolicyForm,\n\tPremiumMasterDirectWrittenPremiumAmount,\n\tPaidLossAmount,\n\tOutstandingLossAmount,\n\tPolicyExpirationDate,\n\tInceptionToDatePaidLossAmount,\n\tClaimCoverageID,\n\tAnnualStatementLineNumber,\n\tPremiumMasterExposure,\n\tOutstandingAllocatedLossAdjustmentExpenseAmount,\n\tclaim_loss_date,\n\tTypeofPolicycontract,\n\tClaimsEntryYear,\n\tPaidAllocatedlossAdjustmentExpenseAmount,\n\tZipPostalCode,\n\tPremiumTransactionEffectiveDate,\n\to_LocationNumber AS LocationNumber\n\tFROM FIL_GL_PL\n),\nRTR_GL_PL_PL AS (SELECT * FROM RTR_GL_PL WHERE SublineCode='317'),\nRTR_GL_PL_DEFAULT1 AS (SELECT * FROM RTR_GL_PL WHERE NOT ( (SublineCode='317') )),\nISSGeneralLiabilityExtract AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL_GL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSGeneralLiabilityExtract\n\t(AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, SublineCode, PackageModificationAdjustmentGroupDescription, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, WrittenExposure, OutstandingAllocatedLossAdjustmentExpenseAmount, Claimlossdate, TypeofPolicycontract, ClaimsEntryYear, PaidAllocatedlossAdjustmentExpenseAmount, ZipPostalCode, TransactionEffectiveDate, LocationNumber)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tPremiumMasterCalculationID AS EDWPREMIUMMASTERCALCULATIONPKID, \n\tLossMasterCalculationId AS EDWLOSSMASTERCALCULATIONPKID, \n\tTYPEBUREAUCODE, \n\tBUREAULINEOFINSURANCE, \n\tBUREAUCOMPANYNUMBER, \n\tSTATEPROVINCECODE, \n\tPREMIUMMASTERRUNDATE, \n\tLOSSMASTERRUNDATE, \n\tpol_key AS POLICYKEY, \n\tPREMIUMMASTERCLASSCODE, \n\tLOSSMASTERCLASSCODE, \n\tClaimNum AS CLAIMNUMBER, \n\tClaimantNum AS CLAIMANTNUMBER, \n\tRISKTERRITORYCODE, \n\tPOLICYEFFECTIVEDATE, \n\tCAUSEOFLOSS, \n\tSUBLINECODE, \n\tPACKAGEMODIFICATIONADJUSTMENTGROUPDESCRIPTION, \n\tPREMIUMMASTERDIRECTWRITTENPREMIUMAMOUNT, \n\tPAIDLOSSAMOUNT, \n\tOUTSTANDINGLOSSAMOUNT, \n\tPOLICYEXPIRATIONDATE, \n\tINCEPTIONTODATEPAIDLOSSAMOUNT, \n\tClaimCoverageID AS CLAIMANTCOVERAGEDETAILID, \n\tANNUALSTATEMENTLINENUMBER, \n\tPremiumMasterExposure AS WRITTENEXPOSURE, \n\tOUTSTANDINGALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tclaim_loss_date AS CLAIMLOSSDATE, \n\tTYPEOFPOLICYCONTRACT, \n\tCLAIMSENTRYYEAR, \n\tPAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tZIPPOSTALCODE, \n\tPremiumTransactionEffectiveDate AS TRANSACTIONEFFECTIVEDATE, \n\tLOCATIONNUMBER\n\tFROM RTR_GL_PL_DEFAULT1\n),\nISSProfessionalLiabilityExtract AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL_PL}\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.ISSProfessionalLiabilityExtract\n\t(AuditId, CreatedDate, EDWPremiumMasterCalculationPKId, EDWLossMasterCalculationPKId, TypeBureauCode, BureauLineOfInsurance, BureauCompanyNumber, StateProvinceCode, PremiumMasterRunDate, LossMasterRunDate, PolicyKey, PremiumMasterClassCode, LossMasterClassCode, ClaimNumber, ClaimantNumber, RiskTerritoryCode, PolicyEffectiveDate, CauseOfLoss, SublineCode, PackageModificationAdjustmentGroupDescription, PremiumMasterDirectWrittenPremiumAmount, PaidLossAmount, OutstandingLossAmount, PolicyExpirationDate, InceptionToDatePaidLossAmount, ClaimantCoverageDetailId, AnnualStatementLineNumber, WrittenExposure, OutstandingAllocatedLossAdjustmentExpenseAmount, Claimlossdate, TypeofPolicycontract, ClaimsEntryYear, PaidAllocatedlossAdjustmentExpenseAmount, ZipPostalCode, TransactionEffectiveDate, LocationNumber)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tPremiumMasterCalculationID AS EDWPREMIUMMASTERCALCULATIONPKID, \n\tLossMasterCalculationId AS EDWLOSSMASTERCALCULATIONPKID, \n\tTYPEBUREAUCODE, \n\tBUREAULINEOFINSURANCE, \n\tBUREAUCOMPANYNUMBER, \n\tSTATEPROVINCECODE, \n\tPREMIUMMASTERRUNDATE, \n\tLOSSMASTERRUNDATE, \n\tpol_key AS POLICYKEY, \n\tPREMIUMMASTERCLASSCODE, \n\tLOSSMASTERCLASSCODE, \n\tClaimNum AS CLAIMNUMBER, \n\tClaimantNum AS CLAIMANTNUMBER, \n\tRISKTERRITORYCODE, \n\tPOLICYEFFECTIVEDATE, \n\tCAUSEOFLOSS, \n\tSUBLINECODE, \n\tPACKAGEMODIFICATIONADJUSTMENTGROUPDESCRIPTION, \n\tPREMIUMMASTERDIRECTWRITTENPREMIUMAMOUNT, \n\tPAIDLOSSAMOUNT, \n\tOUTSTANDINGLOSSAMOUNT, \n\tPOLICYEXPIRATIONDATE, \n\tINCEPTIONTODATEPAIDLOSSAMOUNT, \n\tClaimCoverageID AS CLAIMANTCOVERAGEDETAILID, \n\tANNUALSTATEMENTLINENUMBER, \n\tPremiumMasterExposure AS WRITTENEXPOSURE, \n\tOUTSTANDINGALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tclaim_loss_date AS CLAIMLOSSDATE, \n\tTYPEOFPOLICYCONTRACT, \n\tCLAIMSENTRYYEAR, \n\tPAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tZIPPOSTALCODE, \n\tPremiumTransactionEffectiveDate AS TRANSACTIONEFFECTIVEDATE, \n\tLOCATIONNUMBER\n\tFROM RTR_GL_PL_PL\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME_DATAMART": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NO_OF_QUARTERS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_1": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL_GL": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL_PL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}