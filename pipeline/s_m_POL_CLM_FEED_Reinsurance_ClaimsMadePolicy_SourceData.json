{
    "name": "s_m_POL_CLM_FEED_Reinsurance_ClaimsMadePolicy_SourceData",
    "properties": {
        "activities": [
            {
                "name": "m_POL_CLM_FEED_Reinsurance_ClaimsMadePolicy_SourceData",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Get_Max_Sapiens_SourceSequenceNumber AS (\n\tSELECT\n\tSource_Seq_Num,\n\tID\n\tFROM (\n\t\tSELECT MAX(A.SourceSequenceNumber) AS Source_Seq_Num,\r\n\t\t\t1 AS ID\r\n\t\tFROM (\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaimRestate\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaimRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicyRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicyRestate\t) A\r\n\t\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY Source_Seq_Num DESC) = 1\n),\nSQ_SapiensReinsuranceHeaderExtract AS (\n\tSELECT DISTINCT RTRIM(A.POLICY_NO) as POLICY_NO,\r\n\t\tRTRIM(AccountingProductCode) as AccountingProductCode,\r\n\t\tRTRIM(AnnualStatementLineCode) as AnnualStatementLineCode,\r\n\t\tRTRIM(CompanyCode) as CompanyCode,\r\n\t\tRTRIM(LineOfBusiness) as LineOfBusiness,\r\n\t\tRTRIM(StrategicProfitCenter) as StrategicProfitCenter,\r\n\t\tRTRIM(ProductCode) as ProductCode,\r\n\t\tRTRIM(RiskState) as RiskState,\r\n\t\tISNULL(RTRIM(SubASLCode), '0') as SubASLCode,\r\n\t\tISNULL(RTRIM(ReinsuranceUmbrellaLayer), '0') as ReinsuranceUmbrellaLayer\r\n\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.SapiensReinsuranceHeaderExtract A\r\n\tINNER JOIN (\r\n\t\tSELECT SOURCE_SEQ_NUM,\r\n\t\t\tACP AccountingProductCode,\r\n\t\t\tASL AnnualStatementLineCode,\r\n\t\t\tCOM CompanyCode,\r\n\t\t\tINM InsuredName,\r\n\t\t\tLOB LineOfBusiness,\r\n\t\t\tPCN StrategicProfitCenter,\r\n\t\t\tPDT ProductCode,\r\n\t\t\tRKS RiskState,\r\n\t\t\tSAS SubASLCode,\r\n\t\t\tZRP RatingPlanAbbrevation,\r\n\t\t\tSNA ReinsuranceUmbrellaLayer\r\n\t\tFROM (\r\n\t\t\tSELECT SOURCE_SEQ_NUM,\r\n\t\t\t\tATTR_CODE,\r\n\t\t\t\tATTR_VAL\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.SapiensReinsuranceAttributesExtract\r\n\t\t\tWHERE AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\t\t) C\r\n\t\tpivot(max(ATTR_VAL) FOR ATTR_CODE IN (ACP, ASL, COM, INM, LOB, PCN, PDT, RKS, SAS, ZRP, SNA)) PV\r\n\t\t) B ON A.SOURCE_SEQ_NUM = B.SOURCE_SEQ_NUM\r\n\t\tAND A.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tWHERE DATA_SOURCE = 'SRL' \r\n\t@{pipeline().parameters.FILTER_CLAUSE} \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nLKP_Existing_Policy AS (\n\tSELECT\n\tPOLICY_NO,\n\tAccountingProductCode,\n\tAnnualStatementLineCode,\n\tCompanyCode,\n\tLineOfBusiness,\n\tStrategicProfitCenter,\n\tProductCode,\n\tRiskState,\n\tSubASLCode,\n\tReinsuranceUmbrellaLayer\n\tFROM (\n\t\tSELECT RTRIM(A.POLICY_NO) AS POLICY_NO,\r\n\t\t\tRTRIM(AccountingProductCode) AS AccountingProductCode,\r\n\t\t\tRTRIM(AnnualStatementLineCode) AS AnnualStatementLineCode,\r\n\t\t\tRTRIM(CompanyCode) AS CompanyCode,\r\n\t\t\tRTRIM(InsuredName) AS InsuredName,\r\n\t\t\tRTRIM(LineOfBusiness) AS LineOfBusiness,\r\n\t\t\tRTRIM(StrategicProfitCenter) AS StrategicProfitCenter,\r\n\t\t\tRTRIM(ProductCode) AS ProductCode,\r\n\t\t\tRTRIM(RiskState) AS RiskState,\r\n\t\t\tISNULL(RTRIM(SubASLCode), '0') AS SubASLCode,\r\n\t\t\tRTRIM(RatingPlanAbbrevation) AS RatingPlanAbbrevation,\r\n\t\t\tISNULL(RTRIM(ReinsuranceUmbrellaLayer), '0') AS ReinsuranceUmbrellaLayer\r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract A\r\n\t\tINNER JOIN (\r\n\t\t\tSELECT SOURCE_SEQ_NUM,\r\n\t\t\t\tACP AccountingProductCode,\r\n\t\t\t\tASL AnnualStatementLineCode,\r\n\t\t\t\tCOM CompanyCode,\r\n\t\t\t\tINM InsuredName,\r\n\t\t\t\tLOB LineOfBusiness,\r\n\t\t\t\tPCN StrategicProfitCenter,\r\n\t\t\t\tPDT ProductCode,\r\n\t\t\t\tRKS RiskState,\r\n\t\t\t\tSAS SubASLCode,\r\n\t\t\t\tZRP RatingPlanAbbrevation,\r\n\t\t\t\tSNA ReinsuranceUmbrellaLayer\r\n\t\t\tFROM (\r\n\t\t\t\tSELECT SOURCE_SEQ_NUM,\r\n\t\t\t\t\tATTR_CODE,\r\n\t\t\t\t\tATTR_VAL\r\n\t\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchSapiensReinsuranceAttributesExtract\r\n\t\t\t\t) Z\r\n\t\t\tpivot(max(ATTR_VAL) FOR ATTR_CODE IN (ACP, ASL, COM, INM, LOB, PCN, PDT, RKS, SAS, ZRP, SNA)) PV\r\n\t\t\t) B ON A.SOURCE_SEQ_NUM = B.SOURCE_SEQ_NUM\r\n\t\tINNER JOIN (\r\n\t\t\tSELECT POLICY_NO,\r\n\t\t\t\tmax(CASE WHEN DOCUMENT_TYPE = 'N' THEN SOURCE_SEQ_NUM ELSE 0 END) max_SOURCE_SEQ_NUM\r\n\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract E\r\n\t\t\tWHERE DATA_SOURCE = 'SRP'\r\n\t\t\tGROUP BY POLICY_NO\r\n\t\t\t) D ON A.POLICY_NO = D.POLICY_NO\r\n\t\t\tAND A.SOURCE_SEQ_NUM > max_SOURCE_SEQ_NUM\r\n\t\tWHERE DATA_SOURCE = 'SRP'\r\n\t\t\tAND DOCUMENT_TYPE = 'P'\r\n\t\t\tAND EXISTS (\r\n\t\t\t\tSELECT 1\r\n\t\t\t\tFROM (\r\n\t\t\t\t\tSELECT POLICY_NO\r\n\t\t\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract\r\n\t\t\t\t\tWHERE DATA_SOURCE = 'SRL'\r\n\t\t\t\t\t\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\t\t\t\tUNION\r\n\t\t\t\t\tSELECT POLICY_NO\r\n\t\t\t\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.SapiensReinsuranceHeaderExtract\r\n\t\t\t\t\tWHERE DATA_SOURCE = 'SRL'\r\n\t\t\t\t\t\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\t\t\t\t) C\r\n\t\t\t\tWHERE A.POLICY_NO = C.POLICY_NO\r\n\t\t\t\t)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY POLICY_NO,AccountingProductCode,AnnualStatementLineCode,CompanyCode,LineOfBusiness,StrategicProfitCenter,ProductCode,RiskState,SubASLCode,ReinsuranceUmbrellaLayer ORDER BY POLICY_NO DESC) = 1\n),\nEXP_SrcData AS (\n\tSELECT\n\tLKP_Existing_Policy.POLICY_NO AS LKP_POLICY_NO,\n\tSQ_SapiensReinsuranceHeaderExtract.POLICY_NO,\n\t-- *INF*: LTRIM(RTRIM(POLICY_NO))\n\tLTRIM(RTRIM(POLICY_NO)) AS O_POLICY_NO,\n\tSQ_SapiensReinsuranceHeaderExtract.AccountingProductCode,\n\tSQ_SapiensReinsuranceHeaderExtract.AnnualStatementLineCode,\n\tSQ_SapiensReinsuranceHeaderExtract.CompanyCode,\n\tSQ_SapiensReinsuranceHeaderExtract.LineOfBusiness,\n\tSQ_SapiensReinsuranceHeaderExtract.StrategicProfitCenter,\n\tSQ_SapiensReinsuranceHeaderExtract.ProductCode,\n\tSQ_SapiensReinsuranceHeaderExtract.RiskState,\n\tSQ_SapiensReinsuranceHeaderExtract.SubASLCode,\n\tSQ_SapiensReinsuranceHeaderExtract.ReinsuranceUmbrellaLayer\n\tFROM SQ_SapiensReinsuranceHeaderExtract\n\tLEFT JOIN LKP_Existing_Policy\n\tON LKP_Existing_Policy.POLICY_NO = SQ_SapiensReinsuranceHeaderExtract.POLICY_NO AND LKP_Existing_Policy.AccountingProductCode = SQ_SapiensReinsuranceHeaderExtract.AccountingProductCode AND LKP_Existing_Policy.AnnualStatementLineCode = SQ_SapiensReinsuranceHeaderExtract.AnnualStatementLineCode AND LKP_Existing_Policy.CompanyCode = SQ_SapiensReinsuranceHeaderExtract.CompanyCode AND LKP_Existing_Policy.LineOfBusiness = SQ_SapiensReinsuranceHeaderExtract.LineOfBusiness AND LKP_Existing_Policy.StrategicProfitCenter = SQ_SapiensReinsuranceHeaderExtract.StrategicProfitCenter AND LKP_Existing_Policy.ProductCode = SQ_SapiensReinsuranceHeaderExtract.ProductCode AND LKP_Existing_Policy.RiskState = SQ_SapiensReinsuranceHeaderExtract.RiskState AND LKP_Existing_Policy.SubASLCode = SQ_SapiensReinsuranceHeaderExtract.SubASLCode AND LKP_Existing_Policy.ReinsuranceUmbrellaLayer = SQ_SapiensReinsuranceHeaderExtract.ReinsuranceUmbrellaLayer\n),\nFIL_Existing_PoliciesForClaims AS (\n\tSELECT\n\tLKP_POLICY_NO, \n\tO_POLICY_NO AS POLICY_NO, \n\tAccountingProductCode, \n\tAnnualStatementLineCode, \n\tCompanyCode, \n\tLineOfBusiness, \n\tStrategicProfitCenter, \n\tProductCode, \n\tRiskState, \n\tSubASLCode, \n\tReinsuranceUmbrellaLayer\n\tFROM EXP_SrcData\n\tWHERE ISNULL(LKP_POLICY_NO)\n),\nLKP_Dates AS (\n\tSELECT\n\tpol_eff_date,\n\tRatingPlanAbbreviation,\n\tInsuredName,\n\tpol_exp_date,\n\tpol_key\n\tFROM (\n\t\tselect pol_key as pol_key,case when Min_RatingPlanAbbreviation is null or Min_RatingPlanAbbreviation='N/A' then max_RatingPlanAbbreviation else Min_RatingPlanAbbreviation end as RatingPlanAbbreviation,InsuredName as InsuredName,pol_eff_date as pol_eff_date,pol_exp_date as pol_exp_date from (\r\n\t\tselect pol_key,min(RatingPlanAbbreviation) Min_RatingPlanAbbreviation,max(RatingPlanAbbreviation) max_RatingPlanAbbreviation,E.name InsuredName,pol_eff_date,pol_exp_date from @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.claim_loss_transaction_fact A\r\n\t\tinner join @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.policy_dim B\r\n\t\ton A.pol_dim_id=B.pol_dim_id\r\n\t\tinner join @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.InsuranceReferenceDim C\r\n\t\ton A.InsuranceReferenceDimId=C.InsuranceReferenceDimId\r\n\t\tinner join @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.calendar_dim D\r\n\t\ton A.claim_trans_date_id=D.clndr_id\r\n\t\tinner join @{pipeline().parameters.LKP_DATABASE_NAME}.@{pipeline().parameters.LKP_TABLE_OWNER}.VWContractCustomerDim E\r\n\t\ton A.contract_cust_dim_id=E.contract_cust_dim_id\r\n\t\tgroup by pol_key,pol_eff_date,pol_exp_date,E.name) A\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_eff_date DESC) = 1\n),\nEXP_Defaults AS (\n\tSELECT\n\tLKP_Dates.pol_eff_date,\n\tLKP_Dates.pol_exp_date,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tCURRENT_TIMESTAMP AS CreatedDate,\n\tCURRENT_TIMESTAMP AS ModifiedDate,\n\tFIL_Existing_PoliciesForClaims.POLICY_NO AS PolicyKey,\n\t'P' AS DocumntType,\n\tpol_eff_date AS AccountingDate,\n\t0.0 AS MonthlyTotalDirectWrittenPremium,\n\tFIL_Existing_PoliciesForClaims.ProductCode,\n\tFIL_Existing_PoliciesForClaims.StrategicProfitCenter AS StrategicProfitCenterAbbreviation,\n\tFIL_Existing_PoliciesForClaims.AccountingProductCode,\n\tFIL_Existing_PoliciesForClaims.LineOfBusiness AS InsuranceReferenceLineOfBusinessCode,\n\tFIL_Existing_PoliciesForClaims.AnnualStatementLineCode AS ASLCode,\n\tFIL_Existing_PoliciesForClaims.SubASLCode,\n\t-- *INF*: IIF(ltrim(rtrim(SubASLCode))='0',NULL,ltrim(rtrim(SubASLCode)))\n\tIFF(ltrim(rtrim(SubASLCode)) = '0', NULL, ltrim(rtrim(SubASLCode))) AS v_SubASLCode,\n\tv_SubASLCode AS O_SubASLCode,\n\tFIL_Existing_PoliciesForClaims.RiskState AS PrimaryStateCode,\n\tpol_eff_date AS CoverageEffectiveDate,\n\tpol_exp_date AS CoverageExpirationDate,\n\tpol_eff_date AS EndorsementStartDate,\n\tpol_eff_date AS EndorsementIssueDate,\n\tpol_eff_date AS PolicyIssueDate,\n\tv_count+1 AS v_count,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER(1)),v_count,:LKP.LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER(1)+v_count)\n\tIFF(\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num IS NULL, v_count,\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num + v_count\n\t) AS SourceSequenceNumber,\n\t2 AS TransactionNumber,\n\t0 AS EndorsementNumber,\n\t-- *INF*: MD5(PolicyKey||'|'||ProductCode||'|'||StrategicProfitCenterAbbreviation||'|'||AccountingProductCode||'|'||InsuranceReferenceLineOfBusinessCode||'|'||ASLCode||'|'||v_SubASLCode||'|'||PrimaryStateCode||'|'||to_char(ReinsuranceUmbrellaLayer))\n\tMD5(PolicyKey || '|' || ProductCode || '|' || StrategicProfitCenterAbbreviation || '|' || AccountingProductCode || '|' || InsuranceReferenceLineOfBusinessCode || '|' || ASLCode || '|' || v_SubASLCode || '|' || PrimaryStateCode || '|' || to_char(ReinsuranceUmbrellaLayer)) AS ASLCoversKey,\n\t-- *INF*: md5(to_char(pol_eff_date,'YYYYMMDD')||'|'||to_char(pol_exp_date,'YYYYMMDD'))\n\tmd5(to_char(pol_eff_date, 'YYYYMMDD') || '|' || to_char(pol_exp_date, 'YYYYMMDD')) AS DateKey,\n\tFIL_Existing_PoliciesForClaims.ReinsuranceUmbrellaLayer,\n\t-- *INF*: IIF(ReinsuranceUmbrellaLayer=-1,NULL,ReinsuranceUmbrellaLayer)\n\tIFF(ReinsuranceUmbrellaLayer = - 1, NULL, ReinsuranceUmbrellaLayer) AS O_ReinsuranceUmbrellaLayer,\n\t'' AS OSECode,\n\t'CLAIMSMADE' AS EntryProcess,\n\tLKP_Dates.RatingPlanAbbreviation,\n\tLKP_Dates.InsuredName AS FirstNameIsured\n\tFROM FIL_Existing_PoliciesForClaims\n\tLEFT JOIN LKP_Dates\n\tON LKP_Dates.pol_key = FIL_Existing_PoliciesForClaims.POLICY_NO\n\tLEFT JOIN LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1\n\tON LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.ID = 1\n\n),\nSapiensReinsurancePolicy AS (\n\tTRUNCATE TABLE SapiensReinsurancePolicy;\n\tINSERT INTO SapiensReinsurancePolicy\n\t(AuditId, CreatedDate, ModifiedDate, PolicyKey, DocumntType, AccountingDate, MonthlyTotalDirectWrittenPremium, ProductCode, StrategicProfitCenterAbbreviation, AccountingProductCode, InsuranceReferenceLineOfBusinessCode, ASLCode, SubASLCode, PrimaryStateCode, CoverageEffectiveDate, CoverageExpirationDate, EndorsementStartDate, EndorsementIssueDate, PolicyIssueDate, SourceSequenceNumber, TransactionNumber, EndorsementNumber, ASLCoversKey, DateKey, ReinsuranceUmbrellaLayer, OSECode, EntryProcess, RatingPlanAbbreviation, FirstNameIsured)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\tDOCUMNTTYPE, \n\tACCOUNTINGDATE, \n\tMONTHLYTOTALDIRECTWRITTENPREMIUM, \n\tPRODUCTCODE, \n\tSTRATEGICPROFITCENTERABBREVIATION, \n\tACCOUNTINGPRODUCTCODE, \n\tINSURANCEREFERENCELINEOFBUSINESSCODE, \n\tASLCODE, \n\tO_SubASLCode AS SUBASLCODE, \n\tPRIMARYSTATECODE, \n\tCOVERAGEEFFECTIVEDATE, \n\tCOVERAGEEXPIRATIONDATE, \n\tENDORSEMENTSTARTDATE, \n\tENDORSEMENTISSUEDATE, \n\tPOLICYISSUEDATE, \n\tSOURCESEQUENCENUMBER, \n\tTRANSACTIONNUMBER, \n\tENDORSEMENTNUMBER, \n\tASLCOVERSKEY, \n\tDATEKEY, \n\tO_ReinsuranceUmbrellaLayer AS REINSURANCEUMBRELLALAYER, \n\tOSECODE, \n\tENTRYPROCESS, \n\tRATINGPLANABBREVIATION, \n\tFIRSTNAMEISURED\n\tFROM EXP_Defaults\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "FILTER_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LKP_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LKP_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}