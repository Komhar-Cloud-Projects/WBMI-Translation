{
    "name": "s_m_POL_DW_LOAD_Reinsurance_Coverage",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_Reinsurance_Coverage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_pif_40_stage AS (\n\tSELECT DISTINCT pif_40_stage.pif_symbol,\r\n\t                pif_40_stage.pif_policy_number,\r\n\t                pif_40_stage.pif_module,\r\n\t                pif_40_stage.reins_section_code,\r\n\t                pif_40_stage.reins_insurance_line,\r\n\t                pif_40_stage.reins_location_number,\r\n\t                pif_40_stage.reins_sub_location_number,\r\n\t                pif_40_stage.reins_risk_unit_group,\r\n\t                pif_40_stage.reins_seq_rsk_unt_grp,\r\n\t                pif_40_stage.reins_location,\r\n\t                pif_40_stage.reins_risk_sequence,\r\n\t                pif_40_stage.reins_company_no,\r\n\t                pif_40_stage.reins_eff_year,\r\n\t                pif_40_stage.reins_eff_month,\r\n\t                pif_40_stage.reins_eff_day,\r\n\t                pif_40_stage.reins_percent_prem_ceded,\r\n\t                pif_40_stage.reins_percent_loss_ceded,\r\n\t                pif_40_stage.reins_percent_fac_comm,\r\n\t                pif_40_stage.reins_exp_year,\r\n\t                pif_40_stage.reins_exp_month,\r\n\t                pif_40_stage.reins_exp_day,\r\n\t                pif_40_stage.reins_type,\r\n\t                pif_40_stage.reins_ent_year,\r\n\t                pif_40_stage.reins_ent_month,\r\n\t                pif_40_stage.reins_ent_day,\r\n\t                pif_40_stage.reins_excess_amt,\r\n\t                pif_40_stage.reins_occur_limit,\r\n\t                pif_40_stage.reins_aggregate_limit\r\n\tFROM   pif_40_stage\r\n\t--WHERE ISNULL(pif_40_stage.inf_action, 'N/A') <> 'A'\n),\nEXP_Value AS (\n\tSELECT\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tpif_symbol || pif_policy_number || pif_module AS pol_Key,\n\treins_insurance_line AS in_reins_insurance_line,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_insurance_line)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_insurance_line) AS reins_insurance_line,\n\treins_location_number AS in_reins_location_number,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_location_number))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_location_number)) AS reins_location_number,\n\treins_sub_location_number AS in_reins_sub_location_number,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_sub_location_number))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_sub_location_number)) AS reins_sub_location_number,\n\treins_risk_unit_group AS in_reins_risk_unit_group,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_risk_unit_group))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_risk_unit_group)) AS reins_risk_unit_group,\n\treins_seq_rsk_unt_grp AS in_reins_seq_rsk_unt_grp,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_seq_rsk_unt_grp))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_seq_rsk_unt_grp)) AS reins_seq_rsk_unt_grp,\n\treins_location AS in_reins_location,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_location)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_location) AS reins_location,\n\treins_risk_sequence AS in_reins_risk_sequence,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_risk_sequence))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(TO_CHAR(in_reins_risk_sequence)) AS reins_risk_sequence,\n\treins_section_code AS in_reins_section_code,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_section_code)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_section_code) AS reins_section_code,\n\treins_company_no AS in_reins_company_no,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_company_no)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_company_no) AS reins_company_no,\n\treins_eff_year,\n\treins_eff_month,\n\treins_eff_day,\n\t-- *INF*: IIF ( LENGTH(reins_eff_month) = 1, '0' || reins_eff_month, reins_eff_month)\r\n\t-- || '/'  || \r\n\t-- IIF ( LENGTH(reins_eff_day ) = 1, '0' || reins_eff_day, reins_eff_day)\r\n\t-- ||  '/' || \r\n\t-- reins_eff_year\n\tIFF(LENGTH(reins_eff_month) = 1, '0' || reins_eff_month, reins_eff_month) || '/' || IFF(LENGTH(reins_eff_day) = 1, '0' || reins_eff_day, reins_eff_day) || '/' || reins_eff_year AS v_reins_eff_date,\n\t-- *INF*: IIF ((ISNULL(reins_eff_month) OR ISNULL(reins_eff_day) OR ISNULL(reins_eff_year))\r\n\t-- , TO_DATE ('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\r\n\t-- ,TO_DATE(v_reins_eff_date , 'MM/DD/YYYY')\r\n\t-- )\n\tIFF(( reins_eff_month IS NULL OR reins_eff_day IS NULL OR reins_eff_year IS NULL ), TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(v_reins_eff_date, 'MM/DD/YYYY')) AS reins_eff_date,\n\treins_exp_year,\n\treins_exp_month,\n\treins_exp_day,\n\t-- *INF*: IIF ( LENGTH(reins_exp_month) = 1, '0' || reins_exp_month, reins_exp_month)\r\n\t-- ||  '/' || \r\n\t-- IIF ( LENGTH(reins_exp_day ) = 1, '0' || reins_exp_day, reins_exp_day)\r\n\t-- ||  '/' || \r\n\t-- reins_exp_year\n\tIFF(LENGTH(reins_exp_month) = 1, '0' || reins_exp_month, reins_exp_month) || '/' || IFF(LENGTH(reins_exp_day) = 1, '0' || reins_exp_day, reins_exp_day) || '/' || reins_exp_year AS v_reins_exp_date,\n\t-- *INF*: IIF ((ISNULL(reins_exp_month) OR ISNULL(reins_exp_day) OR ISNULL(reins_exp_year))\r\n\t-- , TO_DATE ('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\r\n\t-- ,TO_DATE(v_reins_exp_date , 'MM/DD/YYYY')\r\n\t-- )\n\tIFF(( reins_exp_month IS NULL OR reins_exp_day IS NULL OR reins_exp_year IS NULL ), TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(v_reins_exp_date, 'MM/DD/YYYY')) AS reins_exp_date,\n\treins_ent_year,\n\treins_ent_month,\n\treins_ent_day,\n\t-- *INF*: IIF ( LENGTH(reins_ent_month) = 1, '0' || reins_ent_month, reins_ent_month)\r\n\t-- ||  '/' || \r\n\t-- IIF ( LENGTH(reins_ent_day ) = 1, '0' || reins_ent_day, reins_ent_day)\r\n\t-- ||  '/' || \r\n\t-- reins_ent_year\n\tIFF(LENGTH(reins_ent_month) = 1, '0' || reins_ent_month, reins_ent_month) || '/' || IFF(LENGTH(reins_ent_day) = 1, '0' || reins_ent_day, reins_ent_day) || '/' || reins_ent_year AS v_reins_ent_date,\n\t-- *INF*: IIF ((ISNULL(reins_ent_month) OR ISNULL(reins_ent_day) OR ISNULL(reins_ent_year))\r\n\t-- , TO_DATE ('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS')\r\n\t-- ,TO_DATE(v_reins_ent_date , 'MM/DD/YYYY')\r\n\t-- )\n\tIFF(( reins_ent_month IS NULL OR reins_ent_day IS NULL OR reins_ent_year IS NULL ), TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), TO_DATE(v_reins_ent_date, 'MM/DD/YYYY')) AS reins_ent_date,\n\treins_type AS in_reins_type,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_type)\r\n\t-- \r\n\t-- --'N/A' (backed out this change for April release)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(in_reins_type) AS reins_type,\n\treins_percent_prem_ceded,\n\treins_percent_loss_ceded,\n\treins_percent_fac_comm,\n\treins_excess_amt AS in_reins_excess_amt,\n\t-- *INF*: IIF(ISNULL(in_reins_excess_amt),00000000,in_reins_excess_amt)\r\n\t-- \n\tIFF(in_reins_excess_amt IS NULL, 00000000, in_reins_excess_amt) AS reins_excess_amt,\n\treins_occur_limit AS in_reins_occur_limit,\n\t-- *INF*: IIF(ISNULL(in_reins_occur_limit),00000000,in_reins_occur_limit)\r\n\t-- \n\tIFF(in_reins_occur_limit IS NULL, 00000000, in_reins_occur_limit) AS reins_occur_limit,\n\treins_aggregate_limit AS in_reins_aggregate_limit,\n\t-- *INF*: IIF(ISNULL(in_reins_aggregate_limit),00000000,in_reins_aggregate_limit)\n\tIFF(in_reins_aggregate_limit IS NULL, 00000000, in_reins_aggregate_limit) AS reins_aggregate_limit,\n\t-- *INF*: DECODE(in_reins_type, '2', 'Facultative', '3', 'Treaty', 'N/A')\n\tDECODE(in_reins_type,\n\t\t'2', 'Facultative',\n\t\t'3', 'Treaty',\n\t\t'N/A') AS ReinsuranceMethod\n\tFROM SQ_pif_40_stage\n),\nLKP_Policy AS (\n\tSELECT\n\tpol_ak_id,\n\tpol_key\n\tFROM (\n\t\tSELECT \n\t\t\tpol_ak_id,\n\t\t\tpol_key\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy\n\t\tWHERE crrnt_snpsht_flag = 1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_key ORDER BY pol_ak_id) = 1\n),\nLKP_SupReinsuranceMaster AS (\n\tSELECT\n\tReinsuranceMasterReinsuranceCompanyName,\n\tReinsuranceMasterReinsuranceCompanyNumber\n\tFROM (\n\t\tSELECT \n\t\t\tReinsuranceMasterReinsuranceCompanyName,\n\t\t\tReinsuranceMasterReinsuranceCompanyNumber\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupReinsuranceMaster\n\t\tWHERE CurrentSnapshotFlag='1' and SourceSystemId='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ReinsuranceMasterReinsuranceCompanyNumber ORDER BY ReinsuranceMasterReinsuranceCompanyName) = 1\n),\nLKP_sup_insurance_line AS (\n\tSELECT\n\tsup_ins_line_id,\n\tins_line_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_ins_line_id,\n\t\t\tins_line_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_code ORDER BY sup_ins_line_id) = 1\n),\nLKP_sup_risk_unit AS (\n\tSELECT\n\tsup_risk_unit_id,\n\trisk_unit_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_risk_unit_id,\n\t\t\trisk_unit_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_code ORDER BY sup_risk_unit_id) = 1\n),\nLKP_sup_risk_unit_group AS (\n\tSELECT\n\tsup_risk_unit_grp_id,\n\trisk_unit_grp_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_risk_unit_grp_id,\n\t\t\trisk_unit_grp_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit_group\n\t\tWHERE crrnt_snpsht_flag='1' and source_sys_id='@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_grp_code ORDER BY sup_risk_unit_grp_id) = 1\n),\nEXP_Lkp_Values AS (\n\tSELECT\n\tLKP_Policy.pol_ak_id AS pol_key_ak_id,\n\tEXP_Value.reins_insurance_line,\n\tEXP_Value.reins_location_number,\n\tEXP_Value.reins_sub_location_number,\n\tEXP_Value.reins_risk_unit_group,\n\tEXP_Value.reins_seq_rsk_unt_grp,\n\tEXP_Value.reins_location,\n\tEXP_Value.reins_risk_sequence,\n\tEXP_Value.reins_section_code,\n\tEXP_Value.reins_company_no,\n\tLKP_SupReinsuranceMaster.ReinsuranceMasterReinsuranceCompanyName AS in_reins_co_name,\n\t-- *INF*: IIF(ISNULL(in_reins_co_name),'N/A',in_reins_co_name)\n\tIFF(in_reins_co_name IS NULL, 'N/A', in_reins_co_name) AS out_reins_co_name,\n\tEXP_Value.reins_eff_date,\n\tEXP_Value.reins_exp_date,\n\tEXP_Value.reins_ent_date,\n\tEXP_Value.reins_type,\n\tEXP_Value.reins_percent_prem_ceded,\n\tEXP_Value.reins_percent_loss_ceded,\n\tEXP_Value.reins_percent_fac_comm,\n\tEXP_Value.reins_excess_amt,\n\tEXP_Value.reins_occur_limit,\n\tEXP_Value.reins_aggregate_limit,\n\tLKP_sup_insurance_line.sup_ins_line_id AS in_sup_ins_line_id,\n\t-- *INF*: IIF(ISNULL(in_sup_ins_line_id),-1,in_sup_ins_line_id)\n\tIFF(in_sup_ins_line_id IS NULL, - 1, in_sup_ins_line_id) AS out_sup_ins_line_id,\n\tLKP_sup_risk_unit.sup_risk_unit_id AS in_sup_risk_unit_id,\n\t-- *INF*: IIF(ISNULL(in_sup_risk_unit_id),-1,in_sup_risk_unit_id)\n\tIFF(in_sup_risk_unit_id IS NULL, - 1, in_sup_risk_unit_id) AS out_sup_risk_unit_id,\n\tLKP_sup_risk_unit_group.sup_risk_unit_grp_id AS in_sup_risk_unit_grp_id,\n\t-- *INF*: IIF(ISNULL(in_sup_risk_unit_grp_id),-1,in_sup_risk_unit_grp_id)\n\tIFF(in_sup_risk_unit_grp_id IS NULL, - 1, in_sup_risk_unit_grp_id) AS out_sup_risk_unit_grp_id,\n\t-1 AS out_SupReinsuranceMasterId,\n\t-1 AS out_sup_reins_type_id,\n\tEXP_Value.ReinsuranceMethod\n\tFROM EXP_Value\n\tLEFT JOIN LKP_Policy\n\tON LKP_Policy.pol_key = EXP_Value.pol_Key\n\tLEFT JOIN LKP_SupReinsuranceMaster\n\tON LKP_SupReinsuranceMaster.ReinsuranceMasterReinsuranceCompanyNumber = EXP_Value.reins_company_no\n\tLEFT JOIN LKP_sup_insurance_line\n\tON LKP_sup_insurance_line.ins_line_code = EXP_Value.reins_insurance_line\n\tLEFT JOIN LKP_sup_risk_unit\n\tON LKP_sup_risk_unit.risk_unit_code = EXP_Value.reins_location\n\tLEFT JOIN LKP_sup_risk_unit_group\n\tON LKP_sup_risk_unit_group.risk_unit_grp_code = EXP_Value.reins_risk_unit_group\n),\nLKP_reinsurance_coverage AS (\n\tSELECT\n\treins_cov_id,\n\treins_cov_ak_id,\n\treins_co_name,\n\treins_exp_date,\n\treins_type,\n\treins_prcnt_prem_ceded,\n\treins_prcnt_loss_ceded,\n\treins_prcnt_facultative_commssn,\n\treins_excess_amt,\n\treins_occurrence_lmt,\n\treins_agg_lmt,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\treins_co_num,\n\treins_eff_date,\n\treins_enter_date\n\tFROM (\n\t\tSELECT reins_cov_id                       AS reins_cov_id,\r\n\t\t       reins_cov_ak_id                    AS reins_cov_ak_id,\r\n\t\t       Rtrim(reins_co_name)               AS reins_co_name,\r\n\t\t       reins_exp_date                     AS reins_exp_date,\r\n\t\t       Rtrim(reins_type)                  AS reins_type,\r\n\t\t       reins_prcnt_prem_ceded             AS reins_prcnt_prem_ceded,\r\n\t\t       reins_prcnt_loss_ceded             AS reins_prcnt_loss_ceded,\r\n\t\t       reins_prcnt_facultative_commssn    AS reins_prcnt_facultative_commssn,\r\n\t\t       reins_excess_amt                   AS reins_excess_amt,\r\n\t\t       reins_occurrence_lmt               AS reins_occurrence_lmt,\r\n\t\t       reins_agg_lmt                      AS reins_agg_lmt,\r\n\t\t       pol_ak_id                          AS pol_ak_id,\r\n\t\t       Rtrim(reins_ins_line)              AS reins_ins_line,\r\n\t\t       Rtrim(reins_loc_unit_num)          AS reins_loc_unit_num,\r\n\t\t       Rtrim(reins_sub_loc_unit_num)      AS reins_sub_loc_unit_num,\r\n\t\t       Rtrim(reins_risk_unit_grp)         AS reins_risk_unit_grp,\r\n\t\t       Rtrim(reins_risk_unit_grp_seq_num) AS reins_risk_unit_grp_seq_num,\r\n\t\t       Rtrim(reins_risk_unit)             AS reins_risk_unit,\r\n\t\t       Rtrim(reins_risk_unit_seq_num)     AS reins_risk_unit_seq_num,\r\n\t\t       Rtrim(reins_section_code)          AS reins_section_code,\r\n\t\t       Rtrim(reins_co_num)                AS reins_co_num,\r\n\t\t       reins_eff_date                     AS reins_eff_date,\r\n\t\t       reins_enter_date                   AS reins_enter_date\r\n\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage\r\n\t\tWHERE  crrnt_snpsht_flag = 1 and source_sys_id='@{pipeline().parameters.SOURCE_SYSTEM_ID}'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,reins_ins_line,reins_loc_unit_num,reins_sub_loc_unit_num,reins_risk_unit_grp,reins_risk_unit_grp_seq_num,reins_risk_unit,reins_risk_unit_seq_num,reins_section_code,reins_co_num,reins_eff_date,reins_enter_date ORDER BY reins_cov_id DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_reinsurance_coverage.reins_cov_id AS lkp_reins_cov_id,\n\tLKP_reinsurance_coverage.reins_cov_ak_id AS lkp_reins_cov_ak_id,\n\tLKP_reinsurance_coverage.reins_co_name AS lkp_reins_co_name,\n\tLKP_reinsurance_coverage.reins_exp_date AS lkp_reins_exp_date,\n\tLKP_reinsurance_coverage.reins_type AS lkp_reins_type,\n\tLKP_reinsurance_coverage.reins_prcnt_prem_ceded AS lkp_reins_prcnt_prem_ceded,\n\tLKP_reinsurance_coverage.reins_prcnt_loss_ceded AS lkp_reins_prcnt_loss_ceded,\n\tLKP_reinsurance_coverage.reins_prcnt_facultative_commssn AS lkp_reins_prcnt_facultative_commssn,\n\tLKP_reinsurance_coverage.reins_excess_amt AS lkp_reins_excess_amt,\n\tLKP_reinsurance_coverage.reins_occurrence_lmt AS lkp_reins_occurrence_lmt,\n\tLKP_reinsurance_coverage.reins_agg_lmt AS lkp_reins_agg_lmt,\n\tEXP_Lkp_Values.pol_key_ak_id,\n\tEXP_Lkp_Values.reins_insurance_line,\n\tEXP_Lkp_Values.reins_location_number,\n\tEXP_Lkp_Values.reins_sub_location_number,\n\tEXP_Lkp_Values.reins_risk_unit_group,\n\tEXP_Lkp_Values.reins_seq_rsk_unt_grp,\n\tEXP_Lkp_Values.reins_location,\n\tEXP_Lkp_Values.reins_risk_sequence,\n\tEXP_Lkp_Values.reins_section_code,\n\tEXP_Lkp_Values.reins_company_no,\n\tEXP_Lkp_Values.out_reins_co_name AS reins_co_name,\n\tEXP_Lkp_Values.reins_eff_date,\n\tEXP_Lkp_Values.reins_exp_date,\n\tEXP_Lkp_Values.reins_ent_date,\n\tEXP_Lkp_Values.reins_type,\n\tEXP_Lkp_Values.reins_percent_prem_ceded,\n\tEXP_Lkp_Values.reins_percent_loss_ceded,\n\tEXP_Lkp_Values.reins_percent_fac_comm,\n\tEXP_Lkp_Values.reins_excess_amt,\n\tEXP_Lkp_Values.reins_occur_limit,\n\tEXP_Lkp_Values.reins_aggregate_limit,\n\tEXP_Lkp_Values.out_sup_ins_line_id AS sup_ins_line_id,\n\tEXP_Lkp_Values.out_sup_risk_unit_id AS sup_risk_unit_id,\n\tEXP_Lkp_Values.out_sup_risk_unit_grp_id AS sup_risk_unit_grp_id,\n\tEXP_Lkp_Values.out_sup_reins_type_id AS sup_reins_type_id,\n\tEXP_Lkp_Values.out_SupReinsuranceMasterId AS SupReinsuranceMasterId,\n\t-- *INF*: iif(isnull(lkp_reins_cov_id),'NEW',\r\n\t-- \tiif (\r\n\t-- \tltrim(rtrim(lkp_reins_co_name)) <> ltrim(rtrim(reins_co_name)) or\r\n\t-- \t(lkp_reins_exp_date <> reins_exp_date) or\r\n\t-- \t(ltrim(rtrim(lkp_reins_type))  <> ltrim(rtrim(reins_type))) or\r\n\t-- \tlkp_reins_prcnt_prem_ceded <> reins_percent_prem_ceded or\r\n\t-- \tlkp_reins_prcnt_loss_ceded <> reins_percent_loss_ceded or\r\n\t-- \tlkp_reins_prcnt_facultative_commssn <> reins_percent_fac_comm or\r\n\t-- \tlkp_reins_excess_amt <> reins_excess_amt or\r\n\t-- \tlkp_reins_occurrence_lmt <> reins_occur_limit or\r\n\t-- \tlkp_reins_agg_lmt <> reins_aggregate_limit\r\n\t--   \t,'UPDATE'\r\n\t-- \t,'NOCHANGE'))\r\n\t-- \n\tIFF(lkp_reins_cov_id IS NULL, 'NEW', IFF(ltrim(rtrim(lkp_reins_co_name)) <> ltrim(rtrim(reins_co_name)) OR ( lkp_reins_exp_date <> reins_exp_date ) OR ( ltrim(rtrim(lkp_reins_type)) <> ltrim(rtrim(reins_type)) ) OR lkp_reins_prcnt_prem_ceded <> reins_percent_prem_ceded OR lkp_reins_prcnt_loss_ceded <> reins_percent_loss_ceded OR lkp_reins_prcnt_facultative_commssn <> reins_percent_fac_comm OR lkp_reins_excess_amt <> reins_excess_amt OR lkp_reins_occurrence_lmt <> reins_occur_limit OR lkp_reins_agg_lmt <> reins_aggregate_limit, 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t-1 AS out_sup_reins_company_name_id,\n\t1 AS Crrnt_Snpsht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date,\n\t'0' AS logical_flag,\n\tEXP_Lkp_Values.ReinsuranceMethod\n\tFROM EXP_Lkp_Values\n\tLEFT JOIN LKP_reinsurance_coverage\n\tON LKP_reinsurance_coverage.pol_ak_id = EXP_Lkp_Values.pol_key_ak_id AND LKP_reinsurance_coverage.reins_ins_line = EXP_Lkp_Values.reins_insurance_line AND LKP_reinsurance_coverage.reins_loc_unit_num = EXP_Lkp_Values.reins_location_number AND LKP_reinsurance_coverage.reins_sub_loc_unit_num = EXP_Lkp_Values.reins_sub_location_number AND LKP_reinsurance_coverage.reins_risk_unit_grp = EXP_Lkp_Values.reins_risk_unit_group AND LKP_reinsurance_coverage.reins_risk_unit_grp_seq_num = EXP_Lkp_Values.reins_seq_rsk_unt_grp AND LKP_reinsurance_coverage.reins_risk_unit = EXP_Lkp_Values.reins_location AND LKP_reinsurance_coverage.reins_risk_unit_seq_num = EXP_Lkp_Values.reins_risk_sequence AND LKP_reinsurance_coverage.reins_section_code = EXP_Lkp_Values.reins_section_code AND LKP_reinsurance_coverage.reins_co_num = EXP_Lkp_Values.reins_company_no AND LKP_reinsurance_coverage.reins_eff_date = EXP_Lkp_Values.reins_eff_date AND LKP_reinsurance_coverage.reins_enter_date = EXP_Lkp_Values.reins_ent_date\n),\nFIL_Insert AS (\n\tSELECT\n\tlkp_reins_cov_ak_id, \n\tChanged_Flag, \n\tpol_key_ak_id, \n\treins_insurance_line, \n\treins_location_number, \n\treins_sub_location_number, \n\treins_risk_unit_group, \n\treins_seq_rsk_unt_grp, \n\treins_location, \n\treins_risk_sequence, \n\treins_section_code, \n\treins_company_no, \n\treins_co_name, \n\treins_eff_date, \n\treins_exp_date, \n\treins_ent_date, \n\treins_type, \n\treins_percent_prem_ceded, \n\treins_percent_loss_ceded, \n\treins_percent_fac_comm, \n\treins_excess_amt, \n\treins_occur_limit, \n\treins_aggregate_limit, \n\tsup_ins_line_id, \n\tsup_risk_unit_id, \n\tsup_risk_unit_grp_id, \n\tsup_reins_type_id, \n\tout_sup_reins_company_name_id AS sup_reins_company_name_id, \n\tSupReinsuranceMasterId, \n\tCrrnt_Snpsht_Flag, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tSOURCE_SYSTEM_ID, \n\tCreated_Date, \n\tModified_Date, \n\tlogical_flag, \n\tReinsuranceMethod\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_Reins_Cov_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Reins_Cov_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tCrrnt_Snpsht_Flag,\n\tAudit_Id,\n\tEff_From_Date,\n\tEff_To_Date,\n\tSOURCE_SYSTEM_ID AS Source_Sys_Id,\n\tCreated_Date,\n\tModified_Date,\n\tSEQ_Reins_Cov_AK_ID.NEXTVAL,\n\tChanged_Flag,\n\tlkp_reins_cov_ak_id,\n\t-- *INF*: IIF(Changed_Flag='NEW',\r\n\t-- NEXTVAL,\r\n\t-- lkp_reins_cov_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, lkp_reins_cov_ak_id) AS reins_cov_ak_id,\n\tpol_key_ak_id,\n\treins_insurance_line,\n\treins_location_number,\n\treins_sub_location_number,\n\treins_risk_unit_group,\n\treins_seq_rsk_unt_grp,\n\treins_location,\n\treins_risk_sequence,\n\treins_section_code,\n\treins_company_no,\n\treins_co_name,\n\treins_eff_date,\n\treins_exp_date,\n\treins_ent_date,\n\treins_type,\n\treins_percent_prem_ceded,\n\treins_percent_loss_ceded,\n\treins_percent_fac_comm,\n\treins_excess_amt,\n\treins_occur_limit,\n\treins_aggregate_limit,\n\tsup_ins_line_id,\n\tsup_risk_unit_id,\n\tsup_risk_unit_grp_id,\n\tsup_reins_type_id,\n\tsup_reins_company_name_id,\n\tSupReinsuranceMasterId,\n\tlogical_flag,\n\tReinsuranceMethod\n\tFROM FIL_Insert\n),\nreinsurance_coverage_INSERT AS (\n\tINSERT INTO reinsurance_coverage\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, logical_flag, reins_cov_ak_id, pol_ak_id, reins_ins_line, reins_loc_unit_num, reins_sub_loc_unit_num, reins_risk_unit_grp, reins_risk_unit_grp_seq_num, reins_risk_unit, reins_risk_unit_seq_num, reins_section_code, reins_co_num, reins_co_name, reins_eff_date, reins_exp_date, reins_enter_date, reins_type, reins_prcnt_prem_ceded, reins_prcnt_loss_ceded, reins_prcnt_facultative_commssn, reins_excess_amt, reins_occurrence_lmt, reins_agg_lmt, SupInsuranceLineId, SupRiskUnitId, SupRiskUnitGroupId, ReinsuranceMethod)\n\tSELECT \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSource_Sys_Id AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tLOGICAL_FLAG, \n\tREINS_COV_AK_ID, \n\tpol_key_ak_id AS POL_AK_ID, \n\treins_insurance_line AS REINS_INS_LINE, \n\treins_location_number AS REINS_LOC_UNIT_NUM, \n\treins_sub_location_number AS REINS_SUB_LOC_UNIT_NUM, \n\treins_risk_unit_group AS REINS_RISK_UNIT_GRP, \n\treins_seq_rsk_unt_grp AS REINS_RISK_UNIT_GRP_SEQ_NUM, \n\treins_location AS REINS_RISK_UNIT, \n\treins_risk_sequence AS REINS_RISK_UNIT_SEQ_NUM, \n\tREINS_SECTION_CODE, \n\treins_company_no AS REINS_CO_NUM, \n\tREINS_CO_NAME, \n\tREINS_EFF_DATE, \n\tREINS_EXP_DATE, \n\treins_ent_date AS REINS_ENTER_DATE, \n\tREINS_TYPE, \n\treins_percent_prem_ceded AS REINS_PRCNT_PREM_CEDED, \n\treins_percent_loss_ceded AS REINS_PRCNT_LOSS_CEDED, \n\treins_percent_fac_comm AS REINS_PRCNT_FACULTATIVE_COMMSSN, \n\tREINS_EXCESS_AMT, \n\treins_occur_limit AS REINS_OCCURRENCE_LMT, \n\treins_aggregate_limit AS REINS_AGG_LMT, \n\tsup_ins_line_id AS SUPINSURANCELINEID, \n\tsup_risk_unit_id AS SUPRISKUNITID, \n\tsup_risk_unit_grp_id AS SUPRISKUNITGROUPID, \n\tREINSURANCEMETHOD\n\tFROM EXP_Determine_AK\n),\nSQ_reinsurance_coverage AS (\n\tSELECT \r\n\t\t A.reins_cov_id,\r\n\t       A.eff_from_date,\r\n\t       A.eff_to_date,\r\n\t       A.source_sys_id,\r\n\t       A.pol_ak_id,\r\n\t       A.reins_ins_line,\r\n\t       A.reins_loc_unit_num,\r\n\t       A.reins_sub_loc_unit_num,\r\n\t       A.reins_risk_unit_grp,\r\n\t       A.reins_risk_unit_grp_seq_num,\r\n\t       A.reins_risk_unit,\r\n\t       A.reins_risk_unit_seq_num,\r\n\t       A.reins_section_code,\r\n\t       A.reins_co_num,\r\n\t       A.reins_eff_date,\r\n\t       A.reins_enter_date\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t      AND a.reins_cov_ak_id = b.reins_cov_ak_id\r\n\t      AND a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.reins_cov_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.reins_cov_ak_id, a.eff_from_date desc\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\treins_cov_id,\n\tpol_ak_id,\n\treins_ins_line,\n\treins_loc_unit_num,\n\treins_sub_loc_unit_num,\n\treins_risk_unit_grp,\n\treins_risk_unit_grp_seq_num,\n\treins_risk_unit,\n\treins_risk_unit_seq_num,\n\treins_section_code,\n\treins_co_num,\n\treins_eff_date,\n\treins_enter_date,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- pol_ak_id = v_PREV_ROW_pol_ak_id1 AND\r\n\t-- reins_ins_line = v_PREV_ROW_reins_ins_line1 AND\r\n\t-- reins_loc_unit_num = v_PREV_ROW_reins_loc_unit_num1 AND\r\n\t-- reins_sub_loc_unit_num = v_PREV_ROW_reins_sub_loc_unit_num1 AND\r\n\t-- reins_risk_unit_grp = v_PREV_ROW_reins_risk_unit_grp1 AND\r\n\t-- reins_risk_unit_grp_seq_num = v_PREV_ROW_reins_risk_unit_grp_seq_num1 AND\r\n\t-- reins_risk_unit = v_PREV_ROW_reins_risk_unit1 AND\r\n\t-- reins_risk_unit_seq_num = v_PREV_ROW_reins_risk_unit_seq_num1 AND\r\n\t-- reins_section_code = v_PREV_ROW_reins_section_code1 AND\r\n\t-- reins_co_num = v_PREV_ROW_reins_co_num1 AND\r\n\t-- reins_eff_date = v_PREV_ROW_reins_eff_date1 AND\r\n\t-- IIF(reins_section_code='N/A', 1=1, reins_enter_date = v_PREV_ROW_reins_enter_date1) AND\r\n\t-- source_sys_id = v_PREV_ROW_source_sys_id1\r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date1,'SS',-1)\r\n\t-- ,orig_eff_to_date)\n\tDECODE(TRUE,\n\t\tpol_ak_id = v_PREV_ROW_pol_ak_id1 AND reins_ins_line = v_PREV_ROW_reins_ins_line1 AND reins_loc_unit_num = v_PREV_ROW_reins_loc_unit_num1 AND reins_sub_loc_unit_num = v_PREV_ROW_reins_sub_loc_unit_num1 AND reins_risk_unit_grp = v_PREV_ROW_reins_risk_unit_grp1 AND reins_risk_unit_grp_seq_num = v_PREV_ROW_reins_risk_unit_grp_seq_num1 AND reins_risk_unit = v_PREV_ROW_reins_risk_unit1 AND reins_risk_unit_seq_num = v_PREV_ROW_reins_risk_unit_seq_num1 AND reins_section_code = v_PREV_ROW_reins_section_code1 AND reins_co_num = v_PREV_ROW_reins_co_num1 AND reins_eff_date = v_PREV_ROW_reins_eff_date1 AND IFF(reins_section_code = 'N/A', 1 = 1, reins_enter_date = v_PREV_ROW_reins_enter_date1) AND source_sys_id = v_PREV_ROW_source_sys_id1, ADD_TO_DATE(v_PREV_ROW_eff_from_date1, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tpol_ak_id AS v_PREV_ROW_pol_ak_id1,\n\treins_ins_line AS v_PREV_ROW_reins_ins_line1,\n\treins_loc_unit_num AS v_PREV_ROW_reins_loc_unit_num1,\n\treins_sub_loc_unit_num AS v_PREV_ROW_reins_sub_loc_unit_num1,\n\treins_risk_unit_grp AS v_PREV_ROW_reins_risk_unit_grp1,\n\treins_risk_unit_grp_seq_num AS v_PREV_ROW_reins_risk_unit_grp_seq_num1,\n\treins_risk_unit AS v_PREV_ROW_reins_risk_unit1,\n\treins_risk_unit_seq_num AS v_PREV_ROW_reins_risk_unit_seq_num1,\n\treins_section_code AS v_PREV_ROW_reins_section_code1,\n\treins_co_num AS v_PREV_ROW_reins_co_num1,\n\treins_eff_date AS v_PREV_ROW_reins_eff_date1,\n\treins_enter_date AS v_PREV_ROW_reins_enter_date1,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id1,\n\teff_from_date AS v_PREV_ROW_eff_from_date1,\n\t0 AS crrnt_snapshot_flag,\n\tsysdate AS modified_date\n\tFROM SQ_reinsurance_coverage\n),\nFIL_reinsurance_coverage AS (\n\tSELECT\n\treins_cov_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\treins_cov_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM FIL_reinsurance_coverage\n),\nreinsurance_coverage_UPDATE AS (\n\tMERGE INTO reinsurance_coverage AS T\n\tUSING UPD_Update_Target AS S\n\tON T.reins_cov_id = S.reins_cov_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604235"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Policy"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Policy"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "MERGED_SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}