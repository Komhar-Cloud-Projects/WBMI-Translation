{
    "name": "s_m_POL_DW_LOAD_CyberSuiteDetail_DCT",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_CyberSuiteDetail_DCT",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PremiumTransaction_WorkPremiumTransaction AS (\n\tSelect \r\n\tDISTINCT \r\n\tPT.PremiumTransactionID,\r\n\tPT.PremiumTransactionAKID,\r\n\tWPT.PremiumTransactionStageId\r\n\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT on WPT.PremiumTransactionAKID=PT.PremiumTransactionAKID\r\n\tinner join RatingCoverage RC on PT.RatingCoverageAKId=RC.RatingCoverageAKID and PT.EffectiveDate=RC.EffectiveDate\r\n\tand RC.CoverageType in (\r\n\t'CyberSuite',\r\n\t'CyberSuiteExtendedReporting')\r\n\twhere  PT.SourceSystemId='DCT'\r\n\tand PT.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_PT}\r\n\tOrder by \r\n\tWPT.PremiumTransactionStageId\n),\nEXP_InputFromPT AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionStageId\n\tFROM SQ_PremiumTransaction_WorkPremiumTransaction\n),\nSQ_WBCLLineStage AS (\n\tselect distinct  \r\n\tC.CyberOneIncreasedLimitQuestionOne as CyberOneIncreasedLimitQuestionOne, \r\n\tC.CyberOneIncreasedLimitQuestionTwo as CyberOneIncreasedLimitQuestionTwo, \r\n\tC.CyberOneIncreasedLimitQuestionThree as CyberOneIncreasedLimitQuestionThree,\r\n\tC.CyberOneIncreasedLimitQuestionFour as CyberOneIncreasedLimitQuestionFour, \r\n\tC.CyberOneIncreasedLimitQuestionFive as CyberOneIncreasedLimitQuestionFive, \r\n\tC.CyberOneIncreasedLimitQuestionSix as CyberOneIncreasedLimitQuestionSix,\r\n\tC.RatingTier as RatingTier,\r\n\tD.CoverageId as CoverageId\r\n\tFROM\r\n\tDCLineStaging A\r\n\tINNER JOIN WBLineStaging B on A.LineId=B.LineId and A.SessionId=B.SessionId\r\n\tINNER JOIN WBCLLineStage C on C.SessionId=A.SessionId and C.WBLineId=B.WB_LineId\r\n\tINNER JOIN WorkDCTTransactionInsuranceLineLocationBridge D on D.SessionId=A.SessionId and D.LineId=A.LineId\r\n\tand D.CoverageRiskType in (\r\n\t'CyberSuite',\r\n\t'CyberSuiteExtendedReporting')\r\n\tINNER JOIN DCCoverageStaging Cov on Cov.ObjectId=A.LineId and Cov.ObjectName='dc_line' and Cov.Type in (\r\n\t'CyberSuite',\r\n\t'CyberSuiteExtendedReporting')\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\r\n\tORDER BY\r\n\tD.CoverageId\n),\nEXP_InputFromStage AS (\n\tSELECT\n\tCyberOneIncreasedLimitQuestionOne,\n\tCyberOneIncreasedLimitQuestionTwo,\n\tCyberOneIncreasedLimitQuestionThree,\n\tCyberOneIncreasedLimitQuestionFour,\n\tCyberOneIncreasedLimitQuestionFive,\n\tCyberOneIncreasedLimitQuestionSix,\n\tRatingTier,\n\tCoverageId\n\tFROM SQ_WBCLLineStage\n),\nJNR_StageAndPT AS (SELECT\n\tEXP_InputFromPT.PremiumTransactionID, \n\tEXP_InputFromPT.PremiumTransactionAKID, \n\tEXP_InputFromPT.PremiumTransactionStageId, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionOne, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionTwo, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionThree, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionFour, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionFive, \n\tEXP_InputFromStage.CyberOneIncreasedLimitQuestionSix, \n\tEXP_InputFromStage.RatingTier, \n\tEXP_InputFromStage.CoverageId\n\tFROM EXP_InputFromPT\n\tINNER JOIN EXP_InputFromStage\n\tON EXP_InputFromStage.CoverageId = EXP_InputFromPT.PremiumTransactionStageId\n),\nEXP_JoinerOutput AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionStageId,\n\tCyberOneIncreasedLimitQuestionOne,\n\tCyberOneIncreasedLimitQuestionTwo,\n\tCyberOneIncreasedLimitQuestionThree,\n\tCyberOneIncreasedLimitQuestionFour,\n\tCyberOneIncreasedLimitQuestionFive,\n\tCyberOneIncreasedLimitQuestionSix,\n\tRatingTier,\n\tCoverageId\n\tFROM JNR_StageAndPT\n),\nLKP_CyberSuiteDetail AS (\n\tSELECT\n\tCyberSuiteDetailId,\n\tPremiumTransactionID,\n\ti_PremiumTransactionID\n\tFROM (\n\t\tSELECT \n\t\t\tCyberSuiteDetailId,\n\t\t\tPremiumTransactionID,\n\t\t\ti_PremiumTransactionID\n\t\tFROM CyberSuiteDetail\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionID ORDER BY CyberSuiteDetailId) = 1\n),\nFIL_InsertsOnly AS (\n\tSELECT\n\tLKP_CyberSuiteDetail.CyberSuiteDetailId AS lkp_CyberSuiteDetailId, \n\tEXP_JoinerOutput.PremiumTransactionID, \n\tEXP_JoinerOutput.PremiumTransactionAKID, \n\tEXP_JoinerOutput.PremiumTransactionStageId, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionOne, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionTwo, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionThree, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionFour, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionFive, \n\tEXP_JoinerOutput.CyberOneIncreasedLimitQuestionSix, \n\tEXP_JoinerOutput.RatingTier\n\tFROM EXP_JoinerOutput\n\tLEFT JOIN LKP_CyberSuiteDetail\n\tON LKP_CyberSuiteDetail.PremiumTransactionID = EXP_JoinerOutput.PremiumTransactionID\n\tWHERE ISNULL(lkp_CyberSuiteDetailId)\n),\nEXP_Output AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tPremiumTransactionStageId,\n\tCyberOneIncreasedLimitQuestionOne AS i_CyberOneIncreasedLimitQuestionOne,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionOne),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionOne,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionOne,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionOne IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionOne, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionOne, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionOne,\n\tCyberOneIncreasedLimitQuestionTwo AS i_CyberOneIncreasedLimitQuestionTwo,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionTwo),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionTwo,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionTwo,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionTwo IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionTwo, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionTwo, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionTwo,\n\tCyberOneIncreasedLimitQuestionThree AS i_CyberOneIncreasedLimitQuestionThree,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionThree),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionThree,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionThree,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionThree IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionThree, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionThree, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionThree,\n\tCyberOneIncreasedLimitQuestionFour AS i_CyberOneIncreasedLimitQuestionFour,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionFour),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionFour,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionFour,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionFour IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionFour, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionFour, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionFour,\n\tCyberOneIncreasedLimitQuestionFive AS i_CyberOneIncreasedLimitQuestionFive,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionFive),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionFive,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionFive,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionFive IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionFive, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionFive, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionFive,\n\tCyberOneIncreasedLimitQuestionSix AS i_CyberOneIncreasedLimitQuestionSix,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_CyberOneIncreasedLimitQuestionSix),'N/A',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionSix,'T','1'),'1',\r\n\t-- IN(i_CyberOneIncreasedLimitQuestionSix,'F','0'),'0',\r\n\t-- 'N/A')\n\tDECODE(TRUE,\n\t\ti_CyberOneIncreasedLimitQuestionSix IS NULL, 'N/A',\n\t\tIN(i_CyberOneIncreasedLimitQuestionSix, 'T', '1'), '1',\n\t\tIN(i_CyberOneIncreasedLimitQuestionSix, 'F', '0'), '0',\n\t\t'N/A') AS o_CyberOneIncreasedLimitQuestionSix,\n\tRatingTier AS i_RatingTier,\n\t-- *INF*: IIF(ISNULL(i_RatingTier),-1,i_RatingTier)\r\n\t-- \r\n\t-- -- this should never be null, but it turns out sometimes DCT sends us nulls\n\tIFF(i_RatingTier IS NULL, - 1, i_RatingTier) AS o_RatingTier,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tSYSDATE AS DefaultDate\n\tFROM FIL_InsertsOnly\n),\nCyberSuiteDetail AS (\n\tINSERT INTO CyberSuiteDetail\n\t(PremiumTransactionID, PremiumTransactionAKID, AuditID, SourceSystemID, CreatedDate, ModifiedDate, CyberSuiteEligibilityQuestionOne, CyberSuiteEligibilityQuestionTwo, CyberSuiteEligibilityQuestionThree, CyberSuiteEligibilityQuestionFour, CyberSuiteEligibilityQuestionFive, CyberSuiteEligibilityQuestionSix, RatingTier)\n\tSELECT \n\tPREMIUMTRANSACTIONID, \n\tPREMIUMTRANSACTIONAKID, \n\tAuditId AS AUDITID, \n\tSourceSystemId AS SOURCESYSTEMID, \n\tDefaultDate AS CREATEDDATE, \n\tDefaultDate AS MODIFIEDDATE, \n\to_CyberOneIncreasedLimitQuestionOne AS CYBERSUITEELIGIBILITYQUESTIONONE, \n\to_CyberOneIncreasedLimitQuestionTwo AS CYBERSUITEELIGIBILITYQUESTIONTWO, \n\to_CyberOneIncreasedLimitQuestionThree AS CYBERSUITEELIGIBILITYQUESTIONTHREE, \n\to_CyberOneIncreasedLimitQuestionFour AS CYBERSUITEELIGIBILITYQUESTIONFOUR, \n\to_CyberOneIncreasedLimitQuestionFive AS CYBERSUITEELIGIBILITYQUESTIONFIVE, \n\to_CyberOneIncreasedLimitQuestionSix AS CYBERSUITEELIGIBILITYQUESTIONSIX, \n\to_RatingTier AS RATINGTIER\n\tFROM EXP_Output\n),\nSQ_CyberSuiteDetail_Offset_and_Deprecated AS (\n\tSELECT \r\n\tCSDToUpdate.CyberSuiteDetailId,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionOne,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionTwo,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionThree,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionFour,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionFive,\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionSix,\r\n\tCSDPrevious.RatingTier\r\n\tFROM\r\n\tWorkPremiumTransactionOffsetLineage WPTOL\r\n\tinner join CyberSuiteDetail CSDPrevious\r\n\ton ( CSDPrevious.PremiumTransactionID= WPTOL.previouspremiumtransactionid)\r\n\tinner join CyberSuiteDetail CSDToUpdate\r\n\ton ( CSDToUpdate.PremiumTransactionID= WPTOL.PremiumTransactionid)\r\n\tINNER JOIN premiumtransaction pt WITH (NOLOCK) on\r\n\tWPTOL.premiumtransactionID=pt.premiumtransactionID and PT.OffsetOnsetCode in ('Offset','Deprecated')\r\n\tWHERE\r\n\tWPTOL.UpdateAttributeFlag = 1 \r\n\tAND (\r\n\tCSDPrevious.CyberSuiteEligibilityQuestionOne <> CSDToUpdate.CyberSuiteEligibilityQuestionOne \r\n\tOR CSDPrevious.CyberSuiteEligibilityQuestionTwo <> CSDToUpdate.CyberSuiteEligibilityQuestionTwo \r\n\tOR CSDPrevious.CyberSuiteEligibilityQuestionThree <> CSDToUpdate.CyberSuiteEligibilityQuestionThree \r\n\tOR CSDPrevious.CyberSuiteEligibilityQuestionFour <> CSDToUpdate.CyberSuiteEligibilityQuestionFour \r\n\tOR CSDPrevious.CyberSuiteEligibilityQuestionFive <> CSDToUpdate.CyberSuiteEligibilityQuestionFive \r\n\tOR CSDPrevious.CyberSuiteEligibilityQuestionSix <> CSDToUpdate.CyberSuiteEligibilityQuestionSix \r\n\tOR CSDPrevious.RatingTier <> CSDToUpdate.RatingTier \r\n\t)\n),\nEXP_Input_Offset AS (\n\tSELECT\n\tCyberSuiteDetailId,\n\tCyberSuiteEligibilityQuestionOne,\n\tCyberSuiteEligibilityQuestionTwo,\n\tCyberSuiteEligibilityQuestionThree,\n\tCyberSuiteEligibilityQuestionFour,\n\tCyberSuiteEligibilityQuestionFive,\n\tCyberSuiteEligibilityQuestionSix,\n\tRatingTier,\n\tSYSDATE AS ModifiedDate\n\tFROM SQ_CyberSuiteDetail_Offset_and_Deprecated\n),\nUPD_Update_Offset AS (\n\tSELECT\n\tCyberSuiteDetailId, \n\tCyberSuiteEligibilityQuestionOne, \n\tCyberSuiteEligibilityQuestionTwo, \n\tCyberSuiteEligibilityQuestionThree, \n\tCyberSuiteEligibilityQuestionFour, \n\tCyberSuiteEligibilityQuestionFive, \n\tCyberSuiteEligibilityQuestionSix, \n\tRatingTier, \n\tModifiedDate\n\tFROM EXP_Input_Offset\n),\nCyberSuiteDetail_Offset AS (\n\tMERGE INTO CyberSuiteDetail AS T\n\tUSING UPD_Update_Offset AS S\n\tON T.CyberSuiteDetailId = S.CyberSuiteDetailId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.ModifiedDate, T.CyberSuiteEligibilityQuestionOne = S.CyberSuiteEligibilityQuestionOne, T.CyberSuiteEligibilityQuestionTwo = S.CyberSuiteEligibilityQuestionTwo, T.CyberSuiteEligibilityQuestionThree = S.CyberSuiteEligibilityQuestionThree, T.CyberSuiteEligibilityQuestionFour = S.CyberSuiteEligibilityQuestionFour, T.CyberSuiteEligibilityQuestionFive = S.CyberSuiteEligibilityQuestionFive, T.CyberSuiteEligibilityQuestionSix = S.CyberSuiteEligibilityQuestionSix, T.RatingTier = S.RatingTier\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_PT": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}