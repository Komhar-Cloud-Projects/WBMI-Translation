{
    "name": "s_m_CLM_DW_LOAD_NurseAssignmentTimeWorked",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseAssignmentTimeWorked",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_nurse_assignment_time_worked_stage AS (\n\tSELECT\n\t\tNurseAssignmentTimeWorkedStageId,\n\t\tnurse_assignment_id,\n\t\ttime_worked_seq,\n\t\tdate_worked,\n\t\ttime_worked_hours,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM nurse_assignment_time_worked_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tnurse_assignment_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(nurse_assignment_id))),\r\n\t--  -1,nurse_assignment_id)\n\tIFF(ltrim(rtrim(nurse_assignment_id)) IS NULL, - 1, nurse_assignment_id) AS o_nurse_assignment_id,\n\ttime_worked_seq,\n\t-- *INF*: iif(isnull(ltrim(rtrim(time_worked_seq))), -1, time_worked_seq)\n\tIFF(ltrim(rtrim(time_worked_seq)) IS NULL, - 1, time_worked_seq) AS o_time_worked_seq,\n\tdate_worked,\n\t-- *INF*: iif(isnull(ltrim(rtrim(date_worked))), to_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'), date_worked)\n\tIFF(\n\t    ltrim(rtrim(date_worked)) IS NULL,\n\t    TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    date_worked\n\t) AS o_date_worked,\n\ttime_worked_hours,\n\t-- *INF*: iif(isnull(ltrim(rtrim(time_worked_hours))), 0, time_worked_hours)\n\tIFF(ltrim(rtrim(time_worked_hours)) IS NULL, 0, time_worked_hours) AS o_time_worked_hours\n\tFROM SQ_nurse_assignment_time_worked_stage\n),\nLKP_NurseAssignment AS (\n\tSELECT\n\tNurseAssignmentAkId,\n\tnurse_assignment_id\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseAssignmentAkId as NurseAssignmentAkId, \r\n\t\tN.nurse_assignment_id as nurse_assignment_id\r\n\t\t\r\n\t\t FROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignment N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY nurse_assignment_id ORDER BY NurseAssignmentAkId) = 1\n),\nEXP_Lkp_Defualt AS (\n\tSELECT\n\tNurseAssignmentAkId,\n\t-- *INF*: iif(isnull(NurseAssignmentAkId), -1,NurseAssignmentAkId)\n\tIFF(NurseAssignmentAkId IS NULL, - 1, NurseAssignmentAkId) AS o_NurseAssignmentAkId\n\tFROM LKP_NurseAssignment\n),\nLKP_NurseAssignmentTimeWorked AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedId,\n\tNurseAssignmentTimeWorkedAkId,\n\tNurseAssignmentAkId,\n\tTimeWorkedSequence,\n\tWorkedDate,\n\tTimeWorkedHours,\n\tIN_TimeWorkedSequence\n\tFROM (\n\t\tSELECT \r\n\t\tN.NurseAssignmentTimeWorkedId as NurseAssignmentTimeWorkedId, N.NurseAssignmentTimeWorkedAkId as NurseAssignmentTimeWorkedAkId, \r\n\t\tN.TimeWorkedSequence as TimeWorkedSequence, \r\n\t\tN.WorkedDate as WorkedDate, \r\n\t\tN.TimeWorkedHours as TimeWorkedHours, \r\n\t\tN.NurseAssignmentAkId as NurseAssignmentAkId \r\n\t\t\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentTimeWorked N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY NurseAssignmentAkId,TimeWorkedSequence ORDER BY NurseAssignmentTimeWorkedId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseAssignmentTimeWorked.NurseAssignmentTimeWorkedId AS Lkp_NurseAssignmentTimeWorkedId,\n\tLKP_NurseAssignmentTimeWorked.NurseAssignmentTimeWorkedAkId AS Lkp_NurseAssignmentTimeWorkedAkId,\n\tLKP_NurseAssignmentTimeWorked.NurseAssignmentAkId AS Lkp_NurseAssignmentAkId,\n\tLKP_NurseAssignmentTimeWorked.TimeWorkedSequence AS Lkp_TimeWorkedSequence,\n\tLKP_NurseAssignmentTimeWorked.WorkedDate AS Lkp_WorkedDate,\n\tLKP_NurseAssignmentTimeWorked.TimeWorkedHours AS Lkp_TimeWorkedHours,\n\t-- *INF*: iif(isnull(Lkp_NurseAssignmentTimeWorkedId), 'NEW',\r\n\t-- \r\n\t--   iif(  \r\n\t-- \r\n\t--  ltrim(rtrim(Lkp_NurseAssignmentAkId)) != ltrim(rtrim(NurseAssignmentAkId))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_TimeWorkedSequence)) != ltrim(rtrim(TimeWorkedSequence))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_WorkedDate)) != ltrim(rtrim(WorkedDate))\r\n\t-- \r\n\t-- or\r\n\t-- \r\n\t--    ltrim(rtrim(Lkp_TimeWorkedHours)) != ltrim(rtrim(TimeWorkedHours)),\r\n\t-- \r\n\t-- --or\r\n\t-- \r\n\t-- --   ltrim(rtrim(Lkp_NurseAssignmentTimeWorkedAkId)) != ltrim(rtrim(NurseAssignmentTimeWorkedAkId))\r\n\t-- \r\n\t--    'UPDATE', 'NOCHANGE')\r\n\t--   \r\n\t--    )\n\tIFF(\n\t    Lkp_NurseAssignmentTimeWorkedId IS NULL, 'NEW',\n\t    IFF(\n\t        ltrim(rtrim(Lkp_NurseAssignmentAkId)) != ltrim(rtrim(NurseAssignmentAkId))\n\t        or ltrim(rtrim(Lkp_TimeWorkedSequence)) != ltrim(rtrim(TimeWorkedSequence))\n\t        or ltrim(rtrim(Lkp_WorkedDate)) != ltrim(rtrim(WorkedDate))\n\t        or ltrim(rtrim(Lkp_TimeWorkedHours)) != ltrim(rtrim(TimeWorkedHours)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(\n\t    v_ChangedFlag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SourceSystemId,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Lkp_Defualt.o_NurseAssignmentAkId AS NurseAssignmentAkId,\n\tEXP_Src_Values.o_time_worked_seq AS TimeWorkedSequence,\n\tEXP_Src_Values.o_date_worked AS WorkedDate,\n\tEXP_Src_Values.o_time_worked_hours AS TimeWorkedHours\n\tFROM EXP_Lkp_Defualt\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseAssignmentTimeWorked\n\tON LKP_NurseAssignmentTimeWorked.NurseAssignmentAkId = EXP_Lkp_Defualt.o_NurseAssignmentAkId AND LKP_NurseAssignmentTimeWorked.TimeWorkedSequence = EXP_Src_Values.o_time_worked_seq\n),\nFIL_Lkp_Target AS (\n\tSELECT\n\tChangedFlag, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tEffectiveDate, \n\tExpirationDate, \n\tSourceSystemId, \n\tCreatedDate, \n\tModifiedDate, \n\tNurseAssignmentAkId, \n\tTimeWorkedSequence, \n\tWorkedDate, \n\tTimeWorkedHours, \n\tLkp_NurseAssignmentTimeWorkedAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseAssignmentTimeWorked AS (\n\tCREATE SEQUENCE SEQ_NurseAssignmentTimeWorked\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Akid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemId,\n\tCreatedDate,\n\tModifiedDate,\n\tNurseAssignmentAkId,\n\tTimeWorkedSequence,\n\tWorkedDate,\n\tTimeWorkedHours,\n\t-- *INF*: iif(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentTimeWorkedAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseAssignmentTimeWorkedAkId) AS NurseAssignmentTimeWorkedAkId,\n\tLkp_NurseAssignmentTimeWorkedAkId,\n\tSEQ_NurseAssignmentTimeWorked.NEXTVAL\n\tFROM FIL_Lkp_Target\n),\nNurseAssignmentTimeWorked_Insert AS (\n\tINSERT INTO NurseAssignmentTimeWorked\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseAssignmentTimeWorkedAkId, NurseAssignmentAkId, TimeWorkedSequence, WorkedDate, TimeWorkedHours)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSEASSIGNMENTTIMEWORKEDAKID, \n\tNURSEASSIGNMENTAKID, \n\tTIMEWORKEDSEQUENCE, \n\tWORKEDDATE, \n\tTIMEWORKEDHOURS\n\tFROM EXP_Akid_Insert_Target\n),\nSQ_NurseAssignmentTimeWorked AS (\n\tSELECT\r\n\tA.NurseAssignmentTimeWorkedId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate, \r\n\tA.NurseAssignmentTimeWorkedAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentTimeWorked A\r\n\t\r\n\tWhere Exists \r\n\t  ( \r\n\tSELECT 1\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseAssignmentTimeWorked B\r\n\twhere\r\n\tB.CurrentSnapshotFlag =1\r\n\tAND\r\n\tA.NurseAssignmentTimeWorkedAkId= B.NurseAssignmentTimeWorkedAkId\r\n\t\r\n\tgroup by \r\n\tB.NurseAssignmentTimeWorkedAkId\r\n\t\r\n\thaving \r\n\tcount(*) > 1 \r\n\t   )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseAssignmentTimeWorkedAkId, \r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedId,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tNurseAssignmentTimeWorkedAkId= v_PREV_ROW_NurseAssignmentTimeWorkedAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    NurseAssignmentTimeWorkedAkId = v_PREV_ROW_NurseAssignmentTimeWorkedAkId, DATEADD(SECOND,- 1,v_PREV_ROW_EffectiveDate),\n\t    orig_ExpirationDate\n\t) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseAssignmentTimeWorkedAkId AS v_PREV_ROW_NurseAssignmentTimeWorkedAkId,\n\tNurseAssignmentTimeWorkedAkId,\n\tsysdate AS ModifiedDate\n\tFROM SQ_NurseAssignmentTimeWorked\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedId, \n\tCurrentSnapshotFlag, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE TRUE\n),\nUPD_NurseAssignmentTimeWorked AS (\n\tSELECT\n\tNurseAssignmentTimeWorkedId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowAkId\n),\nNurseAssignmentTimeWorked_Update AS (\n\tMERGE INTO NurseAssignmentTimeWorked AS T\n\tUSING UPD_NurseAssignmentTimeWorked AS S\n\tON T.NurseAssignmentTimeWorkedId = S.NurseAssignmentTimeWorkedId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}