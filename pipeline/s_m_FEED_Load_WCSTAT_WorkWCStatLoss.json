{
    "name": "s_m_FEED_Load_WCSTAT_WorkWCStatLoss",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_WCSTAT_WorkWCStatLoss",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_AuditSchedule AS (\n\tSELECT\n\tAuditStatus,\n\tPolicyKey,\n\tInsuranceLine,\n\tAuditEffectiveDate,\n\tAuditExpirationDate\n\tFROM (\n\t\tSELECT \n\t\t\tAuditStatus,\n\t\t\tPolicyKey,\n\t\t\tInsuranceLine,\n\t\t\tAuditEffectiveDate,\n\t\t\tAuditExpirationDate\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.AuditSchedule\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,InsuranceLine,AuditEffectiveDate,AuditExpirationDate ORDER BY AuditStatus) = 1\n),\nSQ_Loss AS (\n\tDECLARE @rundate as datetime        \r\n\tSET @rundate = DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + (@{pipeline().parameters.NUM_OF_MONTHS}) +1, 0)\r\n\t\r\n\t--Claims of PMS Policies\r\n\tSELECT DISTINCT\r\n\tPolicyCoverage.TypeBureauCode\r\n\t,policy.pol_num\r\n\t,policy.pol_mod\r\n\t,policy.pol_sym\r\n\t,RiskLocation.StateProvinceCode\r\n\t,policy.pol_eff_date\r\n\t,policy.pol_exp_date\r\n\t,policy.pol_cancellation_date\r\n\t,policy.pol_cancellation_ind\r\n\t,PolicyCoverage.InterstateRiskId\r\n\t,contract_customer.fed_tax_id\r\n\t,policy.pol_term\r\n\t,InsuranceSegment.InsuranceSegmentAbbreviation\r\n\t,contract_customer.cust_role\r\n\t,contract_customer.name\r\n\t,contract_customer_address.addr_line_1\r\n\t,contract_customer_address.city_name\r\n\t,contract_customer_address.state_prov_code\r\n\t,contract_customer_address.zip_postal_code\r\n\t,0 as Exposure\r\n\t,FIRST_VALUE(StatisticalCoverage.classcode) over(partition by claim_party_occurrence.claim_party_occurrence_ak_id order by claim_party_occurrence.eff_from_date desc) Class_Code\r\n\t,claim_occurrence.claim_loss_date\r\n\t,claim_occurrence.claim_occurrence_num\r\n\t,claim_occurrence.s3p_claim_num\r\n\t,CASE\r\n\t      WHEN (claimant_calculation.claimant_date_type = '2OPEN') \r\n\t      THEN \r\n\t         CASE\r\n\t            WHEN (StateDim.StateAbbreviation = 'MI' AND lmf.paid_loss_amt = 0) \r\n\t            THEN '4'\r\n\t            ELSE '0'\r\n\t         END\r\n\t      WHEN (claimant_calculation.claimant_date_type = '4REOPEN') \r\n\t      THEN \r\n\t         CASE\r\n\t            WHEN (StateDim.StateAbbreviation = 'MI' OR StateDim.StateAbbreviation = 'WI') \r\n\t            THEN '0'\r\n\t            ELSE '2'\r\n\t         END\r\n\t      ELSE '1'\r\n\t   END claim_occurrence_status_code\r\n\t,claim_occurrence.claim_cat_code\r\n\t,claim_occurrence.loss_loc_state\r\n\t,workers_comp_claimant_detail.body_part_code\r\n\t,workers_comp_claimant_detail.nature_inj_code\r\n\t,workers_comp_claimant_detail.cause_inj_code\r\n\t,policy.pol_ak_id\r\n\t,claimant_coverage_detail.StatisticalCoverageAKID as CoverageAKID\r\n\t,SUBSTRING(workers_comp_claimant_detail.loss_condition,3,2)\r\n\t,workers_comp_claimant_detail.managed_care_org_type\r\n\t,PolicyCoverage.InsuranceLine\r\n\t,case when ltrim(rtrim(substring(workers_comp_claimant_detail.wc_claimant_num,8,3)))='' then '001' \r\n\telse substring(workers_comp_claimant_detail.wc_claimant_num,8,3) end claimant_num\r\n\t--prod-12901 change, replace claim_party_occurrence.claimant_num with workers_comp_claimant_detail.wc_claimant_num\r\n\t,workers_comp_claimant_detail.jurisdiction_state_code\r\n\t,claim_occurrence.ClaimRelationshipKey\r\n\t,claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t,claim_case.suit_how_claim_closed\r\n\t,pa.NoncomplianceofWCPoolAudit\r\n\t,claim_occurrence.wc_cat_code\r\n\t,case when sup_workers_comp_occupation.occuptn_descript is null\r\n\tthen 'N/A'\r\n\telse  sup_workers_comp_occupation.occuptn_descript\r\n\tend  as Occupation_Description\r\n\t,\r\n\tcase when workers_comp_claimant_detail.Avg_Wkly_Wage is null\r\n\tthen 0\r\n\telse workers_comp_claimant_detail.Avg_Wkly_Wage\r\n\tend as Weekly_Wage_Amount\r\n\t,case when EAF.EmployerLegalAmountPaid is null \r\n\tthen 0 \r\n\telse EAF.EmployerLegalAmountPaid\r\n\tend as EmployerAttorneyFees\r\n\t\r\n\tFROM    @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_fact LMF\r\n\t-- Note: Loss_Master_Fact is used due missing historic PMS data from IL table\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_dim LMD\r\n\tON LMF.loss_master_dim_id=LMD.loss_master_dim_id\r\n\t\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim CCDM\r\n\tON LMF.claimant_cov_dim_id=CCDM.claimant_cov_dim_id\r\n\t\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME_DM}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StateDim\r\n\ton LMD.risk_state_prov_code = StateDim.StateCode\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail\r\n\tON CCDM.edw_claimant_cov_det_ak_id= claimant_coverage_detail.claimant_cov_det_ak_id AND claimant_coverage_detail.crrnt_snpsht_flag = 1\r\n\tAND claimant_coverage_detail.PolicySourceID <> 'DUC'\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence \r\n\tON claimant_coverage_detail.claim_party_occurrence_ak_id=claim_party_occurrence.claim_party_occurrence_ak_id \r\n\tAND claim_party_occurrence.crrnt_snpsht_flag=1 \r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence\r\n\tON claim_party_occurrence.claim_occurrence_ak_id=claim_occurrence.claim_occurrence_ak_id \r\n\tAND claim_occurrence.crrnt_snpsht_flag=1 \r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_calculation \r\n\tON claim_occurrence_calculation.claim_occurrence_ak_id=claim_occurrence.claim_occurrence_ak_id \r\n\tAND claim_occurrence_calculation.crrnt_snpsht_flag=1 \r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.workers_comp_claimant_detail \r\n\tON workers_comp_claimant_detail.claim_party_occurrence_ak_id=claim_party_occurrence.claim_party_occurrence_ak_id \r\n\tAND workers_comp_claimant_detail.crrnt_snpsht_flag=1 \r\n\t\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy \r\n\tON policy.pol_ak_id=claim_occurrence.pol_key_ak_id \r\n\tand policy.crrnt_snpsht_flag=1\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer\r\n\tON contract_customer.contract_cust_ak_id = policy.contract_cust_ak_id and contract_customer.crrnt_snpsht_flag = 1\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_address\r\n\tON contract_customer_address.contract_cust_ak_id = contract_customer.contract_cust_ak_id and contract_customer_address.crrnt_snpsht_flag = 1\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage \r\n\tON claimant_coverage_detail.StatisticalCoverageAKID=StatisticalCoverage.StatisticalCoverageAKID \r\n\tand StatisticalCoverage.CurrentSnapshotFlag=1 and StatisticalCoverage.SourceSystemID='PMS'\r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage\r\n\tON StatisticalCoverage.PolicyCoverageAKId=PolicyCoverage.PolicyCoverageAKId \r\n\tand PolicyCoverage.CurrentSnapshotFlag=1 \r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation \r\n\tON RiskLocation.RiskLocationAKId=PolicyCoverage.RiskLocationAKId \r\n\tand RiskLocation.CurrentSnapshotFlag=1 \r\n\t\r\n\tINNER JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_calculation \r\n\tON claim_party_occurrence.claim_party_occurrence_ak_id = claimant_calculation.claim_party_occurrence_ak_id\r\n\tand claimant_calculation.eff_from_date <= @rundate\r\n\tand claimant_calculation.eff_to_date >= @rundate\r\n\t\r\n\tLEFT JOIN    @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment\r\n\tON InsuranceSegment.InsuranceSegmentAKId = policy.InsuranceSegmentAKId and InsuranceSegment.CurrentSnapshotFlag = 1\r\n\t\r\n\tLEFT JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_case on \r\n\tclaim_party_occurrence.claim_case_ak_id=claim_case.claim_case_ak_id and claim_case.crrnt_snpsht_flag=1\r\n\t\r\n\tLEFT JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyAudit PA on \r\n\tpolicy.pol_ak_id = PA.PolicyAKId\r\n\tand PA.CurrentSnapshotFlag = 1\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_workers_comp_occupation on\r\n\tworkers_comp_claimant_detail.occuptn_code = sup_workers_comp_occupation.occuptn_code\r\n\tand sup_workers_comp_occupation.crrnt_snpsht_flag=1\r\n\tLEFT JOIN\r\n\t(\r\n\tSELECT  SUM(\r\n\tCASE  \r\n\t             WHEN CPC.claim_pay_ctgry_type = 'SA'\r\n\t             THEN CPC.claim_pay_ctgry_amt\r\n\t             ELSE 0\r\n\t        END) AS EmployerLegalAmountPaid,\r\n\t       CO.claim_occurrence_ak_id, \r\n\t       WCCD.claim_party_occurrence_ak_id\r\n\tFROM   claim_transaction CT \r\n\t       INNER JOIN claimant_coverage_detail CCD\r\n\t               ON CT.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id\r\n\t                  AND CCD.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN claim_payment CP\r\n\t               ON CP.claim_pay_ak_id = CT.claim_pay_ak_id\r\n\t       INNER JOIN claim_payment_category CPC\r\n\t               ON CPC.claim_pay_ak_id = CP.claim_pay_ak_id\r\n\t      INNER JOIN claim_party_occurrence CPO\r\n\t               ON CPO.claim_party_occurrence_ak_id =\r\n\t                  CCD.claim_party_occurrence_ak_id\r\n\t                  AND CPO.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN workers_comp_claimant_detail WCCD\r\n\t               ON WCCD.claim_party_occurrence_ak_id =\r\n\t                  CCD.claim_party_occurrence_ak_id\r\n\t                  AND WCCD.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN claim_occurrence CO\r\n\t               ON CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id\r\n\t                  AND CO.crrnt_snpsht_flag = 1\r\n\tWHERE  CT.source_sys_id = 'EXCEED'\r\n\tgroup by        CO.claim_occurrence_ak_id, \r\n\t       WCCD.claim_party_occurrence_ak_id\r\n\t\t   ) EAF\r\n\t\t   on \r\n\t\t   EAF.claim_party_occurrence_ak_id = claim_party_occurrence.claim_party_occurrence_ak_id\r\n\t\t   AND EAF.claim_occurrence_ak_id = claim_occurrence.claim_occurrence_ak_id \r\n\t\t   \r\n\tWHERE PolicyCoverage.TypeBureauCode in ('WC','WP','WorkersCompensation') \r\n\tand ((DATEDIFF(MM,policy.pol_eff_date, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0) ))) in (18,30,42,54,66,78,90,102,114,126) \r\n\t\r\n\t@{pipeline().parameters.LOSS_WHERE_CLAUSE}\r\n\t\r\n\t--Claims of DCT Policies\r\n\tUNION ALL\r\n\t\r\n\tSELECT DISTINCT\r\n\tPC.TypeBureauCode\r\n\t,P.pol_num\r\n\t,P.pol_mod\r\n\t,P.pol_sym as pol_sym\r\n\t,null as StateProvinceCode\r\n\t,P.pol_eff_date\r\n\t,P.pol_exp_date\r\n\t,P.pol_cancellation_date\r\n\t,P.pol_cancellation_ind\r\n\t,null as InterstateRiskId\r\n\t,CCust.fed_tax_id\r\n\t,P.pol_term\r\n\t,ISeg.InsuranceSegmentAbbreviation\r\n\t,CCust.cust_role\r\n\t,CCust.name\r\n\t,contract_customer_address.addr_line_1\r\n\t,contract_customer_address.city_name\r\n\t,contract_customer_address.state_prov_code\r\n\t,contract_customer_address.zip_postal_code\r\n\t,null as Exposure\r\n\t,null as Class_Code\r\n\t,CO.claim_loss_date\r\n\t,CO.claim_occurrence_num\r\n\t,ltrim(rtrim(CO.s3p_claim_num)) as s3p_claim_num\r\n\t,CASE\r\n\t      WHEN (CC.claimant_date_type = '2OPEN') \r\n\t      THEN \r\n\t         CASE\r\n\t            WHEN (SS.state_code = 'MI' AND LMC.paid_loss_amt = 0) \r\n\t            THEN '4'\r\n\t            ELSE '0'\r\n\t         END\r\n\t      WHEN (CC.claimant_date_type = '4REOPEN') \r\n\t      THEN \r\n\t         CASE\r\n\t            WHEN (SS.state_code = 'MI' OR SS.state_code = 'WI') \r\n\t            THEN '0'\r\n\t            ELSE '2'\r\n\t         END\r\n\t      ELSE '1'\r\n\t   END as claim_occurrence_status_code\r\n\t,CO.claim_cat_code\r\n\t,CO.loss_loc_state\r\n\t,WCCD.body_part_code\r\n\t,WCCD.nature_inj_code\r\n\t,WCCD.cause_inj_code\r\n\t,P.pol_ak_id\r\n\t,CCD.RatingCoverageAKID as CoverageAKID\r\n\t,SUBSTRING(WCCD.loss_condition,3,2) as loss_condition\r\n\t,WCCD.managed_care_org_type\r\n\t,PC.InsuranceLine\r\n\t,case when ltrim(rtrim(substring(WCCD.wc_claimant_num,8,3)))='' then '001' else substring(WCCD.wc_claimant_num,8,3) end as claimant_num\r\n\t,WCCD.jurisdiction_state_code\r\n\t,CO.ClaimRelationshipKey\r\n\t,CPO.claim_party_occurrence_ak_id\r\n\t,ISNULL(CCase.suit_how_claim_closed,'N/A') as suit_how_claim_closed\r\n\t,pa.NoncomplianceofWCPoolAudit\r\n\t,CO.wc_cat_code\r\n\t,case when sup_workers_comp_occupation.occuptn_descript is null\r\n\tthen 'N/A'\r\n\telse  sup_workers_comp_occupation.occuptn_descript\r\n\tend  as Occupation_Description\r\n\t,case when WCCD.Avg_Wkly_Wage is null\r\n\tthen 0\r\n\telse WCCD.Avg_Wkly_Wage\r\n\tend as Weekly_Wage_Amount\r\n\t,case when EAF.EmployerLegalAmountPaid is null \r\n\tthen 0 \r\n\telse EAF.EmployerLegalAmountPaid\r\n\tend as EmployerAttorneyFees\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.loss_master_calculation LMC INNER JOIN dbo.claim_transaction CT ON LMC.claim_trans_ak_id = CT.claim_trans_ak_id\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_detail CCD ON CCD.claimant_cov_det_ak_id =  CT.claimant_cov_det_ak_id and CCD.crrnt_snpsht_flag = 1 AND CCD.PolicySourceID = 'DUC'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_party_occurrence CPO on CCD.claim_party_occurrence_ak_id = CPO.claim_party_occurrence_ak_id and CPO.crrnt_snpsht_flag = 1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence CO ON CPO.claim_occurrence_ak_id=CO.claim_occurrence_ak_id AND CO.crrnt_snpsht_flag=1 \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.workers_comp_claimant_detail  WCCD ON WCCD.claim_party_occurrence_ak_id=CPO.claim_party_occurrence_ak_id AND WCCD.crrnt_snpsht_flag=1 \r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P ON P.pol_ak_id=CO.pol_key_ak_id and P.crrnt_snpsht_flag=1\r\n\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer CCust ON CCust.contract_cust_ak_id = P.contract_cust_ak_id and CCust.crrnt_snpsht_flag = 1\r\n\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.contract_customer_address ON contract_customer_address.contract_cust_ak_id = CCust.contract_cust_ak_id and contract_customer_address.crrnt_snpsht_flag = 1\r\n\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_calculation CC ON CPO.claim_party_occurrence_ak_id = CC.claim_party_occurrence_ak_id\r\n\tand CC.eff_from_date <= @rundate and CC.eff_to_date >= @rundate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_state SS ON LMC.risk_state_prov_code = SS.state_abbrev\r\n\tLEFT JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISeg ON ISeg.InsuranceSegmentAKId = P.InsuranceSegmentAKId and ISeg.CurrentSnapshotFlag = 1\r\n\tLEFT JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_case CCase ON CPO.claim_case_ak_id=CCase.claim_case_ak_id and CCase.crrnt_snpsht_flag=1\r\n\tINNER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC ON PC.PolicyAKID=P.pol_ak_id and PC.CurrentSnapshotFlag=1 \r\n\t\r\n\tLEFT JOIN   @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyAudit PA on \r\n\tp.pol_ak_id = PA.PolicyAKId\r\n\tand PA.CurrentSnapshotFlag = 1\r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_workers_comp_occupation on\r\n\twccd.occuptn_code = sup_workers_comp_occupation.occuptn_code\r\n\tand sup_workers_comp_occupation.crrnt_snpsht_flag=1\r\n\tLEFT JOIN\r\n\t(\r\n\tSELECT  SUM(\r\n\tCASE  \r\n\t             WHEN CPC.claim_pay_ctgry_type = 'SA'\r\n\t             THEN CPC.claim_pay_ctgry_amt\r\n\t             ELSE 0\r\n\t        END) AS EmployerLegalAmountPaid,\r\n\t       CO.claim_occurrence_ak_id, \r\n\t       WCCD.claim_party_occurrence_ak_id\r\n\tFROM   claim_transaction CT \r\n\t       INNER JOIN claimant_coverage_detail CCD\r\n\t               ON CT.claimant_cov_det_ak_id = CCD.claimant_cov_det_ak_id\r\n\t                  AND CCD.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN claim_payment CP\r\n\t               ON CP.claim_pay_ak_id = CT.claim_pay_ak_id\r\n\t       INNER JOIN claim_payment_category CPC\r\n\t               ON CPC.claim_pay_ak_id = CP.claim_pay_ak_id\r\n\t      INNER JOIN claim_party_occurrence CPO\r\n\t               ON CPO.claim_party_occurrence_ak_id =\r\n\t                  CCD.claim_party_occurrence_ak_id\r\n\t                  AND CPO.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN workers_comp_claimant_detail WCCD\r\n\t               ON WCCD.claim_party_occurrence_ak_id =\r\n\t                  CCD.claim_party_occurrence_ak_id\r\n\t                  AND WCCD.crrnt_snpsht_flag = 1\r\n\t       INNER JOIN claim_occurrence CO\r\n\t               ON CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id\r\n\t                  AND CO.crrnt_snpsht_flag = 1\r\n\tWHERE  CT.source_sys_id = 'EXCEED'\r\n\tgroup by        CO.claim_occurrence_ak_id, \r\n\t       WCCD.claim_party_occurrence_ak_id\r\n\t\t   ) EAF\r\n\t\t   on \r\n\t\t   EAF.claim_party_occurrence_ak_id = CPO.claim_party_occurrence_ak_id\r\n\t\t   AND EAF.claim_occurrence_ak_id = CO.claim_occurrence_ak_id  \r\n\t\r\n\tWHERE ((DATEDIFF(MM,P.pol_eff_date, DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS}, 0) ))) in (18,30,42,54,66,78,90,102,114,126)\r\n\tAND PC.TypeBureauCode in ('WC','WP','WorkersCompensation')  \r\n\t\r\n\t@{pipeline().parameters.LOSS_WHERE_CLAUSE_DCT}\n),\nEXP_Loss_Metadata AS (\n\tSELECT\n\tTypeBureauCode,\n\tpol_num,\n\tpol_mod,\n\tpol_sym,\n\tStateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\tInterstateRiskId,\n\tfed_tax_id,\n\tpol_term,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tExposure,\n\tclass_code,\n\tclaim_loss_date,\n\tclaim_occurrence_num,\n\tclaim_num,\n\t-- *INF*: RTRIM(LTRIM(claim_num))\n\tRTRIM(LTRIM(claim_num)) AS v_s3p_claim_num,\n\tv_s3p_claim_num AS o_s3p_claim_num,\n\tclaimant_status_type AS in_claimant_status_type,\n\t-- *INF*: LTRIM(RTRIM(in_claimant_status_type))\n\tLTRIM(RTRIM(in_claimant_status_type)) AS o_claimant_status_type,\n\tclaim_cat_code,\n\tloss_loc_state,\n\tbody_part_code,\n\tnature_inj_code,\n\tcause_inj_code,\n\tpol_ak_id,\n\tCoverageAKID,\n\tloss_condition,\n\tmanaged_care_org_type,\n\tInsuranceLine AS i_InsuranceLine,\n\tclaimant_num AS in_claimant_num,\n\t-- *INF*: LTRIM(RTRIM(in_claimant_num))\n\tLTRIM(RTRIM(in_claimant_num)) AS o_claimant_num,\n\tpol_sym || pol_num || pol_mod AS v_PolicyKey,\n\t-- *INF*: :LKP.LKP_AUDITSCHEDULE(v_PolicyKey, i_InsuranceLine, pol_eff_date)\n\tLKP_AUDITSCHEDULE_v_PolicyKey_i_InsuranceLine_pol_eff_date.AuditStatus AS v_AuditStatus,\n\tjurisdiction_state_code,\n\tv_AuditStatus AS o_AuditStatus,\n\tNoncomplianceofWCPoolAudit,\n\t-- *INF*: IIF(NoncomplianceofWCPoolAudit=1,'U',DECODE(TRUE,\r\n\t--  IN(UPPER(v_AuditStatus), 'BYPASSED', 'REVERSED', 'OVERDUE'),\r\n\t-- 'Y',\r\n\t-- IN(StateProvinceCode, '21', '48') AND UPPER(v_AuditStatus)='ESTIMATED',\r\n\t-- 'U',\r\n\t-- 'N'\r\n\t--  )\r\n\t-- )\n\tIFF(\n\t    NoncomplianceofWCPoolAudit = 1, 'U',\n\t    DECODE(\n\t        TRUE,\n\t        UPPER(v_AuditStatus) IN ('BYPASSED','REVERSED','OVERDUE'), 'Y',\n\t        StateProvinceCode IN ('21','48')\n\t    and UPPER(v_AuditStatus) = 'ESTIMATED', 'U',\n\t        'N'\n\t    )\n\t) AS o_EstimatedAuditCode,\n\tClaimRelationshipKey,\n\tclaim_party_occurrence_ak_id,\n\tsuit_how_claim_closed,\n\twc_cat_code,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM SQ_Loss\n\tLEFT JOIN LKP_AUDITSCHEDULE LKP_AUDITSCHEDULE_v_PolicyKey_i_InsuranceLine_pol_eff_date\n\tON LKP_AUDITSCHEDULE_v_PolicyKey_i_InsuranceLine_pol_eff_date.PolicyKey = v_PolicyKey\n\tAND LKP_AUDITSCHEDULE_v_PolicyKey_i_InsuranceLine_pol_eff_date.InsuranceLine = i_InsuranceLine\n\tAND LKP_AUDITSCHEDULE_v_PolicyKey_i_InsuranceLine_pol_eff_date.AuditEffectiveDate = pol_eff_date\n\n),\nLKP_ClaimPayCtgryType AS (\n\tSELECT\n\to_claim_pay_ctgry_type,\n\tclaim_num,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tselect \r\n\t\to_claim_pay_ctgry_type as o_claim_pay_ctgry_type,\r\n\t\ts_ordr as s_ordr,\r\n\t\tclndr_date as clndr_date,\r\n\t\tclaim_num as claim_num,\r\n\t\tclaim_party_occurrence_ak_id as claim_party_occurrence_ak_id\r\n\t\tfrom\r\n\t\t(SELECT a.o_claim_pay_ctgry_type as o_claim_pay_ctgry_type ,\r\n\t\t\t\ta.s_ordr as s_ordr,\r\n\t\t\t\ta.clndr_date as clndr_date,\r\n\t\t\t\ta.claim_num as claim_num,\r\n\t\t\t\ta.edw_claim_party_occurrence_ak_id as claim_party_occurrence_ak_id,\r\n\t\t\t\trow_number() over (partition by a.edw_claim_party_occurrence_ak_id ORDER BY a.claim_num,a.s_ordr,a.clndr_date desc) row_num\r\n\t\tFROM \r\n\t\t(SELECT  distinct \r\n\t\t\t case  when cd.inj_result_death_ind = 'Y' then 'DT'\r\n\t\t         when cpctd.claim_pay_ctgry_type in ('DT','PT','PP','PB','DF','PD','TD','VR','SI','1B') then cpctd.claim_pay_ctgry_type  \r\n\t\t\t\t  else 'ZZ'  \r\n\t\t\t end AS o_claim_pay_ctgry_type,  \r\n\t\t\t case when cd.inj_result_death_ind = 'Y' then 0\r\n\t\t\t            when cpctd.claim_pay_ctgry_type in ('DT','PT','PP','PB','DF','PD','TD','VR','SI','1B') then 1  \r\n\t\t\t else 2 \r\n\t\t\t end AS s_ordr,\r\n\t\t\t cod.claim_num as claim_num,\r\n\t\t\t c.clndr_date\r\n\t\t\t ,cd.edw_claim_party_occurrence_ak_id\r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact cltf\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_payment_category_type_dim cpctd on cpctd.claim_pay_ctgry_type_dim_id = cltf.claim_pay_ctgry_type_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction_type_dim ctyd on cltf.claim_trans_type_dim_id = ctyd.claim_trans_type_dim_id \r\n\t\tand trans_kind_code = 'D' \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim c on cltf.claim_trans_date_id=c.clndr_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.Claim_occurrence_dim cod on cltf.claim_occurrence_dim_id = cod.claim_occurrence_dim_id\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_dim cd on cd.claimant_dim_id = cltf.claimant_dim_id\r\n\t\tWHERE c.clndr_date < DATEADD(MONTH, DATEDIFF(MONTH, 0, GETDATE()), 0)\r\n\t\t) a\r\n\t\t)x\r\n\t\twhere row_num = 1\r\n\t\t--ORDER BY claim_num,s_ordr,clndr_date desc, claim_party_occurrence_ak_id, o_claim_pay_ctgry_type --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_num,claim_party_occurrence_ak_id ORDER BY o_claim_pay_ctgry_type) = 1\n),\nLKP_RatingCoverage_DCT AS (\n\tSELECT\n\tStateProvinceCode,\n\tInterstateRiskId,\n\tExposure,\n\tClassCode,\n\tRatingCoverageAKID,\n\tPolicyAKID\n\tFROM (\n\t\tSELECT DISTINCT RL.stateprovincecode  AS StateProvinceCode, \r\n\t\t                PC.interstateriskid   AS InterstateRiskId, \r\n\t\t                RC.exposure           AS Exposure, \r\n\t\t                RC.classcode          AS ClassCode, \r\n\t\t                P.pol_ak_id           AS PolicyAKID, \r\n\t\t                RC.ratingcoverageakid AS RatingCoverageAKID \r\n\t\tFROM   v2.policy P INNER JOIN dbo.risklocation RL ON P.pol_ak_id = RL.policyakid AND P.crrnt_snpsht_flag = 1 \r\n\t\t       INNER JOIN dbo.policycoverage PC ON RL.risklocationakid = PC.risklocationakid AND RL.currentsnapshotflag = 1 \r\n\t\t       INNER JOIN dbo.ratingcoverage RC ON PC.policycoverageakid = RC.policycoverageakid \r\n\t\tWHERE  EXISTS (SELECT 1 FROM   loss_master_calculation LMC WHERE  P.pol_ak_id = LMC.pol_ak_id)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,RatingCoverageAKID ORDER BY StateProvinceCode DESC) = 1\n),\nlkp_claim_loss_transactions_fact_calculate_ITD AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaim_pay_ctgry_lump_sum_ind,\n\tPaidIndemnityAmount,\n\tPaidMedicalAmount,\n\tDeductibleReimbursementAmount,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tIncurredAllocatedLossAdjustmentExpenseAmount,\n\tIncurredIndemnityAmount,\n\tIncurredMedicalAmount,\n\tTypeOfRecoveryCode,\n\ttype_of_loss_code,\n\tbody_part_code,\n\tnature_of_inj_code,\n\tcause_inj_code\n\tFROM (\n\t\tSELECT\r\n\t\t\tMAX(CASE claim_payment_category_type_dim.claim_pay_ctgry_lump_sum_ind\r\n\t\t\t\tWHEN 'N/A' THEN 'N'\r\n\t\t\t\tELSE claim_payment_category_type_dim.claim_pay_ctgry_lump_sum_ind\r\n\t\t\tEND) AS claim_pay_ctgry_lump_sum_ind,\r\n\t\t\tSUM((CASE claimant_coverage_dim.cause_of_loss\r\n\t\t\t\tWHEN '05' THEN claim_loss_transaction_fact.direct_loss_paid_including_recoveries\r\n\t\t\t\tELSE 0\r\n\t\t\tEND)) AS PaidIndemnityAmount,\r\n\t\t\tSUM((CASE claimant_coverage_dim.cause_of_loss\r\n\t\t\t\tWHEN '06' THEN (CASE\r\n\t\t\t\t\t\tWHEN trans_ctgry_code NOT IN ('DX') THEN claim_loss_transaction_fact.direct_loss_paid_including_recoveries\r\n\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\tEND)\r\n\t\t\t\t\t+\r\n\t\t\t\t\t(CASE\r\n\t\t\t\t\t\tWHEN trans_ctgry_code = 'WD' THEN ABS(claim_loss_transaction_fact.direct_other_recovery_paid)\r\n\t\t\t\t\t\tWHEN trans_ctgry_code = 'DR' THEN (CASE\r\n\t\t\t\t\t\t\t\tWHEN s3p_trans_code IN ('28', '29') THEN -(ABS(claim_loss_transaction_fact.direct_other_recovery_paid))\r\n\t\t\t\t\t\t\t\tELSE ABS(claim_loss_transaction_fact.direct_other_recovery_paid)\r\n\t\t\t\t\t\t\tEND)\r\n\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\tEND)\r\n\t\t\t\tELSE 0\r\n\t\t\tEND)) AS PaidMedicalAmount,\r\n\t\t\tABS(SUM(CASE\r\n\t\t\t\tWHEN claim_transaction_type_dim.trans_ctgry_code IN ('DX', 'WD', 'DR') THEN claim_loss_transaction_fact.direct_loss_paid_including_recoveries\r\n\t\t\t\tELSE 0\r\n\t\t\tEND)) AS DeductibleReimbursementAmount,\r\n\t\t\tSUM(claim_loss_transaction_fact.direct_alae_paid_including_recoveries) AS PaidAllocatedLossAdjustmentExpenseAmount,\r\n\t\t\tSUM(claim_loss_transaction_fact.direct_alae_incurred_including_recoveries) AS IncurredAllocatedLossAdjustmentExpenseAmount,\r\n\t\t\tSUM((CASE claimant_coverage_dim.cause_of_loss\r\n\t\t\t\tWHEN '05' THEN (claim_loss_transaction_fact.direct_loss_incurred_including_recoveries)\r\n\t\t\t\tELSE 0\r\n\t\t\tEND)) AS IncurredIndemnityAmount,\r\n\t\t\tSUM((CASE claimant_coverage_dim.cause_of_loss\r\n\t\t\t\tWHEN '06' THEN (CASE\r\n\t\t\t\t\t\tWHEN trans_ctgry_code NOT IN ('DX') THEN claim_loss_transaction_fact.direct_loss_incurred_including_recoveries\r\n\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\tEND)\r\n\t\t\t\t\t+\r\n\t\t\t\t\t(CASE\r\n\t\t\t\t\t\tWHEN trans_ctgry_code = 'WD' THEN ABS(claim_loss_transaction_fact.direct_other_recovery_paid)\r\n\t\t\t\t\t\tWHEN trans_ctgry_code = 'DR' THEN (CASE\r\n\t\t\t\t\t\t\t\tWHEN s3p_trans_code IN ('28', '29') THEN -(ABS(claim_loss_transaction_fact.direct_other_recovery_paid))\r\n\t\t\t\t\t\t\t\tELSE ABS(claim_loss_transaction_fact.direct_other_recovery_paid)\r\n\t\t\t\t\t\t\tEND)\r\n\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\tEND)\r\n\t\t\t\tELSE 0\r\n\t\t\tEND)) AS IncurredMedicalAmount,\r\n\t\t\tMAX(CASE\r\n\t\t\t\tWHEN (claim_transaction_type_dim.pms_trans_code IN ('81', '82', '83', '84', '85', '86', '87', '88', '89')) AND\r\n\t\t\t\t\tclaim_loss_transaction_fact.direct_subrogation_paid <> 0 THEN '03'\r\n\t\t\t\tELSE '01'\r\n\t\t\tEND) AS TypeOfRecoveryCode,\r\n\t\t\tMAX(claimant_dim.type_of_loss_code) AS type_of_loss_code,\r\n\t\t\tMIN(CASE\r\n\t\t\t\tWHEN body_part_code = 'N/A' THEN 'ZZ'\r\n\t\t\t\tELSE body_part_code\r\n\t\t\tEND) AS body_part_code,\r\n\t\t\tMIN(claimant_dim.nature_inj_code) AS nature_of_inj_code,\r\n\t\t\tMIN(cause_inj_code) AS cause_inj_code,\r\n\t\t\tclaimant_dim.edw_claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id\r\n\t\tFROM claim_loss_transaction_fact\r\n\t\tINNER JOIN claim_payment_category_type_dim\r\n\t\t\tON claim_payment_category_type_dim.claim_pay_ctgry_type_dim_id = claim_loss_transaction_fact.claim_pay_ctgry_type_dim_id\r\n\t\tINNER JOIN claimant_coverage_dim\r\n\t\t\tON claimant_coverage_dim.claimant_cov_dim_id = claim_loss_transaction_fact.claimant_cov_dim_id\r\n\t\tINNER JOIN claim_transaction_type_dim\r\n\t\t\tON claim_loss_transaction_fact.claim_trans_type_dim_id = claim_transaction_type_dim.claim_trans_type_dim_id\r\n\t\t\tAND trans_kind_code = 'D'\r\n\t\tINNER JOIN claimant_dim claimant_dim\r\n\t\t\tON claimant_dim.claimant_dim_id = claim_loss_transaction_fact.claimant_dim_id\r\n\t\tINNER JOIN calendar_dim c\r\n\t\t\tON claim_loss_transaction_fact.claim_trans_date_id = c.clndr_id\r\n\t\tWHERE c.clndr_date < DATEADD(MM, DATEDIFF(MM, 0, GETDATE()) + @{pipeline().parameters.NUM_OF_MONTHS} + 1, 0)\r\n\t\tGROUP BY claimant_dim.edw_claim_party_occurrence_ak_id\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claim_party_occurrence_ak_id) = 1\n),\nEXP_Extract_All AS (\n\tSELECT\n\tLKP_RatingCoverage_DCT.StateProvinceCode AS StateProvinceCode_DCT,\n\t-- *INF*: IIF(ISNULL(StateProvinceCode_DCT),'N/A',StateProvinceCode_DCT)\n\tIFF(StateProvinceCode_DCT IS NULL, 'N/A', StateProvinceCode_DCT) AS v_StateProvinceCode_DCT,\n\tLKP_RatingCoverage_DCT.InterstateRiskId AS InterstateRiskId_DCT,\n\t-- *INF*: IIF(ISNULL(InterstateRiskId_DCT),'N/A',InterstateRiskId_DCT)\n\tIFF(InterstateRiskId_DCT IS NULL, 'N/A', InterstateRiskId_DCT) AS v_InterstateRiskId_DCT,\n\tLKP_RatingCoverage_DCT.Exposure AS Exposure_DCT,\n\t-- *INF*: IIF(ISNULL(Exposure_DCT),0.00,Exposure_DCT)\n\tIFF(Exposure_DCT IS NULL, 0.00, Exposure_DCT) AS v_Exposure_DCT,\n\tLKP_RatingCoverage_DCT.ClassCode AS ClassCode_DCT,\n\t-- *INF*: IIF(ISNULL(ClassCode_DCT),'N/A',ClassCode_DCT)\n\tIFF(ClassCode_DCT IS NULL, 'N/A', ClassCode_DCT) AS v_ClassCode_DCT,\n\tLKP_RatingCoverage_DCT.RatingCoverageAKID,\n\tLKP_RatingCoverage_DCT.PolicyAKID,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Auditid,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Loss_Metadata.TypeBureauCode,\n\tEXP_Loss_Metadata.pol_num,\n\tEXP_Loss_Metadata.pol_mod,\n\tEXP_Loss_Metadata.pol_sym,\n\t-- *INF*: IIF(pol_sym='000','',pol_sym)\n\tIFF(pol_sym = '000', '', pol_sym) AS o_pol_sym,\n\tEXP_Loss_Metadata.StateProvinceCode,\n\t-- *INF*: IIF(pol_sym = '000', v_StateProvinceCode_DCT, StateProvinceCode)\n\tIFF(pol_sym = '000', v_StateProvinceCode_DCT, StateProvinceCode) AS o_StateProvinceCode,\n\tEXP_Loss_Metadata.pol_eff_date,\n\tEXP_Loss_Metadata.pol_exp_date,\n\tEXP_Loss_Metadata.pol_cancellation_date,\n\tEXP_Loss_Metadata.pol_cancellation_ind,\n\tEXP_Loss_Metadata.InterstateRiskId,\n\t-- *INF*: IIF(pol_sym = '000',v_InterstateRiskId_DCT, InterstateRiskId) \n\tIFF(pol_sym = '000', v_InterstateRiskId_DCT, InterstateRiskId) AS o_InterstateRiskId,\n\tEXP_Loss_Metadata.fed_tax_id,\n\tEXP_Loss_Metadata.pol_term,\n\tEXP_Loss_Metadata.InsuranceSegmentAbbreviation,\n\tEXP_Loss_Metadata.cust_role,\n\tEXP_Loss_Metadata.name,\n\tEXP_Loss_Metadata.addr_line_1,\n\tEXP_Loss_Metadata.city_name,\n\tEXP_Loss_Metadata.state_prov_code,\n\tEXP_Loss_Metadata.zip_postal_code,\n\tEXP_Loss_Metadata.Exposure,\n\t-- *INF*: IIF(pol_sym = '000', v_Exposure_DCT, Exposure) \n\tIFF(pol_sym = '000', v_Exposure_DCT, Exposure) AS O_Exposure,\n\tEXP_Loss_Metadata.class_code,\n\t-- *INF*: IIF(pol_sym = '000', v_ClassCode_DCT, class_code) \n\tIFF(pol_sym = '000', v_ClassCode_DCT, class_code) AS O_class_code,\n\tEXP_Loss_Metadata.claim_loss_date,\n\tEXP_Loss_Metadata.claim_occurrence_num,\n\tEXP_Loss_Metadata.o_s3p_claim_num,\n\tEXP_Loss_Metadata.o_claimant_status_type,\n\tEXP_Loss_Metadata.claim_cat_code,\n\tEXP_Loss_Metadata.loss_loc_state,\n\tEXP_Loss_Metadata.body_part_code,\n\tEXP_Loss_Metadata.nature_inj_code,\n\tEXP_Loss_Metadata.cause_inj_code,\n\tEXP_Loss_Metadata.pol_ak_id,\n\tEXP_Loss_Metadata.CoverageAKID,\n\tEXP_Loss_Metadata.loss_condition,\n\tEXP_Loss_Metadata.managed_care_org_type,\n\tEXP_Loss_Metadata.o_claimant_num,\n\tEXP_Loss_Metadata.jurisdiction_state_code,\n\tEXP_Loss_Metadata.o_AuditStatus,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.claim_pay_ctgry_lump_sum_ind AS o_claim_pay_ctgry_lump_sum_ind,\n\tEXP_Loss_Metadata.o_EstimatedAuditCode,\n\tEXP_Loss_Metadata.ClaimRelationshipKey,\n\tLKP_ClaimPayCtgryType.o_claim_pay_ctgry_type,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.PaidIndemnityAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.PaidMedicalAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.DeductibleReimbursementAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.PaidAllocatedLossAdjustmentExpenseAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.IncurredAllocatedLossAdjustmentExpenseAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.IncurredIndemnityAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.IncurredMedicalAmount,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.TypeOfRecoveryCode,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.type_of_loss_code,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.body_part_code AS body_part_code1,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.nature_of_inj_code,\n\tlkp_claim_loss_transactions_fact_calculate_ITD.cause_inj_code AS cause_inj_code1,\n\tEXP_Loss_Metadata.claim_party_occurrence_ak_id,\n\tEXP_Loss_Metadata.suit_how_claim_closed,\n\tEXP_Loss_Metadata.wc_cat_code,\n\t-- *INF*: wc_cat_code\r\n\t-- \r\n\t-- -- Passing COVID cat codes to the claim_cat_code in target definition table - US 189306\n\twc_cat_code AS o_claim_cat_code,\n\tEXP_Loss_Metadata.OccupationDescription,\n\tEXP_Loss_Metadata.WeeklyWageAmount,\n\tEXP_Loss_Metadata.EmployerAttorneyFees\n\tFROM EXP_Loss_Metadata\n\tLEFT JOIN LKP_ClaimPayCtgryType\n\tON LKP_ClaimPayCtgryType.claim_num = EXP_Loss_Metadata.o_s3p_claim_num AND LKP_ClaimPayCtgryType.claim_party_occurrence_ak_id = EXP_Loss_Metadata.claim_party_occurrence_ak_id\n\tLEFT JOIN LKP_RatingCoverage_DCT\n\tON LKP_RatingCoverage_DCT.PolicyAKID = EXP_Loss_Metadata.pol_ak_id AND LKP_RatingCoverage_DCT.RatingCoverageAKID = EXP_Loss_Metadata.CoverageAKID\n\tLEFT JOIN lkp_claim_loss_transactions_fact_calculate_ITD\n\tON lkp_claim_loss_transactions_fact_calculate_ITD.claim_party_occurrence_ak_id = EXP_Loss_Metadata.claim_party_occurrence_ak_id\n),\nAGG_RemoveDuplicateData AS (\n\tSELECT\n\tAuditid,\n\tCreatedDate,\n\tModifiedDate,\n\tTypeBureauCode,\n\tpol_num,\n\tpol_mod,\n\to_pol_sym,\n\to_StateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\to_InterstateRiskId,\n\tfed_tax_id,\n\tpol_term,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tO_Exposure,\n\tO_class_code,\n\tclaim_loss_date,\n\tclaim_occurrence_num,\n\to_s3p_claim_num,\n\to_claimant_status_type,\n\to_claim_cat_code AS claim_cat_code,\n\tloss_loc_state,\n\tpol_ak_id,\n\tloss_condition,\n\tmanaged_care_org_type,\n\to_claim_pay_ctgry_lump_sum_ind,\n\to_EstimatedAuditCode,\n\to_AuditStatus,\n\to_claim_pay_ctgry_type,\n\tPaidIndemnityAmount,\n\tPaidMedicalAmount,\n\tDeductibleReimbursementAmount,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tIncurredAllocatedLossAdjustmentExpenseAmount,\n\tIncurredIndemnityAmount,\n\tIncurredMedicalAmount,\n\to_claimant_num,\n\tjurisdiction_state_code,\n\tclaim_party_occurrence_ak_id,\n\tTypeOfRecoveryCode,\n\ttype_of_loss_code,\n\tbody_part_code1,\n\tnature_of_inj_code,\n\tcause_inj_code1,\n\tClaimRelationshipKey,\n\tsuit_how_claim_closed,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM EXP_Extract_All\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY o_s3p_claim_num, pol_ak_id, claim_party_occurrence_ak_id ORDER BY NULL) = 1\n),\nexp_Before_Target AS (\n\tSELECT\n\tAuditid,\n\tCreatedDate,\n\tModifiedDate,\n\tTypeBureauCode,\n\tpol_num,\n\tpol_mod,\n\to_pol_sym,\n\to_StateProvinceCode,\n\tpol_eff_date,\n\tpol_exp_date,\n\tpol_cancellation_date,\n\tpol_cancellation_ind,\n\to_InterstateRiskId,\n\tfed_tax_id,\n\tpol_term,\n\tInsuranceSegmentAbbreviation,\n\tcust_role,\n\tname,\n\taddr_line_1,\n\tcity_name,\n\tstate_prov_code,\n\tzip_postal_code,\n\tO_Exposure,\n\tO_class_code,\n\tclaim_loss_date,\n\tclaim_occurrence_num,\n\to_s3p_claim_num,\n\to_claimant_status_type,\n\tclaim_cat_code,\n\tloss_loc_state,\n\tpol_ak_id,\n\tloss_condition,\n\tmanaged_care_org_type,\n\to_claim_pay_ctgry_lump_sum_ind,\n\to_EstimatedAuditCode,\n\to_AuditStatus,\n\to_claim_pay_ctgry_type,\n\tPaidIndemnityAmount,\n\tPaidMedicalAmount,\n\tDeductibleReimbursementAmount,\n\tPaidAllocatedLossAdjustmentExpenseAmount,\n\tIncurredAllocatedLossAdjustmentExpenseAmount,\n\tIncurredIndemnityAmount,\n\tIncurredMedicalAmount,\n\to_claimant_num,\n\tjurisdiction_state_code,\n\tclaim_party_occurrence_ak_id,\n\tTypeOfRecoveryCode AS in_TypeOfRecoveryCode,\n\t-- *INF*: iif(isnull(in_TypeOfRecoveryCode), 'N/A',in_TypeOfRecoveryCode)\r\n\t-- \n\tIFF(in_TypeOfRecoveryCode IS NULL, 'N/A', in_TypeOfRecoveryCode) AS TypeOfRecoveryCode1,\n\ttype_of_loss_code AS in_type_of_loss_code,\n\t-- *INF*: iif(isnull(in_type_of_loss_code), 'N/A',in_type_of_loss_code)\n\tIFF(in_type_of_loss_code IS NULL, 'N/A', in_type_of_loss_code) AS type_of_loss_code,\n\tbody_part_code1 AS in_body_part_code,\n\t-- *INF*: iif(isnull(in_body_part_code), 'N/A',in_body_part_code)\n\tIFF(in_body_part_code IS NULL, 'N/A', in_body_part_code) AS body_part_code,\n\tnature_of_inj_code AS in_nature_of_inj_code,\n\t-- *INF*: iif(isnull(in_nature_of_inj_code), 'N/A',in_nature_of_inj_code)\r\n\t-- \n\tIFF(in_nature_of_inj_code IS NULL, 'N/A', in_nature_of_inj_code) AS nature_of_inj_code,\n\tcause_inj_code1 AS in_cause_inj_code,\n\t-- *INF*: iif(isnull(in_cause_inj_code), 'N/A',in_cause_inj_code)\r\n\t-- \n\tIFF(in_cause_inj_code IS NULL, 'N/A', in_cause_inj_code) AS cause_inj_code,\n\tClaimRelationshipKey,\n\tsuit_how_claim_closed,\n\tOccupationDescription,\n\tWeeklyWageAmount,\n\tEmployerAttorneyFees\n\tFROM AGG_RemoveDuplicateData\n),\nWorkWCSTATLoss AS (\n\n\t------------ PRE SQL ----------\n\t@{pipeline().parameters.DELETE_PRESQL}\n\t-------------------------------\n\n\n\tINSERT INTO Shortcut_to_WorkWCSTATLoss\n\t(AuditId, CreatedDate, ModifiedDate, TypeBureauCode, PolicyNumber, PolicyModulus, PolicySymbol, StateProvinceCode, PolicyEffectiveDate, PolicyExpiryDate, PolicyCancellationDate, PolicyCancellationIndicator, WCInterStateRiskId, FederalTaxId, PolicyTerm, InsuranceSegmentAbbreviation, CustomerRole, Name, AddressLine1, CityName, StateProvCodeContractCustomerAddress, ZipPostalCode, Exposure, ClassCode, ClaimLossDate, ClaimOccurrenceNumber, S3pClaimNumber, ClaimantStatusType, ClaimCatCode, LossLocationState, PolicyAKId, LossCondition, ManagedCareOrganisationType, ClaimPayCategoryLumpSumInd, EstimatedAuditCode, AuditStatus, ClaimPayCategoryType, PaidIndemnityAmount, PaidMedicalAmount, DeductibleReimbursementAmount, PaidAllocatedLossAdjustmentExpenseAmount, IncurredAllocatedLossAdjustmentExpenseAmount, IncurredIndemnityAmount, IncurredMedicalAmount, ClaimantNum, JurisdictionStateCode, ClaimPartyOccurrenceAKId, TypeOfRecoveryCode, TypeOfLossCode, BodyPartCode, NatureOfInjCode, CauseInjCode, ClaimRelationshipKey, SuitHowClaimClosed, OccupationDescription, WeeklyWageAmount, EmployerAttorneyFees)\n\tSELECT \n\tAuditid AS AUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tTYPEBUREAUCODE, \n\tpol_num AS POLICYNUMBER, \n\tpol_mod AS POLICYMODULUS, \n\to_pol_sym AS POLICYSYMBOL, \n\to_StateProvinceCode AS STATEPROVINCECODE, \n\tpol_eff_date AS POLICYEFFECTIVEDATE, \n\tpol_exp_date AS POLICYEXPIRYDATE, \n\tpol_cancellation_date AS POLICYCANCELLATIONDATE, \n\tpol_cancellation_ind AS POLICYCANCELLATIONINDICATOR, \n\to_InterstateRiskId AS WCINTERSTATERISKID, \n\tfed_tax_id AS FEDERALTAXID, \n\tpol_term AS POLICYTERM, \n\tINSURANCESEGMENTABBREVIATION, \n\tcust_role AS CUSTOMERROLE, \n\tname AS NAME, \n\taddr_line_1 AS ADDRESSLINE1, \n\tcity_name AS CITYNAME, \n\tstate_prov_code AS STATEPROVCODECONTRACTCUSTOMERADDRESS, \n\tzip_postal_code AS ZIPPOSTALCODE, \n\tO_Exposure AS EXPOSURE, \n\tO_class_code AS CLASSCODE, \n\tclaim_loss_date AS CLAIMLOSSDATE, \n\tclaim_occurrence_num AS CLAIMOCCURRENCENUMBER, \n\to_s3p_claim_num AS S3PCLAIMNUMBER, \n\to_claimant_status_type AS CLAIMANTSTATUSTYPE, \n\tclaim_cat_code AS CLAIMCATCODE, \n\tloss_loc_state AS LOSSLOCATIONSTATE, \n\tpol_ak_id AS POLICYAKID, \n\tloss_condition AS LOSSCONDITION, \n\tmanaged_care_org_type AS MANAGEDCAREORGANISATIONTYPE, \n\to_claim_pay_ctgry_lump_sum_ind AS CLAIMPAYCATEGORYLUMPSUMIND, \n\to_EstimatedAuditCode AS ESTIMATEDAUDITCODE, \n\to_AuditStatus AS AUDITSTATUS, \n\to_claim_pay_ctgry_type AS CLAIMPAYCATEGORYTYPE, \n\tPAIDINDEMNITYAMOUNT, \n\tPAIDMEDICALAMOUNT, \n\tDEDUCTIBLEREIMBURSEMENTAMOUNT, \n\tPAIDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tINCURREDALLOCATEDLOSSADJUSTMENTEXPENSEAMOUNT, \n\tINCURREDINDEMNITYAMOUNT, \n\tINCURREDMEDICALAMOUNT, \n\to_claimant_num AS CLAIMANTNUM, \n\tjurisdiction_state_code AS JURISDICTIONSTATECODE, \n\tclaim_party_occurrence_ak_id AS CLAIMPARTYOCCURRENCEAKID, \n\tTypeOfRecoveryCode1 AS TYPEOFRECOVERYCODE, \n\ttype_of_loss_code AS TYPEOFLOSSCODE, \n\tbody_part_code AS BODYPARTCODE, \n\tnature_of_inj_code AS NATUREOFINJCODE, \n\tcause_inj_code AS CAUSEINJCODE, \n\tCLAIMRELATIONSHIPKEY, \n\tsuit_how_claim_closed AS SUITHOWCLAIMCLOSED, \n\tOCCUPATIONDESCRIPTION, \n\tWEEKLYWAGEAMOUNT, \n\tEMPLOYERATTORNEYFEES\n\tFROM exp_Before_Target\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "NUM_OF_MONTHS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME_DM": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LOSS_WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LOSS_WHERE_CLAUSE_DCT": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DELETE_PRESQL": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}