{
    "name": "s_m_POL_DM_LOAD_StopLossAdjustmentCatastropheClaimOccurrenceFact",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_StopLossAdjustmentCatastropheClaimOccu_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nSQ_claim_loss_transaction_fact_Occurrence_CR AS (\n\tDECLARE @DATE1 as datetime,\r\n\t@DATE2 as datetime\r\n\t\r\n\tSET @DATE1 = dateadd(dd,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS_CR},0))\r\n\tSET @DATE2 = dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS_CR},0))\r\n\t\r\n\tselect EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tsum(case when claim_rpted_date<='2013-12-31 00:00:00' then (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR) \r\n\telse (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR+DirectALAEOutstandingIR) end) total_direct_loss_recovery_incurred,\r\n\tconvert(varchar(6),claim_loss_date,112) Loss_Year,A.claim_cat_code,CatastropheDimId,\r\n\t@DATE2 Rundate\r\n\tfrom (\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tCLTF.direct_loss_paid_including_recoveries DirectLossPaidIR,\r\n\tCLTF.direct_alae_paid_including_recoveries DirectALAEPaidIR,\r\n\t0.0 AS DirectLossOutstandingER,\r\n\t0.0 AS DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tOCC.claim_loss_date,occ.claim_cat_code\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact CLTF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON CLTF.claim_trans_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON CLTF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON CLTF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON CLTF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON CLTF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON CLTF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON CLTF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON CLTF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date < '01/01/2001 00:00:00'\r\n\tand case when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tVLMF.DirectLossPaidIR,\r\n\tVLMF.DirectALAEPaidIR,\r\n\tVLMF.DirectLossOutstandingER,\r\n\tVLMF.DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tOCC.claim_loss_date,occ.claim_cat_code\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact VLMF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON VLMF.loss_master_run_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON VLMF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON VLMF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON VLMF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON VLMF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON VLMF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON VLMF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON VLMF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date >= '01/01/2001 00:00:00'\r\n\tand case when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t) A\r\n\tinner join (SELECT claim_cat_code,edw_claim_occurrence_ak_id  from claim_occurrence_dim\r\n\tWHERE  @DATE2 BETWEEN eff_from_date AND eff_to_date) B\r\n\ton A.edw_claim_occurrence_ak_id = B.edw_claim_occurrence_ak_id\r\n\tand RunDate <=@DATE2\r\n\tand B.claim_cat_code<>'N/A'\r\n\tand A.claim_cat_code<>'N/A'\r\n\tinner join (select C.AgencyCode,D.CatastropheCode,A.CatastropheDimId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.StopLossAdjustmentCatastropheFact A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim B\r\n\ton A.RunDateId=B.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.Agencydim C\r\n\ton A.PrimaryAgencyDimId=C.AgencyDimID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CatastropheDim D\r\n\ton A.CatastropheDimId=D.CatastropheDimId\r\n\twhere B.clndr_date=@DATE1) C\r\n\ton A.AgencyCode=C.AgencyCode\r\n\tand A.claim_cat_code=C.CatastropheCode\r\n\t@{pipeline().parameters.WHERECLAUSE_CR}\r\n\tgroup by EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tconvert(varchar(6),claim_loss_date,112),A.claim_cat_code,CatastropheDimId\n),\nSQ_claim_loss_transaction_fact_Occurrence_PR AS (\n\tDECLARE @DATE1 as datetime,\r\n\t@DATE2 as datetime\r\n\t\r\n\tSET @DATE1 = dateadd(dd,-1,dateadd(mm,DATEDIFF(MM,0,getdate())-@{pipeline().parameters.NO_OF_MONTHS_CR},0))\r\n\tSET @DATE2 = dateadd(SS,-1,dateadd(yy,DATEDIFF(MM,0,dateadd(SS,-1,dateadd(mm,DATEDIFF(MM,0,GETDATE())-@{pipeline().parameters.NO_OF_MONTHS_CR},0)))/12-0,0))\r\n\t\r\n\tselect EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tsum(case when claim_rpted_date<='2013-12-31 00:00:00' then (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR) \r\n\telse (DirectLossPaidIR+DirectLossOutstandingER+DirectALAEPaidIR+DirectALAEOutstandingIR) end) total_direct_loss_recovery_incurred,\r\n\tconvert(varchar(6),claim_loss_date,112) Loss_Year,A.claim_cat_code,CatastropheDimId,\r\n\t@DATE2 Rundate\r\n\tfrom (\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tCLTF.direct_loss_paid_including_recoveries DirectLossPaidIR,\r\n\tCLTF.direct_alae_paid_including_recoveries DirectALAEPaidIR,\r\n\t0.0 AS DirectLossOutstandingER,\r\n\t0.0 AS DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tOCC.claim_loss_date,occ.claim_cat_code\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact CLTF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON CLTF.claim_trans_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON CLTF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON CLTF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON CLTF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON CLTF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON CLTF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON CLTF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON CLTF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date < '01/01/2001 00:00:00'\r\n\tAND CASE when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t\r\n\tUNION ALL\r\n\t\r\n\tSELECT \r\n\tA.EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tPOL.edw_pol_ak_id,\r\n\tOCC.edw_claim_occurrence_ak_id,\r\n\tVLMF.DirectLossPaidIR,\r\n\tVLMF.DirectALAEPaidIR,\r\n\tVLMF.DirectLossOutstandingER,\r\n\tVLMF.DirectALAEOutstandingIR,\r\n\tOCC.claim_rpted_date,\r\n\tCD.clndr_date as RunDate,\r\n\tOCC.claim_loss_date,occ.claim_cat_code\r\n\tFROM   @{pipeline().parameters.SOURCE_TABLE_OWNER}.vwLossMasterFact VLMF\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim CD\r\n\tON VLMF.loss_master_run_date_id = CD.clndr_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim OCC\r\n\tON VLMF.claim_occurrence_dim_id = OCC.claim_occurrence_dim_id\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim A\r\n\tON VLMF.AgencyDimId=A.AgencyDimID\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim POL\r\n\tON VLMF.pol_dim_id=POL.pol_dim_id\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim ird\r\n\tON VLMF.InsuranceReferenceDimId = ird.InsuranceReferenceDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceCoverageDim ircd\r\n\tON VLMF.InsuranceReferenceCoverageDimId = ircd.InsuranceReferenceCoverageDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.CoverageDetailDim cdd\r\n\tON VLMF.CoverageDetailDimId = cdd.CoverageDetailDimId\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_product_code_dim apcd\r\n\tON VLMF.asl_prdct_code_dim_id = apcd.asl_prdct_code_dim_id\r\n\tWHERE  clndr_date >= '01/01/2001 00:00:00'\r\n\tand case when (PolicyOfferingCode in ('600') \r\n\tOR ird.InsuranceSegmentCode = '3'\r\n\tOR (ircd.CoverageGroupCode in ('BOILER','CYBERSEC','DATACOMP','CYBERSUITE') \r\n\tOR ircd.CoverageGroupCode like '%TRIA' \r\n\tOR ircd.CoverageGroupDescription in ('MCCA Surcharge'))\r\n\tOR ird.InsuranceReferenceLineofBusinessCode in ('350','311','590','812','890','900')\r\n\tOR (ird.RatingPlanAbbreviation in ('LRARO','Retro'))\r\n\tOR apcd.asl_prdct_code in ('200', '220')\r\n\tOR (ird.StrategicProfitCentercode <> '5' and cdd.ISOClassCode='0174')) then 'N' else 'Y' end='Y'\r\n\t) A\r\n\tinner join (SELECT claim_cat_code,edw_claim_occurrence_ak_id  from claim_occurrence_dim\r\n\tWHERE  @DATE2 BETWEEN eff_from_date AND eff_to_date) B\r\n\ton A.edw_claim_occurrence_ak_id = B.edw_claim_occurrence_ak_id\r\n\tand RunDate <=@DATE2\r\n\tand B.claim_cat_code<>'N/A'\r\n\tand A.claim_cat_code<>'N/A'\r\n\tinner join (select C.AgencyCode,D.CatastropheCode,A.CatastropheDimId\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.StopLossAdjustmentCatastropheFact A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim B\r\n\ton A.RunDateId=B.clndr_id\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.Agencydim C\r\n\ton A.PrimaryAgencyDimId=C.AgencyDimID\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.CatastropheDim D\r\n\ton A.CatastropheDimId=D.CatastropheDimId\r\n\twhere B.clndr_date=@DATE1) C\r\n\ton A.AgencyCode=C.AgencyCode\r\n\tand A.claim_cat_code=C.CatastropheCode\r\n\t@{pipeline().parameters.WHERECLAUSE_PR}\r\n\tgroup by EDWAgencyAKID,\r\n\tA.AgencyCode,\r\n\tedw_pol_ak_id,\r\n\tA.edw_claim_occurrence_ak_id,\r\n\tconvert(varchar(6),claim_loss_date,112),A.claim_cat_code,CatastropheDimId\n),\nJNR_CurrentRunMonth_PreviousYear AS (SELECT\n\tSQ_claim_loss_transaction_fact_Occurrence_CR.EDWAgencyAKID AS EDWAgencyAKID_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.AgencyCode AS AgencyCode_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.edw_pol_ak_id AS edw_pol_ak_id_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.edw_claim_occurrence_ak_id AS edw_claim_occurrence_ak_id_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.total_direct_loss_recovery_incurred AS total_direct_loss_recovery_incurred_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.Loss_Year AS Loss_Year_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.claim_cat_code AS claim_cat_code_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.CatastropheDimId AS CatastropheDimId_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_CR.Rundate AS Rundate_CR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.EDWAgencyAKID AS EDWAgencyAKID_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.AgencyCode AS AgencyCode_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.edw_pol_ak_id AS edw_pol_ak_id_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.edw_claim_occurrence_ak_id AS edw_claim_occurrence_ak_id_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.total_direct_loss_recovery_incurred AS total_direct_loss_recovery_incurred_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.Loss_Year AS Loss_Year_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.claim_cat_code AS claim_cat_code_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.CatastropheDimId AS CatastropheDimId_PR, \n\tSQ_claim_loss_transaction_fact_Occurrence_PR.Rundate AS Rundate_PR\n\tFROM SQ_claim_loss_transaction_fact_Occurrence_PR\n\tRIGHT OUTER JOIN SQ_claim_loss_transaction_fact_Occurrence_CR\n\tON SQ_claim_loss_transaction_fact_Occurrence_CR.EDWAgencyAKID = SQ_claim_loss_transaction_fact_Occurrence_PR.EDWAgencyAKID AND SQ_claim_loss_transaction_fact_Occurrence_CR.edw_pol_ak_id = SQ_claim_loss_transaction_fact_Occurrence_PR.edw_pol_ak_id AND SQ_claim_loss_transaction_fact_Occurrence_CR.edw_claim_occurrence_ak_id = SQ_claim_loss_transaction_fact_Occurrence_PR.edw_claim_occurrence_ak_id AND SQ_claim_loss_transaction_fact_Occurrence_CR.claim_cat_code = SQ_claim_loss_transaction_fact_Occurrence_PR.claim_cat_code\n),\nEXP_GetValues_Occurrence AS (\n\tSELECT\n\tEDWAgencyAKID_CR AS EDWAgencyAKID,\n\tAgencyCode_CR AS AgencyCode,\n\tedw_pol_ak_id_CR AS edw_pol_ak_id,\n\tedw_claim_occurrence_ak_id_CR AS edw_claim_occurrence_ak_id,\n\ttotal_direct_loss_recovery_incurred_CR AS total_direct_loss_recovery_incurred,\n\tLoss_Year_CR AS Loss_Year,\n\t-- *INF*: SUBSTR(Loss_Year,1,4)\n\tSUBSTR(Loss_Year, 1, 4\n\t) AS O_Loss_Year,\n\tclaim_cat_code_CR,\n\tCatastropheDimId_CR,\n\tRundate_CR AS Rundate,\n\ttotal_direct_loss_recovery_incurred_PR,\n\t-- *INF*: IIF(ISNULL(total_direct_loss_recovery_incurred_PR),0.0,total_direct_loss_recovery_incurred_PR)\n\tIFF(total_direct_loss_recovery_incurred_PR IS NULL,\n\t\t0.0,\n\t\ttotal_direct_loss_recovery_incurred_PR\n\t) AS V_total_direct_loss_recovery_incurred_PR\n\tFROM JNR_CurrentRunMonth_PreviousYear\n),\nLKP_V3_PrimaryAgencyDimID_CO AS (\n\tSELECT\n\tLegalPrimaryAgencyCode,\n\tIN_Trans_Date,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \r\n\t\t\r\n\t\tard.LegalPrimaryAgencyCode as LegalPrimaryAgencyCode,\r\n\t\t AgencyDim.AgencyCode as AgencyCode, \r\n\t\tArd.AgencyrelationshipEffectiveDate as eff_from_date, \r\n\t\tArd.AgencyrelationshipExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\r\n\t\t \r\n\t\t left join \r\n\t\t (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.Agencyrelationshipdim where currentsnapshotflag = 1) ard\r\n\t\t on (AgencyDim.edwagencyakid=ard.edwagencyakid) \r\n\t\t\r\n\t\t\r\n\t\t--Left join with \"agencyrelationshipdim\" in order to get legalprimaryagencycode values from --\"AgencyRelationshipDim\" table\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY LegalPrimaryAgencyCode DESC) = 1\n),\nEXP_LegalPrimaryAgency AS (\n\tSELECT\n\tEXP_GetValues_Occurrence.AgencyCode AS IN_AgencyCode,\n\tLKP_V3_PrimaryAgencyDimID_CO.LegalPrimaryAgencyCode,\n\t-- *INF*: iif(isnull(LegalPrimaryAgencyCode),IN_AgencyCode,LegalPrimaryAgencyCode)\n\tIFF(LegalPrimaryAgencyCode IS NULL,\n\t\tIN_AgencyCode,\n\t\tLegalPrimaryAgencyCode\n\t) AS o_LegalPrimaryAgencyCode\n\tFROM EXP_GetValues_Occurrence\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_CO\n\tON LKP_V3_PrimaryAgencyDimID_CO.Agencycode = EXP_GetValues_Occurrence.AgencyCode AND LKP_V3_PrimaryAgencyDimID_CO.eff_from_date <= EXP_GetValues_Occurrence.Rundate AND LKP_V3_PrimaryAgencyDimID_CO.eff_to_date >= EXP_GetValues_Occurrence.Rundate\n),\nLKP_V3_PrimaryAgencyDimID_CO_Primary AS (\n\tSELECT\n\tagency_dim_id,\n\tAgencycode,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, \r\n\t\tAgencyDim.AgencyCode as AgencyCode, \r\n\t\tAgencyDim.EffectiveDate as eff_from_date, \r\n\t\tAgencyDim.ExpirationDate as eff_to_date\r\n\t\t FROM @{pipeline().parameters.SOURCE_TABLE_OWNER_V3}.AgencyDim as AgencyDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Agencycode,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n),\nLKP_claim_occurrence_dim AS (\n\tSELECT\n\tclaim_occurrence_dim_id,\n\tedw_claim_occurrence_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_dim_id,\n\t\t\tedw_claim_occurrence_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM claim_occurrence_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_claim_occurrence_ak_id,eff_from_date,eff_to_date ORDER BY claim_occurrence_dim_id DESC) = 1\n),\nmplt_PolicyDimID_StopLossCOFact AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_CalValues_Occurrence AS (\n\tSELECT\n\tEXP_GetValues_Occurrence.EDWAgencyAKID,\n\tEXP_GetValues_Occurrence.AgencyCode,\n\tEXP_GetValues_Occurrence.Rundate AS i_RunDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\tmplt_PolicyDimID_StopLossCOFact.agency_dim_id AS i_agency_dim_id,\n\t-- *INF*: IIF(ISNULL(i_agency_dim_id), -1, i_agency_dim_id)\n\tIFF(i_agency_dim_id IS NULL,\n\t\t- 1,\n\t\ti_agency_dim_id\n\t) AS o_agency_dim_id,\n\tmplt_PolicyDimID_StopLossCOFact.contract_cust_dim_id AS i_contract_cust_dim_id,\n\t-- *INF*: IIF(ISNULL(i_contract_cust_dim_id), -1, i_contract_cust_dim_id)\n\tIFF(i_contract_cust_dim_id IS NULL,\n\t\t- 1,\n\t\ti_contract_cust_dim_id\n\t) AS o_contract_cust_dim_id,\n\tmplt_PolicyDimID_StopLossCOFact.pol_dim_id,\n\tLKP_claim_occurrence_dim.claim_occurrence_dim_id,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(i_RunDate,'HH',0),'MI',0),'SS',0))\n\tLKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_id AS o_RunDateId,\n\tEXP_GetValues_Occurrence.total_direct_loss_recovery_incurred AS TotalDirectIncurredLoss,\n\tEXP_GetValues_Occurrence.V_total_direct_loss_recovery_incurred_PR AS total_direct_loss_recovery_incurred_PR,\n\t-- *INF*: IIF(isnull(total_direct_loss_recovery_incurred_PR),0.0,total_direct_loss_recovery_incurred_PR)\n\tIFF(total_direct_loss_recovery_incurred_PR IS NULL,\n\t\t0.0,\n\t\ttotal_direct_loss_recovery_incurred_PR\n\t) AS v_total_direct_loss_recovery_incurred_PR,\n\tEXP_GetValues_Occurrence.Loss_Year AS IN_LOSS_YEAR,\n\t0.0 AS o_StopLossLimit,\n\t0.0 AS o_StopLossAdjustmentAmount,\n\tTotalDirectIncurredLoss-v_total_direct_loss_recovery_incurred_PR AS ChangeInIncurredLoss,\n\tEXP_GetValues_Occurrence.edw_pol_ak_id,\n\tEXP_GetValues_Occurrence.edw_claim_occurrence_ak_id,\n\tLKP_V3_PrimaryAgencyDimID_CO_Primary.agency_dim_id AS IN_PrimaryAgencyDimId,\n\t-- *INF*: IIF(ISNULL(IN_PrimaryAgencyDimId),-1,IN_PrimaryAgencyDimId)\n\tIFF(IN_PrimaryAgencyDimId IS NULL,\n\t\t- 1,\n\t\tIN_PrimaryAgencyDimId\n\t) AS PrimaryAgencyDimId,\n\tEXP_GetValues_Occurrence.CatastropheDimId_CR\n\tFROM EXP_GetValues_Occurrence\n\t -- Manually join with mplt_PolicyDimID_StopLossCOFact\n\tLEFT JOIN LKP_V3_PrimaryAgencyDimID_CO_Primary\n\tON LKP_V3_PrimaryAgencyDimID_CO_Primary.Agencycode = EXP_LegalPrimaryAgency.o_LegalPrimaryAgencyCode AND LKP_V3_PrimaryAgencyDimID_CO_Primary.eff_from_date <= LKP_V3_PrimaryAgencyDimID_CO.IN_Trans_Date AND LKP_V3_PrimaryAgencyDimID_CO_Primary.eff_to_date >= LKP_V3_PrimaryAgencyDimID_CO.IN_Trans_Date\n\tLEFT JOIN LKP_claim_occurrence_dim\n\tON LKP_claim_occurrence_dim.edw_claim_occurrence_ak_id = EXP_GetValues_Occurrence.edw_claim_occurrence_ak_id AND LKP_claim_occurrence_dim.eff_from_date <= EXP_GetValues_Occurrence.Rundate AND LKP_claim_occurrence_dim.eff_to_date >= EXP_GetValues_Occurrence.Rundate\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0\n\tON LKP_CALENDER_DIM_SET_DATE_PART_SET_DATE_PART_SET_DATE_PART_i_RunDate_HH_0_MI_0_SS_0.clndr_date = DATEADD(SECOND,0-DATE_PART(SECOND,DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,i_RunDate),i_RunDate)),DATEADD(HOUR,0-DATE_PART(HOUR,i_RunDate),i_RunDate))),DATEADD(MINUTE,0-DATE_PART(MINUTE,DATEADD(HOUR,0-DATE_PART(HOUR,i_RunDate),i_RunDate)),DATEADD(HOUR,0-DATE_PART(HOUR,i_RunDate),i_RunDate)))\n\n),\nFIL_StopLossAdjustmentAmount_Occurence AS (\n\tSELECT\n\to_AuditId AS AuditId, \n\to_agency_dim_id AS AgencyDimId, \n\tCatastropheDimId_CR, \n\to_contract_cust_dim_id AS contract_cust_dim_id, \n\tpol_dim_id, \n\tclaim_occurrence_dim_id, \n\to_RunDateId AS RunDateId, \n\tTotalDirectIncurredLoss, \n\to_StopLossLimit AS StopLossLimit, \n\to_StopLossAdjustmentAmount AS StopLossAdjustmentAmount, \n\tChangeInIncurredLoss AS O_ChangeInStopLossAdjustmentAmount, \n\tPrimaryAgencyDimId\n\tFROM EXP_CalValues_Occurrence\n\tWHERE O_ChangeInStopLossAdjustmentAmount<>0.0\r\n\r\n--IIF(O_ChangeInStopLossAdjustmentAmount=0.0 and StopLossAdjustmentAmount<>0.0,'Y',\r\n--IIF(O_ChangeInStopLossAdjustmentAmount<>0.0,'Y','N'))='Y' --AND StopLossLimit>0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0 OR StopLossAdjustmentAmount<>0.0\r\n\r\n--O_ChangeInStopLossAdjustmentAmount<>0.0 AND StopLossLimit>0\n),\nLKP_StopLossAdjustmentCatastropheClaimOccurrenceFact AS (\n\tSELECT\n\tStopLossAdjustmentCatastropheClaimOccurrenceFactId,\n\tAgencyDimId,\n\tPrimaryAgencyDimId,\n\tContractCustomerDimId,\n\tPolicyDimId,\n\tCatastropheDimId,\n\tClaimOccurrenceDimId,\n\tRunDateId\n\tFROM (\n\t\tSELECT \n\t\t\tStopLossAdjustmentCatastropheClaimOccurrenceFactId,\n\t\t\tAgencyDimId,\n\t\t\tPrimaryAgencyDimId,\n\t\t\tContractCustomerDimId,\n\t\t\tPolicyDimId,\n\t\t\tCatastropheDimId,\n\t\t\tClaimOccurrenceDimId,\n\t\t\tRunDateId\n\t\tFROM StopLossAdjustmentCatastropheClaimOccurrenceFact\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY AgencyDimId,PrimaryAgencyDimId,ContractCustomerDimId,PolicyDimId,CatastropheDimId,ClaimOccurrenceDimId,RunDateId ORDER BY StopLossAdjustmentCatastropheClaimOccurrenceFactId DESC) = 1\n),\nRTR_Insert_Update_Occurrence AS (\n\tSELECT\n\tLKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.StopLossAdjustmentCatastropheClaimOccurrenceFactId AS StopLossAdjustmentClaimOccurrenceFactId,\n\tFIL_StopLossAdjustmentAmount_Occurence.AuditId,\n\tFIL_StopLossAdjustmentAmount_Occurence.AgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.PrimaryAgencyDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.CatastropheDimId_CR AS CatastropheDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.contract_cust_dim_id AS ContractCustomerDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.pol_dim_id AS PolicyDimid,\n\tFIL_StopLossAdjustmentAmount_Occurence.claim_occurrence_dim_id AS ClaimOccurrenceDimId,\n\tFIL_StopLossAdjustmentAmount_Occurence.RunDateId,\n\tFIL_StopLossAdjustmentAmount_Occurence.TotalDirectIncurredLoss AS DirectIncurredLossInceptionToDate,\n\tFIL_StopLossAdjustmentAmount_Occurence.StopLossLimit,\n\tFIL_StopLossAdjustmentAmount_Occurence.StopLossAdjustmentAmount,\n\tFIL_StopLossAdjustmentAmount_Occurence.O_ChangeInStopLossAdjustmentAmount AS ChangeInStopLossAdjustmentAmount\n\tFROM FIL_StopLossAdjustmentAmount_Occurence\n\tLEFT JOIN LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact\n\tON LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.AgencyDimId = FIL_StopLossAdjustmentAmount_Occurence.AgencyDimId AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.PrimaryAgencyDimId = FIL_StopLossAdjustmentAmount_Occurence.PrimaryAgencyDimId AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.ContractCustomerDimId = FIL_StopLossAdjustmentAmount_Occurence.contract_cust_dim_id AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.PolicyDimId = FIL_StopLossAdjustmentAmount_Occurence.pol_dim_id AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.CatastropheDimId = FIL_StopLossAdjustmentAmount_Occurence.CatastropheDimId_CR AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.ClaimOccurrenceDimId = FIL_StopLossAdjustmentAmount_Occurence.claim_occurrence_dim_id AND LKP_StopLossAdjustmentCatastropheClaimOccurrenceFact.RunDateId = FIL_StopLossAdjustmentAmount_Occurence.RunDateId\n),\nRTR_Insert_Update_Occurrence_INSERT AS (SELECT * FROM RTR_Insert_Update_Occurrence WHERE ISNULL(StopLossAdjustmentClaimOccurrenceFactId)),\nRTR_Insert_Update_Occurrence_DEFAULT1 AS (SELECT * FROM RTR_Insert_Update_Occurrence WHERE NOT ( (ISNULL(StopLossAdjustmentClaimOccurrenceFactId)) )),\nUPD_Occurrence AS (\n\tSELECT\n\tStopLossAdjustmentClaimOccurrenceFactId, \n\tAuditId, \n\tAgencyDimId, \n\tPrimaryAgencyDimId, \n\tCatastropheDimId, \n\tContractCustomerDimId, \n\tPolicyDimid, \n\tClaimOccurrenceDimId, \n\tRunDateId, \n\tDirectIncurredLossInceptionToDate, \n\tStopLossLimit, \n\tStopLossAdjustmentAmount, \n\tChangeInStopLossAdjustmentAmount\n\tFROM RTR_Insert_Update_Occurrence_DEFAULT1\n),\nStopLossAdjustmentCatastropheClaimOccurrenceFact_Update AS (\n\tMERGE INTO StopLossAdjustmentCatastropheClaimOccurrenceFact AS T\n\tUSING UPD_Occurrence AS S\n\tON T.StopLossAdjustmentCatastropheClaimOccurrenceFactId = S.StopLossAdjustmentClaimOccurrenceFactId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditId = S.AuditId, T.AgencyDimId = S.AgencyDimId, T.PrimaryAgencyDimId = S.PrimaryAgencyDimId, T.ContractCustomerDimId = S.ContractCustomerDimId, T.PolicyDimId = S.PolicyDimid, T.CatastropheDimId = S.CatastropheDimId, T.ClaimOccurrenceDimId = S.ClaimOccurrenceDimId, T.RunDateId = S.RunDateId, T.DirectIncurredLossInceptionToDate = S.DirectIncurredLossInceptionToDate, T.ChangeInDirectIncurredLossInceptionToDate = S.ChangeInStopLossAdjustmentAmount\n),\nStopLossAdjustmentCatastropheClaimOccurrenceFact_Insert AS (\n\tINSERT INTO StopLossAdjustmentCatastropheClaimOccurrenceFact\n\t(AuditId, AgencyDimId, PrimaryAgencyDimId, ContractCustomerDimId, PolicyDimId, CatastropheDimId, ClaimOccurrenceDimId, RunDateId, DirectIncurredLossInceptionToDate, ChangeInDirectIncurredLossInceptionToDate)\n\tSELECT \n\tAUDITID, \n\tAGENCYDIMID, \n\tPRIMARYAGENCYDIMID, \n\tCONTRACTCUSTOMERDIMID, \n\tPolicyDimid AS POLICYDIMID, \n\tCATASTROPHEDIMID, \n\tCLAIMOCCURRENCEDIMID, \n\tRUNDATEID, \n\tDIRECTINCURREDLOSSINCEPTIONTODATE, \n\tChangeInStopLossAdjustmentAmount AS CHANGEINDIRECTINCURREDLOSSINCEPTIONTODATE\n\tFROM RTR_Insert_Update_Occurrence_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244879"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893608"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7545035"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 12:24:09"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/02/2023 12:45:34"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "DBCONNECTION_SOURCE_EDM": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "EDW_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "V3"
            },
            "TARGET_TABLE_OWNER_V3": {
                "type": "string",
                "defaultValue": "v3"
            },
            "REASON_AMENDED_CODE": {
                "type": "string",
                "defaultValue": "in ('CWO','COL')"
            },
            "NO_OF_MONTHS_CR": {
                "type": "string",
                "defaultValue": "0"
            },
            "NO_OF_MONTHS_PR": {
                "type": "string",
                "defaultValue": "(datediff(mm,dateadd(ss,-1,dateadd(yy,datediff(yy,0,getdate()),0)),getdate())-1)"
            },
            "WHERECLAUSE_CR": {
                "type": "string",
                "defaultValue": ""
            },
            "WHERECLAUSE_PR": {
                "type": "string",
                "defaultValue": ""
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}