{
    "name": "s_m_FEED_Load_HSBCyberSuite_Work_Table",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Load_HSBCyberSuite_Work_Table",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_ProgramCodeForNSI AS (\n\tSELECT\n\tProgramDescription,\n\tProgramAKId\n\tFROM (\n\t\tSELECT \n\t\t\tProgramDescription,\n\t\t\tProgramAKId\n\t\tFROM Program\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProgramAKId ORDER BY ProgramDescription) = 1\n),\nSQ_WorkHSBCyberSuite AS (\n\tDeclare @STARTDATE as datetime,\r\n\t@ENDDATE as datetime\r\n\tset @STARTDATE=@{pipeline().parameters.STARTDATE}\r\n\tset @ENDDATE=@{pipeline().parameters.ENDDATE}\r\n\tSELECT \r\n\tPremiumTransaction.SourceSystemID,\r\n\tpolicy.pol_id, RiskLocation.RiskLocationID, \r\n\tPolicyCoverage.PolicyCoverageID, \r\n\tRatingCoverage.RatingCoverageId, \r\n\tPremiumTransaction.PremiumTransactionID, \r\n\tPremiumMasterCalculation.PremiumMasterCalculationID, \r\n\tcontract_customer.contract_cust_id, \r\n\tcontract_customer_address.contract_cust_addr_id, \r\n\tAgency.AgencyID, policy.pol_sym, policy.pol_num, \r\n\tpolicy.pol_mod, policy.PolicyOfferingAKId, \r\n\tpolicy.StrategicProfitCenterAKId, \r\n\tpolicy.pol_eff_date, policy.pol_exp_date, \r\n\tcontract_customer.name, \r\n\tcontract_customer_address.addr_line_1, \r\n\tcontract_customer_address.addr_line_2, \r\n\tcontract_customer_address.addr_line_3, \r\n\tcontract_customer_address.city_name, \r\n\tcontract_customer_address.state_prov_code, \r\n\tcontract_customer_address.zip_postal_code, \r\n\tCyberSuiteLimit.CoverageLimitValue as CyberSuiteFirstPartyLimit,\r\n\tCyberSuiteDeductible.CoverageDeductibleValue as CyberSuiteFirstPartyDeductible,\r\n\tPremiumTransaction.PremiumTransactionCode,\r\n\tPremiumTransaction.OffsetOnsetCode,\r\n\tpolicy.prim_bus_class_code,\r\n\tRatingCoverage.ClassCode,\r\n\tpolicy.prior_pol_key, \r\n\tAgency.AgencyCode, \r\n\tPremiumMasterCalculation.PremiumMasterCoverageEffectiveDate, \r\n\tPremiumMasterCalculation.PremiumMasterCoverageExpirationDate,\r\n\tPremiumMasterCalculation.PremiumMasterPremium ,\r\n\tPremiumTransaction.PremiumTransactionAKID,\r\n\tPremiumMasterCalculation.premiummasterfulltermpremium,\r\n\tPremiumMasterCalculation.PremiumMasterRunDate,\r\n\tPolicyCoverage.PolicyAKID,\r\n\tPolicyCoverage.PolicyCoverageEffectiveDate,\r\n\tRatingCoverage.RatingCoverageCancellationDate,\r\n\tpolicy.ProgramAKId,\r\n\tRatingCoverage.CoverageType,\r\n\tPremiumTransaction.PremiumTransactionEnteredDate,\r\n\tcsd.RatingTier,\r\n\tcsd.CyberSuiteEligibilityQuestionOne,\r\n\tcsd.CyberSuiteEligibilityQuestionTwo,\r\n\tcsd.CyberSuiteEligibilityQuestionThree,\r\n\tcsd.CyberSuiteEligibilityQuestionFour,\r\n\tcsd.CyberSuiteEligibilityQuestionFive,\r\n\tcsd.CyberSuiteEligibilityQuestionSix\r\n\tFROM\r\n\tV2.policy \r\n\tinner join dbo.PolicyCoverage on PolicyCoverage.PolicyAKID=policy.pol_ak_id and PolicyCoverage.CurrentSnapshotFlag=1 and policy.crrnt_snpsht_flag=1\r\n\tinner join dbo.contract_customer on policy.contract_cust_ak_id=contract_customer.contract_cust_ak_id and contract_customer.crrnt_snpsht_flag=1\r\n\tinner join dbo.contract_customer_address on contract_customer_address.contract_cust_ak_id=contract_customer.contract_cust_ak_id and contract_customer_address.crrnt_snpsht_flag=1\r\n\tinner join V2.Agency on policy.AgencyAKId=Agency.AgencyAKID and Agency.CurrentSnapshotFlag=1\r\n\tinner join dbo.RiskLocation on PolicyCoverage.RiskLocationAKID= RiskLocation.RiskLocationAKID and RiskLocation.CurrentSnapshotFlag=1\r\n\tinner join dbo.RatingCoverage on RatingCoverage.PolicyCoverageAKID=PolicyCoverage.PolicyCoverageAKID  and PolicyCoverage.CurrentSnapshotFlag=1\r\n\tleft  join dbo.PremiumTransaction on PremiumTransaction.RatingCoverageAKId=RatingCoverage.RatingCoverageAKID and PremiumTransaction.EffectiveDate=RatingCoverage.EffectiveDate and PremiumTransaction.CurrentSnapshotFlag=1\r\n\tleft  join dbo.PremiumMasterCalculation on  PremiumMasterCalculation.PremiumTransactionAKID=PremiumTransaction.PremiumTransactionAKID and  PremiumMasterCalculation.CurrentSnapshotFlag =1\r\n\t--------------------------------\r\n\tleft join (select CoverageLimitBridge.PremiumTransactionAKID , CoverageLimit.CoverageLimitType,  CoverageLimit.CoverageLimitValue\r\n\tfrom dbo.CoverageLimitBridge inner join dbo.CoverageLimit on CoverageLimit.CoverageLimitId=CoverageLimitBridge.CoverageLimitId  ) as  CyberSuiteLimit\r\n\t on CyberSuiteLimit.PremiumTransactionAKID= PremiumTransaction.PremiumTransactionAKID \r\n\tand CyberSuiteLimit.CoverageLimitType = 'FirstPartyAnnualAggregate'\r\n\t and CyberSuiteLimit.CoverageLimitValue<>0\r\n\t--------------------------------\r\n\tleft join (select CoveragedeductibleBridge.PremiumTransactionAKID , CoverageDeductible.CoverageDeductibleType,  CoverageDeductible.CoverageDeductibleValue\r\n\tfrom dbo.CoveragedeductibleBridge inner join dbo.CoverageDeductible on CoverageDeductible.CoverageDeductibleId=CoverageDeductibleBridge.CoverageDeductibleId  ) as  CyberSuiteDeductible\r\n\t on CyberSuiteDeductible.PremiumTransactionAKID= PremiumTransaction.PremiumTransactionAKID \r\n\tand CyberSuiteDeductible.CoverageDeductibleType ='FirstPartyAnnualAggregate'\r\n\t and CyberSuiteDeductible.CoverageDeductibleValue<>0\r\n\t left join CyberSuiteDetail csd\r\n\t on csd.PremiumTransactionID = PremiumTransaction.PremiumTransactionID\r\n\tWHERE\r\n\tPremiumMasterCalculation.PremiumMasterPremiumType='D'  \r\n\tand\r\n\tPremiumMasterCalculation.PremiumMasterReasonAmendedCode not in ('COL','CWO')\r\n\tand \r\n\t((PremiumMasterCalculation.PremiumMasterRunDate between @STARTDATE and @ENDDATE)\r\n\tOR \r\n\t(PremiumMasterCoverageEffectiveDate <  @ENDDATE AND PremiumMasterCoverageExpirationDate > @ENDDATE))\r\n\tand PremiumMasterCalculation.PremiumMasterRunDate  between policy.pol_eff_date and policy.pol_exp_date\r\n\tand PolicyCoverage.SourceSystemID='DCT' \r\n\tand policy.source_sys_id='DCT'\r\n\tand contract_customer.source_sys_id='DCT'\r\n\tand contract_customer_address.source_sys_id='DCT'\r\n\tand RiskLocation.SourceSystemID='DCT'\r\n\tand RatingCoverage.SourceSystemID='DCT'\r\n\tand RatingCoverage.CoverageType in ('CyberSuite')\r\n\torder by pol_num,pol_mod\n),\nLKP_PolicyCurrentStatusDim AS (\n\tSELECT\n\tPolicyCancellationDate,\n\tEDWPolicyAKId\n\tFROM (\n\t\tSELECT \n\t\t\tPolicyCancellationDate,\n\t\t\tEDWPolicyAKId\n\t\tFROM @{pipeline().parameters.DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCurrentStatusDim\n\t\tWHERE RunDate between @{pipeline().parameters.STARTDATE} and @{pipeline().parameters.ENDDATE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWPolicyAKId ORDER BY PolicyCancellationDate) = 1\n),\nLKP_PolicyOffering AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tPolicyOfferingAKId,\n\tPolicyOfferingCode,\n\tin_PolicyOfferingAKId\n\tFROM (\n\t\tSELECT \n\t\t\tCurrentSnapshotFlag,\n\t\t\tPolicyOfferingAKId,\n\t\t\tPolicyOfferingCode,\n\t\t\tin_PolicyOfferingAKId\n\t\tFROM PolicyOffering\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyOfferingAKId ORDER BY CurrentSnapshotFlag) = 1\n),\nLKP_PremiumTransaction AS (\n\tSELECT\n\tPremiumTransactionEffectiveDate,\n\tPolicyAKID,\n\tin_PolicyAKID\n\tFROM (\n\t\tselect pc.PolicyAKID as PolicyAKID, pt.PremiumTransactionEffectiveDate as PremiumTransactionEffectiveDate\r\n\t\t from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt join \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc \r\n\t\ton rc.RatingCoverageAKID = pt.RatingCoverageAKId\r\n\t\tand rc.EffectiveDate = pt.EffectiveDate\r\n\t\tand rc.RatingCoverageCancellationDate >'2100-12-31'\r\n\t\tand rc.CoverageType  in  ('CyberSuite','CyberSuiteExtendedReporting')\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.policycoverage pc\r\n\t\ton (pc.PolicyCoverageAKID = rc.PolicyCoverageAKID\r\n\t\tand pc.CurrentSnapshotFlag = 1)\r\n\t\twhere not exists (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt1 \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc1 \r\n\t\ton rc1.RatingCoverageAKID = pt1.RatingCoverageAKId\r\n\t\tand rc1.EffectiveDate = pt1.EffectiveDate\r\n\t\tand rc1.RatingCoverageCancellationDate > '2100-12-31'\r\n\t\tand rc1.CoverageType  in  ('CyberSuite','CyberSuiteExtendedReporting')\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.policycoverage pc1\r\n\t\ton (pc1.PolicyCoverageAKID = rc1.PolicyCoverageAKID\r\n\t\tand pc1.CurrentSnapshotFlag = 1)\r\n\t\twhere pc1.PolicyAKID = pc.PolicyAKID\r\n\t\tand pt1.PremiumTransactionEnteredDate < pt.PremiumTransactionEnteredDate)\r\n\t\tand not exists (select * from @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction pt1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage rc1 \r\n\t\ton rc1.RatingCoverageAKID = pt1.RatingCoverageAKId\r\n\t\tand rc1.EffectiveDate = pt1.EffectiveDate\r\n\t\tand rc1.RatingCoverageCancellationDate < '2100-12-31'\r\n\t\tand rc1.CoverageType  in  ('CyberSuite','CyberSuiteExtendedReporting')\r\n\t\tjoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.policycoverage pc1\r\n\t\ton (pc1.PolicyCoverageAKID = rc1.PolicyCoverageAKID\r\n\t\tand pc1.CurrentSnapshotFlag = 1)\r\n\t\twhere pc1.PolicyAKID = pc.PolicyAKID\r\n\t\tand pt1.PremiumTransactionEnteredDate>pt.PremiumTransactionEnteredDate)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID ORDER BY PremiumTransactionEffectiveDate) = 1\n),\nLKP_StrategicProfitCenter AS (\n\tSELECT\n\tCurrentSnapshotFlag,\n\tStrategicProfitCenterAKId,\n\tStrategicProfitCenterCode,\n\tStrategicProfitCenterAbbreviation,\n\tStrategicProfitCenterDescription,\n\tin_StrategicProfitCenterAKId\n\tFROM (\n\t\tSELECT \n\t\t\tCurrentSnapshotFlag,\n\t\t\tStrategicProfitCenterAKId,\n\t\t\tStrategicProfitCenterCode,\n\t\t\tStrategicProfitCenterAbbreviation,\n\t\t\tStrategicProfitCenterDescription,\n\t\t\tin_StrategicProfitCenterAKId\n\t\tFROM StrategicProfitCenter\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StrategicProfitCenterAKId ORDER BY CurrentSnapshotFlag DESC) = 1\n),\nLKP_WorkHSBCyberSuite AS (\n\tSELECT\n\tWorkHSBCyberSuiteId,\n\tPremiumMasterCalculationId,\n\tin_PremiumMasterCalculationId\n\tFROM (\n\t\tSELECT \n\t\t\tWorkHSBCyberSuiteId,\n\t\t\tPremiumMasterCalculationId,\n\t\t\tin_PremiumMasterCalculationId\n\t\tFROM WorkHSBCyberSuite\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumMasterCalculationId ORDER BY WorkHSBCyberSuiteId DESC) = 1\n),\nEXP_GetValues AS (\n\tSELECT\n\tLKP_WorkHSBCyberSuite.WorkHSBCyberSuiteId AS lkp_WorkHSBCyberSuiteID,\n\tLKP_PremiumTransaction.PremiumTransactionEffectiveDate AS lkp_PremiumTransactionEffectiveDate,\n\tSQ_WorkHSBCyberSuite.SourceSystemID AS in_SourceSystemID,\n\tSQ_WorkHSBCyberSuite.pol_id AS in_pol_id,\n\tSQ_WorkHSBCyberSuite.RiskLocationID AS in_RiskLocationID,\n\tSQ_WorkHSBCyberSuite.PolicyCoverageID AS in_PolicyCoverageID,\n\tSQ_WorkHSBCyberSuite.RatingCoverageId AS in_RatingCoverageId,\n\tSQ_WorkHSBCyberSuite.PremiumTransactionID AS in_PremiumTransactionID,\n\tSQ_WorkHSBCyberSuite.PremiumMasterCalculationID AS in_PremiumMasterCalculationID,\n\tSQ_WorkHSBCyberSuite.contract_cust_id AS in_contract_cust_id,\n\tSQ_WorkHSBCyberSuite.contract_cust_addr_id AS in_contract_cust_addr_id,\n\tSQ_WorkHSBCyberSuite.AgencyID AS in_AgencyID,\n\tSQ_WorkHSBCyberSuite.pol_sym AS in_pol_sym,\n\tSQ_WorkHSBCyberSuite.pol_num AS in_pol_num,\n\tSQ_WorkHSBCyberSuite.pol_mod AS in_pol_mod,\n\tSQ_WorkHSBCyberSuite.PolicyOfferingAKId AS in_PolicyOfferingAKId,\n\tSQ_WorkHSBCyberSuite.StrategicProfitCenterAKId AS in_StrategicProfitCenterAKId,\n\tSQ_WorkHSBCyberSuite.pol_eff_date AS in_pol_eff_date,\n\tSQ_WorkHSBCyberSuite.pol_exp_date AS in_pol_exp_date,\n\tSQ_WorkHSBCyberSuite.name AS in_name,\n\tSQ_WorkHSBCyberSuite.addr_line_1 AS in_addr_line_1,\n\tSQ_WorkHSBCyberSuite.addr_line_2 AS in_addr_line_2,\n\tSQ_WorkHSBCyberSuite.addr_line_3 AS in_addr_line_3,\n\tSQ_WorkHSBCyberSuite.city_name AS in_city_name,\n\tSQ_WorkHSBCyberSuite.state_prov_code AS in_state_prov_code,\n\tSQ_WorkHSBCyberSuite.zip_postal_code AS in_zip_postal_code,\n\tSQ_WorkHSBCyberSuite.FirstPartyLimit AS in_Limit,\n\t-- *INF*: TO_INTEGER(in_Limit)\n\tCAST(in_Limit AS INTEGER) AS v_LimitAmount,\n\tSQ_WorkHSBCyberSuite.FirstPartyDeductible AS in_Deductible,\n\tSQ_WorkHSBCyberSuite.TransactionCode AS in_TransactionCode,\n\tSQ_WorkHSBCyberSuite.prim_bus_class_code AS in_prim_bus_class_code,\n\tSQ_WorkHSBCyberSuite.ClassCode AS in_ClassCode,\n\tSQ_WorkHSBCyberSuite.prior_pol_key AS in_prior_pol_key,\n\tSQ_WorkHSBCyberSuite.AgencyCode AS in_AgencyCode,\n\tSQ_WorkHSBCyberSuite.PremiumMasterCoverageEffectiveDate AS in_PremiumMasterCoverageEffectiveDate,\n\tSQ_WorkHSBCyberSuite.PremiumMasterCoverageExpirationDate AS in_PremiumMasterCoverageExpirationDate,\n\tSQ_WorkHSBCyberSuite.PremiumMasterPremium AS in_PremiumMasterPremium,\n\tLKP_PolicyOffering.PolicyOfferingCode AS in_PolicyOfferingCode,\n\tLKP_StrategicProfitCenter.StrategicProfitCenterCode AS in_StrategicProfitCenterCode,\n\tLKP_StrategicProfitCenter.StrategicProfitCenterAbbreviation AS in_StrategicProfitCenterAbbreviation,\n\tLKP_StrategicProfitCenter.StrategicProfitCenterDescription AS in_StrategicProfitCenterDescription,\n\tSQ_WorkHSBCyberSuite.PremiumTransactionAKID AS in_PremiumTransactionAKID,\n\tSQ_WorkHSBCyberSuite.premiummasterfulltermpremium AS in_premiummasterfulltermpremium,\n\tSQ_WorkHSBCyberSuite.PremiumMasterRunDate AS in_PremiumMasterRunDate,\n\tSQ_WorkHSBCyberSuite.PolicyCoverageEffectiveDate AS in_PolicyCoverageEffectiveDate,\n\tSQ_WorkHSBCyberSuite.RatingCoverageCancellationDate AS in_RatingCoverageCancellationDate,\n\tSQ_WorkHSBCyberSuite.ProgramAKId AS in_ProgramAKId,\n\tSysdate AS out_CreatedDate,\n\tSysdate AS out_ModifiedDate,\n\tin_pol_id AS out_pol_id,\n\tin_RiskLocationID AS out_RiskLocationID,\n\tin_PolicyCoverageID AS out_PolicyCoverageID,\n\tin_RatingCoverageId AS out_RatingCoverageID,\n\t-- *INF*: IIF(ISNULL(in_PremiumTransactionID),-1,in_PremiumTransactionID)\n\tIFF(in_PremiumTransactionID IS NULL, - 1, in_PremiumTransactionID) AS out_PremiumTransactionID,\n\t-- *INF*: IIF(ISNULL(in_PremiumMasterCalculationID),-1,in_PremiumMasterCalculationID)\n\tIFF(in_PremiumMasterCalculationID IS NULL, - 1, in_PremiumMasterCalculationID) AS out_PremiumMasterCalculationID,\n\tin_PremiumMasterRunDate AS out_RunDate,\n\tin_contract_cust_id AS out_contract_cust_id,\n\tin_contract_cust_addr_id AS out_contract_cust_addr_id,\n\tin_AgencyID AS out_AgencyID,\n\t-- *INF*: LTRIM(RTRIM(in_pol_sym))||LTRIM(RTRIM(in_pol_num))\n\tLTRIM(RTRIM(in_pol_sym)) || LTRIM(RTRIM(in_pol_num)) AS out_PolKey,\n\t'4744' AS out_Company,\n\t'CBS' AS out_Productcode,\n\t-- *INF*: IIF(\r\n\t-- v_LimitAmount  >  1000000,\r\n\t-- DECODE(\r\n\t-- in_PolicyOfferingCode, \r\n\t-- '500', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004577', '1004575'),\r\n\t-- '400', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004578', '1004576'),\r\n\t-- '410', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004578', '1004576'),\r\n\t-- '420', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004578', '1004576'),\r\n\t-- '430', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004578', '1004576'),\r\n\t-- '450', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004578', '1004576')\r\n\t-- ),\r\n\t-- DECODE(\r\n\t-- in_PolicyOfferingCode, \r\n\t-- '500', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004482', '1004477'),\r\n\t-- '400', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004547', '1004548'),\r\n\t-- '410', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004547', '1004548'),\r\n\t-- '420', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004547', '1004548'),\r\n\t-- '430', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004547', '1004548'),\r\n\t-- '450', DECODE(in_StrategicProfitCenterDescription,'NSI', '1004547', '1004548')\r\n\t-- )\r\n\t-- )\r\n\t-- --contract numbers for NSI/WB for BOP/CPP determined by referral amount (limit)\n\tIFF(\n\t    v_LimitAmount > 1000000,\n\t    DECODE(\n\t        in_PolicyOfferingCode,\n\t        '500', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004577',\n\t            '1004575'\n\t        ),\n\t        '400', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004578',\n\t            '1004576'\n\t        ),\n\t        '410', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004578',\n\t            '1004576'\n\t        ),\n\t        '420', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004578',\n\t            '1004576'\n\t        ),\n\t        '430', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004578',\n\t            '1004576'\n\t        ),\n\t        '450', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004578',\n\t            '1004576'\n\t        )\n\t    ),\n\t    DECODE(\n\t        in_PolicyOfferingCode,\n\t        '500', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004482',\n\t            '1004477'\n\t        ),\n\t        '400', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004547',\n\t            '1004548'\n\t        ),\n\t        '410', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004547',\n\t            '1004548'\n\t        ),\n\t        '420', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004547',\n\t            '1004548'\n\t        ),\n\t        '430', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004547',\n\t            '1004548'\n\t        ),\n\t        '450', DECODE(\n\t            in_StrategicProfitCenterDescription,\n\t            'NSI', '1004547',\n\t            '1004548'\n\t        )\n\t    )\n\t) AS out_ContractNumber,\n\tin_pol_eff_date AS out_PolicyEffectiveDate,\n\tin_pol_exp_date AS out_PolicyExpirationDate,\n\t-- *INF*: IIF(ltrim(rtrim(in_name))='N/A', '', SUBSTR(ltrim(rtrim(in_name)),1,55))\n\tIFF(ltrim(rtrim(in_name)) = 'N/A', '', SUBSTR(ltrim(rtrim(in_name)), 1, 55)) AS out_nameOfInsured,\n\t-- *INF*: substr(CONCAT(\r\n\t--                      CONCAT(\r\n\t--                                            IIF(RTRIM(LTRIM(in_addr_line_1))='N/A', '', RTRIM(LTRIM(in_addr_line_1))),\r\n\t--                                            IIF(RTRIM(LTRIM(in_addr_line_2))='N/A', '', RTRIM(LTRIM(in_addr_line_2)))),\r\n\t--                      IIF(RTRIM(LTRIM(in_addr_line_3))='N/A', '', RTRIM(LTRIM(in_addr_line_3))))\r\n\t-- ,1,55)\n\tsubstr(CONCAT(CONCAT(\n\t            IFF(\n\t                RTRIM(LTRIM(in_addr_line_1)) = 'N/A', '',\n\t                RTRIM(LTRIM(in_addr_line_1))\n\t            ), \n\t            IFF(\n\t                RTRIM(LTRIM(in_addr_line_2)) = 'N/A', '',\n\t                RTRIM(LTRIM(in_addr_line_2))\n\t            )), \n\t        IFF(\n\t            RTRIM(LTRIM(in_addr_line_3)) = 'N/A', '', RTRIM(LTRIM(in_addr_line_3))\n\t        )), 1, 55) AS out_MailingAddressStreetName,\n\t-- *INF*: IIF(RTRIM(LTRIM(in_city_name))='N/A', '', RTRIM(LTRIM(in_city_name)))\n\tIFF(RTRIM(LTRIM(in_city_name)) = 'N/A', '', RTRIM(LTRIM(in_city_name))) AS out_MailingAddressCity,\n\t-- *INF*: IIF(RTRIM(LTRIM(in_state_prov_code))='N/A', '', RTRIM(LTRIM(in_state_prov_code)))\n\tIFF(RTRIM(LTRIM(in_state_prov_code)) = 'N/A', '', RTRIM(LTRIM(in_state_prov_code))) AS out_MailingAddressState,\n\t-- *INF*: IIF(RTRIM(LTRIM(in_zip_postal_code))='N/A', '', RTRIM(LTRIM(in_zip_postal_code)))\r\n\t-- \n\tIFF(RTRIM(LTRIM(in_zip_postal_code)) = 'N/A', '', RTRIM(LTRIM(in_zip_postal_code))) AS out_MailingAddressZipCode,\n\t0 AS out_TotalPackageGrossPremium,\n\t0 AS out_TotalPropertyGrossPremium,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(in_Limit), in_Limit,\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    in_Limit IS NOT NULL, in_Limit,\n\t    '0'\n\t) AS out_Limit,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- NOT ISNULL(in_Deductible), in_Deductible,\r\n\t-- '0')\n\tDECODE(\n\t    TRUE,\n\t    in_Deductible IS NOT NULL, in_Deductible,\n\t    '0'\n\t) AS out_DeductibleAmount,\n\t-- *INF*: IIF(RTRIM(LTRIM(in_prim_bus_class_code))='N/A' ,\r\n\t-- RTRIM(LTRIM(in_ClassCode)),\r\n\t--  RTRIM(LTRIM(in_prim_bus_class_code)))\n\tIFF(\n\t    RTRIM(LTRIM(in_prim_bus_class_code)) = 'N/A', RTRIM(LTRIM(in_ClassCode)),\n\t    RTRIM(LTRIM(in_prim_bus_class_code))\n\t) AS out_OccupancyCode,\n\t-- *INF*: IIF(RTRIM(LTRIM(in_prior_pol_key))='N/A', '', RTRIM(LTRIM(in_prior_pol_key)))\n\tIFF(RTRIM(LTRIM(in_prior_pol_key)) = 'N/A', '', RTRIM(LTRIM(in_prior_pol_key))) AS out_PreviousPolicyNumber,\n\t-- *INF*: IIF(ISNULL(in_AgencyCode) OR in_AgencyCode='N/A', '', in_AgencyCode)\n\tIFF(in_AgencyCode IS NULL OR in_AgencyCode = 'N/A', '', in_AgencyCode) AS out_AgencyCode,\n\t-- *INF*: DECODE (TRUE,\r\n\t-- ISNULL(in_StrategicProfitCenterAbbreviation), 'Other',\r\n\t-- LTRIM(RTRIM(in_StrategicProfitCenterAbbreviation)) = 'NSI',:LKP.LKP_PROGRAMCODEFORNSI(in_ProgramAKId),\r\n\t-- in_StrategicProfitCenterAbbreviation)\r\n\t-- \n\tDECODE(\n\t    TRUE,\n\t    in_StrategicProfitCenterAbbreviation IS NULL, 'Other',\n\t    LTRIM(RTRIM(in_StrategicProfitCenterAbbreviation)) = 'NSI', LKP_PROGRAMCODEFORNSI_in_ProgramAKId.ProgramDescription,\n\t    in_StrategicProfitCenterAbbreviation\n\t) AS out_BranchCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- LTRIM(RTRIM(in_TransactionCode))= 'New','01',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Cancel','03',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Rewrite','04',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Renew','07',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Reinstate','10',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Endorse' AND LTRIM(RTRIM(TO_CHAR(in_RatingCoverageCancellationDate,'MM/DD/YYYY'))) ='12/31/2100','30',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Endorse' \r\n\t-- AND LTRIM(RTRIM(TO_CHAR(in_RatingCoverageCancellationDate,'MM/DD/YYYY'))) <> '12/31/2100','03',\r\n\t-- LTRIM(RTRIM(in_TransactionCode))='Reissue','04',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'New', '01',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Cancel', '03',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Rewrite', '04',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Renew', '07',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Reinstate', '10',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Endorse' AND LTRIM(RTRIM(TO_CHAR(in_RatingCoverageCancellationDate, 'MM/DD/YYYY'))) = '12/31/2100', '30',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Endorse' AND LTRIM(RTRIM(TO_CHAR(in_RatingCoverageCancellationDate, 'MM/DD/YYYY'))) <> '12/31/2100', '03',\n\t    LTRIM(RTRIM(in_TransactionCode)) = 'Reissue', '04',\n\t    ''\n\t) AS out_TransactionCode,\n\tSQ_WorkHSBCyberSuite.OffsetOnsetCode,\n\t-- *INF*: IIF(ISNULL(in_PremiumMasterCoverageEffectiveDate), TO_DATE('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'), in_PremiumMasterCoverageEffectiveDate)\n\tIFF(\n\t    in_PremiumMasterCoverageEffectiveDate IS NULL,\n\t    TO_TIMESTAMP('2100-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'),\n\t    in_PremiumMasterCoverageEffectiveDate\n\t) AS out_TransactionEffectiveDate,\n\t-- *INF*: iif(in_TransactionCode='Cancel',in_PolicyCoverageEffectiveDate,\r\n\t-- \tiif (isnull(lkp_PremiumTransactionEffectiveDate),\r\n\t-- \tin_PremiumMasterCoverageEffectiveDate,lkp_PremiumTransactionEffectiveDate))\n\tIFF(\n\t    in_TransactionCode = 'Cancel', in_PolicyCoverageEffectiveDate,\n\t    IFF(\n\t        lkp_PremiumTransactionEffectiveDate IS NULL, in_PremiumMasterCoverageEffectiveDate,\n\t        lkp_PremiumTransactionEffectiveDate\n\t    )\n\t) AS out_CoverageEffectiveDate,\n\tin_PremiumMasterCoverageExpirationDate AS out_CoverageExpirationDate,\n\t-- *INF*: IIF(ISNULL(in_premiummasterfulltermpremium),0,in_premiummasterfulltermpremium)\n\tIFF(in_premiummasterfulltermpremium IS NULL, 0, in_premiummasterfulltermpremium) AS out_CoverageGrossPremium,\n\t-- *INF*: ROUND(IIF(ISNULL(in_PremiumMasterPremium),0,in_PremiumMasterPremium) ,2)\n\tROUND(\n\t    IFF(\n\t        in_PremiumMasterPremium IS NULL, 0, in_PremiumMasterPremium\n\t    ), 2) AS out_CoverageNetPremium,\n\t-- *INF*: DECODE(in_PolicyOfferingCode, \r\n\t-- '500', '040',\r\n\t-- '400', '039',\r\n\t-- '410', '039',\r\n\t-- '420', '039',\r\n\t-- '430', '039',\r\n\t-- '450', '039',\r\n\t-- ''\r\n\t-- )\r\n\t-- --BOP is 039, CPP is 040\r\n\t-- \n\tDECODE(\n\t    in_PolicyOfferingCode,\n\t    '500', '040',\n\t    '400', '039',\n\t    '410', '039',\n\t    '420', '039',\n\t    '430', '039',\n\t    '450', '039',\n\t    ''\n\t) AS out_ProgramID,\n\t-- *INF*: TRUNC(@{pipeline().parameters.EXTRACTDATE},'D')\n\tCAST(TRUNC(@{pipeline().parameters.EXTRACTDATE}, 'DAY') AS TIMESTAMP_NTZ(0)) AS out_ExtractDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS out_AuditID,\n\tLKP_PolicyCurrentStatusDim.PolicyCancellationDate,\n\tSQ_WorkHSBCyberSuite.CoverageType,\n\tSQ_WorkHSBCyberSuite.PremiumTransactionEnteredDate,\n\t'C' AS LimitType,\n\tSQ_WorkHSBCyberSuite.PricingTier,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionOne,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionOne = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionOne = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionOne = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionOne = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionOne,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionTwo,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionTwo = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionTwo = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionTwo = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionTwo = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionTwo,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionThree,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionThree = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionThree = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionThree = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionThree = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionThree,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionFour,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionFour = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionFour = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionFour = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionFour = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionFour,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionFive,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionFive = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionFive = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionFive = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionFive = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionFive,\n\tSQ_WorkHSBCyberSuite.CyberSuiteEligibilityQuestionSix,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- CyberSuiteEligibilityQuestionSix = '1','Y',\r\n\t-- CyberSuiteEligibilityQuestionSix = '0','N',\r\n\t-- '')\n\tDECODE(\n\t    TRUE,\n\t    CyberSuiteEligibilityQuestionSix = '1', 'Y',\n\t    CyberSuiteEligibilityQuestionSix = '0', 'N',\n\t    ''\n\t) AS o_CyberSuiteEligibilityQuestionSix\n\tFROM SQ_WorkHSBCyberSuite\n\tLEFT JOIN LKP_PolicyCurrentStatusDim\n\tON LKP_PolicyCurrentStatusDim.EDWPolicyAKId = SQ_WorkHSBCyberSuite.PolicyAKID\n\tLEFT JOIN LKP_PolicyOffering\n\tON LKP_PolicyOffering.PolicyOfferingAKId = SQ_WorkHSBCyberSuite.PolicyOfferingAKId\n\tLEFT JOIN LKP_PremiumTransaction\n\tON LKP_PremiumTransaction.PolicyAKID = SQ_WorkHSBCyberSuite.PolicyAKID\n\tLEFT JOIN LKP_StrategicProfitCenter\n\tON LKP_StrategicProfitCenter.StrategicProfitCenterAKId = SQ_WorkHSBCyberSuite.StrategicProfitCenterAKId\n\tLEFT JOIN LKP_WorkHSBCyberSuite\n\tON LKP_WorkHSBCyberSuite.PremiumMasterCalculationId = SQ_WorkHSBCyberSuite.PremiumMasterCalculationID\n\tLEFT JOIN LKP_PROGRAMCODEFORNSI LKP_PROGRAMCODEFORNSI_in_ProgramAKId\n\tON LKP_PROGRAMCODEFORNSI_in_ProgramAKId.ProgramAKId = in_ProgramAKId\n\n),\nFIL_WorkHSBCyberSuite AS (\n\tSELECT\n\tlkp_WorkHSBCyberSuiteID AS WorkHSBCyberID, \n\tout_CreatedDate AS CreatedDate, \n\tout_ModifiedDate AS ModifiedDate, \n\tout_pol_id AS PolicyID, \n\tout_RiskLocationID AS RiskLocationID, \n\tout_PolicyCoverageID AS PolicyCoverageID, \n\tout_RatingCoverageID AS RatingCoverageID, \n\tout_PremiumTransactionID AS PremiumTransactionID, \n\tout_PremiumMasterCalculationID AS PremiumMasterCalculationID, \n\tout_RunDate AS RunDate, \n\tout_contract_cust_id AS ContractCustomerID, \n\tout_contract_cust_addr_id AS ContractCustomerAddressID, \n\tout_AgencyID AS AgencyID, \n\tout_PolKey AS PolicyKey, \n\tout_Company AS Company, \n\tout_Productcode AS ProductCode, \n\tout_ContractNumber AS ContractNumber, \n\tout_PolicyEffectiveDate AS PolicyEffectiveDate, \n\tout_PolicyExpirationDate AS PolicyExpirationDate, \n\tout_nameOfInsured AS InsuredName, \n\tout_MailingAddressStreetName AS MailingAddressStreetName, \n\tout_MailingAddressCity AS MailingAddressCityName, \n\tout_MailingAddressState AS MailingAddressStateAbbreviation, \n\tout_MailingAddressZipCode AS MailingAddressZipCode, \n\tout_TotalPackageGrossPremium AS TotalPackageGrossPremium, \n\tout_TotalPropertyGrossPremium AS TotalPropertyGrossPremium, \n\tout_Limit AS FirstPartyLimit, \n\tout_DeductibleAmount AS FirstPartyDeductible, \n\tout_OccupancyCode AS OccupancyCode, \n\tout_PreviousPolicyNumber AS PreviousPolicyNumber, \n\tout_AgencyCode AS AgencyCode, \n\tout_BranchCode AS BranchCode, \n\tCoverageType, \n\tout_TransactionCode AS PremiumTransactionCode, \n\tOffsetOnsetCode, \n\tout_TransactionEffectiveDate AS PremiumTransactionEffectiveDate, \n\tout_CoverageEffectiveDate AS CoverageEffectiveDate, \n\tout_CoverageExpirationDate AS CoverageExpirationDate, \n\tout_CoverageGrossPremium AS CyberCoverageGrossPremium, \n\tout_CoverageNetPremium AS CyberCoverageNetPremium, \n\tout_ProgramID AS ProgramCode, \n\tout_AuditID AS AuditID, \n\tPolicyCancellationDate, \n\tLimitType, \n\tPricingTier, \n\to_CyberSuiteEligibilityQuestionOne AS CyberSuiteEligibilityQuestionOne, \n\to_CyberSuiteEligibilityQuestionTwo AS CyberSuiteEligibilityQuestionTwo, \n\to_CyberSuiteEligibilityQuestionThree AS CyberSuiteEligibilityQuestionThree, \n\to_CyberSuiteEligibilityQuestionFour AS CyberSuiteEligibilityQuestionFour, \n\to_CyberSuiteEligibilityQuestionFive AS CyberSuiteEligibilityQuestionFive, \n\to_CyberSuiteEligibilityQuestionSix AS CyberSuiteEligibilityQuestionSix, \n\tPremiumTransactionEnteredDate\n\tFROM EXP_GetValues\n\tWHERE ContractNumber != '' and ProgramCode  != ''  and isnull(WorkHSBCyberID)\n),\nWorkHSBCyberSuite AS (\n\tINSERT INTO WorkHSBCyberSuite\n\t(AuditId, CreatedDate, ModifiedDate, PolicyId, RiskLocationId, PolicyCoverageId, RatingCoverageId, PremiumTransactionId, PremiumMasterCalculationId, ContractCustomerId, ContractCustomerAddressId, AgencyId, PolicyKey, RunDate, Company, ProductCode, ContractNumber, PolicyEffectiveDate, PolicyExpirationDate, InsuredName, MailingAddressStreetName, MailingAddressCityName, MailingAddressStateAbbreviation, MailingAddressZipCode, TotalPackageGrossPremium, TotalPropertyGrossPremium, Limit, Deductible, OccupancyCode, PreviousPolicyNumber, AgencyCode, BranchCode, CoverageType, PremiumTransactionCode, OffsetOnsetCode, PremiumTransactionEffectiveDate, CoverageEffectiveDate, CoverageExpirationDate, CyberSuiteCoverageGrossPremium, CyberSuiteCoverageNetPremium, ProgramCode, PolicyCancellationDate, LimitType, PricingTier, CyberSuiteEligibilityQuestionOne, CyberSuiteEligibilityQuestionTwo, CyberSuiteEligibilityQuestionThree, CyberSuiteEligibilityQuestionFour, CyberSuiteEligibilityQuestionFive, CyberSuiteEligibilityQuestionSix, PremiumTransactionEnteredDate)\n\tSELECT \n\tAuditID AS AUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPolicyID AS POLICYID, \n\tRiskLocationID AS RISKLOCATIONID, \n\tPolicyCoverageID AS POLICYCOVERAGEID, \n\tRatingCoverageID AS RATINGCOVERAGEID, \n\tPremiumTransactionID AS PREMIUMTRANSACTIONID, \n\tPremiumMasterCalculationID AS PREMIUMMASTERCALCULATIONID, \n\tContractCustomerID AS CONTRACTCUSTOMERID, \n\tContractCustomerAddressID AS CONTRACTCUSTOMERADDRESSID, \n\tAgencyID AS AGENCYID, \n\tPOLICYKEY, \n\tRUNDATE, \n\tCOMPANY, \n\tPRODUCTCODE, \n\tCONTRACTNUMBER, \n\tPOLICYEFFECTIVEDATE, \n\tPOLICYEXPIRATIONDATE, \n\tINSUREDNAME, \n\tMAILINGADDRESSSTREETNAME, \n\tMAILINGADDRESSCITYNAME, \n\tMAILINGADDRESSSTATEABBREVIATION, \n\tMAILINGADDRESSZIPCODE, \n\tTOTALPACKAGEGROSSPREMIUM, \n\tTOTALPROPERTYGROSSPREMIUM, \n\tFirstPartyLimit AS LIMIT, \n\tFirstPartyDeductible AS DEDUCTIBLE, \n\tOCCUPANCYCODE, \n\tPREVIOUSPOLICYNUMBER, \n\tAGENCYCODE, \n\tBRANCHCODE, \n\tCOVERAGETYPE, \n\tPREMIUMTRANSACTIONCODE, \n\tOFFSETONSETCODE, \n\tPREMIUMTRANSACTIONEFFECTIVEDATE, \n\tCOVERAGEEFFECTIVEDATE, \n\tCOVERAGEEXPIRATIONDATE, \n\tCyberCoverageGrossPremium AS CYBERSUITECOVERAGEGROSSPREMIUM, \n\tCyberCoverageNetPremium AS CYBERSUITECOVERAGENETPREMIUM, \n\tPROGRAMCODE, \n\tPOLICYCANCELLATIONDATE, \n\tLIMITTYPE, \n\tPRICINGTIER, \n\tCYBERSUITEELIGIBILITYQUESTIONONE, \n\tCYBERSUITEELIGIBILITYQUESTIONTWO, \n\tCYBERSUITEELIGIBILITYQUESTIONTHREE, \n\tCYBERSUITEELIGIBILITYQUESTIONFOUR, \n\tCYBERSUITEELIGIBILITYQUESTIONFIVE, \n\tCYBERSUITEELIGIBILITYQUESTIONSIX, \n\tPREMIUMTRANSACTIONENTEREDDATE\n\tFROM FIL_WorkHSBCyberSuite\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "STARTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "ENDDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "EXTRACTDATE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/PolicyDataServices/"
        },
        "annotations": []
    }
}