{
    "name": "s_m_POL_DW_DELETE_PremiumTransaction_DCT_NegateRestate_Unbalanced_Cleanup",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_DELETE_PremiumTransaction_DCT_NegateRestate_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_WB_EDWInceptionToDate AS (\n\tSelect B.PolicyKey, A.DCTWrittenChange\r\n\tfrom @{pipeline().parameters.DCT_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWInceptionToDate A\r\n\tinner join @{pipeline().parameters.DCT_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_EDWDCTDataRepairPolicy B\r\n\ton A.PolicyNumber+A.PolicyVersion=B.PolicyKey\n),\nEXP_SRC_DCT AS (\n\tSELECT\n\tPolicyKey,\n\tDCTWrittenChange\n\tFROM SQ_WB_EDWInceptionToDate\n),\nSQ_PremiumTransaction AS (\n\tSELECT p.pol_key,\r\n\tSUM(PT.PremiumTransactionAmount) EDWDirectWrittenPremium\r\n\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy P\r\n\ton  P.pol_ak_id=cast(substring(PT.PremiumTransactionKey,1,charindex('~',PT.PremiumTransactionKey,1)-1) as bigint)\r\n\tand charindex('~',PT.PremiumTransactionKey,1)>0\r\n\tand len(substring(PT.PremiumTransactionKey,1,charindex('~',PT.PremiumTransactionKey,1)-1))>0\r\n\tand P.source_sys_id='DCT'\r\n\tand P.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.STAGE_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTDataRepairPolicy W \r\n\tON W.PolicyKey = P.pol_key \r\n\tAND W.createddate > '@{pipeline().parameters.SELECTION_START_TS}'\r\n\tWHERE  PT.SourceSystemID='DCT' AND PT.ReasonAmendedCode not in ('CWO','Claw Back')\r\n\tGROUP BY p.pol_key\n),\nEXP_SRC_EDW AS (\n\tSELECT\n\tpol_key,\n\tEDWDirectWrittenPremium\n\tFROM SQ_PremiumTransaction\n),\nJNR_EDW_DCT AS (SELECT\n\tEXP_SRC_EDW.pol_key, \n\tEXP_SRC_EDW.EDWDirectWrittenPremium, \n\tEXP_SRC_DCT.PolicyKey, \n\tEXP_SRC_DCT.DCTWrittenChange\n\tFROM EXP_SRC_EDW\n\tINNER JOIN EXP_SRC_DCT\n\tON EXP_SRC_DCT.PolicyKey = EXP_SRC_EDW.pol_key\n),\nEXP_Balance_Flag AS (\n\tSELECT\n\tpol_key,\n\tEDWDirectWrittenPremium,\n\tPolicyKey,\n\tDCTWrittenChange,\n\t-- *INF*: IIF(abs(EDWDirectWrittenPremium-DCTWrittenChange)>@{pipeline().parameters.LIMIT},'UnBalanced','Balanced')\n\tIFF(abs(EDWDirectWrittenPremium - DCTWrittenChange) > @{pipeline().parameters.LIMIT}, 'UnBalanced', 'Balanced') AS Balance_Flag\n\tFROM JNR_EDW_DCT\n),\nRTR_EDW_DCT AS (\n\tSELECT\n\tpol_key,\n\tEDWDirectWrittenPremium,\n\tPolicyKey,\n\tDCTWrittenChange,\n\tBalance_Flag\n\tFROM EXP_Balance_Flag\n),\nRTR_EDW_DCT_Balanced AS (SELECT * FROM RTR_EDW_DCT WHERE Balance_Flag='Balanced'),\nRTR_EDW_DCT_Unbalanced AS (SELECT * FROM RTR_EDW_DCT WHERE Balance_Flag='UnBalanced'),\nEXP_EDW_DCT AS (\n\tSELECT\n\tpol_key\n\tFROM RTR_EDW_DCT_Unbalanced\n),\nSQ_PremiumTransaction_Delete AS (\n\tselect PT.PremiumTransactionid,PT.PremiumTransactionAkid,WPT.WorkPremiumTransactionid,AWPT.ArchWorkPremiumTransactionid,P.pol_key,W.WorkDCTDataRepairPolicyId,WPTN.WorkPremiumTransactionDataRepairNegateId,AWPTN.ArchWorkPremiumTransactionDataRepairNegateId\r\n\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction PT\r\n\tinner join @{pipeline().parameters.TARGET_TABLE_OWNER_V2}.policy P\r\n\ton  P.pol_ak_id=cast(substring(PT.PremiumTransactionKey,1,charindex('~',PT.PremiumTransactionKey,1)-1) as bigint)\r\n\tand charindex('~',PT.PremiumTransactionKey,1)>0\r\n\tand len(substring(PT.PremiumTransactionKey,1,charindex('~',PT.PremiumTransactionKey,1)-1))>0\r\n\tand P.source_sys_id='DCT'\r\n\tand P.crrnt_snpsht_flag=1\r\n\tINNER JOIN @{pipeline().parameters.STAGE_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.WorkDCTDataRepairPolicy W \r\n\tON W.PolicyKey = P.pol_key \r\n\tAND W.createddate > '@{pipeline().parameters.SELECTION_START_TS}' \r\n\tLEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransaction WPT\r\n\ton PT.PremiumTransactionAkid=WPT.PremiumTransactionAkid\r\n\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.ArchWorkPremiumTransaction AWPT\r\n\ton PT.PremiumTransactionAkid=AWPT.PremiumTransactionAkid\r\n\tLEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionDataRepairNegate WPTN\r\n\ton PT.PremiumTransactionAkid=WPTN.NewNegatePremiumTransactionAKID\r\n\tLEFT JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.ArchWorkPremiumTransactionDataRepairNegate AWPTN\r\n\ton PT.PremiumTransactionAkid=AWPTN.NewNegatePremiumTransactionAKID\r\n\tWHERE  PT.SourceSystemID='DCT' AND PT.ReasonAmendedCode not in ('CWO','Claw Back')\r\n\tand PT.createddate>= '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand AWPT.CreatedDate>= '@{pipeline().parameters.SELECTION_END_TS}'\r\n\tand PT.NegateRestateCode in ('Negate','Restate')\n),\nJNR_Delete_Transactions AS (SELECT\n\tEXP_EDW_DCT.pol_key, \n\tSQ_PremiumTransaction_Delete.PremiumTransactionID, \n\tSQ_PremiumTransaction_Delete.PremiumTransactionAKID, \n\tSQ_PremiumTransaction_Delete.WorkPremiumTransactionId, \n\tSQ_PremiumTransaction_Delete.ArchWorkPremiumTransactionId, \n\tSQ_PremiumTransaction_Delete.pol_key AS pol_key1, \n\tSQ_PremiumTransaction_Delete.WorkDCTDataRepairPolicyId, \n\tSQ_PremiumTransaction_Delete.WorkPremiumTransactionDataRepairNegateId, \n\tSQ_PremiumTransaction_Delete.ArchWorkPremiumTransactionDataRepairNegateId\n\tFROM EXP_EDW_DCT\n\tINNER JOIN SQ_PremiumTransaction_Delete\n\tON SQ_PremiumTransaction_Delete.pol_key = EXP_EDW_DCT.pol_key\n),\nEXP_Delete_Transactions AS (\n\tSELECT\n\tPremiumTransactionID,\n\tPremiumTransactionAKID,\n\tWorkPremiumTransactionId,\n\tArchWorkPremiumTransactionId,\n\tWorkDCTDataRepairPolicyId,\n\tWorkPremiumTransactionDataRepairNegateId,\n\tArchWorkPremiumTransactionDataRepairNegateId\n\tFROM JNR_Delete_Transactions\n),\nUPD_Delete AS (\n\tSELECT\n\tPremiumTransactionID, \n\tPremiumTransactionAKID, \n\tWorkPremiumTransactionId, \n\tArchWorkPremiumTransactionId\n\tFROM EXP_Delete_Transactions\n),\nWorkDCTPremiumTransactionTracking AS (\n\tDELETE FROM WorkDCTPremiumTransactionTracking\n\tWHERE (PremiumTransactionID) IN (SELECT  PREMIUMTRANSACTIONID FROM UPD_Delete)\n),\nEDW_Data_Repair AS (\n\tINSERT INTO EDW_Data_Repair\n\t(pol_key, EDWDirectWrittenPremium, PolicyKey, DCTWrittenChange, Balance_Flag)\n\tSELECT \n\tPOL_KEY, \n\tEDWDIRECTWRITTENPREMIUM, \n\tPOLICYKEY, \n\tDCTWRITTENCHANGE, \n\tBALANCE_FLAG\n\tFROM EXP_Balance_Flag\n),\nFIL_WorkPremiumTransactionDataRepairNegate AS (\n\tSELECT\n\tWorkPremiumTransactionDataRepairNegateId\n\tFROM EXP_Delete_Transactions\n\tWHERE NOT ISNULL(WorkPremiumTransactionDataRepairNegateId)\n),\nUPD_WorkPremiumTransactionDataRepairNegate_Delete AS (\n\tSELECT\n\tWorkPremiumTransactionDataRepairNegateId\n\tFROM FIL_WorkPremiumTransactionDataRepairNegate\n),\nWorkPremiumTransactionDataRepairNegate AS (\n\tDELETE FROM WorkPremiumTransactionDataRepairNegate\n\tWHERE (WorkPremiumTransactionDataRepairNegateId) IN (SELECT  WORKPREMIUMTRANSACTIONDATAREPAIRNEGATEID FROM UPD_WorkPremiumTransactionDataRepairNegate_Delete)\n),\nSRT_WorkDCTDataRepairPolicyID AS (\n\tSELECT\n\tWorkDCTDataRepairPolicyId\n\tFROM EXP_Delete_Transactions\n\tORDER BY WorkDCTDataRepairPolicyId ASC\n),\nAGG_WorkDCTDataRepairPolicyID AS (\n\tSELECT\n\tWorkDCTDataRepairPolicyId\n\tFROM SRT_WorkDCTDataRepairPolicyID\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkDCTDataRepairPolicyId ORDER BY NULL) = 1\n),\nUPD_WorkDCTDataRepairPolicyID_Delete AS (\n\tSELECT\n\tWorkDCTDataRepairPolicyId\n\tFROM AGG_WorkDCTDataRepairPolicyID\n),\nWorkDCTDataRepairPolicy AS (\n\tDELETE FROM WorkDCTDataRepairPolicy\n\tWHERE (WorkDCTDataRepairPolicyId) IN (SELECT  WORKDCTDATAREPAIRPOLICYID FROM UPD_WorkDCTDataRepairPolicyID_Delete)\n),\nPremiumTransaction AS (\n\tDELETE FROM PremiumTransaction\n\tWHERE (PremiumTransactionID) IN (SELECT  PREMIUMTRANSACTIONID FROM UPD_Delete)\n),\nFIL_ArchWorkPremiumTransactionDataRepairNegate AS (\n\tSELECT\n\tArchWorkPremiumTransactionDataRepairNegateId\n\tFROM EXP_Delete_Transactions\n\tWHERE NOT ISNULL(ArchWorkPremiumTransactionDataRepairNegateId)\n),\nUPD_ArchWorkPremiumTransactionDataRepairNegate_Delete AS (\n\tSELECT\n\tArchWorkPremiumTransactionDataRepairNegateId\n\tFROM FIL_ArchWorkPremiumTransactionDataRepairNegate\n),\nArchWorkPremiumTransactionDataRepairNegate AS (\n\tDELETE FROM ArchWorkPremiumTransactionDataRepairNegate\n\tWHERE (ArchWorkPremiumTransactionDataRepairNegateId) IN (SELECT  ARCHWORKPREMIUMTRANSACTIONDATAREPAIRNEGATEID FROM UPD_ArchWorkPremiumTransactionDataRepairNegate_Delete)\n),\nArchWorkPremiumTransaction AS (\n\tDELETE FROM ArchWorkPremiumTransaction\n\tWHERE (ArchWorkPremiumTransactionId) IN (SELECT  ARCHWORKPREMIUMTRANSACTIONID FROM UPD_Delete)\n),\nFIL_WorkPremiumTransaction AS (\n\tSELECT\n\tWorkPremiumTransactionId\n\tFROM EXP_Delete_Transactions\n\tWHERE NOT ISNULL(WorkPremiumTransactionId)\n),\nUPD_WorkPremiumTransaction AS (\n\tSELECT\n\tWorkPremiumTransactionId\n\tFROM FIL_WorkPremiumTransaction\n),\nWorkPremiumTransaction AS (\n\tDELETE FROM WorkPremiumTransaction\n\tWHERE (WorkPremiumTransactionId) IN (SELECT  WORKPREMIUMTRANSACTIONID FROM UPD_WorkPremiumTransaction)\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "DCT_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "STAGE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "LIMIT": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Policy DataWarehouse/"
        },
        "annotations": []
    }
}