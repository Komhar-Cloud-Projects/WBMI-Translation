{
    "name": "s_m_CLM_FEED_Reinsurance_RestateOnly_SourceData",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_FEED_Reinsurance_RestateOnly_SourceData",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_Get_Max_Sapiens_SourceSequenceNumber AS (\n\tSELECT\n\tSource_Seq_Num,\n\tID\n\tFROM (\n\t\tSELECT MAX(A.SourceSequenceNumber) AS Source_Seq_Num,\r\n\t\t\t1 AS ID\r\n\t\tFROM (\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicy\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaim\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsuranceClaimRestate\r\n\t\t\tUNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceClaimRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SapiensReinsurancePolicyRestate\r\n\t\t       UNION ALL\r\n\t\t\tSELECT isnull(max(SourceSequenceNumber), 999) AS SourceSequenceNumber\r\n\t\t\tFROM @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsurancePolicyRestate\t) A\r\n\t\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ID ORDER BY Source_Seq_Num DESC) = 1\n),\nSQ_claim_occurrence_dim AS (\n\tselect * \r\n\tfrom (SELECT \r\n\t\tCASE WHEN cod.claim_num = 'N/A' THEN RTRIM(cod.claim_occurrence_key) ELSE RTRIM(cod.claim_num) END as ClaimNumber,\r\n\t\tP.pol_key as PolicyKey,\r\n\t\tcfint.financial_type_code as FinancialTypeCode,\r\n\t\ttransdt.CalendarDate as ClaimTransactionDate,\r\n\t\tctyp.trans_code as TransactionCode,\r\n\t\tCASE row_number() OVER (PARTITION BY cod.claim_num, P.pol_key, IRD.ProductCode, IRD.AccountingProductCode, IRD.StrategicProfitCenterAbbreviation, asld.asl_code, asld.sub_asl_code, IRD.InsuranceReferenceLineOfBusinessCode, P.state_of_domicile_code, cov.edw_claimant_cov_det_ak_id, cfint.financial_type_code\r\n\t\t\t\tORDER BY cltf.claim_trans_date_id desc, cltf.edw_claim_trans_pk_id desc) \r\n\t\t\tWHEN 1 THEN 1\r\n\t\t\tELSE 0\r\n\t\tEND as ContainsOutstandingReserveAmountFlag\r\n\t\r\n\t\tFROM @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_loss_transaction_fact cltf with (nolock) \r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.policy_dim P with (nolock) ON cltf.pol_dim_id = P.pol_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_transaction_type_dim ctyp with (nolock) ON cltf.claim_trans_type_dim_id = ctyp.claim_trans_type_dim_id \r\n\t\t\tAND ctyp.trans_kind_code = 'D'\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_financial_type_dim cfint with (nolock) ON cfint.claim_financial_type_dim_id = cltf.claim_financial_type_dim_id\r\n\t\t\tAND cfint.financial_type_code in ('D','E','S','R','B')\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_occurrence_dim cod with (nolock) ON cltf.claim_occurrence_dim_id = cod.claim_occurrence_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_dim clmt with (nolock) ON cltf.claimant_dim_id = clmt.claimant_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.claimant_coverage_dim cov with (nolock) ON cltf.claimant_cov_dim_id = cov.claimant_cov_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceDim IRD with (nolock) ON cltf.InsuranceReferenceDimId = IRD.InsuranceReferenceDimId\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.asl_dim asld with (nolock) ON cltf.asl_dim_id = asld.asl_dim_id\r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.calendar_dim transdt with (nolock) ON transdt.clndr_id = cltf.claim_trans_date_id\r\n\t\t@{pipeline().parameters.WHERE}\r\n\t) A \r\n\twhere A.ClaimTransactionDate >= CAST('@{pipeline().parameters.SELECTION_START_TS}' as date)\n),\nEXP_Collect AS (\n\tSELECT\n\tClaimNumber AS i_ClaimNumber,\n\t-- *INF*: LTRIM(RTRIM(i_ClaimNumber))\n\tLTRIM(RTRIM(i_ClaimNumber)) AS o_ClaimNumber,\n\tPolicyKey,\n\tFinancialTypeCode,\n\tClaimTransactionDate,\n\tTransactionCode,\n\tContainsOutstandingReserveAmountFlag\n\tFROM SQ_claim_occurrence_dim\n),\nFIL_Only_Reqd_Transactions AS (\n\tSELECT\n\to_ClaimNumber AS ClaimNumber, \n\tPolicyKey, \n\tFinancialTypeCode, \n\tClaimTransactionDate, \n\tTransactionCode, \n\tContainsOutstandingReserveAmountFlag\n\tFROM EXP_Collect\n\tWHERE --Reserves\r\n(\r\n    (INDEXOF(TransactionCode,'40','41','42','65','66','90','91','92','95','97','98','99') > 0 \r\n    or ContainsOutstandingReserveAmountFlag='1') \r\n    AND \r\n    INDEXOF(FinancialTypeCode,'D','E') > 0\r\n)\r\nOR\r\n-- Payments\r\n(\r\n    INDEXOF(TransactionCode,'40','41','42','65','66','90','91','92','95','97','98','99')=0\r\n)\n),\nAGG_OneRowPerClaim AS (\n\tSELECT\n\tClaimNumber,\n\tPolicyKey\n\tFROM FIL_Only_Reqd_Transactions\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimNumber ORDER BY NULL) = 1\n),\nLKP_Most_Recent_DocType_For_Claim1 AS (\n\tSELECT\n\tDOCUMENT_TYPE,\n\tCLAIM_ID\n\tFROM (\n\t\tselect a.MAX_SOURCE_SEQ_NUM as SOURCE_SEQ_NUM,\r\n\t\t\tmaxforclaim.DOCUMENT_TYPE as DOCUMENT_TYPE,\r\n\t\t\tRTRIM(a.CLAIM_ID) as CLAIM_ID \r\n\t\tfrom (select ac.CLAIM_ID, \r\n\t\t\t\tMAX(ac.SOURCE_SEQ_NUM) as MAX_SOURCE_SEQ_NUM\r\n\t\t\tfrom @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract ac with (nolock)\r\n\t\t\twhere ac.DATA_SOURCE = 'SRL'\r\n\t\t\tgroup by ac.CLAIM_ID) a\r\n\t\tjoin @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract maxforclaim with (nolock) \r\n\t\t\ton a.MAX_SOURCE_SEQ_NUM = maxforclaim.SOURCE_SEQ_NUM\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CLAIM_ID ORDER BY DOCUMENT_TYPE) = 1\n),\nFIL_Claim_Not_In_Sapiens AS (\n\tSELECT\n\tLKP_Most_Recent_DocType_For_Claim1.DOCUMENT_TYPE AS MostRecentDocumentType, \n\tAGG_OneRowPerClaim.ClaimNumber, \n\tAGG_OneRowPerClaim.PolicyKey\n\tFROM AGG_OneRowPerClaim\n\tLEFT JOIN LKP_Most_Recent_DocType_For_Claim1\n\tON LKP_Most_Recent_DocType_For_Claim1.CLAIM_ID = AGG_OneRowPerClaim.ClaimNumber\n\tWHERE ISNULL(MostRecentDocumentType) OR MostRecentDocumentType='G'\n),\nLKP_SapiensReinsuranceClaimRestate_Exists AS (\n\tSELECT\n\tSapiensReinsuranceClaimRestateId,\n\tClaimNumber\n\tFROM (\n\t\tSELECT \n\t\t\tSapiensReinsuranceClaimRestateId,\n\t\t\tClaimNumber\n\t\tFROM SapiensReinsuranceClaimRestate\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ClaimNumber ORDER BY SapiensReinsuranceClaimRestateId) = 1\n),\nFIL_Claim_Not_In_SapiensReinsuranceClaimRestate AS (\n\tSELECT\n\tFIL_Claim_Not_In_Sapiens.ClaimNumber AS claim_num, \n\tFIL_Claim_Not_In_Sapiens.PolicyKey AS curr_pol_key, \n\tFIL_Claim_Not_In_Sapiens.MostRecentDocumentType, \n\tLKP_SapiensReinsuranceClaimRestate_Exists.SapiensReinsuranceClaimRestateId\n\tFROM FIL_Claim_Not_In_Sapiens\n\tLEFT JOIN LKP_SapiensReinsuranceClaimRestate_Exists\n\tON LKP_SapiensReinsuranceClaimRestate_Exists.ClaimNumber = FIL_Claim_Not_In_Sapiens.ClaimNumber\n\tWHERE ISNULL(SapiensReinsuranceClaimRestateId)\n),\nAGG_OneRowPerPolicy AS (\n\tSELECT\n\tcurr_pol_key AS PolicyKey\n\tFROM FIL_Claim_Not_In_SapiensReinsuranceClaimRestate\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY NULL) = 1\n),\nLKP_PolicyKey_sent_to_Sapiens AS (\n\tSELECT\n\tSourceSeqNum,\n\tPolicyKey,\n\tDocumentType\n\tFROM (\n\t\tSELECT \r\n\t\ta.maxssn as SourceSeqNum, \r\n\t\tb.document_type as DocumentType,\r\n\t\trtrim(a.policy_no) as PolicyKey\r\n\t\tfrom\r\n\t\t(select max(SOURCE_SEQ_NUM) as maxssn, \r\n\t\tPOLICY_NO \r\n\t\tfrom \r\n\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract\r\n\t\tWHERE DATA_SOURCE = 'SRP'\r\n\t\tgroup by\r\n\t\tPOLICY_NO)a\r\n\t\tinner join\r\n\t\t@{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.ArchSapiensReinsuranceHeaderExtract b\r\n\t\ton a.POLICY_NO = b.POLICY_NO and a.maxssn = b.SOURCE_SEQ_NUM\r\n\t\tWHERE b.DATA_SOURCE = 'SRP' \r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY SourceSeqNum DESC) = 1\n),\nFIL_PolicyNotSentToSapiens AS (\n\tSELECT\n\tAGG_OneRowPerPolicy.PolicyKey, \n\tLKP_PolicyKey_sent_to_Sapiens.DocumentType\n\tFROM AGG_OneRowPerPolicy\n\tLEFT JOIN LKP_PolicyKey_sent_to_Sapiens\n\tON LKP_PolicyKey_sent_to_Sapiens.PolicyKey = AGG_OneRowPerPolicy.PolicyKey\n\tWHERE ISNULL(DocumentType) \r\nOR DocumentType='N'\n),\nEXP_PreTarget AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tsysdate AS CreatedDate,\n\tsysdate AS ModifiedDate,\n\tPolicyKey,\n\tDocumentType AS DOCUMENT_TYPE,\n\t-- *INF*: IIF(DOCUMENT_TYPE='N' OR ISNULL(DOCUMENT_TYPE),'N','Y')\r\n\t-- \n\tIFF(DOCUMENT_TYPE = 'N' OR DOCUMENT_TYPE IS NULL, 'N', 'Y') AS v_PolicySentFlag,\n\t-- *INF*: IIF(v_PolicySentFlag = 'Y' ,\r\n\t-- '1',\r\n\t-- '0')\n\tIFF(v_PolicySentFlag = 'Y', '1', '0') AS v_NegateFlag,\n\tv_NegateFlag AS o_NegateFlag,\n\t@{pipeline().parameters.SELECTION_START_TS} AS NegateDate,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1)),\r\n\t--  0,\r\n\t--  :LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1))\n\tIFF(\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num IS NULL, 0,\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num\n\t) AS v_SourceSequenceNumber,\n\tv_count + 1 AS v_count,\n\t-- *INF*: IIF(v_NegateFlag = '1',v_SourceSequenceNumber + v_count,NULL)\n\tIFF(v_NegateFlag = '1', v_SourceSequenceNumber + v_count, NULL) AS SourceSequenceNumber\n\tFROM FIL_PolicyNotSentToSapiens\n\tLEFT JOIN LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1\n\tON LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.ID = 1\n\n),\nSapiensReinsurancePolicyRestate AS (\n\tINSERT INTO SapiensReinsurancePolicyRestate\n\t(AuditId, CreatedDate, ModifiedDate, PolicyKey, NegateFlag, NegateDate, SourceSequenceNumber)\n\tSELECT \n\tAUDITID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tPOLICYKEY, \n\to_NegateFlag AS NEGATEFLAG, \n\tNEGATEDATE, \n\tSOURCESEQUENCENUMBER\n\tFROM EXP_PreTarget\n),\nEXP_Set_SSN_NegateFlag AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditId,\n\t@{pipeline().parameters.SELECTION_START_TS} AS o_CurrentTimestamp,\n\t-- *INF*: IIF(ISNULL(:LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1)),\r\n\t--  0,\r\n\t--  :LKP.LKP_Get_Max_Sapiens_SourceSequenceNumber(1))\n\tIFF(\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num IS NULL, 0,\n\t    LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.Source_Seq_Num\n\t) AS v_lkp_Source_Seq_Num,\n\tv_count + 1 AS v_count,\n\tv_lkp_Source_Seq_Num + v_count AS o_Source_Seq_Num,\n\tclaim_num AS ClaimNumber,\n\tcurr_pol_key,\n\t'' AS DefaultChar,\n\t0 AS DefaultNum,\n\tMostRecentDocumentType AS i_DOCUMENT_TYPE,\n\t-- *INF*: IIF(ISNULL(i_DOCUMENT_TYPE),'0',\r\n\t--     IIF(i_DOCUMENT_TYPE='G',\r\n\t-- '0',\r\n\t-- '1')\r\n\t-- )\n\tIFF(i_DOCUMENT_TYPE IS NULL, '0', IFF(\n\t        i_DOCUMENT_TYPE = 'G', '0', '1'\n\t    )) AS NegateFlag\n\tFROM FIL_Claim_Not_In_SapiensReinsuranceClaimRestate\n\tLEFT JOIN LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1\n\tON LKP_GET_MAX_SAPIENS_SOURCESEQUENCENUMBER_1.ID = 1\n\n),\nSapiensReinsuranceClaimRestate AS (\n\tINSERT INTO SapiensReinsuranceClaimRestate\n\t(AuditId, CreatedDate, ModifiedDate, ClaimNumber, PreviousCatastropheCode, CurrentCatastropheCode, NegateDate, SourceSequenceNumber, TransactionNumber, PreviousClaimRelationshipId, CurrentClaimRelationshipId, PreviousPolicyKey, CurrentPolicyKey, NegateFlag)\n\tSELECT \n\to_AuditId AS AUDITID, \n\to_CurrentTimestamp AS CREATEDDATE, \n\to_CurrentTimestamp AS MODIFIEDDATE, \n\tCLAIMNUMBER, \n\tDefaultChar AS PREVIOUSCATASTROPHECODE, \n\tDefaultChar AS CURRENTCATASTROPHECODE, \n\to_CurrentTimestamp AS NEGATEDATE, \n\to_Source_Seq_Num AS SOURCESEQUENCENUMBER, \n\to_Source_Seq_Num AS TRANSACTIONNUMBER, \n\tDefaultNum AS PREVIOUSCLAIMRELATIONSHIPID, \n\tDefaultNum AS CURRENTCLAIMRELATIONSHIPID, \n\tcurr_pol_key AS PREVIOUSPOLICYKEY, \n\tcurr_pol_key AS CURRENTPOLICYKEY, \n\tNEGATEFLAG\n\tFROM EXP_Set_SSN_NegateFlag\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}