{
    "name": "s_m_CLM_DW_LOAD_SupSurgeryType",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_SupSurgeryType",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_SUPPORT_01_STAGE AS (\n\tSELECT\r\n\tCS.CS01_CODE, CS.CS01_CODE_DES, CS.SOURCE_SYSTEM_ID \r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_SUPPORT_01_STAGE CS\r\n\tWHERE\r\n\tCS.CS01_TABLE_ID = 'W028'\n),\nEXP_Src_Values AS (\n\tSELECT\n\tCS01_CODE,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(CS01_CODE),'N/A',\r\n\t-- IS_SPACES(CS01_CODE),'N/A',\r\n\t-- LENGTH(CS01_CODE)=0,'N/A',\r\n\t-- LTRIM(RTRIM(CS01_CODE)))\n\tDECODE(\n\t    TRUE,\n\t    CS01_CODE IS NULL, 'N/A',\n\t    LENGTH(CS01_CODE)>0 AND TRIM(CS01_CODE)='', 'N/A',\n\t    LENGTH(CS01_CODE) = 0, 'N/A',\n\t    LTRIM(RTRIM(CS01_CODE))\n\t) AS o_CS01_CODE,\n\tCS01_CODE_DES,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(CS01_CODE_DES),'N/A',\r\n\t-- IS_SPACES(CS01_CODE_DES),'N/A',\r\n\t-- LENGTH(CS01_CODE_DES)=0,'N/A',\r\n\t-- LTRIM(RTRIM(CS01_CODE_DES)))\n\tDECODE(\n\t    TRUE,\n\t    CS01_CODE_DES IS NULL, 'N/A',\n\t    LENGTH(CS01_CODE_DES)>0 AND TRIM(CS01_CODE_DES)='', 'N/A',\n\t    LENGTH(CS01_CODE_DES) = 0, 'N/A',\n\t    LTRIM(RTRIM(CS01_CODE_DES))\n\t) AS o_CS01_CODE_DES,\n\tSOURCE_SYSTEM_ID,\n\t-- *INF*: ltrim(rtrim(SOURCE_SYSTEM_ID))\n\tltrim(rtrim(SOURCE_SYSTEM_ID)) AS o_SourceSystemId\n\tFROM SQ_CLAIM_SUPPORT_01_STAGE\n),\nLKP_SupSurgeryType AS (\n\tSELECT\n\tSupSurgeryTypeId,\n\tSurgeryTypeCode,\n\tSurgeryTypeDescription\n\tFROM (\n\t\tSELECT\r\n\t\tSupSurgeryType.SupSurgeryTypeId as SupSurgeryTypeId, SupSurgeryType.SurgeryTypeDescription as SurgeryTypeDescription, SupSurgeryType.SurgeryTypeCode as SurgeryTypeCode FROM\r\n\t\t @{pipeline().parameters.TARGET_TABLE_OWNER}.SupSurgeryType \r\n\t\t\r\n\t\twhere \r\n\t\tCurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SurgeryTypeCode ORDER BY SupSurgeryTypeId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_SupSurgeryType.SupSurgeryTypeId AS Lkp_SupSurgeryTypeId,\n\tLKP_SupSurgeryType.SurgeryTypeCode AS Lkp_SurgeryTypeCode,\n\tLKP_SupSurgeryType.SurgeryTypeDescription AS Lkp_SurgeryTypeDescription,\n\tEXP_Src_Values.o_CS01_CODE AS CS01_CODE,\n\tEXP_Src_Values.o_CS01_CODE_DES AS CS01_CODE_DES,\n\t-- *INF*: iif(isnull(Lkp_SupSurgeryTypeId),'NEW',\r\n\t-- \r\n\t--         iif(\r\n\t-- \r\n\t--         LTRIM(RTRIM(CS01_CODE)) != LTRIM(RTRIM(Lkp_SurgeryTypeCode)) \r\n\t-- \r\n\t-- or\r\n\t--   \r\n\t--         LTRIM(RTRIM(CS01_CODE_DES)) != LTRIM(RTRIM(Lkp_SurgeryTypeDescription)),\r\n\t-- \r\n\t--        'UPDATE', 'NOCHANGE')\r\n\t-- \r\n\t--    )\r\n\t--   \n\tIFF(\n\t    Lkp_SupSurgeryTypeId IS NULL, 'NEW',\n\t    IFF(\n\t        LTRIM(RTRIM(CS01_CODE)) != LTRIM(RTRIM(Lkp_SurgeryTypeCode))\n\t        or LTRIM(RTRIM(CS01_CODE_DES)) != LTRIM(RTRIM(Lkp_SurgeryTypeDescription)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangeFlag,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(\n\t    v_ChangedFlag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\t1 AS CurrentSnapshotFlag,\n\tEXP_Src_Values.o_SourceSystemId AS SourceSystemId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId\n\tFROM EXP_Src_Values\n\tLEFT JOIN LKP_SupSurgeryType\n\tON LKP_SupSurgeryType.SurgeryTypeCode = EXP_Src_Values.o_CS01_CODE\n),\nFIL_Lkp_Target AS (\n\tSELECT\n\tCS01_CODE AS o_CSO1_CODE, \n\tCS01_CODE_DES AS o_CS01_CODE_DES, \n\tChangeFlag, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag, \n\tSourceSystemId, \n\tAuditId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangeFlag =  'NEW'  or ChangeFlag = 'UPDATE'\n),\nSupSurgeryType_Insert AS (\n\tINSERT INTO SupSurgeryType\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, SurgeryTypeCode, SurgeryTypeDescription)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\to_CSO1_CODE AS SURGERYTYPECODE, \n\to_CS01_CODE_DES AS SURGERYTYPEDESCRIPTION\n\tFROM FIL_Lkp_Target\n),\nSQ_SupSurgeryType AS (\n\tSELECT \r\n\tA.SupSurgeryTypeId,\r\n\tA.EffectiveDate,\r\n\tA.SurgeryTypeCode,\r\n\tA.SurgeryTypeDescription \r\n\t\r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.SupSurgeryType A\r\n\t\r\n\tWHERE EXISTS \r\n\t    ( \r\n\tSELECT 1\r\n\tFROM  \r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.SupSurgeryType B\r\n\t\r\n\twhere\t\t\r\n\tB.CurrentSnapshotFlag= 1\r\n\tAND \r\n\tA.SurgeryTypeCode = B.SurgeryTypeCode\r\n\t            \r\n\tGROUP BY \r\n\tB.SurgeryTypeCode\r\n\t\r\n\tHAVING \r\n\tCOUNT(*) > 1\r\n\t    )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\tORDER BY \r\n\tA.SurgeryTypeCode , \r\n\tA.EffectiveDate  DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tSupSurgeryTypeId,\n\t0 AS CurrentSnapshotFlag,\n\tEffectiveDate,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tSurgeryTypeCode =\r\n\t-- v_PREV_ROW_SurgeryTypeCode, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1), \r\n\t-- --SurgeryTypeDescription=\r\n\t-- --v_PREV_ROW_SurgeryTypeDescription, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- Orig_ExpirationDate)\n\tDECODE(\n\t    TRUE,\n\t    SurgeryTypeCode = v_PREV_ROW_SurgeryTypeCode, DATEADD(SECOND,- 1,v_PREV_ROW_EffectiveDate),\n\t    Orig_ExpirationDate\n\t) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tv_PREV_ROW_EffectiveDate,\n\tv_PREV_ROW_SurgeryTypeCode,\n\tv_PREV_ROW_SurgeryTypeDescription,\n\tsysdate AS ModifiedDate,\n\tSurgeryTypeCode,\n\tSurgeryTypeDescription\n\tFROM SQ_SupSurgeryType\n),\nFIL_FirstRowAkId AS (\n\tSELECT\n\tSupSurgeryTypeId, \n\tCurrentSnapshotFlag, \n\tOrig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE Orig_ExpirationDate != ExpirationDate\n),\nUPD_SupSurgeryType AS (\n\tSELECT\n\tSupSurgeryTypeId, \n\tCurrentSnapshotFlag, \n\tExpirationDate, \n\tModifiedDate\n\tFROM FIL_FirstRowAkId\n),\nSupSurgeryType_Update AS (\n\tMERGE INTO SupSurgeryType AS T\n\tUSING UPD_SupSurgeryType AS S\n\tON T.SupSurgeryTypeId = S.SupSurgeryTypeId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsDataWarehouse/"
        },
        "annotations": []
    }
}