{
    "name": "s_m_CLM_DW_LOAD_Claimant_calc",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claimant_calc",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_claimant_cov_dtl_calc_rptd_date AS (\n\tSELECT\n\tclaimant_cov_date,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT CALC.claimant_cov_date as claimant_cov_date, CCD.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id FROM claimant_coverage_detail CCD, claimant_coverage_detail_calculation CALC\r\n\t\tWHERE CCD.claimant_cov_det_ak_id = CALC.claimant_cov_det_ak_id\r\n\t\tORDER BY CCD.claim_party_occurrence_ak_id, CALC.claimant_cov_date --\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claimant_cov_date) = 1\n),\nSQ_claimant_reserve_calculation AS (\n\tSELECT A.claim_party_occurrence_ak_id, A.financial_type_code, A.reserve_date, A.reserve_date_type, A.source_sys_id \r\n\tFROM\r\n\t claimant_reserve_calculation A WHERE A.claim_party_occurrence_ak_id IN\r\n\t(\r\n\tSELECT B.claim_party_occurrence_ak_id  \r\n\tFROM\r\n\t claimant_reserve_calculation B WHERE B.created_date >= '@{pipeline().parameters.SELECTION_START_TS}' \r\n\t) \r\n\tORDER BY A.claim_party_occurrence_ak_id, A.reserve_date, A.reserve_date_type\n),\nEXP_get_values AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tfinancial_type_code,\n\treserve_date,\n\treserve_date_type,\n\t-- *INF*: IIF(claim_party_occurrence_ak_id = v_prev_row_claim_party_occurrence_ak_id, 'OLD', 'NEW')\n\tIFF(claim_party_occurrence_ak_id = v_prev_row_claim_party_occurrence_ak_id, 'OLD', 'NEW') AS v_coverage,\n\t-- *INF*: IIF(v_coverage = 'NEW', IIF(financial_type_code = 'D', reserve_date_type,'NA'), IIF(financial_type_code = 'D', reserve_date_type, v_claimant_date_type_D_old))\n\tIFF(\n\t    v_coverage = 'NEW',\n\t    IFF(\n\t        financial_type_code = 'D', reserve_date_type, 'NA'\n\t    ),\n\t    IFF(\n\t        financial_type_code = 'D', reserve_date_type, v_claimant_date_type_D_old\n\t    )\n\t) AS v_claimant_date_type_D,\n\tv_claimant_date_type_D AS v_claimant_date_type_D_old,\n\t-- *INF*: IIF(v_coverage = 'NEW', IIF(financial_type_code = 'E', reserve_date_type,'NA'), IIF(financial_type_code = 'E', reserve_date_type, v_claimant_date_type_E_old))\n\tIFF(\n\t    v_coverage = 'NEW',\n\t    IFF(\n\t        financial_type_code = 'E', reserve_date_type, 'NA'\n\t    ),\n\t    IFF(\n\t        financial_type_code = 'E', reserve_date_type, v_claimant_date_type_E_old\n\t    )\n\t) AS v_claimant_date_type_E,\n\tv_claimant_date_type_E AS v_claimant_date_type_E_old,\n\t-- *INF*: IIF(v_coverage = 'NEW', IIF(financial_type_code = 'S', reserve_date_type,'NA'), IIF(financial_type_code = 'S', reserve_date_type, v_claimant_date_type_S_old))\n\tIFF(\n\t    v_coverage = 'NEW',\n\t    IFF(\n\t        financial_type_code = 'S', reserve_date_type, 'NA'\n\t    ),\n\t    IFF(\n\t        financial_type_code = 'S', reserve_date_type, v_claimant_date_type_S_old\n\t    )\n\t) AS v_claimant_date_type_S,\n\tv_claimant_date_type_S AS v_claimant_date_type_S_old,\n\t-- *INF*: IIF(v_coverage = 'NEW', IIF(financial_type_code = 'B', reserve_date_type,'NA'), IIF(financial_type_code = 'B', reserve_date_type, v_claimant_date_type_B_old))\n\tIFF(\n\t    v_coverage = 'NEW',\n\t    IFF(\n\t        financial_type_code = 'B', reserve_date_type, 'NA'\n\t    ),\n\t    IFF(\n\t        financial_type_code = 'B', reserve_date_type, v_claimant_date_type_B_old\n\t    )\n\t) AS v_claimant_date_type_B,\n\tv_claimant_date_type_B AS v_claimant_date_type_B_old,\n\t-- *INF*: IIF(v_coverage = 'NEW', IIF(financial_type_code = 'R', reserve_date_type,'NA'), IIF(financial_type_code = 'R', reserve_date_type, v_claimant_date_type_R_old))\n\tIFF(\n\t    v_coverage = 'NEW',\n\t    IFF(\n\t        financial_type_code = 'R', reserve_date_type, 'NA'\n\t    ),\n\t    IFF(\n\t        financial_type_code = 'R', reserve_date_type, v_claimant_date_type_R_old\n\t    )\n\t) AS v_claimant_date_type_R,\n\tv_claimant_date_type_R AS v_claimant_date_type_R_old,\n\t-- *INF*: IIF(\r\n\t-- (ISNULL(v_claimant_date_type_D) OR v_claimant_date_type_D = 'NA' OR v_claimant_date_type_D = '1NOTICEONLY' )\r\n\t-- AND(ISNULL(v_claimant_date_type_E) OR v_claimant_date_type_E = 'NA' OR v_claimant_date_type_E = '1NOTICEONLY') \r\n\t-- AND (ISNULL(v_claimant_date_type_S) OR v_claimant_date_type_S = 'NA' OR v_claimant_date_type_S = '1NOTICEONLY') \r\n\t-- AND (ISNULL(v_claimant_date_type_B) OR v_claimant_date_type_B = 'NA' OR v_claimant_date_type_B = '1NOTICEONLY')\r\n\t-- AND (ISNULL(v_claimant_date_type_R) OR v_claimant_date_type_R = 'NA' OR v_claimant_date_type_R = '1NOTICEONLY'), '1NOTICEONLY', \r\n\t-- \r\n\t-- IIF(v_claimant_date_type_D = '2OPEN' OR v_claimant_date_type_D = '4REOPEN' OR v_claimant_date_type_E = '2OPEN' OR v_claimant_date_type_E = '4REOPEN' OR v_claimant_date_type_S = '2OPEN' OR v_claimant_date_type_S = '4REOPEN' OR v_claimant_date_type_B = '2OPEN' OR v_claimant_date_type_B = '4REOPEN' OR v_claimant_date_type_R = '2OPEN' OR v_claimant_date_type_R = '4REOPEN', '2OPEN',\r\n\t-- \r\n\t-- '3CLOSED'))\n\tIFF(\n\t    (v_claimant_date_type_D IS NULL\n\t    or v_claimant_date_type_D = 'NA'\n\t    or v_claimant_date_type_D = '1NOTICEONLY')\n\t    and (v_claimant_date_type_E IS NULL\n\t    or v_claimant_date_type_E = 'NA'\n\t    or v_claimant_date_type_E = '1NOTICEONLY')\n\t    and (v_claimant_date_type_S IS NULL\n\t    or v_claimant_date_type_S = 'NA'\n\t    or v_claimant_date_type_S = '1NOTICEONLY')\n\t    and (v_claimant_date_type_B IS NULL\n\t    or v_claimant_date_type_B = 'NA'\n\t    or v_claimant_date_type_B = '1NOTICEONLY')\n\t    and (v_claimant_date_type_R IS NULL\n\t    or v_claimant_date_type_R = 'NA'\n\t    or v_claimant_date_type_R = '1NOTICEONLY'),\n\t    '1NOTICEONLY',\n\t    IFF(\n\t        v_claimant_date_type_D = '2OPEN'\n\t        or v_claimant_date_type_D = '4REOPEN'\n\t        or v_claimant_date_type_E = '2OPEN'\n\t        or v_claimant_date_type_E = '4REOPEN'\n\t        or v_claimant_date_type_S = '2OPEN'\n\t        or v_claimant_date_type_S = '4REOPEN'\n\t        or v_claimant_date_type_B = '2OPEN'\n\t        or v_claimant_date_type_B = '4REOPEN'\n\t        or v_claimant_date_type_R = '2OPEN'\n\t        or v_claimant_date_type_R = '4REOPEN',\n\t        '2OPEN',\n\t        '3CLOSED'\n\t    )\n\t) AS v_overall_claimant_date_type_crrnt,\n\t-- *INF*: IIF(v_overall_claimant_date_type_crrnt = '1NOTICEONLY', '1NOTICEONLY', IIF(v_overall_claimant_date_type_crrnt = '2OPEN', IIF(IN(v_claimant_date_type_out_old , '3CLOSED', '5CLOSEDAFTERREOPEN', '4REOPEN') AND v_coverage = 'OLD', '4REOPEN', '2OPEN'), IIF(v_overall_claimant_date_type_crrnt = '3CLOSED', IIF(IN(v_claimant_date_type_out_old , '4REOPEN', '5CLOSEDAFTERREOPEN'), '5CLOSEDAFTERREOPEN','3CLOSED'))))\n\tIFF(\n\t    v_overall_claimant_date_type_crrnt = '1NOTICEONLY', '1NOTICEONLY',\n\t    IFF(\n\t        v_overall_claimant_date_type_crrnt = '2OPEN',\n\t        IFF(\n\t            v_claimant_date_type_out_old IN ('3CLOSED','5CLOSEDAFTERREOPEN','4REOPEN')\n\t            and v_coverage = 'OLD',\n\t            '4REOPEN',\n\t            '2OPEN'\n\t        ),\n\t        IFF(\n\t            v_overall_claimant_date_type_crrnt = '3CLOSED',\n\t            IFF(\n\t                v_claimant_date_type_out_old IN ('4REOPEN','5CLOSEDAFTERREOPEN'),\n\t                '5CLOSEDAFTERREOPEN',\n\t                '3CLOSED'\n\t            )\n\t        )\n\t    )\n\t) AS v_claimant_date_type_out,\n\t-- *INF*: IIF(v_coverage = 'NEW', 'INSERT', IIF(v_claimant_date_type_out= v_claimant_date_type_out_old, 'NOCHANGE', 'INSERT'))\n\tIFF(\n\t    v_coverage = 'NEW', 'INSERT',\n\t    IFF(\n\t        v_claimant_date_type_out = v_claimant_date_type_out_old, 'NOCHANGE', 'INSERT'\n\t    )\n\t) AS v_insert_flag,\n\tv_insert_flag AS insert_flag_out,\n\tv_claimant_date_type_out AS v_claimant_date_type_out_old,\n\tv_claimant_date_type_out AS claimant_date_type_out,\n\tv_overall_claimant_date_type_crrnt AS v_overall_claimant_date_type_old,\n\tclaim_party_occurrence_ak_id AS v_prev_row_claim_party_occurrence_ak_id,\n\treserve_date_type AS v_prev_row_reserve_date_type,\n\tfinancial_type_code AS v_prev_row_financial_type_code,\n\tsource_sys_id\n\tFROM SQ_claimant_reserve_calculation\n),\nFIL_non_inserts AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id, \n\treserve_date, \n\tinsert_flag_out, \n\tclaimant_date_type_out, \n\tsource_sys_id\n\tFROM EXP_get_values\n\tWHERE insert_flag_out = 'INSERT'\n),\nLKP_Claimant_Calc AS (\n\tSELECT\n\tclaimant_calculation_id,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_date,\n\tclaimant_date_type,\n\tIN_claim_party_occurrence_ak_id,\n\tIN_reserve_date,\n\tIN_claimant_date_type_out\n\tFROM (\n\t\tSELECT \n\t\t\tclaimant_calculation_id,\n\t\t\tclaim_party_occurrence_ak_id,\n\t\t\tclaimant_date,\n\t\t\tclaimant_date_type,\n\t\t\tIN_claim_party_occurrence_ak_id,\n\t\t\tIN_reserve_date,\n\t\t\tIN_claimant_date_type_out\n\t\tFROM claimant_calculation\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claimant_date,claimant_date_type ORDER BY claimant_calculation_id) = 1\n),\nFIL_existing_records AS (\n\tSELECT\n\tLKP_Claimant_Calc.claimant_calculation_id AS lkp_claimant_calculation_id, \n\tFIL_non_inserts.claim_party_occurrence_ak_id, \n\tFIL_non_inserts.reserve_date, \n\tFIL_non_inserts.claimant_date_type_out, \n\tFIL_non_inserts.source_sys_id\n\tFROM FIL_non_inserts\n\tLEFT JOIN LKP_Claimant_Calc\n\tON LKP_Claimant_Calc.claim_party_occurrence_ak_id = FIL_non_inserts.claim_party_occurrence_ak_id AND LKP_Claimant_Calc.claimant_date = FIL_non_inserts.reserve_date AND LKP_Claimant_Calc.claimant_date_type = FIL_non_inserts.claimant_date_type_out\n\tWHERE IIF(ISNULL(lkp_claimant_calculation_id), TRUE, FALSE)\n),\nLKP_clmnt_cov_dtl_calc_financial_ind AS (\n\tSELECT\n\tIN_claim_party_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_cov_date,\n\tclaimant_cov_financial_ind\n\tFROM (\n\t\tSELECT CALC.claimant_cov_financial_ind as claimant_cov_financial_ind, CCD.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, CALC.claimant_cov_date as claimant_cov_date FROM claimant_coverage_detail CCD, claimant_coverage_detail_calculation CALC\r\n\t\tWHERE CCD.claimant_cov_det_ak_id = CALC.claimant_cov_det_ak_id\r\n\t\tAND CALC.claimant_cov_financial_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claimant_cov_date ORDER BY IN_claim_party_occurrence_ak_id) = 1\n),\nLKP_clmnt_cov_dtl_calc_noticeonly_ind AS (\n\tSELECT\n\tIN_claim_party_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_cov_date,\n\tclaimant_cov_notice_only_ind\n\tFROM (\n\t\tSELECT CALC.claimant_cov_notice_only_ind as claimant_cov_notice_only_ind, CCD.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, CALC.claimant_cov_date as claimant_cov_date FROM claimant_coverage_detail CCD, claimant_coverage_detail_calculation CALC\r\n\t\tWHERE CCD.claimant_cov_det_ak_id = CALC.claimant_cov_det_ak_id\r\n\t\tAND CALC.claimant_cov_notice_only_ind = 'N'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claimant_cov_date ORDER BY IN_claim_party_occurrence_ak_id) = 1\n),\nLKP_clmnt_cov_dtl_calc_recovery_ind AS (\n\tSELECT\n\tIN_claim_party_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_cov_date,\n\tclaimant_cov_recovery_ind\n\tFROM (\n\t\tSELECT CALC.claimant_cov_recovery_ind as claimant_cov_recovery_ind, CCD.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, CALC.claimant_cov_date as claimant_cov_date FROM claimant_coverage_detail CCD, claimant_coverage_detail_calculation CALC\r\n\t\tWHERE CCD.claimant_cov_det_ak_id = CALC.claimant_cov_det_ak_id\r\n\t\tAND CALC.claimant_cov_recovery_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claimant_cov_date ORDER BY IN_claim_party_occurrence_ak_id) = 1\n),\nLKP_clmnt_cov_dtl_calc_supplemental_ind AS (\n\tSELECT\n\tIN_claim_party_occurrence_ak_id,\n\tIN_reserve_date,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_cov_date,\n\tclaimant_cov_supplemental_ind\n\tFROM (\n\t\tSELECT CALC.claimant_cov_supplemental_ind as claimant_cov_supplemental_ind, CCD.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, CALC.claimant_cov_date as claimant_cov_date FROM claimant_coverage_detail CCD, claimant_coverage_detail_calculation CALC\r\n\t\tWHERE CCD.claimant_cov_det_ak_id = CALC.claimant_cov_det_ak_id\r\n\t\tAND CALC.claimant_cov_supplemental_ind = 'Y'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,claimant_cov_date ORDER BY IN_claim_party_occurrence_ak_id) = 1\n),\nEXP_calculate_values AS (\n\tSELECT\n\tFIL_existing_records.claim_party_occurrence_ak_id,\n\tFIL_existing_records.reserve_date,\n\tFIL_existing_records.claimant_date_type_out,\n\t-- *INF*: DECODE(claimant_date_type_out, '1NOTICEONLY', 'N', '2OPEN', 'O', '3CLOSED', 'C', '4REOPEN', 'O', '5CLOSEDAFTERREOPEN', 'C')\n\tDECODE(\n\t    claimant_date_type_out,\n\t    '1NOTICEONLY', 'N',\n\t    '2OPEN', 'O',\n\t    '3CLOSED', 'C',\n\t    '4REOPEN', 'O',\n\t    '5CLOSEDAFTERREOPEN', 'C'\n\t) AS claimant_status_code_out,\n\t-- *INF*: :LKP.LKP_CLAIMANT_COV_DTL_CALC_RPTD_DATE(claim_party_occurrence_ak_id)\n\tLKP_CLAIMANT_COV_DTL_CALC_RPTD_DATE_claim_party_occurrence_ak_id.claimant_cov_date AS claimant_rpted_date_out,\n\tLKP_clmnt_cov_dtl_calc_noticeonly_ind.claimant_cov_notice_only_ind AS lkp_claimant_cov_notice_only_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_cov_notice_only_ind), 'Y', 'N')\n\tIFF(lkp_claimant_cov_notice_only_ind IS NULL, 'Y', 'N') AS claimant_notice_only_indicator,\n\tLKP_clmnt_cov_dtl_calc_recovery_ind.claimant_cov_recovery_ind AS lkp_claimant_cov_recovery_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_cov_recovery_ind), 'N', 'Y')\n\tIFF(lkp_claimant_cov_recovery_ind IS NULL, 'N', 'Y') AS claimant_recovery_ind_out,\n\tLKP_clmnt_cov_dtl_calc_supplemental_ind.claimant_cov_supplemental_ind AS lkp_claimant_cov_supplemental_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_cov_supplemental_ind), 'N', 'Y')\n\tIFF(lkp_claimant_cov_supplemental_ind IS NULL, 'N', 'Y') AS claimant_supplemental_ind_out,\n\tLKP_clmnt_cov_dtl_calc_financial_ind.claimant_cov_financial_ind AS lkp_claimant_cov_financial_ind,\n\t-- *INF*: IIF(ISNULL(lkp_claimant_cov_financial_ind), 'N', 'Y')\n\tIFF(lkp_claimant_cov_financial_ind IS NULL, 'N', 'Y') AS claimant_financial_indicator,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\treserve_date AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS') \n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tFIL_existing_records.source_sys_id,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date\n\tFROM FIL_existing_records\n\tLEFT JOIN LKP_clmnt_cov_dtl_calc_financial_ind\n\tON LKP_clmnt_cov_dtl_calc_financial_ind.claim_party_occurrence_ak_id = FIL_existing_records.claim_party_occurrence_ak_id AND LKP_clmnt_cov_dtl_calc_financial_ind.claimant_cov_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_clmnt_cov_dtl_calc_noticeonly_ind\n\tON LKP_clmnt_cov_dtl_calc_noticeonly_ind.claim_party_occurrence_ak_id = FIL_existing_records.claim_party_occurrence_ak_id AND LKP_clmnt_cov_dtl_calc_noticeonly_ind.claimant_cov_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_clmnt_cov_dtl_calc_recovery_ind\n\tON LKP_clmnt_cov_dtl_calc_recovery_ind.claim_party_occurrence_ak_id = FIL_existing_records.claim_party_occurrence_ak_id AND LKP_clmnt_cov_dtl_calc_recovery_ind.claimant_cov_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_clmnt_cov_dtl_calc_supplemental_ind\n\tON LKP_clmnt_cov_dtl_calc_supplemental_ind.claim_party_occurrence_ak_id = FIL_existing_records.claim_party_occurrence_ak_id AND LKP_clmnt_cov_dtl_calc_supplemental_ind.claimant_cov_date <= FIL_existing_records.reserve_date\n\tLEFT JOIN LKP_CLAIMANT_COV_DTL_CALC_RPTD_DATE LKP_CLAIMANT_COV_DTL_CALC_RPTD_DATE_claim_party_occurrence_ak_id\n\tON LKP_CLAIMANT_COV_DTL_CALC_RPTD_DATE_claim_party_occurrence_ak_id.claim_party_occurrence_ak_id = claim_party_occurrence_ak_id\n\n),\nSEQ_Claimant_Calc_AK_ID AS (\n\tCREATE SEQUENCE SEQ_Claimant_Calc_AK_ID\n\tSTART = 0\n\tINCREMENT = 1;\n),\nclaimant_calculation_insert AS (\n\tINSERT INTO claimant_calculation\n\t(claimant_calculation_ak_id, claim_party_occurrence_ak_id, claimant_status_code, claimant_date, claimant_date_type, claimant_reported_date, claimant_supplemental_ind, claimant_financial_ind, claimant_recovery_ind, claimant_notice_only_ind, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tSEQ_Claimant_Calc_AK_ID.NEXTVAL AS CLAIMANT_CALCULATION_AK_ID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tclaimant_status_code_out AS CLAIMANT_STATUS_CODE, \n\treserve_date AS CLAIMANT_DATE, \n\tclaimant_date_type_out AS CLAIMANT_DATE_TYPE, \n\tclaimant_rpted_date_out AS CLAIMANT_REPORTED_DATE, \n\tclaimant_supplemental_ind_out AS CLAIMANT_SUPPLEMENTAL_IND, \n\tclaimant_financial_indicator AS CLAIMANT_FINANCIAL_IND, \n\tclaimant_recovery_ind_out AS CLAIMANT_RECOVERY_IND, \n\tclaimant_notice_only_indicator AS CLAIMANT_NOTICE_ONLY_IND, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE\n\tFROM EXP_calculate_values\n),\nSQ_claimant_calculation_update AS (\n\tSELECT a.claimant_calculation_id, a.claim_party_occurrence_ak_id, a.eff_from_date, a.eff_to_date, a.source_sys_id \r\n\tFROM\r\n\t claimant_calculation a WHERE EXISTS\r\n\t(\r\n\tSELECT 1 from @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_calculation b\r\n\tWHERE b.crrnt_snpsht_flag = 1\r\n\tand a.claim_party_occurrence_ak_id = b.claim_party_occurrence_ak_id\r\n\tand a.source_sys_id  = b.source_sys_id \r\n\tGROUP BY b.claim_party_occurrence_ak_id, b.source_sys_id \r\n\tHAVING COUNT(*) > 1\r\n\t)\r\n\tORDER BY a.claim_party_occurrence_ak_id, a.source_sys_id,  a.eff_from_date  DESC, a.claimant_calculation_ak_id DESC\r\n\t\r\n\t\r\n\t-- In the order by clause we added claimant_calculation_ak_id  DESC ,because say a claimant has staus order of \r\n\t-- '4REOPEN',\r\n\t-- '5CLOSEDAFTERREOPEN',\r\n\t-- '4REOPEN' on same day  , then the latest row with '4REOPEN' status should have a crrnt_snpsht_flag value of  1.\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaimant_calculation_id,\n\tclaim_party_occurrence_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, claim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id and source_sys_id = v_PREV_ROW_source_sys_id , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(\n\t    TRUE,\n\t    claim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id and source_sys_id = v_PREV_ROW_source_sys_id, DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_party_occurrence_ak_id AS v_PREV_ROW_claim_party_occurrence_ak_id,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_Snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claimant_calculation_update\n),\nFLT_Claimant_cov_dtl_calc_Upd AS (\n\tSELECT\n\tclaimant_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_claimant_calc AS (\n\tSELECT\n\tclaimant_calculation_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_Snpsht_flag, \n\tmodified_date\n\tFROM FLT_Claimant_cov_dtl_calc_Upd\n),\nclaimant_calculation_update AS (\n\tMERGE INTO claimant_calculation AS T\n\tUSING UPD_claimant_calc AS S\n\tON T.claimant_calculation_id = S.claimant_calculation_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_Snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}