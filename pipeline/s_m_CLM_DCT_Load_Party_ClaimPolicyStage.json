{
    "name": "s_m_CLM_DCT_Load_Party_ClaimPolicyStage",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DCT_Load_Party_ClaimPolicyStage",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_ProcessStatus AS (\n\tSELECT\n\tSupProcessStatusId,\n\tProcessStatus\n\tFROM (\n\t\tSELECT \n\t\t\tSupProcessStatusId,\n\t\t\tProcessStatus\n\t\tFROM SupProcessStatus\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProcessStatus ORDER BY SupProcessStatusId) = 1\n),\nSQ_ChangedPolicyParties AS (\n\tDeclare @Date as Datetime\r\n\t\r\n\tSet @Date= DATEADD(MI, -@{pipeline().parameters.TIME_OFFSET},CAST('@{pipeline().parameters.SELECTION_START_TS}' AS DATETIME))\r\n\t\r\n\tSELECT DC_Contact.PartyId, DC_Contact.ContactId, DC_Contact.SessionId As SessionId1, DC_Contact.Type, DC_Contact.PhoneNumber, DC_Contact.PhoneExtension, DC_Contact.Email, DC_Location.LocationId, DC_Location.SessionId As SessionId2, DC_Location.LocationXmlId, DC_Location.Deleted, DC_Location.Description, DC_Location.Address1, DC_Location.Address2, DC_Location.City, DC_Location.County, DC_Location.StateProv, DC_Location.PostalCode, DC_Location.Country, DC_LocationAssociation.ObjectId, DC_LocationAssociation.ObjectName, DC_LocationAssociation.LocationId, DC_LocationAssociation.LocationAssociationId, DC_LocationAssociation.SessionId As SessionId3, DC_LocationAssociation.LocationXmlId, DC_LocationAssociation.LocationAssociationType, DC_Party.PartyId, DC_Party.SessionId As SessionId4, DC_Party.PartyXmlId, DC_Party.Type, DC_Party.OtherType, DC_Party.Name, DC_Party.DateOfBirth, DC_Party.Gender, DC_Party.FirstName, DC_Party.LastName, DC_Party.MiddleName, DC_Party.MaritalStatus, DC_Party.Title, DC_Party.Reference, DC_Party.ContactName, DC_PartyAssociation.ObjectId, DC_PartyAssociation.ObjectName, DC_PartyAssociation.PartyId, DC_PartyAssociation.PartyAssociationId, DC_PartyAssociation.SessionId As SessionId5, DC_PartyAssociation.PartyXmlId As PartyXmlId2, DC_PartyAssociation.PartyAssociationType, DC_PartyAssociation.PartyAssociationStatus, DC_PartyAssociation.PartyReference, DC_PartyAssociation.Description, DC_PartyAssociation.EntityType, DC_PartyAssociation.EntityOtherType, DC_PartyAssociation.FederalEmployeeIDNumber, DC_PartyAssociation.CompanyNumber, DC_PartyAssociation.LicensePlateNumber, DC_Policy.PolicyId, DC_Policy.SessionId As SessionId6, DC_Policy.Id, DC_Policy.EffectiveDate, DC_Policy.ExpirationDate, DC_Policy.LineOfBusiness, DC_Policy.Term, DC_Policy.PrimaryRatingState, DC_Policy.Product, DC_Policy.HonorRates, DC_Policy.AuditPeriod, DC_Policy.SICCode, DC_Policy.SICCodeDesc, DC_Policy.NAICSCode, DC_Policy.NAICSCodeDesc, DC_Policy.QuoteNumber, DC_Policy.TermFactor, DC_Policy.CancellationDate, DC_Policy.Description, DC_Policy.PolicyNumber, DC_Policy.Status, DC_Policy.TransactionDate, DC_Policy.TransactionDateTime, DC_Policy.PreviousPolicyNumber, DC_Policy.InceptionDate, DC_Policy.PolicyTermID, DC_Policy.AccountID, DC_Policy.TaxesSurcharges, DC_Policy.Auditable, DC_Session.SessionId, DC_Session.ExampleQuoteId, DC_Session.UserName, DC_Session.CreateDateTime, DC_Session.Purpose, (select COUNT(*) from DC_Transaction where DC_Transaction.SessionId = DC_Session.SessionId and DC_Transaction.Type <> 'New') as NonNewBusinessTransactionCount\r\n\t,0,0,'',null,null,null,null,null,null,null,null,null,null,0,0,0,null,null,null,null,null,null,null,null,null,null,null,null,null,null\r\n\tFROM\r\n\tDC_Session\r\n\t  join DC_Policy on DC_Session.SessionId = DC_Policy.SessionId and \r\n\t\tDC_Policy.Status in ('InForce', 'NonRenewed', 'Cancelled', 'Cancel-Pending')\r\n\t  join DC_PartyAssociation \r\n\t\ton DC_Session.SessionId = DC_PartyAssociation.SessionId\r\n\t\t\tand ((DC_PartyAssociation.PartyAssociationType in ('Account', 'Registrant', 'AdditionalInsured', 'LossPayee', 'Mortgagee')) or \r\n\t\t\t (SUBSTRING(DC_PartyAssociation.PartyAssociationType, 1, 2) in ('WB', 'CA', 'CG', 'CR', 'BP', 'CU', 'IM')))\r\n\t  join DC_Party on DC_PartyAssociation.PartyId = DC_Party.PartyId and DC_PartyAssociation.SessionId = DC_Party.SessionId and DC_Party.PartyXmlId is not null\r\n\t join WB_Transaction on DC_Policy.SessionId = WB_Transaction.SessionId and (WB_Transaction.DataFix != 'Y' OR WB_Transaction.DataFix is NULL)\r\n\t  \r\n\t  left outer join DC_LocationAssociation\r\n\t  on \r\n\t\tDC_LocationAssociation.SessionId = DC_PartyAssociation.SessionId and\r\n\t\t((DC_PartyAssociation.SessionId = DC_LocationAssociation.ObjectId \r\n\t\tand DC_LocationAssociation.ObjectName = 'DC_Session' \r\n\t\tand DC_LocationAssociation.LocationAssociationType = DC_PartyAssociation.PartyAssociationType) or \r\n\t\t(DC_LocationAssociation.ObjectName <> 'DC_Session' and\r\n\t\tDC_PartyAssociation.ObjectId = DC_LocationAssociation.ObjectId \r\n\t\tand DC_LocationAssociation.ObjectName = DC_PartyAssociation.ObjectName))\r\n\t  \r\n\t  left outer join DC_Location on DC_LocationAssociation.LocationId = DC_Location.LocationId\r\n\t  left outer join DC_Contact on DC_Party.PartyId = DC_Contact.PartyId and DC_Contact.Type = 'Primary'\r\n\t  where DC_Session.CreateDateTime >  @Date\r\n\t   \r\n\tunion all\r\n\t\r\n\tSELECT null, 0, null, null, null, null, null, DC_Location.LocationId, DC_Location.SessionId As SessionId2, DC_Location.LocationXmlId, DC_Location.Deleted, DC_Location.Description, DC_Location.Address1, DC_Location.Address2, DC_Location.City, DC_Location.County, DC_Location.StateProv, DC_Location.PostalCode, DC_Location.Country, DC_LocationAssociation.ObjectId, DC_LocationAssociation.ObjectName, DC_LocationAssociation.LocationId, DC_LocationAssociation.LocationAssociationId, DC_LocationAssociation.SessionId As SessionId3, DC_LocationAssociation.LocationXmlId, DC_LocationAssociation.LocationAssociationType, 0, 0, DC_CA_Driver.Id As PartyXmlId, '', '', '', WB_CA_Driver.DateOfBirth As DateOfBirth, '', WB_CA_Driver.Name As FirstName, WB_CA_Driver.LastName As LastName, '', '', '', '', '', 0, '', null, 0, null, null, null, null, null, null, null, null, null, null, null, DC_Policy.PolicyId, DC_Policy.SessionId As SessionId6, DC_Policy.Id, DC_Policy.EffectiveDate, DC_Policy.ExpirationDate, DC_Policy.LineOfBusiness, DC_Policy.Term, DC_Policy.PrimaryRatingState, DC_Policy.Product, DC_Policy.HonorRates, DC_Policy.AuditPeriod, DC_Policy.SICCode, DC_Policy.SICCodeDesc, DC_Policy.NAICSCode, DC_Policy.NAICSCodeDesc, DC_Policy.QuoteNumber, DC_Policy.TermFactor, DC_Policy.CancellationDate, DC_Policy.Description, DC_Policy.PolicyNumber, DC_Policy.Status, DC_Policy.TransactionDate, DC_Policy.TransactionDateTime, DC_Policy.PreviousPolicyNumber, DC_Policy.InceptionDate, DC_Policy.PolicyTermID, DC_Policy.AccountID, DC_Policy.TaxesSurcharges, DC_Policy.Auditable, DC_Session.SessionId, DC_Session.ExampleQuoteId, DC_Session.UserName, DC_Session.CreateDateTime, DC_Session.Purpose, (select COUNT(*) from DC_Transaction where DC_Transaction.SessionId = DC_Session.SessionId and DC_Transaction.Type <> 'New') as NonNewBusinessTransactionCount,\r\n\t      DC_CA_Driver.CA_DriverId\r\n\t      ,DC_CA_Driver.SessionId\r\n\t      ,DC_CA_Driver.Id\r\n\t      ,DC_CA_Driver.BroadenNoFault\r\n\t      ,DC_CA_Driver.DateOfHire\r\n\t      ,DC_CA_Driver.DriversLicenseNumber\r\n\t      ,DC_CA_Driver.JobTitle\r\n\t      ,DC_CA_Driver.PercentageOfUse\r\n\t      ,DC_CA_Driver.StateLicensed\r\n\t      ,DC_CA_Driver.UseVehicleNumber\r\n\t      ,DC_CA_Driver.YearsExperience\r\n\t      ,DC_CA_Driver.YearLicensed\r\n\t      ,DC_CA_Driver.LineId\r\n\t\t  ,WB_CA_Driver.CA_DriverId\r\n\t      ,WB_CA_Driver.WB_CA_DriverId\r\n\t      ,WB_CA_Driver.SessionId\r\n\t      ,WB_CA_Driver.ExcludeDriver\r\n\t      ,WB_CA_Driver.WatchDriver\r\n\t      ,WB_CA_Driver.PermanentDriver\r\n\t      ,WB_CA_Driver.MVRDate\r\n\t      ,WB_CA_Driver.MVRStatus\r\n\t      ,WB_CA_Driver.SelectForMVR\r\n\t      ,WB_CA_Driver.TaskFlagCAMVRViolationCategoryNotFound\r\n\t      ,WB_CA_Driver.TaskFlagCAMVRViolationCategoryNotFoundEARS\r\n\t      ,WB_CA_Driver.DateOfBirth\r\n\t      ,WB_CA_Driver.Name\r\n\t      ,WB_CA_Driver.MiddleInitial\r\n\t      ,WB_CA_Driver.LastName\r\n\t      ,WB_CA_Driver.Gender\r\n\t      ,WB_CA_Driver.MaritalStatus\r\n\tFROM\r\n\tDC_Session\r\n\t  join DC_Policy on DC_Session.SessionId = DC_Policy.SessionId and \r\n\t\tDC_Policy.Status in ('InForce', 'NonRenewed', 'Cancelled', 'Cancel-Pending')\r\n\t  join DC_CA_Driver on DC_Session.SessionId = DC_CA_Driver.SessionId\r\n\t  join WB_CA_Driver on DC_Session.SessionId = WB_CA_Driver.SessionId and WB_CA_Driver.CA_DriverId = DC_CA_Driver.CA_DriverId\r\n\t join WB_Transaction on DC_Policy.SessionId = WB_Transaction.SessionId and (WB_Transaction.DataFix != 'Y' OR WB_Transaction.DataFix is NULL)\r\n\t  left outer join DC_LocationAssociation\r\n\t  on \r\n\t\tDC_LocationAssociation.SessionId = DC_Session.SessionId and\r\n\t\tDC_CA_Driver.Id = DC_LocationAssociation.LocationXmlId \r\n\t\tand DC_LocationAssociation.ObjectName = 'DC_CA_Driver' \r\n\t  \r\n\t  left outer join DC_Location on DC_LocationAssociation.LocationId = DC_Location.LocationId\r\n\t   where DC_Session.CreateDateTime > @Date\r\n\t \tand DC_CA_Driver.Id is not NULL \r\n\t   \r\n\t  -- order by PolicyNumber, PartyXmlId, SessionId\n),\nSRTTRANS AS (\n\tSELECT\n\tPolicyNumber, \n\tPartyXmlId, \n\tPartyId, \n\tContactId, \n\tSessionId, \n\tType, \n\tPhoneNumber, \n\tPhoneExtension, \n\tEmail, \n\tLocationId, \n\tSessionId1, \n\tLocationXmlId, \n\tDeleted, \n\tDescription, \n\tAddress1, \n\tAddress2, \n\tCity, \n\tCounty, \n\tStateProv, \n\tPostalCode, \n\tCountry, \n\tObjectId, \n\tObjectName, \n\tLocationId1, \n\tLocationAssociationId, \n\tSessionId2, \n\tLocationXmlId1, \n\tLocationAssociationType, \n\tPartyId1, \n\tSessionId3, \n\tType1, \n\tOtherType, \n\tName, \n\tDateOfBirth, \n\tGender, \n\tFirstName, \n\tLastName, \n\tMiddleName, \n\tMaritalStatus, \n\tTitle, \n\tReference, \n\tContactName, \n\tObjectId1, \n\tObjectName1, \n\tPartyId2, \n\tPartyAssociationId, \n\tSessionId4, \n\tPartyXmlId1, \n\tPartyAssociationType, \n\tPartyAssociationStatus, \n\tPartyReference, \n\tDescription1, \n\tEntityType, \n\tEntityOtherType, \n\tFederalEmployeeIDNumber, \n\tCompanyNumber, \n\tLicensePlateNumber, \n\tPolicyId, \n\tSessionId5, \n\tId, \n\tEffectiveDate, \n\tExpirationDate, \n\tLineOfBusiness, \n\tTerm, \n\tPrimaryRatingState, \n\tProduct, \n\tHonorRates, \n\tAuditPeriod, \n\tSICCode, \n\tSICCodeDesc, \n\tNAICSCode, \n\tNAICSCodeDesc, \n\tQuoteNumber, \n\tTermFactor, \n\tCancellationDate, \n\tDescription2, \n\tStatus, \n\tTransactionDate, \n\tTransactionDateTime, \n\tPreviousPolicyNumber, \n\tInceptionDate, \n\tPolicyTermID, \n\tAccountID, \n\tTaxesSurcharges, \n\tAuditable, \n\tSessionId6, \n\tExampleQuoteId, \n\tUserName, \n\tCreateDateTime, \n\tPurpose, \n\tNonNewBusinessTransactionCount, \n\tLineId, \n\tCA_DriverId, \n\tSessionId7, \n\tId1, \n\tBroadenNoFault, \n\tDateOfHire, \n\tDriversLicenseNumber, \n\tJobTitle, \n\tPercentageOfUse, \n\tStateLicensed, \n\tUseVehicleNumber, \n\tYearsExperience, \n\tYearLicensed, \n\tCA_DriverId1, \n\tWB_CA_DriverId, \n\tSessionId8, \n\tDateOfBirth1, \n\tName1, \n\tMiddleInitial, \n\tLastName1, \n\tGender1, \n\tMaritalStatus1, \n\tExcludeDriver, \n\tWatchDriver, \n\tPermanentDriver, \n\tSelectForMVR, \n\tTaskFlagCAMVRViolationCategoryNotFound, \n\tTaskFlagCAMVRViolationCategoryNotFoundEARS, \n\tMVRDate, \n\tMVRStatus, \n\tTransactionId, \n\tWB_TransactionId, \n\tSessionId9, \n\tProRataFactor, \n\tCreatedUserContext, \n\tQuoteActionUserClassification, \n\tQuoteActionTimeStamp, \n\tQuoteActionUserName, \n\tQuoteActionStatus, \n\tVerifiedDate, \n\tDataFix, \n\tDataFixDate, \n\tDataFixType, \n\tHistoryIDOriginal, \n\tOriginalID, \n\tOnsetBy\n\tFROM SQ_ChangedPolicyParties\n\tORDER BY PolicyNumber ASC, PartyXmlId ASC, SessionId ASC\n),\nEXP_ChangedPolicyParties AS (\n\tSELECT\n\tPartyId,\n\tContactId,\n\tSessionId,\n\tType,\n\tPhoneNumber,\n\tPhoneExtension,\n\tEmail,\n\tLocationId,\n\tSessionId1,\n\tLocationXmlId,\n\tDeleted,\n\tDescription,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tObjectId,\n\tObjectName,\n\tLocationId1,\n\tLocationAssociationId,\n\tSessionId2,\n\tLocationXmlId1,\n\tLocationAssociationType,\n\tPartyId1,\n\tSessionId3,\n\tPartyXmlId,\n\tType1,\n\tOtherType,\n\tName,\n\tDateOfBirth,\n\tGender,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tMaritalStatus,\n\tTitle,\n\tReference,\n\tContactName,\n\tObjectId1,\n\tObjectName1,\n\tPartyId2,\n\tPartyAssociationId,\n\tSessionId4,\n\tPartyXmlId1,\n\tPartyAssociationType,\n\tPartyAssociationStatus,\n\tPartyReference,\n\tDescription1,\n\tEntityType,\n\tEntityOtherType,\n\tFederalEmployeeIDNumber,\n\tCompanyNumber,\n\tLicensePlateNumber,\n\tPolicyId,\n\tSessionId5,\n\tId,\n\tEffectiveDate,\n\tExpirationDate,\n\tLineOfBusiness,\n\tTerm,\n\tPrimaryRatingState,\n\tProduct,\n\tHonorRates,\n\tAuditPeriod,\n\tSICCode,\n\tSICCodeDesc,\n\tNAICSCode,\n\tNAICSCodeDesc,\n\tQuoteNumber,\n\tTermFactor,\n\tCancellationDate,\n\tDescription2,\n\tPolicyNumber,\n\tStatus,\n\tTransactionDate,\n\tTransactionDateTime,\n\tPreviousPolicyNumber,\n\tInceptionDate,\n\tPolicyTermID,\n\tAccountID,\n\tTaxesSurcharges,\n\tAuditable,\n\tSessionId6,\n\tExampleQuoteId,\n\tUserName,\n\tCreateDateTime,\n\tPurpose,\n\tNonNewBusinessTransactionCount,\n\t-- *INF*: IIF(ISNULL(LastName), Name, LastName)\n\tIFF(LastName IS NULL, Name, LastName) AS out_LastOrCompanyName,\n\t0 AS out_PolicyVersion,\n\t-- *INF*: SYSTIMESTAMP()\n\tCURRENT_TIMESTAMP() AS out_ChangedDate,\n\t-- *INF*: :LKP.LKP_PROCESSSTATUS('Request')\n\tLKP_PROCESSSTATUS__Request.SupProcessStatusId AS out_RequestStatusId,\n\t-- *INF*: :LKP.LKP_PROCESSSTATUS('Complete')\n\tLKP_PROCESSSTATUS__Complete.SupProcessStatusId AS out_CompleteStatusId,\n\t-- *INF*: IIF(NonNewBusinessTransactionCount = 0, 'Y', 'N')\n\tIFF(NonNewBusinessTransactionCount = 0, 'Y', 'N') AS out_PolicySessionIsNewBusiness,\n\tLineId,\n\tCA_DriverId,\n\tSessionId7,\n\tId1,\n\tBroadenNoFault,\n\tDateOfHire,\n\tDriversLicenseNumber,\n\tJobTitle,\n\tPercentageOfUse,\n\tStateLicensed,\n\tUseVehicleNumber,\n\tYearsExperience,\n\tYearLicensed,\n\tCA_DriverId1,\n\tWB_CA_DriverId,\n\tSessionId8,\n\tDateOfBirth1,\n\tName1,\n\tMiddleInitial,\n\tLastName1,\n\tGender1,\n\tMaritalStatus1,\n\tExcludeDriver,\n\tWatchDriver,\n\tPermanentDriver,\n\tSelectForMVR,\n\tTaskFlagCAMVRViolationCategoryNotFound,\n\tTaskFlagCAMVRViolationCategoryNotFoundEARS,\n\tMVRDate,\n\tMVRStatus\n\tFROM SRTTRANS\n\tLEFT JOIN LKP_PROCESSSTATUS LKP_PROCESSSTATUS__Request\n\tON LKP_PROCESSSTATUS__Request.ProcessStatus = 'Request'\n\n\tLEFT JOIN LKP_PROCESSSTATUS LKP_PROCESSSTATUS__Complete\n\tON LKP_PROCESSSTATUS__Complete.ProcessStatus = 'Complete'\n\n),\nAGG_GroupByPolicyNumber AS (\n\tSELECT\n\tPolicyNumber,\n\tPartyId,\n\tContactId,\n\tSessionId,\n\tType,\n\tPhoneNumber,\n\tPhoneExtension,\n\tEmail,\n\tLocationId,\n\tSessionId1,\n\tLocationXmlId,\n\tDeleted,\n\tDescription,\n\tAddress1,\n\tAddress2,\n\tCity,\n\tCounty,\n\tStateProv,\n\tPostalCode,\n\tCountry,\n\tObjectId,\n\tObjectName,\n\tLocationId1,\n\tLocationAssociationId,\n\tSessionId2,\n\tLocationXmlId1,\n\tLocationAssociationType,\n\tPartyId1,\n\tSessionId3,\n\tPartyXmlId,\n\tType1,\n\tOtherType,\n\tName,\n\tDateOfBirth,\n\tGender,\n\tFirstName,\n\tLastName,\n\tMiddleName,\n\tMaritalStatus,\n\tTitle,\n\tReference,\n\tContactName,\n\tObjectId1,\n\tObjectName1,\n\tPartyId2,\n\tPartyAssociationId,\n\tSessionId4,\n\tPartyXmlId1,\n\tPartyAssociationType,\n\tPartyAssociationStatus,\n\tPartyReference,\n\tDescription1,\n\tEntityType,\n\tEntityOtherType,\n\tFederalEmployeeIDNumber,\n\tCompanyNumber,\n\tLicensePlateNumber,\n\tPolicyId,\n\tSessionId5,\n\tId,\n\tEffectiveDate,\n\tExpirationDate,\n\tLineOfBusiness,\n\tTerm,\n\tPrimaryRatingState,\n\tProduct,\n\tHonorRates,\n\tAuditPeriod,\n\tSICCode,\n\tSICCodeDesc,\n\tNAICSCode,\n\tNAICSCodeDesc,\n\tQuoteNumber,\n\tTermFactor,\n\tCancellationDate,\n\tDescription2,\n\tStatus,\n\tTransactionDate,\n\tTransactionDateTime,\n\tPreviousPolicyNumber,\n\tInceptionDate,\n\tPolicyTermID,\n\tAccountID,\n\tTaxesSurcharges,\n\tAuditable,\n\tSessionId6,\n\tExampleQuoteId,\n\tUserName,\n\tCreateDateTime,\n\tPurpose,\n\tout_LastOrCompanyName,\n\tout_PolicyVersion,\n\tout_ChangedDate,\n\tout_RequestStatusId,\n\tout_CompleteStatusId,\n\tout_PolicySessionIsNewBusiness,\n\tLineId,\n\tCA_DriverId,\n\tSessionId7,\n\tId1,\n\tBroadenNoFault,\n\tDateOfHire,\n\tDriversLicenseNumber,\n\tJobTitle,\n\tPercentageOfUse,\n\tStateLicensed,\n\tUseVehicleNumber,\n\tYearsExperience,\n\tYearLicensed,\n\tCA_DriverId1,\n\tWB_CA_DriverId,\n\tSessionId8,\n\tDateOfBirth1,\n\tName1,\n\tMiddleInitial,\n\tLastName1,\n\tGender1,\n\tMaritalStatus1,\n\tExcludeDriver,\n\tWatchDriver,\n\tPermanentDriver,\n\tSelectForMVR,\n\tTaskFlagCAMVRViolationCategoryNotFound,\n\tTaskFlagCAMVRViolationCategoryNotFoundEARS,\n\tMVRDate,\n\tMVRStatus\n\tFROM EXP_ChangedPolicyParties\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber, PartyXmlId ORDER BY NULL) = 1\n),\nLKP_Target_DCTClaimClientStage AS (\n\tSELECT\n\tDCTClaimClientStageId,\n\tFirstName,\n\tLastName,\n\tStreet1,\n\tStreet2,\n\tCity,\n\tStateCode,\n\tZipCode,\n\tWorkPhoneNumber,\n\tBirthDate,\n\tPolicyNumber,\n\tAgreementPartyId\n\tFROM (\n\t\tSELECT \n\t\t\tDCTClaimClientStageId,\n\t\t\tFirstName,\n\t\t\tLastName,\n\t\t\tStreet1,\n\t\t\tStreet2,\n\t\t\tCity,\n\t\t\tStateCode,\n\t\t\tZipCode,\n\t\t\tWorkPhoneNumber,\n\t\t\tBirthDate,\n\t\t\tPolicyNumber,\n\t\t\tAgreementPartyId\n\t\tFROM DCTClaimClientStage\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyNumber,AgreementPartyId ORDER BY DCTClaimClientStageId) = 1\n),\nRTR_InsertOrUpdateToTarget AS (\n\tSELECT\n\tLKP_Target_DCTClaimClientStage.DCTClaimClientStageId,\n\tAGG_GroupByPolicyNumber.PolicyNumber AS in_PolicyNumber,\n\tAGG_GroupByPolicyNumber.PartyXmlId AS in_PartyXmlId,\n\tAGG_GroupByPolicyNumber.FirstName AS NewFirstName,\n\tAGG_GroupByPolicyNumber.out_LastOrCompanyName AS NewLastOrCompanyName,\n\tAGG_GroupByPolicyNumber.Address1 AS NewAddress1,\n\tAGG_GroupByPolicyNumber.Address2 AS NewAddress2,\n\tAGG_GroupByPolicyNumber.City AS NewCity,\n\tAGG_GroupByPolicyNumber.StateProv AS NewStateProv,\n\tAGG_GroupByPolicyNumber.PostalCode AS NewPostalCode,\n\tAGG_GroupByPolicyNumber.PhoneNumber AS NewPhoneNumber,\n\tAGG_GroupByPolicyNumber.DateOfBirth AS NewDateOfBirth,\n\tAGG_GroupByPolicyNumber.out_PolicyVersion,\n\tAGG_GroupByPolicyNumber.out_ChangedDate,\n\tAGG_GroupByPolicyNumber.out_RequestStatusId,\n\tAGG_GroupByPolicyNumber.out_CompleteStatusId,\n\tAGG_GroupByPolicyNumber.out_PolicySessionIsNewBusiness,\n\tLKP_Target_DCTClaimClientStage.FirstName AS OldFirstName,\n\tLKP_Target_DCTClaimClientStage.LastName AS OldLastOrCompanyName,\n\tLKP_Target_DCTClaimClientStage.Street1 AS OldAddress1,\n\tLKP_Target_DCTClaimClientStage.Street2 AS OldAddress2,\n\tLKP_Target_DCTClaimClientStage.City AS OldCity,\n\tLKP_Target_DCTClaimClientStage.StateCode AS OldStateProv,\n\tLKP_Target_DCTClaimClientStage.ZipCode AS OldPostalCode,\n\tLKP_Target_DCTClaimClientStage.WorkPhoneNumber AS OldPhoneNumber,\n\tLKP_Target_DCTClaimClientStage.BirthDate AS OldDateOfBirth\n\tFROM AGG_GroupByPolicyNumber\n\tLEFT JOIN LKP_Target_DCTClaimClientStage\n\tON LKP_Target_DCTClaimClientStage.PolicyNumber = AGG_GroupByPolicyNumber.PolicyNumber AND LKP_Target_DCTClaimClientStage.AgreementPartyId = AGG_GroupByPolicyNumber.PartyXmlId\n),\nRTR_InsertOrUpdateToTarget_Insert_NewBusiness AS (SELECT * FROM RTR_InsertOrUpdateToTarget WHERE ISNULL(DCTClaimClientStageId) AND out_PolicySessionIsNewBusiness = 'Y'),\nRTR_InsertOrUpdateToTarget_Update_PartyChanged AS (SELECT * FROM RTR_InsertOrUpdateToTarget WHERE NOT ISNULL(DCTClaimClientStageId) AND  (OldFirstName  != NewFirstName OR OldLastOrCompanyName != NewLastOrCompanyName OR OldAddress1 != NewAddress1 OR OldAddress2 != NewAddress2 OR OldCity != NewCity OR OldStateProv != NewStateProv OR OldPostalCode != NewPostalCode OR OldPhoneNumber != NewPhoneNumber OR OldDateOfBirth != NewDateOfBirth)),\nRTR_InsertOrUpdateToTarget_Insert_Endorsement AS (SELECT * FROM RTR_InsertOrUpdateToTarget WHERE ISNULL(DCTClaimClientStageId) AND out_PolicySessionIsNewBusiness  !=  'Y'),\nTGT_DCTClaimClientStage_InsertRequestStatus AS (\n\tINSERT INTO DCTClaimClientStage\n\t(CreatedDate, PolicyNumber, PolicyVersion, AgreementPartyId, FirstName, LastName, Street1, Street2, City, StateCode, ZipCode, WorkPhoneNumber, SupProcessStatusId, BirthDate)\n\tSELECT \n\tout_ChangedDate AS CREATEDDATE, \n\tin_PolicyNumber AS POLICYNUMBER, \n\tout_PolicyVersion AS POLICYVERSION, \n\tin_PartyXmlId AS AGREEMENTPARTYID, \n\tNewFirstName AS FIRSTNAME, \n\tNewLastOrCompanyName AS LASTNAME, \n\tNewAddress AS STREET1, \n\tNewAddress2 AS STREET2, \n\tNewCity AS CITY, \n\tNewStateProv AS STATECODE, \n\tNewPostalCode AS ZIPCODE, \n\tNewPhoneNumber AS WORKPHONENUMBER, \n\tout_CompleteStatusId AS SUPPROCESSSTATUSID, \n\tNewDateOfBirth AS BIRTHDATE\n\tFROM RTR_InsertOrUpdateToTarget_Insert_NewBusiness\n),\nUPD_Target AS (\n\tSELECT\n\tNewPhoneNumber AS PhoneNumber3, \n\tNewAddress1 AS Address13, \n\tNewAddress2 AS Address23, \n\tNewCity AS City3, \n\tNewStateProv AS StateProv3, \n\tNewPostalCode AS PostalCode3, \n\tNewDateOfBirth AS DateOfBirth3, \n\tNewFirstName AS FirstName3, \n\tNewLastOrCompanyName AS out_LastOrCompanyName3, \n\tout_PolicyVersion AS out_PolicyVersion3, \n\tout_ChangedDate AS out_ChangedDate3, \n\tout_RequestStatusId AS out_RequestStatusId3, \n\tDCTClaimClientStageId AS DCTClaimClientStageId3, \n\tin_PolicyNumber AS in_PolicyNumber3, \n\tin_PartyXmlId AS in_PartyXmlId3\n\tFROM RTR_InsertOrUpdateToTarget_Update_PartyChanged\n),\nTGT_DCTClaimClientStage_Update AS (\n\tMERGE INTO DCTClaimClientStage AS T\n\tUSING UPD_Target AS S\n\tON T.DCTClaimClientStageId = S.DCTClaimClientStageId3\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.ModifiedDate = S.out_ChangedDate3, T.PolicyNumber = S.in_PolicyNumber3, T.PolicyVersion = S.out_PolicyVersion3, T.AgreementPartyId = S.in_PartyXmlId3, T.FirstName = S.FirstName3, T.LastName = S.out_LastOrCompanyName3, T.Street1 = S.Address13, T.Street2 = S.Address23, T.City = S.City3, T.StateCode = S.StateProv3, T.ZipCode = S.PostalCode3, T.WorkPhoneNumber = S.PhoneNumber3, T.SupProcessStatusId = S.out_RequestStatusId3, T.BirthDate = S.DateOfBirth3\n),\nTGT_DCTClaimClientStage_InsertCompleteStatus AS (\n\tINSERT INTO DCTClaimClientStage\n\t(CreatedDate, PolicyNumber, PolicyVersion, AgreementPartyId, FirstName, LastName, Street1, Street2, City, StateCode, ZipCode, WorkPhoneNumber, SupProcessStatusId, BirthDate)\n\tSELECT \n\tout_ChangedDate AS CREATEDDATE, \n\tin_PolicyNumber AS POLICYNUMBER, \n\tout_PolicyVersion AS POLICYVERSION, \n\tin_PartyXmlId AS AGREEMENTPARTYID, \n\tNewFirstName AS FIRSTNAME, \n\tNewLastOrCompanyName AS LASTNAME, \n\tNewAddress1 AS STREET1, \n\tNewAddress2 AS STREET2, \n\tNewCity AS CITY, \n\tNewStateProv AS STATECODE, \n\tNewPostalCode AS ZIPCODE, \n\tNewPhoneNumber AS WORKPHONENUMBER, \n\tout_RequestStatusId AS SUPPROCESSSTATUSID, \n\tNewDateOfBirth AS BIRTHDATE\n\tFROM RTR_InsertOrUpdateToTarget_Insert_Endorsement\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TIME_OFFSET": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "DataFeed -Informatica/ClaimDataServices/"
        },
        "annotations": []
    }
}