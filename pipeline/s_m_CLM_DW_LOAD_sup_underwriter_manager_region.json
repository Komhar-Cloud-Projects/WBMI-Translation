{
    "name": "s_m_CLM_DW_LOAD_sup_underwriter_manager_region",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_sup_underwriter_manager_region",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_gtam_wb_region_stage AS (\n\tSELECT \r\n\t                a.agency_code    as agency_code             \r\n\t               ,a.bus_unit_ind as bus_unit_ind          \r\n\t               ,a.uw_mgr_name_routing_station          \r\n\t                 ,a.uw_mgr_region         \r\n\t  FROM  gtam_wb_region_stage a\n),\nEXP_Default_Values AS (\n\tSELECT\n\tagency_code,\n\t-- *INF*: SUBSTR(agency_code,1,2)\n\tSUBSTR(agency_code, 1, 2) AS v_agency_state,\n\t-- *INF*: iif(isnull(v_agency_state),' ',v_agency_state)\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(v_agency_state IS NULL, ' ', v_agency_state) AS agency_state_out,\n\t-- *INF*: SUBSTR(agency_code,3,3)\n\tSUBSTR(agency_code, 3, 3) AS v_agency_num,\n\t-- *INF*: iif(isnull(v_agency_num),'N/A ',v_agency_num)\r\n\t-- \r\n\t--  \n\tIFF(v_agency_num IS NULL, 'N/A ', v_agency_num) AS agency_num_out,\n\tbus_unit_ind,\n\t-- *INF*: iif(isnull(bus_unit_ind),' ',bus_unit_ind)\r\n\t-- \n\tIFF(bus_unit_ind IS NULL, ' ', bus_unit_ind) AS bus_unit_ind_out,\n\tuw_mgr_name_routing_station,\n\t-- *INF*: SUBSTR(uw_mgr_name_routing_station,28,3)\n\tSUBSTR(uw_mgr_name_routing_station, 28, 3) AS v_routing_station,\n\t-- *INF*: iif(isnull(v_routing_station),'N/A ',v_routing_station)\n\tIFF(v_routing_station IS NULL, 'N/A ', v_routing_station) AS routing_station_out,\n\t-- *INF*: SUBSTR(uw_mgr_name_routing_station,1,27)\n\tSUBSTR(uw_mgr_name_routing_station, 1, 27) AS v_uw_mgr,\n\t-- *INF*: iif(isnull(v_uw_mgr),'N/A ',v_uw_mgr)\n\tIFF(v_uw_mgr IS NULL, 'N/A ', v_uw_mgr) AS uw_mgr_out,\n\tuw_mgr_region,\n\t-- *INF*: iif(isnull(uw_mgr_region),'N/A',uw_mgr_region)\r\n\t-- \r\n\t-- \n\tIFF(uw_mgr_region IS NULL, 'N/A', uw_mgr_region) AS uw_mgr_region_out\n\tFROM SQ_gtam_wb_region_stage\n),\nLKP_underwriter_manager_region AS (\n\tSELECT\n\tsup_uw_mgr_region_id,\n\tagency_state,\n\tagency_num,\n\tbus_unit_ind,\n\trouting_station,\n\tuw_mgr,\n\tuw_mgr_region\n\tFROM (\n\t\tSELECT \r\n\t\t       a.sup_uw_mgr_region_id as sup_uw_mgr_region_id\r\n\t\t      ,a.agency_state as agency_state\r\n\t\t      ,a.agency_num as agency_num \r\n\t\t      ,a.bus_unit_ind as bus_unit_ind\r\n\t\t      ,a.routing_station as routing_station\r\n\t\t      ,a.uw_mgr as uw_mgr \r\n\t\t      ,a.uw_mgr_region as uw_mgr_region \r\n\t\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_underwriter_manager_region a\r\n\t\t  WHERE a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY agency_state,agency_num,bus_unit_ind ORDER BY sup_uw_mgr_region_id DESC) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tEXP_Default_Values.agency_state_out,\n\tEXP_Default_Values.agency_num_out,\n\tEXP_Default_Values.bus_unit_ind_out,\n\tLKP_underwriter_manager_region.sup_uw_mgr_region_id AS LKP_sup_uw_mgr_region_id,\n\tLKP_underwriter_manager_region.routing_station AS LKP_rounting_station,\n\tLKP_underwriter_manager_region.uw_mgr AS LKP_uw_mgr,\n\tLKP_underwriter_manager_region.uw_mgr_region AS LKP_uw_mgr_region,\n\tEXP_Default_Values.routing_station_out,\n\tEXP_Default_Values.uw_mgr_out,\n\tEXP_Default_Values.uw_mgr_region_out,\n\t-- *INF*: IIF(ISNULL(LKP_sup_uw_mgr_region_id), 'NEW', IIF(\r\n\t-- LTRIM(RTRIM(LKP_rounting_station)) != (LTRIM(RTRIM(routing_station_out)  )  ) \r\n\t-- OR\r\n\t-- LTRIM(RTRIM(LKP_uw_mgr_region)) != (LTRIM(RTRIM(uw_mgr_region_out)  )  ) \r\n\t-- OR\r\n\t-- LTRIM(RTRIM(LKP_uw_mgr)) != (LTRIM(RTRIM(uw_mgr_out)  )  ) \r\n\t-- \r\n\t--  , 'UPDATE', 'NOCHANGE'))\n\tIFF(LKP_sup_uw_mgr_region_id IS NULL, 'NEW', IFF(LTRIM(RTRIM(LKP_rounting_station)) != ( LTRIM(RTRIM(routing_station_out)) ) OR LTRIM(RTRIM(LKP_uw_mgr_region)) != ( LTRIM(RTRIM(uw_mgr_region_out)) ) OR LTRIM(RTRIM(LKP_uw_mgr)) != ( LTRIM(RTRIM(uw_mgr_out)) ), 'UPDATE', 'NOCHANGE')) AS V_changed_flag,\n\tV_changed_flag AS CHANGED_FLAG,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: iif(V_changed_flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(V_changed_flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tSYSDATE AS created_date,\n\tSYSDATE AS modified_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id\n\tFROM EXP_Default_Values\n\tLEFT JOIN LKP_underwriter_manager_region\n\tON LKP_underwriter_manager_region.agency_state = EXP_Default_Values.agency_state_out AND LKP_underwriter_manager_region.agency_num = EXP_Default_Values.agency_num_out AND LKP_underwriter_manager_region.bus_unit_ind = EXP_Default_Values.bus_unit_ind_out\n),\nFIL_sup_workers_comp_employer_type AS (\n\tSELECT\n\tagency_state_out, \n\tagency_num_out, \n\tbus_unit_ind_out, \n\trouting_station_out, \n\tuw_mgr_out, \n\tuw_mgr_region_out, \n\tCHANGED_FLAG, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tmodified_date, \n\tsource_sys_id\n\tFROM EXP_Detect_Changes\n\tWHERE CHANGED_FLAG = 'NEW' or CHANGED_FLAG = 'UPDATE'\n),\nsup_underwriter_manager_region_INS AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_underwriter_manager_region\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, agency_state, agency_num, bus_unit_ind, routing_station, uw_mgr, uw_mgr_region)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\tagency_state_out AS AGENCY_STATE, \n\tagency_num_out AS AGENCY_NUM, \n\tbus_unit_ind_out AS BUS_UNIT_IND, \n\trouting_station_out AS ROUTING_STATION, \n\tuw_mgr_out AS UW_MGR, \n\tuw_mgr_region_out AS UW_MGR_REGION\n\tFROM FIL_sup_workers_comp_employer_type\n),\nSQ_sup_underwriter_manager_region AS (\n\tSELECT\r\n\t     a.sup_uw_mgr_region_id\r\n\t  ,a.eff_from_date\r\n\t     ,a.eff_to_date \r\n\t     ,a.agency_state\r\n\t      ,a.agency_num\r\n\t      ,a.bus_unit_ind   \r\n\t  FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_underwriter_manager_region a\r\n\t WHERE EXISTS ( SELECT 1\r\n\t        FROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_underwriter_manager_region b\r\n\t\t\tWHERE source_sys_id= '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.agency_state = b.agency_state\r\n\t\t\tAND a.agency_num = b.agency_num\r\n\t\t\tAND a.bus_unit_ind= b.bus_unit_ind          \r\n\t GROUP BY b.agency_state,  \tb.agency_num, b.bus_unit_ind\r\n\t             HAVING COUNT(*) > 1)\r\n\tORDER BY a.agency_state,  \ta.agency_num, a.bus_unit_ind  , a.eff_from_date  DESC\n),\nEXP_Lag_Eff_From_Date1 AS (\n\tSELECT\n\tsup_uw_mgr_region_id,\n\tagency_state,\n\tagency_num,\n\tbus_unit_ind,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tagency_state= v_prev_row_agency_state\r\n\t-- AND agency_num = v_prev_row_agency_num\r\n\t-- AND bus_unit_ind = v_prev_row_bus_unit_ind\r\n\t-- , ADD_TO_DATE(v_prev_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\r\n\t-- \t\n\tDECODE(TRUE,\n\t\tagency_state = v_prev_row_agency_state AND agency_num = v_prev_row_agency_num AND bus_unit_ind = v_prev_row_bus_unit_ind, ADD_TO_DATE(v_prev_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tagency_state AS v_prev_row_agency_state,\n\tagency_num AS v_prev_row_agency_num,\n\tbus_unit_ind AS v_prev_row_bus_unit_ind,\n\teff_from_date AS v_prev_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tSYSDATE AS modified_date\n\tFROM SQ_sup_underwriter_manager_region\n),\nFIL_First_Row_In_AK_Group AS (\n\tSELECT\n\tsup_uw_mgr_region_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Lag_Eff_From_Date1\n\tWHERE orig_eff_to_date !=eff_to_date\n),\nUPD_sup_underwriter_manager_region AS (\n\tSELECT\n\tsup_uw_mgr_region_id, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_First_Row_In_AK_Group\n),\nsup_underwriter_manager_region_UPD AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_underwriter_manager_region AS T\n\tUSING UPD_sup_underwriter_manager_region AS S\n\tON T.sup_uw_mgr_region_id = S.sup_uw_mgr_region_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246507"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905524"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604407"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:23:26"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:28:04"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}