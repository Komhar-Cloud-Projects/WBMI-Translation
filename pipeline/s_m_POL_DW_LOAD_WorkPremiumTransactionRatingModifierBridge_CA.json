{
    "name": "s_m_POL_DW_LOAD_WorkPremiumTransactionRatingModifierBridge_CA",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkPremiumTransactionRatingModifierBr_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_arch_pif_12_stage_state AS (\n\tSELECT\n\tModifiers,\n\tPolicyKey,\n\tuse_location,\n\tdescription_sequence,\n\tStateCode\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(description_line_1))+LTRIM(RTRIM(description_line_2))+LTRIM(RTRIM(description_line_3))+LTRIM(RTRIM(description_line_4)) as Modifiers,\r\n\t\tRTRIM(pif_symbol)+pif_policy_number+pif_module as PolicyKey,\r\n\t\tLTRIM(RTRIM(use_location)) as use_location,\r\n\t\tdescription_sequence as description_sequence,\r\n\t\tLEFT( LTRIM(RTRIM(description_line_1)),2) as StateCode\r\n\t\tFROM arch_pif_12_stage a\r\n\t\tjoin (\r\n\t\tselect distinct left(PremiumTransactionKey,12) PolicyKey from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction\r\n\t\twhere CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}') b\r\n\t\ton RTRIM(a.pif_symbol)+a.pif_policy_number+a.pif_module=b.PolicyKey\r\n\t\tWHERE arch_pif_12_stage_id IN\r\n\t\t(SELECT MAX(arch_pif_12_stage_id)\r\n\t\tFROM arch_pif_12_stage\r\n\t\tWHERE use_code='CF'\r\n\t\tAND description_sequence in ('C','L','O')\r\n\t\tAND LEFT( LTRIM(RTRIM(description_line_1)),2)<>'99'\r\n\t\tGROUP BY RTRIM(pif_symbol)+pif_policy_number+pif_module,\r\n\t\tLTRIM(RTRIM(use_location)),\r\n\t\tdescription_sequence)\r\n\t\tORDER BY RTRIM(pif_symbol)+pif_policy_number+pif_module,\r\n\t\tLTRIM(RTRIM(use_location)),\r\n\t\tdescription_sequence\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,use_location,description_sequence,StateCode ORDER BY Modifiers) = 1\n),\nLKP_arch_pif_12_stage AS (\n\tSELECT\n\tModifiers,\n\tPolicyKey,\n\tuse_location,\n\tdescription_sequence\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(description_line_1))+LTRIM(RTRIM(description_line_2))+LTRIM(RTRIM(description_line_3))+LTRIM(RTRIM(description_line_4)) as Modifiers,\r\n\t\tRTRIM(pif_symbol)+pif_policy_number+pif_module as PolicyKey,\r\n\t\tLTRIM(RTRIM(use_location)) as use_location,\r\n\t\tdescription_sequence as description_sequence\r\n\t\tFROM arch_pif_12_stage a\r\n\t\tjoin (\r\n\t\tselect distinct left(PremiumTransactionKey,12) PolicyKey from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction\r\n\t\twhere CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}') b\r\n\t\ton RTRIM(a.pif_symbol)+a.pif_policy_number+a.pif_module=b.PolicyKey\r\n\t\tWHERE arch_pif_12_stage_id IN\r\n\t\t(SELECT MAX(arch_pif_12_stage_id)\r\n\t\tFROM arch_pif_12_stage\r\n\t\tWHERE use_code='CF'\r\n\t\tAND description_sequence in ('C','L','O')\r\n\t\tAND LEFT( LTRIM(RTRIM(description_line_1)),2)='99'\r\n\t\tGROUP BY RTRIM(pif_symbol)+pif_policy_number+pif_module,\r\n\t\tLTRIM(RTRIM(use_location)),\r\n\t\tdescription_sequence)\r\n\t\tORDER BY RTRIM(pif_symbol)+pif_policy_number+pif_module,\r\n\t\tLTRIM(RTRIM(use_location)),\r\n\t\tdescription_sequence\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,use_location,description_sequence ORDER BY Modifiers) = 1\n),\nSQ_PMS AS (\n\tselect P.pol_key,SC.RiskUnit,PC.TypeBureauCode,RL.StateProvinceCode,\r\n\tPT.PremiumTransactionAKID,PT.PremiumTransactionEnteredDate,PT.PremiumTransactionEffectiveDate,BS.BureauCode8,BS.BureauCode9\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\tJOIN\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode BS\r\n\tON\r\n\tBS.PremiumTransactionAKID=PT.PremiumTransactionAKID\r\n\tAND BS.CurrentSnapshotFlag=1\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\tON\r\n\tPT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID \r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\tON\r\n\tSC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\tand PC.TypeBureauCode IN ('AL','AN','AP') AND PC.InsuranceLine IN ('CA','N/A')\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\tON\r\n\tRL.RiskLocationAKId=PC.RiskLocationAKId\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\tON\r\n\tRL.PolicyAKID = P.pol_ak_id AND P.crrnt_snpsht_flag = 1\r\n\tWHERE PT.CurrentSnapshotFlag=1\r\n\tAND PT.SourceSystemID = 'PMS'\r\n\tAND PT.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\tAND PT.ReasonAmendedCode not in ('COL','CWO','Claw Back')\r\n\tAND PT.PremiumType = 'D'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Modifiers AS (\n\tSELECT\n\tpol_key AS i_PolicyKey,\n\tRiskUnit AS i_RiskUnit,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tStateProvinceCode AS i_StateProvinceCode,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tPremiumTransactionEnteredDate AS i_PremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tBureauCode8 AS i_BureauCode8,\n\tBureauCode9 AS i_BureauCode9,\n\t-- *INF*: IIF(i_RiskUnit!='N/A',SUBSTR(i_RiskUnit,1,3),'')\n\tIFF(i_RiskUnit != 'N/A',\n\t\tSUBSTR(i_RiskUnit, 1, 3\n\t\t),\n\t\t''\n\t) AS v_RiskUnit,\n\t-- *INF*: IIF(i_TypeBureauCode='AP','C','L')\n\tIFF(i_TypeBureauCode = 'AP',\n\t\t'C',\n\t\t'L'\n\t) AS v_DescriptionSequence,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- i_BureauCode8='100' AND IN(i_TypeBureauCode,'AL','AP')=1,0,\r\n\t-- i_BureauCode9='100' AND i_TypeBureauCode='AN',0,\r\n\t-- 1)\n\tDECODE(TRUE,\n\t\ti_BureauCode8 = '100' \n\t\tAND i_TypeBureauCode IN ('AL','AP') = 1, 0,\n\t\ti_BureauCode9 = '100' \n\t\tAND i_TypeBureauCode = 'AN', 0,\n\t\t1\n\t) AS v_ModifiedTransactionFlag,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ModifiedTransactionFlag=0,'1',\r\n\t-- :LKP.LKP_ARCH_PIF_12_STAGE_STATE(i_PolicyKey,v_RiskUnit,v_DescriptionSequence,i_StateProvinceCode))\n\tDECODE(TRUE,\n\t\tv_ModifiedTransactionFlag = 0, '1',\n\t\tLKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode.Modifiers\n\t) AS v_Modifier_State,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier_State),v_Modifier_State,:LKP.LKP_ARCH_PIF_12_STAGE_STATE(i_PolicyKey,'000',v_DescriptionSequence,i_StateProvinceCode))\n\tIFF(v_Modifier_State IS NOT NULL,\n\t\tv_Modifier_State,\n\t\tLKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode.Modifiers\n\t) AS v_Modifier_State_Default,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier_State_Default),v_Modifier_State_Default,:LKP.LKP_ARCH_PIF_12_STAGE(i_PolicyKey,v_RiskUnit,v_DescriptionSequence))\n\tIFF(v_Modifier_State_Default IS NOT NULL,\n\t\tv_Modifier_State_Default,\n\t\tLKP_ARCH_PIF_12_STAGE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence.Modifiers\n\t) AS v_Modifier,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier),v_Modifier,:LKP.LKP_ARCH_PIF_12_STAGE(i_PolicyKey,'000',v_DescriptionSequence))\n\tIFF(v_Modifier IS NOT NULL,\n\t\tv_Modifier,\n\t\tLKP_ARCH_PIF_12_STAGE_i_PolicyKey_000_v_DescriptionSequence.Modifiers\n\t) AS v_Modifier_Default,\n\t-- *INF*: IIF(REG_MATCH(v_Modifier_Default,'.*O=[^,]*,.*'),LTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default,'(.*)O=([^,]*),(.*)',2))),'1')\n\tIFF(REGEXP_LIKE(v_Modifier_Default, '.*O=[^,]*,.*'\n\t\t),\n\t\tLTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default, '(.*)O=([^,]*),(.*)', 2\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'1'\n\t) AS v_O_Factor,\n\t-- *INF*: IIF(REG_MATCH(v_Modifier_Default,'.*E=[^,]*,.*'),LTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default,'(.*)E=([^,]*),(.*)',2))),'1')\n\tIFF(REGEXP_LIKE(v_Modifier_Default, '.*E=[^,]*,.*'\n\t\t),\n\t\tLTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default, '(.*)E=([^,]*),(.*)', 2\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'1'\n\t) AS v_E_Factor,\n\t-- *INF*: IIF(REG_MATCH(v_Modifier_Default,'.*P=[^,]*,.*'),LTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default,'(.*)P=([^,]*),(.*)',2))),'1')\n\tIFF(REGEXP_LIKE(v_Modifier_Default, '.*P=[^,]*,.*'\n\t\t),\n\t\tLTRIM(RTRIM(REG_EXTRACT(v_Modifier_Default, '(.*)P=([^,]*),(.*)', 2\n\t\t\t\t)\n\t\t\t)\n\t\t),\n\t\t'1'\n\t) AS v_P_Factor,\n\t-- *INF*: IIF(IS_NUMBER(v_O_Factor),TO_DECIMAL(v_O_Factor),1)\n\tIFF(REGEXP_LIKE(v_O_Factor, '^[0-9]+$'),\n\t\tCAST(v_O_Factor AS FLOAT),\n\t\t1\n\t) AS v_OtherModifiedFactor,\n\t-- *INF*: IIF(IS_NUMBER(v_P_Factor),TO_DECIMAL(v_P_Factor),1)\n\tIFF(REGEXP_LIKE(v_P_Factor, '^[0-9]+$'),\n\t\tCAST(v_P_Factor AS FLOAT),\n\t\t1\n\t) AS v_ScheduleModifiedFactor,\n\t-- *INF*: IIF(IS_NUMBER(v_E_Factor),TO_DECIMAL(v_E_Factor),1)\n\tIFF(REGEXP_LIKE(v_E_Factor, '^[0-9]+$'),\n\t\tCAST(v_E_Factor AS FLOAT),\n\t\t1\n\t) AS v_ExperienceModifiedFactor,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- v_ModifiedTransactionFlag=0,'Default',\r\n\t-- NOT ISNULL(v_Modifier_State),i_PolicyKey||v_RiskUnit||'&CA&'||v_DescriptionSequence||'&'||i_StateProvinceCode,\r\n\t-- NOT ISNULL(v_Modifier_State_Default),i_PolicyKey||'&CA&'||'000'||'&'||v_DescriptionSequence||'&'||i_StateProvinceCode,\r\n\t-- NOT ISNULL(v_Modifier),i_PolicyKey||'&CA&'||v_RiskUnit||'&'||v_DescriptionSequence,\r\n\t-- i_PolicyKey||'&CA&'||'000'||'&'||v_DescriptionSequence)\n\tDECODE(TRUE,\n\t\tv_ModifiedTransactionFlag = 0, 'Default',\n\t\tv_Modifier_State IS NOT NULL, i_PolicyKey || v_RiskUnit || '&CA&' || v_DescriptionSequence || '&' || i_StateProvinceCode,\n\t\tv_Modifier_State_Default IS NOT NULL, i_PolicyKey || '&CA&' || '000' || '&' || v_DescriptionSequence || '&' || i_StateProvinceCode,\n\t\tv_Modifier IS NOT NULL, i_PolicyKey || '&CA&' || v_RiskUnit || '&' || v_DescriptionSequence,\n\t\ti_PolicyKey || '&CA&' || '000' || '&' || v_DescriptionSequence\n\t) AS v_WorkRatingModifierKey,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionAKID,\n\t-- *INF*: IIF(v_ModifiedTransactionFlag=0,'Default',MD5(v_WorkRatingModifierKey))\n\tIFF(v_ModifiedTransactionFlag = 0,\n\t\t'Default',\n\t\tMD5(v_WorkRatingModifierKey\n\t\t)\n\t) AS o_WorkRatingModifierHashKey,\n\tv_WorkRatingModifierKey AS o_WorkRatingModifierKey,\n\t-- *INF*: IIF(v_OtherModifiedFactor>0,v_OtherModifiedFactor,1)\n\tIFF(v_OtherModifiedFactor > 0,\n\t\tv_OtherModifiedFactor,\n\t\t1\n\t) AS o_OtherModifiedFactor,\n\t-- *INF*: IIF(v_ScheduleModifiedFactor>0,v_ScheduleModifiedFactor,1)\n\tIFF(v_ScheduleModifiedFactor > 0,\n\t\tv_ScheduleModifiedFactor,\n\t\t1\n\t) AS o_ScheduleModifiedFactor,\n\t-- *INF*: IIF(v_ExperienceModifiedFactor>0,v_ExperienceModifiedFactor,1)\n\tIFF(v_ExperienceModifiedFactor > 0,\n\t\tv_ExperienceModifiedFactor,\n\t\t1\n\t) AS o_ExperienceModifiedFactor,\n\t-- *INF*: IIF(v_ModifiedTransactionFlag=0,TO_DATE('18000101','YYYYMMDD'),ADD_TO_DATE(TRUNC(GREATEST(i_PremiumTransactionEnteredDate,PremiumTransactionEffectiveDate),'DD'),'SS',86399))\n\tIFF(v_ModifiedTransactionFlag = 0,\n\t\tTO_DATE('18000101', 'YYYYMMDD'\n\t\t),\n\t\tDATEADD(SECOND,86399,CAST(TRUNC(GREATEST(i_PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate\n\t\t), 'DAY') AS TIMESTAMP_NTZ(0)))\n\t) AS o_PremiumTransactionBookedDate\n\tFROM SQ_PMS\n\tLEFT JOIN LKP_ARCH_PIF_12_STAGE_STATE LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode\n\tON LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode.PolicyKey = i_PolicyKey\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode.use_location = v_RiskUnit\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode.description_sequence = v_DescriptionSequence\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence_i_StateProvinceCode.StateCode = i_StateProvinceCode\n\n\tLEFT JOIN LKP_ARCH_PIF_12_STAGE_STATE LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode\n\tON LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode.PolicyKey = i_PolicyKey\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode.use_location = '000'\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode.description_sequence = v_DescriptionSequence\n\tAND LKP_ARCH_PIF_12_STAGE_STATE_i_PolicyKey_000_v_DescriptionSequence_i_StateProvinceCode.StateCode = i_StateProvinceCode\n\n\tLEFT JOIN LKP_ARCH_PIF_12_STAGE LKP_ARCH_PIF_12_STAGE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence\n\tON LKP_ARCH_PIF_12_STAGE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence.PolicyKey = i_PolicyKey\n\tAND LKP_ARCH_PIF_12_STAGE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence.use_location = v_RiskUnit\n\tAND LKP_ARCH_PIF_12_STAGE_i_PolicyKey_v_RiskUnit_v_DescriptionSequence.description_sequence = v_DescriptionSequence\n\n\tLEFT JOIN LKP_ARCH_PIF_12_STAGE LKP_ARCH_PIF_12_STAGE_i_PolicyKey_000_v_DescriptionSequence\n\tON LKP_ARCH_PIF_12_STAGE_i_PolicyKey_000_v_DescriptionSequence.PolicyKey = i_PolicyKey\n\tAND LKP_ARCH_PIF_12_STAGE_i_PolicyKey_000_v_DescriptionSequence.use_location = '000'\n\tAND LKP_ARCH_PIF_12_STAGE_i_PolicyKey_000_v_DescriptionSequence.description_sequence = v_DescriptionSequence\n\n),\nSRTTRANS AS (\n\tSELECT\n\tPremiumTransactionEffectiveDate, \n\to_PremiumTransactionAKID AS PremiumTransactionAKID, \n\to_WorkRatingModifierHashKey AS WorkRatingModifierHashKey, \n\to_WorkRatingModifierKey AS WorkRatingModifierKey, \n\to_OtherModifiedFactor AS OtherModifiedFactor, \n\to_ScheduleModifiedFactor AS ScheduleModifiedFactor, \n\to_ExperienceModifiedFactor AS ExperienceModifiedFactor, \n\to_PremiumTransactionBookedDate AS PremiumTransactionBookedDate\n\tFROM EXP_Modifiers\n\tORDER BY WorkRatingModifierHashKey ASC\n),\nAGGTRANS AS (\n\tSELECT\n\tPremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tWorkRatingModifierHashKey,\n\tWorkRatingModifierKey,\n\tOtherModifiedFactor,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\tPremiumTransactionBookedDate AS i_PremiumTransactionBookedDate,\n\t-- *INF*: MIN(i_PremiumTransactionBookedDate)\n\tMIN(i_PremiumTransactionBookedDate\n\t) AS o_RunDate,\n\t-- *INF*: MIN(i_PremiumTransactionEffectiveDate)\n\tMIN(i_PremiumTransactionEffectiveDate\n\t) AS o_RatingModifierEffectiveDate\n\tFROM SRTTRANS\n\tGROUP BY WorkRatingModifierHashKey\n),\nLKP_WorkRatingModifierAKId AS (\n\tSELECT\n\tWorkRatingModifierAKId,\n\tWorkRatingModifierHashKey\n\tFROM (\n\t\tSELECT WorkRatingModifierAKId as WorkRatingModifierAKId, WorkRatingModifierHashKey as WorkRatingModifierHashKey FROM\r\n\t\t(SELECT WorkRatingModifierAKId, WorkRatingModifierHashKey FROM WorkRatingModifier a\r\n\t\twhere not exists (\r\n\t\tselect 1 from WorkRatingModifier b\r\n\t\twhere a.WorkRatingModifierAKId=b.WorkRatingModifierAKId\r\n\t\tand b.RunDate>a.RunDate)\r\n\t\tand SourceSystemId='PMS'\r\n\t\tand substring(WorkRatingModifierKey,charindex('&',WorkRatingModifierKey,1)+1,2)='CA'\r\n\t\tUNION ALL\r\n\t\tSELECT -1 as WorkRatingModifierAKId,'Default' AS WorkRatingModifierHashKey) A\r\n\t\torder by WorkRatingModifierHashKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkRatingModifierHashKey ORDER BY WorkRatingModifierAKId) = 1\n),\nSEQ_RatingModifier AS (\n\tCREATE SEQUENCE SEQ_RatingModifier\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXPTRANS AS (\n\tSELECT\n\tSEQ_RatingModifier.NEXTVAL AS i_NEXTVAL,\n\tLKP_WorkRatingModifierAKId.WorkRatingModifierAKId AS lkp_WorkRatingModifierAKId,\n\tAGGTRANS.WorkRatingModifierHashKey,\n\tAGGTRANS.WorkRatingModifierKey,\n\tAGGTRANS.OtherModifiedFactor,\n\tAGGTRANS.ScheduleModifiedFactor,\n\tAGGTRANS.ExperienceModifiedFactor,\n\tAGGTRANS.o_RunDate AS RunDate,\n\tAGGTRANS.o_RatingModifierEffectiveDate AS RatingModifierEffectiveDate,\n\t-- *INF*: IIF(ISNULL(lkp_WorkRatingModifierAKId),i_NEXTVAL,lkp_WorkRatingModifierAKId)\n\tIFF(lkp_WorkRatingModifierAKId IS NULL,\n\t\ti_NEXTVAL,\n\t\tlkp_WorkRatingModifierAKId\n\t) AS WorkRatingModifierAKId\n\tFROM AGGTRANS\n\tLEFT JOIN LKP_WorkRatingModifierAKId\n\tON LKP_WorkRatingModifierAKId.WorkRatingModifierHashKey = AGGTRANS.WorkRatingModifierHashKey\n),\nLKP_WorkRatingModifier AS (\n\tSELECT\n\tWorkRatingModifierHashKey,\n\tOtherModifiedFactor,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tselect WorkRatingModifierHashKey as WorkRatingModifierHashKey,\r\n\t\tEffectiveDate as EffectiveDate,\r\n\t\tExpirationDate as ExpirationDate,\r\n\t\tOtherModifiedFactor as OtherModifiedFactor,\r\n\t\tScheduleModifiedFactor as ScheduleModifiedFactor,\r\n\t\tExperienceModifiedFactor as ExperienceModifiedFactor from\r\n\t\t(select WorkRatingModifierHashKey as WorkRatingModifierHashKey,\r\n\t\tRunDate as EffectiveDate,\r\n\t\tISNULL(lead(RunDate,1) over (partition by WorkRatingModifierAKId order by RunDate),'2100-12-31 23:59:59') as ExpirationDate,\r\n\t\tOtherModifiedFactor as OtherModifiedFactor,\r\n\t\tScheduleModifiedFactor as ScheduleModifiedFactor,\r\n\t\tExperienceModifiedFactor as ExperienceModifiedFactor\r\n\t\tfrom WorkRatingModifier\r\n\t\twhere WorkRatingModifierAKId<>-1\r\n\t\tand SourceSystemId='PMS'\r\n\t\tand substring(WorkRatingModifierKey,charindex('&',WorkRatingModifierKey,1)+1,2)='CA'\r\n\t\tunion all\r\n\t\tselect 'Default' as WorkRatingModifierHashKey,\r\n\t\t'1800-1-1 00:00:00' as EffectiveDate,\r\n\t\t'2100-12-31 23:59:59' as ExpirationDate,\r\n\t\t1 as OtherModifiedFactor,\r\n\t\t1 as ScheduleModifiedFactor,\r\n\t\t1 as ExperienceModifiedFactor) a\r\n\t\torder by WorkRatingModifierHashKey,EffectiveDate ,ExpirationDate\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkRatingModifierHashKey,EffectiveDate,ExpirationDate ORDER BY WorkRatingModifierHashKey) = 1\n),\nEXP_RatingModifier AS (\n\tSELECT\n\tLKP_WorkRatingModifier.WorkRatingModifierHashKey AS lkp_WorkRatingModifierHashKey,\n\tLKP_WorkRatingModifier.OtherModifiedFactor AS lkp_OtherModifiedFactor,\n\tLKP_WorkRatingModifier.ScheduleModifiedFactor AS lkp_ScheduleModifiedFactor,\n\tLKP_WorkRatingModifier.ExperienceModifiedFactor AS lkp_ExperienceModifiedFactor,\n\tLKP_WorkRatingModifier.EffectiveDate AS lkp_EffectiveDate,\n\tEXPTRANS.RunDate AS i_RunDate,\n\tEXPTRANS.WorkRatingModifierAKId,\n\tEXPTRANS.WorkRatingModifierHashKey,\n\tEXPTRANS.WorkRatingModifierKey,\n\tEXPTRANS.RatingModifierEffectiveDate,\n\tEXPTRANS.OtherModifiedFactor,\n\tEXPTRANS.ScheduleModifiedFactor,\n\tEXPTRANS.ExperienceModifiedFactor,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_WorkRatingModifierHashKey),'NEW',\r\n\t-- lkp_EffectiveDate=i_RunDate,'NOCHANGE',\r\n\t-- lkp_OtherModifiedFactor!=OtherModifiedFactor,'NEW',\r\n\t-- lkp_ScheduleModifiedFactor!=ScheduleModifiedFactor,'NEW',\r\n\t-- lkp_ExperienceModifiedFactor!=ExperienceModifiedFactor,'NEW',\r\n\t-- 'NOCHANGE')\n\tDECODE(TRUE,\n\t\tlkp_WorkRatingModifierHashKey IS NULL, 'NEW',\n\t\tlkp_EffectiveDate = i_RunDate, 'NOCHANGE',\n\t\tlkp_OtherModifiedFactor != OtherModifiedFactor, 'NEW',\n\t\tlkp_ScheduleModifiedFactor != ScheduleModifiedFactor, 'NEW',\n\t\tlkp_ExperienceModifiedFactor != ExperienceModifiedFactor, 'NEW',\n\t\t'NOCHANGE'\n\t) AS v_ChangeFlag,\n\t-- *INF*: IIF(v_ChangeFlag='NEW',i_RunDate,lkp_EffectiveDate)\n\tIFF(v_ChangeFlag = 'NEW',\n\t\ti_RunDate,\n\t\tlkp_EffectiveDate\n\t) AS o_RunDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t-- *INF*: TO_DATE('01/01/1800 0','MM/DD/YYYY SSSSS')\n\tTO_DATE('01/01/1800 0', 'MM/DD/YYYY SSSSS'\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 86399','MM/DD/YYYY SSSSS')\n\tTO_DATE('12/31/2100 86399', 'MM/DD/YYYY SSSSS'\n\t) AS ExpirationDate,\n\t'1' AS CurrentSnapshotFlag\n\tFROM EXPTRANS\n\tLEFT JOIN LKP_WorkRatingModifier\n\tON LKP_WorkRatingModifier.WorkRatingModifierHashKey = EXPTRANS.WorkRatingModifierHashKey AND LKP_WorkRatingModifier.EffectiveDate <= EXPTRANS.RunDate AND LKP_WorkRatingModifier.ExpirationDate > EXPTRANS.RunDate\n),\nRTR_RatingModifier AS (\n\tSELECT\n\to_AuditID AS AuditId,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_RunDate AS RunDate,\n\tWorkRatingModifierAKId,\n\tWorkRatingModifierHashKey,\n\tWorkRatingModifierKey,\n\tRatingModifierEffectiveDate,\n\tOtherModifiedFactor,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\to_ChangeFlag AS ChangeFlag,\n\tEffectiveDate,\n\tExpirationDate,\n\tCurrentSnapshotFlag\n\tFROM EXP_RatingModifier\n),\nRTR_RatingModifier_INSERT AS (SELECT * FROM RTR_RatingModifier WHERE ChangeFlag='NEW'),\nWorkRatingModifier AS (\n\n\t------------ PRE SQL ----------\n\tIF NOT EXISTS (\r\n\tSELECT 1 FROM WorkRatingModifier\r\n\tWHERE WorkRatingModifierAKId=-1)\r\n\tINSERT INTO WorkRatingModifier\r\n\tSELECT 1 as CurrentSnapshotFlag,\r\n\t0 AS AuditId,\r\n\t'1800-01-01 00:00:00' AS EffectiveDate,\r\n\t'2100-12-31 23:59:59' AS ExpirationDate,\r\n\t'PMS' AS SourceSystemID,\r\n\tGETDATE() AS CreatedDate,\r\n\tGETDATE() AS ModifiedDate,\r\n\t'1800-1-1' AS RunDate,\r\n\t-1 AS WorkRatingModifierAKId,\r\n\t'Default' AS WorkRatingModifierHashKey,\r\n\t'Default' AS WorkRatingModifierKey,\r\n\t'1800-1-1' AS RatingModifierEffectiveDate,\r\n\t1 AS OtherModifiedFactor,\r\n\t1 AS ScheduleModifiedFactor,\r\n\t1 AS ExperienceModifiedFactor\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkRatingModifier\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, RunDate, WorkRatingModifierAKId, WorkRatingModifierHashKey, WorkRatingModifierKey, RatingModifierEffectiveDate, OtherModifiedFactor, ScheduleModifiedFactor, ExperienceModifiedFactor)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tRUNDATE, \n\tWORKRATINGMODIFIERAKID, \n\tWORKRATINGMODIFIERHASHKEY, \n\tWORKRATINGMODIFIERKEY, \n\tRATINGMODIFIEREFFECTIVEDATE, \n\tOTHERMODIFIEDFACTOR, \n\tSCHEDULEMODIFIEDFACTOR, \n\tEXPERIENCEMODIFIEDFACTOR\n\tFROM RTR_RatingModifier_INSERT\n),\nJNRTRANS AS (SELECT\n\tSRTTRANS.PremiumTransactionAKID, \n\tSRTTRANS.WorkRatingModifierHashKey AS i_WorkRatingModifierHashKey, \n\tEXP_RatingModifier.WorkRatingModifierAKId, \n\tEXP_RatingModifier.WorkRatingModifierHashKey, \n\tEXP_RatingModifier.o_RunDate AS RunDate\n\tFROM SRTTRANS\n\tINNER JOIN EXP_RatingModifier\n\tON EXP_RatingModifier.WorkRatingModifierHashKey = SRTTRANS.WorkRatingModifierHashKey\n),\nLKP_WorkPremiumTransactionRatingModifierBridge AS (\n\tSELECT\n\tPremiumTransactionAKID\n\tFROM (\n\t\tSELECT A.PremiumTransactionAKId as PremiumTransactionAKID FROM WorkPremiumTransactionRatingModifierBridge A\r\n\t\tJOIN PremiumTransaction C\r\n\t\tON A.PremiumTransactionAKId=C.PremiumTransactionAKId\r\n\t\tAND C.CREATEDDATE>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tAND C.SourceSystemId='PMS' AND A.SourceSystemId='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKID ORDER BY PremiumTransactionAKID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_WorkPremiumTransactionRatingModifierBridge.PremiumTransactionAKID AS lkp_PremiumTransactionID,\n\tJNRTRANS.PremiumTransactionAKID,\n\tJNRTRANS.WorkRatingModifierAKId,\n\tJNRTRANS.RunDate,\n\t-1 AS o_PremiumMasterCalculationId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: IIF(ISNULL(lkp_PremiumTransactionID),'NEW','NOCHANGE')\n\tIFF(lkp_PremiumTransactionID IS NULL,\n\t\t'NEW',\n\t\t'NOCHANGE'\n\t) AS o_ChangeFlag\n\tFROM JNRTRANS\n\tLEFT JOIN LKP_WorkPremiumTransactionRatingModifierBridge\n\tON LKP_WorkPremiumTransactionRatingModifierBridge.PremiumTransactionAKID = JNRTRANS.PremiumTransactionAKID\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tPremiumTransactionAKID,\n\to_AuditID AS AuditID,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\tWorkRatingModifierAKId,\n\tRunDate,\n\to_ChangeFlag AS ChangeFlag,\n\to_PremiumMasterCalculationId\n\tFROM EXP_DetectChanges\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='NEW'),\nWorkPremiumTransactionRatingModifierBridge AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionRatingModifierBridge\n\t(PremiumMasterCalculationId, PremiumTransactionAKId, AuditId, SourceSystemID, CreatedDate, ModifiedDate, WorkRatingModifierAKId, RunDate)\n\tSELECT \n\to_PremiumMasterCalculationId AS PREMIUMMASTERCALCULATIONID, \n\tPremiumTransactionAKID AS PREMIUMTRANSACTIONAKID, \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tWORKRATINGMODIFIERAKID, \n\tRUNDATE\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246483"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905516"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604183"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 01:21:59"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 01:54:57"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_CLAIM"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_CLAIM"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "DBCONNECTION_STAGE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataWarehouse/"
        },
        "annotations": []
    }
}