{
    "name": "s_m_CLM_DW_LOAD_Claimant_Coverage_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claimant_Coverage_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PIF_42X6_stage AS (\n\tSELECT A.pif_symbol, A.pif_policy_number, A.pif_module, A.ipfcx6_insurance_line, A.ipfcx6_location_number, A.ipfcx6_sub_location_number, A.ipfcx6_risk_unit_group, A.ipfcx6_class_code_group, A.ipfcx6_class_code_member, A.ipfcx6_loss_unit, A.ipfcx6_risk_sequence, A.ipfcx6_risk_type_ind, A.ipfcx6_type_exposure, A.ipfcx6_major_peril, A.ipfcx6_sequence_type_exposure, A.ipfcx6_year_item_effective, A.ipfcx6_month_item_effective, A.ipfcx6_day_item_effective, A.ipfcx6_year_of_loss, A.ipfcx6_month_of_loss, A.ipfcx6_day_of_loss, A.ipfcx6_loss_occ_fdigit, A.ipfcx6_usr_loss_occurence, A.ipfcx6_loss_claimant, A.ipfcx6_member, A.ipfcx6_loss_disability, A.ipfcx6_reserve_category, A.ipfcx6_loss_cause, A.ipfcx6_offset_onset_ind, A.logical_flag \r\n\tFROM\r\n\t  @{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_42x6_stage A\r\n\tWHERE A.logical_flag IN ('0','1')\n),\nEXP_Source AS (\n\tSELECT\n\tPIF_SYMBOL,\n\tPIF_POLICY_NUMBER,\n\tPIF_MODULE,\n\tIPFCX6_INSURANCE_LINE,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_INSURANCE_LINE) OR ISNULL(IPFCX6_INSURANCE_LINE)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_INSURANCE_LINE))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_INSURANCE_LINE) OR IPFCX6_INSURANCE_LINE IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_INSURANCE_LINE))) AS out_INSURANCE_LINE,\n\tIPFCX6_LOCATION_NUMBER,\n\t-- *INF*: IIF(ISNULL(IPFCX6_LOCATION_NUMBER),'0000',LPAD(TO_CHAR(IPFCX6_LOCATION_NUMBER),4,'0'))\r\n\t-- \r\n\t-- \r\n\t-- ---IIF(ISNULL(IPFCX6_LOCATION_NUMBER) ,0 ,IPFCX6_LOCATION_NUMBER)\r\n\t-- \r\n\t-- \r\n\t-- \n\tIFF(IPFCX6_LOCATION_NUMBER IS NULL, '0000', LPAD(TO_CHAR(IPFCX6_LOCATION_NUMBER), 4, '0')) AS out_LOCATION_NUMBER,\n\tIPFCX6_SUB_LOCATION_NUMBER,\n\t-- *INF*: IIF(ISNULL(IPFCX6_SUB_LOCATION_NUMBER),'000',TO_CHAR(IPFCX6_SUB_LOCATION_NUMBER))\r\n\t-- \r\n\t-- ---,LENGTH(TO_CHAR(IPFCX6_SUB_LOCATION_NUMBER))=2,'0' ||  TO_CHAR(IPFCX6_LOCATION_NUMBER)\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- ---DECODE(TRUE,ISNULL(IPFCX6_SUB_LOCATION_NUMBER),'000',\r\n\t-- ---            LENGTH(TO_CHAR(IPFCX6_SUB_LOCATION_NUMBER))=1,'00' || TO_CHAR(IPFCX6_LOCATION_NUMBER)                 )\n\tIFF(IPFCX6_SUB_LOCATION_NUMBER IS NULL, '000', TO_CHAR(IPFCX6_SUB_LOCATION_NUMBER)) AS V_SUB_LOCATION_NUMBER,\n\t-- *INF*: IIF(V_SUB_LOCATION_NUMBER ='000',V_SUB_LOCATION_NUMBER,\r\n\t--          LPAD(V_SUB_LOCATION_NUMBER,3,'0'))\r\n\t-- \r\n\t-- --DECODE(TRUE,\r\n\t--    --    LENGTH(V_SUB_LOCATION_NUMBER)=1,'00' || V_SUB_LOCATION_NUMBER,\r\n\t--       ---LENGTH(V_SUB_LOCATION_NUMBER)=2,'0' || V_SUB_LOCATION_NUMBER,\r\n\t-- ---      LENGTH(V_SUB_LOCATION_NUMBER)=3, V_SUB_LOCATION_NUMBER)\n\tIFF(V_SUB_LOCATION_NUMBER = '000', V_SUB_LOCATION_NUMBER, LPAD(V_SUB_LOCATION_NUMBER, 3, '0')) AS out_SUB_LOCATION_NUMBER,\n\tIPFCX6_RISK_UNIT_GROUP,\n\tIPFCX6_CLASS_CODE_GROUP,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(IPFCX6_CLASS_CODE_GROUP)\r\n\t-- ,'00'\r\n\t-- ,IPFCX6_CLASS_CODE_GROUP<10,\r\n\t-- '0' || TO_CHAR(IPFCX6_CLASS_CODE_GROUP)\r\n\t-- ,TO_CHAR(IPFCX6_CLASS_CODE_GROUP)\r\n\t-- )\r\n\t-- \r\n\t-- --IIF(ISNULL(IPFCX6_CLASS_CODE_GROUP)\r\n\t-- --,'00'\r\n\t-- --,TO_CHAR(IPFCX6_CLASS_CODE_GROUP))\n\tDECODE(TRUE,\n\t\tIPFCX6_CLASS_CODE_GROUP IS NULL, '00',\n\t\tIPFCX6_CLASS_CODE_GROUP < 10, '0' || TO_CHAR(IPFCX6_CLASS_CODE_GROUP),\n\t\tTO_CHAR(IPFCX6_CLASS_CODE_GROUP)) AS out_CLASS_CODE_GROUP,\n\tIPFCX6_CLASS_CODE_MEMBER,\n\t-- *INF*: IIF(ISNULL(IPFCX6_CLASS_CODE_MEMBER)\r\n\t-- ,'0'\r\n\t-- ,TO_CHAR(IPFCX6_CLASS_CODE_MEMBER))\n\tIFF(IPFCX6_CLASS_CODE_MEMBER IS NULL, '0', TO_CHAR(IPFCX6_CLASS_CODE_MEMBER)) AS out_CLASS_CODE_MEMBER,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_RISK_UNIT_GROUP) OR ISNULL(IPFCX6_RISK_UNIT_GROUP)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_RISK_UNIT_GROUP))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_RISK_UNIT_GROUP) OR IPFCX6_RISK_UNIT_GROUP IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_RISK_UNIT_GROUP))) AS out_RISK_UNIT_GROUP,\n\t-- *INF*: IIF(IS_SPACES(TO_CHAR(IPFCX6_CLASS_CODE_GROUP )|| TO_CHAR(IPFCX6_CLASS_CODE_MEMBER)) OR ISNULL(TO_CHAR(IPFCX6_CLASS_CODE_GROUP )|| TO_CHAR(IPFCX6_CLASS_CODE_MEMBER))\r\n\t-- ,'N/A'\r\n\t-- ,TO_CHAR(IPFCX6_CLASS_CODE_GROUP )|| TO_CHAR(IPFCX6_CLASS_CODE_MEMBER))\r\n\t-- \r\n\t-- \n\tIFF(IS_SPACES(TO_CHAR(IPFCX6_CLASS_CODE_GROUP) || TO_CHAR(IPFCX6_CLASS_CODE_MEMBER)) OR TO_CHAR(IPFCX6_CLASS_CODE_GROUP) || TO_CHAR(IPFCX6_CLASS_CODE_MEMBER) IS NULL, 'N/A', TO_CHAR(IPFCX6_CLASS_CODE_GROUP) || TO_CHAR(IPFCX6_CLASS_CODE_MEMBER)) AS V_RISK_UNIT_GRP_SEQ,\n\t-- *INF*: LPAD(RTRIM(V_RISK_UNIT_GRP_SEQ),3,'0')\n\tLPAD(RTRIM(V_RISK_UNIT_GRP_SEQ), 3, '0') AS RISK_UNIT_GRP_SEQ,\n\tIPFCX6_LOSS_UNIT,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_LOSS_UNIT) OR ISNULL(IPFCX6_LOSS_UNIT)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_LOSS_UNIT))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_LOSS_UNIT) OR IPFCX6_LOSS_UNIT IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_LOSS_UNIT))) AS out_LOSS_UNIT,\n\tIPFCX6_RISK_SEQUENCE,\n\t-- *INF*: IIF(ISNULL(IPFCX6_RISK_SEQUENCE)\r\n\t-- ,'0'\r\n\t-- ,TO_CHAR(IPFCX6_RISK_SEQUENCE))\n\tIFF(IPFCX6_RISK_SEQUENCE IS NULL, '0', TO_CHAR(IPFCX6_RISK_SEQUENCE)) AS out_RISK_SEQUENCE,\n\tIPFCX6_RISK_TYPE_IND,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_RISK_TYPE_IND) OR ISNULL(IPFCX6_RISK_TYPE_IND) OR LENGTH(IPFCX6_RISK_TYPE_IND)=0\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_RISK_TYPE_IND))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_RISK_TYPE_IND) OR IPFCX6_RISK_TYPE_IND IS NULL OR LENGTH(IPFCX6_RISK_TYPE_IND) = 0, 'N/A', LTRIM(RTRIM(IPFCX6_RISK_TYPE_IND))) AS out_RISK_TYPE_IND,\n\tIPFCX6_TYPE_EXPOSURE,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_TYPE_EXPOSURE) OR ISNULL(IPFCX6_TYPE_EXPOSURE)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_TYPE_EXPOSURE))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_TYPE_EXPOSURE) OR IPFCX6_TYPE_EXPOSURE IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_TYPE_EXPOSURE))) AS out_TYPE_EXPOSURE,\n\tIPFCX6_MAJOR_PERIL,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_MAJOR_PERIL) OR ISNULL(IPFCX6_MAJOR_PERIL)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_MAJOR_PERIL))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_MAJOR_PERIL) OR IPFCX6_MAJOR_PERIL IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_MAJOR_PERIL))) AS out_MAJOR_PERIL,\n\tIPFCX6_SEQUENCE_TYPE_EXPOSURE,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_SEQUENCE_TYPE_EXPOSURE) OR ISNULL(IPFCX6_SEQUENCE_TYPE_EXPOSURE)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_SEQUENCE_TYPE_EXPOSURE))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_SEQUENCE_TYPE_EXPOSURE) OR IPFCX6_SEQUENCE_TYPE_EXPOSURE IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_SEQUENCE_TYPE_EXPOSURE))) AS out_SEQUENCE_TYPE_EXPOSURE,\n\tIPFCX6_YEAR_ITEM_EFFECTIVE,\n\tIPFCX6_YEAR_ITEM_EFFECTIVE AS out_IPFCX6_YEAR_ITEM_EFFECTIVE,\n\tIPFCX6_MONTH_ITEM_EFFECTIVE,\n\tIPFCX6_MONTH_ITEM_EFFECTIVE AS out_IPFCX6_MONTH_ITEM_EFFECTIVE,\n\tIPFCX6_DAY_ITEM_EFFECTIVE,\n\tIPFCX6_DAY_ITEM_EFFECTIVE AS out_IPFCX6_DAY_ITEM_EFFECTIVE,\n\tIPFCX6_YEAR_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCX6_YEAR_OF_LOSS)\n\tTO_CHAR(IPFCX6_YEAR_OF_LOSS) AS v_IPFCX6_YEAR_OF_LOSS,\n\tIPFCX6_MONTH_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCX6_MONTH_OF_LOSS)\n\tTO_CHAR(IPFCX6_MONTH_OF_LOSS) AS v_IPFCX6_MONTH_OF_LOSS,\n\tIPFCX6_DAY_OF_LOSS,\n\t-- *INF*: TO_CHAR(IPFCX6_DAY_OF_LOSS)\n\tTO_CHAR(IPFCX6_DAY_OF_LOSS) AS v_IPFCX6_DAY_OF_LOSS,\n\tIPFCX6_LOSS_OCC_FDIGIT,\n\tIPFCX6_USR_LOSS_OCCURENCE,\n\t-- *INF*: IIF(LENGTH(IPFCX6_USR_LOSS_OCCURENCE) = 1, '0'||LTRIM(RTRIM(IPFCX6_USR_LOSS_OCCURENCE)), LTRIM(RTRIM(TO_CHAR(IPFCX6_USR_LOSS_OCCURENCE))))\n\tIFF(LENGTH(IPFCX6_USR_LOSS_OCCURENCE) = 1, '0' || LTRIM(RTRIM(IPFCX6_USR_LOSS_OCCURENCE)), LTRIM(RTRIM(TO_CHAR(IPFCX6_USR_LOSS_OCCURENCE)))) AS LOSS_OCCURENCE_VAR_LEN,\n\t-- *INF*: LTRIM(RTRIM(IPFCX6_LOSS_OCC_FDIGIT)) || LTRIM(RTRIM(LOSS_OCCURENCE_VAR_LEN))\n\tLTRIM(RTRIM(IPFCX6_LOSS_OCC_FDIGIT)) || LTRIM(RTRIM(LOSS_OCCURENCE_VAR_LEN)) AS LOSS_OCCURENCE,\n\tIPFCX6_LOSS_CLAIMANT,\n\tIPFCX6_MEMBER,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_MEMBER) OR ISNULL(IPFCX6_MEMBER)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_MEMBER))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_MEMBER) OR IPFCX6_MEMBER IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_MEMBER))) AS out_MEMBER,\n\tIPFCX6_LOSS_DISABILITY,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_LOSS_DISABILITY) OR ISNULL(IPFCX6_LOSS_DISABILITY)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_LOSS_DISABILITY))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_LOSS_DISABILITY) OR IPFCX6_LOSS_DISABILITY IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_LOSS_DISABILITY))) AS out_LOSS_DISABILITY,\n\tIPFCX6_RESERVE_CATEGORY,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_RESERVE_CATEGORY) OR ISNULL(IPFCX6_RESERVE_CATEGORY)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_RESERVE_CATEGORY))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_RESERVE_CATEGORY) OR IPFCX6_RESERVE_CATEGORY IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_RESERVE_CATEGORY))) AS out_RESERVE_CATEGORY,\n\tIPFCX6_LOSS_CAUSE,\n\t-- *INF*: DECODE(TRUE,IS_SPACES(IPFCX6_LOSS_CAUSE)  OR ISNULL(IPFCX6_LOSS_CAUSE),'N/A',IPFCX6_MAJOR_PERIL = '032' and IPFCX6_LOSS_CAUSE = '07', '06',LTRIM(RTRIM(IPFCX6_LOSS_CAUSE)))\r\n\t-- \r\n\t-- \n\tDECODE(TRUE,\n\t\tIS_SPACES(IPFCX6_LOSS_CAUSE) OR IPFCX6_LOSS_CAUSE IS NULL, 'N/A',\n\t\tIPFCX6_MAJOR_PERIL = '032' AND IPFCX6_LOSS_CAUSE = '07', '06',\n\t\tLTRIM(RTRIM(IPFCX6_LOSS_CAUSE))) AS out_LOSS_CAUSE,\n\tIPFCX6_OFFSET_ONSET_IND,\n\t-- *INF*: IIF(IS_SPACES(IPFCX6_OFFSET_ONSET_IND) OR ISNULL(IPFCX6_OFFSET_ONSET_IND)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(IPFCX6_OFFSET_ONSET_IND))\r\n\t-- )\n\tIFF(IS_SPACES(IPFCX6_OFFSET_ONSET_IND) OR IPFCX6_OFFSET_ONSET_IND IS NULL, 'N/A', LTRIM(RTRIM(IPFCX6_OFFSET_ONSET_IND))) AS out_OFFSET_ONSET_IND,\n\t-- *INF*: IIF ( LENGTH(v_IPFCX6_MONTH_OF_LOSS) = 1, '0' || LTRIM(RTRIM(v_IPFCX6_MONTH_OF_LOSS)), LTRIM(RTRIM(v_IPFCX6_MONTH_OF_LOSS)))\r\n\t-- ||  \r\n\t-- IIF ( LENGTH(v_IPFCX6_DAY_OF_LOSS) = 1, '0' || LTRIM(RTRIM(v_IPFCX6_DAY_OF_LOSS)), LTRIM(RTRIM(v_IPFCX6_DAY_OF_LOSS)) )\r\n\t-- ||  \r\n\t-- LTRIM(RTRIM(v_IPFCX6_YEAR_OF_LOSS))\n\tIFF(LENGTH(v_IPFCX6_MONTH_OF_LOSS) = 1, '0' || LTRIM(RTRIM(v_IPFCX6_MONTH_OF_LOSS)), LTRIM(RTRIM(v_IPFCX6_MONTH_OF_LOSS))) || IFF(LENGTH(v_IPFCX6_DAY_OF_LOSS) = 1, '0' || LTRIM(RTRIM(v_IPFCX6_DAY_OF_LOSS)), LTRIM(RTRIM(v_IPFCX6_DAY_OF_LOSS))) || LTRIM(RTRIM(v_IPFCX6_YEAR_OF_LOSS)) AS v_loss_date,\n\t-- *INF*: LTRIM(RTRIM(PIF_SYMBOL)) || LTRIM(RTRIM(PIF_POLICY_NUMBER)) || LTRIM(RTRIM(PIF_MODULE)) || v_loss_date || LOSS_OCCURENCE\r\n\t-- \n\tLTRIM(RTRIM(PIF_SYMBOL)) || LTRIM(RTRIM(PIF_POLICY_NUMBER)) || LTRIM(RTRIM(PIF_MODULE)) || v_loss_date || LOSS_OCCURENCE AS Claim_Occurrence_Key,\n\tClaim_Occurrence_Key AS out_Claim_Occurrence_key,\n\t-- *INF*: Claim_Occurrence_Key || LTRIM(RTRIM(IPFCX6_LOSS_CLAIMANT)) || 'CMT'\n\tClaim_Occurrence_Key || LTRIM(RTRIM(IPFCX6_LOSS_CLAIMANT)) || 'CMT' AS Claimant_Key,\n\t-- *INF*: to_date(to_char(IPFCX6_YEAR_ITEM_EFFECTIVE) || '-' || to_char(IPFCX6_MONTH_ITEM_EFFECTIVE) || '-' || to_char(IPFCX6_DAY_ITEM_EFFECTIVE),'YYYY-MM-DD')\n\tto_date(to_char(IPFCX6_YEAR_ITEM_EFFECTIVE) || '-' || to_char(IPFCX6_MONTH_ITEM_EFFECTIVE) || '-' || to_char(IPFCX6_DAY_ITEM_EFFECTIVE), 'YYYY-MM-DD') AS Claimant_Coverage_Eff_Date,\n\t-- *INF*: to_date('2100-12-31', 'YYYY-MM-DD')\n\tto_date('2100-12-31', 'YYYY-MM-DD') AS Claimant_Coverage_Expiration_Date,\n\tlogical_flag\n\tFROM SQ_PIF_42X6_stage\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tIN_Claim_Occurrence_key,\n\tIN_Claim_Party_Key,\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\t--AND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY IN_Claim_Occurrence_key) = 1\n),\nLKP_Claimant_Coverage_EDW AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaimant_cov_eff_date,\n\trisk_type_ind,\n\tclaim_party_occurrence_ak_id1,\n\tSOURCE_INS_LINE,\n\tSOURCE_LOCATION_NUMBER,\n\tSOURCE_SUB_LOCATION_NUMBER,\n\tSOURCE_RISK_UNIT_GROUP,\n\tSOURCE_RISK_UNIT_GRP_SEQ,\n\tSOURCE_RISK_UNIT,\n\tSOURCE_RISK_UNIT_SEQ_NUM,\n\tSOURCE_MAJOR_PERIL_CODE,\n\tSOURCE_MAJOR_PERIL_SEQ,\n\tSOURCE_LOSS_DISABILITY,\n\tSOURCE_RESERVE_CATEGORY,\n\tSOURCE_LOSS_CAUSE,\n\tSOURCE_MEMBER,\n\tSOURCE_TYPE_EXPOSURE,\n\tSOURCE_OFFSET_ONSET_IND,\n\tclaim_party_occurrence_ak_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\tpms_loss_disability,\n\treserve_ctgry,\n\tcause_of_loss,\n\tpms_mbr,\n\tpms_type_exposure\n\tFROM (\n\t\tSELECT \r\n\t\t a.claimant_cov_det_ak_id as claimant_cov_det_ak_id\r\n\t\t, a.claimant_cov_eff_date as claimant_cov_eff_date\r\n\t\t, ltrim(rtrim(a.risk_type_ind)) as risk_type_ind\r\n\t\t, a.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id\r\n\t\t, ltrim(rtrim(a.ins_line)) as ins_line\r\n\t\t, ltrim(rtrim(a.loc_unit_num)) as loc_unit_num\r\n\t\t, ltrim(rtrim(a.sub_loc_unit_num)) as sub_loc_unit_num\r\n\t\t, ltrim(rtrim(a.risk_unit_grp)) as risk_unit_grp\r\n\t\t, ltrim(rtrim(a.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num\r\n\t\t, ltrim(rtrim(a.risk_unit)) as risk_unit\r\n\t\t, ltrim(rtrim(a.risk_unit_seq_num)) as risk_unit_seq_num\r\n\t\t, ltrim(rtrim(a.major_peril_code)) as major_peril_code\r\n\t\t, ltrim(rtrim(a.major_peril_seq)) as major_peril_seq\r\n\t\t, ltrim(rtrim(a.pms_loss_disability)) as pms_loss_disability\r\n\t\t, ltrim(rtrim(a.reserve_ctgry)) as reserve_ctgry\r\n\t\t, ltrim(rtrim(a.cause_of_loss)) as cause_of_loss\r\n\t\t, ltrim(rtrim(a.pms_mbr)) as pms_mbr\r\n\t\t, ltrim(rtrim(a.pms_type_exposure)) as pms_type_exposure\r\n\t\t, ltrim(rtrim(a.offset_onset_ind)) as offset_onset_ind\r\n\t\tfrom \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,ins_line,loc_unit_num,sub_loc_unit_num,risk_unit_grp,risk_unit_grp_seq_num,risk_unit,risk_unit_seq_num,major_peril_code,major_peril_seq,pms_loss_disability,reserve_ctgry,cause_of_loss,pms_mbr,pms_type_exposure ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_claim_party_occurrence AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_ak_id,\n\t\t\tclaim_party_occurrence_ak_id\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_claim_occurrence AS (\n\tSELECT\n\tpol_key_ak_id,\n\tclaim_occurrence_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tpol_key_ak_id,\n\t\t\tclaim_occurrence_ak_id\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id ORDER BY pol_key_ak_id) = 1\n),\nLKP_Coverage AS (\n\tSELECT\n\ttype_bureau_code,\n\tpol_ak_id,\n\tins_line,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\trisk_unit_grp,\n\tclass_code_group,\n\tclass_code_member,\n\trisk_unit,\n\trisk_sequence,\n\trisk_type_ind,\n\tmajor_peril_code,\n\tsequence_type_exposure,\n\tyear_item_effective,\n\tmonth_item_effective,\n\tday_item_effective\n\tFROM (\n\t\tSELECT a.pol_ak_id as pol_ak_id,\r\n\t\ta.ins_line as ins_line,\r\n\t\tLTRIM(RTRIM(a.loc_unit_num)) as loc_unit_num,\r\n\t\tLTRIM(RTRIM(a.sub_loc_unit_num)) as sub_loc_unit_num,\r\n\t\tLTRIM(RTRIM(a.risk_unit_grp)) as risk_unit_grp,\r\n\t\t(CASE WHEN LTRIM(RTRIM(a.risk_unit_grp_seq_num)) not in('N/A','01','---')\r\n\t\t THEN SUBSTRING(LTRIM(RTRIM(a.risk_unit_grp_seq_num)),1,2)\r\n\t\t WHEN LTRIM(RTRIM(a.risk_unit_grp_seq_num)) ='N/A'\r\n\t\t THEN 'N/A'\r\n\t\t ELSE NULL \r\n\t\t END) as class_code_group,\r\n\t\t(CASE WHEN LTRIM(RTRIM(a.risk_unit_grp_seq_num)) not in('N/A','01','---')\r\n\t\t THEN SUBSTRING(LTRIM(RTRIM(a.risk_unit_grp_seq_num)),3,1)\r\n\t\t WHEN LTRIM(RTRIM(a.risk_unit_grp_seq_num))='N/A'\r\n\t\t THEN 'N/A'\r\n\t\t ELSE NULL\r\n\t\t END) as class_code_member,\r\n\t\tLTRIM(RTRIM(a.risk_unit)) as risk_unit,\r\n\t\t(CASE WHEN a.risk_unit_seq_num not in('N/A','-0')\r\n\t\t THEN SUBSTRING(a.risk_unit_seq_num,1,1)\r\n\t\t WHEN a.risk_unit_seq_num='N/A'\r\n\t\t THEN 'N/A'\r\n\t\t ELSE NULL\r\n\t\t END) as risk_sequence,\r\n\t\t(CASE WHEN a.risk_unit_seq_num not in('N/A','-0')\r\n\t\t THEN SUBSTRING(a.risk_unit_seq_num,2,1)\r\n\t\t WHEN a.risk_unit_seq_num='N/A'\r\n\t\t THEN 'N/A'\r\n\t\t ELSE NULL\r\n\t\t END) as risk_type_ind,\r\n\t\tLTRIM(RTRIM(a.major_peril_code)) as major_peril_code,\r\n\t\t(CASE WHEN a.major_peril_seq_num not in('N/A','--','>0','>1','>2','>6','>7','0','1','2','3','NA')\r\n\t\t THEN SUBSTRING(a.major_peril_seq_num,1,2)\r\n\t\t WHEN a.major_peril_seq_num='N/A'\r\n\t\t THEN 'N/A'\r\n\t\t ELSE NULL\r\n\t\t END) as sequence_type_exposure,\r\n\t\tYEAR(a.cov_eff_date) as year_item_effective,\r\n\t\tMONTH(a.cov_eff_date) as month_item_effective,\r\n\t\tDAY(a.cov_eff_date) as day_item_effective,\r\n\t\ta.type_bureau_code as type_bureau_code\r\n\t\tFROM   V2.COVERAGE A  INNER JOIN V2.policy P ON A.pol_ak_id = P.pol_ak_id\r\n\t\tWHERE  A.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\t       AND A.crrnt_snpsht_flag = 1 AND P.crrnt_snpsht_flag = 1\r\n\t\t       AND P.pol_key IN (SELECT DISTINCT pif_symbol+pif_policy_number+pif_module from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.pif_42x6_stage)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,ins_line,loc_unit_num,sub_loc_unit_num,risk_unit_grp,class_code_group,class_code_member,risk_unit,risk_sequence,risk_type_ind,major_peril_code,sequence_type_exposure,year_item_effective,month_item_effective,day_item_effective ORDER BY type_bureau_code) = 1\n),\nLKP_Policy AS (\n\tSELECT\n\tpms_pol_lob_code,\n\tInsuranceSegmentAKId,\n\tpol_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tpms_pol_lob_code,\n\t\t\tInsuranceSegmentAKId,\n\t\t\tpol_ak_id\n\t\tFROM V2.policy\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id ORDER BY pms_pol_lob_code) = 1\n),\nLKP_InusuranceSegment AS (\n\tSELECT\n\tInsuranceSegmentCode,\n\tInsuranceSegmentId\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceSegmentCode,\n\t\t\tInsuranceSegmentId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceSegment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentId ORDER BY InsuranceSegmentCode) = 1\n),\nLKP_sup_CauseOfLoss AS (\n\tSELECT\n\tCauseOfLossId,\n\tLineOfBusiness,\n\tMajorPeril,\n\tCauseOfLoss\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(a.LineOfBusiness)) as LineOfBusiness,\r\n\t\tLTRIM(RTRIM(a.MajorPeril)) as MajorPeril,\r\n\t\tLTRIM(RTRIM(a.CauseOfLoss)) as CauseOfLoss,\r\n\t\ta.CauseOfLossId as CauseOfLossId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_CauseOfLoss a\r\n\t\twhere a.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineOfBusiness,MajorPeril,CauseOfLoss ORDER BY CauseOfLossId) = 1\n),\nLKP_sup_insurance_line AS (\n\tSELECT\n\tsup_ins_line_id,\n\tins_line_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_ins_line_id,\n\t\t\tins_line_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line\n\t\tWHERE source_sys_id = '@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_code ORDER BY sup_ins_line_id) = 1\n),\nLKP_sup_major_peril AS (\n\tSELECT\n\tsup_major_peril_id,\n\tmajor_peril_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_major_peril_id,\n\t\t\tmajor_peril_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril\n\t\tWHERE source_sys_id = '@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY major_peril_code ORDER BY sup_major_peril_id) = 1\n),\nLKP_sup_risk_unit AS (\n\tSELECT\n\tin_INSURANCE_LINE,\n\tsup_risk_unit_id,\n\trisk_unit_code,\n\tins_line\n\tFROM (\n\t\tSELECT \n\t\t\tin_INSURANCE_LINE,\n\t\t\tsup_risk_unit_id,\n\t\t\trisk_unit_code,\n\t\t\tins_line\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit\n\t\tWHERE source_sys_id = '@{pipeline().parameters.MERGED_SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_code,ins_line ORDER BY in_INSURANCE_LINE) = 1\n),\nLKP_sup_risk_unit_group AS (\n\tSELECT\n\tin_INSURANCE_LINE,\n\tin_RISK_TYPE_IND,\n\tsup_risk_unit_grp_id,\n\trisk_unit_grp_code,\n\tins_line,\n\tprdct_type_code\n\tFROM (\n\t\tSELECT \r\n\t\tsup_risk_unit_group.sup_risk_unit_grp_id as sup_risk_unit_grp_id, sup_risk_unit_group.risk_unit_grp_code as risk_unit_grp_code, \r\n\t\tsup_risk_unit_group.ins_line as ins_line, \r\n\t\tLTRIM(RTRIM(sup_risk_unit_group.prdct_type_code)) as prdct_type_code \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit_group\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_grp_code,ins_line,prdct_type_code ORDER BY in_INSURANCE_LINE) = 1\n),\nLKP_sup_type_bureau_code AS (\n\tSELECT\n\tsup_type_bureau_code_id,\n\ttype_bureau_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_type_bureau_code_id,\n\t\t\ttype_bureau_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_type_bureau_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_bureau_code ORDER BY sup_type_bureau_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Claimant_Coverage_EDW.claimant_cov_det_ak_id,\n\tLKP_Claimant_Coverage_EDW.claim_party_occurrence_ak_id1,\n\tLKP_Claimant_Coverage_EDW.claimant_cov_eff_date AS old_claimant_cov_eff_date,\n\tLKP_Claimant_Coverage_EDW.risk_type_ind AS old_risk_type_ind,\n\tLKP_Claimant_Coverage_EDW.SOURCE_INS_LINE,\n\tLKP_Claimant_Coverage_EDW.SOURCE_LOCATION_NUMBER,\n\tLKP_Claimant_Coverage_EDW.SOURCE_SUB_LOCATION_NUMBER,\n\tLKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_GROUP,\n\tLKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_GRP_SEQ,\n\tLKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT,\n\tLKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_SEQ_NUM,\n\tLKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_CODE,\n\tLKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_SEQ,\n\tLKP_Claimant_Coverage_EDW.SOURCE_LOSS_DISABILITY,\n\tLKP_Claimant_Coverage_EDW.SOURCE_RESERVE_CATEGORY,\n\tLKP_Claimant_Coverage_EDW.SOURCE_LOSS_CAUSE,\n\tLKP_Claimant_Coverage_EDW.SOURCE_MEMBER,\n\tLKP_Claimant_Coverage_EDW.SOURCE_TYPE_EXPOSURE,\n\tLKP_Claimant_Coverage_EDW.SOURCE_OFFSET_ONSET_IND,\n\tEXP_Source.out_RISK_TYPE_IND AS SOURCE_RISK_TYPE_IND,\n\tEXP_Source.Claimant_Coverage_Eff_Date,\n\tEXP_Source.Claimant_Coverage_Expiration_Date,\n\t-- *INF*: iif(isnull(claimant_cov_det_ak_id)\r\n\t-- , 'NEW'\r\n\t-- ,iif(old_claimant_cov_eff_date != Claimant_Coverage_Eff_Date or\r\n\t-- old_risk_type_ind != SOURCE_RISK_TYPE_IND \r\n\t-- ,'UPDATE'\r\n\t-- ,'NOCHANGE')\r\n\t-- )\n\tIFF(claimant_cov_det_ak_id IS NULL, 'NEW', IFF(old_claimant_cov_eff_date != Claimant_Coverage_Eff_Date OR old_risk_type_ind != SOURCE_RISK_TYPE_IND, 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\tEXP_Source.logical_flag,\n\t1 AS crrnt_snpsht_flag,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_ID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS Source_System_Id,\n\t-- *INF*: iif(v_Changed_Flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_Changed_Flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsysdate AS created_date,\n\tLKP_sup_insurance_line.sup_ins_line_id,\n\t-- *INF*: IIF(ISNULL(sup_ins_line_id), -1, sup_ins_line_id)\n\tIFF(sup_ins_line_id IS NULL, - 1, sup_ins_line_id) AS out_sup_ins_line_id,\n\tLKP_sup_risk_unit_group.sup_risk_unit_grp_id,\n\t-- *INF*: IIF(ISNULL(sup_risk_unit_grp_id), -1, sup_risk_unit_grp_id)\n\tIFF(sup_risk_unit_grp_id IS NULL, - 1, sup_risk_unit_grp_id) AS out_sup_risk_unit_grp_id,\n\tLKP_sup_risk_unit.sup_risk_unit_id,\n\t-- *INF*: IIF(ISNULL(sup_risk_unit_id), -1, sup_risk_unit_id)\n\tIFF(sup_risk_unit_id IS NULL, - 1, sup_risk_unit_id) AS out_sup_risk_unit_id,\n\tLKP_sup_major_peril.sup_major_peril_id,\n\t-- *INF*: IIF(ISNULL(sup_major_peril_id), -1, sup_major_peril_id)\n\tIFF(sup_major_peril_id IS NULL, - 1, sup_major_peril_id) AS out_sup_major_peril_id,\n\tLKP_sup_CauseOfLoss.CauseOfLossId,\n\t-- *INF*: IIF(ISNULL(CauseOfLossId), -1, CauseOfLossId)\n\tIFF(CauseOfLossId IS NULL, - 1, CauseOfLossId) AS out_CauseOfLossId,\n\tLKP_Coverage.type_bureau_code AS TypeBureauCode,\n\tLKP_sup_type_bureau_code.sup_type_bureau_code_id,\n\t-- *INF*: IIF(ISNULL(sup_type_bureau_code_id), -1, sup_type_bureau_code_id)\n\tIFF(sup_type_bureau_code_id IS NULL, - 1, sup_type_bureau_code_id) AS out_sup_type_bureau_code_id,\n\t-1 AS SupVehicleRegistrationStateID,\n\t'PMS' AS policy_src_id,\n\t'N/A' AS CoverageForm,\n\t'N/A' AS RiskType,\n\t'N/A' AS CoverageType,\n\t'N/A' AS CoverageVersion,\n\t'N/A' AS AnnualStatementLineNumber,\n\t'N/A' AS ClassCode,\n\t'N/A' AS SublineCode,\n\t-1 AS RatingCoverageAKID,\n\tLKP_claim_occurrence.pol_key_ak_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- SOURCE_RISK_UNIT_SEQ_NUM='0' AND SOURCE_INS_LINE='WC',\r\n\t-- '00',\r\n\t-- IN(SOURCE_RISK_UNIT_SEQ_NUM, '0','1') AND SOURCE_INS_LINE<>'WC' AND SOURCE_RISK_TYPE_IND='N/A',\r\n\t-- 'N/A',\r\n\t-- IN(SOURCE_RISK_UNIT_SEQ_NUM, '0','1','2','3','4','8') AND SOURCE_INS_LINE='GL',\r\n\t-- SOURCE_RISK_UNIT_SEQ_NUM || SOURCE_RISK_TYPE_IND,\r\n\t-- SOURCE_RISK_UNIT_SEQ_NUM\r\n\t-- )\n\tDECODE(TRUE,\n\t\tSOURCE_RISK_UNIT_SEQ_NUM = '0' AND SOURCE_INS_LINE = 'WC', '00',\n\t\tIN(SOURCE_RISK_UNIT_SEQ_NUM, '0', '1') AND SOURCE_INS_LINE <> 'WC' AND SOURCE_RISK_TYPE_IND = 'N/A', 'N/A',\n\t\tIN(SOURCE_RISK_UNIT_SEQ_NUM, '0', '1', '2', '3', '4', '8') AND SOURCE_INS_LINE = 'GL', SOURCE_RISK_UNIT_SEQ_NUM || SOURCE_RISK_TYPE_IND,\n\t\tSOURCE_RISK_UNIT_SEQ_NUM) AS o_RiskUnitSequenceNumber_AKId,\n\t'N/A' AS o_pms_type_bureau_code,\n\tLKP_InusuranceSegment.InsuranceSegmentCode AS i_InsuranceSegmentCode,\n\t-- *INF*: IIF(ISNULL(i_InsuranceSegmentCode),'N/A',i_InsuranceSegmentCode)\n\tIFF(i_InsuranceSegmentCode IS NULL, 'N/A', i_InsuranceSegmentCode) AS o_InsuranceSegmentCode\n\tFROM EXP_Source\n\tLEFT JOIN LKP_Claimant_Coverage_EDW\n\tON LKP_Claimant_Coverage_EDW.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id AND LKP_Claimant_Coverage_EDW.ins_line = EXP_Source.out_INSURANCE_LINE AND LKP_Claimant_Coverage_EDW.loc_unit_num = EXP_Source.out_LOCATION_NUMBER AND LKP_Claimant_Coverage_EDW.sub_loc_unit_num = EXP_Source.out_SUB_LOCATION_NUMBER AND LKP_Claimant_Coverage_EDW.risk_unit_grp = EXP_Source.out_RISK_UNIT_GROUP AND LKP_Claimant_Coverage_EDW.risk_unit_grp_seq_num = EXP_Source.RISK_UNIT_GRP_SEQ AND LKP_Claimant_Coverage_EDW.risk_unit = EXP_Source.out_LOSS_UNIT AND LKP_Claimant_Coverage_EDW.risk_unit_seq_num = EXP_Source.out_RISK_SEQUENCE AND LKP_Claimant_Coverage_EDW.major_peril_code = EXP_Source.out_MAJOR_PERIL AND LKP_Claimant_Coverage_EDW.major_peril_seq = EXP_Source.out_SEQUENCE_TYPE_EXPOSURE AND LKP_Claimant_Coverage_EDW.pms_loss_disability = EXP_Source.out_LOSS_DISABILITY AND LKP_Claimant_Coverage_EDW.reserve_ctgry = EXP_Source.out_RESERVE_CATEGORY AND LKP_Claimant_Coverage_EDW.cause_of_loss = EXP_Source.out_LOSS_CAUSE AND LKP_Claimant_Coverage_EDW.pms_mbr = EXP_Source.out_MEMBER AND LKP_Claimant_Coverage_EDW.pms_type_exposure = EXP_Source.out_TYPE_EXPOSURE\n\tLEFT JOIN LKP_Coverage\n\tON LKP_Coverage.pol_ak_id = LKP_claim_occurrence.pol_key_ak_id AND LKP_Coverage.ins_line = LKP_Claimant_Coverage_EDW.SOURCE_INS_LINE AND LKP_Coverage.loc_unit_num = LKP_Claimant_Coverage_EDW.SOURCE_LOCATION_NUMBER AND LKP_Coverage.sub_loc_unit_num = LKP_Claimant_Coverage_EDW.SOURCE_SUB_LOCATION_NUMBER AND LKP_Coverage.risk_unit_grp = LKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_GROUP AND LKP_Coverage.class_code_group = EXP_Source.out_CLASS_CODE_GROUP AND LKP_Coverage.class_code_member = EXP_Source.out_CLASS_CODE_MEMBER AND LKP_Coverage.risk_unit = LKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT AND LKP_Coverage.risk_sequence = LKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_SEQ_NUM AND LKP_Coverage.risk_type_ind = EXP_Source.out_RISK_TYPE_IND AND LKP_Coverage.major_peril_code = LKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_CODE AND LKP_Coverage.sequence_type_exposure = LKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_SEQ AND LKP_Coverage.year_item_effective = EXP_Source.out_IPFCX6_YEAR_ITEM_EFFECTIVE AND LKP_Coverage.month_item_effective = EXP_Source.out_IPFCX6_MONTH_ITEM_EFFECTIVE AND LKP_Coverage.day_item_effective = EXP_Source.out_IPFCX6_DAY_ITEM_EFFECTIVE\n\tLEFT JOIN LKP_InusuranceSegment\n\tON LKP_InusuranceSegment.InsuranceSegmentId = LKP_Policy.InsuranceSegmentAKId\n\tLEFT JOIN LKP_claim_occurrence\n\tON LKP_claim_occurrence.claim_occurrence_ak_id = LKP_claim_party_occurrence.claim_occurrence_ak_id\n\tLEFT JOIN LKP_sup_CauseOfLoss\n\tON LKP_sup_CauseOfLoss.LineOfBusiness = LKP_Policy.pms_pol_lob_code AND LKP_sup_CauseOfLoss.MajorPeril = LKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_CODE AND LKP_sup_CauseOfLoss.CauseOfLoss = LKP_Claimant_Coverage_EDW.SOURCE_LOSS_CAUSE\n\tLEFT JOIN LKP_sup_insurance_line\n\tON LKP_sup_insurance_line.ins_line_code = LKP_Claimant_Coverage_EDW.SOURCE_INS_LINE\n\tLEFT JOIN LKP_sup_major_peril\n\tON LKP_sup_major_peril.major_peril_code = LKP_Claimant_Coverage_EDW.SOURCE_MAJOR_PERIL_CODE\n\tLEFT JOIN LKP_sup_risk_unit\n\tON LKP_sup_risk_unit.risk_unit_code = LKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT AND LKP_sup_risk_unit.ins_line = EXP_Source.out_INSURANCE_LINE\n\tLEFT JOIN LKP_sup_risk_unit_group\n\tON LKP_sup_risk_unit_group.risk_unit_grp_code = LKP_Claimant_Coverage_EDW.SOURCE_RISK_UNIT_GROUP AND LKP_sup_risk_unit_group.ins_line = EXP_Source.out_INSURANCE_LINE AND LKP_sup_risk_unit_group.prdct_type_code = EXP_Source.out_RISK_TYPE_IND\n\tLEFT JOIN LKP_sup_type_bureau_code\n\tON LKP_sup_type_bureau_code.type_bureau_code = LKP_Coverage.type_bureau_code\n),\nFIL_Insert AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tclaim_party_occurrence_ak_id1, \n\tSOURCE_INS_LINE AS out_INS_LINE, \n\tSOURCE_LOCATION_NUMBER AS out_LOCATION_NUMBER, \n\tSOURCE_SUB_LOCATION_NUMBER AS out_SUB_LOCATION_NUMBER, \n\tSOURCE_RISK_UNIT_GROUP AS out_RISK_UNIT_GROUP, \n\tSOURCE_RISK_UNIT_GRP_SEQ AS out_RISK_UNIT_GRP_SEQ, \n\tSOURCE_RISK_UNIT AS out_RISK_UNIT, \n\tSOURCE_RISK_UNIT_SEQ_NUM AS out_SOURCE_RISK_UNIT_SEQ_NUM, \n\tSOURCE_MAJOR_PERIL_CODE AS out_MAJOR_PERIL_CODE, \n\tSOURCE_MAJOR_PERIL_SEQ AS out_MAJOR_PERIL_SEQ, \n\tSOURCE_LOSS_DISABILITY AS out_LOSS_DISABILITY, \n\tSOURCE_RESERVE_CATEGORY AS out_RESERVE_CATEGORY, \n\tSOURCE_LOSS_CAUSE AS out_LOSS_CAUSE, \n\tSOURCE_MEMBER AS out_MEMBER, \n\tSOURCE_TYPE_EXPOSURE AS out_TYPE_EXPOSURE, \n\tSOURCE_OFFSET_ONSET_IND AS out_OFFSET_ONSET_IND, \n\tSOURCE_RISK_TYPE_IND AS out_RISK_TYPE_IND, \n\tClaimant_Coverage_Eff_Date, \n\tClaimant_Coverage_Expiration_Date, \n\tlogical_flag, \n\tcrrnt_snpsht_flag, \n\tChanged_Flag, \n\tAudit_ID, \n\tSource_System_Id, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tout_sup_ins_line_id AS sup_ins_line_id, \n\tout_sup_risk_unit_grp_id AS sup_risk_unit_grp_id, \n\tout_sup_risk_unit_id AS sup_risk_unit_id, \n\tout_sup_major_peril_id AS sup_major_peril_id, \n\tout_CauseOfLossId AS CauseOfLossId, \n\tTypeBureauCode, \n\tout_sup_type_bureau_code_id, \n\tSupVehicleRegistrationStateID, \n\tpolicy_src_id, \n\tCoverageForm, \n\tRiskType, \n\tCoverageType, \n\tCoverageVersion, \n\tAnnualStatementLineNumber, \n\tClassCode, \n\tSublineCode, \n\tRatingCoverageAKID, \n\tpol_key_ak_id, \n\to_RiskUnitSequenceNumber_AKId AS RiskUnitSequenceNumber_AKId, \n\to_pms_type_bureau_code AS pms_type_bureau_code, \n\to_InsuranceSegmentCode\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW' or Changed_Flag='UPDATE'\n),\nLKP_StatisticalCoverageForPMSExceed AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessAKId,\n\tProductAKId,\n\tStatisticalCoverageAKID,\n\tCoverageGuid,\n\tPolicyAKID,\n\tInsuranceLine,\n\tLocationNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tSubLocationUnitNumber,\n\tTypeBureauCode,\n\tMaxPolicyCovEffDate\n\tFROM (\n\t\tSelect \r\n\t\tDISTINCT SC.InsuranceReferenceLineOfBusinessAKID as InsuranceReferenceLineOfBusinessAKID,\r\n\t\tSC.ProductAKID as ProductAKID,\r\n\t\tSC.StatisticalCoverageAKID as StatisticalCoverageAKID,\r\n\t\tSC.CoverageGuid as CoverageGuid,\r\n\t\tPC.PolicyAKID as PolicyAKID, \r\n\t\tPC.InsuranceLine as InsuranceLine, \r\n\t\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END) as LocationNumber,\r\n\t\tSC.MajorPerilCode as MajorPerilCode,\r\n\t\tSC.MajorPerilSequenceNumber as MajorPerilSequenceNumber,\r\n\t\tSC.RiskUnit as RiskUnit,\r\n\t\t(CASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END) as RiskUnitSequenceNumber,\r\n\t\tSC.RiskUnitGroup as RiskUnitGroup,\r\n\t\tSC.RiskUnitGroupSequenceNumber as RiskUnitGroupSequenceNumber,\r\n\t\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END) as SubLocationUnitNumber,\r\n\t\tPC.TypeBureauCode as TypeBureauCode,\r\n\t\tMAX(PC.PolicyCoverageEffectiveDate) as MaxPolicyCovEffDate\r\n\t\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage SC ,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation RL,\r\n\t\tV2.policy p\r\n\t\tWHERE SC.PolicyCoverageAKID = PC.PolicyCoverageAKID \r\n\t\tAND PC.RiskLocationAKID = RL.RiskLocationAKID  \r\n\t\tAND  PC.PolicyAKID = p.pol_ak_id \r\n\t\tAND P.crrnt_snpsht_flag=1 \r\n\t\tAND P.source_sys_id='PMS'\r\n\t\tAND  EXISTS (SELECT DISTINCT pol_key_ak_id \r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PIF_42X6_STAGE\r\n\t\twhere claim_occurrence_key=(pif_symbol+pif_policy_number+pif_module+right('0'+convert(varchar,ipfcx6_month_of_loss),2) +right('0'+convert(varchar,ipfcx6_day_of_loss),2)+convert(varchar,ipfcx6_year_of_loss)+ipfcx6_loss_occ_fdigit+right('0'+convert(varchar,ipfcx6_usr_loss_occurence),2) ) and \r\n\t\tcrrnt_snpsht_flag = 1 AND PC.PolicyAKID= pol_key_ak_id )\r\n\t\tGROUP BY SC.InsuranceReferenceLineOfBusinessAKID,\r\n\t\tSC.ProductAKID,\r\n\t\tSC.StatisticalCoverageAKID,\r\n\t\tSC.CoverageGuid,\r\n\t\tPC.PolicyAKID, \r\n\t\tPC.InsuranceLine,\r\n\t\tCASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END,\r\n\t\tSC.MajorPerilCode,\r\n\t\tSC.MajorPerilSequenceNumber,\r\n\t\tSC.RiskUnit,\r\n\t\tCASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END ,\r\n\t\tSC.RiskUnitGroup, \r\n\t\tSC.RiskUnitGroupSequenceNumber ,\r\n\t\tCASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END ,\r\n\t\tPC.TypeBureauCode\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,InsuranceLine,LocationNumber,MajorPerilCode,MajorPerilSequenceNumber,RiskUnit,RiskUnitSequenceNumber,RiskUnitGroup,RiskUnitGroupSequenceNumber,SubLocationUnitNumber,TypeBureauCode,MaxPolicyCovEffDate ORDER BY InsuranceReferenceLineOfBusinessAKId) = 1\n),\nLkp_SupTypeOfLossRules AS (\n\tSELECT\n\tTypeOfLoss,\n\tClaimTypeCategory,\n\tClaimTypeGroup,\n\tSubrogationEligibleIndicator,\n\tMajorPerilCode,\n\tCauseOfLoss,\n\tInsuranceSegmentCode\n\tFROM (\n\t\tSELECT \n\t\t\tTypeOfLoss,\n\t\t\tClaimTypeCategory,\n\t\t\tClaimTypeGroup,\n\t\t\tSubrogationEligibleIndicator,\n\t\t\tMajorPerilCode,\n\t\t\tCauseOfLoss,\n\t\t\tInsuranceSegmentCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupTypeOfLossRules\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY MajorPerilCode,CauseOfLoss,InsuranceSegmentCode ORDER BY TypeOfLoss DESC) = 1\n),\nSEQ_Claimant_Coverage_Detail AS (\n\tCREATE SEQUENCE SEQ_Claimant_Coverage_Detail\n\tSTART = 0\n\tINCREMENT = 1;\n),\nExp_Determine_AK AS (\n\tSELECT\n\tFIL_Insert.claimant_cov_det_ak_id,\n\tSEQ_Claimant_Coverage_Detail.NEXTVAL,\n\t-- *INF*: iif(isnull(claimant_cov_det_ak_id)\r\n\t-- ,NEXTVAL\r\n\t-- ,claimant_cov_det_ak_id)\n\tIFF(claimant_cov_det_ak_id IS NULL, NEXTVAL, claimant_cov_det_ak_id) AS out_Claimant_cov_Det_AK_id,\n\tFIL_Insert.claim_party_occurrence_ak_id1,\n\tFIL_Insert.out_INS_LINE,\n\tFIL_Insert.out_LOCATION_NUMBER,\n\tFIL_Insert.out_SUB_LOCATION_NUMBER,\n\tFIL_Insert.out_RISK_UNIT_GROUP,\n\tFIL_Insert.out_RISK_UNIT_GRP_SEQ,\n\tFIL_Insert.out_RISK_UNIT,\n\tFIL_Insert.out_SOURCE_RISK_UNIT_SEQ_NUM,\n\tFIL_Insert.out_MAJOR_PERIL_CODE,\n\tFIL_Insert.out_MAJOR_PERIL_SEQ,\n\tFIL_Insert.out_LOSS_DISABILITY,\n\tFIL_Insert.out_RESERVE_CATEGORY,\n\tFIL_Insert.out_LOSS_CAUSE,\n\tFIL_Insert.out_MEMBER,\n\tFIL_Insert.out_TYPE_EXPOSURE,\n\tFIL_Insert.out_OFFSET_ONSET_IND,\n\tFIL_Insert.out_RISK_TYPE_IND,\n\tFIL_Insert.Claimant_Coverage_Eff_Date,\n\tFIL_Insert.Claimant_Coverage_Expiration_Date,\n\tFIL_Insert.logical_flag,\n\tFIL_Insert.crrnt_snpsht_flag,\n\tFIL_Insert.Changed_Flag,\n\tFIL_Insert.Audit_ID,\n\tFIL_Insert.Source_System_Id,\n\tFIL_Insert.eff_from_date,\n\tFIL_Insert.eff_to_date,\n\tFIL_Insert.created_date,\n\t'N/A' AS Dummy_String,\n\t0 AS Dummy_Integer,\n\tFIL_Insert.sup_ins_line_id,\n\tFIL_Insert.sup_risk_unit_grp_id,\n\tFIL_Insert.sup_risk_unit_id,\n\tFIL_Insert.sup_major_peril_id,\n\tFIL_Insert.CauseOfLossId,\n\tFIL_Insert.TypeBureauCode,\n\t-- *INF*: IIF(ISNULL(TypeBureauCode), 'N/A', TypeBureauCode)\n\tIFF(TypeBureauCode IS NULL, 'N/A', TypeBureauCode) AS out_TypeBureauCode,\n\tFIL_Insert.out_sup_type_bureau_code_id,\n\tFIL_Insert.SupVehicleRegistrationStateID,\n\tFIL_Insert.policy_src_id,\n\tFIL_Insert.CoverageForm,\n\tFIL_Insert.RiskType,\n\tFIL_Insert.CoverageType,\n\tFIL_Insert.CoverageVersion,\n\tFIL_Insert.AnnualStatementLineNumber,\n\tFIL_Insert.ClassCode,\n\tFIL_Insert.SublineCode,\n\tFIL_Insert.RatingCoverageAKID,\n\tLKP_StatisticalCoverageForPMSExceed.InsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId,\n\tLKP_StatisticalCoverageForPMSExceed.ProductAKId AS i_ProductAKId,\n\tLKP_StatisticalCoverageForPMSExceed.StatisticalCoverageAKID AS i_StatisticalCoverageAKID,\n\tLKP_StatisticalCoverageForPMSExceed.CoverageGuid AS i_CoverageGuid,\n\t-- *INF*: IIF(ISNULL(i_CoverageGuid),'N/A',i_CoverageGuid)\n\tIFF(i_CoverageGuid IS NULL, 'N/A', i_CoverageGuid) AS o_CoverageGUID,\n\t-- *INF*: IIF(ISNULL(i_InsuranceReferenceLineOfBusinessAKId), -1, i_InsuranceReferenceLineOfBusinessAKId)\n\tIFF(i_InsuranceReferenceLineOfBusinessAKId IS NULL, - 1, i_InsuranceReferenceLineOfBusinessAKId) AS o_InsuranceReferenceLineOfBusinessAKId,\n\t-- *INF*: IIF(ISNULL(i_ProductAKId), -1,i_ProductAKId)\n\tIFF(i_ProductAKId IS NULL, - 1, i_ProductAKId) AS o_ProductAKId,\n\t-- *INF*: IIF(ISNULL(i_StatisticalCoverageAKID), -1, i_StatisticalCoverageAKID)\n\tIFF(i_StatisticalCoverageAKID IS NULL, - 1, i_StatisticalCoverageAKID) AS o_StatisticalCoverageAKID,\n\tLkp_SupTypeOfLossRules.TypeOfLoss AS i_TypeOfLoss,\n\tLkp_SupTypeOfLossRules.ClaimTypeCategory AS i_ClaimTypeCategory,\n\tLkp_SupTypeOfLossRules.ClaimTypeGroup AS i_ClaimTypeGroup,\n\tLkp_SupTypeOfLossRules.SubrogationEligibleIndicator AS i_SubrogationEligibleIndicator,\n\t-- *INF*: IIF(ISNULL(i_TypeOfLoss) ,'N/A',i_TypeOfLoss)\r\n\t-- --IIF(ISNULL(i_TypeOfLoss)    OR   i_TypeOfLoss = 'Unassigned'       ,'N/A',i_TypeOfLoss)\n\tIFF(i_TypeOfLoss IS NULL, 'N/A', i_TypeOfLoss) AS o_TypeOfLoss,\n\t-- *INF*: IIF(ISNULL(i_ClaimTypeCategory),'N/A',i_ClaimTypeCategory)\n\tIFF(i_ClaimTypeCategory IS NULL, 'N/A', i_ClaimTypeCategory) AS o_ClaimTypeCategory,\n\t-- *INF*: IIF(ISNULL(i_ClaimTypeGroup),'N/A',i_ClaimTypeGroup)\n\tIFF(i_ClaimTypeGroup IS NULL, 'N/A', i_ClaimTypeGroup) AS o_ClaimTypeGroup,\n\t-- *INF*: IIF(ISNULL(i_SubrogationEligibleIndicator),'N/A',i_SubrogationEligibleIndicator)\n\tIFF(i_SubrogationEligibleIndicator IS NULL, 'N/A', i_SubrogationEligibleIndicator) AS o_SubrogationEligibleIndicator\n\tFROM FIL_Insert\n\tLEFT JOIN LKP_StatisticalCoverageForPMSExceed\n\tON LKP_StatisticalCoverageForPMSExceed.PolicyAKID = FIL_Insert.pol_key_ak_id AND LKP_StatisticalCoverageForPMSExceed.InsuranceLine = FIL_Insert.out_INS_LINE AND LKP_StatisticalCoverageForPMSExceed.LocationNumber = FIL_Insert.out_LOCATION_NUMBER AND LKP_StatisticalCoverageForPMSExceed.MajorPerilCode = FIL_Insert.out_MAJOR_PERIL_CODE AND LKP_StatisticalCoverageForPMSExceed.MajorPerilSequenceNumber = FIL_Insert.out_MAJOR_PERIL_SEQ AND LKP_StatisticalCoverageForPMSExceed.RiskUnit = FIL_Insert.out_RISK_UNIT AND LKP_StatisticalCoverageForPMSExceed.RiskUnitSequenceNumber = FIL_Insert.RiskUnitSequenceNumber_AKId AND LKP_StatisticalCoverageForPMSExceed.RiskUnitGroup = FIL_Insert.out_RISK_UNIT_GROUP AND LKP_StatisticalCoverageForPMSExceed.RiskUnitGroupSequenceNumber = FIL_Insert.out_RISK_UNIT_GRP_SEQ AND LKP_StatisticalCoverageForPMSExceed.SubLocationUnitNumber = FIL_Insert.out_SUB_LOCATION_NUMBER AND LKP_StatisticalCoverageForPMSExceed.TypeBureauCode = FIL_Insert.TypeBureauCode AND LKP_StatisticalCoverageForPMSExceed.MaxPolicyCovEffDate = FIL_Insert.Claimant_Coverage_Eff_Date\n\tLEFT JOIN Lkp_SupTypeOfLossRules\n\tON Lkp_SupTypeOfLossRules.MajorPerilCode = FIL_Insert.out_MAJOR_PERIL_CODE AND Lkp_SupTypeOfLossRules.CauseOfLoss = FIL_Insert.out_LOSS_CAUSE AND Lkp_SupTypeOfLossRules.InsuranceSegmentCode = FIL_Insert.o_InsuranceSegmentCode\n),\nclaimant_coverage_detail_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail\n\t(claimant_cov_det_ak_id, claim_party_occurrence_ak_id, s3p_object_type_code, s3p_object_seq_num, s3p_pkg_seq_num, s3p_ins_line_code, s3p_unit_type_code, s3p_wc_class_descript, loc_unit_num, sub_loc_unit_num, ins_line, risk_unit_grp, risk_unit_grp_seq_num, risk_unit, risk_unit_seq_num, major_peril_code, major_peril_seq, pms_loss_disability, reserve_ctgry, cause_of_loss, pms_mbr, pms_type_exposure, pms_type_bureau_code, offset_onset_ind, claimant_cov_eff_date, claimant_cov_exp_date, risk_type_ind, s3p_unit_descript, spec_pers_prop_use_code, pkg_ded_amt, pkg_lmt_amt, manual_entry_ind, unit_veh_registration_state_code, unit_veh_stated_amt, unit_dam_descript, unit_veh_yr, unit_veh_make, unit_vin_num, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, SupInsuranceLineID, sup_risk_unit_grp_id, sup_risk_unit_id, SupMajorPerilID, CauseOfLossID, SupTypeBureauCodeID, SupVehicleRegistrationStateID, PolicySourceID, CoverageForm, RiskType, CoverageType, CoverageVersion, AnnualStatementLineNumber, ClassCode, SublineCode, RatingCoverageAKId, CoverageGUID, StatisticalCoverageAKID, InsuranceReferenceLineOfBusinessAKId, ProductAKId, TypeOfLoss, ClaimTypeCategory, ClaimTypeGroup, SubrogationEligibleIndicator)\n\tSELECT \n\tout_Claimant_cov_Det_AK_id AS CLAIMANT_COV_DET_AK_ID, \n\tclaim_party_occurrence_ak_id1 AS CLAIM_PARTY_OCCURRENCE_AK_ID, \n\tDummy_String AS S3P_OBJECT_TYPE_CODE, \n\tDummy_String AS S3P_OBJECT_SEQ_NUM, \n\tDummy_String AS S3P_PKG_SEQ_NUM, \n\tDummy_String AS S3P_INS_LINE_CODE, \n\tDummy_String AS S3P_UNIT_TYPE_CODE, \n\tDummy_String AS S3P_WC_CLASS_DESCRIPT, \n\tout_LOCATION_NUMBER AS LOC_UNIT_NUM, \n\tout_SUB_LOCATION_NUMBER AS SUB_LOC_UNIT_NUM, \n\tout_INS_LINE AS INS_LINE, \n\tout_RISK_UNIT_GROUP AS RISK_UNIT_GRP, \n\tout_RISK_UNIT_GRP_SEQ AS RISK_UNIT_GRP_SEQ_NUM, \n\tout_RISK_UNIT AS RISK_UNIT, \n\tout_SOURCE_RISK_UNIT_SEQ_NUM AS RISK_UNIT_SEQ_NUM, \n\tout_MAJOR_PERIL_CODE AS MAJOR_PERIL_CODE, \n\tout_MAJOR_PERIL_SEQ AS MAJOR_PERIL_SEQ, \n\tout_LOSS_DISABILITY AS PMS_LOSS_DISABILITY, \n\tout_RESERVE_CATEGORY AS RESERVE_CTGRY, \n\tout_LOSS_CAUSE AS CAUSE_OF_LOSS, \n\tout_MEMBER AS PMS_MBR, \n\tout_TYPE_EXPOSURE AS PMS_TYPE_EXPOSURE, \n\tout_TypeBureauCode AS PMS_TYPE_BUREAU_CODE, \n\tout_OFFSET_ONSET_IND AS OFFSET_ONSET_IND, \n\tClaimant_Coverage_Eff_Date AS CLAIMANT_COV_EFF_DATE, \n\tClaimant_Coverage_Expiration_Date AS CLAIMANT_COV_EXP_DATE, \n\tout_RISK_TYPE_IND AS RISK_TYPE_IND, \n\tDummy_String AS S3P_UNIT_DESCRIPT, \n\tDummy_String AS SPEC_PERS_PROP_USE_CODE, \n\tDummy_Integer AS PKG_DED_AMT, \n\tDummy_Integer AS PKG_LMT_AMT, \n\tDummy_String AS MANUAL_ENTRY_IND, \n\tDummy_String AS UNIT_VEH_REGISTRATION_STATE_CODE, \n\tDummy_Integer AS UNIT_VEH_STATED_AMT, \n\tDummy_String AS UNIT_DAM_DESCRIPT, \n\tDummy_Integer AS UNIT_VEH_YR, \n\tDummy_String AS UNIT_VEH_MAKE, \n\tDummy_String AS UNIT_VIN_NUM, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAudit_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSource_System_Id AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tcreated_date AS MODIFIED_DATE, \n\tsup_ins_line_id AS SUPINSURANCELINEID, \n\tSUP_RISK_UNIT_GRP_ID, \n\tSUP_RISK_UNIT_ID, \n\tsup_major_peril_id AS SUPMAJORPERILID, \n\tCauseOfLossId AS CAUSEOFLOSSID, \n\tout_sup_type_bureau_code_id AS SUPTYPEBUREAUCODEID, \n\tSUPVEHICLEREGISTRATIONSTATEID, \n\tpolicy_src_id AS POLICYSOURCEID, \n\tCOVERAGEFORM, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tCOVERAGEVERSION, \n\tANNUALSTATEMENTLINENUMBER, \n\tCLASSCODE, \n\tSUBLINECODE, \n\tRatingCoverageAKID AS RATINGCOVERAGEAKID, \n\to_CoverageGUID AS COVERAGEGUID, \n\to_StatisticalCoverageAKID AS STATISTICALCOVERAGEAKID, \n\to_InsuranceReferenceLineOfBusinessAKId AS INSURANCEREFERENCELINEOFBUSINESSAKID, \n\to_ProductAKId AS PRODUCTAKID, \n\to_TypeOfLoss AS TYPEOFLOSS, \n\to_ClaimTypeCategory AS CLAIMTYPECATEGORY, \n\to_ClaimTypeGroup AS CLAIMTYPEGROUP, \n\to_SubrogationEligibleIndicator AS SUBROGATIONELIGIBLEINDICATOR\n\tFROM Exp_Determine_AK\n),\nSQ_claimant_coverage_detail AS (\n\tSELECT \r\n\ta.claimant_cov_det_id\r\n\t, a.claim_party_occurrence_ak_id\r\n\t, a.loc_unit_num\r\n\t, a.sub_loc_unit_num\r\n\t, a.ins_line\r\n\t, a.risk_unit_grp\r\n\t, a.risk_unit_grp_seq_num\r\n\t, a.risk_unit\r\n\t, a.risk_unit_seq_num\r\n\t, a.major_peril_code\r\n\t, a.major_peril_seq\r\n\t, a.pms_loss_disability\r\n\t, a.reserve_ctgry\r\n\t, a.cause_of_loss\r\n\t, a.pms_mbr\r\n\t, a.pms_type_exposure\r\n\t, a.offset_onset_ind\r\n\t, a.eff_from_date\r\n\t, a.eff_to_date\r\n\t, a.source_sys_id \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  DBO.claimant_coverage_detail b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t\t    AND a.claimant_cov_det_ak_id = b.claimant_cov_det_ak_id\r\n\t      and a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.claimant_cov_det_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.claimant_cov_det_ak_id, a.eff_from_date desc\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tclaim_party_occurrence_ak_id,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\tpms_loss_disability,\n\treserve_ctgry AS pms_reserve_ctgry,\n\tcause_of_loss AS pms_loss_cause,\n\tpms_mbr,\n\tpms_type_exposure,\n\toffset_onset_ind,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- claim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id and\r\n\t-- loc_unit_num  = v_PREV_ROW_loc_unit_num and\r\n\t-- sub_loc_unit_num = v_PREV_ROW_sub_loc_unit_num and\r\n\t-- ins_line = v_PREV_ROW_ins_line and\r\n\t-- risk_unit_grp = v_PREV_ROW_risk_unit_grp and\r\n\t-- risk_unit_grp_seq_num = v_PREV_ROW_risk_unit_grp_seq_num and\r\n\t-- risk_unit = v_PREV_ROW_risk_unit and\r\n\t-- risk_unit_seq_num = v_PREV_ROW_risk_unit_seq_num and\r\n\t-- major_peril_code= v_PREV_ROW_major_peril_code and\r\n\t-- major_peril_seq = v_PREV_ROW_major_peril_seq and\r\n\t-- pms_loss_disability = v_PREV_ROW_pms_loss_disability and\r\n\t-- pms_reserve_ctgry = v_PREV_ROW_pms_reserve_ctgry and\r\n\t-- pms_loss_cause = v_PREV_ROW_pms_loss_cause and\r\n\t-- pms_mbr = v_PREV_ROW_pms_mbr and\r\n\t-- pms_type_exposure = v_PREV_ROW_type_exposure and\r\n\t-- source_sys_id = v_PREV_ROW_source_sys_id\r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1)\r\n\t-- ,orig_eff_to_date)\n\tDECODE(TRUE,\n\t\tclaim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id AND loc_unit_num = v_PREV_ROW_loc_unit_num AND sub_loc_unit_num = v_PREV_ROW_sub_loc_unit_num AND ins_line = v_PREV_ROW_ins_line AND risk_unit_grp = v_PREV_ROW_risk_unit_grp AND risk_unit_grp_seq_num = v_PREV_ROW_risk_unit_grp_seq_num AND risk_unit = v_PREV_ROW_risk_unit AND risk_unit_seq_num = v_PREV_ROW_risk_unit_seq_num AND major_peril_code = v_PREV_ROW_major_peril_code AND major_peril_seq = v_PREV_ROW_major_peril_seq AND pms_loss_disability = v_PREV_ROW_pms_loss_disability AND pms_reserve_ctgry = v_PREV_ROW_pms_reserve_ctgry AND pms_loss_cause = v_PREV_ROW_pms_loss_cause AND pms_mbr = v_PREV_ROW_pms_mbr AND pms_type_exposure = v_PREV_ROW_type_exposure AND source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_party_occurrence_ak_id AS v_PREV_ROW_claim_party_occurrence_ak_id,\n\tloc_unit_num AS v_PREV_ROW_loc_unit_num,\n\tsub_loc_unit_num AS v_PREV_ROW_sub_loc_unit_num,\n\tins_line AS v_PREV_ROW_ins_line,\n\trisk_unit_grp AS v_PREV_ROW_risk_unit_grp,\n\trisk_unit_grp_seq_num AS v_PREV_ROW_risk_unit_grp_seq_num,\n\trisk_unit AS v_PREV_ROW_risk_unit,\n\trisk_unit_seq_num AS v_PREV_ROW_risk_unit_seq_num,\n\tmajor_peril_code AS v_PREV_ROW_major_peril_code,\n\tmajor_peril_seq AS v_PREV_ROW_major_peril_seq,\n\tpms_loss_disability AS v_PREV_ROW_pms_loss_disability,\n\tpms_reserve_ctgry AS v_PREV_ROW_pms_reserve_ctgry,\n\tpms_loss_cause AS v_PREV_ROW_pms_loss_cause,\n\tpms_mbr AS v_PREV_ROW_pms_mbr,\n\tpms_type_exposure AS v_PREV_ROW_type_exposure,\n\toffset_onset_ind AS v_PREV_ROW_offset_onset_ind,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_snapshot_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claimant_coverage_detail\n),\nFIL_Claimant_Coverage_Detail AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM FIL_Claimant_Coverage_Detail\n),\nclaimant_coverage_detail_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail AS T\n\tUSING UPD_Update_Target AS S\n\tON T.claimant_cov_det_id = S.claimant_cov_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246504"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905521"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604347"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:13:41"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:19:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_STAGE"
            },
            "MERGED_SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED AND PMS"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}