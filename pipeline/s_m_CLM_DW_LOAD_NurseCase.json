{
    "name": "s_m_CLM_DW_LOAD_NurseCase",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_NurseCase",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clmt_nurse_manage_stage AS (\n\tSELECT\n\t\tClmtNurseManageStageId,\n\t\tclmt_nurse_manage_id,\n\t\ttch_claim_nbr,\n\t\ttch_client_id,\n\t\tpms_policy_sym,\n\t\tpms_policy_num,\n\t\tpms_policy_mod,\n\t\tpms_date_of_loss,\n\t\tpms_loss_occurence,\n\t\tpms_loss_claimant,\n\t\tsource_system_id,\n\t\testimated_savings_amount,\n\t\tcreated_ts,\n\t\tcreated_user_id,\n\t\tmodified_ts,\n\t\tmodified_user_id,\n\t\tExtractDate,\n\t\tSourceSystemId\n\tFROM clmt_nurse_manage_stage\n),\nEXP_Src_Values AS (\n\tSELECT\n\tClmtNurseManageStageId,\n\tclmt_nurse_manage_id,\n\t-- *INF*: iif(isnull(ltrim(rtrim(clmt_nurse_manage_id))), -1, clmt_nurse_manage_id)\n\tIFF(ltrim(rtrim(clmt_nurse_manage_id)) IS NULL, - 1, clmt_nurse_manage_id) AS o_clmt_nurse_manage_id,\n\ttch_claim_nbr,\n\ttch_client_id,\n\tpms_policy_sym,\n\tpms_policy_num,\n\tpms_policy_mod,\n\tpms_date_of_loss,\n\tpms_loss_occurence,\n\tpms_loss_claimant,\n\t-- *INF*: to_char(pms_date_of_loss,'MMDDYYYY')\n\tto_char(pms_date_of_loss, 'MMDDYYYY') AS v_pms_date_of_loss,\n\t-- *INF*: IIF(length(tch_claim_nbr)>0 ,ltrim(rtrim(tch_claim_nbr)),\r\n\t-- \r\n\t-- IIF(length(pms_policy_sym)>0,\r\n\t-- ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss ||  pms_loss_occurence)),\r\n\t-- \r\n\t-- 'N/A'))\n\tIFF(\n\t    length(tch_claim_nbr) > 0, ltrim(rtrim(tch_claim_nbr)),\n\t    IFF(\n\t        length(pms_policy_sym) > 0,\n\t        ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss || pms_loss_occurence)),\n\t        'N/A'\n\t    )\n\t) AS o_claim_nbr,\n\t-- *INF*: IIF(length(tch_claim_nbr)>0,ltrim(rtrim(tch_client_id)),\r\n\t-- \r\n\t-- IIF(length(pms_policy_sym)>0,\r\n\t-- ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss ||  pms_loss_occurence || pms_loss_claimant || 'CMT')),\r\n\t-- \r\n\t-- 'N/A'))\n\tIFF(\n\t    length(tch_claim_nbr) > 0, ltrim(rtrim(tch_client_id)),\n\t    IFF(\n\t        length(pms_policy_sym) > 0,\n\t        ltrim(rtrim(pms_policy_sym || pms_policy_num || pms_policy_mod || v_pms_date_of_loss || pms_loss_occurence || pms_loss_claimant || 'CMT')),\n\t        'N/A'\n\t    )\n\t) AS o_client_id,\n\tsource_system_id,\n\testimated_savings_amount,\n\t-- *INF*: IIF(isnull(ltrim(rtrim(estimated_savings_amount))),0,estimated_savings_amount)\n\tIFF(ltrim(rtrim(estimated_savings_amount)) IS NULL, 0, estimated_savings_amount) AS o_estimated_savings_amount\n\tFROM SQ_clmt_nurse_manage_stage\n),\nLKP_claim_party_occurrence AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT\r\n\t\tCPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num,\r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO\r\n\t\t\r\n\t\tWHERE\r\n\t\tCO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id\r\n\t\tAND\r\n\t\tCP.claim_party_ak_id = CPO.claim_party_ak_id\r\n\t\tAND\r\n\t\tCPO.claim_party_role_code in ('CLMT', 'CMT')\r\n\t\tAND\r\n\t\tCO.crrnt_snpsht_flag = 1\r\n\t\tAND\r\n\t\tCP.crrnt_snpsht_flag = 1\r\n\t\tAND\r\n\t\tCPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nEXP_Lkp_Default AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\t-- *INF*: iif(isnull(claim_party_occurrence_ak_id), -1, claim_party_occurrence_ak_id)\n\tIFF(claim_party_occurrence_ak_id IS NULL, - 1, claim_party_occurrence_ak_id) AS o_claim_party_occurence_ak_id\n\tFROM LKP_claim_party_occurrence\n),\nLKP_NurseCase AS (\n\tSELECT\n\tNurseCaseId,\n\tclaim_party_occurrence_ak_id,\n\tclmt_nurse_manage_id,\n\tEstimatedSavingsAmount,\n\tNurseCaseAkId\n\tFROM (\n\t\tSELECT\r\n\t\tN.NurseCaseId as NurseCaseId, \r\n\t\tN.clmt_nurse_manage_id as clmt_nurse_manage_id, \r\n\t\tN.EstimatedSavingsAmount as EstimatedSavingsAmount,\r\n\t\tN.NurseCaseAkId as NurseCaseAkId, \r\n\t\tN.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id\r\n\t\t\r\n\t\tFROM\r\n\t\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseCase N\r\n\t\t\r\n\t\twhere\r\n\t\tN.CurrentSnapshotFlag= 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,clmt_nurse_manage_id ORDER BY NurseCaseId) = 1\n),\nEXP_TargetLkp_Detect_Changes AS (\n\tSELECT\n\tLKP_NurseCase.NurseCaseId AS Lkp_NurseCaseId,\n\tLKP_NurseCase.claim_party_occurrence_ak_id AS Lkp_claim_party_occurrence_ak_id,\n\tLKP_NurseCase.clmt_nurse_manage_id AS Lkp_clmt_nurse_manage_id,\n\tLKP_NurseCase.EstimatedSavingsAmount AS Lkp_EstimatedSavingsAmount,\n\t-- *INF*: iif(isnull(Lkp_NurseCaseId),'NEW',\r\n\t--   \r\n\t--   iif(\r\n\t--   \r\n\t--       LTRIM(RTRIM(Lkp_claim_party_occurrence_ak_id)) != LTRIM(RTRIM(claim_party_occurrence_ak_id))\r\n\t-- \r\n\t--  or\r\n\t--   \r\n\t-- --        LTRIM(RTRIM(Lkp_NurseCaseAkId)) != LTRIM(RTRIM(NurseCaseAkId))\r\n\t-- \r\n\t-- --or\r\n\t--   \r\n\t--         LTRIM(RTRIM(Lkp_clmt_nurse_manage_id)) != LTRIM(RTRIM(clmt_nurse_manage_id))\r\n\t-- \r\n\t-- or\r\n\t--   \r\n\t--         LTRIM(RTRIM(Lkp_EstimatedSavingsAmount)) != LTRIM(RTRIM(EstimatedSavingsAmount)),\r\n\t--         \r\n\t--         'UPDATE', 'NOCHANGE')\r\n\t--    )\n\tIFF(\n\t    Lkp_NurseCaseId IS NULL, 'NEW',\n\t    IFF(\n\t        LTRIM(RTRIM(Lkp_claim_party_occurrence_ak_id)) != LTRIM(RTRIM(claim_party_occurrence_ak_id))\n\t        or LTRIM(RTRIM(Lkp_clmt_nurse_manage_id)) != LTRIM(RTRIM(clmt_nurse_manage_id))\n\t        or LTRIM(RTRIM(Lkp_EstimatedSavingsAmount)) != LTRIM(RTRIM(EstimatedSavingsAmount)),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS v_ChangedFlag,\n\tv_ChangedFlag AS ChangedFlag,\n\t-- *INF*: iif(v_ChangedFlag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(\n\t    v_ChangedFlag = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    CURRENT_TIMESTAMP\n\t) AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS ExpirationDate,\n\tSYSDATE AS CreatedDate,\n\tSYSDATE AS ModifiedDate,\n\tEXP_Lkp_Default.o_claim_party_occurence_ak_id AS claim_party_occurrence_ak_id,\n\tEXP_Src_Values.o_estimated_savings_amount AS EstimatedSavingsAmount,\n\t1 AS CurrentSnapshotFlag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditId,\n\tEXP_Src_Values.o_clmt_nurse_manage_id AS clmt_nurse_manage_id,\n\tEXP_Src_Values.source_system_id AS SourceSystemId,\n\tLKP_NurseCase.NurseCaseAkId AS Lkp_NurseCaseAkId\n\tFROM EXP_Lkp_Default\n\t -- Manually join with EXP_Src_Values\n\tLEFT JOIN LKP_NurseCase\n\tON LKP_NurseCase.claim_party_occurrence_ak_id = EXP_Lkp_Default.o_claim_party_occurence_ak_id AND LKP_NurseCase.clmt_nurse_manage_id = EXP_Src_Values.o_clmt_nurse_manage_id\n),\nFIL_Lkp_Records AS (\n\tSELECT\n\tChangedFlag, \n\tEffectiveDate, \n\tExpirationDate, \n\tCreatedDate, \n\tModifiedDate, \n\tclaim_party_occurrence_ak_id, \n\tEstimatedSavingsAmount, \n\tCurrentSnapshotFlag, \n\tAuditId, \n\tclmt_nurse_manage_id, \n\tSourceSystemId, \n\tLkp_NurseCaseAkId\n\tFROM EXP_TargetLkp_Detect_Changes\n\tWHERE ChangedFlag = 'NEW' or ChangedFlag = 'UPDATE'\n),\nSEQ_NurseCase AS (\n\tCREATE SEQUENCE SEQ_NurseCase\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_AKid_Insert_Target AS (\n\tSELECT\n\tChangedFlag,\n\t-- *INF*: IIF(ChangedFlag='NEW', NEXTVAL, Lkp_NurseCaseAkId)\n\tIFF(ChangedFlag = 'NEW', NEXTVAL, Lkp_NurseCaseAkId) AS NurseCaseAkId,\n\tEffectiveDate,\n\tExpirationDate,\n\tCreatedDate,\n\tModifiedDate,\n\tclaim_party_occurrence_ak_id,\n\tEstimatedSavingsAmount,\n\tCurrentSnapshotFlag,\n\tAuditId,\n\tclmt_nurse_manage_id,\n\tSourceSystemId,\n\tLkp_NurseCaseAkId,\n\tSEQ_NurseCase.NEXTVAL\n\tFROM FIL_Lkp_Records\n),\nNurseCase_Insert AS (\n\tINSERT INTO NurseCase\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemId, CreatedDate, ModifiedDate, NurseCaseAkId, claim_party_occurrence_ak_id, clmt_nurse_manage_id, EstimatedSavingsAmount)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tNURSECASEAKID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tCLMT_NURSE_MANAGE_ID, \n\tESTIMATEDSAVINGSAMOUNT\n\tFROM EXP_AKid_Insert_Target\n),\nSQ_NurseCase AS (\n\tSELECT\r\n\tA.NurseCaseId,\r\n\tA.EffectiveDate,\r\n\tA.ExpirationDate,\r\n\tA.NurseCaseAkId \r\n\t\r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseCase A\r\n\t\r\n\tWhere Exists \r\n\t   ( \r\n\tSELECT 1\r\n\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.NurseCase B\r\n\t\r\n\twhere\r\n\tB.CurrentSnapshotFlag =1\r\n\tAND\r\n\tA.NurseCaseAkId = B.NurseCaseAkId\r\n\t\r\n\tgroup by \r\n\tB.NurseCaseAkId\r\n\t\r\n\thaving\r\n\tcount(*) > 1 \r\n\t   )\r\n\t\r\n\tAND\r\n\tA.CurrentSnapshotFlag = 1\r\n\t\r\n\torder by \r\n\tA.NurseCaseAkId, \r\n\tA.EffectiveDate DESC\n),\nEXP_Lag_ExpirationDate AS (\n\tSELECT\n\tNurseCaseId,\n\tEffectiveDate,\n\tExpirationDate AS orig_ExpirationDate,\n\t-- *INF*: DECODE(TRUE, \r\n\t-- NurseCaseAkId= v_PREV_ROW_NurseCaseAkId, ADD_TO_DATE(v_PREV_ROW_EffectiveDate,'SS',-1),\r\n\t-- \torig_ExpirationDate)\n\tDECODE(\n\t    TRUE,\n\t    NurseCaseAkId = v_PREV_ROW_NurseCaseAkId, DATEADD(SECOND,- 1,v_PREV_ROW_EffectiveDate),\n\t    orig_ExpirationDate\n\t) AS v_ExpirationDate,\n\tv_ExpirationDate AS ExpirationDate,\n\tEffectiveDate AS v_PREV_ROW_EffectiveDate,\n\tNurseCaseAkId AS v_PREV_ROW_NurseCaseAkId,\n\tSYSDATE AS ModifiedDate,\n\t0 AS CurrentSnapshotFlag,\n\tNurseCaseAkId\n\tFROM SQ_NurseCase\n),\nFIL_FirstRowAKid AS (\n\tSELECT\n\tNurseCaseId, \n\torig_ExpirationDate, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM EXP_Lag_ExpirationDate\n\tWHERE orig_ExpirationDate != ExpirationDate\n),\nUPD_NurseCase AS (\n\tSELECT\n\tNurseCaseId, \n\tExpirationDate, \n\tModifiedDate, \n\tCurrentSnapshotFlag\n\tFROM FIL_FirstRowAKid\n),\nNurseCase_Update AS (\n\tMERGE INTO NurseCase AS T\n\tUSING UPD_NurseCase AS S\n\tON T.NurseCaseId = S.NurseCaseId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.CurrentSnapshotFlag = S.CurrentSnapshotFlag, T.ExpirationDate = S.ExpirationDate, T.ModifiedDate = S.ModifiedDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}