{
    "name": "s_m_POL_DW_LOAD_WorkPremiumTransactionRatingModifierBridge_CR",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DW_LOAD_WorkPremiumTransactionRatingModifierBr_00",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_ArchPif43NXCRStage_Location AS (\n\tSELECT\n\tIRPM,\n\tPolicyKey,\n\tLocationUnitNumber\n\tFROM (\n\t\tSELECT \r\n\t\tRTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule as PolicyKey,\r\n\t\tright('0000'+convert(varchar(10),PMDNXC1LocationNumber),4) as LocationUnitNumber,\r\n\t\tPMDNXC1ScheduleMod as IRPM\r\n\t\tFROM ArchPif43NXCRStage a\r\n\t\tjoin (\r\n\t\tselect distinct left(PremiumTransactionKey,12) PolicyKey from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction\r\n\t\twhere CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}') b\r\n\t\ton RTRIM(a.PifSymbol)+a.PifPolicyNumber+a.PifPolicyModule=b.PolicyKey\r\n\t\tWHERE ArchPif43NXCRStageId IN\r\n\t\t(SELECT MAX(ArchPif43NXCRStageId)\r\n\t\tFROM ArchPif43NXCRStage\r\n\t\twhere PMDNXC1SegmentStatus='A'\r\n\t\tGROUP BY RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,PMDNXC1LocationNumber,PMDNXC1SubLocationNumber)\r\n\t\tand PMDNXC1SegmentStatus='A'\r\n\t\torder by RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,\r\n\t\tright('0000'+convert(varchar(10),PMDNXC1LocationNumber),4),\r\n\t\tArchPif43NXCRStageId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,LocationUnitNumber ORDER BY IRPM) = 1\n),\nLKP_ArchPif43NXCRStage AS (\n\tSELECT\n\tIRPM,\n\tPolicyKey,\n\tLocationUnitNumber,\n\tSubLocationUnitNumber\n\tFROM (\n\t\tSELECT \r\n\t\tRTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule as PolicyKey,\r\n\t\tright('0000'+convert(varchar(10),PMDNXC1LocationNumber),4) as LocationUnitNumber,\r\n\t\tright('000'+convert(varchar(10),PMDNXC1SubLocationNumber),3) as SubLocationUnitNumber,\r\n\t\tPMDNXC1ScheduleMod as IRPM\r\n\t\tFROM ArchPif43NXCRStage a\r\n\t\tjoin (\r\n\t\tselect distinct left(PremiumTransactionKey,12) PolicyKey from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction\r\n\t\twhere CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}') b\r\n\t\ton RTRIM(a.PifSymbol)+a.PifPolicyNumber+a.PifPolicyModule=b.PolicyKey\r\n\t\tWHERE ArchPif43NXCRStageId IN\r\n\t\t(SELECT MAX(ArchPif43NXCRStageId)\r\n\t\tFROM ArchPif43NXCRStage\r\n\t\twhere PMDNXC1SegmentStatus='A'\r\n\t\tGROUP BY RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,PMDNXC1LocationNumber,PMDNXC1SubLocationNumber)\r\n\t\tand PMDNXC1SegmentStatus='A'\r\n\t\torder by RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,\r\n\t\tright('0000'+convert(varchar(10),PMDNXC1LocationNumber),4),\r\n\t\tright('000'+convert(varchar(10),PMDNXC1SubLocationNumber),3)\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,LocationUnitNumber,SubLocationUnitNumber ORDER BY IRPM) = 1\n),\nLKP_ArchPif43NXCRStage_Final AS (\n\tSELECT\n\tIRPM,\n\tPolicyKey\n\tFROM (\n\t\tSELECT \r\n\t\tRTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule as PolicyKey,\r\n\t\tPMDNXC1ScheduleMod as IRPM\r\n\t\tFROM ArchPif43NXCRStage a\r\n\t\tjoin (\r\n\t\tselect distinct left(PremiumTransactionKey,12) PolicyKey from @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction\r\n\t\twhere CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}') b\r\n\t\ton RTRIM(a.PifSymbol)+a.PifPolicyNumber+a.PifPolicyModule=b.PolicyKey\r\n\t\tWHERE ArchPIF43NXCRStageId IN\r\n\t\t(SELECT MAX(ArchPif43NXCRStageId)\r\n\t\tFROM ArchPif43NXCRStage\r\n\t\twhere PMDNXC1SegmentStatus='A'\r\n\t\tGROUP BY RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,PMDNXC1LocationNumber,PMDNXC1SubLocationNumber)\r\n\t\tand PMDNXC1SegmentStatus='A'\r\n\t\torder by RTRIM(pifsymbol)+pifpolicynumber+PifPolicyModule,\r\n\t\tArchPif43NXCRStageId\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey ORDER BY IRPM) = 1\n),\nSQ_PMS AS (\n\tselect P.pol_key,RL.LocationUnitNumber,SC.SubLocationUnitNumber,PT.PremiumTransactionAKID,PT.PremiumTransactionEnteredDate,PT.PremiumTransactionEffectiveDate,PC.TypeBureauCode,BS.BureauCode7,BS.BureauCode9,BS.BureauCode12\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.BureauStatisticalCode BS\r\n\tON\r\n\tBS.PremiumTransactionAKId=PT.PremiumTransactionAKId\r\n\tAND BS.CurrentSnapshotFlag=1\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\tON\r\n\tPT.StatisticalCoverageAKID = SC.StatisticalCoverageAKID \r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\tON\r\n\tSC.PolicyCoverageAKID = PC.PolicyCoverageAKID\r\n\tAND PC.InsuranceLine='CR'\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\tON\r\n\tRL.RiskLocationAKId=PC.RiskLocationAKId\r\n\tJOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\tON\r\n\tRL.PolicyAKID = P.pol_ak_id AND P.crrnt_snpsht_flag = 1\r\n\tAND P.pms_pol_lob_code<>'BND'\r\n\tJoin @{pipeline().parameters.SOURCE_TABLE_OWNER}.WorkPremiumTransaction WPT \r\n\tON PT.PremiumTransactionAKID=WPT.PremiumTransactionAKId\r\n\tWHERE PT.CurrentSnapshotFlag=1\r\n\tAND PT.SourceSystemID = 'PMS'\r\n\tAND PT.ReasonAmendedCode not in ('COL','CWO','Claw Back')\r\n\tAND PT.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\tAND PT.PremiumType= 'D' \r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_Modifiers AS (\n\tSELECT\n\tpol_key AS i_PolicyKey,\n\tLocationUnitNumber AS i_LocationUnitNumber,\n\tSubLocationUnitNumber AS i_SubLocationUnitNumber,\n\tPremiumTransactionAKID AS i_PremiumTransactionAKID,\n\tPremiumTransactionEnteredDate AS i_PremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tBureauCode7 AS i_BureauCode7,\n\tBureauCode9 AS i_BureauCode9,\n\tBureauCode12 AS i_BureauCode12,\n\t-- *INF*: IIF(i_LocationUnitNumber!='N/A',i_LocationUnitNumber,'0000')\n\tIFF(i_LocationUnitNumber != 'N/A', i_LocationUnitNumber, '0000') AS v_LocationUnitNumber,\n\t-- *INF*: IIF(i_SubLocationUnitNumber!='N/A',i_SubLocationUnitNumber,'000')\n\tIFF(i_SubLocationUnitNumber != 'N/A', i_SubLocationUnitNumber, '000') AS v_SubLocationUnitNumber,\n\t-- *INF*: DECODE(TRUE,i_BureauCode12='100' and i_TypeBureauCode='CR',1,\r\n\t-- i_BureauCode9='100' and i_TypeBureauCode='FT',1,\r\n\t-- i_BureauCode7='100' and i_TypeBureauCode='BT',1,\r\n\t-- 0)\n\tDECODE(\n\t    TRUE,\n\t    i_BureauCode12 = '100' and i_TypeBureauCode = 'CR', 1,\n\t    i_BureauCode9 = '100' and i_TypeBureauCode = 'FT', 1,\n\t    i_BureauCode7 = '100' and i_TypeBureauCode = 'BT', 1,\n\t    0\n\t) AS v_DefaultFlag,\n\t-- *INF*: IIF(v_DefaultFlag=0,\r\n\t-- :LKP.LKP_ArchPif43NXCRStage(i_PolicyKey,v_LocationUnitNumber,v_SubLocationUnitNumber),\r\n\t-- 1)\n\tIFF(\n\t    v_DefaultFlag = 0,\n\t    LKP_ARCHPIF43NXCRSTAGE_i_PolicyKey_v_LocationUnitNumber_v_SubLocationUnitNumber.IRPM,\n\t    1\n\t) AS v_Modifier,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier),v_Modifier,:LKP.LKP_ArchPif43NXCRStage_Location(i_PolicyKey,v_LocationUnitNumber))\n\tIFF(\n\t    v_Modifier IS NOT NULL, v_Modifier,\n\t    LKP_ARCHPIF43NXCRSTAGE_LOCATION_i_PolicyKey_v_LocationUnitNumber.IRPM\n\t) AS v_Modifier_Location,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier_Location),v_Modifier_Location,:LKP.LKP_ArchPif43NXCRStage_Final(i_PolicyKey))\n\tIFF(\n\t    v_Modifier_Location IS NOT NULL, v_Modifier_Location,\n\t    LKP_ARCHPIF43NXCRSTAGE_FINAL_i_PolicyKey.IRPM\n\t) AS v_Modifier_Final,\n\t-- *INF*: IIF(v_DefaultFlag=0,\r\n\t-- i_PolicyKey||'&CR&'||v_LocationUnitNumber||'&'||v_SubLocationUnitNumber,\r\n\t-- 'Default')\n\tIFF(\n\t    v_DefaultFlag = 0,\n\t    i_PolicyKey || '&CR&' || v_LocationUnitNumber || '&' || v_SubLocationUnitNumber,\n\t    'Default'\n\t) AS v_WorkRatingModifierKey,\n\ti_PremiumTransactionAKID AS o_PremiumTransactionID,\n\t-- *INF*: IIF(v_DefaultFlag=0,MD5(v_WorkRatingModifierKey),'Default')\n\tIFF(v_DefaultFlag = 0, MD5(v_WorkRatingModifierKey), 'Default') AS o_WorkRatingModifierHashKey,\n\tv_WorkRatingModifierKey AS o_WorkRatingModifierKey,\n\t-- *INF*: IIF(NOT ISNULL(v_Modifier_Final) AND v_Modifier_Final>0,v_Modifier_Final,1)\n\tIFF(v_Modifier_Final IS NULL AND v_Modifier_FinalNOT  > 0, v_Modifier_Final, 1) AS o_ScheduleModifiedFactor,\n\t-- *INF*: IIF(v_DefaultFlag=0,\r\n\t-- ADD_TO_DATE(TRUNC(GREATEST(i_PremiumTransactionEnteredDate,PremiumTransactionEffectiveDate),'DD'),'SS',86399),\r\n\t-- TO_DATE('18000101','YYYYMMDD'))\n\tIFF(\n\t    v_DefaultFlag = 0,\n\t    DATEADD(SECOND,86399,CAST(TRUNC(GREATEST(i_PremiumTransactionEnteredDate, PremiumTransactionEffectiveDate), 'DAY') AS TIMESTAMP_NTZ(0))),\n\t    TO_TIMESTAMP('18000101', 'YYYYMMDD')\n\t) AS o_PremiumTransactionBookedDate\n\tFROM SQ_PMS\n\tLEFT JOIN LKP_ARCHPIF43NXCRSTAGE LKP_ARCHPIF43NXCRSTAGE_i_PolicyKey_v_LocationUnitNumber_v_SubLocationUnitNumber\n\tON LKP_ARCHPIF43NXCRSTAGE_i_PolicyKey_v_LocationUnitNumber_v_SubLocationUnitNumber.PolicyKey = i_PolicyKey\n\tAND LKP_ARCHPIF43NXCRSTAGE_i_PolicyKey_v_LocationUnitNumber_v_SubLocationUnitNumber.LocationUnitNumber = v_LocationUnitNumber\n\tAND LKP_ARCHPIF43NXCRSTAGE_i_PolicyKey_v_LocationUnitNumber_v_SubLocationUnitNumber.SubLocationUnitNumber = v_SubLocationUnitNumber\n\n\tLEFT JOIN LKP_ARCHPIF43NXCRSTAGE_LOCATION LKP_ARCHPIF43NXCRSTAGE_LOCATION_i_PolicyKey_v_LocationUnitNumber\n\tON LKP_ARCHPIF43NXCRSTAGE_LOCATION_i_PolicyKey_v_LocationUnitNumber.PolicyKey = i_PolicyKey\n\tAND LKP_ARCHPIF43NXCRSTAGE_LOCATION_i_PolicyKey_v_LocationUnitNumber.LocationUnitNumber = v_LocationUnitNumber\n\n\tLEFT JOIN LKP_ARCHPIF43NXCRSTAGE_FINAL LKP_ARCHPIF43NXCRSTAGE_FINAL_i_PolicyKey\n\tON LKP_ARCHPIF43NXCRSTAGE_FINAL_i_PolicyKey.PolicyKey = i_PolicyKey\n\n),\nSRTTRANS AS (\n\tSELECT\n\tPremiumTransactionEffectiveDate, \n\to_PremiumTransactionID AS PremiumTransactionAKID, \n\to_WorkRatingModifierHashKey AS WorkRatingModifierHashKey, \n\to_WorkRatingModifierKey AS WorkRatingModifierKey, \n\to_ScheduleModifiedFactor AS ScheduleModifiedFactor, \n\to_PremiumTransactionBookedDate AS PremiumTransactionBookedDate\n\tFROM EXP_Modifiers\n\tORDER BY WorkRatingModifierHashKey ASC\n),\nAGGTRANS AS (\n\tSELECT\n\tPremiumTransactionEffectiveDate AS i_PremiumTransactionEffectiveDate,\n\tWorkRatingModifierHashKey,\n\tWorkRatingModifierKey,\n\tScheduleModifiedFactor,\n\tPremiumTransactionBookedDate AS i_PremiumTransactionBookedDate,\n\t-- *INF*: MIN(i_PremiumTransactionBookedDate)\n\tMIN(i_PremiumTransactionBookedDate) AS o_RunDate,\n\t-- *INF*: MIN(i_PremiumTransactionEffectiveDate)\n\tMIN(i_PremiumTransactionEffectiveDate) AS o_RatingModifierEffectiveDate\n\tFROM SRTTRANS\n\tGROUP BY WorkRatingModifierHashKey\n),\nLKP_WorkRatingModifierAKId AS (\n\tSELECT\n\tWorkRatingModifierAKId,\n\tWorkRatingModifierHashKey\n\tFROM (\n\t\tSELECT WorkRatingModifierAKId as WorkRatingModifierAKId, WorkRatingModifierHashKey as WorkRatingModifierHashKey FROM\r\n\t\t(SELECT WorkRatingModifierAKId, WorkRatingModifierHashKey FROM WorkRatingModifier a\r\n\t\twhere not exists (\r\n\t\tselect 1 from WorkRatingModifier b\r\n\t\twhere a.WorkRatingModifierAKId=b.WorkRatingModifierAKId\r\n\t\tand b.RunDate>a.RunDate)\r\n\t\tand a.SourceSystemId='PMS'\r\n\t\tand substring(WorkRatingModifierKey,charindex('&',WorkRatingModifierKey,1)+1,2)='CR'\r\n\t\tUNION ALL\r\n\t\tSELECT -1 as WorkRatingModifierAKId,'Default' AS WorkRatingModifierHashKey) A\r\n\t\torder by WorkRatingModifierHashKey\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkRatingModifierHashKey ORDER BY WorkRatingModifierAKId) = 1\n),\nSEQ_RatingModifier AS (\n\tCREATE SEQUENCE SEQ_RatingModifier\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXPTRANS AS (\n\tSELECT\n\tSEQ_RatingModifier.NEXTVAL AS i_NEXTVAL,\n\tLKP_WorkRatingModifierAKId.WorkRatingModifierAKId AS lkp_WorkRatingModifierAKId,\n\tAGGTRANS.WorkRatingModifierHashKey,\n\tAGGTRANS.WorkRatingModifierKey,\n\t1 AS OtherModifiedFactor,\n\tAGGTRANS.ScheduleModifiedFactor,\n\t1 AS ExperienceModifiedFactor,\n\tAGGTRANS.o_RunDate AS RunDate,\n\tAGGTRANS.o_RatingModifierEffectiveDate AS RatingModifierEffectiveDate,\n\t-- *INF*: IIF(ISNULL(lkp_WorkRatingModifierAKId),i_NEXTVAL,lkp_WorkRatingModifierAKId)\n\tIFF(lkp_WorkRatingModifierAKId IS NULL, i_NEXTVAL, lkp_WorkRatingModifierAKId) AS WorkRatingModifierAKId\n\tFROM AGGTRANS\n\tLEFT JOIN LKP_WorkRatingModifierAKId\n\tON LKP_WorkRatingModifierAKId.WorkRatingModifierHashKey = AGGTRANS.WorkRatingModifierHashKey\n),\nLKP_WorkRatingModifier AS (\n\tSELECT\n\tWorkRatingModifierHashKey,\n\tOtherModifiedFactor,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\tEffectiveDate,\n\tExpirationDate\n\tFROM (\n\t\tselect WorkRatingModifierHashKey as WorkRatingModifierHashKey,\r\n\t\tEffectiveDate as EffectiveDate,\r\n\t\tExpirationDate as ExpirationDate,\r\n\t\tOtherModifiedFactor as OtherModifiedFactor,\r\n\t\tScheduleModifiedFactor as ScheduleModifiedFactor,\r\n\t\tExperienceModifiedFactor as ExperienceModifiedFactor from\r\n\t\t(select WorkRatingModifierHashKey as WorkRatingModifierHashKey,\r\n\t\tRunDate as EffectiveDate,\r\n\t\tISNULL(lead(RunDate,1) over (partition by WorkRatingModifierAKId order by RunDate),'2100-12-31 23:59:59') as ExpirationDate,\r\n\t\tOtherModifiedFactor as OtherModifiedFactor,\r\n\t\tScheduleModifiedFactor as ScheduleModifiedFactor,\r\n\t\tExperienceModifiedFactor as ExperienceModifiedFactor\r\n\t\tfrom WorkRatingModifier\r\n\t\twhere WorkRatingModifierAKId<>-1\r\n\t\tand SourceSystemId='PMS'\r\n\t\tand substring(WorkRatingModifierKey,charindex('&',WorkRatingModifierKey,1)+1,2)='CR'\r\n\t\tunion all\r\n\t\tselect 'Default' as WorkRatingModifierHashKey,\r\n\t\t'1800-1-1 00:00:00' as EffectiveDate,\r\n\t\t'2100-12-31 23:59:59' as ExpirationDate,\r\n\t\t1 as OtherModifiedFactor,\r\n\t\t1 as ScheduleModifiedFactor,\r\n\t\t1 as ExperienceModifiedFactor) a\r\n\t\torder by WorkRatingModifierHashKey,EffectiveDate ,ExpirationDate\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY WorkRatingModifierHashKey,EffectiveDate,ExpirationDate ORDER BY WorkRatingModifierHashKey) = 1\n),\nEXP_RatingModifier AS (\n\tSELECT\n\tLKP_WorkRatingModifier.WorkRatingModifierHashKey AS lkp_WorkRatingModifierHashKey,\n\tLKP_WorkRatingModifier.OtherModifiedFactor AS lkp_OtherModifiedFactor,\n\tLKP_WorkRatingModifier.ScheduleModifiedFactor AS lkp_ScheduleModifiedFactor,\n\tLKP_WorkRatingModifier.ExperienceModifiedFactor AS lkp_ExperienceModifiedFactor,\n\tLKP_WorkRatingModifier.EffectiveDate AS lkp_EffectiveDate,\n\tEXPTRANS.RunDate AS i_RunDate,\n\tEXPTRANS.WorkRatingModifierAKId,\n\tEXPTRANS.WorkRatingModifierHashKey,\n\tEXPTRANS.WorkRatingModifierKey,\n\tEXPTRANS.RatingModifierEffectiveDate,\n\tEXPTRANS.OtherModifiedFactor,\n\tEXPTRANS.ScheduleModifiedFactor,\n\tEXPTRANS.ExperienceModifiedFactor,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(lkp_WorkRatingModifierHashKey),'NEW',\r\n\t-- lkp_EffectiveDate=i_RunDate,'NOCHANGE',\r\n\t-- lkp_OtherModifiedFactor!=OtherModifiedFactor,'NEW',\r\n\t-- lkp_ScheduleModifiedFactor!=ScheduleModifiedFactor,'NEW',\r\n\t-- lkp_ExperienceModifiedFactor!=ExperienceModifiedFactor,'NEW',\r\n\t-- 'NOCHANGE')\n\tDECODE(\n\t    TRUE,\n\t    lkp_WorkRatingModifierHashKey IS NULL, 'NEW',\n\t    lkp_EffectiveDate = i_RunDate, 'NOCHANGE',\n\t    lkp_OtherModifiedFactor != OtherModifiedFactor, 'NEW',\n\t    lkp_ScheduleModifiedFactor != ScheduleModifiedFactor, 'NEW',\n\t    lkp_ExperienceModifiedFactor != ExperienceModifiedFactor, 'NEW',\n\t    'NOCHANGE'\n\t) AS v_ChangeFlag,\n\t-- *INF*: IIF(v_ChangeFlag='NEW',i_RunDate,lkp_EffectiveDate)\n\tIFF(v_ChangeFlag = 'NEW', i_RunDate, lkp_EffectiveDate) AS o_RunDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\tv_ChangeFlag AS o_ChangeFlag,\n\t-- *INF*: TO_DATE('01/01/1800 0','MM/DD/YYYY SSSSS')\n\tTO_TIMESTAMP('01/01/1800 0', 'MM/DD/YYYY SSSSS') AS EffectiveDate,\n\t-- *INF*: TO_DATE('12/31/2100 86399','MM/DD/YYYY SSSSS')\n\tTO_TIMESTAMP('12/31/2100 86399', 'MM/DD/YYYY SSSSS') AS ExpirationDate,\n\t'1' AS CurrentSnapshotFlag\n\tFROM EXPTRANS\n\tLEFT JOIN LKP_WorkRatingModifier\n\tON LKP_WorkRatingModifier.WorkRatingModifierHashKey = EXPTRANS.WorkRatingModifierHashKey AND LKP_WorkRatingModifier.EffectiveDate <= EXPTRANS.RunDate AND LKP_WorkRatingModifier.ExpirationDate > EXPTRANS.RunDate\n),\nRTR_RatingModifier AS (\n\tSELECT\n\to_AuditID AS AuditId,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\to_RunDate AS RunDate,\n\tWorkRatingModifierAKId,\n\tWorkRatingModifierHashKey,\n\tWorkRatingModifierKey,\n\tRatingModifierEffectiveDate,\n\tOtherModifiedFactor,\n\tScheduleModifiedFactor,\n\tExperienceModifiedFactor,\n\to_ChangeFlag AS ChangeFlag,\n\tEffectiveDate,\n\tExpirationDate,\n\tCurrentSnapshotFlag\n\tFROM EXP_RatingModifier\n),\nRTR_RatingModifier_INSERT AS (SELECT * FROM RTR_RatingModifier WHERE ChangeFlag='NEW'),\nWorkRatingModifier AS (\n\n\t------------ PRE SQL ----------\n\tIF NOT EXISTS (\r\n\tSELECT 1 FROM WorkRatingModifier\r\n\tWHERE WorkRatingModifierAKId=-1)\r\n\tINSERT INTO WorkRatingModifier\r\n\tSELECT 1 as CurrentSnapshotFlag,\r\n\t0 AS AuditId,\r\n\t'1800-01-01 00:00:00' AS EffectiveDate,\r\n\t'2100-12-31 23:59:59' AS ExpirationDate,\r\n\t'PMS' AS SourceSystemID,\r\n\tGETDATE() AS CreatedDate,\r\n\tGETDATE() AS ModifiedDate,\r\n\t'1800-1-1' AS RunDate,\r\n\t-1 AS WorkRatingModifierAKId,\r\n\t'Default' AS WorkRatingModifierHashKey,\r\n\t'Default' AS WorkRatingModifierKey,\r\n\t'1800-1-1' AS RatingModifierEffectiveDate,\r\n\t1 AS OtherModifiedFactor,\r\n\t1 AS ScheduleModifiedFactor,\r\n\t1 AS ExperienceModifiedFactor\n\t-------------------------------\n\n\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkRatingModifier\n\t(CurrentSnapshotFlag, AuditId, EffectiveDate, ExpirationDate, SourceSystemID, CreatedDate, ModifiedDate, RunDate, WorkRatingModifierAKId, WorkRatingModifierHashKey, WorkRatingModifierKey, RatingModifierEffectiveDate, OtherModifiedFactor, ScheduleModifiedFactor, ExperienceModifiedFactor)\n\tSELECT \n\tCURRENTSNAPSHOTFLAG, \n\tAUDITID, \n\tEFFECTIVEDATE, \n\tEXPIRATIONDATE, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tRUNDATE, \n\tWORKRATINGMODIFIERAKID, \n\tWORKRATINGMODIFIERHASHKEY, \n\tWORKRATINGMODIFIERKEY, \n\tRATINGMODIFIEREFFECTIVEDATE, \n\tOTHERMODIFIEDFACTOR, \n\tSCHEDULEMODIFIEDFACTOR, \n\tEXPERIENCEMODIFIEDFACTOR\n\tFROM RTR_RatingModifier_INSERT\n),\nJNRTRANS AS (SELECT\n\tSRTTRANS.PremiumTransactionAKID, \n\tSRTTRANS.WorkRatingModifierHashKey AS i_WorkRatingModifierHashKey, \n\tEXP_RatingModifier.WorkRatingModifierAKId, \n\tEXP_RatingModifier.WorkRatingModifierHashKey, \n\tEXP_RatingModifier.o_RunDate AS RunDate\n\tFROM SRTTRANS\n\tINNER JOIN EXP_RatingModifier\n\tON EXP_RatingModifier.WorkRatingModifierHashKey = SRTTRANS.WorkRatingModifierHashKey\n),\nLKP_WorkPremiumTransactionRatingModifierBridge AS (\n\tSELECT\n\tPremiumTransactionAKID\n\tFROM (\n\t\tSELECT A.PremiumTransactionAKId as PremiumTransactionAKId FROM @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionRatingModifierBridge A\r\n\t\tJOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransaction C\r\n\t\tON A.PremiumTransactionAKId=C.PremiumTransactionAKId\r\n\t\tand c.createddate>='@{pipeline().parameters.SELECTION_START_TS}'\r\n\t\tAND C.SourceSystemId='PMS'\r\n\t\tAND A.SourceSystemId='PMS'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKID ORDER BY PremiumTransactionAKID) = 1\n),\nEXP_DetectChanges AS (\n\tSELECT\n\tLKP_WorkPremiumTransactionRatingModifierBridge.PremiumTransactionAKID AS lkp_PremiumTransactionID,\n\tJNRTRANS.PremiumTransactionAKID,\n\tJNRTRANS.WorkRatingModifierAKId,\n\tJNRTRANS.RunDate,\n\t-1 AS o_PremiumMasterCalcId,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS o_AuditID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS o_SourceSystemID,\n\tSYSDATE AS o_CreatedDate,\n\tSYSDATE AS o_ModifiedDate,\n\t-- *INF*: IIF(ISNULL(lkp_PremiumTransactionID),'NEW','NOCHANGE')\n\tIFF(lkp_PremiumTransactionID IS NULL, 'NEW', 'NOCHANGE') AS o_ChangeFlag\n\tFROM JNRTRANS\n\tLEFT JOIN LKP_WorkPremiumTransactionRatingModifierBridge\n\tON LKP_WorkPremiumTransactionRatingModifierBridge.PremiumTransactionAKID = JNRTRANS.PremiumTransactionAKID\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tPremiumTransactionAKID AS PremiumTransactionID,\n\to_AuditID AS AuditID,\n\to_SourceSystemID AS SourceSystemID,\n\to_CreatedDate AS CreatedDate,\n\to_ModifiedDate AS ModifiedDate,\n\tWorkRatingModifierAKId,\n\tRunDate,\n\to_ChangeFlag AS ChangeFlag,\n\to_PremiumMasterCalcId\n\tFROM EXP_DetectChanges\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE ChangeFlag='NEW'),\nWorkPremiumTransactionRatingModifierBridge AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.WorkPremiumTransactionRatingModifierBridge\n\t(PremiumMasterCalculationId, PremiumTransactionAKId, AuditId, SourceSystemID, CreatedDate, ModifiedDate, WorkRatingModifierAKId, RunDate)\n\tSELECT \n\to_PremiumMasterCalcId AS PREMIUMMASTERCALCULATIONID, \n\tPremiumTransactionID AS PREMIUMTRANSACTIONAKID, \n\tAuditID AS AUDITID, \n\tSOURCESYSTEMID, \n\tCREATEDDATE, \n\tMODIFIEDDATE, \n\tWORKRATINGMODIFIERAKID, \n\tRUNDATE\n\tFROM RTR_INSERT_UPDATE_INSERT\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataWarehouse/"
        },
        "annotations": []
    }
}