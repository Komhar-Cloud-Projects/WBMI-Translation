{
    "name": "s_m_POL_DM_LOAD_EarnedPremiumMonthlyFact",
    "properties": {
        "activities": [
            {
                "name": "m_POL_DM_LOAD_EarnedPremiumMonthlyFact",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_calender_dim AS (\n\tSELECT\n\tclndr_id,\n\tclndr_date\n\tFROM (\n\t\tSELECT \n\t\t\tclndr_id,\n\t\t\tclndr_date\n\t\tFROM calendar_dim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY clndr_date ORDER BY clndr_id) = 1\n),\nLKP_CoverageDetailDim AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tPremiumTransactionAKId\n\tFROM (\n\t\tselect CDD.CoverageDetailDimId as CoverageDetailDimId, \r\n\t\tPT.PremiumTransactionAKId as PremiumTransactionAKId\r\n\t\tfrom @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction PT\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\ton  PT.PremiumTransactionID=CDD.EDWPremiumTransactionPKID\r\n\t\twhere exists (\r\n\t\tselect 1 from @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\t\twhere EPMC.PremiumTransactionAKId=PT.PremiumTransactionAKId\r\n\t\tand EPMC.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}')\r\n\t\tor '@{pipeline().parameters.SELECTION_START_TS}'<='01/01/1800 00:00:00'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionAKId ORDER BY CoverageDetailDimId) = 1\n),\nLKP_InsuranceReferenceCoverageDim_PMS AS (\n\tSELECT\n\tInsuranceReferenceCoverageDimId,\n\tInsuranceLineCode,\n\tPmsRiskUnitGroupCode,\n\tPmsRiskUnitCode,\n\tPmsMajorPerilCode,\n\tPmsProductTypeCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\tInsuranceLineCode,\n\t\t\tPmsRiskUnitGroupCode,\n\t\t\tPmsRiskUnitCode,\n\t\t\tPmsMajorPerilCode,\n\t\t\tPmsProductTypeCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceCoverageDim\n\t\tWHERE DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceLineCode,PmsRiskUnitGroupCode,PmsRiskUnitCode,PmsMajorPerilCode,PmsProductTypeCode ORDER BY InsuranceReferenceCoverageDimId) = 1\n),\nlkp_sup_reason_amended_code AS (\n\tSELECT\n\tStandardReasonAmendedCode,\n\trsn_amended_code\n\tFROM (\n\t\tSELECT StandardReasonAmendedCode as StandardReasonAmendedCode,\r\n\t\tLOWER(rsn_amended_code) as rsn_amended_code\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_reason_amended_code\r\n\t\tWHERE crrnt_snpsht_flag=1 and source_sys_id='DCT'\r\n\t\tORDER BY LOWER(rsn_amended_code)\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY rsn_amended_code ORDER BY StandardReasonAmendedCode) = 1\n),\nLKP_sup_premium_transaction_code AS (\n\tSELECT\n\tStandardPremiumTransactionCode,\n\tsource_sys_id,\n\tprem_trans_code\n\tFROM (\n\t\tSELECT \n\t\t\tStandardPremiumTransactionCode,\n\t\t\tsource_sys_id,\n\t\t\tprem_trans_code\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_premium_transaction_code\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY source_sys_id,prem_trans_code ORDER BY StandardPremiumTransactionCode) = 1\n),\nLKP_InsuranceReferenceCoverageDim_DCT AS (\n\tSELECT\n\tInsuranceReferenceCoverageDimId,\n\tDctRiskTypeCode,\n\tDctCoverageTypeCode,\n\tInsuranceLineCode,\n\tDctPerilGroup,\n\tDctSubCoverageTypeCode,\n\tDctCoverageVersion\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceCoverageDimId,\n\t\t\tDctRiskTypeCode,\n\t\t\tDctCoverageTypeCode,\n\t\t\tInsuranceLineCode,\n\t\t\tDctPerilGroup,\n\t\t\tDctSubCoverageTypeCode,\n\t\t\tDctCoverageVersion\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceCoverageDim\n\t\tWHERE NOT (DctRiskTypeCode='N/A' AND DctCoverageTypeCode='N/A' AND DctPerilGroup='N/A' AND DctSubCoverageTypeCode='N/A' AND DctCoverageVersion='N/A')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY DctRiskTypeCode,DctCoverageTypeCode,InsuranceLineCode,DctPerilGroup,DctSubCoverageTypeCode,DctCoverageVersion ORDER BY InsuranceReferenceCoverageDimId) = 1\n),\nLKP_CoverageDetailDim_Hist AS (\n\tSELECT\n\tCoverageDetailDimId,\n\tStatisticalCoverageAKID\n\tFROM (\n\t\tselect CDD.CoverageDetailDimId as CoverageDetailDimId, \r\n\t\tEPMC.StatisticalCoverageAKID as StatisticalCoverageAKID\r\n\t\tfrom  @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\t\tjoin @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t\ton EPMC.StatisticalCoverageAKId=SC.StatisticalCoverageAKId\r\n\t\tjoin @{pipeline().parameters.TARGET_TABLE_OWNER}.CoverageDetailDim CDD\r\n\t\ton  SC.CoverageGUID=CDD.CoverageGUID and EPMC.PremiumTransactionEffectiveDate between CDD.EffectiveDate and CDD.ExpirationDate\r\n\t\twhere EPMC.CreatedDate>='@{pipeline().parameters.SELECTION_START_TS}' and EPMC.PremiumTransactionAKID=-1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StatisticalCoverageAKID ORDER BY CoverageDetailDimId) = 1\n),\nSQ_EarnedPremiumMonthlyCalculation AS (\n\tSELECT EPMC.EarnedPremiumMonthlyCalculationID, \r\n\tEPMC.CurrentSnapshotFlag, \r\n\tEPMC.AuditID, \r\n\tEPMC.EffectiveDate, \r\n\tEPMC.ExpirationDate, \r\n\tEPMC.SourceSystemID, \r\n\tEPMC.CreatedDate, \r\n\tEPMC.ModifiedDate, \r\n\tEPMC.PolicyKey, \r\n\tEPMC.AgencyAKID, \r\n\tEPMC.ContractCustomerAKID, \r\n\tEPMC.PolicyAKID, \r\n\tEPMC.PolicyCoverageAKID, \r\n\tEPMC.StatisticalCoverageAKID, \r\n\tEPMC.ReinsuranceCoverageAKID, \r\n\tEPMC.PremiumTransactionAKID, \r\n\tEPMC.BureauStatisticalCodeAKID, \r\n\tEPMC.PremiumMasterCalculationPKID, \r\n\tEPMC.PolicyEffectiveDate, \r\n\tEPMC.PolicyExpirationDate, \r\n\tEPMC.StatisticalCoverageCancellationDate, \r\n\tEPMC.PremiumTransactionEnteredDate, \r\n\tEPMC.PremiumTransactionEffectiveDate, \r\n\tEPMC.PremiumTransactionExpirationDate, \r\n\tEPMC.PremiumTransactionBookedDate, \r\n\tEPMC.PremiumTransactionCode, \r\n\tEPMC.PremiumTransactionAmount, \r\n\tEPMC.FullTermPremium, \r\n\tEPMC.PremiumType, \r\n\tEPMC.ReasonAmendedCode, \r\n\tEPMC.EarnedPremium, \r\n\tEPMC.ChangeInEarnedPremium, \r\n\tEPMC.UnearnedPremium, \r\n\tEPMC.ChangeInUnearnedPremium, \r\n\tisnull(PRODUCT.ProductCode, '000') as ProductCode, \r\n\tEPMC.AnnualStatementLineCode, \r\n\tEPMC.SubAnnualStatementLineCode, \r\n\tEPMC.NonSubAnnualStatementLineCode, \r\n\tEPMC.AnnualStatementLineProductCode, \r\n\tIsnull(InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessCode, '000') as LineOfBusinessCode, \r\n\tIsnull(PolicyOffering.PolicyOfferingCode, '000') as PolicyOfferingCode, \r\n\tEPMC.RunDate, \r\n\tEPMC.RatingCoverageAKId, \r\n\tEPMC.RatingCoverageEffectiveDate, \r\n\tEPMC.RatingCoverageExpirationDate, \r\n\tEPMC.EarnedExposure, \r\n\tEPMC.ChangeInEarnedExposure, \r\n\tisnull(SPC.StrategicProfitCenterCode, '6') as StrategicProfitCenterCode, \r\n\tisnull(EGP.EnterpriseGroupCode, '1') as EnterpriseGroupCode, \r\n\tisnull(IRLE.InsuranceReferenceLegalEntityCode, '1') as InsuranceReferenceLegalEntityCode, \r\n\tisnull(ISS.InsuranceSegmentCode, 'N/A') as InsuranceSegmentCode, \r\n\tSC.RiskUnitGroup, \r\n\tSC.RiskUnit, \r\n\tSC.RiskUnitSequenceNumber, \r\n\tSC.MajorPerilCode, \r\n\tSC.ClassCode, \r\n\t'N/A' as RiskType, \r\n\t'N/A' as CoverageType, \r\n\tSIL.StandardInsuranceLineCode, \r\n\tRL.RiskLocationHashKey, \r\n\tPC.TypeBureauCode,\r\n\t'N/A' as PerilGroup,\r\n\t'N/A' as CoverageForm,\r\n\tPC.PolicyCoverageEffectiveDate,\r\n\tPC.PolicyCoverageExpirationDate,\r\n\t'N/A' as SubCoverageTypeCode,\r\n\t'N/A' as CoverageVersion,\r\n\tPC.CustomerCareCommissionRate,\r\n\tRPDT.RatingPlanCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.StatisticalCoverage SC\r\n\t             ON EPMC.StatisticalCoverageAKID=SC.StatisticalCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t             ON EPMC.PolicyCoverageAKID=PC.PolicyCoverageAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t             ON EPMC.RiskLocationAKID=RL.RiskLocationAKID\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy P\r\n\t\t\tON EPMC.PolicyAKID=P.pol_ak_id\r\n\t\t\tAND P.crrnt_snpsht_flag=1\r\n\t\t\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.Product \r\n\ton SC.ProductAKID=Product.ProductAKID and Product.CurrentSnapshotFlag=1\r\n\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness \r\n\tOn SC.InsuranceReferenceLineOfBusinessAKID=InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessAKId and InsuranceReferenceLineOfBusiness.CurrentSnapshotFlag=1\r\n\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering\r\n\tOn PolicyOffering.PolicyOfferingAKID=P.PolicyOfferingAKID and PolicyOffering.CurrentSnapshotFlag=1\t\t\t\r\n\t\t\t\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISS\r\n\t\t\tON P.InsuranceSegmentAKId=ISS.InsuranceSegmentAKId\r\n\t\t\tAND ISS.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC\r\n\t            ON P.StrategicProfitCenterAKId=SPC.StrategicProfitCenterAKId\r\n\t            AND SPC.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.EnterpriseGroup EGP\r\n\t           ON SPC.EnterpriseGroupId=EGP.EnterpriseGroupId\r\n\t           AND EGP.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLegalEntity IRLE\r\n\t          ON SPC.InsuranceReferenceLegalEntityId=IRLE.InsuranceReferenceLegalEntityId\r\n\t          AND IRLE.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL\r\n\t          ON SIL.ins_line_code=PC.InsuranceLine\r\n\t          AND SIL.crrnt_snpsht_flag=1 \r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingPlan RPDT\r\n\t           ON PC.RatingPlanAKId=RPDT.RatingPlanAKId and RPDT.CurrentSnapshotFlag=1\r\n\tWHERE EPMC.CreatedDate  >= '@{pipeline().parameters.SELECTION_START_TS}' and EPMC.SourceSystemID='PMS'\r\n\t@{pipeline().parameters.WHERE_CLAUSE} \r\n\t\r\n\tunion all\r\n\tSELECT EPMC.EarnedPremiumMonthlyCalculationID, \r\n\tEPMC.CurrentSnapshotFlag, \r\n\tEPMC.AuditID, \r\n\tEPMC.EffectiveDate, \r\n\tEPMC.ExpirationDate, \r\n\tEPMC.SourceSystemID, \r\n\tEPMC.CreatedDate, \r\n\tEPMC.ModifiedDate, \r\n\tEPMC.PolicyKey, \r\n\tEPMC.AgencyAKID, \r\n\tEPMC.ContractCustomerAKID, \r\n\tEPMC.PolicyAKID, \r\n\tEPMC.PolicyCoverageAKID, \r\n\tEPMC.StatisticalCoverageAKID, \r\n\tEPMC.ReinsuranceCoverageAKID, \r\n\tEPMC.PremiumTransactionAKID, \r\n\tEPMC.BureauStatisticalCodeAKID, \r\n\tEPMC.PremiumMasterCalculationPKID, \r\n\tEPMC.PolicyEffectiveDate, \r\n\tEPMC.PolicyExpirationDate, \r\n\tEPMC.StatisticalCoverageCancellationDate, \r\n\tEPMC.PremiumTransactionEnteredDate, \r\n\tEPMC.PremiumTransactionEffectiveDate, \r\n\tEPMC.PremiumTransactionExpirationDate, \r\n\tEPMC.PremiumTransactionBookedDate, \r\n\tEPMC.PremiumTransactionCode, \r\n\tEPMC.PremiumTransactionAmount, \r\n\tEPMC.FullTermPremium, \r\n\tEPMC.PremiumType, \r\n\tEPMC.ReasonAmendedCode, \r\n\tEPMC.EarnedPremium, \r\n\tEPMC.ChangeInEarnedPremium, \r\n\tEPMC.UnearnedPremium, \r\n\tEPMC.ChangeInUnearnedPremium, \r\n\tisnull(PRODUCT.ProductCode, '000') as ProductCode, \r\n\tEPMC.AnnualStatementLineCode, \r\n\tEPMC.SubAnnualStatementLineCode, \r\n\tEPMC.NonSubAnnualStatementLineCode, \r\n\tEPMC.AnnualStatementLineProductCode, \r\n\tIsnull(InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessCode, '000') as LineOfBusinessCode, \r\n\tIsnull(PolicyOffering.PolicyOfferingCode, '000') as PolicyOfferingCode, \r\n\tEPMC.RunDate, \r\n\tEPMC.RatingCoverageAKId, \r\n\tEPMC.RatingCoverageEffectiveDate, \r\n\tEPMC.RatingCoverageExpirationDate, \r\n\tEPMC.EarnedExposure, \r\n\tEPMC.ChangeInEarnedExposure, \r\n\tisnull(SPC.StrategicProfitCenterCode, '6') as StrategicProfitCenterCode, \r\n\tisnull(EGP.EnterpriseGroupCode, '1') as EnterpriseGroupCode, \r\n\tisnull(IRLE.InsuranceReferenceLegalEntityCode, '1') as InsuranceReferenceLegalEntityCode, \r\n\tisnull(ISS.InsuranceSegmentCode, 'N/A') as InsuranceSegmentCode, \r\n\t'N/A' as RiskUnitGroup, \r\n\t'N/A' as RiskUnit, \r\n\t'N/A' as RiskUnitSequenceNumber, \r\n\t'N/A' as MajorPerilCode, \r\n\tRC.ClassCode, \r\n\tRC.RiskType, \r\n\tRC.CoverageType, \r\n\tISNULL(SIL.StandardInsuranceLineCode,'N/A') StandardInsuranceLineCode, \r\n\tRL.RiskLocationHashKey, \r\n\tPC.TypeBureauCode,\r\n\tRC.PerilGroup,\r\n\tRC.CoverageForm,\r\n\tPC.PolicyCoverageEffectiveDate,\r\n\tPC.PolicyCoverageExpirationDate,\r\n\tRC.SubCoverageTypeCode as SubCoverageTypeCode,\r\n\tRC.CoverageVersion as CoverageVersion,\r\n\tPC.CustomerCareCommissionRate,\r\n\tRPDT.RatingPlanCode\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.EarnedPremiumMonthlyCalculation EPMC\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t             ON EPMC.RatingCoverageAKID=RC.RatingCoverageAKId \r\n\t             AND RC.EffectiveDate=EPMC.RatingCoverageEffectiveDate\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyCoverage PC\r\n\t             ON EPMC.PolicyCoverageAKID=PC.PolicyCoverageAKID \r\n\t             AND PC.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RiskLocation RL\r\n\t             ON EPMC.RiskLocationAKID=RL.RiskLocationAKID \r\n\t             AND RL.CurrentSnapshotFlag=1\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy P\r\n\t\t\tON EPMC.PolicyAKID=P.pol_ak_id\r\n\t\t\tAND P.crrnt_snpsht_flag=1\r\n\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.Product \r\n\ton RC.ProductAKID=Product.ProductAKID and Product.CurrentSnapshotFlag=1\r\n\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLineOfBusiness \r\n\tOn RC.InsuranceReferenceLineOfBusinessAKID=InsuranceReferenceLineOfBusiness.InsuranceReferenceLineOfBusinessAKId and InsuranceReferenceLineOfBusiness.CurrentSnapshotFlag=1\r\n\t\r\n\tLeft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PolicyOffering\r\n\tOn PolicyOffering.PolicyOfferingAKID=P.PolicyOfferingAKID and PolicyOffering.CurrentSnapshotFlag=1\t\r\n\t\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceSegment ISS\r\n\t\t\tON P.InsuranceSegmentAKId=ISS.InsuranceSegmentAKId\r\n\t\t\tAND ISS.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.StrategicProfitCenter SPC\r\n\t            ON P.StrategicProfitCenterAKId=SPC.StrategicProfitCenterAKId\r\n\t            AND SPC.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.EnterpriseGroup EGP\r\n\t           ON SPC.EnterpriseGroupId=EGP.EnterpriseGroupId\r\n\t           AND EGP.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN  @{pipeline().parameters.SOURCE_TABLE_OWNER}.InsuranceReferenceLegalEntity IRLE\r\n\t          ON SPC.InsuranceReferenceLegalEntityId=IRLE.InsuranceReferenceLegalEntityId\r\n\t          AND IRLE.CurrentSnapshotFlag=1\r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.sup_insurance_line SIL\r\n\t          ON SIL.ins_line_code=PC.InsuranceLine\r\n\t          AND SIL.crrnt_snpsht_flag=1 \r\n\tLEFT OUTER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingPlan RPDT\r\n\t           ON PC.RatingPlanAKId=RPDT.RatingPlanAKId and RPDT.CurrentSnapshotFlag=1\r\n\tWHERE EPMC.CreatedDate  >= '@{pipeline().parameters.SELECTION_START_TS}' and EPMC.SourceSystemID='DCT'\r\n\t@{pipeline().parameters.WHERE_CLAUSE}\n),\nEXP_EarnedPremiumCalculation_IN AS (\n\tSELECT\n\tEarnedPremiumMonthlyCalculationID AS EarnedPremiumCalculationID,\n\tCurrentSnapshotFlag,\n\tAuditID,\n\tEffectiveDate,\n\tExpirationDate,\n\tSourceSystemID,\n\tCreatedDate,\n\tModifiedDate,\n\tPolicyKey,\n\tAgencyAKID,\n\tContractCustomerAKID,\n\tPolicyAKID,\n\tPolicyCoverageAKID,\n\tStatisticalCoverageAKID,\n\tReinsuranceCoverageAKID,\n\tPremiumTransactionAKID,\n\tBureauStatisticalCodeAKID,\n\tPremiumMasterCalculationPKID,\n\tPolicyEffectiveDate,\n\tPolicyExpirationDate,\n\tStatisticalCoverageCancellationDate,\n\tPremiumTransactionEnteredDate,\n\tPremiumTransactionEffectiveDate,\n\tPremiumTransactionExpirationDate,\n\tPremiumTransactionBookedDate,\n\tPremiumTransactionCode,\n\t-- *INF*: :LKP.LKP_SUP_PREMIUM_TRANSACTION_CODE(SourceSystemID,PremiumTransactionCode)\n\tLKP_SUP_PREMIUM_TRANSACTION_CODE_SourceSystemID_PremiumTransactionCode.StandardPremiumTransactionCode AS v_PremiumTransactionCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_PremiumTransactionCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(v_PremiumTransactionCode) AS PremiumTransactionCode_lkp,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\tPremiumType,\n\tReasonAmendedCode,\n\t-- *INF*: IIF(\r\n\t-- SourceSystemID='DCT',\r\n\t-- :LKP.LKP_SUP_REASON_AMENDED_CODE(LOWER(ReasonAmendedCode)),\r\n\t-- ReasonAmendedCode\r\n\t-- )\n\tIFF(SourceSystemID = 'DCT', LKP_SUP_REASON_AMENDED_CODE_LOWER_ReasonAmendedCode.StandardReasonAmendedCode, ReasonAmendedCode) AS v_ReasonAmendedCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(v_ReasonAmendedCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(v_ReasonAmendedCode) AS ReasonAmendedCode_lkp,\n\tEarnedPremium,\n\tChangeInEarnedPremium,\n\tUnearnedPremium,\n\tChangeInUnearnedPremium,\n\tProductCode,\n\tAnnualStatementLineCode,\n\tSubAnnualStatementLineCode,\n\tNonSubAnnualStatementLineCode AS i_NonSubAnnualStatementLineCode,\n\t-- *INF*: i_NonSubAnnualStatementLineCode\r\n\t-- \r\n\t-- --IIF(SourceSystemID='DCT','N/A',i_NonSubAnnualStatementLineCode)\n\ti_NonSubAnnualStatementLineCode AS o_NonSubAnnualStatementLineCode,\n\tAnnualStatementLineProductCode,\n\tLineOfBusinessCode,\n\tPolicyOfferingCode,\n\tRunDate,\n\tRatingCoverageAKId,\n\tRatingCoverageEffectiveDate,\n\tRatingCoverageExpirationDate,\n\tEarnedExposure,\n\tChangeInEarnedExposure,\n\tStrategicProfitCenterCode,\n\tEnterpriseGroupCode,\n\tInsuranceReferenceLegalEntityCode,\n\tInsuranceSegmentCode,\n\tPremiumTransactionAKID AS PremiumTransactionID,\n\tRiskUnitGroup AS i_RiskUnitGroup,\n\tRiskUnit AS i_RiskUnit,\n\tRiskUnitSequenceNumber AS i_RiskUnitSequenceNumber,\n\tMajorPerilCode AS i_MajorPerilCode,\n\tClassCode AS i_ClassCode,\n\tCoverageForm AS i_CoverageForm,\n\tRiskType AS i_RiskType,\n\tCoverageType AS i_CoverageType,\n\tStandardInsuranceLineCode AS i_StandardInsuranceLineCode,\n\tRiskLocationHashKey,\n\tTypeBureauCode AS i_TypeBureauCode,\n\tPerilGroup AS i_PerilGroup,\n\tSubCoverageTypeCode AS i_SubCoverageTypeCode,\n\tCoverageVersion AS i_CoverageVersion,\n\t-- *INF*: i_RiskType\r\n\t-- \r\n\t-- --IIF(LTRIM(RTRIM(i_CoverageForm))='BusinessAuto','N/A',i_RiskType)\n\ti_RiskType AS v_RiskType,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber,2,1))\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(SUBSTR(i_RiskUnitSequenceNumber, 2, 1)) AS v_ProductTypeCode,\n\t-- *INF*: IIF(REG_MATCH(i_StandardInsuranceLineCode,'[^0-9a-zA-Z]'),'N/A',i_StandardInsuranceLineCode)\n\tIFF(REG_MATCH(i_StandardInsuranceLineCode, '[^0-9a-zA-Z]'), 'N/A', i_StandardInsuranceLineCode) AS v_Reg_StandardInsuranceLineCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_MajorPerilCode) AS v_MajorPerilCode,\n\t-- *INF*: IIF(LTRIM(v_MajorPerilCode,'0')='','N/A',v_MajorPerilCode)\n\tIFF(LTRIM(v_MajorPerilCode, '0') = '', 'N/A', v_MajorPerilCode) AS v_Zero_MajorPerilCode,\n\t-- *INF*: :UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode)\n\t:UDF.DEFAULT_VALUE_FOR_STRINGS(i_ClassCode) AS v_ClassCode,\n\t-- *INF*: IIF(v_Reg_StandardInsuranceLineCode='N/A' AND (IN(i_TypeBureauCode,'AL','AN','AP') OR IN(v_Zero_MajorPerilCode,'930','931')),'CA',v_Reg_StandardInsuranceLineCode)\n\tIFF(v_Reg_StandardInsuranceLineCode = 'N/A' AND ( IN(i_TypeBureauCode, 'AL', 'AN', 'AP') OR IN(v_Zero_MajorPerilCode, '930', '931') ), 'CA', v_Reg_StandardInsuranceLineCode) AS v_StandardInsuranceLineCode,\n\t-- *INF*: IIF(v_StandardInsuranceLineCode='N/A' AND IN(i_TypeBureauCode,'CF','B2','BB','BE','BF','BM','BT','FT','GL','GS','IM','MS','PF','PH','PI','PL','PQ','WC','WP','NB','RL','RN','RP','BC','N/A'),1,0)\n\tIFF(v_StandardInsuranceLineCode = 'N/A' AND IN(i_TypeBureauCode, 'CF', 'B2', 'BB', 'BE', 'BF', 'BM', 'BT', 'FT', 'GL', 'GS', 'IM', 'MS', 'PF', 'PH', 'PI', 'PL', 'PQ', 'WC', 'WP', 'NB', 'RL', 'RN', 'RP', 'BC', 'N/A'), 1, 0) AS v_flag,\n\t-- *INF*: IIF(IN(v_StandardInsuranceLineCode,'CR') OR v_flag=1,'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup))\n\tIFF(IN(v_StandardInsuranceLineCode, 'CR') OR v_flag = 1, 'N/A', :UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnitGroup)) AS v_RiskUnitGroup,\n\t-- *INF*: IIF(LTRIM(v_RiskUnitGroup,'0')='','N/A',v_RiskUnitGroup)\n\tIFF(LTRIM(v_RiskUnitGroup, '0') = '', 'N/A', v_RiskUnitGroup) AS v_Zero_RiskUnitGroup,\n\t-- *INF*: IIF(\r\n\t--   v_flag=1\r\n\t-- OR   (v_StandardInsuranceLineCode='GL' AND (NOT IN(v_MajorPerilCode,'540','599','919')\r\n\t--   OR NOT IN(v_ClassCode,'11111','22222','22250','92100','17000','17001','17002','80051','80052','80053','80054','80055','80056','80057','80058')))\r\n\t--   OR IN(v_StandardInsuranceLineCode,'WC','IM','CG','CA')=1,\r\n\t--  'N/A',:UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit))\n\tIFF(v_flag = 1 OR ( v_StandardInsuranceLineCode = 'GL' AND ( NOT IN(v_MajorPerilCode, '540', '599', '919') OR NOT IN(v_ClassCode, '11111', '22222', '22250', '92100', '17000', '17001', '17002', '80051', '80052', '80053', '80054', '80055', '80056', '80057', '80058') ) ) OR IN(v_StandardInsuranceLineCode, 'WC', 'IM', 'CG', 'CA') = 1, 'N/A', :UDF.DEFAULT_VALUE_FOR_STRINGS(i_RiskUnit)) AS v_RiskUnit,\n\t-- *INF*: IIF(LTRIM(v_RiskUnit,'0')='','N/A',v_RiskUnit)\n\tIFF(LTRIM(v_RiskUnit, '0') = '', 'N/A', v_RiskUnit) AS v_Zero_RiskUnit,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_RiskUnitGroup,'[^0-9a-zA-Z]'),'N/A',v_Zero_RiskUnitGroup)\n\tIFF(REG_MATCH(v_Zero_RiskUnitGroup, '[^0-9a-zA-Z]'), 'N/A', v_Zero_RiskUnitGroup) AS v_PmsRiskUnitGroupCode,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_RiskUnit,'[^0-9a-zA-Z]'),'N/A',v_Zero_RiskUnit)\n\tIFF(REG_MATCH(v_Zero_RiskUnit, '[^0-9a-zA-Z]'), 'N/A', v_Zero_RiskUnit) AS v_PmsRiskUnitCode,\n\t-- *INF*: SUBSTR(v_PmsRiskUnitCode, 1, 3)\n\tSUBSTR(v_PmsRiskUnitCode, 1, 3) AS v_PmsRiskUnitCode_1_3,\n\t-- *INF*: IIF(SourceSystemID='PMS',v_StandardInsuranceLineCode,i_StandardInsuranceLineCode)\n\tIFF(SourceSystemID = 'PMS', v_StandardInsuranceLineCode, i_StandardInsuranceLineCode) AS v_InsuranceLineCode,\n\t-- *INF*: IIF(REG_MATCH(v_Zero_MajorPerilCode,'[^0-9a-zA-Z]'),'N/A',v_Zero_MajorPerilCode)\n\tIFF(REG_MATCH(v_Zero_MajorPerilCode, '[^0-9a-zA-Z]'), 'N/A', v_Zero_MajorPerilCode) AS v_PmsMajorPerilCode,\n\t-- *INF*: IIF(\r\n\t--   REG_MATCH(v_ProductTypeCode,'[^0-9a-zA-Z]') OR v_Reg_StandardInsuranceLineCode<>'GL' OR v_ProductTypeCode='0' OR LENGTH(v_ProductTypeCode)=0,\r\n\t--   'N/A',v_ProductTypeCode\r\n\t-- )\n\tIFF(REG_MATCH(v_ProductTypeCode, '[^0-9a-zA-Z]') OR v_Reg_StandardInsuranceLineCode <> 'GL' OR v_ProductTypeCode = '0' OR LENGTH(v_ProductTypeCode) = 0, 'N/A', v_ProductTypeCode) AS v_PmsProductTypeCode,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCECOVERAGEDIM_PMS(v_PmsRiskUnitGroupCode, v_PmsRiskUnitCode, v_PmsMajorPerilCode, v_InsuranceLineCode, v_PmsProductTypeCode)\n\tLKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.InsuranceReferenceCoverageDimId AS v_InsuranceReferenceCoverageDimId_PMS_1,\n\t-- *INF*: v_InsuranceReferenceCoverageDimId_PMS_1\r\n\t-- \r\n\t-- --IIF(ISNULL(v_InsuranceReferenceCoverageDimId_PMS_1), :LKP.LKP_INSURANCEREFERENCECOVERAGEDIM_PMS(v_PmsRiskUnitGroupCode, v_PmsRiskUnitCode_1_3, v_PmsMajorPerilCode, v_InsuranceLineCode, v_PmsProductTypeCode), v_InsuranceReferenceCoverageDimId_PMS_1)\n\tv_InsuranceReferenceCoverageDimId_PMS_1 AS v_InsuranceReferenceCoverageDimId_PMS_2,\n\t-- *INF*: :LKP.LKP_INSURANCEREFERENCECOVERAGEDIM_DCT(v_RiskType, i_CoverageType, v_InsuranceLineCode, i_PerilGroup,i_SubCoverageTypeCode,i_CoverageVersion)\n\tLKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceReferenceCoverageDimId AS v_InsuranceReferenceCoverageDimId_DCT,\n\t-- *INF*: IIF(PremiumTransactionAKID=-1,\r\n\t-- --Historical records\r\n\t-- :LKP.LKP_COVERAGEDETAILDIM_HIST(StatisticalCoverageAKID),\r\n\t-- --Incremental records\r\n\t-- :LKP.LKP_CoverageDetailDim(PremiumTransactionID)\r\n\t-- )\n\tIFF(PremiumTransactionAKID = - 1, LKP_COVERAGEDETAILDIM_HIST_StatisticalCoverageAKID.CoverageDetailDimId, LKP_COVERAGEDETAILDIM_PremiumTransactionID.CoverageDetailDimId) AS v_CoverageDetailDimId,\n\t-- *INF*: IIF(i_StandardInsuranceLineCode='WC','Payroll',NULL)\n\tIFF(i_StandardInsuranceLineCode = 'WC', 'Payroll', NULL) AS o_ExposureBasisName,\n\t-- *INF*: IIF(ISNULL(v_InsuranceReferenceCoverageDimId_PMS_2), -1, v_InsuranceReferenceCoverageDimId_PMS_2)\n\tIFF(v_InsuranceReferenceCoverageDimId_PMS_2 IS NULL, - 1, v_InsuranceReferenceCoverageDimId_PMS_2) AS o_InsuranceReferenceCoverageDimId_PMS,\n\t-- *INF*: IIF(ISNULL(v_InsuranceReferenceCoverageDimId_DCT), -1, v_InsuranceReferenceCoverageDimId_DCT)\n\tIFF(v_InsuranceReferenceCoverageDimId_DCT IS NULL, - 1, v_InsuranceReferenceCoverageDimId_DCT) AS o_InsuranceReferenceCoverageDimId_DCT,\n\t-- *INF*: IIF(ISNULL(v_CoverageDetailDimId), -1, v_CoverageDetailDimId)\n\tIFF(v_CoverageDetailDimId IS NULL, - 1, v_CoverageDetailDimId) AS o_CoverageDetailDimId_lkp,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tCustomerCareCommissionRate,\n\tRatingPlanCode AS i_RatingPlanCode,\n\t-- *INF*: IIF(ISNULL(i_RatingPlanCode), '1', i_RatingPlanCode)\n\tIFF(i_RatingPlanCode IS NULL, '1', i_RatingPlanCode) AS o_RatingPlanCode\n\tFROM SQ_EarnedPremiumMonthlyCalculation\n\tLEFT JOIN LKP_SUP_PREMIUM_TRANSACTION_CODE LKP_SUP_PREMIUM_TRANSACTION_CODE_SourceSystemID_PremiumTransactionCode\n\tON LKP_SUP_PREMIUM_TRANSACTION_CODE_SourceSystemID_PremiumTransactionCode.source_sys_id = SourceSystemID\n\tAND LKP_SUP_PREMIUM_TRANSACTION_CODE_SourceSystemID_PremiumTransactionCode.prem_trans_code = PremiumTransactionCode\n\n\tLEFT JOIN LKP_SUP_REASON_AMENDED_CODE LKP_SUP_REASON_AMENDED_CODE_LOWER_ReasonAmendedCode\n\tON LKP_SUP_REASON_AMENDED_CODE_LOWER_ReasonAmendedCode.rsn_amended_code = LOWER(ReasonAmendedCode)\n\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_PMS LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.InsuranceLineCode = v_PmsRiskUnitGroupCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.PmsRiskUnitGroupCode = v_PmsRiskUnitCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.PmsRiskUnitCode = v_PmsMajorPerilCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.PmsMajorPerilCode = v_InsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_PMS_v_PmsRiskUnitGroupCode_v_PmsRiskUnitCode_v_PmsMajorPerilCode_v_InsuranceLineCode_v_PmsProductTypeCode.PmsProductTypeCode = v_PmsProductTypeCode\n\n\tLEFT JOIN LKP_INSURANCEREFERENCECOVERAGEDIM_DCT LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion\n\tON LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctRiskTypeCode = v_RiskType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageTypeCode = i_CoverageType\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.InsuranceLineCode = v_InsuranceLineCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctPerilGroup = i_PerilGroup\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctSubCoverageTypeCode = i_SubCoverageTypeCode\n\tAND LKP_INSURANCEREFERENCECOVERAGEDIM_DCT_v_RiskType_i_CoverageType_v_InsuranceLineCode_i_PerilGroup_i_SubCoverageTypeCode_i_CoverageVersion.DctCoverageVersion = i_CoverageVersion\n\n\tLEFT JOIN LKP_COVERAGEDETAILDIM_HIST LKP_COVERAGEDETAILDIM_HIST_StatisticalCoverageAKID\n\tON LKP_COVERAGEDETAILDIM_HIST_StatisticalCoverageAKID.StatisticalCoverageAKID = StatisticalCoverageAKID\n\n\tLEFT JOIN LKP_COVERAGEDETAILDIM LKP_COVERAGEDETAILDIM_PremiumTransactionID\n\tON LKP_COVERAGEDETAILDIM_PremiumTransactionID.PremiumTransactionAKId = PremiumTransactionID\n\n),\nLKP_InsuranceReferenceDimId AS (\n\tSELECT\n\tInsuranceReferenceDimId,\n\tEnterpriseGroupCode,\n\tInsuranceReferenceLegalEntityCode,\n\tStrategicProfitCenterCode,\n\tInsuranceSegmentCode,\n\tPolicyOfferingCode,\n\tProductCode,\n\tInsuranceReferenceLineOfBusinessCode,\n\tRatingPlanCode\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceReferenceDimId,\n\t\t\tEnterpriseGroupCode,\n\t\t\tInsuranceReferenceLegalEntityCode,\n\t\t\tStrategicProfitCenterCode,\n\t\t\tInsuranceSegmentCode,\n\t\t\tPolicyOfferingCode,\n\t\t\tProductCode,\n\t\t\tInsuranceReferenceLineOfBusinessCode,\n\t\t\tRatingPlanCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceReferenceDim\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EnterpriseGroupCode,InsuranceReferenceLegalEntityCode,StrategicProfitCenterCode,InsuranceSegmentCode,PolicyOfferingCode,ProductCode,InsuranceReferenceLineOfBusinessCode,RatingPlanCode ORDER BY InsuranceReferenceDimId) = 1\n),\nLKP_RiskLocationDim AS (\n\tSELECT\n\tRiskLocationDimID,\n\tRiskLocationHashKey\n\tFROM (\n\t\tSELECT \n\t\t\tRiskLocationDimID,\n\t\t\tRiskLocationHashKey\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocationDim\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY RiskLocationHashKey ORDER BY RiskLocationDimID) = 1\n),\nLKP_SalesDivisionDim AS (\n\tSELECT\n\tSalesDivisionDimID,\n\tPolicyAkId\n\tFROM (\n\t\tselect \r\n\t\t\t\t\t\tdim.SalesDivisionDimId AS SalesDivisionDimId,\r\n\t\t\t \t\t\tVPOL.pol_ak_id as PolicyAkId\r\n\t\tfrom  @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Policy VPOL\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.Agency Agency\r\n\t\t\t\t\ton VPOL.AgencyAKID=Agency.AgencyAKID  \r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RegionalSalesManager RSM\r\n\t\t      on RSM.RegionalSalesManagerAKID = Agency.RegionalSalesManagerAKID\r\n\t\tinner join @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.SalesDivisionDim dim\r\n\t\t\t on dim.EDWSalesTerritoryAKID = Agency.SalesTerritoryAKID \r\n\t\t\t and Agency.RegionalSalesManagerAKID = dim.EDWRegionalSalesManagerAKID\r\n\t\t\t and RSM.SalesDirectorAKID = dim.EDWSalesDirectorAKID\r\n\t\twhere VPOL.crrnt_snpsht_flag=1 and Agency.CurrentSnapshotFlag =1 and dim.CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAkId ORDER BY SalesDivisionDimID) = 1\n),\nLKP_asl_dim AS (\n\tSELECT\n\tasl_dim_id,\n\tasl_code,\n\tsub_asl_code,\n\tsub_non_asl_code\n\tFROM (\n\t\tSELECT \n\t\t\tasl_dim_id,\n\t\t\tasl_code,\n\t\t\tsub_asl_code,\n\t\t\tsub_non_asl_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.asl_dim\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY asl_code,sub_asl_code,sub_non_asl_code ORDER BY asl_dim_id DESC) = 1\n),\nLKP_asl_product_code AS (\n\tSELECT\n\tasl_prdct_code_dim_id,\n\tasl_prdct_code\n\tFROM (\n\t\tSELECT \n\t\t\tasl_prdct_code_dim_id,\n\t\t\tasl_prdct_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.asl_product_code_dim\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY asl_prdct_code ORDER BY asl_prdct_code_dim_id DESC) = 1\n),\nLKP_reinsurance_coverage_dim AS (\n\tSELECT\n\treins_cov_dim_id,\n\tedw_reins_cov_ak_id,\n\teff_from_date,\n\teff_to_date\n\tFROM (\n\t\tSELECT \n\t\t\treins_cov_dim_id,\n\t\t\tedw_reins_cov_ak_id,\n\t\t\teff_from_date,\n\t\t\teff_to_date\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.reinsurance_coverage_dim\n\t\tWHERE crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_reins_cov_ak_id,eff_from_date,eff_to_date ORDER BY reins_cov_dim_id DESC) = 1\n),\nlkp_PremiumTransactionTypeDim AS (\n\tSELECT\n\tPremiumTransactionTypeDimID,\n\tin_CustomerCareCommissionRate,\n\tPremiumTransactionCode,\n\tReasonAmendedCode,\n\tPremiumTypeCode,\n\tCustomerCareCommissionRate\n\tFROM (\n\t\tSELECT \r\n\t\tPTTD.PremiumTransactionTypeDimID as PremiumTransactionTypeDimID,\r\n\t\tLTRIM(RTRIM(PTTD.PremiumTransactionCode)) as PremiumTransactionCode, \r\n\t\tLTRIM(RTRIM(PTTD.ReasonAmendedCode)) as ReasonAmendedCode, \r\n\t\tLTRIM(RTRIM(PTTD.PremiumTypeCode)) as PremiumTypeCode,\r\n\t\tPTTD.CustomerCareCommissionRate as CustomerCareCommissionRate\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PremiumTransactionTypeDim PTTD\r\n\t\twhere PTTD.CurrentSnapShotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PremiumTransactionCode,ReasonAmendedCode,PremiumTypeCode,CustomerCareCommissionRate ORDER BY PremiumTransactionTypeDimID DESC) = 1\n),\nmplt_PolicyDimID_PremiumMaster AS (WITH\n\tInput AS (\n\t\t\n\t),\n\tEXP_Default AS (\n\t\tSELECT\n\t\tIN_PolicyAKID AS PolicyAKID,\n\t\tIN_Trans_Date\n\t\tFROM Input\n\t),\n\tLKP_V2_Policy AS (\n\t\tSELECT\n\t\tcontract_cust_ak_id,\n\t\tagencyakid,\n\t\tpol_status_code,\n\t\tstrtgc_bus_dvsn_ak_id,\n\t\tIN_Trans_Date,\n\t\tpol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT policy.contract_cust_ak_id as contract_cust_ak_id, policy.agencyakid as agencyakid, policy.pol_status_code as pol_status_code, policy.strtgc_bus_dvsn_ak_id as strtgc_bus_dvsn_ak_id, policy.pol_ak_id as pol_ak_id, policy.eff_from_date as eff_from_date, policy.eff_to_date as eff_to_date FROM \r\n\t\t\tV2.policy\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_ak_id DESC) = 1\n\t),\n\tLKP_PolicyDimID AS (\n\t\tSELECT\n\t\tpol_dim_id,\n\t\tpol_key,\n\t\tpol_eff_date,\n\t\tpol_exp_date,\n\t\tpms_pol_lob_code,\n\t\tClassOfBusinessCode,\n\t\tIN_Trans_Date,\n\t\tedw_pol_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tpol_dim_id,\n\t\t\t\tpol_key,\n\t\t\t\tpol_eff_date,\n\t\t\t\tpol_exp_date,\n\t\t\t\tpms_pol_lob_code,\n\t\t\t\tClassOfBusinessCode,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_pol_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM policy_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_pol_ak_id,eff_from_date,eff_to_date ORDER BY pol_dim_id DESC) = 1\n\t),\n\tLKP_V3_AgencyDimID AS (\n\t\tSELECT\n\t\tagency_dim_id,\n\t\tedw_agency_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT AgencyDim.AgencyDimID as agency_dim_id, AgencyDim.EDWAgencyAKID as edw_agency_ak_id, AgencyDim.EffectiveDate as eff_from_date, AgencyDim.ExpirationDate as eff_to_date\r\n\t\t\t FROM V3.AgencyDim as AgencyDim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_agency_ak_id,eff_from_date,eff_to_date ORDER BY agency_dim_id DESC) = 1\n\t),\n\tLKP_ContractCustomerDim AS (\n\t\tSELECT\n\t\tcontract_cust_dim_id,\n\t\tIN_Trans_Date,\n\t\tedw_contract_cust_ak_id,\n\t\teff_from_date,\n\t\teff_to_date\n\t\tFROM (\n\t\t\tSELECT \n\t\t\t\tcontract_cust_dim_id,\n\t\t\t\tIN_Trans_Date,\n\t\t\t\tedw_contract_cust_ak_id,\n\t\t\t\teff_from_date,\n\t\t\t\teff_to_date\n\t\t\tFROM contract_customer_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_contract_cust_ak_id,eff_from_date,eff_to_date ORDER BY contract_cust_dim_id DESC) = 1\n\t),\n\tlkp_StrategicBusinessDivisionDIM AS (\n\t\tSELECT\n\t\tstrtgc_bus_dvsn_dim_id,\n\t\tedw_strtgc_bus_dvsn_ak_id\n\t\tFROM (\n\t\t\tSELECT strategic_business_division_dim.strtgc_bus_dvsn_dim_id as strtgc_bus_dvsn_dim_id, strategic_business_division_dim.edw_strtgc_bus_dvsn_ak_id as edw_strtgc_bus_dvsn_ak_id \r\n\t\t\tFROM strategic_business_division_dim\n\t\t)\n\t\tQUALIFY ROW_NUMBER() OVER (PARTITION BY edw_strtgc_bus_dvsn_ak_id ORDER BY strtgc_bus_dvsn_dim_id DESC) = 1\n\t),\n\tEXP_Values AS (\n\t\tSELECT\n\t\tLKP_V3_AgencyDimID.agency_dim_id,\n\t\tLKP_ContractCustomerDim.contract_cust_dim_id,\n\t\tLKP_PolicyDimID.pol_dim_id,\n\t\tLKP_V2_Policy.pol_status_code,\n\t\tLKP_PolicyDimID.pol_eff_date,\n\t\tLKP_PolicyDimID.pol_exp_date,\n\t\tlkp_StrategicBusinessDivisionDIM.strtgc_bus_dvsn_dim_id,\n\t\tLKP_PolicyDimID.pol_key,\n\t\tLKP_PolicyDimID.pms_pol_lob_code,\n\t\tLKP_PolicyDimID.ClassOfBusinessCode\n\t\tFROM \n\t\tLEFT JOIN LKP_ContractCustomerDim\n\t\tON LKP_ContractCustomerDim.edw_contract_cust_ak_id = LKP_V2_Policy.contract_cust_ak_id AND LKP_ContractCustomerDim.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_ContractCustomerDim.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_PolicyDimID\n\t\tON LKP_PolicyDimID.edw_pol_ak_id = EXP_Default.PolicyAKID AND LKP_PolicyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_PolicyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V2_Policy\n\t\tON LKP_V2_Policy.pol_ak_id = EXP_Default.PolicyAKID AND LKP_V2_Policy.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V2_Policy.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN LKP_V3_AgencyDimID\n\t\tON LKP_V3_AgencyDimID.edw_agency_ak_id = LKP_V2_Policy.agencyakid AND LKP_V3_AgencyDimID.eff_from_date <= EXP_Default.IN_Trans_Date AND LKP_V3_AgencyDimID.eff_to_date >= EXP_Default.IN_Trans_Date\n\t\tLEFT JOIN lkp_StrategicBusinessDivisionDIM\n\t\tON lkp_StrategicBusinessDivisionDIM.edw_strtgc_bus_dvsn_ak_id = LKP_V2_Policy.strtgc_bus_dvsn_ak_id\n\t),\n\tOutput AS (\n\t\tSELECT\n\t\tagency_dim_id, \n\t\tcontract_cust_dim_id, \n\t\tpol_dim_id, \n\t\tpol_status_code, \n\t\tpol_eff_date, \n\t\tpol_exp_date, \n\t\tstrtgc_bus_dvsn_dim_id, \n\t\tpol_key, \n\t\tpms_pol_lob_code, \n\t\tClassOfBusinessCode\n\t\tFROM EXP_Values\n\t),\n),\nEXP_Consolidate_Data_from_Lookups AS (\n\tSELECT\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID,\n\tmplt_PolicyDimID_PremiumMaster.agency_dim_id AS AgencyDimID,\n\t-- *INF*: IIF(NOT ISNULL(AgencyDimID),AgencyDimID,-1)\n\tIFF(NOT AgencyDimID IS NULL, AgencyDimID, - 1) AS AgencyDimID_out,\n\tmplt_PolicyDimID_PremiumMaster.pol_dim_id AS PolicyDimID,\n\t-- *INF*: IIF(NOT ISNULL(PolicyDimID),PolicyDimID,-1)\n\tIFF(NOT PolicyDimID IS NULL, PolicyDimID, - 1) AS PolicyDimID_out,\n\tmplt_PolicyDimID_PremiumMaster.pol_status_code,\n\tmplt_PolicyDimID_PremiumMaster.contract_cust_dim_id AS ContractCustomerDimID,\n\t-- *INF*: IIF(NOT ISNULL(ContractCustomerDimID),ContractCustomerDimID,-1)\n\tIFF(NOT ContractCustomerDimID IS NULL, ContractCustomerDimID, - 1) AS ContractCustomerDimID_out,\n\tLKP_RiskLocationDim.RiskLocationDimID,\n\t-- *INF*: IIF(NOT ISNULL(RiskLocationDimID),RiskLocationDimID,-1)\n\tIFF(NOT RiskLocationDimID IS NULL, RiskLocationDimID, - 1) AS RiskLocationDimID_out,\n\tLKP_reinsurance_coverage_dim.reins_cov_dim_id AS ReinsuranceCoverageDimID,\n\t-- *INF*: IIF(NOT ISNULL(ReinsuranceCoverageDimID),ReinsuranceCoverageDimID,-1)\n\tIFF(NOT ReinsuranceCoverageDimID IS NULL, ReinsuranceCoverageDimID, - 1) AS ReinsuranceCoverageDimID_out,\n\tlkp_PremiumTransactionTypeDim.PremiumTransactionTypeDimID,\n\t-- *INF*: IIF(NOT ISNULL(PremiumTransactionTypeDimID),PremiumTransactionTypeDimID,-1)\n\tIFF(NOT PremiumTransactionTypeDimID IS NULL, PremiumTransactionTypeDimID, - 1) AS PremiumTransactionTypeDimID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionID AS EDWPremiumTransactionPKID,\n\t-- *INF*: IIF(NOT ISNULL(EDWPremiumTransactionPKID),EDWPremiumTransactionPKID,-1)\n\tIFF(NOT EDWPremiumTransactionPKID IS NULL, EDWPremiumTransactionPKID, - 1) AS EDWPremiumTransactionPKID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionAmount,\n\tEXP_EarnedPremiumCalculation_IN.FullTermPremium,\n\tEXP_EarnedPremiumCalculation_IN.EarnedPremium,\n\tEXP_EarnedPremiumCalculation_IN.ChangeInEarnedPremium,\n\tEXP_EarnedPremiumCalculation_IN.UnearnedPremium,\n\tEXP_EarnedPremiumCalculation_IN.ChangeInUnearnedPremium,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionBookedDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PremiumTransactionBookedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PremiumTransactionBookedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumTransactionBookedDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumTransactionBookedDateID),v_PremiumTransactionBookedDateID,-1)\n\tIFF(NOT v_PremiumTransactionBookedDateID IS NULL, v_PremiumTransactionBookedDateID, - 1) AS PremiumTransactionBookedDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.RunDate AS PremiumTransactionRunDate,\n\t-- *INF*: IIF((PremiumTransactionBookedDate<=LAST_DAY(PremiumTransactionRunDate)) AND (PremiumTransactionBookedDate>=\r\n\t-- SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART( PremiumTransactionRunDate, 'DD', 1 ),'HH',0),'MI',0),'SS',0)),'Y','N')\n\tIFF(( PremiumTransactionBookedDate <= LAST_DAY(PremiumTransactionRunDate) ) AND ( PremiumTransactionBookedDate >= SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(SET_DATE_PART(PremiumTransactionRunDate, 'DD', 1), 'HH', 0), 'MI', 0), 'SS', 0) ), 'Y', 'N') AS DateFlagForWrittenPremium,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PremiumTransactionRunDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PremiumTransactionRunDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumTransactionRunDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumTransactionRunDateID),v_PremiumTransactionRunDateID,-1)\n\tIFF(NOT v_PremiumTransactionRunDateID IS NULL, v_PremiumTransactionRunDateID, - 1) AS PremiumTransactionRunDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PolicyCoverageEffectiveDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PolicyCoverageEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PolicyCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PolicyCoverageEffectiveDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PolicyCoverageEffectiveDateID),v_PolicyCoverageEffectiveDateID,-1)\n\tIFF(NOT v_PolicyCoverageEffectiveDateID IS NULL, v_PolicyCoverageEffectiveDateID, - 1) AS PolicyCoverageEffectiveDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PolicyCoverageExpirationDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PolicyCoverageExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PolicyCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PolicyCoverageExpirationDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PolicyCoverageExpirationDateID),v_PolicyCoverageExpirationDateID,-1)\n\tIFF(NOT v_PolicyCoverageExpirationDateID IS NULL, v_PolicyCoverageExpirationDateID, - 1) AS PolicyCoverageExpirationDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionEnteredDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PremiumTransactionEnteredDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEnteredDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumTransactionEnteredDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumTransactionEnteredDateID),v_PremiumTransactionEnteredDateID,-1)\n\tIFF(NOT v_PremiumTransactionEnteredDateID IS NULL, v_PremiumTransactionEnteredDateID, - 1) AS PremiumTransactionEnteredDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionEffectiveDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PremiumTransactionEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumTransactionEffectiveDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumTransactionEffectiveDateID),v_PremiumTransactionEffectiveDateID,-1)\n\tIFF(NOT v_PremiumTransactionEffectiveDateID IS NULL, v_PremiumTransactionEffectiveDateID, - 1) AS PremiumTransactionEffectiveDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumTransactionExpirationDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PremiumTransactionExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PremiumTransactionExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PremiumTransactionExpirationDateID,\n\t-- *INF*: IIF(NOT ISNULL(v_PremiumTransactionExpirationDateID),v_PremiumTransactionExpirationDateID,-1)\n\tIFF(NOT v_PremiumTransactionExpirationDateID IS NULL, v_PremiumTransactionExpirationDateID, - 1) AS PremiumTransactionExpirationDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumType,\n\tLKP_asl_dim.asl_dim_id AS ASLdimID,\n\t-- *INF*: IIF(NOT ISNULL(ASLdimID),ASLdimID,-1)\n\tIFF(NOT ASLdimID IS NULL, ASLdimID, - 1) AS ASLdimID_out,\n\tLKP_asl_product_code.asl_prdct_code_dim_id AS ASLproductcodedimID,\n\t-- *INF*: IIF(NOT ISNULL(ASLproductcodedimID),ASLproductcodedimID,-1)\n\tIFF(NOT ASLproductcodedimID IS NULL, ASLproductcodedimID, - 1) AS ASLproductcodedimID_out,\n\tEXP_EarnedPremiumCalculation_IN.PremiumMasterCalculationPKID,\n\tEXP_EarnedPremiumCalculation_IN.PolicyEffectiveDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PolicyEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PolicyEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PolicyEffectiveDateID,\n\tv_PolicyEffectiveDateID AS PolicyEffectiveDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.PolicyExpirationDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(to_date(to_char(PolicyExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_to_date_to_char_PolicyExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_PolicyExpirationDateID,\n\t-- *INF*: IIF(ISNULL(v_PolicyExpirationDateID),-1,v_PolicyExpirationDateID)\n\tIFF(v_PolicyExpirationDateID IS NULL, - 1, v_PolicyExpirationDateID) AS PolicyExpirationDateID_out,\n\tEXP_EarnedPremiumCalculation_IN.EarnedPremiumCalculationID AS EDWEarnedPremiumMonthlyCalculationPKID,\n\tEXP_EarnedPremiumCalculation_IN.RatingCoverageEffectiveDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TO_DATE(TO_CHAR(RatingCoverageEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS RatingCoverageEffectiveDateId,\n\tEXP_EarnedPremiumCalculation_IN.RatingCoverageExpirationDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TO_DATE(TO_CHAR(RatingCoverageExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS RatingCoverageExpirationDateId,\n\tLKP_InsuranceReferenceDimId.InsuranceReferenceDimId,\n\t-- *INF*: IIF(ISNULL(InsuranceReferenceDimId), -1, InsuranceReferenceDimId)\n\tIFF(InsuranceReferenceDimId IS NULL, - 1, InsuranceReferenceDimId) AS o_InsuranceReferenceDimId,\n\tEXP_EarnedPremiumCalculation_IN.LineOfBusinessCode AS InsuranceReferenceLineOfBusinessCode,\n\tEXP_EarnedPremiumCalculation_IN.PolicyKey,\n\tEXP_EarnedPremiumCalculation_IN.SourceSystemID,\n\tEXP_EarnedPremiumCalculation_IN.o_InsuranceReferenceCoverageDimId_PMS AS InsuranceReferenceCoverageDimId_PMS,\n\tEXP_EarnedPremiumCalculation_IN.o_InsuranceReferenceCoverageDimId_DCT AS InsuranceReferenceCoverageDimId_DCT,\n\t-- *INF*: DECODE(SourceSystemID,'DCT',InsuranceReferenceCoverageDimId_DCT,'PMS',InsuranceReferenceCoverageDimId_PMS)\n\tDECODE(SourceSystemID,\n\t\t'DCT', InsuranceReferenceCoverageDimId_DCT,\n\t\t'PMS', InsuranceReferenceCoverageDimId_PMS) AS o_InsuranceReferenceCoverageDimId,\n\tEXP_EarnedPremiumCalculation_IN.o_CoverageDetailDimId_lkp AS CoverageDetailDimId,\n\tEXP_EarnedPremiumCalculation_IN.EarnedExposure,\n\tEXP_EarnedPremiumCalculation_IN.ChangeInEarnedExposure,\n\tLKP_SalesDivisionDim.SalesDivisionDimID,\n\t-- *INF*: IIF(ISNULL(SalesDivisionDimID), -1, SalesDivisionDimID)\n\tIFF(SalesDivisionDimID IS NULL, - 1, SalesDivisionDimID) AS o_SalesDivisionDimID,\n\tEXP_EarnedPremiumCalculation_IN.StatisticalCoverageCancellationDate AS i_StatisticalCoverageCancellationDate,\n\t-- *INF*: :LKP.LKP_CALENDER_DIM(TO_DATE(TO_CHAR(i_StatisticalCoverageCancellationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY'))\n\tLKP_CALENDER_DIM_TO_DATE_TO_CHAR_i_StatisticalCoverageCancellationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_id AS v_StatisticalCoverageCancellationDateId,\n\t-- *INF*: IIF(NOT ISNULL(v_StatisticalCoverageCancellationDateId),v_StatisticalCoverageCancellationDateId,-1)\n\tIFF(NOT v_StatisticalCoverageCancellationDateId IS NULL, v_StatisticalCoverageCancellationDateId, - 1) AS o_StatisticalCoverageCancellationDateId\n\tFROM EXP_EarnedPremiumCalculation_IN\n\t -- Manually join with mplt_PolicyDimID_PremiumMaster\n\tLEFT JOIN LKP_InsuranceReferenceDimId\n\tON LKP_InsuranceReferenceDimId.EnterpriseGroupCode = EXP_EarnedPremiumCalculation_IN.EnterpriseGroupCode AND LKP_InsuranceReferenceDimId.InsuranceReferenceLegalEntityCode = EXP_EarnedPremiumCalculation_IN.InsuranceReferenceLegalEntityCode AND LKP_InsuranceReferenceDimId.StrategicProfitCenterCode = EXP_EarnedPremiumCalculation_IN.StrategicProfitCenterCode AND LKP_InsuranceReferenceDimId.InsuranceSegmentCode = EXP_EarnedPremiumCalculation_IN.InsuranceSegmentCode AND LKP_InsuranceReferenceDimId.PolicyOfferingCode = EXP_EarnedPremiumCalculation_IN.PolicyOfferingCode AND LKP_InsuranceReferenceDimId.ProductCode = EXP_EarnedPremiumCalculation_IN.ProductCode AND LKP_InsuranceReferenceDimId.InsuranceReferenceLineOfBusinessCode = EXP_EarnedPremiumCalculation_IN.LineOfBusinessCode AND LKP_InsuranceReferenceDimId.RatingPlanCode = EXP_EarnedPremiumCalculation_IN.o_RatingPlanCode\n\tLEFT JOIN LKP_RiskLocationDim\n\tON LKP_RiskLocationDim.RiskLocationHashKey = EXP_EarnedPremiumCalculation_IN.RiskLocationHashKey\n\tLEFT JOIN LKP_SalesDivisionDim\n\tON LKP_SalesDivisionDim.PolicyAkId = EXP_EarnedPremiumCalculation_IN.PolicyAKID\n\tLEFT JOIN LKP_asl_dim\n\tON LKP_asl_dim.asl_code = EXP_EarnedPremiumCalculation_IN.AnnualStatementLineCode AND LKP_asl_dim.sub_asl_code = EXP_EarnedPremiumCalculation_IN.SubAnnualStatementLineCode AND LKP_asl_dim.sub_non_asl_code = EXP_EarnedPremiumCalculation_IN.o_NonSubAnnualStatementLineCode\n\tLEFT JOIN LKP_asl_product_code\n\tON LKP_asl_product_code.asl_prdct_code = EXP_EarnedPremiumCalculation_IN.AnnualStatementLineProductCode\n\tLEFT JOIN LKP_reinsurance_coverage_dim\n\tON LKP_reinsurance_coverage_dim.edw_reins_cov_ak_id = EXP_EarnedPremiumCalculation_IN.ReinsuranceCoverageAKID AND LKP_reinsurance_coverage_dim.eff_from_date <= EXP_EarnedPremiumCalculation_IN.RunDate AND LKP_reinsurance_coverage_dim.eff_to_date >= EXP_EarnedPremiumCalculation_IN.RunDate\n\tLEFT JOIN lkp_PremiumTransactionTypeDim\n\tON lkp_PremiumTransactionTypeDim.PremiumTransactionCode = EXP_EarnedPremiumCalculation_IN.PremiumTransactionCode AND lkp_PremiumTransactionTypeDim.ReasonAmendedCode = EXP_EarnedPremiumCalculation_IN.ReasonAmendedCode AND lkp_PremiumTransactionTypeDim.PremiumTypeCode = EXP_EarnedPremiumCalculation_IN.PremiumType AND lkp_PremiumTransactionTypeDim.CustomerCareCommissionRate = EXP_EarnedPremiumCalculation_IN.CustomerCareCommissionRate\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionBookedDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionBookedDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PremiumTransactionBookedDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionRunDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionRunDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PremiumTransactionRunDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PolicyCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PolicyCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PolicyCoverageEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PolicyCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PolicyCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PolicyCoverageExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEnteredDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEnteredDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PremiumTransactionEnteredDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEffectiveDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PremiumTransactionEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionExpirationDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PremiumTransactionExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PremiumTransactionExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PolicyEffectiveDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PolicyEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PolicyEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_to_date_to_char_PolicyExpirationDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_to_date_to_char_PolicyExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = to_date(to_char(PolicyExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageEffectiveDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(RatingCoverageEffectiveDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_TO_DATE_TO_CHAR_RatingCoverageExpirationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(RatingCoverageExpirationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n\tLEFT JOIN LKP_CALENDER_DIM LKP_CALENDER_DIM_TO_DATE_TO_CHAR_i_StatisticalCoverageCancellationDate_MM_DD_YYYY_MM_DD_YYYY\n\tON LKP_CALENDER_DIM_TO_DATE_TO_CHAR_i_StatisticalCoverageCancellationDate_MM_DD_YYYY_MM_DD_YYYY.clndr_date = TO_DATE(TO_CHAR(i_StatisticalCoverageCancellationDate, 'MM/DD/YYYY'), 'MM/DD/YYYY')\n\n),\nEXP_Evaluate_Fields AS (\n\tSELECT\n\tAuditID,\n\tEDWPremiumTransactionPKID_out AS EDWPremiumTransactionPKID,\n\tASLdimID_out AS AnnualStatementLineDimID,\n\tASLproductcodedimID_out AS AnnualStatementLineProductCodeDimID,\n\tAgencyDimID_out AS AgencyDimID,\n\tPolicyDimID_out AS PolicyDimID,\n\tpol_status_code,\n\tContractCustomerDimID_out AS ContractCustomerDimID,\n\tRiskLocationDimID_out AS RiskLocationDimID,\n\tReinsuranceCoverageDimID_out AS ReinsuranceCoverageDimID,\n\tPremiumTransactionTypeDimID_out AS PremiumTransactionTypeDimID,\n\tPolicyEffectiveDateID_out AS PolicyEffectiveDateID,\n\tPolicyExpirationDateID_out AS PolicyExpirationDateID,\n\tPolicyCoverageEffectiveDateID_out AS PolicyCoverageEffectiveDateID,\n\tPolicyCoverageExpirationDateID_out AS PolicyCoverageExpirationDateID,\n\tPremiumTransactionEnteredDateID_out AS PremiumTransactionEnteredDateID,\n\tPremiumTransactionEffectiveDateID_out AS PremiumTransactionEffectiveDateID,\n\tPremiumTransactionExpirationDateID_out AS PremiumTransactionExpirationDateID,\n\tPremiumTransactionBookedDateID_out AS PremiumTransactionBookedDateID,\n\tPremiumTransactionRunDateID_out AS PremiumTransactionRunDateID,\n\tDateFlagForWrittenPremium,\n\tPremiumType,\n\tPremiumTransactionAmount,\n\tFullTermPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='D' AND DateFlagForWrittenPremium='Y',PremiumTransactionAmount,0)\n\tIFF(rtrim(PremiumType) = 'D' AND DateFlagForWrittenPremium = 'Y', PremiumTransactionAmount, 0) AS v_TotalDirectWrittenPremium,\n\tv_TotalDirectWrittenPremium AS TotalDirectWrittenPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='C' AND DateFlagForWrittenPremium='Y',PremiumTransactionAmount,0)\n\tIFF(rtrim(PremiumType) = 'C' AND DateFlagForWrittenPremium = 'Y', PremiumTransactionAmount, 0) AS v_TotalCededWrittenPremium,\n\tv_TotalCededWrittenPremium AS TotalCededWrittenPremium,\n\tv_TotalDirectWrittenPremium - v_TotalCededWrittenPremium AS TotalNetWrittenPremium,\n\tEarnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='D',EarnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'D', EarnedPremium, 0) AS v_DirectEarnedPremium,\n\tv_DirectEarnedPremium AS DirectEarnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='C',EarnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'C', EarnedPremium, 0) AS v_CededEarnedPremium,\n\tv_CededEarnedPremium AS CededEarnedPremium,\n\tv_DirectEarnedPremium - v_CededEarnedPremium AS NetEarnedPremium,\n\tChangeInEarnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='D',ChangeInEarnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'D', ChangeInEarnedPremium, 0) AS v_ChangeinDirectEarnedPremium,\n\tv_ChangeinDirectEarnedPremium AS ChangeinDirectEarnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='C',ChangeInEarnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'C', ChangeInEarnedPremium, 0) AS v_ChangeinCededEarnedPremium,\n\tv_ChangeinCededEarnedPremium AS ChangeinCededEarnedPremium,\n\tv_ChangeinDirectEarnedPremium - v_ChangeinCededEarnedPremium AS NetChangeinEarnedPremium,\n\tUnearnedPremium AS DirectUnearnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='D',DirectUnearnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'D', DirectUnearnedPremium, 0) AS v_Monthly_DirectUnearnedPremium,\n\tv_Monthly_DirectUnearnedPremium AS Monthly_DirectUnearnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='C',DirectUnearnedPremium,0)\r\n\t-- \r\n\t-- \r\n\t-- --IIF(rtrim(PremiumType)='C',v_TotalCededWrittenPremium - v_CededEarnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'C', DirectUnearnedPremium, 0) AS v_CededUnearnedPremium,\n\tv_CededUnearnedPremium AS CededUnearnedPremium,\n\tv_Monthly_DirectUnearnedPremium - v_CededUnearnedPremium AS NetUnearnedPremium,\n\tChangeInUnearnedPremium AS MonthlyChangeInDirectUnearnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='D',MonthlyChangeInDirectUnearnedPremium,0)\n\tIFF(rtrim(PremiumType) = 'D', MonthlyChangeInDirectUnearnedPremium, 0) AS ChangeInDirectUnearnedPremium,\n\t-- *INF*: IIF(rtrim(PremiumType)='C',MonthlyChangeInDirectUnearnedPremium,0)\r\n\t-- \r\n\t-- --IIF(rtrim(PremiumType)='C',v_ChangeinCededEarnedPremium*(-1),0)\n\tIFF(rtrim(PremiumType) = 'C', MonthlyChangeInDirectUnearnedPremium, 0) AS MonthlyChangeInCededUnearnedPremium,\n\t-- *INF*: IIF(pol_status_code='I' AND PremiumType='D', PremiumTransactionAmount, 0)\n\tIFF(pol_status_code = 'I' AND PremiumType = 'D', PremiumTransactionAmount, 0) AS v_DirectInforcePremium,\n\tv_DirectInforcePremium AS DirectInforcePremium,\n\t-- *INF*: IIF(pol_status_code='I' AND PremiumType='C', PremiumTransactionAmount, 0)\n\tIFF(pol_status_code = 'I' AND PremiumType = 'C', PremiumTransactionAmount, 0) AS v_CededInforcePremium,\n\tv_CededInforcePremium AS CededInforcePremium,\n\tv_DirectInforcePremium - v_CededInforcePremium AS v_NetInforcePremium,\n\tv_NetInforcePremium AS NetInforcePremium,\n\tEDWEarnedPremiumMonthlyCalculationPKID,\n\tRatingCoverageEffectiveDateId,\n\tRatingCoverageExpirationDateId,\n\to_InsuranceReferenceDimId AS InsuranceReferenceDimId,\n\tPremiumMasterCalculationPKID AS EDWPremiumMasterCalculationPKId,\n\tInsuranceReferenceLineOfBusinessCode,\n\tPolicyKey,\n\to_InsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId,\n\tCoverageDetailDimId,\n\tExposureBasisDimId,\n\t0.00 AS EarnedExposure,\n\tChangeInEarnedExposure,\n\to_SalesDivisionDimID AS SalesDivisionDimID,\n\to_StatisticalCoverageCancellationDateId AS StatisticalCoverageCancellationDateId\n\tFROM EXP_Consolidate_Data_from_Lookups\n),\nLKP_EarnedPremiumMonthlyFact AS (\n\tSELECT\n\tEarnedPremiumTransactionMonthlyFactID,\n\tEDWEarnedPremiumMonthlyCalculationPKID\n\tFROM (\n\t\tSELECT \n\t\t\tEarnedPremiumTransactionMonthlyFactID,\n\t\t\tEDWEarnedPremiumMonthlyCalculationPKID\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.@{pipeline().parameters.TARGET_TABLE_NAME}\n\t\tWHERE @{pipeline().parameters.TARGET_TABLE_NAME}.AUDITID=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\t@{pipeline().parameters.LOOKUP_CLAUSE}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY EDWEarnedPremiumMonthlyCalculationPKID ORDER BY EarnedPremiumTransactionMonthlyFactID DESC) = 1\n),\nRTR_INSERT_UPDATE AS (\n\tSELECT\n\tLKP_EarnedPremiumMonthlyFact.EarnedPremiumTransactionMonthlyFactID,\n\tEXP_Evaluate_Fields.AuditID,\n\tEXP_Evaluate_Fields.EDWEarnedPremiumMonthlyCalculationPKID,\n\tEXP_Evaluate_Fields.EDWPremiumTransactionPKID,\n\tEXP_Evaluate_Fields.AnnualStatementLineDimID,\n\tEXP_Evaluate_Fields.AnnualStatementLineProductCodeDimID,\n\tEXP_Evaluate_Fields.AgencyDimID,\n\tEXP_Evaluate_Fields.PolicyDimID,\n\tEXP_Evaluate_Fields.ContractCustomerDimID,\n\tEXP_Evaluate_Fields.RiskLocationDimID,\n\tEXP_Evaluate_Fields.ReinsuranceCoverageDimID,\n\tEXP_Evaluate_Fields.PremiumTransactionTypeDimID,\n\tEXP_Evaluate_Fields.PolicyEffectiveDateID,\n\tEXP_Evaluate_Fields.PolicyExpirationDateID,\n\tEXP_Evaluate_Fields.PolicyCoverageEffectiveDateID,\n\tEXP_Evaluate_Fields.PolicyCoverageExpirationDateID,\n\tEXP_Evaluate_Fields.PremiumTransactionEnteredDateID,\n\tEXP_Evaluate_Fields.PremiumTransactionEffectiveDateID,\n\tEXP_Evaluate_Fields.PremiumTransactionExpirationDateID,\n\tEXP_Evaluate_Fields.PremiumTransactionBookedDateID,\n\tEXP_Evaluate_Fields.PremiumTransactionRunDateID,\n\tEXP_Evaluate_Fields.TotalDirectWrittenPremium,\n\tEXP_Evaluate_Fields.TotalCededWrittenPremium,\n\tEXP_Evaluate_Fields.TotalNetWrittenPremium,\n\tEXP_Evaluate_Fields.DirectEarnedPremium,\n\tEXP_Evaluate_Fields.CededEarnedPremium,\n\tEXP_Evaluate_Fields.NetEarnedPremium,\n\tEXP_Evaluate_Fields.ChangeinDirectEarnedPremium,\n\tEXP_Evaluate_Fields.ChangeinCededEarnedPremium,\n\tEXP_Evaluate_Fields.NetChangeinEarnedPremium AS NetChangeinCededEarnedPremium,\n\tEXP_Evaluate_Fields.Monthly_DirectUnearnedPremium AS DirectUnearnedPremium,\n\tEXP_Evaluate_Fields.CededUnearnedPremium,\n\tEXP_Evaluate_Fields.NetUnearnedPremium,\n\tEXP_Evaluate_Fields.ChangeInDirectUnearnedPremium AS MonthlyChangeInDirectUnearnedPremium,\n\tEXP_Evaluate_Fields.MonthlyChangeInCededUnearnedPremium,\n\tEXP_Evaluate_Fields.DirectInforcePremium,\n\tEXP_Evaluate_Fields.CededInforcePremium,\n\tEXP_Evaluate_Fields.NetInforcePremium,\n\tEXP_Evaluate_Fields.RatingCoverageEffectiveDateId,\n\tEXP_Evaluate_Fields.RatingCoverageExpirationDateId,\n\tEXP_Evaluate_Fields.InsuranceReferenceDimId,\n\tEXP_Evaluate_Fields.EDWPremiumMasterCalculationPKId,\n\tEXP_Evaluate_Fields.EarnedExposure,\n\tEXP_Evaluate_Fields.CoverageDetailDimId,\n\tEXP_Evaluate_Fields.InsuranceReferenceCoverageDimId,\n\tEXP_Evaluate_Fields.ExposureBasisDimId,\n\tEXP_Evaluate_Fields.ChangeInEarnedExposure,\n\tEXP_Evaluate_Fields.SalesDivisionDimID,\n\tEXP_Evaluate_Fields.StatisticalCoverageCancellationDateId\n\tFROM EXP_Evaluate_Fields\n\tLEFT JOIN LKP_EarnedPremiumMonthlyFact\n\tON LKP_EarnedPremiumMonthlyFact.EDWEarnedPremiumMonthlyCalculationPKID = EXP_Evaluate_Fields.EDWEarnedPremiumMonthlyCalculationPKID\n),\nRTR_INSERT_UPDATE_INSERT AS (SELECT * FROM RTR_INSERT_UPDATE WHERE isnull(EarnedPremiumTransactionMonthlyFactID)),\nRTR_INSERT_UPDATE_DEFAULT1 AS (SELECT * FROM RTR_INSERT_UPDATE WHERE NOT ( (isnull(EarnedPremiumTransactionMonthlyFactID)) )),\nTGT_EarnedPremiumTransactionMonthlyFact_Insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.@{pipeline().parameters.TARGET_TABLE_NAME}\n\t(AuditID, EDWEarnedPremiumMonthlyCalculationPKID, AnnualStatementLineDimID, AnnualStatementLineProductCodeDimID, AgencyDimID, PolicyDimID, ContractCustomerDimID, RiskLocationDimID, ReinsuranceCoverageDimID, PremiumTransactionTypeDimID, PolicyEffectiveDateID, PolicyExpirationDateID, PolicyCoverageEffectiveDateID, PolicyCoverageExpirationDateID, PremiumTransactionEnteredDateID, PremiumTransactionEffectiveDateID, PremiumTransactionExpirationDateID, PremiumTransactionBookedDateID, PremiumTransactionRunDateID, MonthlyTotalDirectWrittenPremium, MonthlyTotalCededWrittenPremium, MonthlyTotalNetWrittenPremium, MonthlyDirectEarnedPremium, MonthlyCededEarnedPremium, MonthlyNetEarnedPremium, MonthlyChangeinDirectEarnedPremium, MonthlyChangeinCededEarnedPremium, MonthlyNetChangeinCededEarnedPremium, MonthlyDirectUnearnedPremium, MonthlyCededUnearnedPremium, MonthlyNetUnearnedPremium, MonthlyChangeInDirectUnearnedPremium, MonthlyChangeInCededUnearnedPremium, MonthlyDirectInforcePremium, MonthlyCededInforcePremium, MonthlyNetInforcePremium, EDWPremiumMasterCalculationPKId, InsuranceReferenceDimId, EarnedExposureAmount, CoverageDetailDimId, InsuranceReferenceCoverageDimId, MonthlyChangeInEarnedExposureAmount, CoverageCancellationDateId)\n\tSELECT \n\tAUDITID, \n\tEDWEARNEDPREMIUMMONTHLYCALCULATIONPKID, \n\tANNUALSTATEMENTLINEDIMID, \n\tANNUALSTATEMENTLINEPRODUCTCODEDIMID, \n\tAGENCYDIMID, \n\tPOLICYDIMID, \n\tCONTRACTCUSTOMERDIMID, \n\tRISKLOCATIONDIMID, \n\tREINSURANCECOVERAGEDIMID, \n\tPREMIUMTRANSACTIONTYPEDIMID, \n\tPOLICYEFFECTIVEDATEID, \n\tPOLICYEXPIRATIONDATEID, \n\tPOLICYCOVERAGEEFFECTIVEDATEID, \n\tPOLICYCOVERAGEEXPIRATIONDATEID, \n\tPREMIUMTRANSACTIONENTEREDDATEID, \n\tPREMIUMTRANSACTIONEFFECTIVEDATEID, \n\tPREMIUMTRANSACTIONEXPIRATIONDATEID, \n\tPREMIUMTRANSACTIONBOOKEDDATEID, \n\tPREMIUMTRANSACTIONRUNDATEID, \n\tTotalDirectWrittenPremium AS MONTHLYTOTALDIRECTWRITTENPREMIUM, \n\tTotalCededWrittenPremium AS MONTHLYTOTALCEDEDWRITTENPREMIUM, \n\tTotalNetWrittenPremium AS MONTHLYTOTALNETWRITTENPREMIUM, \n\tDirectEarnedPremium AS MONTHLYDIRECTEARNEDPREMIUM, \n\tCededEarnedPremium AS MONTHLYCEDEDEARNEDPREMIUM, \n\tNetEarnedPremium AS MONTHLYNETEARNEDPREMIUM, \n\tChangeinDirectEarnedPremium AS MONTHLYCHANGEINDIRECTEARNEDPREMIUM, \n\tChangeinCededEarnedPremium AS MONTHLYCHANGEINCEDEDEARNEDPREMIUM, \n\tNetChangeinCededEarnedPremium AS MONTHLYNETCHANGEINCEDEDEARNEDPREMIUM, \n\tDirectUnearnedPremium AS MONTHLYDIRECTUNEARNEDPREMIUM, \n\tCededUnearnedPremium AS MONTHLYCEDEDUNEARNEDPREMIUM, \n\tNetUnearnedPremium AS MONTHLYNETUNEARNEDPREMIUM, \n\tMONTHLYCHANGEINDIRECTUNEARNEDPREMIUM, \n\tMONTHLYCHANGEINCEDEDUNEARNEDPREMIUM, \n\tDirectInforcePremium AS MONTHLYDIRECTINFORCEPREMIUM, \n\tCededInforcePremium AS MONTHLYCEDEDINFORCEPREMIUM, \n\tNetInforcePremium AS MONTHLYNETINFORCEPREMIUM, \n\tEDWPREMIUMMASTERCALCULATIONPKID, \n\tINSURANCEREFERENCEDIMID, \n\tEarnedExposure AS EARNEDEXPOSUREAMOUNT, \n\tCOVERAGEDETAILDIMID, \n\tINSURANCEREFERENCECOVERAGEDIMID, \n\tChangeInEarnedExposure AS MONTHLYCHANGEINEARNEDEXPOSUREAMOUNT, \n\tStatisticalCoverageCancellationDateId AS COVERAGECANCELLATIONDATEID\n\tFROM RTR_INSERT_UPDATE_INSERT\n),\nUPD_Update AS (\n\tSELECT\n\tEarnedPremiumTransactionMonthlyFactID AS EarnedPremiumTransactionMonthlyFactID1, \n\tAuditID, \n\tEDWEarnedPremiumMonthlyCalculationPKID AS EDWEarnedPremiumMonthlyCalculationPKID1, \n\tEDWPremiumTransactionPKID, \n\tAnnualStatementLineDimID, \n\tAnnualStatementLineProductCodeDimID, \n\tAgencyDimID, \n\tPolicyDimID, \n\tContractCustomerDimID, \n\tRiskLocationDimID, \n\tReinsuranceCoverageDimID, \n\tPremiumTransactionTypeDimID, \n\tPolicyEffectiveDateID, \n\tPolicyExpirationDateID, \n\tPolicyCoverageEffectiveDateID, \n\tPolicyCoverageExpirationDateID, \n\tPremiumTransactionEnteredDateID, \n\tPremiumTransactionEffectiveDateID, \n\tPremiumTransactionExpirationDateID, \n\tPremiumTransactionBookedDateID, \n\tPremiumTransactionRunDateID, \n\tTotalDirectWrittenPremium, \n\tTotalCededWrittenPremium, \n\tTotalNetWrittenPremium, \n\tDirectEarnedPremium, \n\tCededEarnedPremium, \n\tNetEarnedPremium, \n\tChangeinDirectEarnedPremium, \n\tChangeinCededEarnedPremium, \n\tNetChangeinCededEarnedPremium, \n\tDirectUnearnedPremium, \n\tCededUnearnedPremium, \n\tNetUnearnedPremium, \n\tMonthlyChangeInDirectUnearnedPremium, \n\tMonthlyChangeInCededUnearnedPremium, \n\tDirectInforcePremium, \n\tCededInforcePremium, \n\tNetInforcePremium, \n\tRatingCoverageEffectiveDateId, \n\tRatingCoverageExpirationDateId, \n\tInsuranceReferenceDimId AS InsuranceReferenceDimId2, \n\tEDWPremiumMasterCalculationPKId AS EDWPremiumMasterCalculationPKId2, \n\tEarnedExposure AS EarnedExposure2, \n\tCoverageDetailDimId AS CoverageDetailDimId2, \n\tInsuranceReferenceCoverageDimId AS InsuranceReferenceCoverageDimId2, \n\tExposureBasisDimId AS ExposureBasisDimId2, \n\tChangeInEarnedExposure AS ChangeInEarnedExposure2, \n\tSalesDivisionDimID AS SalesDivisionDimID2, \n\tStatisticalCoverageCancellationDateId AS StatisticalCoverageCancellationDateId2\n\tFROM RTR_INSERT_UPDATE_DEFAULT1\n),\nTGT_EarnedPremiumTransactionMonthlyFact_Update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_DATABASE_NAME}.@{pipeline().parameters.TARGET_TABLE_OWNER}.@{pipeline().parameters.TARGET_TABLE_NAME} AS T\n\tUSING UPD_Update AS S\n\tON T.EarnedPremiumTransactionMonthlyFactID = S.EarnedPremiumTransactionMonthlyFactID1\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.AuditID = S.AuditID, T.EDWEarnedPremiumMonthlyCalculationPKID = S.EDWEarnedPremiumMonthlyCalculationPKID1, T.AnnualStatementLineDimID = S.AnnualStatementLineDimID, T.AnnualStatementLineProductCodeDimID = S.AnnualStatementLineProductCodeDimID, T.AgencyDimID = S.AgencyDimID, T.PolicyDimID = S.PolicyDimID, T.ContractCustomerDimID = S.ContractCustomerDimID, T.RiskLocationDimID = S.RiskLocationDimID, T.ReinsuranceCoverageDimID = S.ReinsuranceCoverageDimID, T.PremiumTransactionTypeDimID = S.PremiumTransactionTypeDimID, T.PolicyEffectiveDateID = S.PolicyEffectiveDateID, T.PolicyExpirationDateID = S.PolicyExpirationDateID, T.PolicyCoverageEffectiveDateID = S.PolicyCoverageEffectiveDateID, T.PolicyCoverageExpirationDateID = S.PolicyCoverageExpirationDateID, T.PremiumTransactionEnteredDateID = S.PremiumTransactionEnteredDateID, T.PremiumTransactionEffectiveDateID = S.PremiumTransactionEffectiveDateID, T.PremiumTransactionExpirationDateID = S.PremiumTransactionExpirationDateID, T.PremiumTransactionBookedDateID = S.PremiumTransactionBookedDateID, T.PremiumTransactionRunDateID = S.PremiumTransactionRunDateID, T.MonthlyTotalDirectWrittenPremium = S.TotalDirectWrittenPremium, T.MonthlyTotalCededWrittenPremium = S.TotalCededWrittenPremium, T.MonthlyTotalNetWrittenPremium = S.TotalNetWrittenPremium, T.MonthlyDirectEarnedPremium = S.DirectEarnedPremium, T.MonthlyCededEarnedPremium = S.CededEarnedPremium, T.MonthlyNetEarnedPremium = S.NetEarnedPremium, T.MonthlyChangeinDirectEarnedPremium = S.ChangeinDirectEarnedPremium, T.MonthlyChangeinCededEarnedPremium = S.ChangeinCededEarnedPremium, T.MonthlyNetChangeinCededEarnedPremium = S.NetChangeinCededEarnedPremium, T.MonthlyDirectUnearnedPremium = S.DirectUnearnedPremium, T.MonthlyCededUnearnedPremium = S.CededUnearnedPremium, T.MonthlyNetUnearnedPremium = S.NetUnearnedPremium, T.MonthlyChangeInDirectUnearnedPremium = S.MonthlyChangeInDirectUnearnedPremium, T.MonthlyChangeInCededUnearnedPremium = S.MonthlyChangeInCededUnearnedPremium, T.MonthlyDirectInforcePremium = S.DirectInforcePremium, T.MonthlyCededInforcePremium = S.CededInforcePremium, T.MonthlyNetInforcePremium = S.NetInforcePremium, T.EDWPremiumMasterCalculationPKId = S.EDWPremiumMasterCalculationPKId2, T.InsuranceReferenceDimId = S.InsuranceReferenceDimId2, T.EarnedExposureAmount = S.EarnedExposure2, T.CoverageDetailDimId = S.CoverageDetailDimId2, T.InsuranceReferenceCoverageDimId = S.InsuranceReferenceCoverageDimId2, T.MonthlyChangeInEarnedExposureAmount = S.ChangeInEarnedExposure2, T.CoverageCancellationDateId = S.StatisticalCoverageCancellationDateId2\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "244789"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "893406"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7543471"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "07/01/2023 09:37:21"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/01/2023 23:13:41"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Data_Mart_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "PMS"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "RPT_EDM"
            },
            "TARGET_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "WC_Data_Mart"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "V2"
            },
            "TARGET_TABLE_NAME": {
                "type": "string",
                "defaultValue": "EarnedPremiumTransactionMonthlyFact"
            },
            "WHERE_CLAUSE": {
                "type": "string",
                "defaultValue": "AND EPMC.EarnedPremiumMonthlyCalculationID not in (select EDWEarnedPremiumMonthlyCalculationPKID from WC_Data_Mart..EarnedPremiumTransactionMonthlyFact where auditid = 244789)"
            },
            "LOOKUP_CLAUSE": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Policy DataMart/"
        },
        "annotations": []
    }
}