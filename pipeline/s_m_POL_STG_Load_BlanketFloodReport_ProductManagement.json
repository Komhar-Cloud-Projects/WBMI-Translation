{
    "name": "s_m_POL_STG_Load_BlanketFloodReport_ProductManagement",
    "properties": {
        "activities": [
            {
                "name": "m_POL_STG_Load_BlanketFloodReport_ProductManagement",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_DC_Policy_BP AS (\n\twith locbuild \r\n\tas (\r\n\t\tselect distinct\r\n\t\tdcp.PolicyNumber,\r\n\t\twbp.PolicyVersionFormatted,\r\n\t\tLocBuildNumber = \r\n\t\t\tstuff((select distinct ', ' + concat('Loc ',  bploc2.Number, ', Build ',  wrsk2.BuildingNumber)\r\n\t\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp2 with(nolock)\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp2 with(nolock) \r\n\t\t\t\t\ton dcp2.PolicyId = wbp2.PolicyId\r\n\t\t\t\t\tand wbp2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust2 with(nolock) \r\n\t\t\t\t\ton wbpartyCust2.SessionId = wbp2.SessionId \r\n\t\t\t\t\tand wbpartyCust2.CustomerNum is not null\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage dc2 with(nolock)\r\n\t\t\t\t\ton dc2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Risk rsk2 with (nolock)\r\n\t\t\t\t\ton rsk2.BP_RiskId = dc2.ObjectId\r\n\t\t\t\t\tand dc2.ObjectName = 'DC_BP_Risk'\r\n\t\t\t\t\tand dc2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_Risk wrsk2 with (nolock)\r\n\t\t\t\t\ton wrsk2.BP_RiskId = rsk2.BP_RiskId\r\n\t\t\t\t\tand wrsk2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Building bpbuild2 with (nolock)\r\n\t\t\t\t\ton bpbuild2.BP_BuildingId = rsk2.BP_BuildingId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Location bploc2 with (nolock)\r\n\t\t\t\t\ton bploc2.BP_LocationId = bpbuild2.BP_LocationId\r\n\t\t\t\twhere dcp2.PolicyNumber = dcp.PolicyNumber\r\n\t\t\t\tand wbp2.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\t\t\t\tand dc2.Type = 'FloodRisk'\r\n\t\t\t\tfor xml path('')), 1, 2, '')\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\t\tand wbp.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\t\ton t.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust with(nolock) \r\n\t\t\ton wbpartyCust.SessionId = wbp.SessionId \r\n\t\t\tand wbpartyCust.CustomerNum is not null\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage dc with(nolock)\r\n\t\t\ton dc.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Risk rsk with (nolock)\r\n\t\t\ton rsk.BP_RiskId = dc.ObjectId\r\n\t\t\tand dc.ObjectName = 'DC_BP_Risk'\r\n\t\t\tand dc.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_Risk wrsk with (nolock)\r\n\t\t\ton wrsk.BP_RiskId = rsk.BP_RiskId\r\n\t\t\tand wrsk.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Building bpbuild with (nolock)\r\n\t\t\ton bpbuild.BP_BuildingId = rsk.BP_BuildingId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_BP_Location bploc with (nolock)\r\n\t\t\ton bploc.BP_LocationId = bpbuild.BP_LocationId\r\n\t\twhere dc.Type = 'FloodRisk'\r\n\t\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew') --KAY: ADDED THIS LINE\r\n\t\t@{pipeline().parameters.PREV_MONTH}\r\n\t\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE_BP_LOCATION}\r\n\t\tgroup by dcp.PolicyNumber, wbp.PolicyVersionFormatted\r\n\t),\r\n\t\r\n\t\r\n\tFloodValues \r\n\tas (\r\n\t\tselect \r\n\t\tdcp.PolicyNumber,\r\n\t\twbp.PolicyVersionFormatted,\r\n\t\tdcp.sessionID,\r\n\t\tsum(dc.Change) as FloodChange,\r\n\t\tsum(dc.written) as FloodWritten\t\t\t\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\t\tand wbp.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\t\ton t.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage dc with(nolock)\r\n\t\t\ton dc.SessionId = dcp.SessionId\r\n\t\twhere wbp.WBProduct = 'SMARTbusiness'\r\n\t\tand dc.Type = 'FloodRisk'\r\n\t\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew') \r\n\t\tand (dc.Change <> 0 or dc.Written <> 0 or dc.Premium <> 0) \r\n\t\t@{pipeline().parameters.PREV_MONTH}\r\n\t\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE_BP_FLOODVALUES}\r\n\t\tgroup by dcp.PolicyNumber, wbp.PolicyVersionFormatted, dcp.sessionID\r\n\t)\r\n\t\r\n\t\r\n\t(select distinct t.Type as TransactionType\r\n\t,t.EffectiveDate as TransactionEffectiveDate\r\n\t,dcp.PolicyNumber as PolicyNumber\r\n\t,wbp.PolicyVersionFormatted as PolicyMod\r\n\t,wbpartyCust.CustomerNum as CustomerNumber\r\n\t,dcparty.Name as NamedInsured\r\n\t,wbag.Reference as AgencyCode\r\n\t,dcpartyag.Name as AgencyName\r\n\t,wbp.Division as Division\r\n\t,wbp.WBProduct as Product\r\n\t,wbp.PolicyIssueCodeDesc as PolicyIssueCodeDescription\r\n\t,dcp.PrimaryRatingState as RatingState\r\n\t,wbp.BCCCode as BCCCode\r\n\t,wbp.BCCCodeDesc as BCCCodeDescription\r\n\t,wbp.PolicyProgram as PolicyProgram\r\n\t,locbuild.LocBuildNumber as LocationsAndBuildings\r\n\t,bpla.FloodZone as FloodZone\r\n\t,wbp.TotalFloodLimit as TotalFloodLimit\r\n\t,wbp.TotalFloodDeductible as TotalFloodDeductible\r\n\t,'Yes' as 'BlanketFlood' --Identifies if flood premium is from Blanket coverage.\r\n\t,bpline.TotalFloodChangePremium as TotalFloodChangePremium\r\n\t,bpline.TotalFloodWrittenPremium as TotalFloodWrittenPremium \r\n\t,ps.Written as PolicyPremium\r\n\t,bpfr.CertificateReceivedDate as CertificateReceived\r\n\t,bpfr.ReinsurerName as ReinsurerName\r\n\t,bpfr.Type as Type\r\n\t,bpfr.AmountCeded as AmountCeded\r\n\t,bpfr.Premium as ReinsurerPremium\r\n\t,t.TransactionDate as TransactionDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\tand wbp.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line dcl with(nolock) \r\n\t\ton dcl.PolicyId = dcp.PolicyId\r\n\t\tand dcl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Line wbl with(nolock) \r\n\t\ton dcl.LineId = wbl.LineId\r\n\t\tand wbl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcparty with(nolock) \r\n\t\ton dcparty.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust with(nolock) \r\n\t\ton wbpartyCust.SessionId = dcp.SessionId\r\n\t\tand dcparty.PartyId = wbpartyCust.PartyId\r\n\t\tand wbpartyCust.CustomerNum is not null\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Agency wbag with(nolock)\r\n\t\ton wbag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpa with(nolock) \r\n\t\ton dpa.SessionId = dcparty.SessionId\r\n\t\tand dcparty.PartyId = dpa.PartyId\r\n\t\tand dpa.PartyAssociationType = 'Account'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcpartyag with(nolock) \r\n\t\ton dcpartyag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpag with(nolock) \r\n\t\ton dpag.SessionId = dcparty.SessionId\r\n\t\tand dcpartyag.PartyId = dpag.PartyId\r\n\t\tand dpag.PartyAssociationType = 'Agency'\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_FacultativeReinsurer bpfr with(nolock)\r\n\t\ton bpfr.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PremiumSubtotal ps with(nolock) \r\n\t\ton ps.SessionId = dcp.SessionId\r\n\t\tand ps.ObjectName = 'DC_Policy'\r\n\t\tand ps.ObjectId = dcp.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_LocationAccount bpla with(nolock)\r\n\t\ton bpla.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_Line bpline with(nolock)\r\n\t\ton bpline.SessionId = dcp.SessionId\r\n\tinner join locbuild locbuild with (nolock)\r\n\t\ton locbuild.PolicyNumber = dcp.PolicyNumber\r\n\t\tand locbuild.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\ton t.SessionId = dcp.SessionId\r\n\twhere wbp.WBProduct = 'SMARTbusiness'\r\n\tand ps.Type = 'Policy'\r\n\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew')\r\n\tand ((bpline.TotalFloodPremium is not NULL and bpline.TotalFloodChangePremium is not NULL and bpline.TotalFloodWrittenPremium is not NULL) --KAY: ADDED THIS LINE so only blanket records are created from this logic\r\n\t\tAND (bpline.TotalFloodPremium <> 0 or bpline.TotalFloodChangePremium <> 0 or bpline.TotalFloodWrittenPremium <> 0)) --KAY: ADDED THIS LINE so only blanket records are created from this logic\r\n\t@{pipeline().parameters.PREV_MONTH}\r\n\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BP}\r\n\t\r\n\tUNION \r\n\t\r\n\tselect distinct t.Type as TransactionType\r\n\t,t.EffectiveDate as TransactionEffectiveDate\r\n\t,dcp.PolicyNumber as PolicyNumber\r\n\t,wbp.PolicyVersionFormatted as PolicyMod\r\n\t,wbpartyCust.CustomerNum as CustomerNumber\r\n\t,dcparty.Name as NamedInsured\r\n\t,wbag.Reference as AgencyCode\r\n\t,dcpartyag.Name as AgencyName\r\n\t,wbp.Division as Division\r\n\t,wbp.WBProduct as Product\r\n\t,wbp.PolicyIssueCodeDesc as PolicyIssueCodeDescription\r\n\t,dcp.PrimaryRatingState as RatingState\r\n\t,wbp.BCCCode as BCCCode\r\n\t,wbp.BCCCodeDesc as BCCCodeDescription\r\n\t,wbp.PolicyProgram as PolicyProgram\r\n\t,locbuild.LocBuildNumber as LocationsAndBuildings\r\n\t,bpla.FloodZone as FloodZone\r\n\t,wbp.TotalFloodLimit as TotalFloodLimit\r\n\t,wbp.TotalFloodDeductible as TotalFloodDeductible\r\n\t,'No' as 'BlanketFlood'\r\n\t,fv.FloodChange as TotalFloodChangePremium\r\n\t,fv.FloodWritten as TotalFloodWrittenPremium\r\n\t,ps.Written as PolicyPremium\r\n\t,bpfr.CertificateReceivedDate as CertificateReceived\r\n\t,bpfr.ReinsurerName as ReinsurerName\r\n\t,bpfr.Type as Type\r\n\t,bpfr.AmountCeded as AmountCeded\r\n\t,bpfr.Premium as ReinsurerPremium\r\n\t,t.TransactionDate as TransactionDate\r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\tand wbp.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line dcl with(nolock) \r\n\t\ton dcl.PolicyId = dcp.PolicyId\r\n\t\tand dcl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Line wbl with(nolock) \r\n\t\ton dcl.LineId = wbl.LineId\r\n\t\tand wbl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcparty with(nolock) \r\n\t\ton dcparty.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust with(nolock) \r\n\t\ton wbpartyCust.SessionId = dcp.SessionId\r\n\t\tand dcparty.PartyId = wbpartyCust.PartyId\r\n\t\tand wbpartyCust.CustomerNum is not null\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Agency wbag with(nolock)\r\n\t\ton wbag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpa with(nolock) \r\n\t\ton dpa.SessionId = dcparty.SessionId\r\n\t\tand dcparty.PartyId = dpa.PartyId\r\n\t\tand dpa.PartyAssociationType = 'Account'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcpartyag with(nolock) \r\n\t\ton dcpartyag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpag with(nolock) \r\n\t\ton dpag.SessionId = dcparty.SessionId\r\n\t\tand dcpartyag.PartyId = dpag.PartyId\r\n\t\tand dpag.PartyAssociationType = 'Agency'\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_FacultativeReinsurer bpfr with(nolock)\r\n\t\ton bpfr.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PremiumSubtotal ps with(nolock) \r\n\t\ton ps.SessionId = dcp.SessionId\r\n\t\tand ps.ObjectName = 'DC_Policy'\r\n\t\tand ps.ObjectId = dcp.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_LocationAccount bpla with(nolock)\r\n\t\ton bpla.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_BP_Line bpline with(nolock)\r\n\t\ton bpline.SessionId = dcp.SessionId\r\n\tinner join locbuild locbuild with (nolock)\r\n\t\ton locbuild.PolicyNumber = dcp.PolicyNumber\r\n\t\tand locbuild.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\ton t.SessionId = dcp.SessionId\r\n\tinner join FloodValues fv with (nolock)\r\n\t\ton fv.PolicyNumber = dcp.PolicyNumber\r\n\t\tand fv.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\t\tand fv.SessionId = t.SessionId\r\n\twhere wbp.WBProduct = 'SMARTbusiness'\r\n\tand ps.Type = 'Policy'\r\n\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew')\r\n\t@{pipeline().parameters.PREV_MONTH}\r\n\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_BP2})\n),\nSQ_DC_Policy_CF AS (\n\twith locbuild \r\n\tas (\r\n\t\tselect distinct\r\n\t\tdcp.PolicyNumber,\r\n\t\twbp.PolicyVersionFormatted,\r\n\t\tLocBuildNumber = \r\n\t\t\tstuff((select distinct ', ' + concat('Loc ',  cfloc2.Number, ', Build ',  cfbuild2.LocationBuildingNumber)\r\n\t\t\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp2 with(nolock)\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp2 with(nolock) \r\n\t\t\t\t\ton dcp2.PolicyId = wbp2.PolicyId\r\n\t\t\t\t\tand wbp2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust2 with(nolock) \r\n\t\t\t\t\ton wbpartyCust2.SessionId = wbp2.SessionId \r\n\t\t\t\t\tand wbpartyCust2.CustomerNum is not null\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage dc2 with(nolock)\r\n\t\t\t\t\ton dc2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk rsk2 with (nolock)\r\n\t\t\t\t\ton rsk2.CF_RiskId = dc2.ObjectId\r\n\t\t\t\t\tand dc2.ObjectName = 'DC_CF_Risk'\r\n\t\t\t\t\tand rsk2.SessionId = dcp2.SessionId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Building cfbuild2 with (nolock)\r\n\t\t\t\t\ton cfbuild2.CF_BuildingId = rsk2.CF_BuildingId\r\n\t\t\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Location cfloc2 with (nolock)\r\n\t\t\t\t\ton cfloc2.CF_LocationId = cfbuild2.CF_LocationId\r\n\t\t\t\twhere dcp2.PolicyNumber = dcp.PolicyNumber\r\n\t\t\t\tand wbp2.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\t\t\t\tand dc2.Type = 'FloodRisk'\r\n\t\t\t\tfor xml path('')), 1, 2, '')\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\t\tand wbp.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\t\ton t.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust with(nolock) \r\n\t\t\ton wbpartyCust.SessionId = wbp.SessionId \r\n\t\t\tand wbpartyCust.CustomerNum is not null\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage dc with(nolock)\r\n\t\t\ton dc.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk rsk with (nolock)\r\n\t\t\ton rsk.CF_RiskId = dc.ObjectId\r\n\t\t\tand dc.ObjectName = 'DC_CF_Risk'\r\n\t\t\tand rsk.SessionId = dcp.SessionId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Building cfbuild with (nolock)\r\n\t\t\ton cfbuild.CF_BuildingId = rsk.CF_BuildingId\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Location cfloc with (nolock)\r\n\t\t\ton cfloc.CF_LocationId = cfbuild.CF_LocationId\r\n\t\twhere dc.Type = 'FloodRisk'\r\n\t\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew')\r\n\t\t@{pipeline().parameters.PREV_MONTH}\r\n\t\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t\t@{pipeline().parameters.WHERE_CLAUSE_CF_LOCATION}\r\n\t\tgroup by dcp.PolicyNumber, wbp.PolicyVersionFormatted\r\n\t\r\n\t)\r\n\t\r\n\t\r\n\tselect distinct t.Type as TransactionType\r\n\t,t.EffectiveDate as TransactionEffectiveDate\r\n\t,dcp.PolicyNumber as PolicyNumber\r\n\t,wbp.PolicyVersionFormatted as PolicyMod\r\n\t,wbpartyCust.CustomerNum as CustomerNumber\r\n\t,dcparty.Name as NamedInsured\r\n\t,wbag.Reference as AgencyCode\r\n\t,dcpartyag.Name as AgencyName\r\n\t,wbp.Division as Division\r\n\t,wbp.WBProduct as Product\r\n\t,wbp.PolicyIssueCodeDesc as PolicyIssueCodeDescription\r\n\t,dcp.PrimaryRatingState as RatingState\r\n\t,wbp.BCCCode as BCCCode\r\n\t,wbp.BCCCodeDesc as BCCCodeDescription\r\n\t,wbp.PolicyProgram as PolicyProgram\r\n\t,locbuild.LocBuildNumber as LocationsAndBuildings\r\n\t,cflp.FloodZone as FloodZone\r\n\t,wbp.TotalFloodLimit as TotalFloodLimit\r\n\t,wbp.TotalFloodDeductible as TotalFloodDeductible\r\n\t,'Yes' as 'BlanketFlood' -- Identifies if flood premium is from Blanket coverage. All flood premium on CPP is from Blanket. \r\n\t,cfline.TotalFloodChangePremium as TotalFloodChangePremium \r\n\t,cfline.TotalFloodWrittenPremium as TotalFloodWrittenPremium\r\n\t,ps.Written as PolicyPremium\r\n\t,cffr.CertificateReceived as CertificateReceived\r\n\t,cffr.ReinsurerName as ReinsurerName\r\n\t,cffr.Type as Type\r\n\t,cffr.AmountCeded as AmountCeded\r\n\t,cffr.ReinsurerPremium as ReinsurerPremium\r\n\t,t.TransactionDate as TransactionDate \r\n\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Policy dcp with(nolock)\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy wbp with(nolock) \r\n\t\ton dcp.PolicyId = wbp.PolicyId\r\n\t\tand wbp.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Line dcl with(nolock) \r\n\t\ton dcl.PolicyId = dcp.PolicyId\r\n\t\tand dcl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Line wbl with(nolock) \r\n\t\ton dcl.LineId = wbl.LineId\r\n\t\tand wbl.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcparty with(nolock) \r\n\t\ton dcparty.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Party wbpartyCust with(nolock) \r\n\t\ton wbpartyCust.SessionId = dcp.SessionId\r\n\t\tand dcparty.PartyId = wbpartyCust.PartyId\r\n\t\tand wbpartyCust.CustomerNum is not null\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Agency wbag with(nolock)\r\n\t\ton wbag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpa with(nolock) \r\n\t\ton dpa.SessionId = dcparty.SessionId\r\n\t\tand dcparty.PartyId = dpa.PartyId\r\n\t\tand dpa.PartyAssociationType = 'Account'\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Party dcpartyag with(nolock) \r\n\t\ton dcpartyag.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PartyAssociation dpag with(nolock) \r\n\t\ton dpag.SessionId = dcparty.SessionId\r\n\t\tand dcpartyag.PartyId = dpag.PartyId\r\n\t\tand dpag.PartyAssociationType = 'Agency'\r\n\tleft join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CF_FacultativeReinsurer cffr with(nolock) \r\n\t\ton cffr.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_PremiumSubtotal ps with(nolock) \r\n\t\ton ps.SessionId = dcp.SessionId\r\n\t\tand ps.ObjectName = 'DC_Policy'\r\n\t\tand ps.ObjectId = dcp.PolicyId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CF_LocationProperty cflp with(nolock)\r\n\t\ton cflp.SessionId = dcp.SessionId\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_CF_Line cfline with(nolock)\r\n\t\ton cfline.SessionId = dcp.SessionId\r\n\tinner join locbuild locbuild with (nolock)\r\n\t\ton locbuild.PolicyNumber = dcp.PolicyNumber\r\n\t\tand locbuild.PolicyVersionFormatted = wbp.PolicyVersionFormatted\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction t with(nolock)\r\n\t\ton t.SessionId = dcp.SessionId\r\n\twhere wbp.WBProduct = 'Commercial Package'\r\n\tand ps.Type = 'Policy'\r\n\tand t.Type not in ('Information', 'CancelPending', 'RescindCancelPending', 'NonRenew')\r\n\t@{pipeline().parameters.PREV_MONTH}\r\n\t@{pipeline().parameters.PREV_MONTH_YEAR}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_CF}\n),\nUnion AS (\n\tSELECT TransactionType, TransactionEffectiveDate, PolicyNumber, PolicyMod, CustomerNumber, NamedInsured, AgencyCode, AgencyName, Division, Product, PolicyIssueCodeDescription, RatingState, BCCCode, BCCCodeDescription, PolicyProgram, LocationsAndBuildings, FloodZone, TotalFloodLimit, TotalFloodDeductible, BlanketFlood, TotalFloodChangePremium, TotalFloodWrittenPremium, PolicyPremium, CertificateReceived, ReinsurerName, Type, AmountCeded, ReinsurerPremium, TransactionDate\n\tFROM SQ_DC_Policy_CF\n\tUNION\n\tSELECT TransactionType, TransactionEffectiveDate, PolicyNumber, PolicyMod, CustomerNumber, NamedInsured, AgencyCode, AgencyName, Division, Product, PolicyIssueCodeDescription, RatingState, BCCCode, BCCCodeDescription, PolicyProgram, LocationsAndBuildings, FloodZone, TotalFloodLimit, TotalFloodDeductible, BlanketFlood, TotalFloodChangePremium, TotalFloodWrittenPremium, PolicyPremium, CertificateReceived, ReinsurerName, Type, AmountCeded, ReinsurerPremium, TransactionDate\n\tFROM SQ_DC_Policy_BP\n),\nSRT_BlanketFlood AS (\n\tSELECT\n\tPolicyNumber, \n\tPolicyMod, \n\tTransactionEffectiveDate, \n\tTransactionDate, \n\tTransactionType, \n\tCustomerNumber, \n\tNamedInsured, \n\tAgencyCode, \n\tAgencyName, \n\tDivision, \n\tProduct, \n\tPolicyIssueCodeDescription, \n\tRatingState, \n\tBCCCode, \n\tBCCCodeDescription, \n\tPolicyProgram, \n\tLocationsAndBuildings, \n\tFloodZone, \n\tTotalFloodLimit, \n\tTotalFloodDeductible, \n\tBlanketFlood, \n\tTotalFloodChangePremium, \n\tTotalFloodWrittenPremium, \n\tPolicyPremium, \n\tCertificateReceived, \n\tReinsurerName, \n\tType, \n\tAmountCeded, \n\tReinsurerPremium\n\tFROM Union\n\tORDER BY PolicyNumber ASC, PolicyMod ASC, TransactionEffectiveDate ASC, TransactionDate ASC\n),\nLKP_Program AS (\n\tSELECT\n\tProgramDescription,\n\tlkp_PolicyProgram\n\tFROM (\n\t\tSELECT ProgramDescription as ProgramDescription,\r\n\t\tProgramCode as lkp_PolicyProgram \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER_RPT_EDM}.Program\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY lkp_PolicyProgram ORDER BY ProgramDescription) = 1\n),\nEXP_BlanketFlood AS (\n\tSELECT\n\tSRT_BlanketFlood.TransactionType,\n\tSRT_BlanketFlood.TransactionEffectiveDate,\n\tSRT_BlanketFlood.PolicyNumber AS i_PolicyNumber,\n\t-- *INF*: CHR(39) || i_PolicyNumber || CHR(39)\n\tCHR(39) || i_PolicyNumber || CHR(39) AS v_PolicyNumber,\n\tv_PolicyNumber AS o_PolicyNumber,\n\tSRT_BlanketFlood.PolicyMod AS i_PolicyMod,\n\t-- *INF*: CHR(39) || i_PolicyMod || CHR(39)\n\tCHR(39) || i_PolicyMod || CHR(39) AS v_PolicyMod,\n\tv_PolicyMod AS o_PolicyMod,\n\tSRT_BlanketFlood.CustomerNumber AS i_CustomerNumber,\n\t-- *INF*: CHR(39) || i_CustomerNumber || CHR(39)\n\tCHR(39) || i_CustomerNumber || CHR(39) AS v_CustomerNumber,\n\tv_CustomerNumber AS o_CustomerNumber,\n\tSRT_BlanketFlood.NamedInsured AS i_NamedInsured,\n\t-- *INF*: CHR(34) || i_NamedInsured || CHR(34)\n\tCHR(34) || i_NamedInsured || CHR(34) AS v_NamedInsured,\n\tv_NamedInsured AS o_NamedInsured,\n\tSRT_BlanketFlood.AgencyCode,\n\tSRT_BlanketFlood.AgencyName AS i_AgencyName,\n\t-- *INF*: CHR(34) || i_AgencyName || CHR(34)\n\tCHR(34) || i_AgencyName || CHR(34) AS v_AgencyName,\n\tv_AgencyName AS o_AgencyName,\n\tSRT_BlanketFlood.Division,\n\tSRT_BlanketFlood.Product,\n\tSRT_BlanketFlood.PolicyIssueCodeDescription,\n\tSRT_BlanketFlood.RatingState,\n\tSRT_BlanketFlood.BCCCode AS i_BCCCode,\n\t-- *INF*: IIF(ISNULL(i_BCCCode) = 1, 'N/A', CHR(39) || i_BCCCode || CHR(39))\n\tIFF(i_BCCCode IS NULL = 1, 'N/A', CHR(39) || i_BCCCode || CHR(39)) AS v_BCCCode,\n\tv_BCCCode AS o_BCCCode,\n\tSRT_BlanketFlood.BCCCodeDescription AS i_BCCCodeDescription,\n\t-- *INF*: IIF(ISNULL(i_BCCCodeDescription) = 1, 'N/A', CHR(34) || i_BCCCodeDescription || CHR(34))\n\tIFF(i_BCCCodeDescription IS NULL = 1, 'N/A', CHR(34) || i_BCCCodeDescription || CHR(34)) AS v_BCCCodeDescription,\n\tv_BCCCodeDescription AS o_BCCCodeDescription,\n\tLKP_Program.ProgramDescription,\n\tSRT_BlanketFlood.LocationsAndBuildings AS i_LocationsAndBuildings,\n\t-- *INF*: CHR(34) || i_LocationsAndBuildings || CHR(34)\n\tCHR(34) || i_LocationsAndBuildings || CHR(34) AS v_LocationsAndBuildings,\n\tv_LocationsAndBuildings AS o_LocationsAndBuildings,\n\tSRT_BlanketFlood.FloodZone,\n\tSRT_BlanketFlood.TotalFloodLimit,\n\tSRT_BlanketFlood.TotalFloodDeductible,\n\tSRT_BlanketFlood.BlanketFlood,\n\tSRT_BlanketFlood.TotalFloodChangePremium,\n\tSRT_BlanketFlood.TotalFloodWrittenPremium,\n\tSRT_BlanketFlood.PolicyPremium,\n\tSRT_BlanketFlood.CertificateReceived AS i_CertificateReceived,\n\t-- *INF*: IIF(ISNULL(i_CertificateReceived) = 1, 'N/A', TO_CHAR(i_CertificateReceived, 'MM/DD/YYYY'))\n\tIFF(i_CertificateReceived IS NULL = 1, 'N/A', TO_CHAR(i_CertificateReceived, 'MM/DD/YYYY')) AS o_CertificateReceived,\n\tSRT_BlanketFlood.ReinsurerName AS i_ReinsurerName,\n\t-- *INF*: IIF(ISNULL(i_ReinsurerName ) = 1, 'N/A', CHR(34) || i_ReinsurerName || CHR(34))\n\tIFF(i_ReinsurerName IS NULL = 1, 'N/A', CHR(34) || i_ReinsurerName || CHR(34)) AS v_ReinsurerName,\n\tv_ReinsurerName AS o_ReinsurerName,\n\tSRT_BlanketFlood.Type AS i_Type,\n\t-- *INF*: IIF(ISNULL(i_Type) = 1, 'N/A', i_Type)\n\tIFF(i_Type IS NULL = 1, 'N/A', i_Type) AS o_Type,\n\tSRT_BlanketFlood.AmountCeded AS i_AmountCeded,\n\t-- *INF*: IIF(ISNULL(i_AmountCeded) = 1, 'N/A', TO_CHAR(i_AmountCeded))\n\tIFF(i_AmountCeded IS NULL = 1, 'N/A', TO_CHAR(i_AmountCeded)) AS o_AmountCeded,\n\tSRT_BlanketFlood.ReinsurerPremium AS i_ReinsurerPremium,\n\t-- *INF*: IIF(ISNULL(i_ReinsurerPremium) = 1, 'N/A', TO_CHAR(i_ReinsurerPremium))\n\tIFF(i_ReinsurerPremium IS NULL = 1, 'N/A', TO_CHAR(i_ReinsurerPremium)) AS o_ReinsurerPremium,\n\tSRT_BlanketFlood.TransactionDate\n\tFROM SRT_BlanketFlood\n\tLEFT JOIN LKP_Program\n\tON LKP_Program.lkp_PolicyProgram = SRT_BlanketFlood.PolicyProgram\n),\nFloodReport AS (\n\tINSERT INTO BlanketFloodReport_ProductManagement\n\t(TransactionType, TransactionEffectiveDate, PolicyNumber, PolicyMod, CustomerNumber, NamedInsured, AgencyCode, AgencyName, Division, Product, PolicyIssueCodeDescription, RatingState, BCCCode, BCCCodeDescription, ProgramDescription, LocationsAndBuildings, FloodZone, TotalFloodLimit, TotalFloodDeductible, BlanketFlood, TotalFloodChangePremium, TotalFloodWrittenPremium, PolicyPremium, CertificateReceived, ReinsurerName, Type, AmountCeded, ReinsurerPremium)\n\tSELECT \n\tTRANSACTIONTYPE, \n\tTRANSACTIONEFFECTIVEDATE, \n\to_PolicyNumber AS POLICYNUMBER, \n\to_PolicyMod AS POLICYMOD, \n\to_CustomerNumber AS CUSTOMERNUMBER, \n\to_NamedInsured AS NAMEDINSURED, \n\tAGENCYCODE, \n\to_AgencyName AS AGENCYNAME, \n\tDIVISION, \n\tPRODUCT, \n\tPOLICYISSUECODEDESCRIPTION, \n\tRATINGSTATE, \n\to_BCCCode AS BCCCODE, \n\to_BCCCodeDescription AS BCCCODEDESCRIPTION, \n\tPROGRAMDESCRIPTION, \n\to_LocationsAndBuildings AS LOCATIONSANDBUILDINGS, \n\tFLOODZONE, \n\tTOTALFLOODLIMIT, \n\tTOTALFLOODDEDUCTIBLE, \n\tBLANKETFLOOD, \n\tTOTALFLOODCHANGEPREMIUM, \n\tTOTALFLOODWRITTENPREMIUM, \n\tPOLICYPREMIUM, \n\to_CertificateReceived AS CERTIFICATERECEIVED, \n\to_ReinsurerName AS REINSURERNAME, \n\to_Type AS TYPE, \n\to_AmountCeded AS AMOUNTCEDED, \n\to_ReinsurerPremium AS REINSURERPREMIUM\n\tFROM EXP_BlanketFlood\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PREV_MONTH": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "PREV_MONTH_YEAR": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BP_LOCATION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BP_FLOODVALUES": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BP": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_BP2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_CF_LOCATION": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_CF": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_RPT_EDM": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyStaging/"
        },
        "annotations": []
    }
}