{
    "name": "s_m_FEED_Update_DeductibleAmount_WorkISSExtract_CF_CR",
    "properties": {
        "activities": [
            {
                "name": "m_FEED_Update_DeductibleAmount_WorkISSExtract_CF_CR",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_IDO_Data AS (\n\tSELECT\r\n\t\tWP.PolicyNumber\r\n\t\t,WP.PolicyVersionFormatted\r\n\t\t,DT.HistoryID\r\n\t\t,DT.Type\r\n\t\t,ISNULL(DT.TransactionDate, DT.CreatedDate) TransactionDate\r\n\t\t,DS.Purpose\r\n\t\t,c.CoverageId\r\n\t\t,C.ID\r\n\t\t,a.Type Deductible_Type\r\n\t\t,CASE\r\n\t\t\tWHEN ISNUMERIC(a.Value) = 1 THEN CONVERT(MONEY, a.Value)\r\n\t\t\tELSE 0\r\n\t\tEND AS Value\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Deductible a\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Builder b\r\n\t\tON a.ObjectId = b.CF_BuilderId\r\n\t\t\tAND a.SessionId = b.SessionId\r\n\t\t\tAND a.ObjectName = 'DC_CF_Builder'\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage c\r\n\t\tON c.SessionId = b.SessionId\r\n\t\t\tAND b.CF_RiskId = c.ObjectId\r\n\t\t\tAND c.ObjectName = 'DC_CF_Risk'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\t\tON A.SessionId = DT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\t\tON A.SessionId = WP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS\r\n\t\tON A.SessionId = DS.SessionId\r\n\t------ RFC 126190\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk DR\r\n\t\tON DR.CF_RiskId = b.CF_RiskID\r\n\t\t\tAND DR.RiskType NOT IN ('ALS', 'BIEE', 'EXTRA', 'EETOOLS')\r\n\t------\r\n\tWHERE a.Type IN ('Standard', 'WindHail', 'DeductibleMaster', 'DeductibleWindHailMaster')\r\n\tAND ISNULL(a.Value, '0') NOT IN ('0', 'NA')\r\n\t\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IDO}\r\n\t\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT\r\n\t\tWP.PolicyNumber\r\n\t\t,WP.PolicyVersionFormatted\r\n\t\t,DT.HistoryID\r\n\t\t,DT.Type\r\n\t\t,ISNULL(DT.TransactionDate, DT.CreatedDate) TransactionDate\r\n\t\t,DS.Purpose\r\n\t\t,d.CoverageId\r\n\t\t,d.ID\r\n\t\t,a.Type Deductible_Type\r\n\t\t,CASE\r\n\t\t\tWHEN ISNUMERIC(a.Value) = 1 THEN CONVERT(MONEY, a.Value)\r\n\t\t\tELSE 0\r\n\t\tEND AS Value\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Deductible a\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Building b\r\n\t\tON a.ObjectId = b.CF_BuildingId\r\n\t\t\tAND a.SessionId = b.SessionId\r\n\t\t\tAND a.ObjectName = 'DC_CF_Building'\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk c\r\n\t\tON c.SessionId = b.SessionId\r\n\t\t\tAND c.CF_BuildingId = b.CF_BuildingId\r\n\t\t\tAND c.RiskType NOT IN ('ALS', 'BIEE', 'EXTRA', 'EETOOLS')    ---------- RFC 126190\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage d\r\n\t\tON c.SessionId = d.SessionId\r\n\t\t\tAND c.CF_RiskId = d.ObjectId\r\n\t\t\tAND d.ObjectName = 'DC_CF_Risk'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\t\tON A.SessionId = DT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\t\tON A.SessionId = WP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS\r\n\t\tON A.SessionId = DS.SessionId\r\n\tWHERE a.Type IN ('Standard', 'WindHail', 'DeductibleMaster', 'DeductibleWindHailMaster')\r\n\tAND ISNULL(a.Value, '0') NOT IN ('0', 'NA')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IDO}\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT\r\n\t\tWP.PolicyNumber\r\n\t\t,WP.PolicyVersionFormatted\r\n\t\t,DT.HistoryID\r\n\t\t,DT.Type\r\n\t\t,ISNULL(DT.TransactionDate, DT.CreatedDate) TransactionDate\r\n\t\t,DS.Purpose\r\n\t\t,c.CoverageId\r\n\t\t,C.ID\r\n\t\t,a.Type Deductible_Type\r\n\t\t,CASE\r\n\t\t\tWHEN ISNUMERIC(a.Value) = 1 THEN CONVERT(MONEY, a.Value)\r\n\t\t\tELSE 0\r\n\t\tEND AS Value\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Deductible a\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Property b\r\n\t\tON a.ObjectId = b.CF_PropertyId\r\n\t\t\tAND a.SessionId = b.SessionId\r\n\t\t\tAND a.ObjectName = 'DC_CF_Property'\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage c\r\n\t\tON c.SessionId = b.SessionId\r\n\t\t\tAND b.CF_RiskId = c.ObjectId\r\n\t\t\tAND c.ObjectName = 'DC_CF_Risk'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\t\tON A.SessionId = DT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\t\tON A.SessionId = WP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS\r\n\t\tON A.SessionId = DS.SessionId\r\n\t------ RFC 126190\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk DR\r\n\t\tON DR.CF_RiskId = b.CF_RiskID\r\n\t\t\tAND DR.RiskType NOT IN ('ALS', 'BIEE', 'EXTRA', 'EETOOLS')\r\n\t------\r\n\tWHERE a.Type IN ('Standard', 'WindHail', 'DeductibleMaster', 'DeductibleWindHailMaster')\r\n\tAND ISNULL(a.Value, '0') NOT IN ('0', 'NA')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IDO}\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT\r\n\t\tWP.PolicyNumber\r\n\t\t,WP.PolicyVersionFormatted\r\n\t\t,DT.HistoryID\r\n\t\t,DT.Type\r\n\t\t,ISNULL(DT.TransactionDate, DT.CreatedDate) TransactionDate\r\n\t\t,DS.Purpose\r\n\t\t,c.CoverageId\r\n\t\t,C.ID\r\n\t\t,a.Type Deductible_Type\r\n\t\t,CASE\r\n\t\t\tWHEN ISNUMERIC(a.Value) = 1 THEN CONVERT(MONEY, a.Value)\r\n\t\t\tELSE 0\r\n\t\tEND AS Value\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Deductible a\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_RatingGroup b\r\n\t\tON a.ObjectId = b.CF_RatingGroupId\r\n\t\t\tAND a.SessionId = b.SessionId\r\n\t\t\tAND a.ObjectName = 'DC_CF_RatingGroup'\r\n\tINNER HASH JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage c\r\n\t\tON c.SessionId = b.SessionId\r\n\t\t\tAND b.CF_RiskId = c.ObjectId\r\n\t\t\tAND c.ObjectName = 'DC_CF_Risk'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\t\tON A.SessionId = DT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\t\tON A.SessionId = WP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS\r\n\t\tON A.SessionId = DS.SessionId\r\n\t------ RFC 126190\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Risk DR\r\n\t\tON DR.CF_RiskId = b.CF_RiskID\r\n\t\t\tAND DR.RiskType NOT IN ('ALS', 'BIEE', 'EXTRA', 'EETOOLS')\r\n\t------\r\n\tWHERE a.Type IN ('Standard', 'WindHail', 'DeductibleMaster', 'DeductibleWindHailMaster')\r\n\tAND ISNULL(a.Value, '0') NOT IN ('0', 'NA')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IDO}\r\n\t\r\n\tUNION\r\n\t\r\n\tSELECT\r\n\t\tWP.PolicyNumber\r\n\t\t,WP.PolicyVersionFormatted\r\n\t\t,DT.HistoryID\r\n\t\t,DT.Type\r\n\t\t,ISNULL(DT.TransactionDate, DT.CreatedDate) TransactionDate\r\n\t\t,DS.Purpose\r\n\t\t,A.CoverageId\r\n\t\t,A.ID\r\n\t\t,C.Type Deductible_Type\r\n\t\t,CASE\r\n\t\t\tWHEN ISNUMERIC(C.Value) = 1 THEN CONVERT(MONEY, C.Value)\r\n\t\t\tELSE 0\r\n\t\tEND AS Value\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Coverage A\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_CF_Building B\r\n\t\tON A.SessionId = B.SessionId\r\n\t\t\tAND A.ObjectId = B.LineId\r\n\t\t\tAND A.ObjectName = 'DC_Line'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Deductible C\r\n\t\tON B.SessionId = C.SessionId\r\n\t\t\tAND B.CF_BuildingId = C.ObjectId\r\n\t\t\tAND C.ObjectName = 'DC_CF_Building'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Transaction DT\r\n\t\tON A.SessionId = DT.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.WB_Policy WP\r\n\t\tON A.SessionId = WP.SessionId\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.DC_Session DS\r\n\t\tON A.SessionId = DS.SessionId\r\n\tWHERE C.Type IN ('Standard', 'WindHail', 'DeductibleMaster', 'DeductibleWindHailMaster')\r\n\tAND ISNULL(C.Value, '0') NOT IN ('0', 'NA')\r\n\t@{pipeline().parameters.WHERE_CLAUSE_IDO}\n),\nEXP_IDO_Data_Collect AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersionFormatted,\n\tHistoryID,\n\tType,\n\tTransactionDate,\n\tPurpose,\n\tCoverageId,\n\tId,\n\tDeductible_Type,\n\tValue,\n\t-- *INF*: IIF(Deductible_Type='Standard',Value,'0')\n\tIFF(Deductible_Type = 'Standard', Value, '0') AS Standard_Deductible,\n\t-- *INF*: IIF(Deductible_Type='WindHail',Value,'0')\n\tIFF(Deductible_Type = 'WindHail', Value, '0') AS WindHail_Deductible,\n\t-- *INF*: IIF(Deductible_Type='DeductibleMaster',Value,'0')\n\tIFF(Deductible_Type = 'DeductibleMaster', Value, '0') AS DeductibleMaster_Deductible,\n\t-- *INF*: IIF(Deductible_Type='DeductibleWindHailMaster',Value,'0')\n\tIFF(Deductible_Type = 'DeductibleWindHailMaster', Value, '0') AS DeductibleWindHailMaster_Deductible\n\tFROM SQ_IDO_Data\n),\nSRT_IDO_Data AS (\n\tSELECT\n\tPolicyNumber, \n\tPolicyVersionFormatted, \n\tHistoryID, \n\tType, \n\tTransactionDate, \n\tPurpose, \n\tCoverageId, \n\tId, \n\tStandard_Deductible, \n\tWindHail_Deductible, \n\tDeductibleMaster_Deductible, \n\tDeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_Data_Collect\n\tORDER BY PolicyNumber ASC, PolicyVersionFormatted ASC, HistoryID ASC, Type ASC, TransactionDate ASC, Purpose ASC, CoverageId ASC, Id ASC\n),\nAGG_Remove_Duplicates AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersionFormatted,\n\tHistoryID,\n\tType,\n\tTransactionDate,\n\tPurpose,\n\tCoverageId,\n\tId,\n\tStandard_Deductible,\n\t-- *INF*: Max(Standard_Deductible)\n\tMax(Standard_Deductible) AS o_Standard_Deductible,\n\tWindHail_Deductible,\n\t-- *INF*: Max(WindHail_Deductible)\n\tMax(WindHail_Deductible) AS o_WindHail_Deductible,\n\tDeductibleMaster_Deductible,\n\t-- *INF*: Max(DeductibleMaster_Deductible)\n\tMax(DeductibleMaster_Deductible) AS o_DeductibleMaster_Deductible,\n\tDeductibleWindHailMaster_Deductible,\n\t-- *INF*: Max(DeductibleWindHailMaster_Deductible)\n\tMax(DeductibleWindHailMaster_Deductible) AS o_DeductibleWindHailMaster_Deductible\n\tFROM SRT_IDO_Data\n\tGROUP BY PolicyNumber, PolicyVersionFormatted, HistoryID, Type, TransactionDate, Purpose, CoverageId, Id\n),\nEXP_IDO_Data AS (\n\tSELECT\n\tPolicyNumber,\n\tPolicyVersionFormatted,\n\tPolicyNumber || PolicyVersionFormatted AS Pol_key,\n\tHistoryID,\n\tType,\n\tTransactionDate,\n\tPurpose,\n\tCoverageId,\n\tId,\n\to_Standard_Deductible AS Standard_Deductible,\n\to_WindHail_Deductible AS WindHail_Deductible,\n\to_DeductibleMaster_Deductible AS DeductibleMaster_Deductible,\n\to_DeductibleWindHailMaster_Deductible AS DeductibleWindHailMaster_Deductible\n\tFROM AGG_Remove_Duplicates\n),\nLKP_RatingCoverageAKID AS (\n\tSELECT\n\tRatingCoverageAKID,\n\tIN_pol_key,\n\tIN_CoverageGUID,\n\tIN_TransactionDate,\n\tPol_key,\n\tCoverageGUID,\n\tEffectiveDate\n\tFROM (\n\t\tselect distinct RC.RatingCoverageAKID as RatingCoverageAKID,\r\n\t\tP.Pol_key as Pol_key,\r\n\t\tRC.CoverageGUID as CoverageGUID,\r\n\t\tRC.EffectiveDate as EffectiveDate\r\n\t\tfrom @{pipeline().parameters.SOURCE_TABLE_OWNER_V2}.policy P\r\n\t\tinner join @{pipeline().parameters.DATAFEEDMART_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ISSCommercialPropertyExtract I\r\n\t\ton P.pol_key=I.Policykey\r\n\t\tand P.source_sys_id='DCT'\r\n\t\tand P.crrnt_snpsht_flag=1\r\n\t\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.RatingCoverage RC\r\n\t\ton P.pol_ak_id=cast(substring(RC.RatingCoverageKey,1,charindex('~',RC.RatingCoverageKey,1)-1) as bigint)\r\n\t\tand RC.PolicyCoverageAKID<>-1\r\n\t\twhere I.EDWPremiumMasterCalculationPKId<>-1\r\n\t\tand I.SublineCode not in ('070','090','170','190','930','931')\r\n\t\tand I.DeductibleAmount in ('0000000','N/A')\r\n\t\tand I.AuditId=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY Pol_key,CoverageGUID,EffectiveDate ORDER BY RatingCoverageAKID) = 1\n),\nEXP_IDO_PTHashKey AS (\n\tSELECT\n\tEXP_IDO_Data.Pol_key,\n\tEXP_IDO_Data.HistoryID,\n\tEXP_IDO_Data.Type,\n\tEXP_IDO_Data.TransactionDate,\n\tEXP_IDO_Data.Purpose,\n\tEXP_IDO_Data.CoverageId,\n\tEXP_IDO_Data.Id,\n\tLKP_RatingCoverageAKID.RatingCoverageAKID,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Onset' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Onset' || 'Onset') AS Onset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Offset' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Offset' || 'Onset') AS Offset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'N/A' || 'Onset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'N/A' || 'Onset') AS NA_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Onset' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Onset' || 'Offset') AS DepOnset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'Offset' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'Offset' || 'Offset') AS DepOffset_HashKey,\n\t-- *INF*: MD5(RatingCoverageAKID|| Id||TO_CHAR(TransactionDate)|| 'N/A' || 'Offset')\n\tMD5(RatingCoverageAKID || Id || TO_CHAR(TransactionDate) || 'N/A' || 'Offset') AS DepNA_HashKey,\n\tEXP_IDO_Data.Standard_Deductible,\n\tEXP_IDO_Data.WindHail_Deductible,\n\tEXP_IDO_Data.DeductibleMaster_Deductible,\n\tEXP_IDO_Data.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_Data\n\tLEFT JOIN LKP_RatingCoverageAKID\n\tON LKP_RatingCoverageAKID.Pol_key = EXP_IDO_Data.Pol_key AND LKP_RatingCoverageAKID.CoverageGUID = EXP_IDO_Data.Id AND LKP_RatingCoverageAKID.EffectiveDate = EXP_IDO_Data.TransactionDate\n),\nSQ_PremiumTransaction AS (\n\tSelect A.ISSCommercialPropertyExtractId,\r\n\tA.SublineCode,\r\n\tC.PremiumTransactionID,\r\n\tC.PremiumTransactionHashKey,\r\n\tC.PremiumTransactionAKID\r\n\tfrom @{pipeline().parameters.DATAFEEDMART_DATABASE}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.ISSCommercialPropertyExtract A\r\n\tinner join @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumMasterCalculation B\r\n\ton A.EDWPremiumMasterCalculationPKId=B.PremiumMasterCalculationID\r\n\tand B.SourceSystemID='DCT'\r\n\tINNER JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.PremiumTransaction C\r\n\ton B.PremiumTransactionAKID=C.PremiumTransactionAKID\r\n\tand C.SourceSystemID='DCT'\r\n\twhere A.EDWPremiumMasterCalculationPKId<>-1\r\n\tand A.SublineCode not in ('070','090','170','190','930','931')\r\n\tand A.DeductibleAmount in ('0000000','N/A')\r\n\tand A.AuditId=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_EDW}\n),\nJNR_DEP_NA AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepNA_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepNA_HashKey\n),\nJNR_DEP_OFFSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepOffset_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepOffset_HashKey\n),\nJNR_DEP_ONSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.DepOnset_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.DepOnset_HashKey\n),\nJNR_NA AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.NA_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.NA_HashKey\n),\nJNR_OFFSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.Offset_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.Offset_HashKey\n),\nJNR_ONSET AS (SELECT\n\tEXP_IDO_PTHashKey.CoverageId, \n\tEXP_IDO_PTHashKey.Onset_HashKey, \n\tEXP_IDO_PTHashKey.Standard_Deductible, \n\tEXP_IDO_PTHashKey.WindHail_Deductible, \n\tSQ_PremiumTransaction.ISSCommercialPropertyExtractId, \n\tSQ_PremiumTransaction.SublineCode, \n\tSQ_PremiumTransaction.PremiumTransactionID, \n\tSQ_PremiumTransaction.PremiumTransactionHashKey, \n\tSQ_PremiumTransaction.PremiumTransactionAKID, \n\tEXP_IDO_PTHashKey.DeductibleMaster_Deductible, \n\tEXP_IDO_PTHashKey.DeductibleWindHailMaster_Deductible\n\tFROM EXP_IDO_PTHashKey\n\tINNER JOIN SQ_PremiumTransaction\n\tON SQ_PremiumTransaction.PremiumTransactionHashKey = EXP_IDO_PTHashKey.Onset_HashKey\n),\nUN_Merge_All_Data_Flows AS (\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_ONSET\n\tUNION\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_OFFSET\n\tUNION\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_NA\n\tUNION\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_DEP_ONSET\n\tUNION\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_DEP_OFFSET\n\tUNION\n\tSELECT ISSCommercialPropertyExtractId, SublineCode, Standard_Deductible, WindHail_Deductible, DeductibleMaster_Deductible, DeductibleWindHailMaster_Deductible\n\tFROM JNR_DEP_NA\n),\nEXP_DeductibleAmount AS (\n\tSELECT\n\tISSCommercialPropertyExtractId,\n\tSublineCode,\n\tStandard_Deductible,\n\tWindHail_Deductible,\n\tDeductibleMaster_Deductible,\n\tDeductibleWindHailMaster_Deductible,\n\t-- *INF*: IIF(IN(SublineCode,'020','027','120','010','015','016','017','018','029','035','045','055','110'),Standard_Deductible,'0')\n\tIFF(\n\t    SublineCode IN ('020','027','120','010','015','016','017','018','029','035','045','055','110'),\n\t    Standard_Deductible,\n\t    '0'\n\t) AS v_Standard_DeductibleAmount,\n\t-- *INF*: IIF(IN(SublineCode,'020','027','120'),WindHail_Deductible,'0')\n\tIFF(SublineCode IN ('020','027','120'), WindHail_Deductible, '0') AS v_WindHail_DeductibleAmount,\n\t-- *INF*: IIF(IN(SublineCode,'020','027','120','010','015','016','017','018','029','035','045','055','110'),DeductibleMaster_Deductible,'0')\n\tIFF(\n\t    SublineCode IN ('020','027','120','010','015','016','017','018','029','035','045','055','110'),\n\t    DeductibleMaster_Deductible,\n\t    '0'\n\t) AS v_DeductibleMaster_Deductible,\n\t-- *INF*: IIF(IN(SublineCode,'020','027','120'),DeductibleWindHailMaster_Deductible,'0')\n\tIFF(SublineCode IN ('020','027','120'), DeductibleWindHailMaster_Deductible, '0') AS v_DeductibleWindHailMaster_Deductible,\n\t-- *INF*: IIF(ISNULL(v_Standard_DeductibleAmount) or v_Standard_DeductibleAmount='0' or length(rtrim(ltrim(v_Standard_DeductibleAmount)))=0,v_DeductibleMaster_Deductible,v_Standard_DeductibleAmount)\n\tIFF(\n\t    v_Standard_DeductibleAmount IS NULL\n\t    or v_Standard_DeductibleAmount = '0'\n\t    or length(rtrim(ltrim(v_Standard_DeductibleAmount))) = 0,\n\t    v_DeductibleMaster_Deductible,\n\t    v_Standard_DeductibleAmount\n\t) AS v_Standard,\n\t-- *INF*: IIF(ISNULL(v_WindHail_DeductibleAmount) or v_WindHail_DeductibleAmount='0' or length(rtrim(ltrim(v_WindHail_DeductibleAmount)))=0,v_DeductibleWindHailMaster_Deductible,v_WindHail_DeductibleAmount)\n\tIFF(\n\t    v_WindHail_DeductibleAmount IS NULL\n\t    or v_WindHail_DeductibleAmount = '0'\n\t    or length(rtrim(ltrim(v_WindHail_DeductibleAmount))) = 0,\n\t    v_DeductibleWindHailMaster_Deductible,\n\t    v_WindHail_DeductibleAmount\n\t) AS v_WindHail,\n\t-- *INF*: LPAD(IIF(ISNULL(v_WindHail) or v_WindHail='0' or length(rtrim(ltrim(v_WindHail)))=0,v_Standard,v_WindHail), 7, '0')\n\tLPAD(\n\t    IFF(\n\t        v_WindHail IS NULL or v_WindHail = '0' or length(rtrim(ltrim(v_WindHail))) = 0,\n\t        v_Standard,\n\t        v_WindHail\n\t    ), 7, '0') AS o_DeductibleAmount\n\tFROM UN_Merge_All_Data_Flows\n),\nFIL_Zero_Deductible AS (\n\tSELECT\n\tISSCommercialPropertyExtractId, \n\to_DeductibleAmount AS DeductibleAmount\n\tFROM EXP_DeductibleAmount\n\tWHERE NOT(IN(DeductibleAmount,'0000000','N/A'))\n),\nUPD_DeductibleAmount AS (\n\tSELECT\n\tISSCommercialPropertyExtractId, \n\tDeductibleAmount\n\tFROM FIL_Zero_Deductible\n),\nISSCommercialPropertyExtract1 AS (\n\tMERGE INTO ISSCommercialPropertyExtract AS T\n\tUSING UPD_DeductibleAmount AS S\n\tON T.ISSCommercialPropertyExtractId = S.ISSCommercialPropertyExtractId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.DeductibleAmount = S.DeductibleAmount\n),\nSQ_ISSCommercialPropertyExtract_UpdateDeductibleAmount AS (\n\tselect \r\n\tA.ISSCommercialPropertyExtractId as ISSCommercialPropertyExtractId, \r\n\tA.PolicyKey as PolicyKey,\r\n\tA.LocationNumber as LocationNumber, \r\n\tA.BuildingNumber as BuildingNumber, \r\n\tA.AuditId as AuditId,\r\n\tA.PremiumMasterCoverageEffectiveDate as PremiumMasterCoverageEffectiveDate,\r\n\tA.SublineCode as SublineCode,\r\n\tA.PremiumMasterRunDate as PremiumMasterRunDate,\r\n\tB.DeductibleAmount as DeductibleAmount\r\n\t\r\n\tFROM\r\n\t (\r\n\tSELECT\r\n\tISS.PolicyKey,\r\n\tRC.CoverageType, \r\n\tRC.RiskType, \r\n\tISS.PremiumMasterRunDate,\r\n\tRC.SublineCode, \r\n\tRC.RatingCoverageAKID, \r\n\tEDWPremiumMasterCalculationPKId, \r\n\tISSCommercialPropertyExtractId, \r\n\tISS.CoverageCode, \r\n\tISS.LocationNumber, \r\n\tISS.BuildingNumber,\r\n\tISS.AuditId,\r\n\tISS.DeductibleAmount,\r\n\tPremiumMasterCoverageEffectiveDate\r\n\tFROM \r\n\t@{pipeline().parameters.DATAFEEDMART_DATABASE}.dbo.ISSCommercialPropertyExtract ISS with (nolock)\r\n\tINNER JOIN PremiumMasterCalculation PMC with (nolock) on ISS.EDWPremiumMasterCalculationPKId=PMC.PremiumMasterCalculationID\r\n\tINNER JOIN RatingCoverage RC with (nolock) on PMC.RatingCoverageAKId = RC.RatingCoverageAKID AND PMC.RatingCoverageEffectiveDate=RC.EffectiveDate\r\n\twhere \r\n\tISS.DeductibleAmount IN ('N/A','0000000') AND\r\n\tISS.TypeBureauCode='CF' AND\r\n\tRC.SublineCode NOT IN ('070','090','930','N/A')  AND\r\n\t(\r\n\t(RC.RiskType='ALS' and (RC.CoverageType='ALS' or RC.CoverageType like '%agreed%')) OR\r\n\t(RC.RiskType='BIEE' and (RC.CoverageType LIKE 'businessincome%' or RC.CoverageType LIKE 'agreed%')) OR\r\n\t(RC.CoverageType LIKE 'BIEE%') OR\r\n\t(RC.CoverageType LIKE 'Extra%') OR\r\n\t(RC.CoverageType LIKE 'time%') OR\r\n\t(RC.RiskType='TIME' AND (RC.CoverageType LIKE 'businessincome%' OR RC.CoverageType LIKE 'agreed%'))\r\n\t)\r\n\tAND ISS.AuditId=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t) A\r\n\t\r\n\tOUTER APPLY\r\n\t\r\n\t(\r\n\tselect top 1\r\n\tISS.PolicyKey,\r\n\tRC.CoverageType, \r\n\tRC.RiskType, \r\n\tISS.PremiumMasterRunDate,\r\n\tRC.SublineCode, \r\n\tRC.RatingCoverageAKID, \r\n\tEDWPremiumMasterCalculationPKId, \r\n\tISSCommercialPropertyExtractId, \r\n\tISS.CoverageCode, \r\n\tISS.LocationNumber, \r\n\tISS.BuildingNumber,\r\n\tcase when RC.CoverageType='BLDG' then 1\r\n\twhen RC.CoverageType='BusinessPersProperty' then 2 else 3 end as OrderSequence,\r\n\tISS.AuditId,\r\n\tPremiumMasterCoverageEffectiveDate,\r\n\tISS.DeductibleAmount\r\n\tFROM \r\n\t@{pipeline().parameters.DATAFEEDMART_DATABASE}.dbo.ISSCommercialPropertyExtract ISS with (nolock)\r\n\tINNER JOIN PremiumMasterCalculation PMC with (nolock) on ISS.EDWPremiumMasterCalculationPKId=PMC.PremiumMasterCalculationID\r\n\tINNER JOIN RatingCoverage RC with (nolock) on PMC.RatingCoverageAKId = RC.RatingCoverageAKID and PMC.RatingCoverageEffectiveDate=RC.EffectiveDate\r\n\twhere \r\n\tISS.DeductibleAmount NOT IN ('N/A','0000000') AND\r\n\tISS.TypeBureauCode='CF' AND\r\n\tISS.PremiumMasterRunDate =A.PremiumMasterRunDate AND\r\n\tRC.SublineCode NOT IN ('070','090','930','N/A')  AND\r\n\t(\r\n\tRC.CoverageType IN ('BLDG','BusinessPersProperty')\r\n\t) AND \r\n\tISS.PolicyKey=A.PolicyKey AND \r\n\tISS.LocationNumber=A.LocationNumber AND \r\n\t(ISS.BuildingNumber=A.BuildingNumber OR A.BuildingNumber='000') AND \r\n\tISS.AuditId=A.AuditId AND \r\n\tPMC.PremiumMasterCoverageEffectiveDate=A.PremiumMasterCoverageEffectiveDate AND \r\n\tISS.SublineCode=A.SublineCode\r\n\torder by 12\r\n\t) B\n),\nEXP_UpdateDedAmount_Input AS (\n\tSELECT\n\tISSCommercialPropertyExtractId,\n\tPolicyKey,\n\tLocationNumber,\n\tBuildingNumber,\n\tAuditId,\n\tPremiumMasterCoverageEffectiveDate,\n\tSublineCode,\n\tPremiumMasterRunDate,\n\tDeductibleAmount\n\tFROM SQ_ISSCommercialPropertyExtract_UpdateDeductibleAmount\n),\nRTR_UpdateDedAmount AS (\n\tSELECT\n\tISSCommercialPropertyExtractId,\n\tPolicyKey,\n\tAuditId,\n\tPremiumMasterCoverageEffectiveDate,\n\tPremiumMasterRunDate,\n\tDeductibleAmount\n\tFROM EXP_UpdateDedAmount_Input\n),\nRTR_UpdateDedAmount_Update AS (SELECT * FROM RTR_UpdateDedAmount WHERE NOT ISNULL(DeductibleAmount)),\nRTR_UpdateDedAmount_AdditionalLookup AS (SELECT * FROM RTR_UpdateDedAmount WHERE ISNULL(DeductibleAmount)),\nLKP_IISCommericalPropertyExtract_DedAmount AS (\n\tSELECT\n\tAuditId,\n\tPremiumMasterCoverageEffectiveDate,\n\tPolicyKey,\n\tPremiumMasterRunDate,\n\tDeductibleAmount,\n\tin_ISSCommercialPropertyExtractId,\n\tin_PolicyKey,\n\tin_AuditId,\n\tin_PremiumMasterCoverageEffectiveDate,\n\tin_PremiumMasterRunDate\n\tFROM (\n\t\tSELECT DISTINCT\r\n\t\tISS.AuditId as AuditId,\r\n\t\tPMC.PremiumMasterCoverageEffectiveDate as PremiumMasterCoverageEffectiveDate,\r\n\t\tISS.PolicyKey as PolicyKey,\r\n\t\tISS.PremiumMasterRunDate as PremiumMasterRunDate,\r\n\t\tISS.DeductibleAmount as DeductibleAmount\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.DATAFEEDMART_DATABASE}.dbo.ISSCommercialPropertyExtract ISS with (nolock)\r\n\t\tINNER JOIN\r\n\t\tPremiumMasterCalculation PMC with (nolock) on ISS.EDWPremiumMasterCalculationPKId=PMC.PremiumMasterCalculationID\r\n\t\tINNER JOIN \r\n\t\tRatingCoverage RC with (nolock) on PMC.RatingCoverageAKId = RC.RatingCoverageAKID and PMC.RatingCoverageEffectiveDate=RC.EffectiveDate \r\n\t\tWHERE\r\n\t\t-- just build cache for this audit id\r\n\t\t ISS.AuditId=@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t\t and ISS.SublineCode='035'\r\n\t\t and ISS.LocationNumber='0001' and ISS.BuildingNumber='000'\r\n\t\t and ISS.CoverageCode='03'\r\n\t\t and ISS.DeductibleAmount not in ('N/A','0000000') \r\n\t\t and ISS.TypeBureauCode='CF'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyKey,AuditId,PremiumMasterCoverageEffectiveDate,PremiumMasterRunDate ORDER BY AuditId) = 1\n),\nFIL_RemoveNull_UpdateDedAmount AS (\n\tSELECT\n\tDeductibleAmount, \n\tin_ISSCommercialPropertyExtractId\n\tFROM LKP_IISCommericalPropertyExtract_DedAmount\n\tWHERE NOT ISNULL(DeductibleAmount)\n),\nUnion_UpdateDedAmount AS (\n\tSELECT ISSCommercialPropertyExtractId, DeductibleAmount\n\tFROM RTR_UpdateDedAmount_Update\n\tUNION\n\tSELECT in_ISSCommercialPropertyExtractId AS ISSCommercialPropertyExtractId, DeductibleAmount\n\tFROM FIL_RemoveNull_UpdateDedAmount\n),\nUPDTRANS AS (\n\tSELECT\n\tISSCommercialPropertyExtractId, \n\tDeductibleAmount\n\tFROM Union_UpdateDedAmount\n),\nISSCommercialPropertyExtract_UPDATE_DedAmount AS (\n\tMERGE INTO ISSCommercialPropertyExtract AS T\n\tUSING UPDTRANS AS S\n\tON T.ISSCommercialPropertyExtractId = S.ISSCommercialPropertyExtractId\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.DeductibleAmount = S.DeductibleAmount\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_IDO": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_TABLE_OWNER_V2": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "DATAFEEDMART_DATABASE": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_EDW": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}