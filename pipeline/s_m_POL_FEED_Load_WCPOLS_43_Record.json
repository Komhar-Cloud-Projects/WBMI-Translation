{
    "name": "s_m_POL_FEED_Load_WCPOLS_43_Record",
    "properties": {
        "activities": [
            {
                "name": "m_POL_FEED_Load_WCPOLS_43_Record",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nLKP_SupWCPOLS AS (\n\tSELECT\n\tWCPOLSCode,\n\tSourcesystemID,\n\tSourceCode,\n\tTableName,\n\tProcessName,\n\ti_SourcesystemID,\n\ti_SourceCode,\n\ti_TableName,\n\ti_ProcessName\n\tFROM (\n\t\tSELECT\r\n\t\t     WCPOLSCode as WCPOLSCode\r\n\t\t\t,SourcesystemID as SourcesystemID\r\n\t\t\t,SourceCode as SourceCode\r\n\t\t\t,TableName as TableName\r\n\t\t\t,ProcessName as ProcessName\r\n\t\tFROM SupWCPOLS\r\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY SourcesystemID,SourceCode,TableName,ProcessName ORDER BY WCPOLSCode) = 1\n),\nSQ_WCPols00Record AS (\n\tSELECT\r\n\t\tWCTrackHistoryID,\r\n\t\tLinkData,\r\n\t     AuditId\r\n\tFROM dbo.WCPols00Record\r\n\tWHERE 1=1\r\n\tAND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tORDER BY WCTrackHistoryID\n),\nSQ_WorkWCForms AS (\n\tSELECT distinct S.WCTrackHistoryID\r\n\t\t,S.State\r\n\t\t,F.FormName\r\n\t\t,D_DT.StatCodeValue LossesSubjectToDeductibleCode\r\n\t\t,D_DB.StatCodeValue BasisOfDeductibleCalculationCode\r\n\t\t,D_MD.DeductibleValue MedicalDeductible\r\n\t\t,D_SDC.DeductibleValue SmallDeductibleCredit\r\n\t\t,P.TransactionDate\r\n\t\t,P.TransactionEffectiveDate\r\n\tFROM dbo.WorkWCStateTerm S\r\n\t\r\n\tINNER JOIN dbo.WorkWCPolicy P\r\n\t\tON P.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\r\n\tINNER JOIN dbo.WorkWCCoverage C\r\n\t\tON C.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND C.ParentObjectId = S.WC_StateTermId\r\n\t\t\tAND C.ParentObjectName = 'DC_WC_StateTerm'\r\n\t\t\tAND C.ParentCoverageType = 'SmallDeductibleCredit' -- Per Amy C.\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_MD\r\n\t\tON D_MD.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_MD.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_MD.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_MD.DeductibleType = 'MedicalDeductible'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_SDC\r\n\t\tON D_SDC.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_SDC.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_SDC.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_SDC.DeductibleType = 'SmallDeductibleCredit'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_DB\r\n\t\tON D_DB.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_DB.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_DB.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_DB.DeductibleType = 'SmallDeductibleCredit'\r\n\t\t\tAND D_DB.StatCodeType='DeductibleBasis'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_DT\r\n\t\tON D_DT.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_DT.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_DT.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_DT.DeductibleType = 'SmallDeductibleCredit'\r\n\t\t\tAND D_DT.StatCodeType='DeductibleType'\r\n\t\r\n\tINNER JOIN dbo.WorkWCForms F\r\n\t\tON F.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND (F.OnPolicy = '1' OR F.[Add] = '1')\r\n\t\t\tAND (F.[Remove] IS NULL OR F.[Remove] = '0')\r\n\t\t\tAND F.FormName IS NOT NULL\r\n\t\r\n\tWHERE 1 = 1\r\n\tAND S.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_FORMNAMES}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_43}\r\n\t\r\n\tUNION\r\n\t\r\n\t--- Logic specific to IA State only\r\n\tSELECT distinct S.WCTrackHistoryID\r\n\t\t,S.State\r\n\t\t,F.FormName\r\n\t\t,'01' LossesSubjectToDeductibleCode\r\n\t\t,'01' BasisOfDeductibleCalculationCode\r\n\t\t,D_MD.DeductibleValue MedicalDeductible\r\n\t\t,NULL SmallDeductibleCredit\r\n\t\t,P.TransactionDate\r\n\t\t,P.TransactionEffectiveDate\r\n\t\t\r\n\tFROM dbo.WorkWCStateTerm S\r\n\t\r\n\tINNER JOIN dbo.WorkWCPolicy P\r\n\t\tON P.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\r\n\tINNER JOIN dbo.WorkWCDeductible D_MD\r\n\t\tON D_MD.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND D_MD.DeductibleType = 'MedicalDeductible'\r\n\t\t\tAND CoverageType='ManualPremium'\r\n\t\r\n\tINNER JOIN dbo.WorkWCForms F\r\n\t\tON F.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND (F.OnPolicy = '1' OR F.[Add] = '1')\r\n\t\t\tAND (F.[Remove] IS NULL OR F.[Remove] = '0')\r\n\t\t\tAND F.FormName IS NOT NULL\r\n\t\r\n\tWHERE 1 = 1\r\n\tAND LEFT(F.FormName, 8) IN ('WC140603')\r\n\tAND S.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\tAND DeductibleValue IS NOT NULL\r\n\tAND S.State='IA'\r\n\t@{pipeline().parameters.WHERE_CLAUSE_43}\r\n\t\r\n\tUNION\r\n\t\r\n\t--- Logic specific to TX State only\r\n\tSELECT distinct S.WCTrackHistoryID\r\n\t\t,S.State\r\n\t\t,F.FormName\r\n\t\t,D_DT.StatCodeValue LossesSubjectToDeductibleCode\r\n\t\t,D_DB.StatCodeValue BasisOfDeductibleCalculationCode\r\n\t\t,0 MedicalDeductible\r\n\t\t,D_SDC.DeductibleValue SmallDeductibleCredit\r\n\t\t,P.TransactionDate\r\n\t\t,P.TransactionEffectiveDate\r\n\t\t\r\n\tFROM dbo.WorkWCStateTerm S\r\n\t\r\n\tINNER JOIN dbo.WorkWCPolicy P\r\n\t\tON P.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\r\n\tLEFT JOIN dbo.WorkWCCoverage C\r\n\t\tON C.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND C.ParentObjectId = S.WC_StateTermId\r\n\t\t\tAND C.ParentObjectName = 'DC_WC_StateTerm'\r\n\t\t\tAND C.ParentCoverageType = 'SmallDeductibleCredit' -- Per Amy C.\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_SDC\r\n\t\tON D_SDC.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_SDC.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_SDC.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_SDC.DeductibleType in ('PerAccidentDeductibles','PerClaimDeductibles','MedicalOnlyDeductibles')\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_DB\r\n\t\tON D_DB.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_DB.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_DB.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_DB.DeductibleType = 'SmallDeductibleCredit'\r\n\t\t\tAND D_DB.StatCodeType='DeductibleBasis'\r\n\t\r\n\tLEFT JOIN dbo.WorkWCSTATDeductible D_DT\r\n\t\tON D_DT.WCTrackHistoryID = C.WCTrackHistoryID\r\n\t\t\tAND D_DT.CoverageId = C.ParentCoverageId\r\n\t\t\tAND D_DT.CoverageType = C.ParentCoverageType\r\n\t\t\tAND D_DT.DeductibleType = 'SmallDeductibleCredit'\r\n\t\t\tAND D_DT.StatCodeType='DeductibleType'\r\n\t\r\n\tINNER JOIN dbo.WorkWCForms F\r\n\t\tON F.WCTrackHistoryID = S.WCTrackHistoryID\r\n\t\t\tAND (F.OnPolicy = '1' OR F.[Add] = '1')\r\n\t\t\tAND (F.[Remove] IS NULL OR F.[Remove] = '0')\r\n\t\t\tAND F.FormName IS NOT NULL\r\n\t\r\n\tWHERE 1 = 1\r\n\tAND LEFT(F.FormName, 8) IN ('WC420602','WC420605','WC420606')\r\n\tAND S.State='TX'\r\n\tAND D_SDC.DeductibleValue IS NOT NULL AND D_SDC.DeductibleValue<>'0'\r\n\tAND S.AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\r\n\t@{pipeline().parameters.WHERE_CLAUSE_43}\r\n\t\r\n\tORDER BY S.WCTrackHistoryID\n),\nJNR_43_Record AS (SELECT\n\tSQ_WCPols00Record.WCTrackHistoryID, \n\tSQ_WCPols00Record.LinkData, \n\tSQ_WCPols00Record.AuditId, \n\tSQ_WorkWCForms.WCTrackHistoryID AS WCTrackHistoryID1, \n\tSQ_WorkWCForms.State, \n\tSQ_WorkWCForms.FormName, \n\tSQ_WorkWCForms.LossesSubjectToDeductibleCode, \n\tSQ_WorkWCForms.BasisOfDeductibleCalculationCode, \n\tSQ_WorkWCForms.MedicalDeductible, \n\tSQ_WorkWCForms.SmallDeductibleCredit, \n\tSQ_WorkWCForms.TransactionDate, \n\tSQ_WorkWCForms.TransactionEffectiveDate\n\tFROM SQ_WorkWCForms\n\tINNER JOIN SQ_WCPols00Record\n\tON SQ_WCPols00Record.WCTrackHistoryID = SQ_WorkWCForms.WCTrackHistoryID\n),\nEXP_Output_Format AS (\n\tSELECT\n\tCURRENT_TIMESTAMP AS o_ExtractDate,\n\tAuditId,\n\tWCTrackHistoryID,\n\tLinkData,\n\tState,\n\t-- *INF*: :LKP.LKP_SupWCPOLS('DCT',State,'WCPOLS43Record','StateCodeRecord43')\n\tLKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43.WCPOLSCode AS o_StateCode,\n\tFormName,\n\tLossesSubjectToDeductibleCode,\n\tBasisOfDeductibleCalculationCode,\n\tMedicalDeductible,\n\tSmallDeductibleCredit,\n\t'43' AS o_RecordTypeCode,\n\t-- *INF*: SUBSTR(FormName,1,8)\n\tSUBSTR(FormName, 1, 8) AS o_EndorsementNumber,\n\t-- *INF*: SUBSTR(FormName, Length(FormName)-4, 1)\n\tSUBSTR(FormName, Length(FormName) - 4, 1) AS v_BureauID,\n\t-- *INF*: IIF(v_BureauID >= 'A' and v_BureauID <= 'Z', v_BureauID,' ')\n\tIFF(v_BureauID >= 'A' and v_BureauID <= 'Z', v_BureauID, ' ') AS o_BureauVersionIdentifierEditionIdentifier,\n\t-- *INF*: SUBSTR(FormName, Length(FormName)-3, 4)\n\tSUBSTR(FormName, Length(FormName) - 3, 4) AS o_CarrierVersionIdentifier,\n\t-- *INF*: SUBSTR(FormName,1,8) || State\n\tSUBSTR(FormName, 1, 8) || State AS v_Lookup_String,\n\t-- *INF*: IIF(SUBSTR(FormName,1,8) = 'WC140603',MedicalDeductible,SmallDeductibleCredit)\n\tIFF(SUBSTR(FormName, 1, 8) = 'WC140603', MedicalDeductible, SmallDeductibleCredit) AS o_DeductibleAmountPerClaimAccident,\n\tTransactionDate,\n\t-- *INF*: To_Char(TransactionEffectiveDate, 'YYMMDD')\n\tTo_Char(TransactionEffectiveDate, 'YYMMDD') AS o_EndorsementEffectiveDate,\n\tTransactionEffectiveDate\n\tFROM JNR_43_Record\n\tLEFT JOIN LKP_SUPWCPOLS LKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43\n\tON LKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43.SourcesystemID = 'DCT'\n\tAND LKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43.SourceCode = State\n\tAND LKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43.TableName = 'WCPOLS43Record'\n\tAND LKP_SUPWCPOLS__DCT_State_WCPOLS43Record_StateCodeRecord43.ProcessName = 'StateCodeRecord43'\n\n),\nLKP_SUPWCPOLSSmallDeductible AS (\n\tSELECT\n\tSUPWCPOLSSmallDeductibleID,\n\tIn_StateCode,\n\tIn_EndorsementNumber,\n\tStateCode,\n\tFormName\n\tFROM (\n\t\tSelect SupWCPOLSSmallDeductibleID as SupWCPOLSSmallDeductibleID,\r\n\t\tStateCode as StateCode, FormName as FormName\r\n\t\tfrom SupWCPOLSSmallDeductible\r\n\t\tWHERE CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY StateCode,FormName ORDER BY SUPWCPOLSSmallDeductibleID) = 1\n),\nEXP_Target AS (\n\tSELECT\n\tEXP_Output_Format.o_ExtractDate AS ExtractDate,\n\tEXP_Output_Format.AuditId,\n\tEXP_Output_Format.WCTrackHistoryID,\n\tEXP_Output_Format.LinkData,\n\tEXP_Output_Format.o_StateCode AS StateCode,\n\tEXP_Output_Format.FormName,\n\tEXP_Output_Format.o_RecordTypeCode AS RecordTypeCode,\n\tEXP_Output_Format.o_EndorsementNumber AS EndorsementNumber,\n\tEXP_Output_Format.o_BureauVersionIdentifierEditionIdentifier AS BureauVersionIdentifierEditionIdentifier,\n\tEXP_Output_Format.o_CarrierVersionIdentifier AS CarrierVersionIdentifier,\n\tEXP_Output_Format.LossesSubjectToDeductibleCode,\n\tEXP_Output_Format.BasisOfDeductibleCalculationCode,\n\tEXP_Output_Format.o_DeductibleAmountPerClaimAccident AS DeductibleAmountPerClaimAccident,\n\tEXP_Output_Format.o_EndorsementEffectiveDate AS EndorsementEffectiveDate,\n\tLKP_SUPWCPOLSSmallDeductible.SUPWCPOLSSmallDeductibleID\n\tFROM EXP_Output_Format\n\tLEFT JOIN LKP_SUPWCPOLSSmallDeductible\n\tON LKP_SUPWCPOLSSmallDeductible.StateCode = EXP_Output_Format.State AND LKP_SUPWCPOLSSmallDeductible.FormName = EXP_Output_Format.o_EndorsementNumber\n),\nFIL_InvalidForms AS (\n\tSELECT\n\tExtractDate, \n\tAuditId, \n\tWCTrackHistoryID, \n\tLinkData, \n\tStateCode, \n\tFormName, \n\tRecordTypeCode, \n\tEndorsementNumber, \n\tBureauVersionIdentifierEditionIdentifier, \n\tCarrierVersionIdentifier, \n\tLossesSubjectToDeductibleCode, \n\tBasisOfDeductibleCalculationCode, \n\tDeductibleAmountPerClaimAccident, \n\tEndorsementEffectiveDate, \n\tSUPWCPOLSSmallDeductibleID\n\tFROM EXP_Target\n\tWHERE NOT ISNULL(SUPWCPOLSSmallDeductibleID)\n),\nWCPols43Record AS (\n\n\t------------ PRE SQL ----------\n\tDELETE\r\n\t  FROM dbo.WCPols43Record\r\n\t  WHERE 1=1\r\n\t  AND AuditId = @{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID}\n\t-------------------------------\n\n\n\tINSERT INTO WCPols43Record\n\t(ExtractDate, AuditId, WCTrackHistoryID, LinkData, StateCode, RecordTypeCode, EndorsementNumber, BureauVersionIdentifierEditionIdentifier, CarrierVersionIdentifier, LossesSubjectToDeductibleCode, BasisOfDeductibleCalculationCode, DeductibleAmountPerClaimAccident, EndorsementEffectiveDate)\n\tSELECT \n\tEXTRACTDATE, \n\tAUDITID, \n\tWCTRACKHISTORYID, \n\tLINKDATA, \n\tSTATECODE, \n\tRECORDTYPECODE, \n\tENDORSEMENTNUMBER, \n\tBUREAUVERSIONIDENTIFIEREDITIONIDENTIFIER, \n\tCARRIERVERSIONIDENTIFIER, \n\tLOSSESSUBJECTTODEDUCTIBLECODE, \n\tBASISOFDEDUCTIBLECALCULATIONCODE, \n\tDEDUCTIBLEAMOUNTPERCLAIMACCIDENT, \n\tENDORSEMENTEFFECTIVEDATE\n\tFROM FIL_InvalidForms\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_FORMNAMES": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WHERE_CLAUSE_43": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "PolicyDataServices/"
        },
        "annotations": []
    }
}