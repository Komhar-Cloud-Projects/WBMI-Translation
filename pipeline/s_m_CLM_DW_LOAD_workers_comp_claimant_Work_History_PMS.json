{
    "name": "s_m_CLM_DW_LOAD_workers_comp_claimant_Work_History_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_workers_comp_claimant_Work_History_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_PIF_42GQ_CMT_stage AS (\n\tSELECT   \r\n\tA.pif_symbol,\r\n\t A.pif_policy_number, \r\n\tA.pif_module,  \r\n\tA.ipfcgq_year_of_loss, \r\n\tA.ipfcgq_month_of_loss,\r\n\t A.ipfcgq_day_of_loss, \r\n\tA.ipfcgq_loss_occurence, \r\n\tA.ipfcgq_loss_claimant\r\n\t from  pif_42gq_cmt_stage A        \r\n\twhere    A.logical_flag  in ('0','1')\r\n\tAND  EXISTS(SELECT 'X' \r\n\tFROM PIF_42X6_stage B   \r\n\tWHERE  A.pif_policy_number =  B.pif_policy_number\r\n\t AND A.pif_symbol = B.pif_symbol\r\n\tAND  A.pif_module =  B.pif_module\r\n\tAND B.ipfcx6_insurance_line  = 'WC' )\n),\nEXP_VALIDATE_workers_comp_claimant_work_history_PMS AS (\n\tSELECT\n\tPIF_SYMBOL,\n\tPIF_POLICY_NUMBER,\n\tPIF_MODULE,\n\tIPFCGQ_YEAR_OF_LOSS,\n\tIPFCGQ_MONTH_OF_LOSS,\n\tIPFCGQ_DAY_OF_LOSS,\n\tIPFCGQ_LOSS_OCCURENCE,\n\tIPFCGQ_LOSS_CLAIMANT\n\tFROM SQ_PIF_42GQ_CMT_stage\n),\nEXP_Lkp_Values_workers_comp_claimant_work_history_PMS AS (\n\tSELECT\n\tPIF_SYMBOL AS IN_PIF_SYMBOL,\n\tPIF_POLICY_NUMBER AS IN_PIF_POLICY_NUMBER,\n\tPIF_MODULE AS IN_PIF_MODULE,\n\tIPFCGQ_YEAR_OF_LOSS AS IN_IPFCGQ_YEAR_OF_LOSS,\n\tIPFCGQ_MONTH_OF_LOSS AS IN_IPFCGQ_MONTH_OF_LOSS,\n\tIPFCGQ_DAY_OF_LOSS AS IN_IPFCGQ_DAY_OF_LOSS,\n\tIPFCGQ_LOSS_OCCURENCE AS IN_IPFCGQ_LOSS_OCCURENCE,\n\tIPFCGQ_LOSS_CLAIMANT AS IN_IPFCGQ_LOSS_CLAIMANT,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_PIF_SYMBOL))),'N/A',IIF(IS_SPACES(IN_PIF_SYMBOL),'N/A',LTRIM(RTRIM(IN_PIF_SYMBOL))))\n\tIFF(\n\t    LTRIM(RTRIM(IN_PIF_SYMBOL)) IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(IN_PIF_SYMBOL)>0\n\t    and TRIM(IN_PIF_SYMBOL)='', 'N/A',\n\t        LTRIM(RTRIM(IN_PIF_SYMBOL))\n\t    )\n\t) AS V_PIF_SYMBOL,\n\tV_PIF_SYMBOL AS PIF_SYMBOL,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_PIF_POLICY_NUMBER))),'N/A',IIF(IS_SPACES(IN_PIF_POLICY_NUMBER),'N/A',LTRIM(RTRIM(IN_PIF_POLICY_NUMBER))))\n\tIFF(\n\t    LTRIM(RTRIM(IN_PIF_POLICY_NUMBER)) IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(IN_PIF_POLICY_NUMBER)>0\n\t    and TRIM(IN_PIF_POLICY_NUMBER)='', 'N/A',\n\t        LTRIM(RTRIM(IN_PIF_POLICY_NUMBER))\n\t    )\n\t) AS V_PIF_POLICY_NUMBER,\n\tV_PIF_POLICY_NUMBER AS PIF_POLICY_NUMBER,\n\t-- *INF*: IIF(ISNULL(LTRIM(RTRIM(IN_PIF_MODULE))),'N/A',IIF(IS_SPACES(IN_PIF_MODULE),'N/A',LTRIM(RTRIM(IN_PIF_MODULE))))\n\tIFF(\n\t    LTRIM(RTRIM(IN_PIF_MODULE)) IS NULL, 'N/A',\n\t    IFF(\n\t        LENGTH(IN_PIF_MODULE)>0\n\t    and TRIM(IN_PIF_MODULE)='', 'N/A',\n\t        LTRIM(RTRIM(IN_PIF_MODULE))\n\t    )\n\t) AS V_PIF_MODULE,\n\tV_PIF_MODULE AS PIF_MODULE,\n\t-- *INF*: IIF(ISNULL(IN_IPFCGQ_YEAR_OF_LOSS),1800,IN_IPFCGQ_YEAR_OF_LOSS)\n\tIFF(IN_IPFCGQ_YEAR_OF_LOSS IS NULL, 1800, IN_IPFCGQ_YEAR_OF_LOSS) AS V_IPFCGQ_YEAR_OF_LOSS,\n\tV_IPFCGQ_YEAR_OF_LOSS AS IPFCGQ_YEAR_OF_LOSS,\n\t-- *INF*: IIF(ISNULL(IN_IPFCGQ_MONTH_OF_LOSS),01,IN_IPFCGQ_MONTH_OF_LOSS)\n\tIFF(IN_IPFCGQ_MONTH_OF_LOSS IS NULL, 01, IN_IPFCGQ_MONTH_OF_LOSS) AS V_IPFCGQ_MONTH_OF_LOSS,\n\tV_IPFCGQ_MONTH_OF_LOSS AS IPFCGQ_MONTH_OF_LOSS,\n\t-- *INF*: IIF(ISNULL(IN_IPFCGQ_DAY_OF_LOSS),01,IN_IPFCGQ_DAY_OF_LOSS)\n\tIFF(IN_IPFCGQ_DAY_OF_LOSS IS NULL, 01, IN_IPFCGQ_DAY_OF_LOSS) AS V_IPFCGQ_DAY_OF_LOSS,\n\tV_IPFCGQ_DAY_OF_LOSS AS IPFCGQ_DAY_OF_LOSS,\n\t-- *INF*: IIF(ISNULL(IN_IPFCGQ_LOSS_OCCURENCE),'000',IN_IPFCGQ_LOSS_OCCURENCE)\n\tIFF(IN_IPFCGQ_LOSS_OCCURENCE IS NULL, '000', IN_IPFCGQ_LOSS_OCCURENCE) AS V_IPFCGQ_LOSS_OCCURENCE,\n\tV_IPFCGQ_LOSS_OCCURENCE AS IPFCGQ_LOSS_OCCURENCE,\n\t-- *INF*: IIF(ISNULL(IN_IPFCGQ_LOSS_CLAIMANT),'000',IN_IPFCGQ_LOSS_CLAIMANT)\n\tIFF(IN_IPFCGQ_LOSS_CLAIMANT IS NULL, '000', IN_IPFCGQ_LOSS_CLAIMANT) AS V_IPFCGQ_LOSS_CLAIMANT,\n\tV_IPFCGQ_LOSS_CLAIMANT AS IPFCGQ_LOSS_CLAIMANT,\n\t-- *INF*: TO_CHAR(V_IPFCGQ_YEAR_OF_LOSS)\n\tTO_CHAR(V_IPFCGQ_YEAR_OF_LOSS) AS V_LOSS_YEAR,\n\t-- *INF*: TO_CHAR(V_IPFCGQ_MONTH_OF_LOSS)\n\tTO_CHAR(V_IPFCGQ_MONTH_OF_LOSS) AS V_LOSS_MONTH,\n\t-- *INF*: TO_CHAR(V_IPFCGQ_DAY_OF_LOSS)\n\tTO_CHAR(V_IPFCGQ_DAY_OF_LOSS) AS V_LOSS_DAY,\n\t-- *INF*: IIF ( LENGTH(V_LOSS_MONTH) = 1, '0' || V_LOSS_MONTH, V_LOSS_MONTH)\r\n\t-- ||  \r\n\t-- IIF ( LENGTH(V_LOSS_DAY ) = 1, '0' || V_LOSS_DAY, V_LOSS_DAY )\r\n\t-- ||  \r\n\t-- V_LOSS_YEAR\n\tIFF(LENGTH(V_LOSS_MONTH) = 1, '0' || V_LOSS_MONTH, V_LOSS_MONTH) || IFF(LENGTH(V_LOSS_DAY) = 1, '0' || V_LOSS_DAY, V_LOSS_DAY) || V_LOSS_YEAR AS V_LOSS_DATE,\n\t-- *INF*: V_PIF_SYMBOL || V_PIF_POLICY_NUMBER || V_PIF_MODULE || V_LOSS_DATE || TO_CHAR(V_IPFCGQ_LOSS_OCCURENCE)\n\tV_PIF_SYMBOL || V_PIF_POLICY_NUMBER || V_PIF_MODULE || V_LOSS_DATE || TO_CHAR(V_IPFCGQ_LOSS_OCCURENCE) AS V_OCCURRENCE_KEY,\n\tV_OCCURRENCE_KEY AS CLAIM_OCCURRENCE_KEY,\n\t'CMT' AS V_PARTY_ROLE_CODE,\n\t-- *INF*: V_OCCURRENCE_KEY||TO_CHAR(V_IPFCGQ_LOSS_CLAIMANT)||V_PARTY_ROLE_CODE\n\tV_OCCURRENCE_KEY || TO_CHAR(V_IPFCGQ_LOSS_CLAIMANT) || V_PARTY_ROLE_CODE AS V_LOSS_PARTY_KEY,\n\tV_LOSS_PARTY_KEY AS CLAIM_PARTY_KEY,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\n\tTO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY') AS o_work_hist_created_date\n\tFROM EXP_VALIDATE_workers_comp_claimant_work_history_PMS\n),\nLKP_42GQ_WC1 AS (\n\tSELECT\n\tipfcgq_last_day_worked,\n\tipfcgq_return_to_work_date,\n\tpif_symbol,\n\tpif_policy_number,\n\tpif_module,\n\tipfcgq_year_of_loss,\n\tipfcgq_month_of_loss,\n\tipfcgq_day_of_loss,\n\tipfcgq_loss_occurence,\n\tipfcgq_loss_claimant\n\tFROM (\n\t\tselect         r.ipfcgq_return_to_work_date   as ipfcgq_return_to_work_date  ,\r\n\t\t       r.ipfcgq_last_day_worked      as  ipfcgq_last_day_worked,\r\n\t\t      r.pif_symbol       as pif_symbol,\r\n\t\t      r.pif_policy_number as pif_policy_number ,\r\n\t\t      r.pif_module  as pif_module,\r\n\t\t       r.ipfcgq_loss_claimant   as    ipfcgq_loss_claimant,\r\n\t\t       r.ipfcgq_loss_occurence as  ipfcgq_loss_occurence, \r\n\t\t       r.ipfcgq_year_of_loss as ipfcgq_year_of_loss  ,\r\n\t\t       r.ipfcgq_month_of_loss as ipfcgq_month_of_loss,\r\n\t\t       r.ipfcgq_day_of_loss as   ipfcgq_day_of_loss \r\n\t\tFROM (\r\n\t\t\r\n\t\tselect CAST(C.ipfcgq_return_to_work_date  AS datetime) as ipfcgq_return_to_work_date ,\r\n\t\t      CAST(C.ipfcgq_last_day_worked AS datetime) as ipfcgq_last_day_worked,\r\n\t\t      C.pif_symbol as pif_symbol,\r\n\t\t      C.pif_policy_number pif_policy_number,\r\n\t\t      C.pif_module as pif_module,\r\n\t\t      C.IPFCGQ_LOSS_CLAIMANT as ipfcgq_loss_claimant,\r\n\t\t      C.IPFCGQ_LOSS_OCCURENCE as ipfcgq_loss_occurence,\r\n\t\t      C.IPFCGQ_YEAR_OF_LOSS as ipfcgq_year_of_loss,\r\n\t\t        C.IPFCGQ_MONTH_OF_LOSS as ipfcgq_month_of_loss,\r\n\t\t          C.IPFCGQ_DAY_OF_LOSS as ipfcgq_day_of_loss  \r\n\t\tFROM  PIF_42GQ_WC1_stage  C  \r\n\t\t) r\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pif_symbol,pif_policy_number,pif_module,ipfcgq_year_of_loss,ipfcgq_month_of_loss,ipfcgq_day_of_loss,ipfcgq_loss_occurence,ipfcgq_loss_claimant ORDER BY ipfcgq_last_day_worked DESC) = 1\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\t---CO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  \r\n\t\tAND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id DESC) = 1\n),\nLKP_workers_comp_claimant_detail AS (\n\tSELECT\n\twc_claimant_det_ak_id,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT workers_comp_claimant_detail.wc_claimant_det_ak_id as wc_claimant_det_ak_id,           \r\n\t\t               workers_comp_claimant_detail.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id \r\n\t\tFROM workers_comp_claimant_detail\r\n\t\tWHERE (source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}') AND (CRRNT_SNPSHT_FLAG='1')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY wc_claimant_det_ak_id DESC) = 1\n),\nLKP_WORK_HISTORY AS (\n\tSELECT\n\twc_claimant_work_hist_ak_id,\n\twc_claimant_det_ak_id,\n\temp_last_day_worked,\n\treturn_to_work_date,\n\treturn_to_work_type,\n\treturn_to_work_with_same_emplyr_ind,\n\treturn_to_work_with_restriction_ind,\n\templyr_paid_litigated_ind,\n\templyr_paid_amt,\n\twork_hist_created_date,\n\tsource_sys_id,\n\tIN_work_hist_created_date\n\tFROM (\n\t\tSELECT wh.wc_claimant_work_hist_ak_id as wc_claimant_work_hist_ak_id, \r\n\t\t       wh.wc_claimant_det_ak_id    as wc_claimant_det_ak_id,\r\n\t\t       wh.emp_last_day_worked      as emp_last_day_worked,   \r\n\t\t       wh.return_to_work_date      as return_to_work_date,\r\n\t\t       wh.return_to_work_type      as return_to_work_type,\r\n\t\t       wh.return_to_work_with_same_emplyr_ind      as return_to_work_with_same_emplyr_ind,\r\n\t\t       wh.return_to_work_with_restriction_ind      as return_to_work_with_restriction_ind,\r\n\t\t       wh.emplyr_paid_litigated_ind      as emplyr_paid_litigated_ind,\r\n\t\t       wh.emplyr_paid_amt      as emplyr_paid_amt,\r\n\t\t       wh.work_hist_created_date  as work_hist_created_date,\r\n\t\t       wh.source_sys_id  as source_sys_id       \r\n\t\tFROM workers_comp_claimant_work_history wh\r\n\t\tWHERE (wh.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}') AND (wh.CRRNT_SNPSHT_FLAG='1')\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY wc_claimant_det_ak_id,work_hist_created_date ORDER BY wc_claimant_work_hist_ak_id DESC) = 1\n),\nEXP_DETECT_CHANGES_workers_comp_claimant_work_history AS (\n\tSELECT\n\tEXP_Lkp_Values_workers_comp_claimant_work_history_PMS.PIF_SYMBOL,\n\tLKP_WORK_HISTORY.work_hist_created_date AS LKP_work_hist_created_date,\n\tLKP_WORK_HISTORY.wc_claimant_work_hist_ak_id AS LKP_WC_CLAIMANT_WORK_HIST_AK_ID,\n\tLKP_WORK_HISTORY.wc_claimant_det_ak_id AS LKP_WC_CLAIMANT_DET_AK_ID,\n\tLKP_WORK_HISTORY.emp_last_day_worked AS LKP_EMP_LAST_DAY_WORKED,\n\tLKP_WORK_HISTORY.return_to_work_date AS LKP_RETURN_TO_WORK_DATE,\n\tLKP_42GQ_WC1.ipfcgq_last_day_worked AS IN_EMP_LAST_DAY_WORKED,\n\t-- *INF*:   IIF( ISNULL(IN_EMP_LAST_DAY_WORKED) OR  IN_EMP_LAST_DAY_WORKED =TO_DATE('1/1/1900','MM/DD/YYYY')  ,TO_DATE('1/1/1800','MM/DD/YYYY'), IN_EMP_LAST_DAY_WORKED)\n\tIFF(\n\t    IN_EMP_LAST_DAY_WORKED IS NULL\n\t    or IN_EMP_LAST_DAY_WORKED = TO_TIMESTAMP('1/1/1900', 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    IN_EMP_LAST_DAY_WORKED\n\t) AS V_EMP_LAST_DAY_WORKED_STR,\n\tLKP_WORK_HISTORY.return_to_work_type AS LKP_return_to_work_type,\n\tLKP_WORK_HISTORY.emplyr_paid_amt AS LKP_emplyr_paid_amt,\n\tLKP_WORK_HISTORY.return_to_work_with_same_emplyr_ind AS LKP_return_to_work_with_same_emplyr_ind,\n\tLKP_WORK_HISTORY.source_sys_id AS LKP_source_sys_id,\n\tLKP_WORK_HISTORY.return_to_work_with_restriction_ind AS LKP_return_to_work_with_restriction_ind,\n\tLKP_WORK_HISTORY.emplyr_paid_litigated_ind AS LKP_emplyr_paid_litigated_ind,\n\tV_EMP_LAST_DAY_WORKED_STR AS o_emp_last_day_worked,\n\tLKP_42GQ_WC1.ipfcgq_return_to_work_date AS IN_RETURN_TO_WORK_DATE,\n\t-- *INF*:  IIF( ISNULL(IN_RETURN_TO_WORK_DATE)  OR  IN_RETURN_TO_WORK_DATE =TO_DATE('1/1/1900','MM/DD/YYYY')    ,TO_DATE('1/1/1800','MM/DD/YYYY'), IN_RETURN_TO_WORK_DATE)\r\n\t--  \r\n\t-- \n\tIFF(\n\t    IN_RETURN_TO_WORK_DATE IS NULL\n\t    or IN_RETURN_TO_WORK_DATE = TO_TIMESTAMP('1/1/1900', 'MM/DD/YYYY'),\n\t    TO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY'),\n\t    IN_RETURN_TO_WORK_DATE\n\t) AS V_RETURN_TO_WORK_DATE_STR,\n\tV_RETURN_TO_WORK_DATE_STR AS o_return_to_work_date,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS source_sys_id,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS v_source_sys_id,\n\t'N/A' AS v_return_to_work_type,\n\tv_return_to_work_type AS o_return_to_work_type,\n\t'N/A' AS v_return_to_work_with_same_emplyr_ind,\n\tv_return_to_work_with_same_emplyr_ind AS o_return_to_work_with_same_emplyr_ind,\n\t'N/A' AS v_return_to_work_with_restriction_ind,\n\tv_return_to_work_with_restriction_ind AS o_return_to_work_with_restriction_ind,\n\t'N/A' AS v_emplyr_paid_litigated_ind,\n\tv_emplyr_paid_litigated_ind AS o_emplyr_paid_litigated_ind,\n\t0 AS v_emplyr_paid_amt,\n\tv_emplyr_paid_amt AS o_emplyr_paid_amt,\n\tSYSDATE AS v_sysdate,\n\t-- *INF*: IIF(ISNULL(LKP_WC_CLAIMANT_WORK_HIST_AK_ID),'NEW',\r\n\t-- IIF(  (\r\n\t-- LKP_EMP_LAST_DAY_WORKED <> V_EMP_LAST_DAY_WORKED_STR OR \r\n\t-- LKP_RETURN_TO_WORK_DATE <> V_RETURN_TO_WORK_DATE_STR  or LKP_return_to_work_type <> v_return_to_work_type or LKP_return_to_work_with_same_emplyr_ind <> v_return_to_work_with_same_emplyr_ind or LKP_return_to_work_with_restriction_ind <> v_return_to_work_with_restriction_ind or v_emplyr_paid_litigated_ind <> LKP_emplyr_paid_litigated_ind or LKP_emplyr_paid_amt <> v_emplyr_paid_amt  or LKP_source_sys_id <>  v_source_sys_id),\r\n\t-- 'UPDATE','NOCHANGE'))\n\tIFF(\n\t    LKP_WC_CLAIMANT_WORK_HIST_AK_ID IS NULL, 'NEW',\n\t    IFF(\n\t        (LKP_EMP_LAST_DAY_WORKED <> V_EMP_LAST_DAY_WORKED_STR\n\t        or LKP_RETURN_TO_WORK_DATE <> V_RETURN_TO_WORK_DATE_STR\n\t        or LKP_return_to_work_type <> v_return_to_work_type\n\t        or LKP_return_to_work_with_same_emplyr_ind <> v_return_to_work_with_same_emplyr_ind\n\t        or LKP_return_to_work_with_restriction_ind <> v_return_to_work_with_restriction_ind\n\t        or v_emplyr_paid_litigated_ind <> LKP_emplyr_paid_litigated_ind\n\t        or LKP_emplyr_paid_amt <> v_emplyr_paid_amt\n\t        or LKP_source_sys_id <> v_source_sys_id),\n\t        'UPDATE',\n\t        'NOCHANGE'\n\t    )\n\t) AS V_CHANGE_FLAG,\n\tV_CHANGE_FLAG AS CHANGE_FLAG_OP,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS audit_id,\n\t-- *INF*: IIF(V_CHANGE_FLAG='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tTO_DATE(TO_CHAR(SYSDATE,'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS'))\n\tIFF(\n\t    V_CHANGE_FLAG = 'NEW', TO_TIMESTAMP('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'),\n\t    TO_TIMESTAMP(TO_CHAR(CURRENT_TIMESTAMP, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')\n\t) AS eff_from_date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_TIMESTAMP('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tv_sysdate AS created_date,\n\tv_sysdate AS modified_date,\n\tLKP_workers_comp_claimant_detail.wc_claimant_det_ak_id\n\tFROM EXP_Lkp_Values_workers_comp_claimant_work_history_PMS\n\tLEFT JOIN LKP_42GQ_WC1\n\tON LKP_42GQ_WC1.pif_symbol = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.PIF_SYMBOL AND LKP_42GQ_WC1.pif_policy_number = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.PIF_POLICY_NUMBER AND LKP_42GQ_WC1.pif_module = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.PIF_MODULE AND LKP_42GQ_WC1.ipfcgq_year_of_loss = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.IPFCGQ_YEAR_OF_LOSS AND LKP_42GQ_WC1.ipfcgq_month_of_loss = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.IPFCGQ_MONTH_OF_LOSS AND LKP_42GQ_WC1.ipfcgq_day_of_loss = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.IPFCGQ_DAY_OF_LOSS AND LKP_42GQ_WC1.ipfcgq_loss_occurence = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.IPFCGQ_LOSS_OCCURENCE AND LKP_42GQ_WC1.ipfcgq_loss_claimant = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.IPFCGQ_LOSS_CLAIMANT\n\tLEFT JOIN LKP_WORK_HISTORY\n\tON LKP_WORK_HISTORY.wc_claimant_det_ak_id = LKP_workers_comp_claimant_detail.wc_claimant_det_ak_id AND LKP_WORK_HISTORY.work_hist_created_date = EXP_Lkp_Values_workers_comp_claimant_work_history_PMS.o_work_hist_created_date\n\tLEFT JOIN LKP_workers_comp_claimant_detail\n\tON LKP_workers_comp_claimant_detail.claim_party_occurrence_ak_id = LKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id\n),\nFIL_INSERT_workers_comp_claimant_work_history_PMS AS (\n\tSELECT\n\twc_claimant_det_ak_id, \n\tCHANGE_FLAG_OP, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\to_return_to_work_type, \n\to_return_to_work_with_same_emplyr_ind, \n\to_return_to_work_with_restriction_ind, \n\to_emplyr_paid_litigated_ind, \n\to_emplyr_paid_amt, \n\to_return_to_work_date, \n\to_emp_last_day_worked, \n\tLKP_WC_CLAIMANT_WORK_HIST_AK_ID AS WC_CLAIMANT_WORK_HIST_AK_ID\n\tFROM EXP_DETECT_CHANGES_workers_comp_claimant_work_history\n\tWHERE CHANGE_FLAG_OP<>'NOCHANGE'\n),\nSEQ_Workers_Comp_Claiment_Work_History AS (\n\tCREATE SEQUENCE SEQ_Workers_Comp_Claiment_Work_History\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_INSERT AS (\n\tSELECT\n\twc_claimant_det_ak_id AS wc_claimant_det_ak_id_IN,\n\t1+ v_cntr AS v_cntr,\n\twc_claimant_det_ak_id_IN AS o_wc_claimant_det_ak_id,\n\tCHANGE_FLAG_OP,\n\tSEQ_Workers_Comp_Claiment_Work_History.NEXTVAL,\n\t-- *INF*: IIF(CHANGE_FLAG_OP='NEW', NEXTVAL, WC_CLAIMANT_WORK_HIST_AK_ID)\n\tIFF(CHANGE_FLAG_OP = 'NEW', NEXTVAL, WC_CLAIMANT_WORK_HIST_AK_ID) AS o_wc_claimant_work_hist_ak_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tWC_CLAIMANT_WORK_HIST_AK_ID,\n\t-- *INF*: TO_DATE('1/1/1800','MM/DD/YYYY')\n\tTO_TIMESTAMP('1/1/1800', 'MM/DD/YYYY') AS o_work_hist_created_date,\n\to_return_to_work_date,\n\to_emp_last_day_worked,\n\to_return_to_work_type,\n\to_return_to_work_with_same_emplyr_ind,\n\to_return_to_work_with_restriction_ind,\n\to_emplyr_paid_litigated_ind,\n\to_emplyr_paid_amt\n\tFROM FIL_INSERT_workers_comp_claimant_work_history_PMS\n),\nworkers_comp_claimant_work_history_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, wc_claimant_work_hist_ak_id, wc_claimant_det_ak_id, work_hist_created_date, emp_last_day_worked, return_to_work_date, return_to_work_type, return_to_work_with_same_emplyr_ind, return_to_work_with_restriction_ind, emplyr_paid_litigated_ind, emplyr_paid_amt)\n\tSELECT \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tCREATED_DATE, \n\tMODIFIED_DATE, \n\to_wc_claimant_work_hist_ak_id AS WC_CLAIMANT_WORK_HIST_AK_ID, \n\to_wc_claimant_det_ak_id AS WC_CLAIMANT_DET_AK_ID, \n\to_work_hist_created_date AS WORK_HIST_CREATED_DATE, \n\to_emp_last_day_worked AS EMP_LAST_DAY_WORKED, \n\to_return_to_work_date AS RETURN_TO_WORK_DATE, \n\to_return_to_work_type AS RETURN_TO_WORK_TYPE, \n\to_return_to_work_with_same_emplyr_ind AS RETURN_TO_WORK_WITH_SAME_EMPLYR_IND, \n\to_return_to_work_with_restriction_ind AS RETURN_TO_WORK_WITH_RESTRICTION_IND, \n\to_emplyr_paid_litigated_ind AS EMPLYR_PAID_LITIGATED_IND, \n\to_emplyr_paid_amt AS EMPLYR_PAID_AMT\n\tFROM EXP_INSERT\n),\nSQ_workers_comp_claimant_work_history AS (\n\tSELECT a.wc_claimant_work_hist_id, a.wc_claimant_work_hist_ak_id, a.eff_from_date, a.eff_to_date \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history a\r\n\tWHERE EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM   @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history b\r\n\t\t\tWHERE b.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND b.crrnt_snpsht_flag = 1\r\n\t\t\tAND a.wc_claimant_work_hist_ak_id = b.wc_claimant_work_hist_ak_id\r\n\t\t\tGROUP BY wc_claimant_work_hist_ak_id\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY wc_claimant_work_hist_ak_id, eff_from_date  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\twc_claimant_work_hist_id,\n\taudit_id AS wc_claimant_work_hist_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: IIF(wc_claimant_work_hist_ak_id = v_PREV_ROW_wc_claimant_det_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),orig_eff_to_date)\n\tIFF(\n\t    wc_claimant_work_hist_ak_id = v_PREV_ROW_wc_claimant_det_ak_id,\n\t    DATEADD(SECOND,- 1,v_PREV_ROW_eff_from_date),\n\t    orig_eff_to_date\n\t) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\twc_claimant_work_hist_ak_id AS v_PREV_ROW_wc_claimant_det_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_workers_comp_claimant_work_history\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\twc_claimant_work_hist_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_workers_comp_claimant_work_historyl_PMS AS (\n\tSELECT\n\twc_claimant_work_hist_id AS wc_claimant_work_history_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nworkers_comp_claimant_work_history_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.workers_comp_claimant_work_history AS T\n\tUSING UPD_workers_comp_claimant_work_historyl_PMS AS S\n\tON T.wc_claimant_work_hist_id = S.wc_claimant_work_history_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "RPT_EDM and EDW/Claims DataWarehouse/"
        },
        "annotations": []
    }
}