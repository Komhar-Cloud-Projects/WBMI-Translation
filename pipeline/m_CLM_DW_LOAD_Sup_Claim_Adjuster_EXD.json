{
    "name": "s_m_CLM_DW_LOAD_Sup_Claim_Adjuster_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Sup_Claim_Adjuster_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_SUPPORT_01_STAGE AS (\n\tSELECT \r\n\tltrim(rtrim(a.CS01_CODE))\r\n\t, ltrim(rtrim(a.CS01_CODE_DES))\r\n\tFROM\r\n\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_SUPPORT_01_STAGE a\r\n\twhere a.CS01_TABLE_ID = 'CADJ'\r\n\tAND CS01_CODE LIKE 'X%'\n),\nFIL_VALID_CODE AS (\n\tSELECT\n\tCS01_CODE, \n\tCS01_CODE_DES\n\tFROM SQ_CLAIM_SUPPORT_01_STAGE\n\tWHERE LENGTH(CS01_CODE) = 3\n),\nEXP_Source AS (\n\tSELECT\n\tCS01_CODE,\n\tCS01_CODE_DES,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t1 AS crrnt_snpsht_flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tsysdate AS created_date\n\tFROM FIL_VALID_CODE\n),\nLKP_sup_claim_adjuster AS (\n\tSELECT\n\tsup_claim_adjuster_id,\n\twbconnect_user_id,\n\tadjuster_code\n\tFROM (\n\t\tSELECT \r\n\t\tltrim(rtrim(a.sup_claim_adjuster_id)) as sup_claim_adjuster_id\r\n\t\t, ltrim(rtrim(a.wbconnect_user_id)) as wbconnect_user_id\r\n\t\t, ltrim(rtrim(a.adjuster_code)) as adjuster_code \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_adjuster a\r\n\t\tWHERE\r\n\t\tsource_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY adjuster_code ORDER BY sup_claim_adjuster_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_sup_claim_adjuster.sup_claim_adjuster_id,\n\tLKP_sup_claim_adjuster.wbconnect_user_id AS old_wbconnect_user_id,\n\tEXP_Source.CS01_CODE,\n\tEXP_Source.CS01_CODE_DES,\n\tEXP_Source.AUDIT_ID,\n\tEXP_Source.crrnt_snpsht_flag,\n\tEXP_Source.SOURCE_SYSTEM_ID,\n\tEXP_Source.created_date,\n\t-- *INF*: iif(isnull(sup_claim_adjuster_id),\r\n\t-- 'NEW'\r\n\t-- ,iif(CS01_CODE_DES != old_wbconnect_user_id\r\n\t-- ,'UPDATE'\r\n\t-- ,'NO CHANGE')\r\n\t-- )\n\tIFF(sup_claim_adjuster_id IS NULL, 'NEW', IFF(CS01_CODE_DES != old_wbconnect_user_id, 'UPDATE', 'NO CHANGE')) AS v_Changed_Flag,\n\tv_Changed_Flag AS changed_flag,\n\t-- *INF*: iif(v_Changed_Flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_Changed_Flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date\n\tFROM EXP_Source\n\tLEFT JOIN LKP_sup_claim_adjuster\n\tON LKP_sup_claim_adjuster.adjuster_code = EXP_Source.CS01_CODE\n),\nFIL_Insert AS (\n\tSELECT\n\told_wbconnect_user_id, \n\tCS01_CODE, \n\tCS01_CODE_DES, \n\tAUDIT_ID, \n\tcrrnt_snpsht_flag, \n\tSOURCE_SYSTEM_ID, \n\tcreated_date, \n\tchanged_flag, \n\teff_from_date, \n\teff_to_date\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW' or changed_flag='UPDATE'\n),\nsup_claim_adjuster_insert AS (\n\tINSERT INTO sup_claim_adjuster\n\t(adjuster_code, wbconnect_user_id, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date)\n\tSELECT \n\tCS01_CODE AS ADJUSTER_CODE, \n\tCS01_CODE_DES AS WBCONNECT_USER_ID, \n\tCRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tcreated_date AS MODIFIED_DATE\n\tFROM FIL_Insert\n),\nSQ_sup_claim_adjuster AS (\n\tSELECT \r\n\ta.sup_claim_adjuster_id\r\n\t, a.adjuster_code\r\n\t, a.wbconnect_user_id\r\n\t, a.eff_from_date\r\n\t, a.eff_to_date\r\n\t, a.source_sys_id \r\n\tFROM\r\n\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_adjuster a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_claim_adjuster b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\tand a.adjuster_code = b.adjuster_code\r\n\tand a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.adjuster_code,b.source_sys_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.adjuster_code,a.source_sys_id, a.eff_from_date desc\r\n\t\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tsup_claim_adjuster_id,\n\tadjuster_code,\n\twbconnect_user_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: decode(true,\r\n\t-- adjuster_code = v_PREV_ROW_ADJUSTER_CODE\r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1)\r\n\t-- ,orig_eff_to_date)\n\tdecode(true,\n\tadjuster_code = v_PREV_ROW_ADJUSTER_CODE, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tadjuster_code AS v_PREV_ROW_ADJUSTER_CODE,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\t0 AS crrnt_snpsht_flag,\n\tsysdate AS modified_date\n\tFROM SQ_sup_claim_adjuster\n),\nFIL_Claimant_Coverage_Detail AS (\n\tSELECT\n\tsup_claim_adjuster_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\tsup_claim_adjuster_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snpsht_flag, \n\tmodified_date\n\tFROM FIL_Claimant_Coverage_Detail\n),\nsup_claim_adjuster_update AS (\n\tMERGE INTO sup_claim_adjuster AS T\n\tUSING UPD_Update_Target AS S\n\tON T.sup_claim_adjuster_id = S.sup_claim_adjuster_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}