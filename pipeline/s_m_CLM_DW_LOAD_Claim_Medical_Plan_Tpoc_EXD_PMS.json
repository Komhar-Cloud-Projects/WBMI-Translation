{
    "name": "s_m_CLM_DW_LOAD_Claim_Medical_Plan_Tpoc_EXD_PMS",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claim_Medical_Plan_Tpoc_EXD_PMS",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_clm_med_plan_type_stage AS (\n\tSELECT\n\t\tclm_med_plan_type_stage_id,\n\t\tcms_doc_cntl_num,\n\t\tinjured_party_id,\n\t\twbm_plan_ins_type,\n\t\tstate_venue,\n\t\tmed_oblig_to_clmt,\n\t\torm_terminate_dt,\n\t\tno_fault_ins_limit,\n\t\texhaust_limit_dt,\n\t\ttpoc_date1,\n\t\ttpoc_amount1,\n\t\ttpoc_fund_dlay_dt1,\n\t\ttpoc_date2,\n\t\ttpoc_amount2,\n\t\ttpoc_fund_dlay_dt2,\n\t\ttpoc_date3,\n\t\ttpoc_amount3,\n\t\ttpoc_fund_dlay_dt3,\n\t\ttpoc_date4,\n\t\ttpoc_amount4,\n\t\ttpoc_fund_dlay_dt4,\n\t\ttpoc_date5,\n\t\ttpoc_amount5,\n\t\ttpoc_fund_dlay_dt5,\n\t\textract_date,\n\t\tas_of_date,\n\t\trecord_count,\n\t\tsource_system_id,\n\t\tplan_type_deleted\n\tFROM clm_med_plan_type_stage\n),\nLKP_claim_med_plan_ak_id AS (\n\tSELECT\n\tclaim_med_plan_ak_id,\n\tinjured_party_id,\n\twbmi_plan_ins_type\n\tFROM (\n\t\tSELECT \r\n\t\tCMP.claim_med_plan_ak_id as claim_med_plan_ak_id, \r\n\t\tCM.injured_party_id as injured_party_id, \r\n\t\tCMP.wbmi_plan_ins_type as wbmi_plan_ins_type \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan CMP, @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical CM\r\n\t\tWHERE \r\n\t\tCM.claim_med_ak_id  = CMP.claim_med_ak_id\r\n\t\tAND CM.crrnt_snpsht_flag = 1\r\n\t\tAND CMP.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY injured_party_id,wbmi_plan_ins_type ORDER BY claim_med_plan_ak_id) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_claim_med_plan_ak_id.claim_med_plan_ak_id AS in_claim_med_plan_ak_id,\n\tSQ_clm_med_plan_type_stage.tpoc_date1,\n\tSQ_clm_med_plan_type_stage.tpoc_amount1,\n\tSQ_clm_med_plan_type_stage.tpoc_fund_dlay_dt1,\n\t1 AS code1,\n\tSQ_clm_med_plan_type_stage.tpoc_date2,\n\tSQ_clm_med_plan_type_stage.tpoc_amount2,\n\tSQ_clm_med_plan_type_stage.tpoc_fund_dlay_dt2,\n\t2 AS code2,\n\tSQ_clm_med_plan_type_stage.tpoc_date3,\n\tSQ_clm_med_plan_type_stage.tpoc_amount3,\n\tSQ_clm_med_plan_type_stage.tpoc_fund_dlay_dt3,\n\t3 AS code3,\n\tSQ_clm_med_plan_type_stage.tpoc_date4,\n\tSQ_clm_med_plan_type_stage.tpoc_amount4,\n\tSQ_clm_med_plan_type_stage.tpoc_fund_dlay_dt4,\n\t4 AS code4,\n\tSQ_clm_med_plan_type_stage.tpoc_date5,\n\tSQ_clm_med_plan_type_stage.tpoc_amount5,\n\tSQ_clm_med_plan_type_stage.tpoc_fund_dlay_dt5,\n\t5 AS code5\n\tFROM SQ_clm_med_plan_type_stage\n\tLEFT JOIN LKP_claim_med_plan_ak_id\n\tON LKP_claim_med_plan_ak_id.injured_party_id = SQ_clm_med_plan_type_stage.injured_party_id AND LKP_claim_med_plan_ak_id.wbmi_plan_ins_type = SQ_clm_med_plan_type_stage.wbm_plan_ins_type\n),\nUNI_Split_Record AS (\n\tSELECT in_claim_med_plan_ak_id AS claim_med_plan_ak_id, code1 AS tpoc_code, tpoc_date1 AS tpoc_date, tpoc_amount1 AS tpoc_amount, tpoc_fund_dlay_dt1 AS tpoc_delay_date\n\tFROM \n\tUNION\n\tSELECT in_claim_med_plan_ak_id AS claim_med_plan_ak_id, code2 AS tpoc_code, tpoc_date2 AS tpoc_date, tpoc_amount2 AS tpoc_amount, tpoc_fund_dlay_dt2 AS tpoc_delay_date\n\tFROM \n\tUNION\n\tSELECT in_claim_med_plan_ak_id AS claim_med_plan_ak_id, code3 AS tpoc_code, tpoc_date3 AS tpoc_date, tpoc_amount3 AS tpoc_amount, tpoc_fund_dlay_dt3 AS tpoc_delay_date\n\tFROM \n\tUNION\n\tSELECT in_claim_med_plan_ak_id AS claim_med_plan_ak_id, code4 AS tpoc_code, tpoc_date4 AS tpoc_date, tpoc_amount4 AS tpoc_amount, tpoc_fund_dlay_dt4 AS tpoc_delay_date\n\tFROM \n\tUNION\n\tSELECT in_claim_med_plan_ak_id AS claim_med_plan_ak_id, code5 AS tpoc_code, tpoc_date5 AS tpoc_date, tpoc_amount5 AS tpoc_amount, tpoc_fund_dlay_dt5 AS tpoc_delay_date\n\tFROM \n),\nFIL_Valid_Codes AS (\n\tSELECT\n\tclaim_med_plan_ak_id, \n\ttpoc_code, \n\ttpoc_date, \n\ttpoc_amount, \n\ttpoc_delay_date AS tpoc_fund_dlay_dt\n\tFROM UNI_Split_Record\n\tWHERE IIF(ISNULL(tpoc_date) AND ISNULL(tpoc_amount) AND ISNULL(tpoc_fund_dlay_dt),\r\nFALSE,\r\nTRUE)\n),\nEXP_Default_Values AS (\n\tSELECT\n\tclaim_med_plan_ak_id,\n\ttpoc_code,\n\ttpoc_date,\n\t-- *INF*: IIF(ISNULL(tpoc_date), TO_DATE('1/1/1800','MM/DD/YYYY'), tpoc_date)\n\tIFF(tpoc_date IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), tpoc_date) AS tpoc_date1,\n\ttpoc_amount,\n\t-- *INF*: IIF(ISNULL(tpoc_amount), 0.00, tpoc_amount)\n\tIFF(tpoc_amount IS NULL, 0.00, tpoc_amount) AS tpoc_amount1,\n\ttpoc_fund_dlay_dt,\n\t-- *INF*: IIF(ISNULL(tpoc_fund_dlay_dt), TO_DATE('1/1/1800','MM/DD/YYYY'), tpoc_fund_dlay_dt)\n\tIFF(tpoc_fund_dlay_dt IS NULL, TO_DATE('1/1/1800', 'MM/DD/YYYY'), tpoc_fund_dlay_dt) AS tpoc_fund_dlay_dt1\n\tFROM FIL_Valid_Codes\n),\nLKP_Target AS (\n\tSELECT\n\tclaim_med_plan_tpoc_ak_id,\n\ttpoc_fund_delay_date,\n\ttpoc_date,\n\ttpoc_amt,\n\tclaim_med_plan_ak_id,\n\ttpoc_code\n\tFROM (\n\t\tSELECT claim_medical_plan_tpoc.claim_med_plan_tpoc_ak_id as claim_med_plan_tpoc_ak_id, claim_medical_plan_tpoc.tpoc_fund_delay_date as tpoc_fund_delay_date, claim_medical_plan_tpoc.tpoc_date as tpoc_date, claim_medical_plan_tpoc.tpoc_amt as tpoc_amt, claim_medical_plan_tpoc.claim_med_plan_ak_id as claim_med_plan_ak_id, claim_medical_plan_tpoc.tpoc_code as tpoc_code \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan_tpoc\r\n\t\tWHERE crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_med_plan_ak_id,tpoc_code ORDER BY claim_med_plan_tpoc_ak_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_Target.claim_med_plan_tpoc_ak_id AS lkp_claim_med_plan_tpoc_ak_id,\n\tLKP_Target.tpoc_fund_delay_date AS lkp_tpoc_fund_delay_date,\n\tLKP_Target.tpoc_date AS lkp_tpoc_date,\n\tLKP_Target.tpoc_amt AS lkp_tpoc_amt,\n\tEXP_Default_Values.claim_med_plan_ak_id,\n\tEXP_Default_Values.tpoc_code AS tpoc_code1,\n\tEXP_Default_Values.tpoc_date1,\n\tEXP_Default_Values.tpoc_amount1,\n\tEXP_Default_Values.tpoc_fund_dlay_dt1,\n\t-- *INF*: iif(isnull(lkp_claim_med_plan_tpoc_ak_id),'NEW',\t\r\n\t-- \tiif (\r\n\t-- lkp_tpoc_fund_delay_date != tpoc_fund_dlay_dt1 OR\r\n\t-- lkp_tpoc_date != tpoc_date1 OR\r\n\t-- lkp_tpoc_amt != tpoc_amount1\r\n\t-- , 'UPDATE','NOCHANGE'))\n\tIFF(lkp_claim_med_plan_tpoc_ak_id IS NULL, 'NEW', IFF(lkp_tpoc_fund_delay_date != tpoc_fund_dlay_dt1 OR lkp_tpoc_date != tpoc_date1 OR lkp_tpoc_amt != tpoc_amount1, 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t1 AS Crrnt_Snpsht_Flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS Audit_Id,\n\t-- *INF*: IIF(v_Changed_Flag='NEW',\r\n\t-- \tTO_DATE('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),\r\n\t-- \tSYSDATE)\n\tIFF(v_Changed_Flag = 'NEW', TO_DATE('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), SYSDATE) AS Eff_From_Date,\n\t-- *INF*: TO_DATE('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tTO_DATE('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS Eff_To_Date,\n\tv_Changed_Flag AS Changed_Flag,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\tSYSDATE AS Created_Date,\n\tSYSDATE AS Modified_Date\n\tFROM EXP_Default_Values\n\tLEFT JOIN LKP_Target\n\tON LKP_Target.claim_med_plan_ak_id = EXP_Default_Values.claim_med_plan_ak_id AND LKP_Target.tpoc_code = EXP_Default_Values.tpoc_code\n),\nFIL_Insert AS (\n\tSELECT\n\tCrrnt_Snpsht_Flag, \n\tAudit_Id, \n\tEff_From_Date, \n\tEff_To_Date, \n\tChanged_Flag, \n\tSOURCE_SYSTEM_ID, \n\tCreated_Date, \n\tModified_Date, \n\tlkp_claim_med_plan_tpoc_ak_id, \n\tclaim_med_plan_ak_id, \n\ttpoc_code1, \n\ttpoc_date1, \n\ttpoc_amount1, \n\ttpoc_fund_dlay_dt1\n\tFROM EXP_Detect_Changes\n\tWHERE Changed_Flag='NEW'  OR Changed_Flag='UPDATE'\n),\nSEQ_claim_medical_plan_tpoc AS (\n\tCREATE SEQUENCE SEQ_claim_medical_plan_tpoc\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Insert AS (\n\tSELECT\n\tlkp_claim_med_plan_tpoc_ak_id,\n\tCrrnt_Snpsht_Flag,\n\tAudit_Id,\n\tEff_From_Date,\n\tEff_To_Date,\n\tChanged_Flag,\n\tSOURCE_SYSTEM_ID,\n\tCreated_Date,\n\tModified_Date,\n\tSEQ_claim_medical_plan_tpoc.NEXTVAL,\n\t-- *INF*: IIF(Changed_Flag='NEW', NEXTVAL, lkp_claim_med_plan_tpoc_ak_id)\n\tIFF(Changed_Flag = 'NEW', NEXTVAL, lkp_claim_med_plan_tpoc_ak_id) AS claim_med_plan_tpoc_ak_id_out,\n\tclaim_med_plan_ak_id,\n\ttpoc_code1,\n\ttpoc_date1,\n\ttpoc_amount1,\n\ttpoc_fund_dlay_dt1\n\tFROM FIL_Insert\n),\nclaim_medical_plan_tpoc_INSERT AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan_tpoc\n\t(crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, claim_med_plan_tpoc_ak_id, claim_med_plan_ak_id, tpoc_code, tpoc_fund_delay_date, tpoc_date, tpoc_amt)\n\tSELECT \n\tCrrnt_Snpsht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAudit_Id AS AUDIT_ID, \n\tEff_From_Date AS EFF_FROM_DATE, \n\tEff_To_Date AS EFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCreated_Date AS CREATED_DATE, \n\tModified_Date AS MODIFIED_DATE, \n\tclaim_med_plan_tpoc_ak_id_out AS CLAIM_MED_PLAN_TPOC_AK_ID, \n\tCLAIM_MED_PLAN_AK_ID, \n\ttpoc_code1 AS TPOC_CODE, \n\ttpoc_fund_dlay_dt1 AS TPOC_FUND_DELAY_DATE, \n\ttpoc_date1 AS TPOC_DATE, \n\ttpoc_amount1 AS TPOC_AMT\n\tFROM EXP_Insert\n),\nSQ_claim_medical_plan_tpoc_REFRESH AS (\n\tSELECT\n\t\tclaim_med_plan_tpoc_id,\n\t\tcrrnt_snpsht_flag,\n\t\taudit_id,\n\t\teff_from_date,\n\t\teff_to_date,\n\t\tsource_sys_id,\n\t\tcreated_date,\n\t\tmodified_date,\n\t\tclaim_med_plan_tpoc_ak_id,\n\t\tclaim_med_plan_ak_id,\n\t\ttpoc_code,\n\t\ttpoc_fund_delay_date,\n\t\ttpoc_date,\n\t\ttpoc_amt\n\tFROM claim_medical_plan_tpoc_REFRESH\n\tWHERE claim_medical_plan_tpoc.crrnt_snpsht_flag='1'\n),\nEXP_claim_medical_plan_input_REFRESH AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tclaim_med_plan_tpoc_ak_id,\n\tclaim_med_plan_ak_id,\n\ttpoc_code,\n\ttpoc_fund_delay_date,\n\ttpoc_date,\n\ttpoc_amt\n\tFROM SQ_claim_medical_plan_tpoc_REFRESH\n),\nJNR_refresh AS (SELECT\n\tEXP_claim_medical_plan_input_REFRESH.claim_med_plan_tpoc_id, \n\tEXP_claim_medical_plan_input_REFRESH.crrnt_snpsht_flag, \n\tEXP_claim_medical_plan_input_REFRESH.audit_id, \n\tEXP_claim_medical_plan_input_REFRESH.eff_from_date, \n\tEXP_claim_medical_plan_input_REFRESH.eff_to_date, \n\tEXP_claim_medical_plan_input_REFRESH.source_sys_id, \n\tEXP_claim_medical_plan_input_REFRESH.created_date, \n\tEXP_claim_medical_plan_input_REFRESH.modified_date, \n\tEXP_claim_medical_plan_input_REFRESH.claim_med_plan_tpoc_ak_id, \n\tEXP_claim_medical_plan_input_REFRESH.claim_med_plan_ak_id, \n\tEXP_claim_medical_plan_input_REFRESH.tpoc_code, \n\tEXP_claim_medical_plan_input_REFRESH.tpoc_fund_delay_date, \n\tEXP_claim_medical_plan_input_REFRESH.tpoc_date, \n\tEXP_claim_medical_plan_input_REFRESH.tpoc_amt, \n\tEXP_Default_Values.claim_med_plan_ak_id AS claim_med_plan_ak_id1, \n\tEXP_Default_Values.tpoc_code AS tpoc_code1, \n\tEXP_Default_Values.tpoc_date1, \n\tEXP_Default_Values.tpoc_amount1 AS tpoc_amount, \n\tEXP_Default_Values.tpoc_fund_dlay_dt1 AS tpoc_fund_dlay_dt\n\tFROM EXP_Default_Values\n\tRIGHT OUTER JOIN EXP_claim_medical_plan_input_REFRESH\n\tON EXP_claim_medical_plan_input_REFRESH.claim_med_plan_ak_id = EXP_Default_Values.claim_med_plan_ak_id AND EXP_claim_medical_plan_input_REFRESH.tpoc_code = EXP_Default_Values.tpoc_code AND EXP_claim_medical_plan_input_REFRESH.tpoc_date = EXP_Default_Values.tpoc_date1 AND EXP_claim_medical_plan_input_REFRESH.tpoc_amt = EXP_Default_Values.tpoc_amount1 AND EXP_claim_medical_plan_input_REFRESH.tpoc_fund_delay_date = EXP_Default_Values.tpoc_fund_dlay_dt1\n),\nFIL_remove_matching_records AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id, \n\tcrrnt_snpsht_flag, \n\taudit_id, \n\teff_from_date, \n\teff_to_date, \n\tsource_sys_id, \n\tcreated_date, \n\tmodified_date, \n\tclaim_med_plan_tpoc_ak_id, \n\tclaim_med_plan_ak_id, \n\ttpoc_code, \n\ttpoc_fund_delay_date, \n\ttpoc_date, \n\ttpoc_amt, \n\tclaim_med_plan_ak_id1, \n\ttpoc_code1, \n\ttpoc_date1, \n\ttpoc_amount, \n\ttpoc_fund_dlay_dt\n\tFROM JNR_refresh\n\tWHERE ISNULL(claim_med_plan_ak_id1)\n),\nEXP_set_expire_values AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id,\n\t'0' AS current_snapshot_flag,\n\tSYSDATE AS mod_date\n\tFROM FIL_remove_matching_records\n),\nUPD_mark_for_update AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id, \n\tcurrent_snapshot_flag, \n\tmod_date\n\tFROM EXP_set_expire_values\n),\nclaim_medical_plan_tpoc_REFRESH_TARGET AS (\n\tMERGE INTO claim_medical_plan_tpoc AS T\n\tUSING UPD_mark_for_update AS S\n\tON T.claim_med_plan_tpoc_id = S.claim_med_plan_tpoc_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.current_snapshot_flag, T.modified_date = S.mod_date\n),\nSQ_claim_medical_plan_tpoc AS (\n\tSELECT \r\n\ta.claim_med_plan_tpoc_id, \r\n\ta.eff_from_date, \r\n\ta.eff_to_date, \r\n\ta.claim_med_plan_tpoc_ak_id \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan_tpoc a\r\n\tWHERE \r\n\t a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' AND  \r\n\t EXISTS(SELECT 1\t\t\t\r\n\t\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan_tpoc b\r\n\t\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'  AND crrnt_snpsht_flag = 1\r\n\t\t\tAND a.claim_med_plan_tpoc_ak_id  = b.claim_med_plan_tpoc_ak_id\r\n\t\t\tGROUP BY claim_med_plan_tpoc_ak_id\r\n\t\t\tHAVING COUNT(*) > 1)\r\n\tORDER BY claim_med_plan_tpoc_ak_id, eff_from_date  DESC\n),\nEXP_Lag_eff_from_date AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id,\n\tclaim_med_plan_tpoc_ak_id,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tclaim_med_plan_tpoc_ak_id = v_PREV_ROW_claim_med_plan_tpoc_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1),\r\n\t-- \torig_eff_to_date)\n\tDECODE(TRUE,\n\t\tclaim_med_plan_tpoc_ak_id = v_PREV_ROW_claim_med_plan_tpoc_ak_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\t\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tclaim_med_plan_tpoc_ak_id AS v_PREV_ROW_claim_med_plan_tpoc_ak_id,\n\tSYSDATE AS modified_date,\n\t0 AS crrnt_snpsht_flag\n\tFROM SQ_claim_medical_plan_tpoc\n),\nFIL_FirstRowInAKGroup AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM EXP_Lag_eff_from_date\n\tWHERE orig_eff_to_date <> eff_to_date\r\n\r\n--If these two dates equal each other we are dealing with the first row in an AK group.  This row\r\n--does not need to be expired or updated for any reason thus it can be filtered out\r\n-- but we must source it to capture the eff_from_date of this row \r\n--so that we can properly expire the subsequent row\n),\nUPD_Claim_Occurrence AS (\n\tSELECT\n\tclaim_med_plan_tpoc_id, \n\teff_to_date, \n\tmodified_date, \n\tcrrnt_snpsht_flag\n\tFROM FIL_FirstRowInAKGroup\n),\nclaim_medical_plan_tpoc_UPDATE AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_medical_plan_tpoc AS T\n\tUSING UPD_Claim_Occurrence AS S\n\tON T.claim_med_plan_tpoc_id = S.claim_med_plan_tpoc_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snpsht_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "246504"
            },
            "WBMI_BATCH_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "905521"
            },
            "WBMI_SESSION_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "7604361"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "08/30/2023 02:13:41"
            },
            "SELECTION_END_TS": {
                "type": "string",
                "defaultValue": "08/31/2023 02:19:56"
            },
            "DBCONNECTION_SOURCE": {
                "type": "string",
                "defaultValue": "SQLServer_WC_Stage_Claim"
            },
            "DBCONNECTION_TARGET": {
                "type": "string",
                "defaultValue": "SQLServer_RPT_EDM_Claim"
            },
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "DBO"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "EXCEED"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}