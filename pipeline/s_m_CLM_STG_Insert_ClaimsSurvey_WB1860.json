{
    "name": "s_m_CLM_STG_Insert_ClaimsSurvey_WB1860",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_STG_Insert_ClaimsSurvey_WB1860",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_Shortcut_to_ClaimsSurvey_WB1860 AS (\n\n-- TODO Manual --\n\n),\nEXP_AUDIT_FIELDS AS (\n\tSELECT\n\tFORM_ID,\n\tCLAIM_REP_CODE,\n\tQ_ID_1,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_1),TO_INTEGER(Q_ID_1),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_1, '^[0-9]+$'), CAST(Q_ID_1 AS INTEGER), NULL) AS ques1_resp_val,\n\tQ_ID_2,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_2),TO_INTEGER(Q_ID_2),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_2, '^[0-9]+$'), CAST(Q_ID_2 AS INTEGER), NULL) AS ques2_resp_val,\n\tQ_ID_3,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_3),TO_INTEGER(Q_ID_3),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_3, '^[0-9]+$'), CAST(Q_ID_3 AS INTEGER), NULL) AS ques3_resp_val,\n\tQ_ID_4,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_4),TO_INTEGER(Q_ID_4),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_4, '^[0-9]+$'), CAST(Q_ID_4 AS INTEGER), NULL) AS ques4_resp_val,\n\tQ_ID_5,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_5),TO_INTEGER(Q_ID_5),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_5, '^[0-9]+$'), CAST(Q_ID_5 AS INTEGER), NULL) AS ques5_resp_val,\n\tQ_ID_6,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_6),TO_INTEGER(Q_ID_6),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_6, '^[0-9]+$'), CAST(Q_ID_6 AS INTEGER), NULL) AS ques6_resp_val,\n\tQ_ID_9,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_9),TO_INTEGER(Q_ID_9),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_9, '^[0-9]+$'), CAST(Q_ID_9 AS INTEGER), NULL) AS ques9_resp_val,\n\tQ_ID_10,\n\t-- *INF*: IIF(IS_NUMBER(Q_ID_10),TO_INTEGER(Q_ID_10),NULL)\n\tIFF(REGEXP_LIKE(Q_ID_10, '^[0-9]+$'), CAST(Q_ID_10 AS INTEGER), NULL) AS ques10_resp_val,\n\tCLAIM_NUM,\n\tSYSDATE AS EXTRACT_DATE,\n\t'dummy' AS Dummy_String,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID\n\tFROM SQ_Shortcut_to_ClaimsSurvey_WB1860\n),\nSQ_ClaimsSurvey_ExtractDate AS (\n\n-- TODO Manual --\n\n),\nAgg_Output_OneRow_ClaimsSurvey AS (\n\tSELECT\n\tExtract_Date,\n\t-- *INF*: max(Extract_Date)\n\tmax(Extract_Date) AS o_Extract_Date\n\tFROM SQ_ClaimsSurvey_ExtractDate\n\tGROUP BY \n),\nExpression_Add_Dummy_Port AS (\n\tSELECT\n\to_Extract_Date AS Entry_Date,\n\t-- *INF*: IIF(IS_DATE(Entry_Date, 'MMDDYYYY'), TO_DATE(Entry_Date, 'MMDDYYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MM/DD/YYYY'), TO_DATE(Entry_Date, 'MM/DD/YYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MM-DD-YYYY'), TO_DATE(Entry_Date, 'MM-DD-YYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MMDDYY'), TO_DATE(Entry_Date, 'MMDDYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MM/DD/YY'), TO_DATE(Entry_Date, 'MM/DD/YY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MM-DD-YY'), TO_DATE(Entry_Date, 'MM-DD-YY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DDMMYYYY'), TO_DATE(Entry_Date, 'DDMMYYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DD/MM/YYYY'), TO_DATE(Entry_Date, 'DD/MM/YYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DD-MM-YYYY'), TO_DATE(Entry_Date, 'DD-MM-YYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DDMMYY'), TO_DATE(Entry_Date, 'DDMMYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DD/MM/YY'), TO_DATE(Entry_Date, 'DD/MM/YY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'DD-MM-YY'), TO_DATE(Entry_Date, 'DD-MM-YY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'YYYYMMDD'), TO_DATE(Entry_Date, 'YYYYMMDD'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'YYYY/MM/DD'), TO_DATE(Entry_Date, 'YYYY/MM/DD'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'YYYY-MM-DD'), TO_DATE(Entry_Date, 'YYYY-MM-DD'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MON DD YYYY'), TO_DATE(Entry_Date, 'MON DD YYYY'),\r\n\t-- IIF(IS_DATE(Entry_Date, 'MONTH DD YYYY'),TO_DATE(Entry_Date, 'MONTH DD YYYY')\r\n\t-- )))))))))))))))))\n\tIFF(\n\t    IS_DATE(Entry_Date, 'MMDDYYYY'), TO_TIMESTAMP(Entry_Date, 'MMDDYYYY'),\n\t    IFF(\n\t        IS_DATE(Entry_Date, 'MM/DD/YYYY'), TO_TIMESTAMP(Entry_Date, 'MM/DD/YYYY'),\n\t        IFF(\n\t            IS_DATE(Entry_Date, 'MM-DD-YYYY'), TO_TIMESTAMP(Entry_Date, 'MM-DD-YYYY'),\n\t            IFF(\n\t                IS_DATE(Entry_Date, 'MMDDYY'), TO_TIMESTAMP(Entry_Date, 'MMDDYY'),\n\t                IFF(\n\t                    IS_DATE(Entry_Date, 'MM/DD/YY'),\n\t                    TO_TIMESTAMP(Entry_Date, 'MM/DD/YY'),\n\t                    IFF(\n\t                        IS_DATE(Entry_Date, 'MM-DD-YY'),\n\t                        TO_TIMESTAMP(Entry_Date, 'MM-DD-YY'),\n\t                        IFF(\n\t                            IS_DATE(Entry_Date, 'DDMMYYYY'),\n\t                            TO_TIMESTAMP(Entry_Date, 'DDMMYYYY'),\n\t                            IFF(\n\t                                IS_DATE(Entry_Date, 'DD/MM/YYYY'),\n\t                                TO_TIMESTAMP(Entry_Date, 'DD/MM/YYYY'),\n\t                                IFF(\n\t                                    IS_DATE(Entry_Date, 'DD-MM-YYYY'),\n\t                                    TO_TIMESTAMP(Entry_Date, 'DD-MM-YYYY'),\n\t                                    IFF(\n\t                                        IS_DATE(Entry_Date, 'DDMMYY'),\n\t                                        TO_TIMESTAMP(Entry_Date, 'DDMMYY'),\n\t                                        IFF(\n\t                                            IS_DATE(Entry_Date, 'DD/MM/YY'),\n\t                                            TO_TIMESTAMP(Entry_Date, 'DD/MM/YY'),\n\t                                            IFF(\n\t                                                IS_DATE(Entry_Date, 'DD-MM-YY'),\n\t                                                TO_TIMESTAMP(Entry_Date, 'DD-MM-YY'),\n\t                                                IFF(\n\t                                                    IS_DATE(Entry_Date, 'YYYYMMDD'),\n\t                                                    TO_TIMESTAMP(Entry_Date, 'YYYYMMDD'),\n\t                                                    IFF(\n\t                                                        IS_DATE(Entry_Date, 'YYYY/MM/DD'),\n\t                                                        TO_TIMESTAMP(Entry_Date, 'YYYY/MM/DD'),\n\t                                                        IFF(\n\t                                                            IS_DATE(Entry_Date, 'YYYY-MM-DD'),\n\t                                                            TO_TIMESTAMP(Entry_Date, 'YYYY-MM-DD'),\n\t                                                            IFF(\n\t                                                                IS_DATE(Entry_Date, 'MON DD YYYY'),\n\t                                                                TO_TIMESTAMP(Entry_Date, 'MON DD YYYY'),\n\t                                                                IFF(\n\t                                                                    IS_DATE(Entry_Date, 'MONTH DD YYYY'),\n\t                                                                    TO_TIMESTAMP(Entry_Date, 'MONTH DD YYYY')\n\t                                                                )\n\t                                                            )\n\t                                                        )\n\t                                                    )\n\t                                                )\n\t                                            )\n\t                                        )\n\t                                    )\n\t                                )\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            )\n\t        )\n\t    )\n\t) AS o_Entry_Date,\n\t'dummy' AS Dummy_String\n\tFROM Agg_Output_OneRow_ClaimsSurvey\n),\nJNR_Get_Date AS (SELECT\n\tEXP_AUDIT_FIELDS.FORM_ID, \n\tEXP_AUDIT_FIELDS.CLAIM_REP_CODE, \n\tEXP_AUDIT_FIELDS.ques1_resp_val, \n\tEXP_AUDIT_FIELDS.ques2_resp_val, \n\tEXP_AUDIT_FIELDS.ques3_resp_val, \n\tEXP_AUDIT_FIELDS.ques4_resp_val, \n\tEXP_AUDIT_FIELDS.ques5_resp_val, \n\tEXP_AUDIT_FIELDS.ques6_resp_val, \n\tEXP_AUDIT_FIELDS.ques9_resp_val, \n\tEXP_AUDIT_FIELDS.ques10_resp_val, \n\tEXP_AUDIT_FIELDS.CLAIM_NUM, \n\tEXP_AUDIT_FIELDS.EXTRACT_DATE, \n\tEXP_AUDIT_FIELDS.SOURCE_SYSTEM_ID, \n\tEXP_AUDIT_FIELDS.Dummy_String, \n\tExpression_Add_Dummy_Port.o_Entry_Date, \n\tExpression_Add_Dummy_Port.Dummy_String AS Dummy_String1\n\tFROM EXP_AUDIT_FIELDS\n\tLEFT OUTER JOIN Expression_Add_Dummy_Port\n\tON Expression_Add_Dummy_Port.Dummy_String = EXP_AUDIT_FIELDS.Dummy_String\n),\nExp_Check_SurveyData_For_BadExtractDate AS (\n\tSELECT\n\tFORM_ID,\n\tCLAIM_REP_CODE,\n\tques1_resp_val,\n\tques2_resp_val,\n\tques3_resp_val,\n\tques4_resp_val,\n\tques5_resp_val,\n\tques6_resp_val,\n\tques9_resp_val,\n\tques10_resp_val,\n\tCLAIM_NUM,\n\tEXTRACT_DATE AS Extract_Date,\n\tSOURCE_SYSTEM_ID,\n\to_Entry_Date,\n\t-- *INF*: iif(isnull(o_Entry_Date),abort('Not a valid Date. Please check with source system. Until it is fixed, this step can be skipped.'))\n\tIFF(\n\t    o_Entry_Date IS NULL,\n\t    abort('Not a valid Date. Please check with source system. Until it is fixed, this step can be skipped.')\n\t) AS Check_Error\n\tFROM JNR_Get_Date\n),\nclaims_survey_result_stage AS (\n\tTRUNCATE TABLE claims_survey_result_stage;\n\tINSERT INTO claims_survey_result_stage\n\t(form_num, claim_rep_code, ques1_resp_val, ques2_resp_val, ques3_resp_val, ques4_resp_val, ques5_resp_val, ques6_resp_val, ques7_resp_val, ques8_resp_val, ques9_resp_val, ques10_resp_val, ques11_resp_val, ques12_resp_val, ques13_resp_val, ques14_resp_val, ques15_resp_val, ques16_resp_val, ques17_resp_val, ques18_resp_val, entry_date, claim_num, extract_date, source_system_id)\n\tSELECT \n\tFORM_ID AS FORM_NUM, \n\tCLAIM_REP_CODE AS CLAIM_REP_CODE, \n\tQUES1_RESP_VAL, \n\tQUES2_RESP_VAL, \n\tQUES3_RESP_VAL, \n\tQUES4_RESP_VAL, \n\tQUES5_RESP_VAL, \n\tQUES6_RESP_VAL, \n\tQUES7_RESP_VAL, \n\tQUES8_RESP_VAL, \n\tQUES9_RESP_VAL, \n\tQUES10_RESP_VAL, \n\tQUES11_RESP_VAL, \n\tQUES12_RESP_VAL, \n\tQUES13_RESP_VAL, \n\tQUES14_RESP_VAL, \n\tQUES15_RESP_VAL, \n\tQUES16_RESP_VAL, \n\tQUES17_RESP_VAL, \n\tQUES18_RESP_VAL, \n\to_Entry_Date AS ENTRY_DATE, \n\tCLAIM_NUM AS CLAIM_NUM, \n\tExtract_Date AS EXTRACT_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYSTEM_ID\n\tFROM Exp_Check_SurveyData_For_BadExtractDate\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "ClaimsStaging/"
        },
        "annotations": []
    }
}