{
    "name": "s_m_CLM_DW_LOAD_Claimant_Coverage_EXD",
    "properties": {
        "activities": [
            {
                "name": "m_CLM_DW_LOAD_Claimant_Coverage_EXD",
                "type": "Script",
                "dependsOn": [],
                "policy": {
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "linkedServiceName": {
                    "referenceName": "ls_SNOWFLAKE_WBMI",
                    "type": "LinkedServiceReference"
                },
                "typeProperties": {
                    "scripts": [
                        {
                            "type": "Query",
                            "text": "WITH\nSQ_CLAIM_TRANSACTION_STAGE AS (\n\tSELECT DISTINCT A.ctx_claim_nbr, A.ctx_client_id, A.ctx_object_type_cd, A.ctx_object_seq_nbr, A.ctx_cov_type_cd, A.ctx_cov_seq_nbr, A.ctx_bur_cause_loss \r\n\tFROM\r\n\t claim_transaction_stage A\n),\nEXPTRANS AS (\n\tSELECT\n\tctx_claim_nbr,\n\tctx_client_id,\n\t-- *INF*: LTRIM(RTRIM(ctx_client_id))\n\tLTRIM(RTRIM(ctx_client_id)) AS ctx_client_id_out,\n\tctx_object_type_cd,\n\t-- *INF*: LTRIM(RTRIM(ctx_object_type_cd))\r\n\t-- \r\n\t-- --IIF(IS_SPACES(ctx_object_type_cd) OR ISNULL(ctx_object_type_cd),'N/A',LTRIM(RTRIM(ctx_object_type_cd)))\n\tLTRIM(RTRIM(ctx_object_type_cd)) AS ctx_object_type_cd_out,\n\tctx_object_seq_nbr,\n\t-- *INF*: --IIF(ISNULL(ctx_object_seq_nbr)\r\n\t-- --,0,\r\n\t-- ctx_object_seq_nbr\r\n\t-- --)\n\tctx_object_seq_nbr AS ctx_object_seq_nbr_out,\n\tctx_cov_type_cd,\n\t-- *INF*: --IIF(IS_SPACES(ctx_cov_type_cd) OR ISNULL(ctx_cov_type_cd),'N/A',\r\n\t-- LTRIM(RTRIM(ctx_cov_type_cd))\r\n\t-- --)\n\tLTRIM(RTRIM(ctx_cov_type_cd)) AS ctx_cov_type_cd_out,\n\tctx_cov_seq_nbr,\n\t-- *INF*: --IIF(ISNULL(ctx_cov_seq_nbr),0,\r\n\t-- ctx_cov_seq_nbr\r\n\t-- --)\n\tctx_cov_seq_nbr AS ctx_cov_seq_nbr_out,\n\tctx_bur_cause_loss\n\tFROM SQ_CLAIM_TRANSACTION_STAGE\n),\nSQ_CLAIM_OBJECT_CLT_STAGE AS (\n\tSELECT distinct\r\n\t  a.CCT_CLAIM_NBR\r\n\t, a.CCT_CLIENT_ID \r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_CLT_STAGE a\r\n\tWHERE a.CCT_CLIENT_ROLE_CD = 'CLMT'\n),\nEXP_Claim_Object_Clt AS (\n\tSELECT\n\tCCT_CLAIM_NBR,\n\t-- *INF*: ltrim(rtrim(CCT_CLAIM_NBR))\n\tltrim(rtrim(CCT_CLAIM_NBR)) AS out_CCT_CLAIM_NBR,\n\tCCT_CLIENT_ID,\n\t-- *INF*: ltrim(rtrim(CCT_CLIENT_ID))\n\tltrim(rtrim(CCT_CLIENT_ID)) AS out_CCT_CLIENT_ID\n\tFROM SQ_CLAIM_OBJECT_CLT_STAGE\n),\nSQ_CLM_COV_PKG_STAGE AS (\n\tSELECT DISTINCT A.CCP_CLAIM_NBR\r\n\t\t,A.CCP_OBJECT_TYPE_CD\r\n\t\t,A.CCP_OBJECT_SEQ_NBR\r\n\t\t,A.CCP_PKG_TYPE_CD\r\n\t\t,A.CCP_PKG_SEQ_NBR\r\n\t\t,A.CCP_PKG_DED_AMT\r\n\t\t,A.CCP_PKG_EFF_DT\r\n\t\t,A.CCP_PKG_EXP_DT\r\n\t\t,A.CCP_PKG_LIMIT_AMT\r\n\t\t,A.CCP_MNL_ENTRY_IND\r\n\t\t,A.CCP_INS_LINE_CD\r\n\t\t,A.CCP_MAJR_PERIL_SEQ\r\n\t\t,A.CCP_SAR_ID\r\n\t\t,A.CCP_INS_LINE\r\n\t\t,A.CCP_LOC_UNIT_NUM\r\n\t\t,A.CCP_RISK_UNIT_GRP\r\n\t\t,A.CCP_RSK_UNT_GR_SEQ\r\n\t\t,A.CCP_RISK_UNIT\r\n\t\t,A.CCP_RISK_TYPE_IND\r\n\t\t,A.CCP_SUB_LOC_NUM\r\n\t\t,A.CCP_SEQ_RISK_UNIT\r\n\t\t,A.ccp_coverage_form\r\n\t\t,A.ccp_coverage_type\r\n\t\t,A.ccp_risk_type\r\n\t\t,CASE LTRIM(RTRIM(B.cvr_policy_src_id)) WHEN 'PDC' THEN 'DUC' ELSE B.cvr_policy_src_id END AS cvr_policy_src_id\r\n\t\t,A.ccp_pol_cov_id\r\n\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_COV_PKG_STAGE  A \r\n\tLEFT JOIN @{pipeline().parameters.SOURCE_TABLE_OWNER}.claim_coverage_stage B\r\n\tON A.CCP_CLAIM_NBR = B.cvr_claim_nbr\n),\nEXP_CLM_COV_PKG AS (\n\tSELECT\n\tCCP_CLAIM_NBR,\n\tCCP_OBJECT_TYPE_CD,\n\tCCP_OBJECT_SEQ_NBR,\n\tCCP_PKG_TYPE_CD,\n\t-- *INF*: IIF(IS_SPACES(CCP_PKG_TYPE_CD) OR ISNULL(CCP_PKG_TYPE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(CCP_PKG_TYPE_CD)))\n\tIFF(IS_SPACES(CCP_PKG_TYPE_CD) OR CCP_PKG_TYPE_CD IS NULL, 'N/A', LTRIM(RTRIM(CCP_PKG_TYPE_CD))) AS out_PKG_TYPE_CD,\n\tCCP_PKG_SEQ_NBR,\n\t-- *INF*: IIF(ISNULL(CCP_PKG_SEQ_NBR)\r\n\t-- ,0\r\n\t-- ,CCP_PKG_SEQ_NBR)\n\tIFF(CCP_PKG_SEQ_NBR IS NULL, 0, CCP_PKG_SEQ_NBR) AS out_PKG_SEQ_NBR,\n\tCCP_PKG_DED_AMT,\n\tCCP_PKG_EFF_DT,\n\tCCP_PKG_EXP_DT,\n\tCCP_PKG_LIMIT_AMT,\n\tCCP_MNL_ENTRY_IND,\n\t-- *INF*: IIF(IS_SPACES(CCP_MNL_ENTRY_IND) OR ISNULL(CCP_MNL_ENTRY_IND)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(CCP_MNL_ENTRY_IND)))\n\tIFF(IS_SPACES(CCP_MNL_ENTRY_IND) OR CCP_MNL_ENTRY_IND IS NULL, 'N/A', ltrim(rtrim(CCP_MNL_ENTRY_IND))) AS out_CCP_MNL_ENTRY_IND,\n\tCCP_INS_LINE_CD,\n\t-- *INF*: IIF(IS_SPACES(CCP_INS_LINE_CD) OR ISNULL(CCP_INS_LINE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,CCP_INS_LINE_CD)\n\tIFF(IS_SPACES(CCP_INS_LINE_CD) OR CCP_INS_LINE_CD IS NULL, 'N/A', CCP_INS_LINE_CD) AS out_CCP_INS_LINE_CD,\n\tCCP_MAJR_PERIL_SEQ,\n\tCCP_SAR_ID,\n\tCCP_INS_LINE,\n\tCCP_LOC_UNIT_NUM,\n\tCCP_RISK_UNIT_GRP,\n\tCCP_RSK_UNT_GR_SEQ,\n\tCCP_RISK_UNIT,\n\tCCP_RISK_TYPE_IND,\n\tCCP_SUB_LOC_NUM,\n\tCCP_SEQ_RISK_UNIT,\n\tccp_coverage_form,\n\tccp_coverage_type,\n\t-- *INF*: LTRIM(RTRIM(ccp_coverage_type))\n\tLTRIM(RTRIM(ccp_coverage_type)) AS o_ccp_coverage_type,\n\tccp_risk_type,\n\tcvr_policy_src_id,\n\tccp_pol_cov_id\n\tFROM SQ_CLM_COV_PKG_STAGE\n),\nSQ_CLAIM_OBJECT_STAGE AS (\n\tSELECT DISTINCT\r\n\ta.COB_CLAIM_NBR\r\n\t, a.COB_OBJECT_TYPE_CD\r\n\t, a.COB_OBJECT_SEQ_NBR\r\n\t, a.COB_OBJECT_CMT_ID\r\n\t, a.COB_UNIT_DES_ID\r\n\t, a.COB_COV_UNIT_NBR\r\n\t, a.COB_UNIT_TYPE_CD\r\n\t, a.COB_SPP_USE_CD\r\n\t, a.COB_SAR_ID\r\n\t, a.COB_INS_LINE\r\n\t, a.COB_LOC_UNIT_NUM\r\n\t, a.COB_RISK_UNIT_GRP\r\n\t, a.COB_RSK_UNT_GR_SEQ\r\n\t, a.COB_RISK_UNIT\r\n\t, a.COB_RISK_TYPE_IND\r\n\t, a.COB_SUB_LOC_NUM\r\n\t, a.COB_SEQ_RISK_UNIT\r\n\t, a.COB_SR_SEQ\r\n\t, a.COB_CLIENT_ID\r\n\t,a.cob_coverage_form\r\n\t,a.cob_coverage_type\r\n\t,a.cob_risk_type\r\n\tFROM\r\n\t @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_STAGE a\n),\nEXP_Claim_Coverage AS (\n\tSELECT\n\tCOB_CLAIM_NBR,\n\t-- *INF*: ltrim(rtrim(COB_CLAIM_NBR))\n\tltrim(rtrim(COB_CLAIM_NBR)) AS out_COB_CLAIM_NBR,\n\tCOB_OBJECT_TYPE_CD,\n\t-- *INF*: IIF(IS_SPACES(COB_OBJECT_TYPE_CD) OR ISNULL(COB_OBJECT_TYPE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(COB_OBJECT_TYPE_CD)))\n\tIFF(IS_SPACES(COB_OBJECT_TYPE_CD) OR COB_OBJECT_TYPE_CD IS NULL, 'N/A', LTRIM(RTRIM(COB_OBJECT_TYPE_CD))) AS out_OBJECT_TYPE_CD,\n\tCOB_OBJECT_SEQ_NBR,\n\t-- *INF*: IIF(ISNULL(COB_OBJECT_SEQ_NBR)\r\n\t-- ,0\r\n\t-- ,COB_OBJECT_SEQ_NBR)\n\tIFF(COB_OBJECT_SEQ_NBR IS NULL, 0, COB_OBJECT_SEQ_NBR) AS out_OBJECT_SEQ_NBR,\n\tCOB_OBJECT_CMT_ID,\n\tCOB_UNIT_DES_ID,\n\tCOB_COV_UNIT_NBR,\n\tCOB_UNIT_TYPE_CD,\n\t-- *INF*: IIF(IS_SPACES(COB_UNIT_TYPE_CD) OR ISNULL(COB_UNIT_TYPE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,COB_UNIT_TYPE_CD)\n\tIFF(IS_SPACES(COB_UNIT_TYPE_CD) OR COB_UNIT_TYPE_CD IS NULL, 'N/A', COB_UNIT_TYPE_CD) AS out_COB_UNIT_TYPE_CD,\n\tCOB_SPP_USE_CD,\n\t-- *INF*: IIF(IS_SPACES(COB_SPP_USE_CD) OR ISNULL(COB_SPP_USE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,LTRIM(RTRIM(COB_SPP_USE_CD)))\n\tIFF(IS_SPACES(COB_SPP_USE_CD) OR COB_SPP_USE_CD IS NULL, 'N/A', LTRIM(RTRIM(COB_SPP_USE_CD))) AS out_SPP_USE_CD,\n\tCOB_SAR_ID,\n\tCOB_INS_LINE,\n\tCOB_LOC_UNIT_NUM,\n\tCOB_RISK_UNIT_GRP,\n\tCOB_RSK_UNT_GR_SEQ,\n\tCOB_RISK_UNIT,\n\tCOB_RISK_TYPE_IND,\n\tCOB_SUB_LOC_NUM,\n\tCOB_SEQ_RISK_UNIT,\n\tCOB_SR_SEQ,\n\tCOB_CLIENT_ID,\n\t-- *INF*: ltrim(rtrim(COB_CLIENT_ID))\n\tltrim(rtrim(COB_CLIENT_ID)) AS out_COB_CLIENT_ID,\n\tcob_coverage_form,\n\t-- *INF*: LTRIM(RTRIM(cob_coverage_form))\n\tLTRIM(RTRIM(cob_coverage_form)) AS o_cob_coverage_form,\n\tcob_coverage_type,\n\t-- *INF*: LTRIM(RTRIM(cob_coverage_type))\n\tLTRIM(RTRIM(cob_coverage_type)) AS o_cob_coverage_type,\n\tcob_risk_type,\n\t-- *INF*: LTRIM(RTRIM(cob_risk_type))\n\tLTRIM(RTRIM(cob_risk_type)) AS o_cob_risk_type\n\tFROM SQ_CLAIM_OBJECT_STAGE\n),\nJNR_COVERAGE_PKG AS (SELECT\n\tEXP_CLM_COV_PKG.CCP_CLAIM_NBR, \n\tEXP_CLM_COV_PKG.CCP_OBJECT_TYPE_CD, \n\tEXP_CLM_COV_PKG.CCP_OBJECT_SEQ_NBR, \n\tEXP_CLM_COV_PKG.out_PKG_TYPE_CD, \n\tEXP_CLM_COV_PKG.out_PKG_SEQ_NBR, \n\tEXP_CLM_COV_PKG.CCP_PKG_DED_AMT, \n\tEXP_CLM_COV_PKG.CCP_PKG_EFF_DT, \n\tEXP_CLM_COV_PKG.CCP_PKG_EXP_DT, \n\tEXP_CLM_COV_PKG.CCP_PKG_LIMIT_AMT, \n\tEXP_CLM_COV_PKG.out_CCP_MNL_ENTRY_IND, \n\tEXP_CLM_COV_PKG.out_CCP_INS_LINE_CD, \n\tEXP_CLM_COV_PKG.CCP_MAJR_PERIL_SEQ, \n\tEXP_CLM_COV_PKG.CCP_SAR_ID, \n\tEXP_CLM_COV_PKG.CCP_INS_LINE, \n\tEXP_CLM_COV_PKG.CCP_LOC_UNIT_NUM, \n\tEXP_CLM_COV_PKG.CCP_RISK_UNIT_GRP, \n\tEXP_CLM_COV_PKG.CCP_RSK_UNT_GR_SEQ, \n\tEXP_CLM_COV_PKG.CCP_RISK_UNIT, \n\tEXP_CLM_COV_PKG.CCP_RISK_TYPE_IND, \n\tEXP_CLM_COV_PKG.CCP_SUB_LOC_NUM, \n\tEXP_CLM_COV_PKG.CCP_SEQ_RISK_UNIT, \n\tEXP_Claim_Coverage.out_COB_CLAIM_NBR AS COB_CLAIM_NBR, \n\tEXP_Claim_Coverage.out_OBJECT_TYPE_CD, \n\tEXP_Claim_Coverage.out_OBJECT_SEQ_NBR, \n\tEXP_Claim_Coverage.COB_OBJECT_CMT_ID, \n\tEXP_Claim_Coverage.COB_UNIT_DES_ID, \n\tEXP_Claim_Coverage.COB_COV_UNIT_NBR, \n\tEXP_Claim_Coverage.out_COB_UNIT_TYPE_CD, \n\tEXP_Claim_Coverage.out_SPP_USE_CD, \n\tEXP_Claim_Coverage.COB_SAR_ID, \n\tEXP_Claim_Coverage.COB_INS_LINE, \n\tEXP_Claim_Coverage.COB_LOC_UNIT_NUM, \n\tEXP_Claim_Coverage.COB_RISK_UNIT_GRP, \n\tEXP_Claim_Coverage.COB_RSK_UNT_GR_SEQ, \n\tEXP_Claim_Coverage.COB_RISK_UNIT, \n\tEXP_Claim_Coverage.COB_RISK_TYPE_IND, \n\tEXP_Claim_Coverage.COB_SUB_LOC_NUM, \n\tEXP_Claim_Coverage.COB_SEQ_RISK_UNIT, \n\tEXP_Claim_Coverage.COB_SR_SEQ, \n\tEXP_Claim_Coverage.out_COB_CLIENT_ID AS COB_CLIENT_ID, \n\tEXP_Claim_Coverage.o_cob_coverage_form AS cob_coverage_form, \n\tEXP_Claim_Coverage.o_cob_coverage_type AS cob_coverage_type, \n\tEXP_Claim_Coverage.o_cob_risk_type AS cob_risk_type, \n\tEXP_CLM_COV_PKG.ccp_coverage_form, \n\tEXP_CLM_COV_PKG.o_ccp_coverage_type AS ccp_coverage_type, \n\tEXP_CLM_COV_PKG.ccp_risk_type, \n\tEXP_CLM_COV_PKG.cvr_policy_src_id, \n\tEXP_CLM_COV_PKG.ccp_pol_cov_id\n\tFROM EXP_CLM_COV_PKG\n\tINNER JOIN EXP_Claim_Coverage\n\tON EXP_Claim_Coverage.out_COB_CLAIM_NBR = EXP_CLM_COV_PKG.CCP_CLAIM_NBR AND EXP_Claim_Coverage.out_OBJECT_TYPE_CD = EXP_CLM_COV_PKG.CCP_OBJECT_TYPE_CD AND EXP_Claim_Coverage.out_OBJECT_SEQ_NBR = EXP_CLM_COV_PKG.CCP_OBJECT_SEQ_NBR\n),\nJNR_COVERAGE_CLIENT AS (SELECT\n\tJNR_COVERAGE_PKG.COB_CLAIM_NBR, \n\tJNR_COVERAGE_PKG.out_OBJECT_TYPE_CD, \n\tJNR_COVERAGE_PKG.out_OBJECT_SEQ_NBR, \n\tJNR_COVERAGE_PKG.COB_OBJECT_CMT_ID, \n\tJNR_COVERAGE_PKG.COB_UNIT_DES_ID, \n\tJNR_COVERAGE_PKG.COB_COV_UNIT_NBR, \n\tJNR_COVERAGE_PKG.out_COB_UNIT_TYPE_CD AS COB_UNIT_TYPE_CD, \n\tJNR_COVERAGE_PKG.out_SPP_USE_CD, \n\tJNR_COVERAGE_PKG.COB_SAR_ID, \n\tJNR_COVERAGE_PKG.COB_INS_LINE, \n\tJNR_COVERAGE_PKG.COB_LOC_UNIT_NUM, \n\tJNR_COVERAGE_PKG.COB_RISK_UNIT_GRP, \n\tJNR_COVERAGE_PKG.COB_RSK_UNT_GR_SEQ, \n\tJNR_COVERAGE_PKG.COB_RISK_UNIT, \n\tJNR_COVERAGE_PKG.COB_RISK_TYPE_IND, \n\tJNR_COVERAGE_PKG.COB_SUB_LOC_NUM, \n\tJNR_COVERAGE_PKG.COB_SEQ_RISK_UNIT, \n\tJNR_COVERAGE_PKG.COB_SR_SEQ, \n\tJNR_COVERAGE_PKG.COB_CLIENT_ID, \n\tJNR_COVERAGE_PKG.out_PKG_TYPE_CD, \n\tJNR_COVERAGE_PKG.out_PKG_SEQ_NBR, \n\tJNR_COVERAGE_PKG.CCP_PKG_DED_AMT, \n\tJNR_COVERAGE_PKG.CCP_PKG_EFF_DT, \n\tJNR_COVERAGE_PKG.CCP_PKG_EXP_DT, \n\tJNR_COVERAGE_PKG.CCP_PKG_LIMIT_AMT, \n\tJNR_COVERAGE_PKG.out_CCP_MNL_ENTRY_IND, \n\tJNR_COVERAGE_PKG.out_CCP_INS_LINE_CD, \n\tJNR_COVERAGE_PKG.CCP_MAJR_PERIL_SEQ, \n\tJNR_COVERAGE_PKG.CCP_SAR_ID, \n\tJNR_COVERAGE_PKG.CCP_INS_LINE, \n\tJNR_COVERAGE_PKG.CCP_LOC_UNIT_NUM, \n\tJNR_COVERAGE_PKG.CCP_RISK_UNIT_GRP, \n\tJNR_COVERAGE_PKG.CCP_RSK_UNT_GR_SEQ, \n\tJNR_COVERAGE_PKG.CCP_RISK_UNIT, \n\tJNR_COVERAGE_PKG.CCP_RISK_TYPE_IND, \n\tJNR_COVERAGE_PKG.CCP_SUB_LOC_NUM, \n\tJNR_COVERAGE_PKG.CCP_SEQ_RISK_UNIT, \n\tEXP_Claim_Object_Clt.out_CCT_CLAIM_NBR AS CCT_CLAIM_NBR, \n\tEXP_Claim_Object_Clt.out_CCT_CLIENT_ID AS CCT_CLIENT_ID, \n\tJNR_COVERAGE_PKG.cob_coverage_form, \n\tJNR_COVERAGE_PKG.cob_coverage_type, \n\tJNR_COVERAGE_PKG.cob_risk_type, \n\tJNR_COVERAGE_PKG.ccp_coverage_form, \n\tJNR_COVERAGE_PKG.ccp_coverage_type, \n\tJNR_COVERAGE_PKG.ccp_risk_type, \n\tJNR_COVERAGE_PKG.cvr_policy_src_id, \n\tJNR_COVERAGE_PKG.ccp_pol_cov_id\n\tFROM EXP_Claim_Object_Clt\n\tINNER JOIN JNR_COVERAGE_PKG\n\tON JNR_COVERAGE_PKG.COB_CLAIM_NBR = EXP_Claim_Object_Clt.out_CCT_CLAIM_NBR\n),\nJNR_coverage_transaction AS (SELECT\n\tJNR_COVERAGE_CLIENT.COB_CLAIM_NBR, \n\tJNR_COVERAGE_CLIENT.out_OBJECT_TYPE_CD, \n\tJNR_COVERAGE_CLIENT.out_OBJECT_SEQ_NBR, \n\tJNR_COVERAGE_CLIENT.COB_OBJECT_CMT_ID, \n\tJNR_COVERAGE_CLIENT.COB_UNIT_DES_ID, \n\tJNR_COVERAGE_CLIENT.COB_COV_UNIT_NBR, \n\tJNR_COVERAGE_CLIENT.COB_UNIT_TYPE_CD, \n\tJNR_COVERAGE_CLIENT.out_SPP_USE_CD, \n\tJNR_COVERAGE_CLIENT.COB_SAR_ID, \n\tJNR_COVERAGE_CLIENT.COB_INS_LINE, \n\tJNR_COVERAGE_CLIENT.COB_LOC_UNIT_NUM, \n\tJNR_COVERAGE_CLIENT.COB_RISK_UNIT_GRP, \n\tJNR_COVERAGE_CLIENT.COB_RSK_UNT_GR_SEQ, \n\tJNR_COVERAGE_CLIENT.COB_RISK_UNIT, \n\tJNR_COVERAGE_CLIENT.COB_RISK_TYPE_IND, \n\tJNR_COVERAGE_CLIENT.COB_SUB_LOC_NUM, \n\tJNR_COVERAGE_CLIENT.COB_SEQ_RISK_UNIT, \n\tJNR_COVERAGE_CLIENT.COB_SR_SEQ, \n\tJNR_COVERAGE_CLIENT.COB_CLIENT_ID, \n\tJNR_COVERAGE_CLIENT.out_PKG_TYPE_CD, \n\tJNR_COVERAGE_CLIENT.out_PKG_SEQ_NBR, \n\tJNR_COVERAGE_CLIENT.CCP_PKG_DED_AMT, \n\tJNR_COVERAGE_CLIENT.CCP_PKG_EFF_DT, \n\tJNR_COVERAGE_CLIENT.CCP_PKG_EXP_DT, \n\tJNR_COVERAGE_CLIENT.CCP_PKG_LIMIT_AMT, \n\tJNR_COVERAGE_CLIENT.out_CCP_MNL_ENTRY_IND, \n\tJNR_COVERAGE_CLIENT.out_CCP_INS_LINE_CD, \n\tJNR_COVERAGE_CLIENT.CCP_MAJR_PERIL_SEQ, \n\tJNR_COVERAGE_CLIENT.CCP_SAR_ID, \n\tJNR_COVERAGE_CLIENT.CCP_INS_LINE, \n\tJNR_COVERAGE_CLIENT.CCP_LOC_UNIT_NUM, \n\tJNR_COVERAGE_CLIENT.CCP_RISK_UNIT_GRP, \n\tJNR_COVERAGE_CLIENT.CCP_RSK_UNT_GR_SEQ, \n\tJNR_COVERAGE_CLIENT.CCP_RISK_UNIT, \n\tJNR_COVERAGE_CLIENT.CCP_RISK_TYPE_IND, \n\tJNR_COVERAGE_CLIENT.CCP_SUB_LOC_NUM, \n\tJNR_COVERAGE_CLIENT.CCP_SEQ_RISK_UNIT, \n\tJNR_COVERAGE_CLIENT.CCT_CLAIM_NBR, \n\tJNR_COVERAGE_CLIENT.CCT_CLIENT_ID, \n\tEXPTRANS.ctx_claim_nbr, \n\tEXPTRANS.ctx_client_id_out AS ctx_client_id, \n\tEXPTRANS.ctx_object_type_cd_out AS ctx_object_type_cd, \n\tEXPTRANS.ctx_object_seq_nbr_out AS ctx_object_seq_nbr, \n\tEXPTRANS.ctx_cov_type_cd_out AS ctx_cov_type_cd, \n\tEXPTRANS.ctx_cov_seq_nbr_out AS ctx_cov_seq_nbr, \n\tEXPTRANS.ctx_bur_cause_loss, \n\tJNR_COVERAGE_CLIENT.cob_coverage_form, \n\tJNR_COVERAGE_CLIENT.cob_coverage_type, \n\tJNR_COVERAGE_CLIENT.cob_risk_type, \n\tJNR_COVERAGE_CLIENT.ccp_coverage_form, \n\tJNR_COVERAGE_CLIENT.ccp_coverage_type, \n\tJNR_COVERAGE_CLIENT.ccp_risk_type, \n\tJNR_COVERAGE_CLIENT.cvr_policy_src_id, \n\tJNR_COVERAGE_CLIENT.ccp_pol_cov_id\n\tFROM EXPTRANS\n\tINNER JOIN JNR_COVERAGE_CLIENT\n\tON JNR_COVERAGE_CLIENT.COB_CLAIM_NBR = EXPTRANS.ctx_claim_nbr AND JNR_COVERAGE_CLIENT.CCT_CLIENT_ID = EXPTRANS.ctx_client_id_out AND JNR_COVERAGE_CLIENT.out_OBJECT_TYPE_CD = EXPTRANS.ctx_object_type_cd_out AND JNR_COVERAGE_CLIENT.out_OBJECT_SEQ_NBR = EXPTRANS.ctx_object_seq_nbr_out AND JNR_COVERAGE_CLIENT.out_PKG_TYPE_CD = EXPTRANS.ctx_cov_type_cd_out AND JNR_COVERAGE_CLIENT.out_PKG_SEQ_NBR = EXPTRANS.ctx_cov_seq_nbr_out\n),\nLKP_Auto_Loss_Stage AS (\n\tSELECT\n\tCAU_CAR_YR,\n\tCAU_CAR_MAKE_NM,\n\tCAU_CAR_RGS_NBR,\n\tCAU_VEHICLE_ID_NBR,\n\tCAU_RGS_STATE_CD,\n\tCAU_VEH_ST_AMT,\n\tCAU_CLAIM_NBR,\n\tCAU_OBJECT_SEQ_NBR\n\tFROM (\n\t\tSELECT \r\n\t\t  a.CAU_CAR_YR as CAU_CAR_YR\r\n\t\t, a.CAU_CAR_MAKE_NM as CAU_CAR_MAKE_NM\r\n\t\t, a.CAU_CAR_RGS_NBR as CAU_CAR_RGS_NBR\r\n\t\t, a.CAU_VEHICLE_ID_NBR as CAU_VEHICLE_ID_NBR\r\n\t\t, a.CAU_RGS_STATE_CD as CAU_RGS_STATE_CD\r\n\t\t, a.CAU_VEH_ST_AMT as CAU_VEH_ST_AMT\r\n\t\t, Rtrim(Ltrim(a.CAU_CLAIM_NBR)) as CAU_CLAIM_NBR\r\n\t\t, a.CAU_OBJECT_SEQ_NBR as CAU_OBJECT_SEQ_NBR \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.AUTO_LOSS_STAGE a\r\n\t\twhere a.cau_object_type_cd = 'AUT'\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CAU_CLAIM_NBR,CAU_OBJECT_SEQ_NBR ORDER BY CAU_CAR_YR) = 1\n),\nLKP_Claim_Comments_Stage_Unit_Desc AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT A.TCC_COMMENT_TXT AS TCC_COMMENT_TXT,  Rtrim(Ltrim(A.FOLDER_KEY)) AS FOLDER_KEY,  \r\n\t\tA.COMMENT_ITEM_NBR AS COMMENT_ITEM_NBR \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_COMMENTS_STAGE A  \r\n\t\tWHERE \r\n\t\tA.FOLDER_KEY in (SELECT DISTINCT B.COB_CLAIM_NBR FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_STAGE B)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nEXP_Client_ID AS (\n\tSELECT\n\tCCT_CLIENT_ID,\n\tCOB_CLIENT_ID,\n\tCOB_INS_LINE,\n\t-- *INF*: IIF(UPPER(LTRIM(RTRIM(COB_INS_LINE))) != 'WC'and (isnull(COB_CLIENT_ID) or is_spaces(COB_CLIENT_ID))\r\n\t--    ,CCT_CLIENT_ID\r\n\t--    ,COB_CLIENT_ID)\n\tIFF(UPPER(LTRIM(RTRIM(COB_INS_LINE))) != 'WC' AND ( COB_CLIENT_ID IS NULL OR is_spaces(COB_CLIENT_ID) ), CCT_CLIENT_ID, COB_CLIENT_ID) AS out_CLIENT_ID\n\tFROM JNR_coverage_transaction\n),\nLKP_Claim_Party_Occurrence_AK_ID AS (\n\tSELECT\n\tclaim_party_occurrence_ak_id,\n\toffset_onset_ind,\n\tclaimant_num,\n\tclaim_party_role_code\n\tFROM (\n\t\tSELECT CPO.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tCO.claim_occurrence_type_code as offset_onset_ind,\r\n\t\tLTRIM(RTRIM(CO.claim_occurrence_key)) as claimant_num, \r\n\t\tLTRIM(RTRIM(CP.claim_party_key)) as claim_party_role_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence CPO,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party CP, \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tWHERE CO.claim_occurrence_ak_id = CPO.claim_occurrence_ak_id  AND CP.claim_party_ak_id = CPO.claim_party_ak_id \r\n\t\tAND CO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CP.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' \r\n\t\tAND CPO.claim_party_role_code = 'CLMT'\r\n\t\tAND CO.crrnt_snpsht_flag = 1\r\n\t\tAND CP.crrnt_snpsht_flag = 1\r\n\t\tAND CPO.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claimant_num,claim_party_role_code ORDER BY claim_party_occurrence_ak_id) = 1\n),\nLKP_Comments_Stage_Coverage_Class_Desc AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT A.TCC_COMMENT_TXT AS TCC_COMMENT_TXT,  Rtrim(Ltrim(A.FOLDER_KEY)) AS FOLDER_KEY,  \r\n\t\tA.COMMENT_ITEM_NBR AS COMMENT_ITEM_NBR \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_COMMENTS_STAGE A  \r\n\t\tWHERE \r\n\t\tA.FOLDER_KEY in (SELECT DISTINCT B.COB_CLAIM_NBR FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_STAGE B)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nLKP_Property_Loss_Stage AS (\n\tSELECT\n\tCPR_CLAIM_NBR,\n\tCPR_DAMAGE_DES_ID,\n\tCPR_OBJECT_TYPE_CD,\n\tCPR_OBJECT_SEQ_NBR\n\tFROM (\n\t\tSELECT \r\n\t\tRtrim(Ltrim(a.CPR_CLAIM_NBR)) as CPR_CLAIM_NBR\r\n\t\t, a.CPR_DAMAGE_DES_ID as CPR_DAMAGE_DES_ID\r\n\t\t, a.CPR_CLAIM_NBR as CPR_CLAIM_NBR\r\n\t\t, Rtrim(Ltrim(a.CPR_OBJECT_TYPE_CD)) as CPR_OBJECT_TYPE_CD\r\n\t\t, a.CPR_OBJECT_SEQ_NBR as CPR_OBJECT_SEQ_NBR \r\n\t\tFROM \r\n\t\t@{pipeline().parameters.SOURCE_TABLE_OWNER}.PROPERTY_LOSS_STAGE a\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY CPR_CLAIM_NBR,CPR_OBJECT_TYPE_CD,CPR_OBJECT_SEQ_NBR ORDER BY CPR_CLAIM_NBR) = 1\n),\nLKP_Comments_Stage_Unit_Damage_Description AS (\n\tSELECT\n\tTCC_COMMENT_TXT,\n\tFOLDER_KEY,\n\tCOMMENT_ITEM_NBR\n\tFROM (\n\t\tSELECT A.TCC_COMMENT_TXT AS TCC_COMMENT_TXT,  Rtrim(Ltrim(A.FOLDER_KEY)) AS FOLDER_KEY,  \r\n\t\tA.COMMENT_ITEM_NBR AS COMMENT_ITEM_NBR \r\n\t\tFROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLM_COMMENTS_STAGE A  \r\n\t\tWHERE \r\n\t\tA.FOLDER_KEY in (SELECT DISTINCT B.COB_CLAIM_NBR FROM @{pipeline().parameters.SOURCE_TABLE_OWNER}.CLAIM_OBJECT_STAGE B)\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY FOLDER_KEY,COMMENT_ITEM_NBR ORDER BY TCC_COMMENT_TXT) = 1\n),\nEXP_Values AS (\n\tSELECT\n\tLKP_Claim_Party_Occurrence_AK_ID.claim_party_occurrence_ak_id,\n\t-- *INF*: IIF(ISNULL(claim_party_occurrence_ak_id),-1,claim_party_occurrence_ak_id)\n\tIFF(claim_party_occurrence_ak_id IS NULL, - 1, claim_party_occurrence_ak_id) AS v_claim_party_occurrence_ak_id,\n\tJNR_coverage_transaction.out_OBJECT_TYPE_CD AS COB_OBJECT_TYPE_CD,\n\tJNR_coverage_transaction.out_OBJECT_SEQ_NBR AS COB_OBJECT_SEQ_NBR,\n\tJNR_coverage_transaction.out_PKG_TYPE_CD AS MAJOR_PERIL_CODE,\n\tJNR_coverage_transaction.out_PKG_SEQ_NBR AS s3p_PKG_SEQ_NUM,\n\tJNR_coverage_transaction.out_CCP_INS_LINE_CD AS CCP_INS_LINE_CD,\n\tJNR_coverage_transaction.COB_UNIT_TYPE_CD,\n\tJNR_coverage_transaction.COB_SAR_ID,\n\tJNR_coverage_transaction.CCP_SAR_ID,\n\tLKP_Claim_Party_Occurrence_AK_ID.offset_onset_ind AS claim_occurrence_type_code,\n\tJNR_coverage_transaction.out_CCP_MNL_ENTRY_IND AS CCP_MNL_ENTRY_IND,\n\t-- *INF*: iif(CCP_MNL_ENTRY_IND = '1' or claim_occurrence_type_code = 'COM'\r\n\t-- \t,ltrim(rtrim(CCP_SAR_ID))\r\n\t--       ,ltrim(rtrim(COB_SAR_ID)))\n\tIFF(CCP_MNL_ENTRY_IND = '1' OR claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_SAR_ID)), ltrim(rtrim(COB_SAR_ID))) AS SAR_ID,\n\tJNR_coverage_transaction.COB_LOC_UNIT_NUM,\n\tJNR_coverage_transaction.CCP_LOC_UNIT_NUM,\n\tJNR_coverage_transaction.CCP_RISK_UNIT,\n\tJNR_coverage_transaction.COB_COV_UNIT_NBR,\n\t-- *INF*: DECODE(claim_occurrence_type_code,\r\n\t--                                                                                    'WCC',ltrim(rtrim(COB_LOC_UNIT_NUM)),\r\n\t--                                                                                   'COM',ltrim(rtrim(CCP_LOC_UNIT_NUM))\r\n\t-- )\r\n\t-- --- Changed to above logic on 7/20/2010 when we found old logic was incorrect.\r\n\t-- \r\n\t-- ---------------------------\r\n\t-- ---IIF(IN(claim_occurrence_type_code,'AUT','HOM'), ltrim(rtrim(COB_COV_UNIT_NBR)),\r\n\t-- -- IIF(claim_occurrence_type_code = 'WCC',\r\n\t--    --         IIF(LENGTH(ltrim(rtrim(COB_LOC_UNIT_NUM))) <> 0,ltrim(rtrim(COB_LOC_UNIT_NUM)), ltrim(rtrim(COB_RISK_UNIT))),\r\n\t-- ---IIF(claim_occurrence_type_code = 'COM',\r\n\t-- --      IIF(CCP_MNL_ENTRY_IND ='1', ltrim(rtrim(COB_COV_UNIT_NBR)),\r\n\t--     --          IIF(LENGTH(ltrim(rtrim(CCP_LOC_UNIT_NUM)))<>0, ltrim(rtrim(CCP_LOC_UNIT_NUM)), ltrim(rtrim(CCP_RISK_UNIT)))\r\n\t-- --))))\r\n\t-- \r\n\t-- \n\tDECODE(claim_occurrence_type_code,\n\t'WCC', ltrim(rtrim(COB_LOC_UNIT_NUM)),\n\t'COM', ltrim(rtrim(CCP_LOC_UNIT_NUM))) AS var_LOC_UNIT_NUM,\n\t-- *INF*: IIF(ISNULL(var_LOC_UNIT_NUM) OR LENGTH(var_LOC_UNIT_NUM) = 0, '0000', ltrim(rtrim(var_LOC_UNIT_NUM)))\n\tIFF(var_LOC_UNIT_NUM IS NULL OR LENGTH(var_LOC_UNIT_NUM) = 0, '0000', ltrim(rtrim(var_LOC_UNIT_NUM))) AS LOC_UNIT_NUM,\n\tJNR_coverage_transaction.COB_SR_SEQ,\n\tJNR_coverage_transaction.CCP_MAJR_PERIL_SEQ,\n\tJNR_coverage_transaction.COB_INS_LINE,\n\t-- *INF*: IIF(ISNULL(COB_SR_SEQ),\r\n\t--                              IIF(ISNULL(CCP_MAJR_PERIL_SEQ),'00',LTRIM(RTRIM(CCP_MAJR_PERIL_SEQ))),\r\n\t--            LTRIM(RTRIM(COB_SR_SEQ))\r\n\t-- )\r\n\t-- \r\n\t-- \r\n\t-- --IIF(CCP_MNL_ENTRY_IND = '1'      ,IIF(COB_INS_LINE = 'WC'   ,ltrim(rtrim(COB_SR_SEQ))  ,ltrim(rtrim(CCP_MAJR_PERIL_SEQ)))      ,IIF(claim_occurrence_type_code = 'COM'             , ltrim(rtrim(CCP_MAJR_PERIL_SEQ))\r\n\t-- --             ,ltrim(rtrim(COB_SR_SEQ))))\n\tIFF(COB_SR_SEQ IS NULL, IFF(CCP_MAJR_PERIL_SEQ IS NULL, '00', LTRIM(RTRIM(CCP_MAJR_PERIL_SEQ))), LTRIM(RTRIM(COB_SR_SEQ))) AS MAJOR_PERIL_SEQ_NUM,\n\tJNR_coverage_transaction.CCP_INS_LINE,\n\t-- *INF*: IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(COB_INS_LINE))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(CCP_INS_LINE))\r\n\t--              ,ltrim(rtrim(COB_INS_LINE)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_INS_LINE)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_INS_LINE)), ltrim(rtrim(COB_INS_LINE)))) AS INS_LINE,\n\tJNR_coverage_transaction.COB_SUB_LOC_NUM,\n\tJNR_coverage_transaction.CCP_SUB_LOC_NUM,\n\t-- *INF*: IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(COB_SUB_LOC_NUM))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(CCP_SUB_LOC_NUM))\r\n\t--              ,ltrim(rtrim(COB_SUB_LOC_NUM)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_SUB_LOC_NUM)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_SUB_LOC_NUM)), ltrim(rtrim(COB_SUB_LOC_NUM)))) AS SUB_LOC_UNIT_NUM,\n\tJNR_coverage_transaction.COB_RISK_UNIT_GRP,\n\tJNR_coverage_transaction.CCP_RISK_UNIT_GRP,\n\t-- *INF*: IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(COB_RISK_UNIT_GRP))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(CCP_RISK_UNIT_GRP))\r\n\t--              ,ltrim(rtrim(COB_RISK_UNIT_GRP)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_RISK_UNIT_GRP)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_RISK_UNIT_GRP)), ltrim(rtrim(COB_RISK_UNIT_GRP)))) AS RISK_UNIT_GROUP,\n\tJNR_coverage_transaction.COB_RSK_UNT_GR_SEQ,\n\tJNR_coverage_transaction.CCP_RSK_UNT_GR_SEQ,\n\t-- *INF*: IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(COB_RSK_UNT_GR_SEQ))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(CCP_RSK_UNT_GR_SEQ))\r\n\t--              ,ltrim(rtrim(COB_RSK_UNT_GR_SEQ)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_RSK_UNT_GR_SEQ)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_RSK_UNT_GR_SEQ)), ltrim(rtrim(COB_RSK_UNT_GR_SEQ)))) AS RISK_UNIT_GRP_SEQ,\n\tJNR_coverage_transaction.COB_RISK_UNIT,\n\t-- *INF*: DECODE(TRUE,CCP_MNL_ENTRY_IND = '1',ltrim(rtrim(COB_RISK_UNIT)),\r\n\t--                                     claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_RISK_UNIT)),\r\n\t--                                     claim_occurrence_type_code = 'AUT',  LTRIM(RTRIM(COB_COV_UNIT_NBR)),\r\n\t--                                     claim_occurrence_type_code = 'HOM',  LTRIM(RTRIM(COB_COV_UNIT_NBR)),\r\n\t--                                     claim_occurrence_type_code = 'WCC',  LTRIM(RTRIM(COB_RISK_UNIT))\r\n\t-- )\r\n\t-- \r\n\t-- --- Changed to above logic on 7/20/2010 when we found old logic was incorrect.\r\n\t-- \n\tDECODE(TRUE,\n\tCCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_RISK_UNIT)),\n\tclaim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_RISK_UNIT)),\n\tclaim_occurrence_type_code = 'AUT', LTRIM(RTRIM(COB_COV_UNIT_NBR)),\n\tclaim_occurrence_type_code = 'HOM', LTRIM(RTRIM(COB_COV_UNIT_NBR)),\n\tclaim_occurrence_type_code = 'WCC', LTRIM(RTRIM(COB_RISK_UNIT))) AS RISK_UNIT,\n\tJNR_coverage_transaction.COB_SEQ_RISK_UNIT,\n\tJNR_coverage_transaction.CCP_SEQ_RISK_UNIT,\n\t-- *INF*: IIF(CCP_MNL_ENTRY_IND = '1' ,ltrim(rtrim(COB_SEQ_RISK_UNIT)) ,\r\n\t-- IIF(claim_occurrence_type_code = 'COM' ,ltrim(rtrim(CCP_SEQ_RISK_UNIT)) ,ltrim(rtrim(COB_SEQ_RISK_UNIT))) )\r\n\t-- \r\n\t-- \r\n\t-- \r\n\t-- ---DECODE(TRUE, CCP_MNL_ENTRY_IND = '1' ,ltrim(rtrim(COB_SEQ_RISK_UNIT)) ,\r\n\t--                                 ---   claim_occurrence_type_code = 'COM' ,ltrim(rtrim(CCP_SEQ_RISK_UNIT)),\r\n\t--                                --     claim_occurrence_type_code  <> 'COM', ltrim(rtrim(COB_SEQ_RISK_UNIT)),\r\n\t--                                 --    '0') \n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_SEQ_RISK_UNIT)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_SEQ_RISK_UNIT)), ltrim(rtrim(COB_SEQ_RISK_UNIT)))) AS V_RISK_UNIT_SEQ,\n\t-- *INF*: IIF(ISNULL(V_RISK_UNIT_SEQ) OR IS_SPACES(V_RISK_UNIT_SEQ) OR LENGTH(V_RISK_UNIT_SEQ)= 0 ,'0',V_RISK_UNIT_SEQ)\n\tIFF(V_RISK_UNIT_SEQ IS NULL OR IS_SPACES(V_RISK_UNIT_SEQ) OR LENGTH(V_RISK_UNIT_SEQ) = 0, '0', V_RISK_UNIT_SEQ) AS RISK_UNIT_SEQ,\n\tJNR_coverage_transaction.COB_RISK_TYPE_IND,\n\tJNR_coverage_transaction.CCP_RISK_TYPE_IND,\n\t-- *INF*:  IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(COB_RISK_TYPE_IND))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(CCP_RISK_TYPE_IND))\r\n\t--              ,ltrim(rtrim(COB_RISK_TYPE_IND)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(COB_RISK_TYPE_IND)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(CCP_RISK_TYPE_IND)), ltrim(rtrim(COB_RISK_TYPE_IND)))) AS RISK_TYPE_IND,\n\tLKP_Comments_Stage_Coverage_Class_Desc.TCC_COMMENT_TXT AS s3p_WC_CLASS_DESCRIPTION,\n\t-- *INF*: IIF(ISNULL(s3p_WC_CLASS_DESCRIPTION) OR IS_SPACES(s3p_WC_CLASS_DESCRIPTION)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(s3p_WC_CLASS_DESCRIPTION)))\n\tIFF(s3p_WC_CLASS_DESCRIPTION IS NULL OR IS_SPACES(s3p_WC_CLASS_DESCRIPTION), 'N/A', ltrim(rtrim(s3p_WC_CLASS_DESCRIPTION))) AS s3p_WC_CLASS_DESCRIPTION_OUT,\n\tJNR_coverage_transaction.out_SPP_USE_CD AS spec_pers_prop_use_code,\n\t-- *INF*: IIF(ISNULL(spec_pers_prop_use_code) OR IS_SPACES(spec_pers_prop_use_code)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(spec_pers_prop_use_code)))\n\tIFF(spec_pers_prop_use_code IS NULL OR IS_SPACES(spec_pers_prop_use_code), 'N/A', ltrim(rtrim(spec_pers_prop_use_code))) AS spec_pers_prop_use_code_out,\n\tJNR_coverage_transaction.CCP_PKG_EFF_DT,\n\tJNR_coverage_transaction.CCP_PKG_EXP_DT,\n\tJNR_coverage_transaction.CCP_PKG_DED_AMT,\n\t-- *INF*: IIF(ISNULL(CCP_PKG_DED_AMT) \r\n\t-- ,0\r\n\t-- ,CCP_PKG_DED_AMT)\n\tIFF(CCP_PKG_DED_AMT IS NULL, 0, CCP_PKG_DED_AMT) AS CCP_PKG_DED_AMT_OUT,\n\tJNR_coverage_transaction.CCP_PKG_LIMIT_AMT,\n\t-- *INF*: IIF(ISNULL(CCP_PKG_LIMIT_AMT) \r\n\t-- ,0\r\n\t-- ,CCP_PKG_LIMIT_AMT)\n\tIFF(CCP_PKG_LIMIT_AMT IS NULL, 0, CCP_PKG_LIMIT_AMT) AS CCP_PKG_LIMIT_AMT_OUT,\n\tLKP_Claim_Comments_Stage_Unit_Desc.TCC_COMMENT_TXT AS s3p_UNIT_DESCRIPTION,\n\t-- *INF*: IIF(ISNULL(s3p_UNIT_DESCRIPTION) OR IS_SPACES(s3p_UNIT_DESCRIPTION)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(s3p_UNIT_DESCRIPTION)))\n\tIFF(s3p_UNIT_DESCRIPTION IS NULL OR IS_SPACES(s3p_UNIT_DESCRIPTION), 'N/A', ltrim(rtrim(s3p_UNIT_DESCRIPTION))) AS S3P_UNIT_DESCRIPTION_OUT,\n\tLKP_Auto_Loss_Stage.CAU_CAR_YR,\n\t-- *INF*: IIF(ISNULL(CAU_CAR_YR)\r\n\t-- ,0\r\n\t-- ,CAU_CAR_YR)\n\tIFF(CAU_CAR_YR IS NULL, 0, CAU_CAR_YR) AS CAU_CAR_YR_OUT,\n\tLKP_Auto_Loss_Stage.CAU_CAR_MAKE_NM,\n\t-- *INF*: IIF(ISNULL(CAU_CAR_MAKE_NM) OR IS_SPACES(CAU_CAR_MAKE_NM)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(CAU_CAR_MAKE_NM)))\n\tIFF(CAU_CAR_MAKE_NM IS NULL OR IS_SPACES(CAU_CAR_MAKE_NM), 'N/A', ltrim(rtrim(CAU_CAR_MAKE_NM))) AS CAU_CAR_MAKE_NM_OUT,\n\tLKP_Auto_Loss_Stage.CAU_CAR_RGS_NBR,\n\t-- *INF*: IIF(ISNULL(CAU_CAR_RGS_NBR) OR IS_SPACES(CAU_CAR_RGS_NBR)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(CAU_CAR_RGS_NBR)))\n\tIFF(CAU_CAR_RGS_NBR IS NULL OR IS_SPACES(CAU_CAR_RGS_NBR), 'N/A', ltrim(rtrim(CAU_CAR_RGS_NBR))) AS CAU_CAR_RGS_NBR_OUT,\n\tLKP_Auto_Loss_Stage.CAU_VEHICLE_ID_NBR,\n\t-- *INF*: IIF(ISNULL(CAU_VEHICLE_ID_NBR) OR IS_SPACES(CAU_VEHICLE_ID_NBR)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(CAU_VEHICLE_ID_NBR)))\n\tIFF(CAU_VEHICLE_ID_NBR IS NULL OR IS_SPACES(CAU_VEHICLE_ID_NBR), 'N/A', ltrim(rtrim(CAU_VEHICLE_ID_NBR))) AS CAU_VEHICLE_ID_NBR_OUT,\n\tLKP_Auto_Loss_Stage.CAU_RGS_STATE_CD,\n\t-- *INF*: IIF(ISNULL(CAU_RGS_STATE_CD) OR IS_SPACES(CAU_RGS_STATE_CD)\r\n\t-- ,'N/A'\r\n\t-- ,ltrim(rtrim(CAU_RGS_STATE_CD)))\n\tIFF(CAU_RGS_STATE_CD IS NULL OR IS_SPACES(CAU_RGS_STATE_CD), 'N/A', ltrim(rtrim(CAU_RGS_STATE_CD))) AS CAU_RGS_STATE_CD_OUT,\n\tLKP_Auto_Loss_Stage.CAU_VEH_ST_AMT,\n\t-- *INF*: IIF(ISNULL(CAU_VEH_ST_AMT)\r\n\t-- ,0\r\n\t-- ,CAU_VEH_ST_AMT)\n\tIFF(CAU_VEH_ST_AMT IS NULL, 0, CAU_VEH_ST_AMT) AS CAU_VEH_ST_AMT_OUT,\n\tLKP_Comments_Stage_Unit_Damage_Description.TCC_COMMENT_TXT AS UNIT_DAMAGE_DESCRIPTION,\n\t-- *INF*: IIF(ISNULL(UNIT_DAMAGE_DESCRIPTION) OR IS_SPACES(UNIT_DAMAGE_DESCRIPTION)\r\n\t-- ,'N/A'\r\n\t-- ,UNIT_DAMAGE_DESCRIPTION)\n\tIFF(UNIT_DAMAGE_DESCRIPTION IS NULL OR IS_SPACES(UNIT_DAMAGE_DESCRIPTION), 'N/A', UNIT_DAMAGE_DESCRIPTION) AS UNIT_DAMAGE_DESCRIPTION_OUT,\n\tJNR_coverage_transaction.ctx_bur_cause_loss,\n\t-- *INF*: IIF(ISNULL(ctx_bur_cause_loss) OR IS_SPACES(ctx_bur_cause_loss), 'N/A', SUBSTR(ctx_bur_cause_loss, 1,2))\n\tIFF(ctx_bur_cause_loss IS NULL OR IS_SPACES(ctx_bur_cause_loss), 'N/A', SUBSTR(ctx_bur_cause_loss, 1, 2)) AS cause_of_loss_out,\n\t-- *INF*: IIF(ISNULL(ctx_bur_cause_loss) OR IS_SPACES(ctx_bur_cause_loss), 'N/A', SUBSTR(ctx_bur_cause_loss, 3,1))\r\n\t-- \n\tIFF(ctx_bur_cause_loss IS NULL OR IS_SPACES(ctx_bur_cause_loss), 'N/A', SUBSTR(ctx_bur_cause_loss, 3, 1)) AS reserve_ctgry_out,\n\tJNR_coverage_transaction.ccp_coverage_form,\n\tJNR_coverage_transaction.cob_coverage_form,\n\t-- *INF*:  IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(cob_coverage_form))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(ccp_coverage_form))\r\n\t--              ,ltrim(rtrim(cob_coverage_form)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(cob_coverage_form)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(ccp_coverage_form)), ltrim(rtrim(cob_coverage_form)))) AS o_CoverageForm,\n\tJNR_coverage_transaction.ccp_coverage_type,\n\tJNR_coverage_transaction.cob_coverage_type,\n\t-- *INF*:  IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(cob_coverage_type))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(ccp_coverage_type))\r\n\t--              ,ltrim(rtrim(cob_coverage_type)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(cob_coverage_type)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(ccp_coverage_type)), ltrim(rtrim(cob_coverage_type)))) AS o_Coveragetype,\n\tJNR_coverage_transaction.ccp_risk_type,\n\tJNR_coverage_transaction.cob_risk_type,\n\t-- *INF*:  IIF(CCP_MNL_ENTRY_IND = '1'\r\n\t--       ,ltrim(rtrim(cob_risk_type))\r\n\t--       ,IIF(claim_occurrence_type_code = 'COM'\r\n\t--              ,ltrim(rtrim(ccp_risk_type))\r\n\t--              ,ltrim(rtrim(cob_risk_type)))\r\n\t-- )\n\tIFF(CCP_MNL_ENTRY_IND = '1', ltrim(rtrim(cob_risk_type)), IFF(claim_occurrence_type_code = 'COM', ltrim(rtrim(ccp_risk_type)), ltrim(rtrim(cob_risk_type)))) AS o_RiskType,\n\tJNR_coverage_transaction.cvr_policy_src_id,\n\tJNR_coverage_transaction.ccp_pol_cov_id AS i_ccp_pol_cov_id,\n\t-- *INF*: LTRIM(RTRIM(i_ccp_pol_cov_id))\n\tLTRIM(RTRIM(i_ccp_pol_cov_id)) AS ccp_pol_cov_id\n\tFROM JNR_coverage_transaction\n\tLEFT JOIN LKP_Auto_Loss_Stage\n\tON LKP_Auto_Loss_Stage.CAU_CLAIM_NBR = JNR_coverage_transaction.COB_CLAIM_NBR AND LKP_Auto_Loss_Stage.CAU_OBJECT_SEQ_NBR = JNR_coverage_transaction.out_OBJECT_SEQ_NBR\n\tLEFT JOIN LKP_Claim_Comments_Stage_Unit_Desc\n\tON LKP_Claim_Comments_Stage_Unit_Desc.FOLDER_KEY = JNR_coverage_transaction.COB_CLAIM_NBR AND LKP_Claim_Comments_Stage_Unit_Desc.COMMENT_ITEM_NBR = JNR_coverage_transaction.COB_UNIT_DES_ID\n\tLEFT JOIN LKP_Claim_Party_Occurrence_AK_ID\n\tON LKP_Claim_Party_Occurrence_AK_ID.claimant_num = JNR_coverage_transaction.COB_CLAIM_NBR AND LKP_Claim_Party_Occurrence_AK_ID.claim_party_role_code = EXP_Client_ID.out_CLIENT_ID\n\tLEFT JOIN LKP_Comments_Stage_Coverage_Class_Desc\n\tON LKP_Comments_Stage_Coverage_Class_Desc.FOLDER_KEY = JNR_coverage_transaction.COB_CLAIM_NBR AND LKP_Comments_Stage_Coverage_Class_Desc.COMMENT_ITEM_NBR = JNR_coverage_transaction.COB_OBJECT_CMT_ID\n\tLEFT JOIN LKP_Comments_Stage_Unit_Damage_Description\n\tON LKP_Comments_Stage_Unit_Damage_Description.FOLDER_KEY = LKP_Property_Loss_Stage.CPR_CLAIM_NBR AND LKP_Comments_Stage_Unit_Damage_Description.COMMENT_ITEM_NBR = LKP_Property_Loss_Stage.CPR_DAMAGE_DES_ID\n),\nLKP_claim_party_occurrence AS (\n\tSELECT\n\tclaim_occurrence_ak_id,\n\tclaim_party_occurrence_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tclaim_occurrence_ak_id,\n\t\t\tclaim_party_occurrence_ak_id\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_party_occurrence\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id ORDER BY claim_occurrence_ak_id) = 1\n),\nLKP_claim_occurrence AS (\n\tSELECT\n\tpol_key_ak_id,\n\tcvr_policy_src_id,\n\tclaim_occurrence_ak_id\n\tFROM (\n\t\tSELECT \n\t\t\tpol_key_ak_id,\n\t\t\tcvr_policy_src_id,\n\t\t\tclaim_occurrence_ak_id\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence\n\t\tWHERE source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and crrnt_snpsht_flag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_occurrence_ak_id ORDER BY pol_key_ak_id DESC) = 1\n),\nLKP_Policy AS (\n\tSELECT\n\tpms_pol_lob_code,\n\tInsuranceSegmentAKId,\n\tPolicyOfferingCode,\n\tpol_ak_id\n\tFROM (\n\t\tSELECT P.pms_pol_lob_code as pms_pol_lob_code, \r\n\t\t\tP.InsuranceSegmentAKId as InsuranceSegmentAKId, \r\n\t\t\tpo.PolicyOfferingCode as PolicyOfferingCode,\r\n\t\t\tP.pol_ak_id as pol_ak_id \r\n\t\tFROM V2.policy P \r\n\t\tJOIN dbo.PolicyOffering po ON po.PolicyOfferingAKId = p.PolicyOfferingAKId and po.CurrentSnapshotFlag = 1\r\n\t\tWHERE P.pol_ak_id IN (SELECT DISTINCT pol_key_ak_id \r\n\t\t\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO)\r\n\t\t\tAND P.crrnt_snpsht_flag =1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY pol_ak_id ORDER BY pms_pol_lob_code) = 1\n),\nLKP_RatingCoverage AS (\n\tSELECT\n\tCoverageVersion,\n\tAnnualStatementLineNumber,\n\tClassCode,\n\tSublineCode,\n\tRatingCoverageAKID,\n\tProductAKId,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tPolicyAkid,\n\tTypeBureauCode,\n\tCoverageGUID\n\tFROM (\n\t\tSELECT RC.CoverageGUID as CoverageGUID,\r\n\t\tRC.CoverageVersion as CoverageVersion,\r\n\t\tRC.AnnualStatementLineNumber as AnnualStatementLineNumber,\r\n\t\tRC.ClassCode as ClassCode, \r\n\t\tRC .SublineCode as SublineCode,\r\n\t\tRC.RatingCoverageAKID as RatingCoverageAKID, \r\n\t\tRC.ProductAKId as ProductAKId, \r\n\t\tRC.InsuranceReferenceLineOfBusinessAKId as InsuranceReferenceLineOfBusinessAKId, \r\n\t\tPC.PolicyAkid as PolicyAkid,\r\n\t\tPC.TypeBureauCode as TypeBureauCode \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC \t\r\n\t\tINNER JOIN @{pipeline().parameters.TARGET_TABLE_OWNER}.RatingCoverage RC \r\n\t\tON PC.PolicyCoverageAKID=RC.PolicyCoverageAKID AND PC.CurrentSnapshotFlag=1 AND PC.SourceSystemID='DCT'\r\n\t\tWHERE PC.PolicyAKID IN (SELECT DISTINCT pol_key_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_cov_pkg_stage S ON CO.claim_occurrence_key = S.ccp_claim_nbr )\r\n\t\tOrder by PC.PolicyAkid,RC.CoverageGUID,RC.Effectivedate,RC.CreatedDate\r\n\t\t--\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAkid,CoverageGUID ORDER BY CoverageVersion DESC) = 1\n),\nLKP_Product AS (\n\tSELECT\n\tLOBCode,\n\tProductAKId\n\tFROM (\n\t\tSELECT CASE WHEN ProductCode  = '000' THEN 'N/A'\r\n\t\t            WHEN ProductCode = '100' THEN 'WCP' \r\n\t\t            WHEN ProductCode in ('610','620','630','640','650','660') THEN 'BND'\r\n\t\t            WHEN ProductCode in ('800','850','890') THEN 'HAP'\r\n\t\t            WHEN ProductCode in ('200','300','400','410','420','430','450','500','510','550','520','320','900','') THEN 'CPP'\r\n\t\t            ELSE 'CPP' END AS LOBCode, \r\n\t\tProduct.ProductAKId as ProductAKId FROM Product\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ProductAKId ORDER BY LOBCode DESC) = 1\n),\nEXP_LOBCode AS (\n\tSELECT\n\tLKP_Product.LOBCode,\n\tLKP_Policy.pms_pol_lob_code,\n\tLKP_Policy.PolicyOfferingCode,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- \tPolicyOfferingCode = '801',\r\n\t-- \t\t'CHO',\r\n\t-- \tpms_pol_lob_code = 'N/A', \r\n\t-- \t\tLOBCode,\r\n\t-- \tpms_pol_lob_code)\r\n\t-- \r\n\t-- -- Policy Offering '801' is PL Choice, so LOB = 'CHO'\r\n\t-- ---For PMS policies, pms_pol_lob_code is never 'N/A'\n\tDECODE(TRUE,\n\tPolicyOfferingCode = '801', 'CHO',\n\tpms_pol_lob_code = 'N/A', LOBCode,\n\tpms_pol_lob_code) AS LOBCode_Out\n\tFROM \n\tLEFT JOIN LKP_Policy\n\tON LKP_Policy.pol_ak_id = LKP_claim_occurrence.pol_key_ak_id\n\tLEFT JOIN LKP_Product\n\tON LKP_Product.ProductAKId = LKP_RatingCoverage.ProductAKId\n),\nLKP_sup_CauseOfLoss AS (\n\tSELECT\n\tCauseOfLossId,\n\tLineOfBusiness,\n\tMajorPeril,\n\tCauseOfLoss\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(a.MajorPeril)) as MajorPeril,\r\n\t\ta.LineOfBusiness as LineOfBusiness,\r\n\t\ta.CauseOfLoss as CauseOfLoss,,\r\n\t\ta.CauseOfLossId as CauseOfLossId\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_CauseOfLoss a\r\n\t\twhere a.CurrentSnapshotFlag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY LineOfBusiness,MajorPeril,CauseOfLoss ORDER BY CauseOfLossId) = 1\n),\nEXP_Get_CauseOfLossID AS (\n\tSELECT\n\tCauseOfLossId,\n\t-- *INF*: IIF(ISNULL(CauseOfLossId), -1, CauseOfLossId)\n\tIFF(CauseOfLossId IS NULL, - 1, CauseOfLossId) AS CauseOfLossId_out\n\tFROM LKP_sup_CauseOfLoss\n),\nLKP_sup_insurance_line_code AS (\n\tSELECT\n\tsup_ins_line_id,\n\tStandardInsuranceLineCode,\n\tIN_ins_line_code,\n\tins_line_code\n\tFROM (\n\t\tSELECT a.sup_ins_line_id as sup_ins_line_id,\r\n\t\ta.StandardInsuranceLineCode as StandardInsuranceLineCode,\r\n\t\t LTRIM(RTRIM(a.ins_line_code)) as ins_line_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_insurance_line a\r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY ins_line_code ORDER BY sup_ins_line_id) = 1\n),\nEXP_Get_Ins_Line AS (\n\tSELECT\n\tLKP_sup_insurance_line_code.sup_ins_line_id AS i_sup_ins_line_id_code,\n\tLKP_sup_insurance_line_code.StandardInsuranceLineCode AS i_StandardInsuranceLineCode_ins_line_code,\n\tLKP_sup_insurance_line_code.IN_ins_line_code AS i_ins_line_code,\n\tEXP_Values.cvr_policy_src_id,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- ISNULL(i_StandardInsuranceLineCode_ins_line_code) AND ISNULL(i_ins_line_code), 'N/A',\r\n\t-- ISNULL(i_StandardInsuranceLineCode_ins_line_code) AND cvr_policy_src_id = 'PMS', i_ins_line_code,\r\n\t-- ISNULL(i_StandardInsuranceLineCode_ins_line_code), 'N/A',\r\n\t-- i_StandardInsuranceLineCode_ins_line_code)\r\n\t-- \r\n\t-- -- we only want to fall back on the i_ins_line_code if claim is for a PMS policy, those are the only ones using stat cov.  All others must either be a valid StandardLineInsCode or be set to N/A\r\n\t-- \r\n\t-- --IIF(ISNULL(i_StandardInsuranceLineCode_ins_line_code),IIF(ISNULL(i_ins_line_code),'N/A',i_ins_line_code),i_StandardInsuranceLineCode_ins_line_code)\n\tDECODE(TRUE,\n\ti_StandardInsuranceLineCode_ins_line_code IS NULL AND i_ins_line_code IS NULL, 'N/A',\n\ti_StandardInsuranceLineCode_ins_line_code IS NULL AND cvr_policy_src_id = 'PMS', i_ins_line_code,\n\ti_StandardInsuranceLineCode_ins_line_code IS NULL, 'N/A',\n\ti_StandardInsuranceLineCode_ins_line_code) AS o_ins_line,\n\t-- *INF*: IIF(ISNULL(i_sup_ins_line_id_code),-1,i_sup_ins_line_id_code)\n\tIFF(i_sup_ins_line_id_code IS NULL, - 1, i_sup_ins_line_id_code) AS o_SupInsuranceLineID\n\tFROM EXP_Values\n\tLEFT JOIN LKP_sup_insurance_line_code\n\tON LKP_sup_insurance_line_code.ins_line_code = EXP_Values.INS_LINE\n),\nLKP_sup_risk_unit AS (\n\tSELECT\n\tIN_risk_unit_code,\n\tsup_risk_unit_id,\n\tStandardRiskUnitCode,\n\trisk_unit_code,\n\tins_line\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(a.risk_unit_code)) as risk_unit_code,\r\n\t\tLTRIM(RTRIM(a.ins_line)) as ins_line,\r\n\t\ta.sup_risk_unit_id as sup_risk_unit_id,\r\n\t\ta.StandardRiskUnitCode as StandardRiskUnitCode\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit a\r\n\t\twhere a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_code,ins_line ORDER BY IN_risk_unit_code) = 1\n),\nEXP_Get_Risk_Unit AS (\n\tSELECT\n\tsup_risk_unit_id,\n\t-- *INF*: IIF(ISNULL(sup_risk_unit_id), -1, sup_risk_unit_id)\n\tIFF(sup_risk_unit_id IS NULL, - 1, sup_risk_unit_id) AS out_sup_risk_unit_id,\n\tIN_risk_unit_code AS risk_unit_code,\n\tStandardRiskUnitCode,\n\t-- *INF*: IIF(ISNULL(StandardRiskUnitCode),IIF(ISNULL(risk_unit_code),'N/A',risk_unit_code),StandardRiskUnitCode)\n\tIFF(StandardRiskUnitCode IS NULL, IFF(risk_unit_code IS NULL, 'N/A', risk_unit_code), StandardRiskUnitCode) AS out_StandardRiskUnitCode\n\tFROM LKP_sup_risk_unit\n),\nLKP_sup_risk_unit_group_code AS (\n\tSELECT\n\tIN_risk_unit_grp_code,\n\tsup_risk_unit_grp_id,\n\trisk_unit_grp_code,\n\tins_line,\n\tprdct_type_code\n\tFROM (\n\t\tSELECT a.risk_unit_grp_code as risk_unit_grp_code,\r\n\t\ta.ins_line as ins_line,\r\n\t\tLTRIM(RTRIM(a.prdct_type_code)) as prdct_type_code,\r\n\t\ta.sup_risk_unit_grp_id as sup_risk_unit_grp_id\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.sup_risk_unit_group a\r\n\t\twhere crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY risk_unit_grp_code,ins_line,prdct_type_code ORDER BY IN_risk_unit_grp_code) = 1\n),\nEXP_Get_Risk_Unit_Grp_Id AS (\n\tSELECT\n\tIN_risk_unit_grp_code AS risk_unit_grp_code,\n\trisk_unit_grp_code AS lkp_risk_unit_grp_code,\n\t-- *INF*: IIF(ISNULL(lkp_risk_unit_grp_code),IIF(ISNULL(risk_unit_grp_code),'N/A',risk_unit_grp_code),lkp_risk_unit_grp_code)\n\tIFF(lkp_risk_unit_grp_code IS NULL, IFF(risk_unit_grp_code IS NULL, 'N/A', risk_unit_grp_code), lkp_risk_unit_grp_code) AS risk_unit_grp,\n\tsup_risk_unit_grp_id AS sup_risk_unit_grp_id_code,\n\t-- *INF*: IIF(ISNULL(sup_risk_unit_grp_id_code),-1,sup_risk_unit_grp_id_code)\n\tIFF(sup_risk_unit_grp_id_code IS NULL, - 1, sup_risk_unit_grp_id_code) AS sup_risk_unit_grp_id\n\tFROM LKP_sup_risk_unit_group_code\n),\nLKP_PolicyCoverage_PMS AS (\n\tSELECT\n\tTypeBureauCode,\n\tcvr_policy_src_id,\n\tPolicyAKID\n\tFROM (\n\t\tSELECT PC.TypeBureauCode as TypeBureauCode, \r\n\t\tPC.PolicyAKID as PolicyAKID \r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC\r\n\t\tWHERE PC.policyakid IN (SELECT DISTINCT pol_key_ak_id from @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence CO \r\n\t\tINNER JOIN @{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.clm_cov_pkg_stage S ON CO.claim_occurrence_key = S.ccp_claim_nbr )\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID ORDER BY TypeBureauCode) = 1\n),\nEXP_Get_TypBureauCode AS (\n\tSELECT\n\tLKP_PolicyCoverage_PMS.TypeBureauCode AS TypeBureauCode_PMS,\n\tLKP_RatingCoverage.TypeBureauCode AS TypeBureauCode_DCT,\n\t-- *INF*: IIF(ltrim(rtrim(cvr_policy_src_id))='DUC', IIF(ISNULL(TypeBureauCode_DCT), 'N/A', TypeBureauCode_DCT), 'N/A')\r\n\t-- \r\n\t-- --We will be only evaluating DuckCreek records and the PMS evaluation is done in a different mapping which updates the Type Bureau code from N/A to the correct value.\n\tIFF(ltrim(rtrim(cvr_policy_src_id)) = 'DUC', IFF(TypeBureauCode_DCT IS NULL, 'N/A', TypeBureauCode_DCT), 'N/A') AS TypeBureauCode,\n\tLKP_PolicyCoverage_PMS.cvr_policy_src_id\n\tFROM \n\tLEFT JOIN LKP_PolicyCoverage_PMS\n\tON LKP_PolicyCoverage_PMS.PolicyAKID = LKP_claim_occurrence.pol_key_ak_id\n\tLEFT JOIN LKP_RatingCoverage\n\tON LKP_RatingCoverage.PolicyAkid = LKP_claim_occurrence.pol_key_ak_id AND LKP_RatingCoverage.CoverageGUID = EXP_Values.ccp_pol_cov_id\n),\nLKP_InsuranceSegment_PMS AS (\n\tSELECT\n\tInsuranceSegmentCode,\n\tInsuranceSegmentAKId\n\tFROM (\n\t\tSELECT \n\t\t\tInsuranceSegmentCode,\n\t\t\tInsuranceSegmentAKId\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.InsuranceSegment\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY InsuranceSegmentAKId ORDER BY InsuranceSegmentCode DESC) = 1\n),\nLKP_claimant_coverage_detail AS (\n\tSELECT\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\ts3p_ins_line_code,\n\ts3p_unit_type_code,\n\ts3p_wc_class_descript,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\treserve_ctgry,\n\tcause_of_loss,\n\tclaimant_cov_eff_date,\n\tclaimant_cov_exp_date,\n\trisk_type_ind,\n\ts3p_unit_descript,\n\tspec_pers_prop_use_code,\n\tpkg_ded_amt,\n\tpkg_lmt_amt,\n\tmanual_entry_ind,\n\tunit_veh_registration_state_code,\n\tunit_veh_stated_amt,\n\tunit_dam_descript,\n\tunit_veh_yr,\n\tunit_veh_make,\n\tunit_vin_num,\n\tCoverageGUID,\n\tpms_type_bureau_code,\n\tIN_claim_party_occurrence_ak_id,\n\tIN_COB_OBJECT_TYPE_CD,\n\tIN_COB_OBJECT_SEQ_NBR,\n\tIN_MAJOR_PERIL_CODE1,\n\tIN_s3p_PKG_SEQ_NUM1,\n\tIN_cause_of_loss_out,\n\tIN_reserve_ctgry_out\n\tFROM (\n\t\tSELECT a.claimant_cov_det_ak_id as claimant_cov_det_ak_id,\r\n\t\tLTRIM(RTRIM(a.s3p_ins_line_code)) as s3p_ins_line_code, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_type_code)) as s3p_unit_type_code, \r\n\t\tLTRIM(RTRIM(a.s3p_wc_class_descript)) as s3p_wc_class_descript, \r\n\t\tLTRIM(RTRIM(a.loc_unit_num)) as loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.sub_loc_unit_num)) as sub_loc_unit_num, \r\n\t\tLTRIM(RTRIM(a.ins_line)) as ins_line, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp)) as risk_unit_grp, \r\n\t\tLTRIM(RTRIM(a.risk_unit_grp_seq_num)) as risk_unit_grp_seq_num, \r\n\t\tLTRIM(RTRIM(a.risk_unit)) as risk_unit, \r\n\t\tLTRIM(RTRIM(a.risk_unit_seq_num)) as risk_unit_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_seq)) as major_peril_seq, \r\n\t\ta.claimant_cov_eff_date as claimant_cov_eff_date, \r\n\t\ta.claimant_cov_exp_date as claimant_cov_exp_date, \r\n\t\tLTRIM(RTRIM(a.risk_type_ind)) as risk_type_ind, \r\n\t\tLTRIM(RTRIM(a.s3p_unit_descript)) as s3p_unit_descript, \r\n\t\tLTRIM(RTRIM(a.spec_pers_prop_use_code)) as spec_pers_prop_use_code, \r\n\t\ta.pkg_ded_amt as pkg_ded_amt, \r\n\t\ta.pkg_lmt_amt as pkg_lmt_amt, \r\n\t\tLTRIM(RTRIM(a.manual_entry_ind)) as manual_entry_ind,\r\n\t\tLTRIM(RTRIM(a.unit_veh_registration_state_code)) as unit_veh_registration_state_code, \r\n\t\ta.unit_veh_stated_amt as unit_veh_stated_amt, \r\n\t\tLTRIM(RTRIM(a.unit_dam_descript)) as unit_dam_descript, \r\n\t\ta.unit_veh_yr as unit_veh_yr, \r\n\t\tLTRIM(RTRIM(a.unit_veh_make)) as unit_veh_make, \r\n\t\tLTRIM(RTRIM(a.unit_vin_num)) as unit_vin_num, \r\n\t\ta.claim_party_occurrence_ak_id as claim_party_occurrence_ak_id, \r\n\t\tLTRIM(RTRIM(a.s3p_object_type_code)) as s3p_object_type_code, \r\n\t\ta.s3p_object_seq_num as s3p_object_seq_num, \r\n\t\tLTRIM(RTRIM(a.major_peril_code)) as major_peril_code, \r\n\t\ta.s3p_pkg_seq_num as s3p_pkg_seq_num, \r\n\t\ta.cause_of_loss as cause_of_loss, \r\n\t\ta.reserve_ctgry as reserve_ctgry,\r\n\t\ta.CoverageGUID as CoverageGUID, \r\n\t\tLTRIM(RTRIM(a.pms_type_bureau_code)) as pms_type_bureau_code\r\n\t\tFROM \r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\t\tand a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY claim_party_occurrence_ak_id,s3p_object_type_code,s3p_object_seq_num,major_peril_code,s3p_pkg_seq_num,cause_of_loss,reserve_ctgry ORDER BY claimant_cov_det_ak_id) = 1\n),\nLKP_sup_major_peril AS (\n\tSELECT\n\tsup_major_peril_id,\n\tmajor_peril_code\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(a.major_peril_code)) as major_peril_code,\r\n\t\ta.sup_major_peril_id as sup_major_peril_id\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_major_peril a\r\n\t\twhere a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY major_peril_code ORDER BY sup_major_peril_id) = 1\n),\nLKP_sup_state AS (\n\tSELECT\n\tsup_state_id,\n\tstate_code\n\tFROM (\n\t\tSELECT LTRIM(RTRIM(a.state_code)) as state_code,\r\n\t\ta.sup_state_id as sup_state_id\r\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_state a\r\n\t\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}' and a.crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY state_code ORDER BY sup_state_id) = 1\n),\nLKP_sup_type_bureau_code AS (\n\tSELECT\n\tsup_type_bureau_code_id,\n\ttype_bureau_code\n\tFROM (\n\t\tSELECT \n\t\t\tsup_type_bureau_code_id,\n\t\t\ttype_bureau_code\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.sup_type_bureau_code\n\t\tWHERE crrnt_snpsht_flag = 1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY type_bureau_code ORDER BY sup_type_bureau_code_id) = 1\n),\nEXP_Detect_Changes AS (\n\tSELECT\n\tLKP_claimant_coverage_detail.s3p_ins_line_code AS old_s3p_ins_line_code,\n\tLKP_claimant_coverage_detail.s3p_unit_type_code AS old_s3p_unit_type_code,\n\tLKP_claimant_coverage_detail.s3p_wc_class_descript AS old_s3p_wc_class_descript,\n\tLKP_claimant_coverage_detail.loc_unit_num AS old_loc_unit_num,\n\tLKP_claimant_coverage_detail.sub_loc_unit_num AS old_sub_loc_unit_num,\n\tLKP_claimant_coverage_detail.ins_line AS old_ins_line,\n\tLKP_claimant_coverage_detail.risk_unit_grp AS old_risk_unit_grp,\n\tLKP_claimant_coverage_detail.risk_unit_grp_seq_num AS old_risk_unit_grp_seq_num,\n\tLKP_claimant_coverage_detail.risk_unit AS old_risk_unit,\n\tLKP_claimant_coverage_detail.risk_unit_seq_num AS old_risk_unit_seq_num,\n\tLKP_claimant_coverage_detail.major_peril_seq AS old_major_peril_seq,\n\tLKP_claimant_coverage_detail.claimant_cov_eff_date AS old_claimant_cov_eff_date,\n\tLKP_claimant_coverage_detail.claimant_cov_exp_date AS old_claimant_cov_exp_date,\n\tLKP_claimant_coverage_detail.risk_type_ind AS old_risk_type_ind,\n\tLKP_claimant_coverage_detail.s3p_unit_descript AS old_s3p_unit_descript,\n\tLKP_claimant_coverage_detail.spec_pers_prop_use_code AS old_spec_pers_prop_use_code,\n\tLKP_claimant_coverage_detail.pkg_ded_amt AS old_pkg_ded_amt,\n\tLKP_claimant_coverage_detail.pkg_lmt_amt AS old_pkg_lmt_amt,\n\tLKP_claimant_coverage_detail.manual_entry_ind AS old_manual_entry_ind,\n\tLKP_claimant_coverage_detail.unit_veh_registration_state_code AS old_unit_veh_registration_state_code,\n\tLKP_claimant_coverage_detail.unit_veh_stated_amt AS old_unit_veh_stated_amt,\n\tLKP_claimant_coverage_detail.unit_dam_descript AS old_unit_dam_descript,\n\tLKP_claimant_coverage_detail.unit_veh_yr AS old_unit_veh_yr,\n\tLKP_claimant_coverage_detail.unit_veh_make AS old_unit_veh_make,\n\tLKP_claimant_coverage_detail.unit_vin_num AS old_unit_vin_num,\n\tLKP_claimant_coverage_detail.CoverageGUID AS old_CoverageGUID,\n\tLKP_claimant_coverage_detail.pms_type_bureau_code AS old_pms_type_bureau_code,\n\tEXP_Values.ccp_pol_cov_id,\n\tLKP_sup_major_peril.sup_major_peril_id AS SupMajorPerilID,\n\tEXP_Values.o_CoverageForm AS coverage_form,\n\tEXP_Values.o_Coveragetype AS coverage_type,\n\tEXP_Values.o_RiskType AS risk_type,\n\tLKP_sup_state.sup_state_id,\n\tLKP_sup_type_bureau_code.sup_type_bureau_code_id,\n\tLKP_RatingCoverage.CoverageVersion,\n\tLKP_RatingCoverage.AnnualStatementLineNumber,\n\tLKP_RatingCoverage.ClassCode,\n\tLKP_RatingCoverage.SublineCode,\n\tLKP_RatingCoverage.RatingCoverageAKID,\n\tLKP_claimant_coverage_detail.claimant_cov_det_ak_id,\n\tLKP_claimant_coverage_detail.IN_claim_party_occurrence_ak_id AS claim_party_occurrence_ak_id,\n\tEXP_Values.COB_OBJECT_TYPE_CD,\n\tEXP_Values.COB_OBJECT_SEQ_NBR,\n\tEXP_Values.MAJOR_PERIL_CODE,\n\tEXP_Values.s3p_PKG_SEQ_NUM,\n\tEXP_Values.CCP_INS_LINE_CD,\n\tEXP_Values.COB_UNIT_TYPE_CD,\n\tEXP_Values.LOC_UNIT_NUM,\n\tEXP_Values.MAJOR_PERIL_SEQ_NUM,\n\tEXP_Get_Ins_Line.o_ins_line AS INS_LINE,\n\tEXP_Values.SUB_LOC_UNIT_NUM,\n\tEXP_Get_Risk_Unit_Grp_Id.risk_unit_grp AS RISK_UNIT_GROUP,\n\tEXP_Values.RISK_UNIT_GRP_SEQ,\n\tEXP_Get_Risk_Unit.out_StandardRiskUnitCode AS RISK_UNIT,\n\tEXP_Values.RISK_UNIT_SEQ,\n\tEXP_Values.RISK_TYPE_IND,\n\tEXP_Values.s3p_WC_CLASS_DESCRIPTION_OUT AS s3p_WC_CLASS_DESCRIPTION,\n\tEXP_Values.spec_pers_prop_use_code_out AS spec_pers_prop_use_code,\n\tEXP_Values.CCP_PKG_EFF_DT,\n\tEXP_Values.CCP_PKG_EXP_DT,\n\tEXP_Values.CCP_PKG_DED_AMT_OUT AS CCP_PKG_DED_AMT,\n\tEXP_Values.CCP_PKG_LIMIT_AMT_OUT AS CCP_PKG_LIMIT_AMT,\n\tEXP_Values.S3P_UNIT_DESCRIPTION_OUT AS s3p_UNIT_DESCRIPTION,\n\tEXP_Values.CAU_CAR_YR_OUT AS CAU_CAR_YR,\n\tEXP_Values.CAU_CAR_MAKE_NM_OUT AS CAU_CAR_MAKE_NM,\n\tEXP_Values.CAU_CAR_RGS_NBR_OUT AS CAU_CAR_RGS_NBR,\n\tEXP_Values.CAU_VEHICLE_ID_NBR_OUT AS CAU_VEHICLE_ID_NBR,\n\tEXP_Values.CAU_RGS_STATE_CD_OUT AS CAU_RGS_STATE_CD,\n\tEXP_Values.CAU_VEH_ST_AMT_OUT AS CAU_VEH_ST_AMT,\n\tEXP_Values.UNIT_DAMAGE_DESCRIPTION_OUT AS UNIT_DAMAGE_DESCRIPTION,\n\tEXP_Values.CCP_MNL_ENTRY_IND,\n\tEXP_Values.cause_of_loss_out,\n\tEXP_Values.reserve_ctgry_out,\n\tEXP_Get_Ins_Line.o_SupInsuranceLineID AS SupInsuranceLineID,\n\tEXP_Get_Risk_Unit_Grp_Id.sup_risk_unit_grp_id,\n\tEXP_Get_Risk_Unit.out_sup_risk_unit_id AS sup_risk_unit_id,\n\tEXP_Get_CauseOfLossID.CauseOfLossId_out,\n\tEXP_Values.cvr_policy_src_id,\n\tEXP_Get_TypBureauCode.TypeBureauCode,\n\tLKP_claim_occurrence.pol_key_ak_id,\n\tLKP_RatingCoverage.ProductAKId AS ProductAKId_DCT,\n\tLKP_RatingCoverage.InsuranceReferenceLineOfBusinessAKId AS InsuranceReferenceLineOfBusinessAKId_DCT,\n\t-- *INF*: IIF(ISNULL(ccp_pol_cov_id), 'N/A', ccp_pol_cov_id)\n\tIFF(ccp_pol_cov_id IS NULL, 'N/A', ccp_pol_cov_id) AS v_ccp_pol_cov_id,\n\t-- *INF*: iif(isnull(claimant_cov_det_ak_id)\r\n\t-- , 'NEW'\r\n\t-- ,iif(ltrim(rtrim(old_s3p_ins_line_code))  != ltrim(rtrim(CCP_INS_LINE_CD)) or \r\n\t-- ltrim(rtrim(old_s3p_unit_type_code))  != ltrim(rtrim(COB_UNIT_TYPE_CD)) or\r\n\t-- ltrim(rtrim(old_s3p_wc_class_descript))  != ltrim(rtrim(s3p_WC_CLASS_DESCRIPTION)) or\r\n\t-- ltrim(rtrim(old_loc_unit_num))  !=  ltrim(rtrim(LOC_UNIT_NUM)) or\r\n\t-- ltrim(rtrim(old_sub_loc_unit_num))  != ltrim(rtrim(SUB_LOC_UNIT_NUM)) or\r\n\t-- ltrim(rtrim(old_ins_line))  != ltrim(rtrim(INS_LINE)) or\r\n\t-- ltrim(rtrim(old_risk_unit_grp))  != ltrim(rtrim(RISK_UNIT_GROUP)) or \r\n\t-- ltrim(rtrim(old_risk_unit_grp_seq_num))  != ltrim(rtrim(RISK_UNIT_GRP_SEQ)) or\r\n\t-- ltrim(rtrim(old_risk_unit)) != ltrim(rtrim(RISK_UNIT)) or\r\n\t-- ltrim(rtrim(old_risk_unit_seq_num))  != ltrim(rtrim(RISK_UNIT_SEQ)) or\r\n\t-- ltrim(rtrim(old_major_peril_seq)) != ltrim(rtrim(MAJOR_PERIL_SEQ_NUM)) or\r\n\t-- old_claimant_cov_eff_date != CCP_PKG_EFF_DT or\r\n\t-- old_claimant_cov_exp_date != CCP_PKG_EXP_DT or\r\n\t-- ltrim(rtrim(old_risk_type_ind)) != ltrim(rtrim(RISK_TYPE_IND))  OR \r\n\t-- ltrim(rtrim(old_s3p_unit_descript)) != ltrim(rtrim(s3p_UNIT_DESCRIPTION))  OR \r\n\t-- ltrim(rtrim(old_spec_pers_prop_use_code)) != ltrim(rtrim(spec_pers_prop_use_code)) OR \r\n\t-- old_pkg_ded_amt != CCP_PKG_DED_AMT OR \r\n\t-- old_pkg_lmt_amt != CCP_PKG_LIMIT_AMT OR \r\n\t-- ltrim(rtrim(old_manual_entry_ind)) != ltrim(rtrim(CCP_MNL_ENTRY_IND)) or\r\n\t-- ltrim(rtrim(old_unit_veh_registration_state_code)) != ltrim(rtrim(CAU_RGS_STATE_CD)) OR \r\n\t-- old_unit_veh_stated_amt != CAU_VEH_ST_AMT OR \r\n\t-- ltrim(rtrim(old_unit_dam_descript)) != ltrim(rtrim(UNIT_DAMAGE_DESCRIPTION)) OR \r\n\t-- old_unit_veh_yr != CAU_CAR_YR OR \r\n\t-- ltrim(rtrim(old_unit_veh_make)) != ltrim(rtrim(CAU_CAR_MAKE_NM)) OR \r\n\t-- ltrim(rtrim(old_unit_vin_num)) != ltrim(rtrim(CAU_VEHICLE_ID_NBR)) OR\r\n\t-- (cvr_policy_src_id='DUC' AND old_CoverageGUID<>v_ccp_pol_cov_id)\r\n\t-- ,'UPDATE'\r\n\t-- ,'NOCHANGE')\r\n\t-- )\n\tIFF(claimant_cov_det_ak_id IS NULL, 'NEW', IFF(ltrim(rtrim(old_s3p_ins_line_code)) != ltrim(rtrim(CCP_INS_LINE_CD)) OR ltrim(rtrim(old_s3p_unit_type_code)) != ltrim(rtrim(COB_UNIT_TYPE_CD)) OR ltrim(rtrim(old_s3p_wc_class_descript)) != ltrim(rtrim(s3p_WC_CLASS_DESCRIPTION)) OR ltrim(rtrim(old_loc_unit_num)) != ltrim(rtrim(LOC_UNIT_NUM)) OR ltrim(rtrim(old_sub_loc_unit_num)) != ltrim(rtrim(SUB_LOC_UNIT_NUM)) OR ltrim(rtrim(old_ins_line)) != ltrim(rtrim(INS_LINE)) OR ltrim(rtrim(old_risk_unit_grp)) != ltrim(rtrim(RISK_UNIT_GROUP)) OR ltrim(rtrim(old_risk_unit_grp_seq_num)) != ltrim(rtrim(RISK_UNIT_GRP_SEQ)) OR ltrim(rtrim(old_risk_unit)) != ltrim(rtrim(RISK_UNIT)) OR ltrim(rtrim(old_risk_unit_seq_num)) != ltrim(rtrim(RISK_UNIT_SEQ)) OR ltrim(rtrim(old_major_peril_seq)) != ltrim(rtrim(MAJOR_PERIL_SEQ_NUM)) OR old_claimant_cov_eff_date != CCP_PKG_EFF_DT OR old_claimant_cov_exp_date != CCP_PKG_EXP_DT OR ltrim(rtrim(old_risk_type_ind)) != ltrim(rtrim(RISK_TYPE_IND)) OR ltrim(rtrim(old_s3p_unit_descript)) != ltrim(rtrim(s3p_UNIT_DESCRIPTION)) OR ltrim(rtrim(old_spec_pers_prop_use_code)) != ltrim(rtrim(spec_pers_prop_use_code)) OR old_pkg_ded_amt != CCP_PKG_DED_AMT OR old_pkg_lmt_amt != CCP_PKG_LIMIT_AMT OR ltrim(rtrim(old_manual_entry_ind)) != ltrim(rtrim(CCP_MNL_ENTRY_IND)) OR ltrim(rtrim(old_unit_veh_registration_state_code)) != ltrim(rtrim(CAU_RGS_STATE_CD)) OR old_unit_veh_stated_amt != CAU_VEH_ST_AMT OR ltrim(rtrim(old_unit_dam_descript)) != ltrim(rtrim(UNIT_DAMAGE_DESCRIPTION)) OR old_unit_veh_yr != CAU_CAR_YR OR ltrim(rtrim(old_unit_veh_make)) != ltrim(rtrim(CAU_CAR_MAKE_NM)) OR ltrim(rtrim(old_unit_vin_num)) != ltrim(rtrim(CAU_VEHICLE_ID_NBR)) OR ( cvr_policy_src_id = 'DUC' AND old_CoverageGUID <> v_ccp_pol_cov_id ), 'UPDATE', 'NOCHANGE')) AS v_Changed_Flag,\n\t1 AS Crrnt_SnapSht_Flag,\n\t0 AS logical_flag,\n\tv_Changed_Flag AS changed_flag,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AUDIT_ID,\n\t@{pipeline().parameters.SOURCE_SYSTEM_ID} AS SOURCE_SYSTEM_ID,\n\t-- *INF*: iif(v_Changed_Flag='NEW',\r\n\t-- \tto_date('01/01/1800 01:00:00','MM/DD/YYYY HH24:MI:SS'),sysdate)\n\tIFF(v_Changed_Flag = 'NEW', to_date('01/01/1800 01:00:00', 'MM/DD/YYYY HH24:MI:SS'), sysdate) AS eff_from_date,\n\t-- *INF*: to_date('12/31/2100 23:59:59','MM/DD/YYYY HH24:MI:SS')\n\tto_date('12/31/2100 23:59:59', 'MM/DD/YYYY HH24:MI:SS') AS eff_to_date,\n\tsysdate AS created_date,\n\t-- *INF*: IIF(ISNULL(SupMajorPerilID), -1, SupMajorPerilID)\n\tIFF(SupMajorPerilID IS NULL, - 1, SupMajorPerilID) AS out_SupMajorPerilID,\n\t-- *INF*: IIF(ISNULL(coverage_form), 'N/A', coverage_form)\n\tIFF(coverage_form IS NULL, 'N/A', coverage_form) AS coverage_form_out,\n\t-- *INF*: IIF(ISNULL(coverage_type), 'N/A', coverage_type)\n\tIFF(coverage_type IS NULL, 'N/A', coverage_type) AS coverage_type_out,\n\t-- *INF*: IIF(ISNULL(risk_type), 'N/A', risk_type)\n\tIFF(risk_type IS NULL, 'N/A', risk_type) AS risk_type_out,\n\t-- *INF*: IIF(ISNULL(sup_state_id), -1, sup_state_id)\n\tIFF(sup_state_id IS NULL, - 1, sup_state_id) AS sup_state_id_out,\n\t-- *INF*: IIF(ISNULL(sup_type_bureau_code_id), -1, sup_type_bureau_code_id)\n\tIFF(sup_type_bureau_code_id IS NULL, - 1, sup_type_bureau_code_id) AS sup_type_bureau_code_id_out,\n\t-- *INF*: IIF(ISNULL(CoverageVersion), 'N/A', CoverageVersion)\n\tIFF(CoverageVersion IS NULL, 'N/A', CoverageVersion) AS CoverageVersion_out,\n\t-- *INF*: IIF(ISNULL(AnnualStatementLineNumber), 'N/A', AnnualStatementLineNumber)\n\tIFF(AnnualStatementLineNumber IS NULL, 'N/A', AnnualStatementLineNumber) AS AnnualStatementLineNumber_out,\n\t-- *INF*: IIF(ISNULL(ClassCode), 'N/A', ClassCode)\n\tIFF(ClassCode IS NULL, 'N/A', ClassCode) AS ClassCode_out,\n\t-- *INF*: IIF(ISNULL(SublineCode), 'N/A', SublineCode)\n\tIFF(SublineCode IS NULL, 'N/A', SublineCode) AS SublineCode_out,\n\t-- *INF*: IIF(ISNULL(RatingCoverageAKID), -1, RatingCoverageAKID)\n\tIFF(RatingCoverageAKID IS NULL, - 1, RatingCoverageAKID) AS RatingCoverageAKID_out,\n\tv_ccp_pol_cov_id AS ccp_pol_cov_id_out,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- RISK_UNIT_SEQ='0' AND INS_LINE='WC',\r\n\t-- '00',\r\n\t-- IN(RISK_UNIT_SEQ, '0','1') AND INS_LINE<>'WC' AND RISK_TYPE_IND='N/A',\r\n\t-- 'N/A',\r\n\t-- IN(RISK_UNIT_SEQ, '0','1','2','3','4','8') AND INS_LINE='GL',\r\n\t-- RISK_UNIT_SEQ || RISK_TYPE_IND,\r\n\t-- RISK_UNIT_SEQ\r\n\t-- )\n\tDECODE(TRUE,\n\tRISK_UNIT_SEQ = '0' AND INS_LINE = 'WC', '00',\n\tIN(RISK_UNIT_SEQ, '0', '1') AND INS_LINE <> 'WC' AND RISK_TYPE_IND = 'N/A', 'N/A',\n\tIN(RISK_UNIT_SEQ, '0', '1', '2', '3', '4', '8') AND INS_LINE = 'GL', RISK_UNIT_SEQ || RISK_TYPE_IND,\n\tRISK_UNIT_SEQ) AS o_RiskUnitSequenceNumber_AKId,\n\t'N/A' AS o_pms_type_bureau_code,\n\tLKP_InsuranceSegment_PMS.InsuranceSegmentCode AS i_InsuranceSegmentCode,\n\t-- *INF*: IIF(ISNULL(i_InsuranceSegmentCode),'N/A',i_InsuranceSegmentCode)\n\tIFF(i_InsuranceSegmentCode IS NULL, 'N/A', i_InsuranceSegmentCode) AS o_InsuranceSegmentCode\n\tFROM EXP_Get_CauseOfLossID\n\t -- Manually join with EXP_Get_Ins_Line\n\t -- Manually join with EXP_Get_Risk_Unit\n\t -- Manually join with EXP_Get_Risk_Unit_Grp_Id\n\t -- Manually join with EXP_Get_TypBureauCode\n\t -- Manually join with EXP_Values\n\tLEFT JOIN LKP_InsuranceSegment_PMS\n\tON LKP_InsuranceSegment_PMS.InsuranceSegmentAKId = LKP_Policy.InsuranceSegmentAKId\n\tLEFT JOIN LKP_RatingCoverage\n\tON LKP_RatingCoverage.PolicyAkid = LKP_claim_occurrence.pol_key_ak_id AND LKP_RatingCoverage.CoverageGUID = EXP_Values.ccp_pol_cov_id\n\tLEFT JOIN LKP_claim_occurrence\n\tON LKP_claim_occurrence.claim_occurrence_ak_id = LKP_claim_party_occurrence.claim_occurrence_ak_id\n\tLEFT JOIN LKP_claimant_coverage_detail\n\tON LKP_claimant_coverage_detail.claim_party_occurrence_ak_id = EXP_Values.v_claim_party_occurrence_ak_id AND LKP_claimant_coverage_detail.s3p_object_type_code = EXP_Values.COB_OBJECT_TYPE_CD AND LKP_claimant_coverage_detail.s3p_object_seq_num = EXP_Values.COB_OBJECT_SEQ_NBR AND LKP_claimant_coverage_detail.major_peril_code = EXP_Values.MAJOR_PERIL_CODE AND LKP_claimant_coverage_detail.s3p_pkg_seq_num = EXP_Values.s3p_PKG_SEQ_NUM AND LKP_claimant_coverage_detail.cause_of_loss = EXP_Values.cause_of_loss_out AND LKP_claimant_coverage_detail.reserve_ctgry = EXP_Values.reserve_ctgry_out\n\tLEFT JOIN LKP_sup_major_peril\n\tON LKP_sup_major_peril.major_peril_code = EXP_Values.MAJOR_PERIL_CODE\n\tLEFT JOIN LKP_sup_state\n\tON LKP_sup_state.state_code = EXP_Values.CAU_RGS_STATE_CD_OUT\n\tLEFT JOIN LKP_sup_type_bureau_code\n\tON LKP_sup_type_bureau_code.type_bureau_code = EXP_Get_TypBureauCode.TypeBureauCode\n),\nFIL_Insert AS (\n\tSELECT\n\tclaimant_cov_det_ak_id, \n\tclaim_party_occurrence_ak_id, \n\tCOB_OBJECT_TYPE_CD, \n\tCOB_OBJECT_SEQ_NBR, \n\tMAJOR_PERIL_CODE, \n\ts3p_PKG_SEQ_NUM, \n\tCCP_INS_LINE_CD, \n\tCOB_UNIT_TYPE_CD, \n\tLOC_UNIT_NUM, \n\tMAJOR_PERIL_SEQ_NUM, \n\tINS_LINE, \n\tSUB_LOC_UNIT_NUM, \n\tRISK_UNIT_GROUP, \n\tRISK_UNIT_GRP_SEQ, \n\tRISK_UNIT, \n\tRISK_UNIT_SEQ, \n\tRISK_TYPE_IND, \n\ts3p_WC_CLASS_DESCRIPTION, \n\tspec_pers_prop_use_code, \n\tCCP_PKG_EFF_DT, \n\tCCP_PKG_EXP_DT, \n\tCCP_PKG_DED_AMT, \n\tCCP_PKG_LIMIT_AMT, \n\ts3p_UNIT_DESCRIPTION, \n\tCAU_CAR_YR, \n\tCAU_CAR_MAKE_NM, \n\tCAU_CAR_RGS_NBR, \n\tCAU_VEHICLE_ID_NBR, \n\tCAU_RGS_STATE_CD, \n\tCAU_VEH_ST_AMT, \n\tUNIT_DAMAGE_DESCRIPTION, \n\tCCP_MNL_ENTRY_IND, \n\tCrrnt_SnapSht_Flag, \n\tlogical_flag, \n\tchanged_flag, \n\tAUDIT_ID, \n\tSOURCE_SYSTEM_ID, \n\teff_from_date, \n\teff_to_date, \n\tcreated_date, \n\tcause_of_loss_out, \n\treserve_ctgry_out, \n\tSupInsuranceLineID, \n\tsup_risk_unit_grp_id, \n\tsup_risk_unit_id, \n\tout_SupMajorPerilID AS SupMajorPerilID, \n\tcoverage_form_out AS coverage_form, \n\tcoverage_type_out AS coverage_type, \n\trisk_type_out AS risk_type, \n\tCauseOfLossId_out, \n\tcvr_policy_src_id, \n\tsup_state_id_out AS sup_state_id, \n\tTypeBureauCode, \n\tsup_type_bureau_code_id_out AS sup_type_bureau_code_id, \n\tCoverageVersion_out, \n\tAnnualStatementLineNumber_out, \n\tClassCode_out, \n\tSublineCode_out, \n\tRatingCoverageAKID_out, \n\tccp_pol_cov_id_out, \n\tpol_key_ak_id, \n\tProductAKId_DCT, \n\tInsuranceReferenceLineOfBusinessAKId_DCT, \n\to_RiskUnitSequenceNumber_AKId AS RiskUnitSequenceNumber_AKId, \n\to_pms_type_bureau_code AS pms_type_bureau_code, \n\to_InsuranceSegmentCode\n\tFROM EXP_Detect_Changes\n\tWHERE changed_flag='NEW' or changed_flag='UPDATE'\n),\nLKP_StatisticalCoverageForPMSExceed AS (\n\tSELECT\n\tInsuranceReferenceLineOfBusinessAKId,\n\tProductAKId,\n\tStatisticalCoverageAKID,\n\tCoverageGuid,\n\tPolicyAKID,\n\tInsuranceLine,\n\tLocationNumber,\n\tMajorPerilCode,\n\tMajorPerilSequenceNumber,\n\tRiskUnit,\n\tRiskUnitSequenceNumber,\n\tRiskUnitGroup,\n\tRiskUnitGroupSequenceNumber,\n\tSubLocationUnitNumber,\n\tTypeBureauCode,\n\tMaxPolicyCovEffDate\n\tFROM (\n\t\tSelect \r\n\t\tDISTINCT SC.InsuranceReferenceLineOfBusinessAKID as InsuranceReferenceLineOfBusinessAKID,\r\n\t\tSC.ProductAKID as ProductAKID,\r\n\t\tSC.StatisticalCoverageAKID as StatisticalCoverageAKID,\r\n\t\tSC.CoverageGuid as CoverageGuid,\r\n\t\tPC.PolicyAKID as PolicyAKID, \r\n\t\tPC.InsuranceLine as InsuranceLine, \r\n\t\t(CASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END) as LocationNumber,\r\n\t\tSC.MajorPerilCode as MajorPerilCode,\r\n\t\tSC.MajorPerilSequenceNumber as MajorPerilSequenceNumber,\r\n\t\tSC.RiskUnit as RiskUnit,\r\n\t\t(CASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END) as RiskUnitSequenceNumber,\r\n\t\tSC.RiskUnitGroup as RiskUnitGroup,\r\n\t\tSC.RiskUnitGroupSequenceNumber as RiskUnitGroupSequenceNumber,\r\n\t\t(CASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END) as SubLocationUnitNumber,\r\n\t\tPC.TypeBureauCode as TypeBureauCode,\r\n\t\tMAX(PC.PolicyCoverageEffectiveDate) as MaxPolicyCovEffDate\r\n\t\t\r\n\t\tFROM\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.StatisticalCoverage SC ,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.PolicyCoverage PC,\r\n\t\t@{pipeline().parameters.TARGET_TABLE_OWNER}.RiskLocation RL,\r\n\t\tV2.policy p\r\n\t\tWHERE SC.PolicyCoverageAKID = PC.PolicyCoverageAKID \r\n\t\tAND PC.RiskLocationAKID = RL.RiskLocationAKID  \r\n\t\tAND  PC.PolicyAKID = p.pol_ak_id \r\n\t\tAND P.crrnt_snpsht_flag=1 \r\n\t\tAND P.source_sys_id='PMS'\r\n\t\tAND  EXISTS (SELECT DISTINCT pol_key_ak_id \r\n\t\tfrom @{pipeline().parameters.TARGET_TABLE_OWNER}.claim_occurrence,\r\n\t\t@{pipeline().parameters.SOURCE_DATABASE_NAME}.@{pipeline().parameters.SOURCE_TABLE_OWNER}.PIF_42X6_STAGE\r\n\t\twhere claim_occurrence_key=(pif_symbol+pif_policy_number+pif_module+right('0'+convert(varchar,ipfcx6_month_of_loss),2) +right('0'+convert(varchar,ipfcx6_day_of_loss),2)+convert(varchar,ipfcx6_year_of_loss)+ipfcx6_loss_occ_fdigit+right('0'+convert(varchar,ipfcx6_usr_loss_occurence),2) ) and \r\n\t\tcrrnt_snpsht_flag = 1 AND PC.PolicyAKID= pol_key_ak_id )\r\n\t\tGROUP BY SC.InsuranceReferenceLineOfBusinessAKID,\r\n\t\tSC.ProductAKID,\r\n\t\tSC.StatisticalCoverageAKID,\r\n\t\tSC.CoverageGuid,\r\n\t\tPC.PolicyAKID, \r\n\t\tPC.InsuranceLine,\r\n\t\tCASE WHEN RL.LocationIndicator = 'N' THEN '0000' ELSE RL.LocationUnitNumber END,\r\n\t\tSC.MajorPerilCode,\r\n\t\tSC.MajorPerilSequenceNumber,\r\n\t\tSC.RiskUnit,\r\n\t\tCASE WHEN SC.RiskUnitSequenceNumber = '0' then 'N/A' ELSE SC.RiskUnitSequenceNumber END ,\r\n\t\tSC.RiskUnitGroup, \r\n\t\tSC.RiskUnitGroupSequenceNumber ,\r\n\t\tCASE WHEN SC.SubLocationUnitNumber = 'N/A' THEN '000' ELSE SC.SubLocationUnitNumber END ,\r\n\t\tPC.TypeBureauCode\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY PolicyAKID,InsuranceLine,LocationNumber,MajorPerilCode,MajorPerilSequenceNumber,RiskUnit,RiskUnitSequenceNumber,RiskUnitGroup,RiskUnitGroupSequenceNumber,SubLocationUnitNumber,TypeBureauCode,MaxPolicyCovEffDate ORDER BY InsuranceReferenceLineOfBusinessAKId) = 1\n),\nLKP_SupTypeOfLossRules AS (\n\tSELECT\n\tTypeOfLoss,\n\tClaimTypeCategory,\n\tClaimTypeGroup,\n\tSubrogationEligibleIndicator,\n\tMajorPerilCode,\n\tCauseOfLoss,\n\tInsuranceSegmentCode\n\tFROM (\n\t\tSELECT \n\t\t\tTypeOfLoss,\n\t\t\tClaimTypeCategory,\n\t\t\tClaimTypeGroup,\n\t\t\tSubrogationEligibleIndicator,\n\t\t\tMajorPerilCode,\n\t\t\tCauseOfLoss,\n\t\t\tInsuranceSegmentCode\n\t\tFROM @{pipeline().parameters.TARGET_TABLE_OWNER}.SupTypeOfLossRules\n\t\tWHERE CurrentSnapshotFlag=1\n\t)\n\tQUALIFY ROW_NUMBER() OVER (PARTITION BY MajorPerilCode,CauseOfLoss,InsuranceSegmentCode ORDER BY TypeOfLoss DESC) = 1\n),\nSEQ_Claimant_Coverage_Detail AS (\n\tCREATE SEQUENCE SEQ_Claimant_Coverage_Detail\n\tSTART = 0\n\tINCREMENT = 1;\n),\nEXP_Determine_AK AS (\n\tSELECT\n\tFIL_Insert.claimant_cov_det_ak_id,\n\tSEQ_Claimant_Coverage_Detail.NEXTVAL,\n\t-- *INF*: iif(isnull(claimant_cov_det_ak_id)\r\n\t-- ,NEXTVAL\r\n\t-- ,claimant_cov_det_ak_id)\n\tIFF(claimant_cov_det_ak_id IS NULL, NEXTVAL, claimant_cov_det_ak_id) AS out_claimant_cov_det_ak_id,\n\tFIL_Insert.claim_party_occurrence_ak_id,\n\tFIL_Insert.COB_OBJECT_TYPE_CD,\n\tFIL_Insert.COB_OBJECT_SEQ_NBR,\n\tFIL_Insert.MAJOR_PERIL_CODE,\n\tFIL_Insert.s3p_PKG_SEQ_NUM,\n\tFIL_Insert.CCP_INS_LINE_CD,\n\tFIL_Insert.COB_UNIT_TYPE_CD,\n\tFIL_Insert.LOC_UNIT_NUM,\n\tFIL_Insert.MAJOR_PERIL_SEQ_NUM,\n\tFIL_Insert.INS_LINE,\n\tFIL_Insert.SUB_LOC_UNIT_NUM,\n\tFIL_Insert.RISK_UNIT_GROUP,\n\tFIL_Insert.RISK_UNIT_GRP_SEQ,\n\tFIL_Insert.RISK_UNIT,\n\tFIL_Insert.RISK_UNIT_SEQ,\n\tFIL_Insert.RISK_TYPE_IND,\n\tFIL_Insert.s3p_WC_CLASS_DESCRIPTION,\n\tFIL_Insert.spec_pers_prop_use_code,\n\tFIL_Insert.CCP_PKG_EFF_DT,\n\tFIL_Insert.CCP_PKG_EXP_DT,\n\tFIL_Insert.CCP_PKG_DED_AMT,\n\tFIL_Insert.CCP_PKG_LIMIT_AMT,\n\tFIL_Insert.s3p_UNIT_DESCRIPTION,\n\tFIL_Insert.CAU_CAR_YR,\n\tFIL_Insert.CAU_CAR_MAKE_NM,\n\tFIL_Insert.CAU_CAR_RGS_NBR,\n\tFIL_Insert.CAU_VEHICLE_ID_NBR,\n\tFIL_Insert.CAU_RGS_STATE_CD,\n\tFIL_Insert.CAU_VEH_ST_AMT,\n\tFIL_Insert.UNIT_DAMAGE_DESCRIPTION,\n\tFIL_Insert.CCP_MNL_ENTRY_IND,\n\tFIL_Insert.Crrnt_SnapSht_Flag,\n\tFIL_Insert.logical_flag,\n\tFIL_Insert.changed_flag,\n\tFIL_Insert.AUDIT_ID,\n\tFIL_Insert.SOURCE_SYSTEM_ID,\n\tFIL_Insert.eff_from_date,\n\tFIL_Insert.eff_to_date,\n\tFIL_Insert.created_date,\n\t'N/A' AS dummy,\n\tFIL_Insert.cause_of_loss_out,\n\tFIL_Insert.reserve_ctgry_out,\n\tFIL_Insert.SupInsuranceLineID,\n\tFIL_Insert.sup_risk_unit_grp_id,\n\tFIL_Insert.sup_risk_unit_id,\n\tFIL_Insert.SupMajorPerilID,\n\tFIL_Insert.coverage_form,\n\tFIL_Insert.coverage_type,\n\tFIL_Insert.risk_type,\n\tFIL_Insert.CauseOfLossId_out,\n\tFIL_Insert.cvr_policy_src_id,\n\tFIL_Insert.sup_state_id,\n\tFIL_Insert.TypeBureauCode,\n\tFIL_Insert.sup_type_bureau_code_id,\n\tFIL_Insert.CoverageVersion_out,\n\tFIL_Insert.AnnualStatementLineNumber_out,\n\tFIL_Insert.ClassCode_out,\n\tFIL_Insert.SublineCode_out,\n\tFIL_Insert.RatingCoverageAKID_out,\n\tFIL_Insert.ccp_pol_cov_id_out AS ccp_pol_cov_id_in,\n\t-- *INF*: IIF(ISNULL(i_CoverageGuid_PMS),'N/A',i_CoverageGuid_PMS)\n\tIFF(i_CoverageGuid_PMS IS NULL, 'N/A', i_CoverageGuid_PMS) AS v_CoverageGuid_PMS,\n\t-- *INF*: IIF(IN(cvr_policy_src_id,'DUC','PDC'),ccp_pol_cov_id_in,\r\n\t-- v_CoverageGuid_PMS)\n\tIFF(IN(cvr_policy_src_id, 'DUC', 'PDC'), ccp_pol_cov_id_in, v_CoverageGuid_PMS) AS ccp_pol_cov_id_out,\n\tLKP_StatisticalCoverageForPMSExceed.InsuranceReferenceLineOfBusinessAKId AS i_InsuranceReferenceLineOfBusinessAKId_PMS,\n\tLKP_StatisticalCoverageForPMSExceed.ProductAKId AS i_ProductAKId_PMS,\n\tLKP_StatisticalCoverageForPMSExceed.StatisticalCoverageAKID AS i_StatisticalCoverageAKID_PMS,\n\tLKP_StatisticalCoverageForPMSExceed.CoverageGuid AS i_CoverageGuid_PMS,\n\tFIL_Insert.ProductAKId_DCT AS i_ProductAKId_DCT,\n\tFIL_Insert.InsuranceReferenceLineOfBusinessAKId_DCT AS i_InsuranceReferenceLineOfBusinessAKId_DCT,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- cvr_policy_src_id='PMS'  AND  NOT ISNULL(i_InsuranceReferenceLineOfBusinessAKId_PMS),\r\n\t-- i_InsuranceReferenceLineOfBusinessAKId_PMS,\r\n\t-- cvr_policy_src_id='PMS'  AND ISNULL(i_InsuranceReferenceLineOfBusinessAKId_PMS),\r\n\t-- -1,\r\n\t-- IN(cvr_policy_src_id,'DUC','PDC') AND  NOT ISNULL(i_InsuranceReferenceLineOfBusinessAKId_DCT),\r\n\t-- i_InsuranceReferenceLineOfBusinessAKId_DCT,\r\n\t-- -1)\n\tDECODE(TRUE,\n\tcvr_policy_src_id = 'PMS' AND NOT i_InsuranceReferenceLineOfBusinessAKId_PMS IS NULL, i_InsuranceReferenceLineOfBusinessAKId_PMS,\n\tcvr_policy_src_id = 'PMS' AND i_InsuranceReferenceLineOfBusinessAKId_PMS IS NULL, - 1,\n\tIN(cvr_policy_src_id, 'DUC', 'PDC') AND NOT i_InsuranceReferenceLineOfBusinessAKId_DCT IS NULL, i_InsuranceReferenceLineOfBusinessAKId_DCT,\n\t- 1) AS o_InsuranceReferenceLineOfBusinessAKId,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- cvr_policy_src_id='PMS'  AND  NOT ISNULL(i_ProductAKId_PMS),\r\n\t-- i_ProductAKId_PMS,\r\n\t-- cvr_policy_src_id='PMS'  AND ISNULL(i_ProductAKId_PMS),\r\n\t-- -1,\r\n\t-- IN(cvr_policy_src_id,'DUC','PDC') AND  NOT ISNULL(i_ProductAKId_DCT),\r\n\t-- i_ProductAKId_DCT,\r\n\t-- -1)\n\tDECODE(TRUE,\n\tcvr_policy_src_id = 'PMS' AND NOT i_ProductAKId_PMS IS NULL, i_ProductAKId_PMS,\n\tcvr_policy_src_id = 'PMS' AND i_ProductAKId_PMS IS NULL, - 1,\n\tIN(cvr_policy_src_id, 'DUC', 'PDC') AND NOT i_ProductAKId_DCT IS NULL, i_ProductAKId_DCT,\n\t- 1) AS o_ProductAKId,\n\t-- *INF*: DECODE(TRUE,\r\n\t-- cvr_policy_src_id='PMS'  AND  NOT ISNULL(i_StatisticalCoverageAKID_PMS),\r\n\t-- i_StatisticalCoverageAKID_PMS,\r\n\t-- -1)\n\tDECODE(TRUE,\n\tcvr_policy_src_id = 'PMS' AND NOT i_StatisticalCoverageAKID_PMS IS NULL, i_StatisticalCoverageAKID_PMS,\n\t- 1) AS o_StatisticalCoverageAKId,\n\tLKP_SupTypeOfLossRules.TypeOfLoss AS i_TypeOfLoss,\n\t-- *INF*: IIF(ISNULL(i_TypeOfLoss) ,'N/A',i_TypeOfLoss)\r\n\t-- \r\n\t-- --IIF(ISNULL(i_TypeOfLoss)  OR i_TypeOfLoss = 'Unassigned'   ,'N/A',i_TypeOfLoss)\n\tIFF(i_TypeOfLoss IS NULL, 'N/A', i_TypeOfLoss) AS o_TypeOfLoss,\n\tLKP_SupTypeOfLossRules.ClaimTypeCategory AS i_ClaimTypeCategory,\n\t-- *INF*: IIF(ISNULL(i_ClaimTypeCategory) ,'N/A',i_ClaimTypeCategory)\n\tIFF(i_ClaimTypeCategory IS NULL, 'N/A', i_ClaimTypeCategory) AS o_ClaimTypeCategory,\n\tLKP_SupTypeOfLossRules.ClaimTypeGroup AS i_ClaimTypeGroup,\n\t-- *INF*: IIF(ISNULL(i_ClaimTypeGroup),'N/A',i_ClaimTypeGroup)\n\tIFF(i_ClaimTypeGroup IS NULL, 'N/A', i_ClaimTypeGroup) AS o_ClaimTypeGroup,\n\tLKP_SupTypeOfLossRules.SubrogationEligibleIndicator AS i_SubrogationEligibleIndicator,\n\t-- *INF*: IIF(ISNULL(i_SubrogationEligibleIndicator),'N/A',i_SubrogationEligibleIndicator)\n\tIFF(i_SubrogationEligibleIndicator IS NULL, 'N/A', i_SubrogationEligibleIndicator) AS o_SubrogationEligibleIndicator\n\tFROM FIL_Insert\n\tLEFT JOIN LKP_StatisticalCoverageForPMSExceed\n\tON LKP_StatisticalCoverageForPMSExceed.PolicyAKID = FIL_Insert.pol_key_ak_id AND LKP_StatisticalCoverageForPMSExceed.InsuranceLine = FIL_Insert.INS_LINE AND LKP_StatisticalCoverageForPMSExceed.LocationNumber = FIL_Insert.LOC_UNIT_NUM AND LKP_StatisticalCoverageForPMSExceed.MajorPerilCode = FIL_Insert.MAJOR_PERIL_CODE AND LKP_StatisticalCoverageForPMSExceed.MajorPerilSequenceNumber = FIL_Insert.MAJOR_PERIL_SEQ_NUM AND LKP_StatisticalCoverageForPMSExceed.RiskUnit = FIL_Insert.RISK_UNIT AND LKP_StatisticalCoverageForPMSExceed.RiskUnitSequenceNumber = FIL_Insert.RiskUnitSequenceNumber_AKId AND LKP_StatisticalCoverageForPMSExceed.RiskUnitGroup = FIL_Insert.RISK_UNIT_GROUP AND LKP_StatisticalCoverageForPMSExceed.RiskUnitGroupSequenceNumber = FIL_Insert.RISK_UNIT_GRP_SEQ AND LKP_StatisticalCoverageForPMSExceed.SubLocationUnitNumber = FIL_Insert.SUB_LOC_UNIT_NUM AND LKP_StatisticalCoverageForPMSExceed.TypeBureauCode = FIL_Insert.TypeBureauCode AND LKP_StatisticalCoverageForPMSExceed.MaxPolicyCovEffDate = FIL_Insert.CCP_PKG_EFF_DT\n\tLEFT JOIN LKP_SupTypeOfLossRules\n\tON LKP_SupTypeOfLossRules.MajorPerilCode = FIL_Insert.MAJOR_PERIL_CODE AND LKP_SupTypeOfLossRules.CauseOfLoss = FIL_Insert.cause_of_loss_out AND LKP_SupTypeOfLossRules.InsuranceSegmentCode = FIL_Insert.o_InsuranceSegmentCode\n),\nclaimant_coverage_detail_insert AS (\n\tINSERT INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail\n\t(claimant_cov_det_ak_id, claim_party_occurrence_ak_id, s3p_object_type_code, s3p_object_seq_num, s3p_pkg_seq_num, s3p_ins_line_code, s3p_unit_type_code, s3p_wc_class_descript, loc_unit_num, sub_loc_unit_num, ins_line, risk_unit_grp, risk_unit_grp_seq_num, risk_unit, risk_unit_seq_num, major_peril_code, major_peril_seq, pms_loss_disability, reserve_ctgry, cause_of_loss, pms_mbr, pms_type_exposure, pms_type_bureau_code, offset_onset_ind, claimant_cov_eff_date, claimant_cov_exp_date, risk_type_ind, s3p_unit_descript, spec_pers_prop_use_code, pkg_ded_amt, pkg_lmt_amt, manual_entry_ind, unit_veh_registration_state_code, unit_veh_stated_amt, unit_dam_descript, unit_veh_yr, unit_veh_make, unit_vin_num, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, SupInsuranceLineID, sup_risk_unit_grp_id, sup_risk_unit_id, SupMajorPerilID, CauseOfLossID, SupTypeBureauCodeID, SupVehicleRegistrationStateID, PolicySourceID, CoverageForm, RiskType, CoverageType, CoverageVersion, AnnualStatementLineNumber, ClassCode, SublineCode, RatingCoverageAKId, CoverageGUID, StatisticalCoverageAKID, InsuranceReferenceLineOfBusinessAKId, ProductAKId, TypeOfLoss, ClaimTypeCategory, ClaimTypeGroup, SubrogationEligibleIndicator)\n\tSELECT \n\tout_claimant_cov_det_ak_id AS CLAIMANT_COV_DET_AK_ID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tCOB_OBJECT_TYPE_CD AS S3P_OBJECT_TYPE_CODE, \n\tCOB_OBJECT_SEQ_NBR AS S3P_OBJECT_SEQ_NUM, \n\ts3p_PKG_SEQ_NUM AS S3P_PKG_SEQ_NUM, \n\tCCP_INS_LINE_CD AS S3P_INS_LINE_CODE, \n\tCOB_UNIT_TYPE_CD AS S3P_UNIT_TYPE_CODE, \n\ts3p_WC_CLASS_DESCRIPTION AS S3P_WC_CLASS_DESCRIPT, \n\tLOC_UNIT_NUM AS LOC_UNIT_NUM, \n\tSUB_LOC_UNIT_NUM AS SUB_LOC_UNIT_NUM, \n\tINS_LINE AS INS_LINE, \n\tRISK_UNIT_GROUP AS RISK_UNIT_GRP, \n\tRISK_UNIT_GRP_SEQ AS RISK_UNIT_GRP_SEQ_NUM, \n\tRISK_UNIT AS RISK_UNIT, \n\tRISK_UNIT_SEQ AS RISK_UNIT_SEQ_NUM, \n\tMAJOR_PERIL_CODE AS MAJOR_PERIL_CODE, \n\tMAJOR_PERIL_SEQ_NUM AS MAJOR_PERIL_SEQ, \n\tdummy AS PMS_LOSS_DISABILITY, \n\treserve_ctgry_out AS RESERVE_CTGRY, \n\tcause_of_loss_out AS CAUSE_OF_LOSS, \n\tdummy AS PMS_MBR, \n\tdummy AS PMS_TYPE_EXPOSURE, \n\tTypeBureauCode AS PMS_TYPE_BUREAU_CODE, \n\tdummy AS OFFSET_ONSET_IND, \n\tCCP_PKG_EFF_DT AS CLAIMANT_COV_EFF_DATE, \n\tCCP_PKG_EXP_DT AS CLAIMANT_COV_EXP_DATE, \n\tRISK_TYPE_IND AS RISK_TYPE_IND, \n\ts3p_UNIT_DESCRIPTION AS S3P_UNIT_DESCRIPT, \n\tSPEC_PERS_PROP_USE_CODE, \n\tCCP_PKG_DED_AMT AS PKG_DED_AMT, \n\tCCP_PKG_LIMIT_AMT AS PKG_LMT_AMT, \n\tCCP_MNL_ENTRY_IND AS MANUAL_ENTRY_IND, \n\tCAU_RGS_STATE_CD AS UNIT_VEH_REGISTRATION_STATE_CODE, \n\tCAU_VEH_ST_AMT AS UNIT_VEH_STATED_AMT, \n\tUNIT_DAMAGE_DESCRIPTION AS UNIT_DAM_DESCRIPT, \n\tCAU_CAR_YR AS UNIT_VEH_YR, \n\tCAU_CAR_MAKE_NM AS UNIT_VEH_MAKE, \n\tCAU_VEHICLE_ID_NBR AS UNIT_VIN_NUM, \n\tLOGICAL_FLAG, \n\tCrrnt_SnapSht_Flag AS CRRNT_SNPSHT_FLAG, \n\tAUDIT_ID AS AUDIT_ID, \n\tEFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYSTEM_ID AS SOURCE_SYS_ID, \n\tCREATED_DATE, \n\tcreated_date AS MODIFIED_DATE, \n\tSUPINSURANCELINEID, \n\tSUP_RISK_UNIT_GRP_ID, \n\tSUP_RISK_UNIT_ID, \n\tSUPMAJORPERILID, \n\tCauseOfLossId_out AS CAUSEOFLOSSID, \n\tsup_type_bureau_code_id AS SUPTYPEBUREAUCODEID, \n\tsup_state_id AS SUPVEHICLEREGISTRATIONSTATEID, \n\tcvr_policy_src_id AS POLICYSOURCEID, \n\tcoverage_form AS COVERAGEFORM, \n\trisk_type AS RISKTYPE, \n\tcoverage_type AS COVERAGETYPE, \n\tCoverageVersion_out AS COVERAGEVERSION, \n\tAnnualStatementLineNumber_out AS ANNUALSTATEMENTLINENUMBER, \n\tClassCode_out AS CLASSCODE, \n\tSublineCode_out AS SUBLINECODE, \n\tRatingCoverageAKID_out AS RATINGCOVERAGEAKID, \n\tccp_pol_cov_id_out AS COVERAGEGUID, \n\to_StatisticalCoverageAKId AS STATISTICALCOVERAGEAKID, \n\to_InsuranceReferenceLineOfBusinessAKId AS INSURANCEREFERENCELINEOFBUSINESSAKID, \n\to_ProductAKId AS PRODUCTAKID, \n\to_TypeOfLoss AS TYPEOFLOSS, \n\to_ClaimTypeCategory AS CLAIMTYPECATEGORY, \n\to_ClaimTypeGroup AS CLAIMTYPEGROUP, \n\to_SubrogationEligibleIndicator AS SUBROGATIONELIGIBLEINDICATOR\n\tFROM EXP_Determine_AK\n),\nSQ_claimant_coverage_detail_RatingCoverageAKID AS (\n\t-- get pool of possible changes for a given date period with both the old and new policy information\r\n\t-- driven by policyakid from CO for new and PC (via RCAKID from CCD) for old\r\n\twith CO_Change as(\r\n\tselect distinct\r\n\tCCD.claimant_cov_det_id,\r\n\tCCD.claimant_cov_det_ak_id, \r\n\tCO.claim_occurrence_ak_id, \r\n\tCO.pol_key_ak_id, \r\n\tPC.PolicyAKID as OldPolicyAKID,\r\n\tCCD.RatingCoverageAKId as OldRatingCoverageAKId, \r\n\tCCD.CoverageGUID, \r\n\tP.pol_key, \r\n\tP2.Pol_key as OldPolKey,\r\n\tCO.claim_loss_date, \r\n\tP.pol_eff_date, \r\n\tcase when P.pol_cancellation_date < '2100-12-31' then P.pol_cancellation_date else \tP.pol_exp_date End as pol_exp_date \r\n\t,PC.PolicyCoverageAKID as OldPolicyCoverageAKID\r\n\t,P2.pol_eff_date as OldPolEff_date\r\n\t,case when P2.pol_cancellation_date < '2100-12-31' then P2.pol_cancellation_date else \tP2.pol_exp_date End as OldPolExp_date \r\n\t,RC.RatingCoverageCancellationDate\r\n\tfrom \r\n\tdbo.claim_occurrence CO  with (nolock)\r\n\tinner join dbo.claim_party_occurrence CPO  with (nolock) on CO.claim_occurrence_ak_id=CPO.claim_occurrence_ak_id and CPO.crrnt_snpsht_flag=1\r\n\tinner join dbo.claimant_coverage_detail CCD with (nolock) on CCD.claim_party_occurrence_ak_id=CPO.claim_party_occurrence_ak_id and CCD.crrnt_snpsht_flag=1\r\n\tinner join v2.policy P with (nolock) on P.pol_ak_id=CO.pol_key_ak_id and P.crrnt_snpsht_flag=1\r\n\tinner join dbo.RatingCoverage  RC with (nolock) on RC.RatingCoverageAKID=CCD.RatingCoverageAKId and CCD.CoverageGUID=RC.CoverageGUID and RC.CurrentSnapshotFlag=1\r\n\tinner join dbo.PolicyCoverage PC with (nolock) on RC.PolicyCoverageAKID=PC.PolicyCoverageAKID and PC.CurrentSnapshotFlag=1\r\n\tinner join v2.policy P2 with (nolock) on P2.pol_ak_id=PC.PolicyAKID and P2.crrnt_snpsht_flag=1\r\n\twhere CO.modified_date >='@{pipeline().parameters.SELECTION_START_TS}'\r\n\tand CO.crrnt_snpsht_flag=1 and PolicySourceID !='PMS' and PC.PolicyAKID!=CO.pol_key_ak_id\r\n\t)\r\n\t\r\n\t-- get current RC information with a join to PC policyakid for a integrity check \r\n\t-- and also provide enough information for a debug/validation query to test old vs new RCAKID\r\n\tselect \r\n\tdistinct \r\n\tCTE.claimant_cov_det_id,\r\n\tCTE.claimant_cov_det_ak_id,\r\n\tCTE.claim_occurrence_ak_id,\r\n\tRC.RatingCoverageAKID as new_RatingCoverageAKID\r\n\t,PC.PolicyCoverageAKID as new_PolicyCoverageAKID\r\n\t,PC.PolicyAKID\r\n\t,CTE.pol_key as new_Pol_key\r\n\t,RC.CoverageGUID\r\n\t,PC.PolicyCoverageEffectiveDate\r\n\t,PC.PolicyCoverageExpirationDate \r\n\t,CTE.pol_eff_date\r\n\t,CTE.pol_exp_date\r\n\t,RC.RatingCoverageCancellationDate\r\n\t,CTE.claim_loss_date\r\n\t,CTE.OldPolicyAKID as OLD_PolicyAKID\r\n\t,CTE.OldPolKey as OLD_pol_key, \r\n\tCTE.OldPolicyCoverageAKID as OLD_PolicyCoverageAKID,\r\n\tCTE.OldRatingCoverageAKId as OLD_RatingCoverageAKID,\r\n\tCTE.OldPolEff_date as OLD_pol_eff_date,\r\n\tCTE.OldPolExp_date as OLD_pol_exp_date,\r\n\tCTE.RatingCoverageCancellationDate as OLD_RatingCoverageCancellationDate\r\n\tFROM\r\n\tCO_Change CTE \r\n\tInner join dbo.RatingCoverage RC with (nolock) on \r\n\tCTE.CoverageGUID=RC.CoverageGUID and RC.CurrentSnapshotFlag=1 and CTE.OldRatingCoverageAKId!=RC.RatingCoverageAKID\r\n\tinner join dbo.PolicyCoverage PC with (nolock) on RC.PolicyCoverageAKID=PC.PolicyCoverageAKID \r\n\tand CTE.pol_key_ak_id=PC.PolicyAKID\r\n\tand PC.CurrentSnapshotFlag=1\r\n\torder by CTE.claimant_cov_det_id\n),\nEXP_ClaimantCoverageDetailRatingCoverageAKID AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tclaimant_cov_det_ak_id,\n\tclaim_occurrence_ak_id,\n\tnew_RatingCoverageAKID,\n\tnew_PolicyCoverageAKID,\n\tPolicyAKID,\n\tnew_Pol_key,\n\tCoverageGUID,\n\tPolicyCoverageEffectiveDate,\n\tPolicyCoverageExpirationDate,\n\tpol_eff_date,\n\tpol_exp_date,\n\tRatingCoverageCancellationDate,\n\tclaim_loss_date,\n\tOLD_PolicyAKID,\n\tOLD_pol_key,\n\tOLD_PolicyCoverageAKID,\n\tOLD_RatingCoverageAKID,\n\tOLD_pol_eff_date,\n\tOLD_pol_exp_date,\n\tOLD_RatingCoverageCancellationDate\n\tFROM SQ_claimant_coverage_detail_RatingCoverageAKID\n),\nSQ_Claimant_Coverage_Detail_Base_Record AS (\n\tSELECT \r\n\tclaimant_coverage_detail.claimant_cov_det_id, \r\n\tclaimant_coverage_detail.claimant_cov_det_ak_id, \r\n\tclaimant_coverage_detail.claim_party_occurrence_ak_id, \r\n\tclaimant_coverage_detail.s3p_object_type_code, \r\n\tclaimant_coverage_detail.s3p_object_seq_num, \r\n\tclaimant_coverage_detail.s3p_pkg_seq_num, \r\n\tclaimant_coverage_detail.s3p_ins_line_code, \r\n\tclaimant_coverage_detail.s3p_unit_type_code, \r\n\tclaimant_coverage_detail.s3p_wc_class_descript, \r\n\tclaimant_coverage_detail.loc_unit_num, \r\n\tclaimant_coverage_detail.sub_loc_unit_num, \r\n\tclaimant_coverage_detail.ins_line, \r\n\tclaimant_coverage_detail.risk_unit_grp, \r\n\tclaimant_coverage_detail.risk_unit_grp_seq_num,\r\n\tclaimant_coverage_detail.risk_unit, \r\n\tclaimant_coverage_detail.risk_unit_seq_num, \r\n\tclaimant_coverage_detail.major_peril_code, \r\n\tclaimant_coverage_detail.major_peril_seq, \r\n\tclaimant_coverage_detail.pms_loss_disability, \r\n\tclaimant_coverage_detail.reserve_ctgry, \r\n\tclaimant_coverage_detail.cause_of_loss, \r\n\tclaimant_coverage_detail.pms_mbr, \r\n\tclaimant_coverage_detail.pms_type_exposure, \r\n\tclaimant_coverage_detail.pms_type_bureau_code, \r\n\tclaimant_coverage_detail.offset_onset_ind, \r\n\tclaimant_coverage_detail.claimant_cov_eff_date, \r\n\tclaimant_coverage_detail.claimant_cov_exp_date, \r\n\tclaimant_coverage_detail.risk_type_ind, \r\n\tclaimant_coverage_detail.s3p_unit_descript, \r\n\tclaimant_coverage_detail.spec_pers_prop_use_code, \r\n\tclaimant_coverage_detail.pkg_ded_amt, \r\n\tclaimant_coverage_detail.pkg_lmt_amt, \r\n\tclaimant_coverage_detail.manual_entry_ind, \r\n\tclaimant_coverage_detail.unit_veh_registration_state_code, \r\n\tclaimant_coverage_detail.unit_veh_stated_amt, \r\n\tclaimant_coverage_detail.unit_dam_descript, \r\n\tclaimant_coverage_detail.unit_veh_yr, \r\n\tclaimant_coverage_detail.unit_veh_make, \r\n\tclaimant_coverage_detail.unit_vin_num, \r\n\tclaimant_coverage_detail.logical_flag, \r\n\tclaimant_coverage_detail.crrnt_snpsht_flag, \r\n\tclaimant_coverage_detail.audit_id, \r\n\tclaimant_coverage_detail.eff_from_date, \r\n\tclaimant_coverage_detail.eff_to_date,\r\n\tclaimant_coverage_detail.source_sys_id, \r\n\tclaimant_coverage_detail.created_date, \r\n\tclaimant_coverage_detail.modified_date, \r\n\tclaimant_coverage_detail.SupInsuranceLineID, \r\n\tclaimant_coverage_detail.sup_risk_unit_grp_id, \r\n\tclaimant_coverage_detail.sup_risk_unit_id, \r\n\tclaimant_coverage_detail.SupMajorPerilID, \r\n\tclaimant_coverage_detail.CauseOfLossID, \r\n\tclaimant_coverage_detail.SupTypeBureauCodeID, \r\n\tclaimant_coverage_detail.SupVehicleRegistrationStateID, \r\n\tclaimant_coverage_detail.PolicySourceID, \r\n\tclaimant_coverage_detail.CoverageForm, \r\n\tclaimant_coverage_detail.RiskType, \r\n\tclaimant_coverage_detail.CoverageType, \r\n\tclaimant_coverage_detail.CoverageVersion, \r\n\tclaimant_coverage_detail.AnnualStatementLineNumber, \r\n\tclaimant_coverage_detail.ClassCode, \r\n\tclaimant_coverage_detail.SublineCode, \r\n\tclaimant_coverage_detail.RatingCoverageAKId, \r\n\tclaimant_coverage_detail.CoverageGUID, \r\n\tclaimant_coverage_detail.StatisticalCoverageAKID, \r\n\tclaimant_coverage_detail.InsuranceReferenceLineOfBusinessAKId, \r\n\tclaimant_coverage_detail.ProductAKId, \r\n\tclaimant_coverage_detail.TypeOfLoss, \r\n\tclaimant_coverage_detail.ClaimTypeCategory,\r\n\tclaimant_coverage_detail.ClaimTypeGroup, \r\n\tclaimant_coverage_detail.SubrogationEligibleIndicator \r\n\tFROM\r\n\tclaimant_coverage_detail claimant_coverage_detail\r\n\tINNER JOIN claim_party_occurrence CPO on CPO.claim_party_occurrence_ak_id=claimant_coverage_detail.claim_party_occurrence_ak_id and CPO.crrnt_snpsht_flag=1\r\n\tINNER JOIN claim_occurrence CO on CO.claim_occurrence_ak_id=CPO.claim_occurrence_ak_id and CO.crrnt_snpsht_flag=1\r\n\tWHERE \r\n\tCO.modified_date >='@{pipeline().parameters.SELECTION_START_TS}'\r\n\tand CO.crrnt_snpsht_flag=1 and claimant_coverage_detail.PolicySourceID !='PMS' \r\n\tand claimant_coverage_detail.crrnt_snpsht_flag=1\r\n\tORDER BY claimant_coverage_detail.claimant_cov_det_id\n),\nJNR_ClaimantCoverageDetailRatingCoverageAKID AS (SELECT\n\tEXP_ClaimantCoverageDetailRatingCoverageAKID.claimant_cov_det_id AS original_claimant_cov_det_id, \n\tEXP_ClaimantCoverageDetailRatingCoverageAKID.claimant_cov_det_ak_id AS original_claimant_cov_det_ak_id, \n\tEXP_ClaimantCoverageDetailRatingCoverageAKID.new_RatingCoverageAKID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_det_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_det_ak_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.claim_party_occurrence_ak_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_object_type_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_object_seq_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_pkg_seq_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_ins_line_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_unit_type_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_wc_class_descript, \n\tSQ_Claimant_Coverage_Detail_Base_Record.loc_unit_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.sub_loc_unit_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.ins_line, \n\tSQ_Claimant_Coverage_Detail_Base_Record.risk_unit_grp, \n\tSQ_Claimant_Coverage_Detail_Base_Record.risk_unit_grp_seq_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.risk_unit, \n\tSQ_Claimant_Coverage_Detail_Base_Record.risk_unit_seq_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.major_peril_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.major_peril_seq, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pms_loss_disability, \n\tSQ_Claimant_Coverage_Detail_Base_Record.reserve_ctgry, \n\tSQ_Claimant_Coverage_Detail_Base_Record.cause_of_loss, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pms_mbr, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pms_type_exposure, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pms_type_bureau_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.offset_onset_ind, \n\tSQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_eff_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_exp_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.risk_type_ind, \n\tSQ_Claimant_Coverage_Detail_Base_Record.s3p_unit_descript, \n\tSQ_Claimant_Coverage_Detail_Base_Record.spec_pers_prop_use_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pkg_ded_amt, \n\tSQ_Claimant_Coverage_Detail_Base_Record.pkg_lmt_amt, \n\tSQ_Claimant_Coverage_Detail_Base_Record.manual_entry_ind, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_veh_registration_state_code, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_veh_stated_amt, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_dam_descript, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_veh_yr, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_veh_make, \n\tSQ_Claimant_Coverage_Detail_Base_Record.unit_vin_num, \n\tSQ_Claimant_Coverage_Detail_Base_Record.logical_flag, \n\tSQ_Claimant_Coverage_Detail_Base_Record.crrnt_snpsht_flag, \n\tSQ_Claimant_Coverage_Detail_Base_Record.audit_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.eff_from_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.eff_to_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.source_sys_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.created_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.modified_date, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SupInsuranceLineID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.sup_risk_unit_grp_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.sup_risk_unit_id, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SupMajorPerilID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.CauseOfLossID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SupTypeBureauCodeID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SupVehicleRegistrationStateID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.PolicySourceID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.CoverageForm, \n\tSQ_Claimant_Coverage_Detail_Base_Record.RiskType, \n\tSQ_Claimant_Coverage_Detail_Base_Record.CoverageType, \n\tSQ_Claimant_Coverage_Detail_Base_Record.CoverageVersion, \n\tSQ_Claimant_Coverage_Detail_Base_Record.AnnualStatementLineNumber, \n\tSQ_Claimant_Coverage_Detail_Base_Record.ClassCode, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SublineCode, \n\tSQ_Claimant_Coverage_Detail_Base_Record.RatingCoverageAKId, \n\tSQ_Claimant_Coverage_Detail_Base_Record.CoverageGUID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.StatisticalCoverageAKID, \n\tSQ_Claimant_Coverage_Detail_Base_Record.InsuranceReferenceLineOfBusinessAKId, \n\tSQ_Claimant_Coverage_Detail_Base_Record.ProductAKId, \n\tSQ_Claimant_Coverage_Detail_Base_Record.TypeOfLoss, \n\tSQ_Claimant_Coverage_Detail_Base_Record.ClaimTypeCategory, \n\tSQ_Claimant_Coverage_Detail_Base_Record.ClaimTypeGroup, \n\tSQ_Claimant_Coverage_Detail_Base_Record.SubrogationEligibleIndicator\n\tFROM EXP_ClaimantCoverageDetailRatingCoverageAKID\n\tINNER JOIN SQ_Claimant_Coverage_Detail_Base_Record\n\tON SQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_det_id = EXP_ClaimantCoverageDetailRatingCoverageAKID.claimant_cov_det_id AND SQ_Claimant_Coverage_Detail_Base_Record.claimant_cov_det_ak_id = EXP_ClaimantCoverageDetailRatingCoverageAKID.claimant_cov_det_ak_id\n),\nEXP_Output_ClaimantCoverageDetailRatingCoverageAKID AS (\n\tSELECT\n\toriginal_claimant_cov_det_id,\n\toriginal_claimant_cov_det_ak_id,\n\tnew_RatingCoverageAKID,\n\tclaimant_cov_det_id,\n\tclaimant_cov_det_ak_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\ts3p_ins_line_code,\n\ts3p_unit_type_code,\n\ts3p_wc_class_descript,\n\tloc_unit_num,\n\tsub_loc_unit_num,\n\tins_line,\n\trisk_unit_grp,\n\trisk_unit_grp_seq_num,\n\trisk_unit,\n\trisk_unit_seq_num,\n\tmajor_peril_code,\n\tmajor_peril_seq,\n\tpms_loss_disability,\n\treserve_ctgry,\n\tcause_of_loss,\n\tpms_mbr,\n\tpms_type_exposure,\n\tpms_type_bureau_code,\n\toffset_onset_ind,\n\tclaimant_cov_eff_date,\n\tclaimant_cov_exp_date,\n\trisk_type_ind,\n\ts3p_unit_descript,\n\tspec_pers_prop_use_code,\n\tpkg_ded_amt,\n\tpkg_lmt_amt,\n\tmanual_entry_ind,\n\tunit_veh_registration_state_code,\n\tunit_veh_stated_amt,\n\tunit_dam_descript,\n\tunit_veh_yr,\n\tunit_veh_make,\n\tunit_vin_num,\n\tlogical_flag,\n\tcrrnt_snpsht_flag,\n\taudit_id,\n\teff_from_date,\n\teff_to_date,\n\tsource_sys_id,\n\tcreated_date,\n\tmodified_date,\n\tSupInsuranceLineID,\n\tsup_risk_unit_grp_id,\n\tsup_risk_unit_id,\n\tSupMajorPerilID,\n\tCauseOfLossID,\n\tSupTypeBureauCodeID,\n\tSupVehicleRegistrationStateID,\n\tPolicySourceID,\n\tCoverageForm,\n\tRiskType,\n\tCoverageType,\n\tCoverageVersion,\n\tAnnualStatementLineNumber,\n\tClassCode,\n\tSublineCode,\n\tRatingCoverageAKId,\n\tCoverageGUID,\n\tStatisticalCoverageAKID,\n\tInsuranceReferenceLineOfBusinessAKId,\n\tProductAKId,\n\tTypeOfLoss,\n\tClaimTypeCategory,\n\tClaimTypeGroup,\n\tSubrogationEligibleIndicator,\n\tSYSDATE AS EffFromDate,\n\t@{pipeline().parameters.WBMI_AUDIT_CONTROL_RUN_ID} AS AuditID\n\tFROM JNR_ClaimantCoverageDetailRatingCoverageAKID\n),\nInsert_claimant_coverage_detail_RatingCoverageAKID AS (\n\tINSERT INTO claimant_coverage_detail\n\t(claimant_cov_det_ak_id, claim_party_occurrence_ak_id, s3p_object_type_code, s3p_object_seq_num, s3p_pkg_seq_num, s3p_ins_line_code, s3p_unit_type_code, s3p_wc_class_descript, loc_unit_num, sub_loc_unit_num, ins_line, risk_unit_grp, risk_unit_grp_seq_num, risk_unit, risk_unit_seq_num, major_peril_code, major_peril_seq, pms_loss_disability, reserve_ctgry, cause_of_loss, pms_mbr, pms_type_exposure, pms_type_bureau_code, offset_onset_ind, claimant_cov_eff_date, claimant_cov_exp_date, risk_type_ind, s3p_unit_descript, spec_pers_prop_use_code, pkg_ded_amt, pkg_lmt_amt, manual_entry_ind, unit_veh_registration_state_code, unit_veh_stated_amt, unit_dam_descript, unit_veh_yr, unit_veh_make, unit_vin_num, logical_flag, crrnt_snpsht_flag, audit_id, eff_from_date, eff_to_date, source_sys_id, created_date, modified_date, SupInsuranceLineID, sup_risk_unit_grp_id, sup_risk_unit_id, SupMajorPerilID, CauseOfLossID, SupTypeBureauCodeID, SupVehicleRegistrationStateID, PolicySourceID, CoverageForm, RiskType, CoverageType, CoverageVersion, AnnualStatementLineNumber, ClassCode, SublineCode, RatingCoverageAKId, CoverageGUID, StatisticalCoverageAKID, InsuranceReferenceLineOfBusinessAKId, ProductAKId, TypeOfLoss, ClaimTypeCategory, ClaimTypeGroup, SubrogationEligibleIndicator)\n\tSELECT \n\toriginal_claimant_cov_det_ak_id AS CLAIMANT_COV_DET_AK_ID, \n\tCLAIM_PARTY_OCCURRENCE_AK_ID, \n\tS3P_OBJECT_TYPE_CODE, \n\tS3P_OBJECT_SEQ_NUM, \n\tS3P_PKG_SEQ_NUM, \n\tS3P_INS_LINE_CODE, \n\tS3P_UNIT_TYPE_CODE, \n\tS3P_WC_CLASS_DESCRIPT, \n\tLOC_UNIT_NUM, \n\tSUB_LOC_UNIT_NUM, \n\tINS_LINE, \n\tRISK_UNIT_GRP, \n\tRISK_UNIT_GRP_SEQ_NUM, \n\tRISK_UNIT, \n\tRISK_UNIT_SEQ_NUM, \n\tMAJOR_PERIL_CODE, \n\tMAJOR_PERIL_SEQ, \n\tPMS_LOSS_DISABILITY, \n\tRESERVE_CTGRY, \n\tCAUSE_OF_LOSS, \n\tPMS_MBR, \n\tPMS_TYPE_EXPOSURE, \n\tPMS_TYPE_BUREAU_CODE, \n\tOFFSET_ONSET_IND, \n\tCLAIMANT_COV_EFF_DATE, \n\tCLAIMANT_COV_EXP_DATE, \n\tRISK_TYPE_IND, \n\tS3P_UNIT_DESCRIPT, \n\tSPEC_PERS_PROP_USE_CODE, \n\tPKG_DED_AMT, \n\tPKG_LMT_AMT, \n\tMANUAL_ENTRY_IND, \n\tUNIT_VEH_REGISTRATION_STATE_CODE, \n\tUNIT_VEH_STATED_AMT, \n\tUNIT_DAM_DESCRIPT, \n\tUNIT_VEH_YR, \n\tUNIT_VEH_MAKE, \n\tUNIT_VIN_NUM, \n\tLOGICAL_FLAG, \n\tCRRNT_SNPSHT_FLAG, \n\tAuditID AS AUDIT_ID, \n\tEffFromDate AS EFF_FROM_DATE, \n\tEFF_TO_DATE, \n\tSOURCE_SYS_ID, \n\tEffFromDate AS CREATED_DATE, \n\tEffFromDate AS MODIFIED_DATE, \n\tSUPINSURANCELINEID, \n\tSUP_RISK_UNIT_GRP_ID, \n\tSUP_RISK_UNIT_ID, \n\tSUPMAJORPERILID, \n\tCAUSEOFLOSSID, \n\tSUPTYPEBUREAUCODEID, \n\tSUPVEHICLEREGISTRATIONSTATEID, \n\tPOLICYSOURCEID, \n\tCOVERAGEFORM, \n\tRISKTYPE, \n\tCOVERAGETYPE, \n\tCOVERAGEVERSION, \n\tANNUALSTATEMENTLINENUMBER, \n\tCLASSCODE, \n\tSUBLINECODE, \n\tnew_RatingCoverageAKID AS RATINGCOVERAGEAKID, \n\tCOVERAGEGUID, \n\tSTATISTICALCOVERAGEAKID, \n\tINSURANCEREFERENCELINEOFBUSINESSAKID, \n\tPRODUCTAKID, \n\tTYPEOFLOSS, \n\tCLAIMTYPECATEGORY, \n\tCLAIMTYPEGROUP, \n\tSUBROGATIONELIGIBLEINDICATOR\n\tFROM EXP_Output_ClaimantCoverageDetailRatingCoverageAKID\n),\nSQ_claimant_coverage_detail AS (\n\tSELECT \r\n\t  a.claimant_cov_det_id\r\n\t, a.claim_party_occurrence_ak_id\r\n\t, a.s3p_object_type_code\r\n\t, a.s3p_object_seq_num\r\n\t, a.s3p_pkg_seq_num\r\n\t, a.major_peril_code\r\n\t,a.cause_of_loss\r\n\t,a.reserve_ctgry\r\n\t, a.eff_from_date\r\n\t, a.eff_to_date\r\n\t, a.source_sys_id \r\n\tFROM\r\n\t @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail a\r\n\twhere a.source_sys_id = '@{pipeline().parameters.SOURCE_SYSTEM_ID}'\r\n\tand EXISTS (SELECT 1\t\t\t\r\n\t\tFROM  @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail b\r\n\t\tWHERE b.crrnt_snpsht_flag = 1\r\n\t      AND a.claimant_cov_det_ak_id = b.claimant_cov_det_ak_id\r\n\t      AND a.source_sys_id = b.source_sys_id\r\n\t\tGROUP BY b.claimant_cov_det_ak_id\r\n\t\tHAVING COUNT(*) > 1)\r\n\torder by a.claimant_cov_det_ak_id, a.eff_from_date desc\r\n\t--EXISTS Subquery exists to pick AK Groups that have multiple rows with a 12/31/2100 eff_to_date.\r\n\t--When this condition occurs this is an indication that we must expire one or more of these rows.\r\n\t--WHERE clause is always made up of current snapshot flag and all columns of the AK\r\n\t--GROUP BY clause is always on AK\r\n\t--HAVING clause stays the same\r\n\t\r\n\t--ORDER BY of main query orders all rows first by the AK and then by the eff_from_date in a DESC format\r\n\t--the descending order is important because this allows us to avoid another lookup and properly apply the eff_to_date by utilizing a local variable to keep track\n),\nEXP_Expire_Rows AS (\n\tSELECT\n\tclaimant_cov_det_id,\n\tclaim_party_occurrence_ak_id,\n\ts3p_object_type_code,\n\ts3p_object_seq_num,\n\ts3p_pkg_seq_num,\n\tmajor_peril_code,\n\treserve_ctgry AS pms_reserve_ctgry,\n\tcause_of_loss AS pms_loss_cause,\n\teff_from_date,\n\teff_to_date AS orig_eff_to_date,\n\tsource_sys_id,\n\t-- *INF*: DECODE (TRUE, \r\n\t-- claim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id and\r\n\t-- s3p_object_type_code=v_PREV_ROW_s3p_object_type_code and\r\n\t-- s3p_object_seq_num=v_PREV_ROW_object_seq_num and\r\n\t-- major_peril_code=v_PREV_ROW_major_peril_code and\r\n\t-- s3p_pkg_seq_num=v_PREV_ROW_s3p_pkg_seq_num and\r\n\t-- pms_loss_cause = v_PEV_ROW_pms_loss_cause and\r\n\t-- pms_reserve_ctgry = v_PREV_ROW_pms_reserve_ctgry and\r\n\t-- source_sys_id = v_PREV_ROW_source_sys_id\r\n\t-- , ADD_TO_DATE(v_PREV_ROW_eff_from_date,'SS',-1)\r\n\t-- ,orig_eff_to_date)\n\tDECODE(TRUE,\n\tclaim_party_occurrence_ak_id = v_PREV_ROW_claim_party_occurrence_ak_id AND s3p_object_type_code = v_PREV_ROW_s3p_object_type_code AND s3p_object_seq_num = v_PREV_ROW_object_seq_num AND major_peril_code = v_PREV_ROW_major_peril_code AND s3p_pkg_seq_num = v_PREV_ROW_s3p_pkg_seq_num AND pms_loss_cause = v_PEV_ROW_pms_loss_cause AND pms_reserve_ctgry = v_PREV_ROW_pms_reserve_ctgry AND source_sys_id = v_PREV_ROW_source_sys_id, ADD_TO_DATE(v_PREV_ROW_eff_from_date, 'SS', - 1),\n\torig_eff_to_date) AS v_eff_to_date,\n\tv_eff_to_date AS eff_to_date,\n\tclaim_party_occurrence_ak_id AS v_PREV_ROW_claim_party_occurrence_ak_id,\n\ts3p_object_type_code AS v_PREV_ROW_s3p_object_type_code,\n\ts3p_object_seq_num AS v_PREV_ROW_object_seq_num,\n\tmajor_peril_code AS v_PREV_ROW_major_peril_code,\n\ts3p_pkg_seq_num AS v_PREV_ROW_s3p_pkg_seq_num,\n\tsource_sys_id AS v_PREV_ROW_source_sys_id,\n\teff_from_date AS v_PREV_ROW_eff_from_date,\n\tpms_reserve_ctgry AS v_PREV_ROW_pms_reserve_ctgry,\n\tpms_loss_cause AS v_PEV_ROW_pms_loss_cause,\n\t0 AS crrnt_snapshot_flag,\n\tsysdate AS modified_date\n\tFROM SQ_claimant_coverage_detail\n),\nFIL_Claimant_Coverage_Detail AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM EXP_Expire_Rows\n\tWHERE orig_eff_to_date != eff_to_date\n),\nUPD_Update_Target AS (\n\tSELECT\n\tclaimant_cov_det_id, \n\torig_eff_to_date, \n\teff_to_date, \n\tcrrnt_snapshot_flag, \n\tmodified_date\n\tFROM FIL_Claimant_Coverage_Detail\n),\nclaimant_coverage_detail_update AS (\n\tMERGE INTO @{pipeline().parameters.TARGET_TABLE_OWNER}.claimant_coverage_detail AS T\n\tUSING UPD_Update_Target AS S\n\tON T.claimant_cov_det_id = S.claimant_cov_det_id\n\tWHEN MATCHED BY TARGET THEN\n\tUPDATE SET T.crrnt_snpsht_flag = S.crrnt_snapshot_flag, T.eff_to_date = S.eff_to_date, T.modified_date = S.modified_date\n),"
                        }
                    ]
                },
                "state": "Inactive",
                "onInactiveMarkAs": "Succeeded"
            }
        ],
        "parameters": {
            "SOURCE_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "TARGET_TABLE_OWNER": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_SYSTEM_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SOURCE_DATABASE_NAME": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "WBMI_AUDIT_CONTROL_RUN_ID": {
                "type": "string",
                "defaultValue": "Default Value"
            },
            "SELECTION_START_TS": {
                "type": "string",
                "defaultValue": "Default Value"
            }
        },
        "folder": {
            "name": "Claims DataWarehouse/"
        },
        "annotations": []
    }
}